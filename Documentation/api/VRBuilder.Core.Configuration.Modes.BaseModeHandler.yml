### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Configuration.Modes.BaseModeHandler
  commentId: T:VRBuilder.Core.Configuration.Modes.BaseModeHandler
  id: BaseModeHandler
  parent: VRBuilder.Core.Configuration.Modes
  children:
  - VRBuilder.Core.Configuration.Modes.BaseModeHandler.#ctor(System.Collections.Generic.List{VRBuilder.Core.Configuration.Modes.IMode},System.Int32)
  - VRBuilder.Core.Configuration.Modes.BaseModeHandler.AvailableModes
  - VRBuilder.Core.Configuration.Modes.BaseModeHandler.CurrentMode
  - VRBuilder.Core.Configuration.Modes.BaseModeHandler.CurrentModeIndex
  - VRBuilder.Core.Configuration.Modes.BaseModeHandler.ModeChanged
  - VRBuilder.Core.Configuration.Modes.BaseModeHandler.SetMode(System.Int32)
  - VRBuilder.Core.Configuration.Modes.BaseModeHandler.SetMode(VRBuilder.Core.Configuration.Modes.IMode)
  langs:
  - csharp
  - vb
  name: BaseModeHandler
  nameWithType: BaseModeHandler
  fullName: VRBuilder.Core.Configuration.Modes.BaseModeHandler
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/BaseModeHandler.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: BaseModeHandler
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/BaseModeHandler.cs
    startLine: 14
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: Simple ModeHandler.
  example: []
  syntax:
    content: 'public sealed class BaseModeHandler : IModeHandler'
    content.vb: Public NotInheritable Class BaseModeHandler Implements IModeHandler
  inheritance:
  - System.Object
  implements:
  - VRBuilder.Core.Configuration.Modes.IModeHandler
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: VRBuilder.Core.Configuration.Modes.BaseModeHandler.ModeChanged
  commentId: E:VRBuilder.Core.Configuration.Modes.BaseModeHandler.ModeChanged
  id: ModeChanged
  parent: VRBuilder.Core.Configuration.Modes.BaseModeHandler
  langs:
  - csharp
  - vb
  name: ModeChanged
  nameWithType: BaseModeHandler.ModeChanged
  fullName: VRBuilder.Core.Configuration.Modes.BaseModeHandler.ModeChanged
  type: Event
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/BaseModeHandler.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ModeChanged
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/BaseModeHandler.cs
    startLine: 17
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: The event that has to be invoked when the current mode changes, for example in <xref href="VRBuilder.Core.Configuration.Modes.IModeHandler.SetMode(System.Int32)" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: public event EventHandler<ModeChangedEventArgs> ModeChanged
    return:
      type: System.EventHandler{VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs}
    content.vb: Public Event ModeChanged As EventHandler(Of ModeChangedEventArgs)
  implements:
  - VRBuilder.Core.Configuration.Modes.IModeHandler.ModeChanged
- uid: VRBuilder.Core.Configuration.Modes.BaseModeHandler.CurrentModeIndex
  commentId: P:VRBuilder.Core.Configuration.Modes.BaseModeHandler.CurrentModeIndex
  id: CurrentModeIndex
  parent: VRBuilder.Core.Configuration.Modes.BaseModeHandler
  langs:
  - csharp
  - vb
  name: CurrentModeIndex
  nameWithType: BaseModeHandler.CurrentModeIndex
  fullName: VRBuilder.Core.Configuration.Modes.BaseModeHandler.CurrentModeIndex
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/BaseModeHandler.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CurrentModeIndex
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/BaseModeHandler.cs
    startLine: 20
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: The index of the current process mode.
  example: []
  syntax:
    content: public int CurrentModeIndex { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CurrentModeIndex As Integer
  overload: VRBuilder.Core.Configuration.Modes.BaseModeHandler.CurrentModeIndex*
  implements:
  - VRBuilder.Core.Configuration.Modes.IModeHandler.CurrentModeIndex
- uid: VRBuilder.Core.Configuration.Modes.BaseModeHandler.CurrentMode
  commentId: P:VRBuilder.Core.Configuration.Modes.BaseModeHandler.CurrentMode
  id: CurrentMode
  parent: VRBuilder.Core.Configuration.Modes.BaseModeHandler
  langs:
  - csharp
  - vb
  name: CurrentMode
  nameWithType: BaseModeHandler.CurrentMode
  fullName: VRBuilder.Core.Configuration.Modes.BaseModeHandler.CurrentMode
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/BaseModeHandler.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CurrentMode
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/BaseModeHandler.cs
    startLine: 23
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: The current process mode.
  example: []
  syntax:
    content: public IMode CurrentMode { get; }
    parameters: []
    return:
      type: VRBuilder.Core.Configuration.Modes.IMode
    content.vb: Public ReadOnly Property CurrentMode As IMode
  overload: VRBuilder.Core.Configuration.Modes.BaseModeHandler.CurrentMode*
  implements:
  - VRBuilder.Core.Configuration.Modes.IModeHandler.CurrentMode
- uid: VRBuilder.Core.Configuration.Modes.BaseModeHandler.AvailableModes
  commentId: P:VRBuilder.Core.Configuration.Modes.BaseModeHandler.AvailableModes
  id: AvailableModes
  parent: VRBuilder.Core.Configuration.Modes.BaseModeHandler
  langs:
  - csharp
  - vb
  name: AvailableModes
  nameWithType: BaseModeHandler.AvailableModes
  fullName: VRBuilder.Core.Configuration.Modes.BaseModeHandler.AvailableModes
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/BaseModeHandler.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AvailableModes
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/BaseModeHandler.cs
    startLine: 29
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: The ordered collection of all available process modes.
  example: []
  syntax:
    content: public ReadOnlyCollection<IMode> AvailableModes { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{VRBuilder.Core.Configuration.Modes.IMode}
    content.vb: Public ReadOnly Property AvailableModes As ReadOnlyCollection(Of IMode)
  overload: VRBuilder.Core.Configuration.Modes.BaseModeHandler.AvailableModes*
  implements:
  - VRBuilder.Core.Configuration.Modes.IModeHandler.AvailableModes
- uid: VRBuilder.Core.Configuration.Modes.BaseModeHandler.#ctor(System.Collections.Generic.List{VRBuilder.Core.Configuration.Modes.IMode},System.Int32)
  commentId: M:VRBuilder.Core.Configuration.Modes.BaseModeHandler.#ctor(System.Collections.Generic.List{VRBuilder.Core.Configuration.Modes.IMode},System.Int32)
  id: '#ctor(System.Collections.Generic.List{VRBuilder.Core.Configuration.Modes.IMode},System.Int32)'
  parent: VRBuilder.Core.Configuration.Modes.BaseModeHandler
  langs:
  - csharp
  - vb
  name: BaseModeHandler(List<IMode>, int)
  nameWithType: BaseModeHandler.BaseModeHandler(List<IMode>, int)
  fullName: VRBuilder.Core.Configuration.Modes.BaseModeHandler.BaseModeHandler(System.Collections.Generic.List<VRBuilder.Core.Configuration.Modes.IMode>, int)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/BaseModeHandler.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/BaseModeHandler.cs
    startLine: 31
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  syntax:
    content: public BaseModeHandler(List<IMode> modes, int defaultMode = 0)
    parameters:
    - id: modes
      type: System.Collections.Generic.List{VRBuilder.Core.Configuration.Modes.IMode}
    - id: defaultMode
      type: System.Int32
    content.vb: Public Sub New(modes As List(Of IMode), defaultMode As Integer = 0)
  overload: VRBuilder.Core.Configuration.Modes.BaseModeHandler.#ctor*
  nameWithType.vb: BaseModeHandler.New(List(Of IMode), Integer)
  fullName.vb: VRBuilder.Core.Configuration.Modes.BaseModeHandler.New(System.Collections.Generic.List(Of VRBuilder.Core.Configuration.Modes.IMode), Integer)
  name.vb: New(List(Of IMode), Integer)
- uid: VRBuilder.Core.Configuration.Modes.BaseModeHandler.SetMode(System.Int32)
  commentId: M:VRBuilder.Core.Configuration.Modes.BaseModeHandler.SetMode(System.Int32)
  id: SetMode(System.Int32)
  parent: VRBuilder.Core.Configuration.Modes.BaseModeHandler
  langs:
  - csharp
  - vb
  name: SetMode(int)
  nameWithType: BaseModeHandler.SetMode(int)
  fullName: VRBuilder.Core.Configuration.Modes.BaseModeHandler.SetMode(int)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/BaseModeHandler.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetMode
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/BaseModeHandler.cs
    startLine: 38
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: Set the current process mode.
  example: []
  syntax:
    content: public void SetMode(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index of the desired process mode.
    content.vb: Public Sub SetMode(index As Integer)
  overload: VRBuilder.Core.Configuration.Modes.BaseModeHandler.SetMode*
  implements:
  - VRBuilder.Core.Configuration.Modes.IModeHandler.SetMode(System.Int32)
  nameWithType.vb: BaseModeHandler.SetMode(Integer)
  fullName.vb: VRBuilder.Core.Configuration.Modes.BaseModeHandler.SetMode(Integer)
  name.vb: SetMode(Integer)
- uid: VRBuilder.Core.Configuration.Modes.BaseModeHandler.SetMode(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.Core.Configuration.Modes.BaseModeHandler.SetMode(VRBuilder.Core.Configuration.Modes.IMode)
  id: SetMode(VRBuilder.Core.Configuration.Modes.IMode)
  parent: VRBuilder.Core.Configuration.Modes.BaseModeHandler
  langs:
  - csharp
  - vb
  name: SetMode(IMode)
  nameWithType: BaseModeHandler.SetMode(IMode)
  fullName: VRBuilder.Core.Configuration.Modes.BaseModeHandler.SetMode(VRBuilder.Core.Configuration.Modes.IMode)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/BaseModeHandler.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetMode
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/BaseModeHandler.cs
    startLine: 60
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: Set the current process mode, this process mode has to be one of the available modes.
  example: []
  syntax:
    content: public void SetMode(IMode mode)
    parameters:
    - id: mode
      type: VRBuilder.Core.Configuration.Modes.IMode
      description: The desired process mode which should be set.
    content.vb: Public Sub SetMode(mode As IMode)
  overload: VRBuilder.Core.Configuration.Modes.BaseModeHandler.SetMode*
  implements:
  - VRBuilder.Core.Configuration.Modes.IModeHandler.SetMode(VRBuilder.Core.Configuration.Modes.IMode)
references:
- uid: VRBuilder.Core.Configuration.Modes
  commentId: N:VRBuilder.Core.Configuration.Modes
  href: VRBuilder.html
  name: VRBuilder.Core.Configuration.Modes
  nameWithType: VRBuilder.Core.Configuration.Modes
  fullName: VRBuilder.Core.Configuration.Modes
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Configuration
    name: Configuration
    href: VRBuilder.Core.Configuration.html
  - name: .
  - uid: VRBuilder.Core.Configuration.Modes
    name: Modes
    href: VRBuilder.Core.Configuration.Modes.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Configuration
    name: Configuration
    href: VRBuilder.Core.Configuration.html
  - name: .
  - uid: VRBuilder.Core.Configuration.Modes
    name: Modes
    href: VRBuilder.Core.Configuration.Modes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: VRBuilder.Core.Configuration.Modes.IModeHandler
  commentId: T:VRBuilder.Core.Configuration.Modes.IModeHandler
  parent: VRBuilder.Core.Configuration.Modes
  href: VRBuilder.Core.Configuration.Modes.IModeHandler.html
  name: IModeHandler
  nameWithType: IModeHandler
  fullName: VRBuilder.Core.Configuration.Modes.IModeHandler
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Configuration.Modes.IModeHandler.SetMode(System.Int32)
  commentId: M:VRBuilder.Core.Configuration.Modes.IModeHandler.SetMode(System.Int32)
  parent: VRBuilder.Core.Configuration.Modes.IModeHandler
  isExternal: true
  href: VRBuilder.Core.Configuration.Modes.IModeHandler.html#VRBuilder_Core_Configuration_Modes_IModeHandler_SetMode_System_Int32_
  name: SetMode(int)
  nameWithType: IModeHandler.SetMode(int)
  fullName: VRBuilder.Core.Configuration.Modes.IModeHandler.SetMode(int)
  nameWithType.vb: IModeHandler.SetMode(Integer)
  fullName.vb: VRBuilder.Core.Configuration.Modes.IModeHandler.SetMode(Integer)
  name.vb: SetMode(Integer)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.IModeHandler.SetMode(System.Int32)
    name: SetMode
    href: VRBuilder.Core.Configuration.Modes.IModeHandler.html#VRBuilder_Core_Configuration_Modes_IModeHandler_SetMode_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.IModeHandler.SetMode(System.Int32)
    name: SetMode
    href: VRBuilder.Core.Configuration.Modes.IModeHandler.html#VRBuilder_Core_Configuration_Modes_IModeHandler_SetMode_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.IModeHandler.ModeChanged
  commentId: E:VRBuilder.Core.Configuration.Modes.IModeHandler.ModeChanged
  parent: VRBuilder.Core.Configuration.Modes.IModeHandler
  href: VRBuilder.Core.Configuration.Modes.IModeHandler.html#VRBuilder_Core_Configuration_Modes_IModeHandler_ModeChanged
  name: ModeChanged
  nameWithType: IModeHandler.ModeChanged
  fullName: VRBuilder.Core.Configuration.Modes.IModeHandler.ModeChanged
- uid: System.EventHandler{VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs}
  commentId: T:System.EventHandler{VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<ModeChangedEventArgs>
  nameWithType: EventHandler<ModeChangedEventArgs>
  fullName: System.EventHandler<VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs>
  nameWithType.vb: EventHandler(Of ModeChangedEventArgs)
  fullName.vb: System.EventHandler(Of VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs)
  name.vb: EventHandler(Of ModeChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs
    name: ModeChangedEventArgs
    href: VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs
    name: ModeChangedEventArgs
    href: VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.BaseModeHandler.CurrentModeIndex*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.BaseModeHandler.CurrentModeIndex
  href: VRBuilder.Core.Configuration.Modes.BaseModeHandler.html#VRBuilder_Core_Configuration_Modes_BaseModeHandler_CurrentModeIndex
  name: CurrentModeIndex
  nameWithType: BaseModeHandler.CurrentModeIndex
  fullName: VRBuilder.Core.Configuration.Modes.BaseModeHandler.CurrentModeIndex
- uid: VRBuilder.Core.Configuration.Modes.IModeHandler.CurrentModeIndex
  commentId: P:VRBuilder.Core.Configuration.Modes.IModeHandler.CurrentModeIndex
  parent: VRBuilder.Core.Configuration.Modes.IModeHandler
  href: VRBuilder.Core.Configuration.Modes.IModeHandler.html#VRBuilder_Core_Configuration_Modes_IModeHandler_CurrentModeIndex
  name: CurrentModeIndex
  nameWithType: IModeHandler.CurrentModeIndex
  fullName: VRBuilder.Core.Configuration.Modes.IModeHandler.CurrentModeIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: VRBuilder.Core.Configuration.Modes.BaseModeHandler.CurrentMode*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.BaseModeHandler.CurrentMode
  href: VRBuilder.Core.Configuration.Modes.BaseModeHandler.html#VRBuilder_Core_Configuration_Modes_BaseModeHandler_CurrentMode
  name: CurrentMode
  nameWithType: BaseModeHandler.CurrentMode
  fullName: VRBuilder.Core.Configuration.Modes.BaseModeHandler.CurrentMode
- uid: VRBuilder.Core.Configuration.Modes.IModeHandler.CurrentMode
  commentId: P:VRBuilder.Core.Configuration.Modes.IModeHandler.CurrentMode
  parent: VRBuilder.Core.Configuration.Modes.IModeHandler
  href: VRBuilder.Core.Configuration.Modes.IModeHandler.html#VRBuilder_Core_Configuration_Modes_IModeHandler_CurrentMode
  name: CurrentMode
  nameWithType: IModeHandler.CurrentMode
  fullName: VRBuilder.Core.Configuration.Modes.IModeHandler.CurrentMode
- uid: VRBuilder.Core.Configuration.Modes.IMode
  commentId: T:VRBuilder.Core.Configuration.Modes.IMode
  parent: VRBuilder.Core.Configuration.Modes
  href: VRBuilder.Core.Configuration.Modes.IMode.html
  name: IMode
  nameWithType: IMode
  fullName: VRBuilder.Core.Configuration.Modes.IMode
- uid: VRBuilder.Core.Configuration.Modes.BaseModeHandler.AvailableModes*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.BaseModeHandler.AvailableModes
  href: VRBuilder.Core.Configuration.Modes.BaseModeHandler.html#VRBuilder_Core_Configuration_Modes_BaseModeHandler_AvailableModes
  name: AvailableModes
  nameWithType: BaseModeHandler.AvailableModes
  fullName: VRBuilder.Core.Configuration.Modes.BaseModeHandler.AvailableModes
- uid: VRBuilder.Core.Configuration.Modes.IModeHandler.AvailableModes
  commentId: P:VRBuilder.Core.Configuration.Modes.IModeHandler.AvailableModes
  parent: VRBuilder.Core.Configuration.Modes.IModeHandler
  href: VRBuilder.Core.Configuration.Modes.IModeHandler.html#VRBuilder_Core_Configuration_Modes_IModeHandler_AvailableModes
  name: AvailableModes
  nameWithType: IModeHandler.AvailableModes
  fullName: VRBuilder.Core.Configuration.Modes.IModeHandler.AvailableModes
- uid: System.Collections.ObjectModel.ReadOnlyCollection{VRBuilder.Core.Configuration.Modes.IMode}
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection{VRBuilder.Core.Configuration.Modes.IMode}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  name: ReadOnlyCollection<IMode>
  nameWithType: ReadOnlyCollection<IMode>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<VRBuilder.Core.Configuration.Modes.IMode>
  nameWithType.vb: ReadOnlyCollection(Of IMode)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of VRBuilder.Core.Configuration.Modes.IMode)
  name.vb: ReadOnlyCollection(Of IMode)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: <
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    href: VRBuilder.Core.Configuration.Modes.IMode.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    href: VRBuilder.Core.Configuration.Modes.IMode.html
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
- uid: VRBuilder.Core.Configuration.Modes.BaseModeHandler.#ctor*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.BaseModeHandler.#ctor
  href: VRBuilder.Core.Configuration.Modes.BaseModeHandler.html#VRBuilder_Core_Configuration_Modes_BaseModeHandler__ctor_System_Collections_Generic_List_VRBuilder_Core_Configuration_Modes_IMode__System_Int32_
  name: BaseModeHandler
  nameWithType: BaseModeHandler.BaseModeHandler
  fullName: VRBuilder.Core.Configuration.Modes.BaseModeHandler.BaseModeHandler
  nameWithType.vb: BaseModeHandler.New
  fullName.vb: VRBuilder.Core.Configuration.Modes.BaseModeHandler.New
  name.vb: New
- uid: System.Collections.Generic.List{VRBuilder.Core.Configuration.Modes.IMode}
  commentId: T:System.Collections.Generic.List{VRBuilder.Core.Configuration.Modes.IMode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<IMode>
  nameWithType: List<IMode>
  fullName: System.Collections.Generic.List<VRBuilder.Core.Configuration.Modes.IMode>
  nameWithType.vb: List(Of IMode)
  fullName.vb: System.Collections.Generic.List(Of VRBuilder.Core.Configuration.Modes.IMode)
  name.vb: List(Of IMode)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    href: VRBuilder.Core.Configuration.Modes.IMode.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    href: VRBuilder.Core.Configuration.Modes.IMode.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: VRBuilder.Core.Configuration.Modes.BaseModeHandler.SetMode*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.BaseModeHandler.SetMode
  href: VRBuilder.Core.Configuration.Modes.BaseModeHandler.html#VRBuilder_Core_Configuration_Modes_BaseModeHandler_SetMode_System_Int32_
  name: SetMode
  nameWithType: BaseModeHandler.SetMode
  fullName: VRBuilder.Core.Configuration.Modes.BaseModeHandler.SetMode
- uid: VRBuilder.Core.Configuration.Modes.IModeHandler.SetMode(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.Core.Configuration.Modes.IModeHandler.SetMode(VRBuilder.Core.Configuration.Modes.IMode)
  parent: VRBuilder.Core.Configuration.Modes.IModeHandler
  href: VRBuilder.Core.Configuration.Modes.IModeHandler.html#VRBuilder_Core_Configuration_Modes_IModeHandler_SetMode_VRBuilder_Core_Configuration_Modes_IMode_
  name: SetMode(IMode)
  nameWithType: IModeHandler.SetMode(IMode)
  fullName: VRBuilder.Core.Configuration.Modes.IModeHandler.SetMode(VRBuilder.Core.Configuration.Modes.IMode)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.IModeHandler.SetMode(VRBuilder.Core.Configuration.Modes.IMode)
    name: SetMode
    href: VRBuilder.Core.Configuration.Modes.IModeHandler.html#VRBuilder_Core_Configuration_Modes_IModeHandler_SetMode_VRBuilder_Core_Configuration_Modes_IMode_
  - name: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    href: VRBuilder.Core.Configuration.Modes.IMode.html
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.IModeHandler.SetMode(VRBuilder.Core.Configuration.Modes.IMode)
    name: SetMode
    href: VRBuilder.Core.Configuration.Modes.IModeHandler.html#VRBuilder_Core_Configuration_Modes_IModeHandler_SetMode_VRBuilder_Core_Configuration_Modes_IMode_
  - name: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    href: VRBuilder.Core.Configuration.Modes.IMode.html
  - name: )
