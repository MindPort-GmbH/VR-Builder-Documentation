### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1
  commentId: T:VRBuilder.Core.SceneObjects.ObjectReference`1
  id: ObjectReference`1
  parent: VRBuilder.Core.SceneObjects
  children:
  - VRBuilder.Core.SceneObjects.ObjectReference`1.#ctor
  - VRBuilder.Core.SceneObjects.ObjectReference`1.#ctor(System.String)
  - VRBuilder.Core.SceneObjects.ObjectReference`1.DetermineValue(`0)
  - VRBuilder.Core.SceneObjects.ObjectReference`1.IsEmpty
  - VRBuilder.Core.SceneObjects.ObjectReference`1.UniqueName
  - VRBuilder.Core.SceneObjects.ObjectReference`1.Value
  - VRBuilder.Core.SceneObjects.ObjectReference`1.op_Implicit(VRBuilder.Core.SceneObjects.ObjectReference{`0})~`0
  langs:
  - csharp
  - vb
  name: ObjectReference<T>
  nameWithType: ObjectReference<T>
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ObjectReference.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ObjectReference
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ObjectReference.cs
    startLine: 14
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: Base class for references to process objects and their properties.
  example: []
  syntax:
    content: >-
      [DataContract(IsReference = true)]

      [Obsolete("Use ProcessSceneReferenceBase and derived classes to store references to objects in the scene.")]

      public abstract class ObjectReference<T> : UniqueNameReference, ICanBeEmpty where T : class
    typeParameters:
    - id: T
    content.vb: >-
      <DataContract(IsReference:=True)>

      <Obsolete("Use ProcessSceneReferenceBase and derived classes to store references to objects in the scene.")>

      Public MustInherit Class ObjectReference(Of T As Class) Inherits UniqueNameReference Implements ICanBeEmpty
  inheritance:
  - System.Object
  - VRBuilder.Core.SceneObjects.UniqueNameReference
  derivedClasses:
  - VRBuilder.Core.SceneObjects.SceneObjectReference
  - VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  implements:
  - VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ProcessSceneReferenceBase and derived classes to store references to objects in the scene.
  nameWithType.vb: ObjectReference(Of T)
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T)
  name.vb: ObjectReference(Of T)
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.UniqueName
  commentId: P:VRBuilder.Core.SceneObjects.ObjectReference`1.UniqueName
  id: UniqueName
  parent: VRBuilder.Core.SceneObjects.ObjectReference`1
  langs:
  - csharp
  - vb
  name: UniqueName
  nameWithType: ObjectReference<T>.UniqueName
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.UniqueName
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ObjectReference.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: UniqueName
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ObjectReference.cs
    startLine: 18
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: Serializable unique name of referenced object.
  example: []
  syntax:
    content: public override string UniqueName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides Property UniqueName As String
  overridden: VRBuilder.Core.SceneObjects.UniqueNameReference.UniqueName
  overload: VRBuilder.Core.SceneObjects.ObjectReference`1.UniqueName*
  nameWithType.vb: ObjectReference(Of T).UniqueName
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).UniqueName
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.Value
  commentId: P:VRBuilder.Core.SceneObjects.ObjectReference`1.Value
  id: Value
  parent: VRBuilder.Core.SceneObjects.ObjectReference`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ObjectReference<T>.Value
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.Value
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ObjectReference.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Value
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ObjectReference.cs
    startLine: 37
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public T Value { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property Value As T
  overload: VRBuilder.Core.SceneObjects.ObjectReference`1.Value*
  nameWithType.vb: ObjectReference(Of T).Value
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).Value
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.op_Implicit(VRBuilder.Core.SceneObjects.ObjectReference{`0})~`0
  commentId: M:VRBuilder.Core.SceneObjects.ObjectReference`1.op_Implicit(VRBuilder.Core.SceneObjects.ObjectReference{`0})~`0
  id: op_Implicit(VRBuilder.Core.SceneObjects.ObjectReference{`0})~`0
  parent: VRBuilder.Core.SceneObjects.ObjectReference`1
  langs:
  - csharp
  - vb
  name: implicit operator T(ObjectReference<T>)
  nameWithType: ObjectReference<T>.implicit operator T(ObjectReference<T>)
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.implicit operator T(VRBuilder.Core.SceneObjects.ObjectReference<T>)
  type: Operator
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ObjectReference.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: op_Implicit
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ObjectReference.cs
    startLine: 51
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public static implicit operator T(ObjectReference<T> reference)
    parameters:
    - id: reference
      type: VRBuilder.Core.SceneObjects.ObjectReference`1
    return:
      type: '{T}'
    content.vb: Public Shared Widening Operator CType(reference As ObjectReference(Of T)) As T
  overload: VRBuilder.Core.SceneObjects.ObjectReference`1.op_Implicit*
  nameWithType.vb: ObjectReference(Of T).CType(ObjectReference(Of T))
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).CType(VRBuilder.Core.SceneObjects.ObjectReference(Of T))
  name.vb: CType(ObjectReference(Of T))
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.#ctor
  commentId: M:VRBuilder.Core.SceneObjects.ObjectReference`1.#ctor
  id: '#ctor'
  parent: VRBuilder.Core.SceneObjects.ObjectReference`1
  langs:
  - csharp
  - vb
  name: ObjectReference()
  nameWithType: ObjectReference<T>.ObjectReference()
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.ObjectReference()
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ObjectReference.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ObjectReference.cs
    startLine: 56
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: protected ObjectReference()
    content.vb: Protected Sub New()
  overload: VRBuilder.Core.SceneObjects.ObjectReference`1.#ctor*
  nameWithType.vb: ObjectReference(Of T).New()
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).New()
  name.vb: New()
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.#ctor(System.String)
  commentId: M:VRBuilder.Core.SceneObjects.ObjectReference`1.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: VRBuilder.Core.SceneObjects.ObjectReference`1
  langs:
  - csharp
  - vb
  name: ObjectReference(string)
  nameWithType: ObjectReference<T>.ObjectReference(string)
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.ObjectReference(string)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ObjectReference.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ObjectReference.cs
    startLine: 60
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: protected ObjectReference(string uniqueName)
    parameters:
    - id: uniqueName
      type: System.String
    content.vb: Protected Sub New(uniqueName As String)
  overload: VRBuilder.Core.SceneObjects.ObjectReference`1.#ctor*
  nameWithType.vb: ObjectReference(Of T).New(String)
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).New(String)
  name.vb: New(String)
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.DetermineValue(`0)
  commentId: M:VRBuilder.Core.SceneObjects.ObjectReference`1.DetermineValue(`0)
  id: DetermineValue(`0)
  parent: VRBuilder.Core.SceneObjects.ObjectReference`1
  langs:
  - csharp
  - vb
  name: DetermineValue(T)
  nameWithType: ObjectReference<T>.DetermineValue(T)
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.DetermineValue(T)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ObjectReference.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DetermineValue
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ObjectReference.cs
    startLine: 64
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: protected abstract T DetermineValue(T cachedValue)
    parameters:
    - id: cachedValue
      type: '{T}'
    return:
      type: '{T}'
    content.vb: Protected MustOverride Function DetermineValue(cachedValue As T) As T
  overload: VRBuilder.Core.SceneObjects.ObjectReference`1.DetermineValue*
  nameWithType.vb: ObjectReference(Of T).DetermineValue(T)
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).DetermineValue(T)
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.IsEmpty
  commentId: M:VRBuilder.Core.SceneObjects.ObjectReference`1.IsEmpty
  id: IsEmpty
  parent: VRBuilder.Core.SceneObjects.ObjectReference`1
  langs:
  - csharp
  - vb
  name: IsEmpty()
  nameWithType: ObjectReference<T>.IsEmpty()
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.IsEmpty()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ObjectReference.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsEmpty
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ObjectReference.cs
    startLine: 67
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: Returns true when this object is not properly filled.
  example: []
  syntax:
    content: public bool IsEmpty()
    return:
      type: System.Boolean
    content.vb: Public Function IsEmpty() As Boolean
  overload: VRBuilder.Core.SceneObjects.ObjectReference`1.IsEmpty*
  implements:
  - VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
  nameWithType.vb: ObjectReference(Of T).IsEmpty()
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).IsEmpty()
references:
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  href: VRBuilder.html
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.SceneObjects
    name: SceneObjects
    href: VRBuilder.Core.SceneObjects.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.SceneObjects
    name: SceneObjects
    href: VRBuilder.Core.SceneObjects.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: VRBuilder.Core.SceneObjects.UniqueNameReference
  commentId: T:VRBuilder.Core.SceneObjects.UniqueNameReference
  parent: VRBuilder.Core.SceneObjects
  href: VRBuilder.Core.SceneObjects.UniqueNameReference.html
  name: UniqueNameReference
  nameWithType: UniqueNameReference
  fullName: VRBuilder.Core.SceneObjects.UniqueNameReference
- uid: VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  commentId: T:VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  parent: VRBuilder.Core.Runtime.Properties
  href: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.html
  name: ICanBeEmpty
  nameWithType: ICanBeEmpty
  fullName: VRBuilder.Core.Runtime.Properties.ICanBeEmpty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Runtime.Properties
  commentId: N:VRBuilder.Core.Runtime.Properties
  href: VRBuilder.html
  name: VRBuilder.Core.Runtime.Properties
  nameWithType: VRBuilder.Core.Runtime.Properties
  fullName: VRBuilder.Core.Runtime.Properties
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Runtime
    name: Runtime
    href: VRBuilder.Core.Runtime.html
  - name: .
  - uid: VRBuilder.Core.Runtime.Properties
    name: Properties
    href: VRBuilder.Core.Runtime.Properties.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Runtime
    name: Runtime
    href: VRBuilder.Core.Runtime.html
  - name: .
  - uid: VRBuilder.Core.Runtime.Properties
    name: Properties
    href: VRBuilder.Core.Runtime.Properties.html
- uid: VRBuilder.Core.SceneObjects.UniqueNameReference.UniqueName
  commentId: P:VRBuilder.Core.SceneObjects.UniqueNameReference.UniqueName
  parent: VRBuilder.Core.SceneObjects.UniqueNameReference
  href: VRBuilder.Core.SceneObjects.UniqueNameReference.html#VRBuilder_Core_SceneObjects_UniqueNameReference_UniqueName
  name: UniqueName
  nameWithType: UniqueNameReference.UniqueName
  fullName: VRBuilder.Core.SceneObjects.UniqueNameReference.UniqueName
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.UniqueName*
  commentId: Overload:VRBuilder.Core.SceneObjects.ObjectReference`1.UniqueName
  href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1_UniqueName
  name: UniqueName
  nameWithType: ObjectReference<T>.UniqueName
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.UniqueName
  nameWithType.vb: ObjectReference(Of T).UniqueName
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).UniqueName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.Value*
  commentId: Overload:VRBuilder.Core.SceneObjects.ObjectReference`1.Value
  href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1_Value
  name: Value
  nameWithType: ObjectReference<T>.Value
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.Value
  nameWithType.vb: ObjectReference(Of T).Value
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).Value
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.op_Implicit*
  commentId: Overload:VRBuilder.Core.SceneObjects.ObjectReference`1.op_Implicit
  name: implicit operator
  nameWithType: ObjectReference<T>.implicit operator
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.implicit operator
  nameWithType.vb: ObjectReference(Of T).CType
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1
  commentId: T:VRBuilder.Core.SceneObjects.ObjectReference`1
  parent: VRBuilder.Core.SceneObjects
  href: VRBuilder.Core.SceneObjects.ObjectReference-1.html
  name: ObjectReference<T>
  nameWithType: ObjectReference<T>
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>
  nameWithType.vb: ObjectReference(Of T)
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T)
  name.vb: ObjectReference(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1
    name: ObjectReference
    href: VRBuilder.Core.SceneObjects.ObjectReference-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1
    name: ObjectReference
    href: VRBuilder.Core.SceneObjects.ObjectReference-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.#ctor*
  commentId: Overload:VRBuilder.Core.SceneObjects.ObjectReference`1.#ctor
  href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1__ctor
  name: ObjectReference
  nameWithType: ObjectReference<T>.ObjectReference
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.ObjectReference
  nameWithType.vb: ObjectReference(Of T).New
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).New
  name.vb: New
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.DetermineValue*
  commentId: Overload:VRBuilder.Core.SceneObjects.ObjectReference`1.DetermineValue
  href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1_DetermineValue__0_
  name: DetermineValue
  nameWithType: ObjectReference<T>.DetermineValue
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.DetermineValue
  nameWithType.vb: ObjectReference(Of T).DetermineValue
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).DetermineValue
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.IsEmpty*
  commentId: Overload:VRBuilder.Core.SceneObjects.ObjectReference`1.IsEmpty
  href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1_IsEmpty
  name: IsEmpty
  nameWithType: ObjectReference<T>.IsEmpty
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.IsEmpty
  nameWithType.vb: ObjectReference(Of T).IsEmpty
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).IsEmpty
- uid: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
  commentId: M:VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
  parent: VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  href: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.html#VRBuilder_Core_Runtime_Properties_ICanBeEmpty_IsEmpty
  name: IsEmpty()
  nameWithType: ICanBeEmpty.IsEmpty()
  fullName: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty()
  spec.csharp:
  - uid: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
    name: IsEmpty
    href: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.html#VRBuilder_Core_Runtime_Properties_ICanBeEmpty_IsEmpty
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
    name: IsEmpty
    href: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.html#VRBuilder_Core_Runtime_Properties_ICanBeEmpty_IsEmpty
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
