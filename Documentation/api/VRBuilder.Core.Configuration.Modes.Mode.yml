### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Configuration.Modes.Mode
  commentId: T:VRBuilder.Core.Configuration.Modes.Mode
  id: Mode
  parent: VRBuilder.Core.Configuration.Modes
  children:
  - VRBuilder.Core.Configuration.Modes.Mode.#ctor(System.String,VRBuilder.Core.Configuration.Modes.TypeRule{VRBuilder.Core.Configuration.Modes.IOptional},System.Collections.Generic.Dictionary{System.String,System.Object})
  - VRBuilder.Core.Configuration.Modes.Mode.CheckIfSkipped(System.Type)
  - VRBuilder.Core.Configuration.Modes.Mode.CheckIfSkipped``1
  - VRBuilder.Core.Configuration.Modes.Mode.ContainsParameter``1(System.String)
  - VRBuilder.Core.Configuration.Modes.Mode.GetParameter``1(System.String)
  - VRBuilder.Core.Configuration.Modes.Mode.Name
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: Mode
  fullName: VRBuilder.Core.Configuration.Modes.Mode
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/Mode.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Mode
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/Mode.cs
    startLine: 14
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: >-
    A process mode that is defined by its name, IConfigurables activation policy and a collection of parameters.

    Immutable.
  example: []
  syntax:
    content: 'public sealed class Mode : IMode'
    content.vb: Public NotInheritable Class Mode Implements IMode
  inheritance:
  - System.Object
  implements:
  - VRBuilder.Core.Configuration.Modes.IMode
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: VRBuilder.Core.Configuration.Modes.Mode.Name
  commentId: P:VRBuilder.Core.Configuration.Modes.Mode.Name
  id: Name
  parent: VRBuilder.Core.Configuration.Modes.Mode
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Mode.Name
  fullName: VRBuilder.Core.Configuration.Modes.Mode.Name
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/Mode.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Name
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/Mode.cs
    startLine: 17
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: The name of this process mode.
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: VRBuilder.Core.Configuration.Modes.Mode.Name*
  implements:
  - VRBuilder.Core.Configuration.Modes.IMode.Name
- uid: VRBuilder.Core.Configuration.Modes.Mode.#ctor(System.String,VRBuilder.Core.Configuration.Modes.TypeRule{VRBuilder.Core.Configuration.Modes.IOptional},System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:VRBuilder.Core.Configuration.Modes.Mode.#ctor(System.String,VRBuilder.Core.Configuration.Modes.TypeRule{VRBuilder.Core.Configuration.Modes.IOptional},System.Collections.Generic.Dictionary{System.String,System.Object})
  id: '#ctor(System.String,VRBuilder.Core.Configuration.Modes.TypeRule{VRBuilder.Core.Configuration.Modes.IOptional},System.Collections.Generic.Dictionary{System.String,System.Object})'
  parent: VRBuilder.Core.Configuration.Modes.Mode
  langs:
  - csharp
  - vb
  name: Mode(string, TypeRule<IOptional>, Dictionary<string, object>)
  nameWithType: Mode.Mode(string, TypeRule<IOptional>, Dictionary<string, object>)
  fullName: VRBuilder.Core.Configuration.Modes.Mode.Mode(string, VRBuilder.Core.Configuration.Modes.TypeRule<VRBuilder.Core.Configuration.Modes.IOptional>, System.Collections.Generic.Dictionary<string, object>)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/Mode.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/Mode.cs
    startLine: 29
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  example: []
  syntax:
    content: public Mode(string name, TypeRule<IOptional> entitiesToSkip, Dictionary<string, object> parameters = null)
    parameters:
    - id: name
      type: System.String
      description: Name of the process mode.
    - id: entitiesToSkip
      type: VRBuilder.Core.Configuration.Modes.TypeRule{VRBuilder.Core.Configuration.Modes.IOptional}
      description: A type rule which determines if an <xref href="VRBuilder.Core.Configuration.Modes.IOptional" data-throw-if-not-resolved="false"></xref> has to be skipped, depending on its type.
    - id: parameters
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: A string-to-object dictionary of process mode parameters.
    content.vb: Public Sub New(name As String, entitiesToSkip As TypeRule(Of IOptional), parameters As Dictionary(Of String, Object) = Nothing)
  overload: VRBuilder.Core.Configuration.Modes.Mode.#ctor*
  nameWithType.vb: Mode.New(String, TypeRule(Of IOptional), Dictionary(Of String, Object))
  fullName.vb: VRBuilder.Core.Configuration.Modes.Mode.New(String, VRBuilder.Core.Configuration.Modes.TypeRule(Of VRBuilder.Core.Configuration.Modes.IOptional), System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: New(String, TypeRule(Of IOptional), Dictionary(Of String, Object))
- uid: VRBuilder.Core.Configuration.Modes.Mode.CheckIfSkipped``1
  commentId: M:VRBuilder.Core.Configuration.Modes.Mode.CheckIfSkipped``1
  id: CheckIfSkipped``1
  parent: VRBuilder.Core.Configuration.Modes.Mode
  langs:
  - csharp
  - vb
  name: CheckIfSkipped<TSkippable>()
  nameWithType: Mode.CheckIfSkipped<TSkippable>()
  fullName: VRBuilder.Core.Configuration.Modes.Mode.CheckIfSkipped<TSkippable>()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/Mode.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CheckIfSkipped
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/Mode.cs
    startLine: 42
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: Returns whether the given <xref href="VRBuilder.Core.Configuration.Modes.IOptional" data-throw-if-not-resolved="false"></xref> type should be skipped in this process mode.
  example: []
  syntax:
    content: 'public bool CheckIfSkipped<TSkippable>() where TSkippable : IOptional'
    typeParameters:
    - id: TSkippable
    return:
      type: System.Boolean
    content.vb: Public Function CheckIfSkipped(Of TSkippable As IOptional)() As Boolean
  overload: VRBuilder.Core.Configuration.Modes.Mode.CheckIfSkipped*
  implements:
  - VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped``1
  nameWithType.vb: Mode.CheckIfSkipped(Of TSkippable)()
  fullName.vb: VRBuilder.Core.Configuration.Modes.Mode.CheckIfSkipped(Of TSkippable)()
  name.vb: CheckIfSkipped(Of TSkippable)()
- uid: VRBuilder.Core.Configuration.Modes.Mode.CheckIfSkipped(System.Type)
  commentId: M:VRBuilder.Core.Configuration.Modes.Mode.CheckIfSkipped(System.Type)
  id: CheckIfSkipped(System.Type)
  parent: VRBuilder.Core.Configuration.Modes.Mode
  langs:
  - csharp
  - vb
  name: CheckIfSkipped(Type)
  nameWithType: Mode.CheckIfSkipped(Type)
  fullName: VRBuilder.Core.Configuration.Modes.Mode.CheckIfSkipped(System.Type)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/Mode.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CheckIfSkipped
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/Mode.cs
    startLine: 48
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: Returns whether the given type should be skipped in this process mode.
  example: []
  syntax:
    content: public bool CheckIfSkipped(Type type)
    parameters:
    - id: type
      type: System.Type
      description: The type to check.
    return:
      type: System.Boolean
    content.vb: Public Function CheckIfSkipped(type As Type) As Boolean
  overload: VRBuilder.Core.Configuration.Modes.Mode.CheckIfSkipped*
  implements:
  - VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped(System.Type)
- uid: VRBuilder.Core.Configuration.Modes.Mode.GetParameter``1(System.String)
  commentId: M:VRBuilder.Core.Configuration.Modes.Mode.GetParameter``1(System.String)
  id: GetParameter``1(System.String)
  parent: VRBuilder.Core.Configuration.Modes.Mode
  langs:
  - csharp
  - vb
  name: GetParameter<TValue>(string)
  nameWithType: Mode.GetParameter<TValue>(string)
  fullName: VRBuilder.Core.Configuration.Modes.Mode.GetParameter<TValue>(string)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/Mode.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetParameter
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/Mode.cs
    startLine: 54
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: Provides a specific parameter for this mode.
  example: []
  syntax:
    content: public TValue GetParameter<TValue>(string key)
    parameters:
    - id: key
      type: System.String
      description: Name of the parameter.
    typeParameters:
    - id: TValue
    return:
      type: '{TValue}'
      description: The value for the given key
    content.vb: Public Function GetParameter(Of TValue)(key As String) As TValue
  overload: VRBuilder.Core.Configuration.Modes.Mode.GetParameter*
  implements:
  - VRBuilder.Core.Configuration.Modes.IMode.GetParameter``1(System.String)
  nameWithType.vb: Mode.GetParameter(Of TValue)(String)
  fullName.vb: VRBuilder.Core.Configuration.Modes.Mode.GetParameter(Of TValue)(String)
  name.vb: GetParameter(Of TValue)(String)
- uid: VRBuilder.Core.Configuration.Modes.Mode.ContainsParameter``1(System.String)
  commentId: M:VRBuilder.Core.Configuration.Modes.Mode.ContainsParameter``1(System.String)
  id: ContainsParameter``1(System.String)
  parent: VRBuilder.Core.Configuration.Modes.Mode
  langs:
  - csharp
  - vb
  name: ContainsParameter<TValue>(string)
  nameWithType: Mode.ContainsParameter<TValue>(string)
  fullName: VRBuilder.Core.Configuration.Modes.Mode.ContainsParameter<TValue>(string)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/Mode.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ContainsParameter
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/Mode.cs
    startLine: 60
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: Checks if given key exists.
  example: []
  syntax:
    content: public bool ContainsParameter<TValue>(string key)
    parameters:
    - id: key
      type: System.String
      description: Name of the key
    typeParameters:
    - id: TValue
    return:
      type: System.Boolean
    content.vb: Public Function ContainsParameter(Of TValue)(key As String) As Boolean
  overload: VRBuilder.Core.Configuration.Modes.Mode.ContainsParameter*
  implements:
  - VRBuilder.Core.Configuration.Modes.IMode.ContainsParameter``1(System.String)
  nameWithType.vb: Mode.ContainsParameter(Of TValue)(String)
  fullName.vb: VRBuilder.Core.Configuration.Modes.Mode.ContainsParameter(Of TValue)(String)
  name.vb: ContainsParameter(Of TValue)(String)
references:
- uid: VRBuilder.Core.Configuration.Modes
  commentId: N:VRBuilder.Core.Configuration.Modes
  href: VRBuilder.html
  name: VRBuilder.Core.Configuration.Modes
  nameWithType: VRBuilder.Core.Configuration.Modes
  fullName: VRBuilder.Core.Configuration.Modes
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Configuration
    name: Configuration
    href: VRBuilder.Core.Configuration.html
  - name: .
  - uid: VRBuilder.Core.Configuration.Modes
    name: Modes
    href: VRBuilder.Core.Configuration.Modes.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Configuration
    name: Configuration
    href: VRBuilder.Core.Configuration.html
  - name: .
  - uid: VRBuilder.Core.Configuration.Modes
    name: Modes
    href: VRBuilder.Core.Configuration.Modes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: VRBuilder.Core.Configuration.Modes.IMode
  commentId: T:VRBuilder.Core.Configuration.Modes.IMode
  parent: VRBuilder.Core.Configuration.Modes
  href: VRBuilder.Core.Configuration.Modes.IMode.html
  name: IMode
  nameWithType: IMode
  fullName: VRBuilder.Core.Configuration.Modes.IMode
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Configuration.Modes.Mode.Name*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.Mode.Name
  href: VRBuilder.Core.Configuration.Modes.Mode.html#VRBuilder_Core_Configuration_Modes_Mode_Name
  name: Name
  nameWithType: Mode.Name
  fullName: VRBuilder.Core.Configuration.Modes.Mode.Name
- uid: VRBuilder.Core.Configuration.Modes.IMode.Name
  commentId: P:VRBuilder.Core.Configuration.Modes.IMode.Name
  parent: VRBuilder.Core.Configuration.Modes.IMode
  href: VRBuilder.Core.Configuration.Modes.IMode.html#VRBuilder_Core_Configuration_Modes_IMode_Name
  name: Name
  nameWithType: IMode.Name
  fullName: VRBuilder.Core.Configuration.Modes.IMode.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: VRBuilder.Core.Configuration.Modes.IOptional
  commentId: T:VRBuilder.Core.Configuration.Modes.IOptional
  parent: VRBuilder.Core.Configuration.Modes
  href: VRBuilder.Core.Configuration.Modes.IOptional.html
  name: IOptional
  nameWithType: IOptional
  fullName: VRBuilder.Core.Configuration.Modes.IOptional
- uid: VRBuilder.Core.Configuration.Modes.Mode.#ctor*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.Mode.#ctor
  href: VRBuilder.Core.Configuration.Modes.Mode.html#VRBuilder_Core_Configuration_Modes_Mode__ctor_System_String_VRBuilder_Core_Configuration_Modes_TypeRule_VRBuilder_Core_Configuration_Modes_IOptional__System_Collections_Generic_Dictionary_System_String_System_Object__
  name: Mode
  nameWithType: Mode.Mode
  fullName: VRBuilder.Core.Configuration.Modes.Mode.Mode
  nameWithType.vb: Mode.New
  fullName.vb: VRBuilder.Core.Configuration.Modes.Mode.New
  name.vb: New
- uid: VRBuilder.Core.Configuration.Modes.TypeRule{VRBuilder.Core.Configuration.Modes.IOptional}
  commentId: T:VRBuilder.Core.Configuration.Modes.TypeRule{VRBuilder.Core.Configuration.Modes.IOptional}
  parent: VRBuilder.Core.Configuration.Modes
  definition: VRBuilder.Core.Configuration.Modes.TypeRule`1
  href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html
  name: TypeRule<IOptional>
  nameWithType: TypeRule<IOptional>
  fullName: VRBuilder.Core.Configuration.Modes.TypeRule<VRBuilder.Core.Configuration.Modes.IOptional>
  nameWithType.vb: TypeRule(Of IOptional)
  fullName.vb: VRBuilder.Core.Configuration.Modes.TypeRule(Of VRBuilder.Core.Configuration.Modes.IOptional)
  name.vb: TypeRule(Of IOptional)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1
    name: TypeRule
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html
  - name: <
  - uid: VRBuilder.Core.Configuration.Modes.IOptional
    name: IOptional
    href: VRBuilder.Core.Configuration.Modes.IOptional.html
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1
    name: TypeRule
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: VRBuilder.Core.Configuration.Modes.IOptional
    name: IOptional
    href: VRBuilder.Core.Configuration.Modes.IOptional.html
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, object>
  nameWithType: Dictionary<string, object>
  fullName: System.Collections.Generic.Dictionary<string, object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.TypeRule`1
  commentId: T:VRBuilder.Core.Configuration.Modes.TypeRule`1
  href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html
  name: TypeRule<TValueBase>
  nameWithType: TypeRule<TValueBase>
  fullName: VRBuilder.Core.Configuration.Modes.TypeRule<TValueBase>
  nameWithType.vb: TypeRule(Of TValueBase)
  fullName.vb: VRBuilder.Core.Configuration.Modes.TypeRule(Of TValueBase)
  name.vb: TypeRule(Of TValueBase)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1
    name: TypeRule
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html
  - name: <
  - name: TValueBase
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1
    name: TypeRule
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TValueBase
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: VRBuilder.Core.Configuration.Modes.Mode.CheckIfSkipped*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.Mode.CheckIfSkipped
  href: VRBuilder.Core.Configuration.Modes.Mode.html#VRBuilder_Core_Configuration_Modes_Mode_CheckIfSkipped__1
  name: CheckIfSkipped
  nameWithType: Mode.CheckIfSkipped
  fullName: VRBuilder.Core.Configuration.Modes.Mode.CheckIfSkipped
- uid: VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped``1
  commentId: M:VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped``1
  parent: VRBuilder.Core.Configuration.Modes.IMode
  href: VRBuilder.Core.Configuration.Modes.IMode.html#VRBuilder_Core_Configuration_Modes_IMode_CheckIfSkipped__1
  name: CheckIfSkipped<TSkippable>()
  nameWithType: IMode.CheckIfSkipped<TSkippable>()
  fullName: VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped<TSkippable>()
  nameWithType.vb: IMode.CheckIfSkipped(Of TSkippable)()
  fullName.vb: VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped(Of TSkippable)()
  name.vb: CheckIfSkipped(Of TSkippable)()
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped``1
    name: CheckIfSkipped
    href: VRBuilder.Core.Configuration.Modes.IMode.html#VRBuilder_Core_Configuration_Modes_IMode_CheckIfSkipped__1
  - name: <
  - name: TSkippable
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped``1
    name: CheckIfSkipped
    href: VRBuilder.Core.Configuration.Modes.IMode.html#VRBuilder_Core_Configuration_Modes_IMode_CheckIfSkipped__1
  - name: (
  - name: Of
  - name: " "
  - name: TSkippable
  - name: )
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped(System.Type)
  commentId: M:VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped(System.Type)
  parent: VRBuilder.Core.Configuration.Modes.IMode
  isExternal: true
  href: VRBuilder.Core.Configuration.Modes.IMode.html#VRBuilder_Core_Configuration_Modes_IMode_CheckIfSkipped_System_Type_
  name: CheckIfSkipped(Type)
  nameWithType: IMode.CheckIfSkipped(Type)
  fullName: VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped(System.Type)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped(System.Type)
    name: CheckIfSkipped
    href: VRBuilder.Core.Configuration.Modes.IMode.html#VRBuilder_Core_Configuration_Modes_IMode_CheckIfSkipped_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped(System.Type)
    name: CheckIfSkipped
    href: VRBuilder.Core.Configuration.Modes.IMode.html#VRBuilder_Core_Configuration_Modes_IMode_CheckIfSkipped_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: VRBuilder.Core.Configuration.Modes.Mode.GetParameter*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.Mode.GetParameter
  href: VRBuilder.Core.Configuration.Modes.Mode.html#VRBuilder_Core_Configuration_Modes_Mode_GetParameter__1_System_String_
  name: GetParameter
  nameWithType: Mode.GetParameter
  fullName: VRBuilder.Core.Configuration.Modes.Mode.GetParameter
- uid: VRBuilder.Core.Configuration.Modes.IMode.GetParameter``1(System.String)
  commentId: M:VRBuilder.Core.Configuration.Modes.IMode.GetParameter``1(System.String)
  parent: VRBuilder.Core.Configuration.Modes.IMode
  isExternal: true
  href: VRBuilder.Core.Configuration.Modes.IMode.html#VRBuilder_Core_Configuration_Modes_IMode_GetParameter__1_System_String_
  name: GetParameter<TValue>(string)
  nameWithType: IMode.GetParameter<TValue>(string)
  fullName: VRBuilder.Core.Configuration.Modes.IMode.GetParameter<TValue>(string)
  nameWithType.vb: IMode.GetParameter(Of TValue)(String)
  fullName.vb: VRBuilder.Core.Configuration.Modes.IMode.GetParameter(Of TValue)(String)
  name.vb: GetParameter(Of TValue)(String)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.IMode.GetParameter``1(System.String)
    name: GetParameter
    href: VRBuilder.Core.Configuration.Modes.IMode.html#VRBuilder_Core_Configuration_Modes_IMode_GetParameter__1_System_String_
  - name: <
  - name: TValue
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.IMode.GetParameter``1(System.String)
    name: GetParameter
    href: VRBuilder.Core.Configuration.Modes.IMode.html#VRBuilder_Core_Configuration_Modes_IMode_GetParameter__1_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TValue
  commentId: '!:TValue'
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: VRBuilder.Core.Configuration.Modes.Mode.ContainsParameter*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.Mode.ContainsParameter
  href: VRBuilder.Core.Configuration.Modes.Mode.html#VRBuilder_Core_Configuration_Modes_Mode_ContainsParameter__1_System_String_
  name: ContainsParameter
  nameWithType: Mode.ContainsParameter
  fullName: VRBuilder.Core.Configuration.Modes.Mode.ContainsParameter
- uid: VRBuilder.Core.Configuration.Modes.IMode.ContainsParameter``1(System.String)
  commentId: M:VRBuilder.Core.Configuration.Modes.IMode.ContainsParameter``1(System.String)
  parent: VRBuilder.Core.Configuration.Modes.IMode
  isExternal: true
  href: VRBuilder.Core.Configuration.Modes.IMode.html#VRBuilder_Core_Configuration_Modes_IMode_ContainsParameter__1_System_String_
  name: ContainsParameter<TValue>(string)
  nameWithType: IMode.ContainsParameter<TValue>(string)
  fullName: VRBuilder.Core.Configuration.Modes.IMode.ContainsParameter<TValue>(string)
  nameWithType.vb: IMode.ContainsParameter(Of TValue)(String)
  fullName.vb: VRBuilder.Core.Configuration.Modes.IMode.ContainsParameter(Of TValue)(String)
  name.vb: ContainsParameter(Of TValue)(String)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.IMode.ContainsParameter``1(System.String)
    name: ContainsParameter
    href: VRBuilder.Core.Configuration.Modes.IMode.html#VRBuilder_Core_Configuration_Modes_IMode_ContainsParameter__1_System_String_
  - name: <
  - name: TValue
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.IMode.ContainsParameter``1(System.String)
    name: ContainsParameter
    href: VRBuilder.Core.Configuration.Modes.IMode.html#VRBuilder_Core_Configuration_Modes_IMode_ContainsParameter__1_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
