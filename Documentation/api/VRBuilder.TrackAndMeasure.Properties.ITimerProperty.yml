### YamlMime:ManagedReference
items:
- uid: VRBuilder.TrackAndMeasure.Properties.ITimerProperty
  commentId: T:VRBuilder.TrackAndMeasure.Properties.ITimerProperty
  id: ITimerProperty
  parent: VRBuilder.TrackAndMeasure.Properties
  children:
  - VRBuilder.TrackAndMeasure.Properties.ITimerProperty.IsCountdown
  - VRBuilder.TrackAndMeasure.Properties.ITimerProperty.IsRunning
  - VRBuilder.TrackAndMeasure.Properties.ITimerProperty.StartTimer
  - VRBuilder.TrackAndMeasure.Properties.ITimerProperty.StopTimer
  - VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerAtZero
  - VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStart
  - VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStarted
  - VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStop
  - VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStopped
  - VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerZero
  langs:
  - csharp
  - vb
  name: ITimerProperty
  nameWithType: ITimerProperty
  fullName: VRBuilder.TrackAndMeasure.Properties.ITimerProperty
  type: Interface
  source:
    remote:
      path: Source/Runtime/Properties/ITimerProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Track-and-Measure-for-VR-Builder.git
    id: ITimerProperty
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Add-ons/TrackAndMeasure/Source/Runtime/Properties/ITimerProperty.cs
    startLine: 9
  assemblies:
  - VRBuilder.TrackAndMeasure
  namespace: VRBuilder.TrackAndMeasure.Properties
  summary: Property that acts as a timer.
  example: []
  syntax:
    content: 'public interface ITimerProperty : ISceneObjectProperty'
    content.vb: Public Interface ITimerProperty Inherits ISceneObjectProperty
  inheritedMembers:
  - VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
- uid: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStarted
  commentId: E:VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStarted
  id: TimerStarted
  parent: VRBuilder.TrackAndMeasure.Properties.ITimerProperty
  langs:
  - csharp
  - vb
  name: TimerStarted
  nameWithType: ITimerProperty.TimerStarted
  fullName: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStarted
  type: Event
  source:
    remote:
      path: Source/Runtime/Properties/ITimerProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Track-and-Measure-for-VR-Builder.git
    id: TimerStarted
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Add-ons/TrackAndMeasure/Source/Runtime/Properties/ITimerProperty.cs
    startLine: 15
  assemblies:
  - VRBuilder.TrackAndMeasure
  namespace: VRBuilder.TrackAndMeasure.Properties
  summary: Raised when the timer starts.
  example: []
  syntax:
    content: >-
      [Obsolete("Use TimerStart instead.")]

      event EventHandler<EventArgs> TimerStarted
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: >-
      <Obsolete("Use TimerStart instead.")>

      Event TimerStarted As EventHandler(Of EventArgs)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use TimerStart instead.
- uid: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStopped
  commentId: E:VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStopped
  id: TimerStopped
  parent: VRBuilder.TrackAndMeasure.Properties.ITimerProperty
  langs:
  - csharp
  - vb
  name: TimerStopped
  nameWithType: ITimerProperty.TimerStopped
  fullName: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStopped
  type: Event
  source:
    remote:
      path: Source/Runtime/Properties/ITimerProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Track-and-Measure-for-VR-Builder.git
    id: TimerStopped
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Add-ons/TrackAndMeasure/Source/Runtime/Properties/ITimerProperty.cs
    startLine: 21
  assemblies:
  - VRBuilder.TrackAndMeasure
  namespace: VRBuilder.TrackAndMeasure.Properties
  summary: Raised when the timer is paused.
  example: []
  syntax:
    content: >-
      [Obsolete("Use TimerStop instead.")]

      event EventHandler<EventArgs> TimerStopped
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: >-
      <Obsolete("Use TimerStop instead.")>

      Event TimerStopped As EventHandler(Of EventArgs)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use TimerStop instead.
- uid: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerAtZero
  commentId: E:VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerAtZero
  id: TimerAtZero
  parent: VRBuilder.TrackAndMeasure.Properties.ITimerProperty
  langs:
  - csharp
  - vb
  name: TimerAtZero
  nameWithType: ITimerProperty.TimerAtZero
  fullName: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerAtZero
  type: Event
  source:
    remote:
      path: Source/Runtime/Properties/ITimerProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Track-and-Measure-for-VR-Builder.git
    id: TimerAtZero
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Add-ons/TrackAndMeasure/Source/Runtime/Properties/ITimerProperty.cs
    startLine: 27
  assemblies:
  - VRBuilder.TrackAndMeasure
  namespace: VRBuilder.TrackAndMeasure.Properties
  summary: Raised when a timer reaches zero.
  example: []
  syntax:
    content: >-
      [Obsolete("Use TimerZero instead.")]

      event EventHandler<EventArgs> TimerAtZero
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: >-
      <Obsolete("Use TimerZero instead.")>

      Event TimerAtZero As EventHandler(Of EventArgs)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use TimerZero instead.
- uid: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStart
  commentId: P:VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStart
  id: TimerStart
  parent: VRBuilder.TrackAndMeasure.Properties.ITimerProperty
  langs:
  - csharp
  - vb
  name: TimerStart
  nameWithType: ITimerProperty.TimerStart
  fullName: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStart
  type: Property
  source:
    remote:
      path: Source/Runtime/Properties/ITimerProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Track-and-Measure-for-VR-Builder.git
    id: TimerStart
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Add-ons/TrackAndMeasure/Source/Runtime/Properties/ITimerProperty.cs
    startLine: 32
  assemblies:
  - VRBuilder.TrackAndMeasure
  namespace: VRBuilder.TrackAndMeasure.Properties
  summary: Raised when the timer starts.
  example: []
  syntax:
    content: UnityEvent<TimerPropertyEventArgs> TimerStart { get; }
    parameters: []
    return:
      type: UnityEngine.Events.UnityEvent{VRBuilder.TrackAndMeasure.Properties.TimerPropertyEventArgs}
    content.vb: ReadOnly Property TimerStart As UnityEvent(Of TimerPropertyEventArgs)
  overload: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStart*
- uid: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStop
  commentId: P:VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStop
  id: TimerStop
  parent: VRBuilder.TrackAndMeasure.Properties.ITimerProperty
  langs:
  - csharp
  - vb
  name: TimerStop
  nameWithType: ITimerProperty.TimerStop
  fullName: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStop
  type: Property
  source:
    remote:
      path: Source/Runtime/Properties/ITimerProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Track-and-Measure-for-VR-Builder.git
    id: TimerStop
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Add-ons/TrackAndMeasure/Source/Runtime/Properties/ITimerProperty.cs
    startLine: 37
  assemblies:
  - VRBuilder.TrackAndMeasure
  namespace: VRBuilder.TrackAndMeasure.Properties
  summary: Raised when the timer is paused.
  example: []
  syntax:
    content: UnityEvent<TimerPropertyEventArgs> TimerStop { get; }
    parameters: []
    return:
      type: UnityEngine.Events.UnityEvent{VRBuilder.TrackAndMeasure.Properties.TimerPropertyEventArgs}
    content.vb: ReadOnly Property TimerStop As UnityEvent(Of TimerPropertyEventArgs)
  overload: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStop*
- uid: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerZero
  commentId: P:VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerZero
  id: TimerZero
  parent: VRBuilder.TrackAndMeasure.Properties.ITimerProperty
  langs:
  - csharp
  - vb
  name: TimerZero
  nameWithType: ITimerProperty.TimerZero
  fullName: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerZero
  type: Property
  source:
    remote:
      path: Source/Runtime/Properties/ITimerProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Track-and-Measure-for-VR-Builder.git
    id: TimerZero
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Add-ons/TrackAndMeasure/Source/Runtime/Properties/ITimerProperty.cs
    startLine: 42
  assemblies:
  - VRBuilder.TrackAndMeasure
  namespace: VRBuilder.TrackAndMeasure.Properties
  summary: Raised when a timer reaches zero.
  example: []
  syntax:
    content: UnityEvent<TimerPropertyEventArgs> TimerZero { get; }
    parameters: []
    return:
      type: UnityEngine.Events.UnityEvent{VRBuilder.TrackAndMeasure.Properties.TimerPropertyEventArgs}
    content.vb: ReadOnly Property TimerZero As UnityEvent(Of TimerPropertyEventArgs)
  overload: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerZero*
- uid: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.IsCountdown
  commentId: P:VRBuilder.TrackAndMeasure.Properties.ITimerProperty.IsCountdown
  id: IsCountdown
  parent: VRBuilder.TrackAndMeasure.Properties.ITimerProperty
  langs:
  - csharp
  - vb
  name: IsCountdown
  nameWithType: ITimerProperty.IsCountdown
  fullName: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.IsCountdown
  type: Property
  source:
    remote:
      path: Source/Runtime/Properties/ITimerProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Track-and-Measure-for-VR-Builder.git
    id: IsCountdown
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Add-ons/TrackAndMeasure/Source/Runtime/Properties/ITimerProperty.cs
    startLine: 47
  assemblies:
  - VRBuilder.TrackAndMeasure
  namespace: VRBuilder.TrackAndMeasure.Properties
  summary: If true, the timer will count down instead of up.
  example: []
  syntax:
    content: bool IsCountdown { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsCountdown As Boolean
  overload: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.IsCountdown*
- uid: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.IsRunning
  commentId: P:VRBuilder.TrackAndMeasure.Properties.ITimerProperty.IsRunning
  id: IsRunning
  parent: VRBuilder.TrackAndMeasure.Properties.ITimerProperty
  langs:
  - csharp
  - vb
  name: IsRunning
  nameWithType: ITimerProperty.IsRunning
  fullName: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.IsRunning
  type: Property
  source:
    remote:
      path: Source/Runtime/Properties/ITimerProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Track-and-Measure-for-VR-Builder.git
    id: IsRunning
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Add-ons/TrackAndMeasure/Source/Runtime/Properties/ITimerProperty.cs
    startLine: 52
  assemblies:
  - VRBuilder.TrackAndMeasure
  namespace: VRBuilder.TrackAndMeasure.Properties
  summary: True when the timer is active.
  example: []
  syntax:
    content: bool IsRunning { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsRunning As Boolean
  overload: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.IsRunning*
- uid: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.StartTimer
  commentId: M:VRBuilder.TrackAndMeasure.Properties.ITimerProperty.StartTimer
  id: StartTimer
  parent: VRBuilder.TrackAndMeasure.Properties.ITimerProperty
  langs:
  - csharp
  - vb
  name: StartTimer()
  nameWithType: ITimerProperty.StartTimer()
  fullName: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.StartTimer()
  type: Method
  source:
    remote:
      path: Source/Runtime/Properties/ITimerProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Track-and-Measure-for-VR-Builder.git
    id: StartTimer
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Add-ons/TrackAndMeasure/Source/Runtime/Properties/ITimerProperty.cs
    startLine: 57
  assemblies:
  - VRBuilder.TrackAndMeasure
  namespace: VRBuilder.TrackAndMeasure.Properties
  summary: Starts the timer.
  example: []
  syntax:
    content: void StartTimer()
    content.vb: Sub StartTimer()
  overload: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.StartTimer*
- uid: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.StopTimer
  commentId: M:VRBuilder.TrackAndMeasure.Properties.ITimerProperty.StopTimer
  id: StopTimer
  parent: VRBuilder.TrackAndMeasure.Properties.ITimerProperty
  langs:
  - csharp
  - vb
  name: StopTimer()
  nameWithType: ITimerProperty.StopTimer()
  fullName: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.StopTimer()
  type: Method
  source:
    remote:
      path: Source/Runtime/Properties/ITimerProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Track-and-Measure-for-VR-Builder.git
    id: StopTimer
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Add-ons/TrackAndMeasure/Source/Runtime/Properties/ITimerProperty.cs
    startLine: 62
  assemblies:
  - VRBuilder.TrackAndMeasure
  namespace: VRBuilder.TrackAndMeasure.Properties
  summary: Stops the timer.
  example: []
  syntax:
    content: void StopTimer()
    content.vb: Sub StopTimer()
  overload: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.StopTimer*
references:
- uid: VRBuilder.TrackAndMeasure.Properties
  commentId: N:VRBuilder.TrackAndMeasure.Properties
  href: VRBuilder.html
  name: VRBuilder.TrackAndMeasure.Properties
  nameWithType: VRBuilder.TrackAndMeasure.Properties
  fullName: VRBuilder.TrackAndMeasure.Properties
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.TrackAndMeasure
    name: TrackAndMeasure
    href: VRBuilder.TrackAndMeasure.html
  - name: .
  - uid: VRBuilder.TrackAndMeasure.Properties
    name: Properties
    href: VRBuilder.TrackAndMeasure.Properties.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.TrackAndMeasure
    name: TrackAndMeasure
    href: VRBuilder.TrackAndMeasure.html
  - name: .
  - uid: VRBuilder.TrackAndMeasure.Properties
    name: Properties
    href: VRBuilder.TrackAndMeasure.Properties.html
- uid: VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
  commentId: P:VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
  parent: VRBuilder.Core.Properties.ISceneObjectProperty
  href: VRBuilder.Core.Properties.ISceneObjectProperty.html#VRBuilder_Core_Properties_ISceneObjectProperty_SceneObject
  name: SceneObject
  nameWithType: ISceneObjectProperty.SceneObject
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
- uid: VRBuilder.Core.Properties.ISceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ISceneObjectProperty
  parent: VRBuilder.Core.Properties
  href: VRBuilder.Core.Properties.ISceneObjectProperty.html
  name: ISceneObjectProperty
  nameWithType: ISceneObjectProperty
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty
- uid: VRBuilder.Core.Properties
  commentId: N:VRBuilder.Core.Properties
  href: VRBuilder.html
  name: VRBuilder.Core.Properties
  nameWithType: VRBuilder.Core.Properties
  fullName: VRBuilder.Core.Properties
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Properties
    name: Properties
    href: VRBuilder.Core.Properties.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Properties
    name: Properties
    href: VRBuilder.Core.Properties.html
- uid: System.EventHandler{System.EventArgs}
  commentId: T:System.EventHandler{System.EventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<EventArgs>
  nameWithType: EventHandler<EventArgs>
  fullName: System.EventHandler<System.EventArgs>
  nameWithType.vb: EventHandler(Of EventArgs)
  fullName.vb: System.EventHandler(Of System.EventArgs)
  name.vb: EventHandler(Of EventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStart*
  commentId: Overload:VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStart
  href: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.html#VRBuilder_TrackAndMeasure_Properties_ITimerProperty_TimerStart
  name: TimerStart
  nameWithType: ITimerProperty.TimerStart
  fullName: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStart
- uid: UnityEngine.Events.UnityEvent{VRBuilder.TrackAndMeasure.Properties.TimerPropertyEventArgs}
  commentId: T:UnityEngine.Events.UnityEvent{VRBuilder.TrackAndMeasure.Properties.TimerPropertyEventArgs}
  parent: UnityEngine.Events
  definition: UnityEngine.Events.UnityEvent`1
  href: VRBuilder.TrackAndMeasure.Properties.TimerPropertyEventArgs.html
  name: UnityEvent<TimerPropertyEventArgs>
  nameWithType: UnityEvent<TimerPropertyEventArgs>
  fullName: UnityEngine.Events.UnityEvent<VRBuilder.TrackAndMeasure.Properties.TimerPropertyEventArgs>
  nameWithType.vb: UnityEvent(Of TimerPropertyEventArgs)
  fullName.vb: UnityEngine.Events.UnityEvent(Of VRBuilder.TrackAndMeasure.Properties.TimerPropertyEventArgs)
  name.vb: UnityEvent(Of TimerPropertyEventArgs)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: <
  - uid: VRBuilder.TrackAndMeasure.Properties.TimerPropertyEventArgs
    name: TimerPropertyEventArgs
    href: VRBuilder.TrackAndMeasure.Properties.TimerPropertyEventArgs.html
  - name: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: VRBuilder.TrackAndMeasure.Properties.TimerPropertyEventArgs
    name: TimerPropertyEventArgs
    href: VRBuilder.TrackAndMeasure.Properties.TimerPropertyEventArgs.html
  - name: )
- uid: UnityEngine.Events.UnityEvent`1
  commentId: T:UnityEngine.Events.UnityEvent`1
  isExternal: true
  name: UnityEvent<T0>
  nameWithType: UnityEvent<T0>
  fullName: UnityEngine.Events.UnityEvent<T0>
  nameWithType.vb: UnityEvent(Of T0)
  fullName.vb: UnityEngine.Events.UnityEvent(Of T0)
  name.vb: UnityEvent(Of T0)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: <
  - name: T0
  - name: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: )
- uid: UnityEngine.Events
  commentId: N:UnityEngine.Events
  isExternal: true
  name: UnityEngine.Events
  nameWithType: UnityEngine.Events
  fullName: UnityEngine.Events
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Events
    name: Events
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.Events
    name: Events
    isExternal: true
- uid: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStop*
  commentId: Overload:VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStop
  href: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.html#VRBuilder_TrackAndMeasure_Properties_ITimerProperty_TimerStop
  name: TimerStop
  nameWithType: ITimerProperty.TimerStop
  fullName: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerStop
- uid: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerZero*
  commentId: Overload:VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerZero
  href: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.html#VRBuilder_TrackAndMeasure_Properties_ITimerProperty_TimerZero
  name: TimerZero
  nameWithType: ITimerProperty.TimerZero
  fullName: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.TimerZero
- uid: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.IsCountdown*
  commentId: Overload:VRBuilder.TrackAndMeasure.Properties.ITimerProperty.IsCountdown
  href: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.html#VRBuilder_TrackAndMeasure_Properties_ITimerProperty_IsCountdown
  name: IsCountdown
  nameWithType: ITimerProperty.IsCountdown
  fullName: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.IsCountdown
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.IsRunning*
  commentId: Overload:VRBuilder.TrackAndMeasure.Properties.ITimerProperty.IsRunning
  href: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.html#VRBuilder_TrackAndMeasure_Properties_ITimerProperty_IsRunning
  name: IsRunning
  nameWithType: ITimerProperty.IsRunning
  fullName: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.IsRunning
- uid: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.StartTimer*
  commentId: Overload:VRBuilder.TrackAndMeasure.Properties.ITimerProperty.StartTimer
  href: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.html#VRBuilder_TrackAndMeasure_Properties_ITimerProperty_StartTimer
  name: StartTimer
  nameWithType: ITimerProperty.StartTimer
  fullName: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.StartTimer
- uid: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.StopTimer*
  commentId: Overload:VRBuilder.TrackAndMeasure.Properties.ITimerProperty.StopTimer
  href: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.html#VRBuilder_TrackAndMeasure_Properties_ITimerProperty_StopTimer
  name: StopTimer
  nameWithType: ITimerProperty.StopTimer
  fullName: VRBuilder.TrackAndMeasure.Properties.ITimerProperty.StopTimer
