### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Configuration.ISceneConfiguration
  commentId: T:VRBuilder.Core.Configuration.ISceneConfiguration
  id: ISceneConfiguration
  parent: VRBuilder.Core.Configuration
  children:
  - VRBuilder.Core.Configuration.ISceneConfiguration.DefaultConfettiPrefab
  - VRBuilder.Core.Configuration.ISceneConfiguration.ExtensionAssembliesWhitelist
  - VRBuilder.Core.Configuration.ISceneConfiguration.IsAllowedInAssembly(System.Type,System.String)
  langs:
  - csharp
  - vb
  name: ISceneConfiguration
  nameWithType: ISceneConfiguration
  fullName: VRBuilder.Core.Configuration.ISceneConfiguration
  type: Interface
  source:
    remote:
      path: Source/Core/Runtime/Configuration/ISceneConfiguration.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ISceneConfiguration
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/ISceneConfiguration.cs
    startLine: 8
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: Handles configuration specific to this scene.
  example: []
  syntax:
    content: public interface ISceneConfiguration
    content.vb: Public Interface ISceneConfiguration
- uid: VRBuilder.Core.Configuration.ISceneConfiguration.ExtensionAssembliesWhitelist
  commentId: P:VRBuilder.Core.Configuration.ISceneConfiguration.ExtensionAssembliesWhitelist
  id: ExtensionAssembliesWhitelist
  parent: VRBuilder.Core.Configuration.ISceneConfiguration
  langs:
  - csharp
  - vb
  name: ExtensionAssembliesWhitelist
  nameWithType: ISceneConfiguration.ExtensionAssembliesWhitelist
  fullName: VRBuilder.Core.Configuration.ISceneConfiguration.ExtensionAssembliesWhitelist
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Configuration/ISceneConfiguration.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ExtensionAssembliesWhitelist
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/ISceneConfiguration.cs
    startLine: 13
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: Lists all assemblies whose property extensions will be used in the current scene.
  example: []
  syntax:
    content: IEnumerable<string> ExtensionAssembliesWhitelist { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: ReadOnly Property ExtensionAssembliesWhitelist As IEnumerable(Of String)
  overload: VRBuilder.Core.Configuration.ISceneConfiguration.ExtensionAssembliesWhitelist*
- uid: VRBuilder.Core.Configuration.ISceneConfiguration.IsAllowedInAssembly(System.Type,System.String)
  commentId: M:VRBuilder.Core.Configuration.ISceneConfiguration.IsAllowedInAssembly(System.Type,System.String)
  id: IsAllowedInAssembly(System.Type,System.String)
  parent: VRBuilder.Core.Configuration.ISceneConfiguration
  langs:
  - csharp
  - vb
  name: IsAllowedInAssembly(Type, string)
  nameWithType: ISceneConfiguration.IsAllowedInAssembly(Type, string)
  fullName: VRBuilder.Core.Configuration.ISceneConfiguration.IsAllowedInAssembly(System.Type, string)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/ISceneConfiguration.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsAllowedInAssembly
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/ISceneConfiguration.cs
    startLine: 18
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: True if the specified type is not in an exclusion list for the specified assembly.
  example: []
  syntax:
    content: bool IsAllowedInAssembly(Type extensionType, string assemblyName)
    parameters:
    - id: extensionType
      type: System.Type
    - id: assemblyName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function IsAllowedInAssembly(extensionType As Type, assemblyName As String) As Boolean
  overload: VRBuilder.Core.Configuration.ISceneConfiguration.IsAllowedInAssembly*
  nameWithType.vb: ISceneConfiguration.IsAllowedInAssembly(Type, String)
  fullName.vb: VRBuilder.Core.Configuration.ISceneConfiguration.IsAllowedInAssembly(System.Type, String)
  name.vb: IsAllowedInAssembly(Type, String)
- uid: VRBuilder.Core.Configuration.ISceneConfiguration.DefaultConfettiPrefab
  commentId: P:VRBuilder.Core.Configuration.ISceneConfiguration.DefaultConfettiPrefab
  id: DefaultConfettiPrefab
  parent: VRBuilder.Core.Configuration.ISceneConfiguration
  langs:
  - csharp
  - vb
  name: DefaultConfettiPrefab
  nameWithType: ISceneConfiguration.DefaultConfettiPrefab
  fullName: VRBuilder.Core.Configuration.ISceneConfiguration.DefaultConfettiPrefab
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Configuration/ISceneConfiguration.cs
      branch: feature/docs
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DefaultConfettiPrefab
    path: ../../VR-Builder-UAS-2020/Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/ISceneConfiguration.cs
    startLine: 23
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: Default resources prefab to use for Confetti behavior.
  example: []
  syntax:
    content: string DefaultConfettiPrefab { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property DefaultConfettiPrefab As String
  overload: VRBuilder.Core.Configuration.ISceneConfiguration.DefaultConfettiPrefab*
references:
- uid: VRBuilder.Core.Configuration
  commentId: N:VRBuilder.Core.Configuration
  href: VRBuilder.html
  name: VRBuilder.Core.Configuration
  nameWithType: VRBuilder.Core.Configuration
  fullName: VRBuilder.Core.Configuration
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Configuration
    name: Configuration
    href: VRBuilder.Core.Configuration.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Configuration
    name: Configuration
    href: VRBuilder.Core.Configuration.html
- uid: VRBuilder.Core.Configuration.ISceneConfiguration.ExtensionAssembliesWhitelist*
  commentId: Overload:VRBuilder.Core.Configuration.ISceneConfiguration.ExtensionAssembliesWhitelist
  href: VRBuilder.Core.Configuration.ISceneConfiguration.html#VRBuilder_Core_Configuration_ISceneConfiguration_ExtensionAssembliesWhitelist
  name: ExtensionAssembliesWhitelist
  nameWithType: ISceneConfiguration.ExtensionAssembliesWhitelist
  fullName: VRBuilder.Core.Configuration.ISceneConfiguration.ExtensionAssembliesWhitelist
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: VRBuilder.Core.Configuration.ISceneConfiguration.IsAllowedInAssembly*
  commentId: Overload:VRBuilder.Core.Configuration.ISceneConfiguration.IsAllowedInAssembly
  href: VRBuilder.Core.Configuration.ISceneConfiguration.html#VRBuilder_Core_Configuration_ISceneConfiguration_IsAllowedInAssembly_System_Type_System_String_
  name: IsAllowedInAssembly
  nameWithType: ISceneConfiguration.IsAllowedInAssembly
  fullName: VRBuilder.Core.Configuration.ISceneConfiguration.IsAllowedInAssembly
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Configuration.ISceneConfiguration.DefaultConfettiPrefab*
  commentId: Overload:VRBuilder.Core.Configuration.ISceneConfiguration.DefaultConfettiPrefab
  href: VRBuilder.Core.Configuration.ISceneConfiguration.html#VRBuilder_Core_Configuration_ISceneConfiguration_DefaultConfettiPrefab
  name: DefaultConfettiPrefab
  nameWithType: ISceneConfiguration.DefaultConfettiPrefab
  fullName: VRBuilder.Core.Configuration.ISceneConfiguration.DefaultConfettiPrefab
