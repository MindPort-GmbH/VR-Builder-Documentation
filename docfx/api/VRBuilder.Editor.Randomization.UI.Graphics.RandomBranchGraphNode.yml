### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode
  commentId: T:VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode
  id: RandomBranchGraphNode
  parent: VRBuilder.Editor.Randomization.UI.Graphics
  children:
  - VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.#ctor(VRBuilder.Core.IStep)
  - VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.AddTransitionPort(System.Boolean,System.Int32)
  - VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.CreatePortWithUndo
  langs:
  - csharp
  - vb
  name: RandomBranchGraphNode
  nameWithType: RandomBranchGraphNode
  fullName: VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode
  type: Class
  source:
    remote:
      path: Source/Editor/UI/GraphView/RandomBranchGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Randomization-for-VR-Builder.git
    id: RandomBranchGraphNode
    path: ../../Assets/MindPort/VR Builder/Add-ons/Randomization/Source/Editor/UI/GraphView/RandomBranchGraphNode.cs
    startLine: 15
  assemblies:
  - VRBuilder.Editor.Randomization
  namespace: VRBuilder.Editor.Randomization.UI.Graphics
  summary: "\nGraphical representation of a random branch node.\n"
  example: []
  syntax:
    content: 'public class RandomBranchGraphNode : StepGraphNode'
    content.vb: >-
      Public Class RandomBranchGraphNode
          Inherits StepGraphNode
  inheritance:
  - System.Object
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  - VRBuilder.Editor.UI.Graphics.StepGraphNode
  inheritedMembers:
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.step
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.Name
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.EntryPoint
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.Outputs
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.Position
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.Refresh
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePort(Port)
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePortWithUndo(Port)
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.OnSelected
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.SetOutput(System.Int32,VRBuilder.Core.IStep)
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.AddToChapter(VRBuilder.Core.IChapter)
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.RemoveFromChapter(VRBuilder.Core.IChapter)
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.UpdateOutputPortName(Port,Node)
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.deleteIconFileName
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.editIconFileName
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.defaultNodeSize
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.IsEntryPoint
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort(Direction,Port.Capacity)
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon(System.String)
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished(TextField)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.#ctor(VRBuilder.Core.IStep)
  commentId: M:VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.#ctor(VRBuilder.Core.IStep)
  id: '#ctor(VRBuilder.Core.IStep)'
  parent: VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode
  langs:
  - csharp
  - vb
  name: RandomBranchGraphNode(IStep)
  nameWithType: RandomBranchGraphNode.RandomBranchGraphNode(IStep)
  fullName: VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.RandomBranchGraphNode(VRBuilder.Core.IStep)
  type: Constructor
  source:
    remote:
      path: Source/Editor/UI/GraphView/RandomBranchGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Randomization-for-VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Add-ons/Randomization/Source/Editor/UI/GraphView/RandomBranchGraphNode.cs
    startLine: 17
  assemblies:
  - VRBuilder.Editor.Randomization
  namespace: VRBuilder.Editor.Randomization.UI.Graphics
  syntax:
    content: public RandomBranchGraphNode(IStep step)
    parameters:
    - id: step
      type: VRBuilder.Core.IStep
    content.vb: Public Sub New(step As IStep)
  overload: VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.CreatePortWithUndo
  commentId: M:VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.CreatePortWithUndo
  id: CreatePortWithUndo
  parent: VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode
  langs:
  - csharp
  - vb
  name: CreatePortWithUndo()
  nameWithType: RandomBranchGraphNode.CreatePortWithUndo()
  fullName: VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.CreatePortWithUndo()
  type: Method
  source:
    remote:
      path: Source/Editor/UI/GraphView/RandomBranchGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Randomization-for-VR-Builder.git
    id: CreatePortWithUndo
    path: ../../Assets/MindPort/VR Builder/Add-ons/Randomization/Source/Editor/UI/GraphView/RandomBranchGraphNode.cs
    startLine: 22
  assemblies:
  - VRBuilder.Editor.Randomization
  namespace: VRBuilder.Editor.Randomization.UI.Graphics
  summary: "\nCreates a transition port supporting undo.\n"
  example: []
  syntax:
    content: protected override void CreatePortWithUndo()
    content.vb: Protected Overrides Sub CreatePortWithUndo
  overridden: VRBuilder.Editor.UI.Graphics.StepGraphNode.CreatePortWithUndo
  overload: VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.CreatePortWithUndo*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.AddTransitionPort(System.Boolean,System.Int32)
  commentId: M:VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.AddTransitionPort(System.Boolean,System.Int32)
  id: AddTransitionPort(System.Boolean,System.Int32)
  parent: VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode
  langs:
  - csharp
  - vb
  name: AddTransitionPort(Boolean, Int32)
  nameWithType: RandomBranchGraphNode.AddTransitionPort(Boolean, Int32)
  fullName: VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.AddTransitionPort(System.Boolean, System.Int32)
  type: Method
  source:
    remote:
      path: Source/Editor/UI/GraphView/RandomBranchGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Randomization-for-VR-Builder.git
    id: AddTransitionPort
    path: ../../Assets/MindPort/VR Builder/Add-ons/Randomization/Source/Editor/UI/GraphView/RandomBranchGraphNode.cs
    startLine: 41
  assemblies:
  - VRBuilder.Editor.Randomization
  namespace: VRBuilder.Editor.Randomization.UI.Graphics
  summary: "\nAdds a potentially deletable transition port to this node.\n"
  example: []
  syntax:
    content: public override Port AddTransitionPort(bool isDeletablePort = true, int index = -1)
    parameters:
    - id: isDeletablePort
      type: System.Boolean
      description: If true, a delete button is created which allows to delete the transition.
    - id: index
      type: System.Int32
      description: Index where to insert the port, if blank it will be added at the end of the list.
    return:
      type: Port
      description: The created port.
    content.vb: Public Overrides Function AddTransitionPort(isDeletablePort As Boolean = True, index As Integer = -1) As Port
  overridden: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort(System.Boolean,System.Int32)
  overload: VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.AddTransitionPort*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VRBuilder.Editor.Randomization.UI.Graphics
  commentId: N:VRBuilder.Editor.Randomization.UI.Graphics
  name: VRBuilder.Editor.Randomization.UI.Graphics
  nameWithType: VRBuilder.Editor.Randomization.UI.Graphics
  fullName: VRBuilder.Editor.Randomization.UI.Graphics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  commentId: T:VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  parent: VRBuilder.Editor.UI.Graphics
  name: ProcessGraphNode
  nameWithType: ProcessGraphNode
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode
  commentId: T:VRBuilder.Editor.UI.Graphics.StepGraphNode
  parent: VRBuilder.Editor.UI.Graphics
  name: StepGraphNode
  nameWithType: StepGraphNode
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.step
  commentId: F:VRBuilder.Editor.UI.Graphics.StepGraphNode.step
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  name: step
  nameWithType: StepGraphNode.step
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.step
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.Name
  commentId: P:VRBuilder.Editor.UI.Graphics.StepGraphNode.Name
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  name: Name
  nameWithType: StepGraphNode.Name
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.Name
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.EntryPoint
  commentId: P:VRBuilder.Editor.UI.Graphics.StepGraphNode.EntryPoint
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  name: EntryPoint
  nameWithType: StepGraphNode.EntryPoint
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.EntryPoint
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.Outputs
  commentId: P:VRBuilder.Editor.UI.Graphics.StepGraphNode.Outputs
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  name: Outputs
  nameWithType: StepGraphNode.Outputs
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.Outputs
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.Position
  commentId: P:VRBuilder.Editor.UI.Graphics.StepGraphNode.Position
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  name: Position
  nameWithType: StepGraphNode.Position
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.Position
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.Refresh
  commentId: M:VRBuilder.Editor.UI.Graphics.StepGraphNode.Refresh
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  name: Refresh()
  nameWithType: StepGraphNode.Refresh()
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.Refresh()
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.Refresh
    name: Refresh
    nameWithType: StepGraphNode.Refresh
    fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.Refresh
    name: Refresh
    nameWithType: StepGraphNode.Refresh
    fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePort(Port)
  commentId: M:VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePort(Port)
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  isExternal: true
  name: RemovePort(Port)
  nameWithType: StepGraphNode.RemovePort(Port)
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePort(Port)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePort(Port)
    name: RemovePort
    nameWithType: StepGraphNode.RemovePort
    fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePort
  - name: (
    nameWithType: (
    fullName: (
  - uid: Port
    name: Port
    nameWithType: Port
    fullName: Port
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePort(Port)
    name: RemovePort
    nameWithType: StepGraphNode.RemovePort
    fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePort
  - name: (
    nameWithType: (
    fullName: (
  - uid: Port
    name: Port
    nameWithType: Port
    fullName: Port
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePortWithUndo(Port)
  commentId: M:VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePortWithUndo(Port)
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  isExternal: true
  name: RemovePortWithUndo(Port)
  nameWithType: StepGraphNode.RemovePortWithUndo(Port)
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePortWithUndo(Port)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePortWithUndo(Port)
    name: RemovePortWithUndo
    nameWithType: StepGraphNode.RemovePortWithUndo
    fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePortWithUndo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Port
    name: Port
    nameWithType: Port
    fullName: Port
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePortWithUndo(Port)
    name: RemovePortWithUndo
    nameWithType: StepGraphNode.RemovePortWithUndo
    fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePortWithUndo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Port
    name: Port
    nameWithType: Port
    fullName: Port
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.OnSelected
  commentId: M:VRBuilder.Editor.UI.Graphics.StepGraphNode.OnSelected
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  name: OnSelected()
  nameWithType: StepGraphNode.OnSelected()
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.OnSelected()
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.OnSelected
    name: OnSelected
    nameWithType: StepGraphNode.OnSelected
    fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.OnSelected
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.OnSelected
    name: OnSelected
    nameWithType: StepGraphNode.OnSelected
    fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.OnSelected
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.SetOutput(System.Int32,VRBuilder.Core.IStep)
  commentId: M:VRBuilder.Editor.UI.Graphics.StepGraphNode.SetOutput(System.Int32,VRBuilder.Core.IStep)
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  isExternal: true
  name: SetOutput(Int32, IStep)
  nameWithType: StepGraphNode.SetOutput(Int32, IStep)
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.SetOutput(System.Int32, VRBuilder.Core.IStep)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.SetOutput(System.Int32,VRBuilder.Core.IStep)
    name: SetOutput
    nameWithType: StepGraphNode.SetOutput
    fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.SetOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.SetOutput(System.Int32,VRBuilder.Core.IStep)
    name: SetOutput
    nameWithType: StepGraphNode.SetOutput
    fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.SetOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.AddToChapter(VRBuilder.Core.IChapter)
  commentId: M:VRBuilder.Editor.UI.Graphics.StepGraphNode.AddToChapter(VRBuilder.Core.IChapter)
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  name: AddToChapter(IChapter)
  nameWithType: StepGraphNode.AddToChapter(IChapter)
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.AddToChapter(VRBuilder.Core.IChapter)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.AddToChapter(VRBuilder.Core.IChapter)
    name: AddToChapter
    nameWithType: StepGraphNode.AddToChapter
    fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.AddToChapter
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.AddToChapter(VRBuilder.Core.IChapter)
    name: AddToChapter
    nameWithType: StepGraphNode.AddToChapter
    fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.AddToChapter
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemoveFromChapter(VRBuilder.Core.IChapter)
  commentId: M:VRBuilder.Editor.UI.Graphics.StepGraphNode.RemoveFromChapter(VRBuilder.Core.IChapter)
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  name: RemoveFromChapter(IChapter)
  nameWithType: StepGraphNode.RemoveFromChapter(IChapter)
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemoveFromChapter(VRBuilder.Core.IChapter)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemoveFromChapter(VRBuilder.Core.IChapter)
    name: RemoveFromChapter
    nameWithType: StepGraphNode.RemoveFromChapter
    fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemoveFromChapter
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemoveFromChapter(VRBuilder.Core.IChapter)
    name: RemoveFromChapter
    nameWithType: StepGraphNode.RemoveFromChapter
    fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemoveFromChapter
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.UpdateOutputPortName(Port,Node)
  commentId: M:VRBuilder.Editor.UI.Graphics.StepGraphNode.UpdateOutputPortName(Port,Node)
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  isExternal: true
  name: UpdateOutputPortName(Port, Node)
  nameWithType: StepGraphNode.UpdateOutputPortName(Port, Node)
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.UpdateOutputPortName(Port, Node)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.UpdateOutputPortName(Port,Node)
    name: UpdateOutputPortName
    nameWithType: StepGraphNode.UpdateOutputPortName
    fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.UpdateOutputPortName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Port
    name: Port
    nameWithType: Port
    fullName: Port
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Node
    name: Node
    nameWithType: Node
    fullName: Node
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.UpdateOutputPortName(Port,Node)
    name: UpdateOutputPortName
    nameWithType: StepGraphNode.UpdateOutputPortName
    fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.UpdateOutputPortName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Port
    name: Port
    nameWithType: Port
    fullName: Port
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Node
    name: Node
    nameWithType: Node
    fullName: Node
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.deleteIconFileName
  commentId: F:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.deleteIconFileName
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  name: deleteIconFileName
  nameWithType: ProcessGraphNode.deleteIconFileName
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.deleteIconFileName
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.editIconFileName
  commentId: F:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.editIconFileName
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  name: editIconFileName
  nameWithType: ProcessGraphNode.editIconFileName
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.editIconFileName
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.defaultNodeSize
  commentId: F:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.defaultNodeSize
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  name: defaultNodeSize
  nameWithType: ProcessGraphNode.defaultNodeSize
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.defaultNodeSize
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.IsEntryPoint
  commentId: P:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.IsEntryPoint
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  name: IsEntryPoint
  nameWithType: ProcessGraphNode.IsEntryPoint
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.IsEntryPoint
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort(Direction,Port.Capacity)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort(Direction,Port.Capacity)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  isExternal: true
  name: CreatePort(Direction, Port.Capacity)
  nameWithType: ProcessGraphNode.CreatePort(Direction, Port.Capacity)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort(Direction, Port.Capacity)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort(Direction,Port.Capacity)
    name: CreatePort
    nameWithType: ProcessGraphNode.CreatePort
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort
  - name: (
    nameWithType: (
    fullName: (
  - uid: Direction
    name: Direction
    nameWithType: Direction
    fullName: Direction
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Port.Capacity
    name: Port.Capacity
    nameWithType: Port.Capacity
    fullName: Port.Capacity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort(Direction,Port.Capacity)
    name: CreatePort
    nameWithType: ProcessGraphNode.CreatePort
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort
  - name: (
    nameWithType: (
    fullName: (
  - uid: Direction
    name: Direction
    nameWithType: Direction
    fullName: Direction
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Port.Capacity
    name: Port.Capacity
    nameWithType: Port.Capacity
    fullName: Port.Capacity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon(System.String)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon(System.String)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  isExternal: true
  name: GetIcon(String)
  nameWithType: ProcessGraphNode.GetIcon(String)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon(System.String)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon(System.String)
    name: GetIcon
    nameWithType: ProcessGraphNode.GetIcon
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon(System.String)
    name: GetIcon
    nameWithType: ProcessGraphNode.GetIcon
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  name: OpenTextEditor()
  nameWithType: ProcessGraphNode.OpenTextEditor()
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor()
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor
    name: OpenTextEditor
    nameWithType: ProcessGraphNode.OpenTextEditor
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor
    name: OpenTextEditor
    nameWithType: ProcessGraphNode.OpenTextEditor
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished(TextField)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished(TextField)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  isExternal: true
  name: OnEditTextFinished(TextField)
  nameWithType: ProcessGraphNode.OnEditTextFinished(TextField)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished(TextField)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished(TextField)
    name: OnEditTextFinished
    nameWithType: ProcessGraphNode.OnEditTextFinished
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished
  - name: (
    nameWithType: (
    fullName: (
  - uid: TextField
    name: TextField
    nameWithType: TextField
    fullName: TextField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished(TextField)
    name: OnEditTextFinished
    nameWithType: ProcessGraphNode.OnEditTextFinished
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished
  - name: (
    nameWithType: (
    fullName: (
  - uid: TextField
    name: TextField
    nameWithType: TextField
    fullName: TextField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Editor.UI.Graphics
  commentId: N:VRBuilder.Editor.UI.Graphics
  name: VRBuilder.Editor.UI.Graphics
  nameWithType: VRBuilder.Editor.UI.Graphics
  fullName: VRBuilder.Editor.UI.Graphics
- uid: VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.#ctor*
  commentId: Overload:VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.#ctor
  name: RandomBranchGraphNode
  nameWithType: RandomBranchGraphNode.RandomBranchGraphNode
  fullName: VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.RandomBranchGraphNode
- uid: VRBuilder.Core.IStep
  commentId: T:VRBuilder.Core.IStep
  parent: VRBuilder.Core
  name: IStep
  nameWithType: IStep
  fullName: VRBuilder.Core.IStep
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.CreatePortWithUndo
  commentId: M:VRBuilder.Editor.UI.Graphics.StepGraphNode.CreatePortWithUndo
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  name: CreatePortWithUndo()
  nameWithType: StepGraphNode.CreatePortWithUndo()
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.CreatePortWithUndo()
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.CreatePortWithUndo
    name: CreatePortWithUndo
    nameWithType: StepGraphNode.CreatePortWithUndo
    fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.CreatePortWithUndo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.CreatePortWithUndo
    name: CreatePortWithUndo
    nameWithType: StepGraphNode.CreatePortWithUndo
    fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.CreatePortWithUndo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.CreatePortWithUndo*
  commentId: Overload:VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.CreatePortWithUndo
  name: CreatePortWithUndo
  nameWithType: RandomBranchGraphNode.CreatePortWithUndo
  fullName: VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.CreatePortWithUndo
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort(System.Boolean,System.Int32)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort(System.Boolean,System.Int32)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  isExternal: true
  name: AddTransitionPort(Boolean, Int32)
  nameWithType: ProcessGraphNode.AddTransitionPort(Boolean, Int32)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort(System.Boolean, System.Int32)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort(System.Boolean,System.Int32)
    name: AddTransitionPort
    nameWithType: ProcessGraphNode.AddTransitionPort
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort(System.Boolean,System.Int32)
    name: AddTransitionPort
    nameWithType: ProcessGraphNode.AddTransitionPort
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.AddTransitionPort*
  commentId: Overload:VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.AddTransitionPort
  name: AddTransitionPort
  nameWithType: RandomBranchGraphNode.AddTransitionPort
  fullName: VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.AddTransitionPort
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Port
  isExternal: true
  name: Port
  nameWithType: Port
  fullName: Port
