### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData
  commentId: T:VRBuilder.Core.Behaviors.SetParentBehavior.EntityData
  id: SetParentBehavior.EntityData
  parent: VRBuilder.Core.Behaviors
  children:
  - VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Metadata
  - VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Name
  - VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Parent
  - VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.ParentObject
  - VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.SnapToParentTransform
  - VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Target
  - VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.TargetObject
  langs:
  - csharp
  - vb
  name: SetParentBehavior.EntityData
  nameWithType: SetParentBehavior.EntityData
  fullName: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData
  type: Class
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetParentBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EntityData
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetParentBehavior.cs
    startLine: 19
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  syntax:
    content: >-
      [DisplayName("Set Parent")]

      [DataContract(IsReference = true)]

      public class EntityData : IBehaviorData, INamedData, IData
    content.vb: >-
      <DisplayName("Set Parent")>

      <DataContract(IsReference:=True)>

      Public Class EntityData

          Implements IBehaviorData, INamedData, IData
  inheritance:
  - System.Object
  implements:
  - VRBuilder.Core.Behaviors.IBehaviorData
  - VRBuilder.Core.INamedData
  - VRBuilder.Core.IData
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Set Parent
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.TargetObject
  commentId: P:VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.TargetObject
  id: TargetObject
  parent: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData
  langs:
  - csharp
  - vb
  name: TargetObject
  nameWithType: SetParentBehavior.EntityData.TargetObject
  fullName: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.TargetObject
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetParentBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: TargetObject
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetParentBehavior.cs
    startLine: 26
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  summary: "\nProcess object to reparent.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public SingleSceneObjectReference TargetObject { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.SceneObjects.SingleSceneObjectReference
    content.vb: >-
      <DataMember>

      Public Property TargetObject As SingleSceneObjectReference
  overload: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.TargetObject*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Target
  commentId: P:VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Target
  id: Target
  parent: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: SetParentBehavior.EntityData.Target
  fullName: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Target
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetParentBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Target
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetParentBehavior.cs
    startLine: 29
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  syntax:
    content: >-
      [DataMember]

      [Obsolete("Use TargetObject instead.")]

      [LegacyProperty("TargetObject")]

      public SceneObjectReference Target { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.SceneObjects.SceneObjectReference
    content.vb: >-
      <DataMember>

      <Obsolete("Use TargetObject instead.")>

      <LegacyProperty("TargetObject")>

      Public Property Target As SceneObjectReference
  overload: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Target*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use TargetObject instead.
  - type: VRBuilder.Core.Attributes.LegacyPropertyAttribute
    ctor: VRBuilder.Core.Attributes.LegacyPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TargetObject
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.ParentObject
  commentId: P:VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.ParentObject
  id: ParentObject
  parent: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData
  langs:
  - csharp
  - vb
  name: ParentObject
  nameWithType: SetParentBehavior.EntityData.ParentObject
  fullName: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.ParentObject
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetParentBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ParentObject
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetParentBehavior.cs
    startLine: 38
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  summary: "\nNew parent game object.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public SingleSceneObjectReference ParentObject { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.SceneObjects.SingleSceneObjectReference
    content.vb: >-
      <DataMember>

      Public Property ParentObject As SingleSceneObjectReference
  overload: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.ParentObject*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Parent
  commentId: P:VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Parent
  id: Parent
  parent: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: SetParentBehavior.EntityData.Parent
  fullName: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Parent
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetParentBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Parent
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetParentBehavior.cs
    startLine: 41
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  syntax:
    content: >-
      [DataMember]

      [Obsolete("Use ParentObject instead.")]

      [LegacyProperty("ParentObject")]

      public SceneObjectReference Parent { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.SceneObjects.SceneObjectReference
    content.vb: >-
      <DataMember>

      <Obsolete("Use ParentObject instead.")>

      <LegacyProperty("ParentObject")>

      Public Property Parent As SceneObjectReference
  overload: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Parent*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ParentObject instead.
  - type: VRBuilder.Core.Attributes.LegacyPropertyAttribute
    ctor: VRBuilder.Core.Attributes.LegacyPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ParentObject
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.SnapToParentTransform
  commentId: P:VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.SnapToParentTransform
  id: SnapToParentTransform
  parent: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData
  langs:
  - csharp
  - vb
  name: SnapToParentTransform
  nameWithType: SetParentBehavior.EntityData.SnapToParentTransform
  fullName: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.SnapToParentTransform
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetParentBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SnapToParentTransform
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetParentBehavior.cs
    startLine: 50
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  summary: "\nIf true, the object will be moved to the parent&apos;s transform.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DisplayName("Snap to parent transform")]

      public bool SnapToParentTransform { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      <DisplayName("Snap to parent transform")>

      Public Property SnapToParentTransform As Boolean
  overload: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.SnapToParentTransform*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Snap to parent transform
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Metadata
  commentId: P:VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Metadata
  id: Metadata
  parent: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: SetParentBehavior.EntityData.Metadata
  fullName: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Metadata
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetParentBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Metadata
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetParentBehavior.cs
    startLine: 54
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  syntax:
    content: public Metadata Metadata { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.Metadata
    content.vb: Public Property Metadata As Metadata
  overload: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Metadata*
  implements:
  - VRBuilder.Core.IData.Metadata
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Name
  commentId: P:VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Name
  id: Name
  parent: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SetParentBehavior.EntityData.Name
  fullName: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Name
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetParentBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Name
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetParentBehavior.cs
    startLine: 56
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  syntax:
    content: >-
      [IgnoreDataMember]

      public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <IgnoreDataMember>

      Public ReadOnly Property Name As String
  overload: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Name*
  implements:
  - VRBuilder.Core.INamedData.Name
  attributes:
  - type: System.Runtime.Serialization.IgnoreDataMemberAttribute
    ctor: System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: VRBuilder.Core.Behaviors
  commentId: N:VRBuilder.Core.Behaviors
  name: VRBuilder.Core.Behaviors
  nameWithType: VRBuilder.Core.Behaviors
  fullName: VRBuilder.Core.Behaviors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Behaviors.IBehaviorData
  commentId: T:VRBuilder.Core.Behaviors.IBehaviorData
  parent: VRBuilder.Core.Behaviors
  name: IBehaviorData
  nameWithType: IBehaviorData
  fullName: VRBuilder.Core.Behaviors.IBehaviorData
- uid: VRBuilder.Core.INamedData
  commentId: T:VRBuilder.Core.INamedData
  parent: VRBuilder.Core
  name: INamedData
  nameWithType: INamedData
  fullName: VRBuilder.Core.INamedData
- uid: VRBuilder.Core.IData
  commentId: T:VRBuilder.Core.IData
  parent: VRBuilder.Core
  name: IData
  nameWithType: IData
  fullName: VRBuilder.Core.IData
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.TargetObject*
  commentId: Overload:VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.TargetObject
  name: TargetObject
  nameWithType: SetParentBehavior.EntityData.TargetObject
  fullName: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.TargetObject
- uid: VRBuilder.Core.SceneObjects.SingleSceneObjectReference
  commentId: T:VRBuilder.Core.SceneObjects.SingleSceneObjectReference
  parent: VRBuilder.Core.SceneObjects
  name: SingleSceneObjectReference
  nameWithType: SingleSceneObjectReference
  fullName: VRBuilder.Core.SceneObjects.SingleSceneObjectReference
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Target*
  commentId: Overload:VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Target
  name: Target
  nameWithType: SetParentBehavior.EntityData.Target
  fullName: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Target
- uid: VRBuilder.Core.SceneObjects.SceneObjectReference
  commentId: T:VRBuilder.Core.SceneObjects.SceneObjectReference
  parent: VRBuilder.Core.SceneObjects
  name: SceneObjectReference
  nameWithType: SceneObjectReference
  fullName: VRBuilder.Core.SceneObjects.SceneObjectReference
- uid: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.ParentObject*
  commentId: Overload:VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.ParentObject
  name: ParentObject
  nameWithType: SetParentBehavior.EntityData.ParentObject
  fullName: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.ParentObject
- uid: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Parent*
  commentId: Overload:VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Parent
  name: Parent
  nameWithType: SetParentBehavior.EntityData.Parent
  fullName: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Parent
- uid: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.SnapToParentTransform*
  commentId: Overload:VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.SnapToParentTransform
  name: SnapToParentTransform
  nameWithType: SetParentBehavior.EntityData.SnapToParentTransform
  fullName: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.SnapToParentTransform
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Metadata*
  commentId: Overload:VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Metadata
  name: Metadata
  nameWithType: SetParentBehavior.EntityData.Metadata
  fullName: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Metadata
- uid: VRBuilder.Core.IData.Metadata
  commentId: P:VRBuilder.Core.IData.Metadata
  parent: VRBuilder.Core.IData
  name: Metadata
  nameWithType: IData.Metadata
  fullName: VRBuilder.Core.IData.Metadata
- uid: VRBuilder.Core.Metadata
  commentId: T:VRBuilder.Core.Metadata
  parent: VRBuilder.Core
  name: Metadata
  nameWithType: Metadata
  fullName: VRBuilder.Core.Metadata
- uid: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Name*
  commentId: Overload:VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Name
  name: Name
  nameWithType: SetParentBehavior.EntityData.Name
  fullName: VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.Name
- uid: VRBuilder.Core.INamedData.Name
  commentId: P:VRBuilder.Core.INamedData.Name
  parent: VRBuilder.Core.INamedData
  name: Name
  nameWithType: INamedData.Name
  fullName: VRBuilder.Core.INamedData.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
