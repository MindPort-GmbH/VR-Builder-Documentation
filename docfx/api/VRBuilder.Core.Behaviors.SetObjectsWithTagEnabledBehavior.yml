### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior
  commentId: T:VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior
  id: SetObjectsWithTagEnabledBehavior
  parent: VRBuilder.Core.Behaviors
  children:
  - VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.#ctor
  - VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.#ctor(System.Boolean)
  - VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.#ctor(System.Guid,System.Boolean,System.Boolean)
  - VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.GetActivatingProcess
  - VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.GetDeactivatingProcess
  langs:
  - csharp
  - vb
  name: SetObjectsWithTagEnabledBehavior
  nameWithType: SetObjectsWithTagEnabledBehavior
  fullName: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior
  type: Class
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetObjectsWithTagEnabledBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetObjectsWithTagEnabledBehavior
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetObjectsWithTagEnabledBehavior.cs
    startLine: 13
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  summary: "\nSets enabled or disabled all objects with a given tag.\n"
  example: []
  syntax:
    content: >-
      [DataContract(IsReference = true)]

      [Obsolete("Use SetObjectsEnabledBehavior instead.")]

      public class SetObjectsWithTagEnabledBehavior : Behavior<SetObjectsWithTagEnabledBehavior.EntityData>, IDataOwner<SetObjectsWithTagEnabledBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior>
    content.vb: >-
      <DataContract(IsReference:=True)>

      <Obsolete("Use SetObjectsEnabledBehavior instead.")>

      Public Class SetObjectsWithTagEnabledBehavior

          Inherits Behavior(Of SetObjectsWithTagEnabledBehavior.EntityData)

          Implements IDataOwner(Of SetObjectsWithTagEnabledBehavior.EntityData), IBehavior, IEntity, IDataOwner(Of IBehaviorData), IDataOwner, IClonable(Of IBehavior)
  inheritance:
  - System.Object
  - VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  - VRBuilder.Core.Behaviors.Behavior{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  implements:
  - VRBuilder.Core.IDataOwner{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  - VRBuilder.Core.Behaviors.IBehavior
  - VRBuilder.Core.IEntity
  - VRBuilder.Core.IDataOwner{VRBuilder.Core.Behaviors.IBehaviorData}
  - VRBuilder.Core.IDataOwner
  - VRBuilder.Core.IClonable{VRBuilder.Core.Behaviors.IBehavior}
  inheritedMembers:
  - VRBuilder.Core.Behaviors.Behavior{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.VRBuilder#Core#IDataOwner{VRBuilder#Core#Behaviors#IBehaviorData}#Data
  - VRBuilder.Core.Behaviors.Behavior{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.Clone
  - VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.Data
  - VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.VRBuilder#Core#IDataOwner#Data
  - VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.LifeCycle
  - VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.Parent
  - VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.GetActiveProcess
  - VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.GetConfigurator
  - VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  - VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.Update
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use SetObjectsEnabledBehavior instead.
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.#ctor
  commentId: M:VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.#ctor
  id: '#ctor'
  parent: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior
  langs:
  - csharp
  - vb
  name: SetObjectsWithTagEnabledBehavior()
  nameWithType: SetObjectsWithTagEnabledBehavior.SetObjectsWithTagEnabledBehavior()
  fullName: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.SetObjectsWithTagEnabledBehavior()
  type: Constructor
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetObjectsWithTagEnabledBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetObjectsWithTagEnabledBehavior.cs
    startLine: 95
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  syntax:
    content: >-
      [JsonConstructor]

      public SetObjectsWithTagEnabledBehavior()
    content.vb: >-
      <JsonConstructor>

      Public Sub New
  overload: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.#ctor*
  attributes:
  - type: Newtonsoft.Json.JsonConstructorAttribute
    ctor: Newtonsoft.Json.JsonConstructorAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.#ctor(System.Boolean)
  commentId: M:VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior
  langs:
  - csharp
  - vb
  name: SetObjectsWithTagEnabledBehavior(Boolean)
  nameWithType: SetObjectsWithTagEnabledBehavior.SetObjectsWithTagEnabledBehavior(Boolean)
  fullName: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.SetObjectsWithTagEnabledBehavior(System.Boolean)
  type: Constructor
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetObjectsWithTagEnabledBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetObjectsWithTagEnabledBehavior.cs
    startLine: 100
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  syntax:
    content: public SetObjectsWithTagEnabledBehavior(bool setEnabled)
    parameters:
    - id: setEnabled
      type: System.Boolean
    content.vb: Public Sub New(setEnabled As Boolean)
  overload: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.#ctor(System.Guid,System.Boolean,System.Boolean)
  commentId: M:VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.#ctor(System.Guid,System.Boolean,System.Boolean)
  id: '#ctor(System.Guid,System.Boolean,System.Boolean)'
  parent: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior
  langs:
  - csharp
  - vb
  name: SetObjectsWithTagEnabledBehavior(Guid, Boolean, Boolean)
  nameWithType: SetObjectsWithTagEnabledBehavior.SetObjectsWithTagEnabledBehavior(Guid, Boolean, Boolean)
  fullName: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.SetObjectsWithTagEnabledBehavior(System.Guid, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetObjectsWithTagEnabledBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetObjectsWithTagEnabledBehavior.cs
    startLine: 104
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  syntax:
    content: public SetObjectsWithTagEnabledBehavior(Guid objectId, bool setEnabled, bool revertOnDeactivate = false)
    parameters:
    - id: objectId
      type: System.Guid
    - id: setEnabled
      type: System.Boolean
    - id: revertOnDeactivate
      type: System.Boolean
    content.vb: Public Sub New(objectId As Guid, setEnabled As Boolean, revertOnDeactivate As Boolean = False)
  overload: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.GetActivatingProcess
  commentId: M:VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.GetActivatingProcess
  id: GetActivatingProcess
  parent: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior
  langs:
  - csharp
  - vb
  name: GetActivatingProcess()
  nameWithType: SetObjectsWithTagEnabledBehavior.GetActivatingProcess()
  fullName: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.GetActivatingProcess()
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetObjectsWithTagEnabledBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetActivatingProcess
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetObjectsWithTagEnabledBehavior.cs
    startLine: 112
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  example: []
  syntax:
    content: public override IStageProcess GetActivatingProcess()
    return:
      type: VRBuilder.Core.IStageProcess
    content.vb: Public Overrides Function GetActivatingProcess As IStageProcess
  overridden: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.GetActivatingProcess
  overload: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.GetActivatingProcess*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.GetDeactivatingProcess
  id: GetDeactivatingProcess
  parent: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior
  langs:
  - csharp
  - vb
  name: GetDeactivatingProcess()
  nameWithType: SetObjectsWithTagEnabledBehavior.GetDeactivatingProcess()
  fullName: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.GetDeactivatingProcess()
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetObjectsWithTagEnabledBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetDeactivatingProcess
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/SetObjectsWithTagEnabledBehavior.cs
    startLine: 117
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  syntax:
    content: public override IStageProcess GetDeactivatingProcess()
    return:
      type: VRBuilder.Core.IStageProcess
    content.vb: Public Overrides Function GetDeactivatingProcess As IStageProcess
  overridden: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.GetDeactivatingProcess
  overload: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.GetDeactivatingProcess*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VRBuilder.Core.Behaviors
  commentId: N:VRBuilder.Core.Behaviors
  name: VRBuilder.Core.Behaviors
  nameWithType: VRBuilder.Core.Behaviors
  fullName: VRBuilder.Core.Behaviors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  commentId: T:VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.Entity`1
  name: Entity<SetObjectsWithTagEnabledBehavior.EntityData>
  nameWithType: Entity<SetObjectsWithTagEnabledBehavior.EntityData>
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>
  nameWithType.vb: Entity(Of SetObjectsWithTagEnabledBehavior.EntityData)
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData)
  name.vb: Entity(Of SetObjectsWithTagEnabledBehavior.EntityData)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: VRBuilder.Core.Entity
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData
    name: SetObjectsWithTagEnabledBehavior.EntityData
    nameWithType: SetObjectsWithTagEnabledBehavior.EntityData
    fullName: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: VRBuilder.Core.Entity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData
    name: SetObjectsWithTagEnabledBehavior.EntityData
    nameWithType: SetObjectsWithTagEnabledBehavior.EntityData
    fullName: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Behaviors.Behavior{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  commentId: T:VRBuilder.Core.Behaviors.Behavior{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  parent: VRBuilder.Core.Behaviors
  definition: VRBuilder.Core.Behaviors.Behavior`1
  name: Behavior<SetObjectsWithTagEnabledBehavior.EntityData>
  nameWithType: Behavior<SetObjectsWithTagEnabledBehavior.EntityData>
  fullName: VRBuilder.Core.Behaviors.Behavior<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>
  nameWithType.vb: Behavior(Of SetObjectsWithTagEnabledBehavior.EntityData)
  fullName.vb: VRBuilder.Core.Behaviors.Behavior(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData)
  name.vb: Behavior(Of SetObjectsWithTagEnabledBehavior.EntityData)
  spec.csharp:
  - uid: VRBuilder.Core.Behaviors.Behavior`1
    name: Behavior
    nameWithType: Behavior
    fullName: VRBuilder.Core.Behaviors.Behavior
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData
    name: SetObjectsWithTagEnabledBehavior.EntityData
    nameWithType: SetObjectsWithTagEnabledBehavior.EntityData
    fullName: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Behaviors.Behavior`1
    name: Behavior
    nameWithType: Behavior
    fullName: VRBuilder.Core.Behaviors.Behavior
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData
    name: SetObjectsWithTagEnabledBehavior.EntityData
    nameWithType: SetObjectsWithTagEnabledBehavior.EntityData
    fullName: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IDataOwner{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  commentId: T:VRBuilder.Core.IDataOwner{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IDataOwner`1
  name: IDataOwner<SetObjectsWithTagEnabledBehavior.EntityData>
  nameWithType: IDataOwner<SetObjectsWithTagEnabledBehavior.EntityData>
  fullName: VRBuilder.Core.IDataOwner<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>
  nameWithType.vb: IDataOwner(Of SetObjectsWithTagEnabledBehavior.EntityData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData)
  name.vb: IDataOwner(Of SetObjectsWithTagEnabledBehavior.EntityData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData
    name: SetObjectsWithTagEnabledBehavior.EntityData
    nameWithType: SetObjectsWithTagEnabledBehavior.EntityData
    fullName: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData
    name: SetObjectsWithTagEnabledBehavior.EntityData
    nameWithType: SetObjectsWithTagEnabledBehavior.EntityData
    fullName: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Behaviors.IBehavior
  commentId: T:VRBuilder.Core.Behaviors.IBehavior
  parent: VRBuilder.Core.Behaviors
  name: IBehavior
  nameWithType: IBehavior
  fullName: VRBuilder.Core.Behaviors.IBehavior
- uid: VRBuilder.Core.IEntity
  commentId: T:VRBuilder.Core.IEntity
  parent: VRBuilder.Core
  name: IEntity
  nameWithType: IEntity
  fullName: VRBuilder.Core.IEntity
- uid: VRBuilder.Core.IDataOwner{VRBuilder.Core.Behaviors.IBehaviorData}
  commentId: T:VRBuilder.Core.IDataOwner{VRBuilder.Core.Behaviors.IBehaviorData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IDataOwner`1
  name: IDataOwner<IBehaviorData>
  nameWithType: IDataOwner<IBehaviorData>
  fullName: VRBuilder.Core.IDataOwner<VRBuilder.Core.Behaviors.IBehaviorData>
  nameWithType.vb: IDataOwner(Of IBehaviorData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of VRBuilder.Core.Behaviors.IBehaviorData)
  name.vb: IDataOwner(Of IBehaviorData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Behaviors.IBehaviorData
    name: IBehaviorData
    nameWithType: IBehaviorData
    fullName: VRBuilder.Core.Behaviors.IBehaviorData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Behaviors.IBehaviorData
    name: IBehaviorData
    nameWithType: IBehaviorData
    fullName: VRBuilder.Core.Behaviors.IBehaviorData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IDataOwner
  commentId: T:VRBuilder.Core.IDataOwner
  parent: VRBuilder.Core
  name: IDataOwner
  nameWithType: IDataOwner
  fullName: VRBuilder.Core.IDataOwner
- uid: VRBuilder.Core.IClonable{VRBuilder.Core.Behaviors.IBehavior}
  commentId: T:VRBuilder.Core.IClonable{VRBuilder.Core.Behaviors.IBehavior}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IClonable`1
  name: IClonable<IBehavior>
  nameWithType: IClonable<IBehavior>
  fullName: VRBuilder.Core.IClonable<VRBuilder.Core.Behaviors.IBehavior>
  nameWithType.vb: IClonable(Of IBehavior)
  fullName.vb: VRBuilder.Core.IClonable(Of VRBuilder.Core.Behaviors.IBehavior)
  name.vb: IClonable(Of IBehavior)
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Behaviors.IBehavior
    name: IBehavior
    nameWithType: IBehavior
    fullName: VRBuilder.Core.Behaviors.IBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Behaviors.IBehavior
    name: IBehavior
    nameWithType: IBehavior
    fullName: VRBuilder.Core.Behaviors.IBehavior
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Behaviors.Behavior{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.VRBuilder#Core#IDataOwner{VRBuilder#Core#Behaviors#IBehaviorData}#Data
  commentId: P:VRBuilder.Core.Behaviors.Behavior{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.VRBuilder#Core#IDataOwner{VRBuilder#Core#Behaviors#IBehaviorData}#Data
  parent: VRBuilder.Core.Behaviors.Behavior{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  definition: VRBuilder.Core.Behaviors.Behavior`1.VRBuilder#Core#IDataOwner{VRBuilder#Core#Behaviors#IBehaviorData}#Data
  name: IDataOwner<IBehaviorData>.Data
  nameWithType: Behavior<SetObjectsWithTagEnabledBehavior.EntityData>.IDataOwner<IBehaviorData>.Data
  fullName: VRBuilder.Core.Behaviors.Behavior<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.VRBuilder.Core.IDataOwner<VRBuilder.Core.Behaviors.IBehaviorData>.Data
  nameWithType.vb: Behavior(Of SetObjectsWithTagEnabledBehavior.EntityData).VRBuilder.Core.IDataOwner<VRBuilder.Core.Behaviors.IBehaviorData>.Data
  fullName.vb: VRBuilder.Core.Behaviors.Behavior(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData).VRBuilder.Core.IDataOwner<VRBuilder.Core.Behaviors.IBehaviorData>.Data
  name.vb: VRBuilder.Core.IDataOwner<VRBuilder.Core.Behaviors.IBehaviorData>.Data
- uid: VRBuilder.Core.Behaviors.Behavior{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.Clone
  commentId: M:VRBuilder.Core.Behaviors.Behavior{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.Clone
  parent: VRBuilder.Core.Behaviors.Behavior{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  definition: VRBuilder.Core.Behaviors.Behavior`1.Clone
  name: Clone()
  nameWithType: Behavior<SetObjectsWithTagEnabledBehavior.EntityData>.Clone()
  fullName: VRBuilder.Core.Behaviors.Behavior<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.Clone()
  nameWithType.vb: Behavior(Of SetObjectsWithTagEnabledBehavior.EntityData).Clone()
  fullName.vb: VRBuilder.Core.Behaviors.Behavior(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData).Clone()
  spec.csharp:
  - uid: VRBuilder.Core.Behaviors.Behavior`1.Clone
    name: Clone
    nameWithType: Behavior<SetObjectsWithTagEnabledBehavior.EntityData>.Clone
    fullName: VRBuilder.Core.Behaviors.Behavior<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Behaviors.Behavior`1.Clone
    name: Clone
    nameWithType: Behavior(Of SetObjectsWithTagEnabledBehavior.EntityData).Clone
    fullName: VRBuilder.Core.Behaviors.Behavior(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.Data
  commentId: P:VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.Data
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  definition: VRBuilder.Core.Entity`1.Data
  name: Data
  nameWithType: Entity<SetObjectsWithTagEnabledBehavior.EntityData>.Data
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.Data
  nameWithType.vb: Entity(Of SetObjectsWithTagEnabledBehavior.EntityData).Data
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData).Data
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.VRBuilder#Core#IDataOwner#Data
  commentId: P:VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.VRBuilder#Core#IDataOwner#Data
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  definition: VRBuilder.Core.Entity`1.VRBuilder#Core#IDataOwner#Data
  name: IDataOwner.Data
  nameWithType: Entity<SetObjectsWithTagEnabledBehavior.EntityData>.IDataOwner.Data
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.VRBuilder.Core.IDataOwner.Data
  nameWithType.vb: Entity(Of SetObjectsWithTagEnabledBehavior.EntityData).VRBuilder.Core.IDataOwner.Data
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData).VRBuilder.Core.IDataOwner.Data
  name.vb: VRBuilder.Core.IDataOwner.Data
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.LifeCycle
  commentId: P:VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.LifeCycle
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  definition: VRBuilder.Core.Entity`1.LifeCycle
  name: LifeCycle
  nameWithType: Entity<SetObjectsWithTagEnabledBehavior.EntityData>.LifeCycle
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.LifeCycle
  nameWithType.vb: Entity(Of SetObjectsWithTagEnabledBehavior.EntityData).LifeCycle
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData).LifeCycle
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.Parent
  commentId: P:VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.Parent
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  definition: VRBuilder.Core.Entity`1.Parent
  name: Parent
  nameWithType: Entity<SetObjectsWithTagEnabledBehavior.EntityData>.Parent
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.Parent
  nameWithType.vb: Entity(Of SetObjectsWithTagEnabledBehavior.EntityData).Parent
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData).Parent
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.GetActiveProcess
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.GetActiveProcess
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  definition: VRBuilder.Core.Entity`1.GetActiveProcess
  name: GetActiveProcess()
  nameWithType: Entity<SetObjectsWithTagEnabledBehavior.EntityData>.GetActiveProcess()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.GetActiveProcess()
  nameWithType.vb: Entity(Of SetObjectsWithTagEnabledBehavior.EntityData).GetActiveProcess()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData).GetActiveProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    nameWithType: Entity<SetObjectsWithTagEnabledBehavior.EntityData>.GetActiveProcess
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    nameWithType: Entity(Of SetObjectsWithTagEnabledBehavior.EntityData).GetActiveProcess
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData).GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.GetConfigurator
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.GetConfigurator
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  definition: VRBuilder.Core.Entity`1.GetConfigurator
  name: GetConfigurator()
  nameWithType: Entity<SetObjectsWithTagEnabledBehavior.EntityData>.GetConfigurator()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.GetConfigurator()
  nameWithType.vb: Entity(Of SetObjectsWithTagEnabledBehavior.EntityData).GetConfigurator()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData).GetConfigurator()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    nameWithType: Entity<SetObjectsWithTagEnabledBehavior.EntityData>.GetConfigurator
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.GetConfigurator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    nameWithType: Entity(Of SetObjectsWithTagEnabledBehavior.EntityData).GetConfigurator
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData).GetConfigurator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  definition: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  name: Configure(IMode)
  nameWithType: Entity<SetObjectsWithTagEnabledBehavior.EntityData>.Configure(IMode)
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  nameWithType.vb: Entity(Of SetObjectsWithTagEnabledBehavior.EntityData).Configure(IMode)
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData).Configure(VRBuilder.Core.Configuration.Modes.IMode)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: Entity<SetObjectsWithTagEnabledBehavior.EntityData>.Configure
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: Entity(Of SetObjectsWithTagEnabledBehavior.EntityData).Configure
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.Update
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.Update
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  definition: VRBuilder.Core.Entity`1.Update
  name: Update()
  nameWithType: Entity<SetObjectsWithTagEnabledBehavior.EntityData>.Update()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.Update()
  nameWithType.vb: Entity(Of SetObjectsWithTagEnabledBehavior.EntityData).Update()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData).Update()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    nameWithType: Entity<SetObjectsWithTagEnabledBehavior.EntityData>.Update
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    nameWithType: Entity(Of SetObjectsWithTagEnabledBehavior.EntityData).Update
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Entity`1
  commentId: T:VRBuilder.Core.Entity`1
  name: Entity<TData>
  nameWithType: Entity<TData>
  fullName: VRBuilder.Core.Entity<TData>
  nameWithType.vb: Entity(Of TData)
  fullName.vb: VRBuilder.Core.Entity(Of TData)
  name.vb: Entity(Of TData)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: VRBuilder.Core.Entity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: VRBuilder.Core.Entity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Core.Behaviors.Behavior`1
  commentId: T:VRBuilder.Core.Behaviors.Behavior`1
  name: Behavior<TData>
  nameWithType: Behavior<TData>
  fullName: VRBuilder.Core.Behaviors.Behavior<TData>
  nameWithType.vb: Behavior(Of TData)
  fullName.vb: VRBuilder.Core.Behaviors.Behavior(Of TData)
  name.vb: Behavior(Of TData)
  spec.csharp:
  - uid: VRBuilder.Core.Behaviors.Behavior`1
    name: Behavior
    nameWithType: Behavior
    fullName: VRBuilder.Core.Behaviors.Behavior
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Behaviors.Behavior`1
    name: Behavior
    nameWithType: Behavior
    fullName: VRBuilder.Core.Behaviors.Behavior
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IDataOwner`1
  commentId: T:VRBuilder.Core.IDataOwner`1
  name: IDataOwner<TData>
  nameWithType: IDataOwner<TData>
  fullName: VRBuilder.Core.IDataOwner<TData>
  nameWithType.vb: IDataOwner(Of TData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of TData)
  name.vb: IDataOwner(Of TData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IClonable`1
  commentId: T:VRBuilder.Core.IClonable`1
  name: IClonable<T>
  nameWithType: IClonable<T>
  fullName: VRBuilder.Core.IClonable<T>
  nameWithType.vb: IClonable(Of T)
  fullName.vb: VRBuilder.Core.IClonable(Of T)
  name.vb: IClonable(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Behaviors.Behavior`1.VRBuilder#Core#IDataOwner{VRBuilder#Core#Behaviors#IBehaviorData}#Data
  commentId: P:VRBuilder.Core.Behaviors.Behavior`1.VRBuilder#Core#IDataOwner{VRBuilder#Core#Behaviors#IBehaviorData}#Data
  name: IDataOwner<IBehaviorData>.Data
  nameWithType: Behavior<TData>.IDataOwner<IBehaviorData>.Data
  fullName: VRBuilder.Core.Behaviors.Behavior<TData>.VRBuilder.Core.IDataOwner<VRBuilder.Core.Behaviors.IBehaviorData>.Data
  nameWithType.vb: Behavior(Of TData).VRBuilder.Core.IDataOwner<VRBuilder.Core.Behaviors.IBehaviorData>.Data
  fullName.vb: VRBuilder.Core.Behaviors.Behavior(Of TData).VRBuilder.Core.IDataOwner<VRBuilder.Core.Behaviors.IBehaviorData>.Data
  name.vb: VRBuilder.Core.IDataOwner<VRBuilder.Core.Behaviors.IBehaviorData>.Data
- uid: VRBuilder.Core.Behaviors.Behavior`1.Clone
  commentId: M:VRBuilder.Core.Behaviors.Behavior`1.Clone
  name: Clone()
  nameWithType: Behavior<TData>.Clone()
  fullName: VRBuilder.Core.Behaviors.Behavior<TData>.Clone()
  nameWithType.vb: Behavior(Of TData).Clone()
  fullName.vb: VRBuilder.Core.Behaviors.Behavior(Of TData).Clone()
  spec.csharp:
  - uid: VRBuilder.Core.Behaviors.Behavior`1.Clone
    name: Clone
    nameWithType: Behavior<TData>.Clone
    fullName: VRBuilder.Core.Behaviors.Behavior<TData>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Behaviors.Behavior`1.Clone
    name: Clone
    nameWithType: Behavior(Of TData).Clone
    fullName: VRBuilder.Core.Behaviors.Behavior(Of TData).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.Data
  commentId: P:VRBuilder.Core.Entity`1.Data
  name: Data
  nameWithType: Entity<TData>.Data
  fullName: VRBuilder.Core.Entity<TData>.Data
  nameWithType.vb: Entity(Of TData).Data
  fullName.vb: VRBuilder.Core.Entity(Of TData).Data
- uid: VRBuilder.Core.Entity`1.VRBuilder#Core#IDataOwner#Data
  commentId: P:VRBuilder.Core.Entity`1.VRBuilder#Core#IDataOwner#Data
  name: IDataOwner.Data
  nameWithType: Entity<TData>.IDataOwner.Data
  fullName: VRBuilder.Core.Entity<TData>.VRBuilder.Core.IDataOwner.Data
  nameWithType.vb: Entity(Of TData).VRBuilder.Core.IDataOwner.Data
  fullName.vb: VRBuilder.Core.Entity(Of TData).VRBuilder.Core.IDataOwner.Data
  name.vb: VRBuilder.Core.IDataOwner.Data
- uid: VRBuilder.Core.Entity`1.LifeCycle
  commentId: P:VRBuilder.Core.Entity`1.LifeCycle
  name: LifeCycle
  nameWithType: Entity<TData>.LifeCycle
  fullName: VRBuilder.Core.Entity<TData>.LifeCycle
  nameWithType.vb: Entity(Of TData).LifeCycle
  fullName.vb: VRBuilder.Core.Entity(Of TData).LifeCycle
- uid: VRBuilder.Core.Entity`1.Parent
  commentId: P:VRBuilder.Core.Entity`1.Parent
  name: Parent
  nameWithType: Entity<TData>.Parent
  fullName: VRBuilder.Core.Entity<TData>.Parent
  nameWithType.vb: Entity(Of TData).Parent
  fullName.vb: VRBuilder.Core.Entity(Of TData).Parent
- uid: VRBuilder.Core.Entity`1.GetActiveProcess
  commentId: M:VRBuilder.Core.Entity`1.GetActiveProcess
  name: GetActiveProcess()
  nameWithType: Entity<TData>.GetActiveProcess()
  fullName: VRBuilder.Core.Entity<TData>.GetActiveProcess()
  nameWithType.vb: Entity(Of TData).GetActiveProcess()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetActiveProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    nameWithType: Entity<TData>.GetActiveProcess
    fullName: VRBuilder.Core.Entity<TData>.GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    nameWithType: Entity(Of TData).GetActiveProcess
    fullName: VRBuilder.Core.Entity(Of TData).GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.GetConfigurator
  commentId: M:VRBuilder.Core.Entity`1.GetConfigurator
  name: GetConfigurator()
  nameWithType: Entity<TData>.GetConfigurator()
  fullName: VRBuilder.Core.Entity<TData>.GetConfigurator()
  nameWithType.vb: Entity(Of TData).GetConfigurator()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetConfigurator()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    nameWithType: Entity<TData>.GetConfigurator
    fullName: VRBuilder.Core.Entity<TData>.GetConfigurator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    nameWithType: Entity(Of TData).GetConfigurator
    fullName: VRBuilder.Core.Entity(Of TData).GetConfigurator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  name: Configure(IMode)
  nameWithType: Entity<TData>.Configure(IMode)
  fullName: VRBuilder.Core.Entity<TData>.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  nameWithType.vb: Entity(Of TData).Configure(IMode)
  fullName.vb: VRBuilder.Core.Entity(Of TData).Configure(VRBuilder.Core.Configuration.Modes.IMode)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: Entity<TData>.Configure
    fullName: VRBuilder.Core.Entity<TData>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: Entity(Of TData).Configure
    fullName: VRBuilder.Core.Entity(Of TData).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.Update
  commentId: M:VRBuilder.Core.Entity`1.Update
  name: Update()
  nameWithType: Entity<TData>.Update()
  fullName: VRBuilder.Core.Entity<TData>.Update()
  nameWithType.vb: Entity(Of TData).Update()
  fullName.vb: VRBuilder.Core.Entity(Of TData).Update()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    nameWithType: Entity<TData>.Update
    fullName: VRBuilder.Core.Entity<TData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    nameWithType: Entity(Of TData).Update
    fullName: VRBuilder.Core.Entity(Of TData).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.#ctor*
  commentId: Overload:VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.#ctor
  name: SetObjectsWithTagEnabledBehavior
  nameWithType: SetObjectsWithTagEnabledBehavior.SetObjectsWithTagEnabledBehavior
  fullName: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.SetObjectsWithTagEnabledBehavior
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.GetActivatingProcess
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.GetActivatingProcess
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  definition: VRBuilder.Core.Entity`1.GetActivatingProcess
  name: GetActivatingProcess()
  nameWithType: Entity<SetObjectsWithTagEnabledBehavior.EntityData>.GetActivatingProcess()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.GetActivatingProcess()
  nameWithType.vb: Entity(Of SetObjectsWithTagEnabledBehavior.EntityData).GetActivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData).GetActivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: Entity<SetObjectsWithTagEnabledBehavior.EntityData>.GetActivatingProcess
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: Entity(Of SetObjectsWithTagEnabledBehavior.EntityData).GetActivatingProcess
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData).GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.GetActivatingProcess*
  commentId: Overload:VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.GetActivatingProcess
  name: GetActivatingProcess
  nameWithType: SetObjectsWithTagEnabledBehavior.GetActivatingProcess
  fullName: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.GetActivatingProcess
- uid: VRBuilder.Core.IStageProcess
  commentId: T:VRBuilder.Core.IStageProcess
  parent: VRBuilder.Core
  name: IStageProcess
  nameWithType: IStageProcess
  fullName: VRBuilder.Core.IStageProcess
- uid: VRBuilder.Core.Entity`1.GetActivatingProcess
  commentId: M:VRBuilder.Core.Entity`1.GetActivatingProcess
  name: GetActivatingProcess()
  nameWithType: Entity<TData>.GetActivatingProcess()
  fullName: VRBuilder.Core.Entity<TData>.GetActivatingProcess()
  nameWithType.vb: Entity(Of TData).GetActivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetActivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: Entity<TData>.GetActivatingProcess
    fullName: VRBuilder.Core.Entity<TData>.GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: Entity(Of TData).GetActivatingProcess
    fullName: VRBuilder.Core.Entity(Of TData).GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}.GetDeactivatingProcess
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData}
  definition: VRBuilder.Core.Entity`1.GetDeactivatingProcess
  name: GetDeactivatingProcess()
  nameWithType: Entity<SetObjectsWithTagEnabledBehavior.EntityData>.GetDeactivatingProcess()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.GetDeactivatingProcess()
  nameWithType.vb: Entity(Of SetObjectsWithTagEnabledBehavior.EntityData).GetDeactivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData).GetDeactivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: Entity<SetObjectsWithTagEnabledBehavior.EntityData>.GetDeactivatingProcess
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: Entity(Of SetObjectsWithTagEnabledBehavior.EntityData).GetDeactivatingProcess
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData).GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.GetDeactivatingProcess*
  commentId: Overload:VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.GetDeactivatingProcess
  name: GetDeactivatingProcess
  nameWithType: SetObjectsWithTagEnabledBehavior.GetDeactivatingProcess
  fullName: VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.GetDeactivatingProcess
- uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.Entity`1.GetDeactivatingProcess
  name: GetDeactivatingProcess()
  nameWithType: Entity<TData>.GetDeactivatingProcess()
  fullName: VRBuilder.Core.Entity<TData>.GetDeactivatingProcess()
  nameWithType.vb: Entity(Of TData).GetDeactivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetDeactivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: Entity<TData>.GetDeactivatingProcess
    fullName: VRBuilder.Core.Entity<TData>.GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: Entity(Of TData).GetDeactivatingProcess
    fullName: VRBuilder.Core.Entity(Of TData).GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
