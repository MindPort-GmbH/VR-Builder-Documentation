### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Configuration.Modes.IMode
  commentId: T:VRBuilder.Core.Configuration.Modes.IMode
  id: IMode
  parent: VRBuilder.Core.Configuration.Modes
  children:
  - VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped(System.Type)
  - VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped``1
  - VRBuilder.Core.Configuration.Modes.IMode.ContainsParameter``1(System.String)
  - VRBuilder.Core.Configuration.Modes.IMode.GetParameter``1(System.String)
  - VRBuilder.Core.Configuration.Modes.IMode.Name
  langs:
  - csharp
  - vb
  name: IMode
  nameWithType: IMode
  fullName: VRBuilder.Core.Configuration.Modes.IMode
  type: Interface
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/IMode.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IMode
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/IMode.cs
    startLine: 11
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: The interface of a process mode. A process mode determines if an entity has to be skipped and provides configurable entities with parameters.
  example: []
  syntax:
    content: public interface IMode
    content.vb: Public Interface IMode
- uid: VRBuilder.Core.Configuration.Modes.IMode.Name
  commentId: P:VRBuilder.Core.Configuration.Modes.IMode.Name
  id: Name
  parent: VRBuilder.Core.Configuration.Modes.IMode
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IMode.Name
  fullName: VRBuilder.Core.Configuration.Modes.IMode.Name
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/IMode.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Name
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/IMode.cs
    startLine: 16
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: The name of this process mode.
  example: []
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: VRBuilder.Core.Configuration.Modes.IMode.Name*
- uid: VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped``1
  commentId: M:VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped``1
  id: CheckIfSkipped``1
  parent: VRBuilder.Core.Configuration.Modes.IMode
  langs:
  - csharp
  - vb
  name: CheckIfSkipped<TOptional>()
  nameWithType: IMode.CheckIfSkipped<TOptional>()
  fullName: VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped<TOptional>()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/IMode.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CheckIfSkipped
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/IMode.cs
    startLine: 22
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: Returns whether the given <xref href="VRBuilder.Core.Configuration.Modes.IOptional" data-throw-if-not-resolved="false"></xref> type should be skipped in this process mode.
  example: []
  syntax:
    content: 'bool CheckIfSkipped<TOptional>() where TOptional : IOptional'
    typeParameters:
    - id: TOptional
    return:
      type: System.Boolean
    content.vb: Function CheckIfSkipped(Of TOptional As IOptional)() As Boolean
  overload: VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped*
  nameWithType.vb: IMode.CheckIfSkipped(Of TOptional)()
  fullName.vb: VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped(Of TOptional)()
  name.vb: CheckIfSkipped(Of TOptional)()
- uid: VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped(System.Type)
  commentId: M:VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped(System.Type)
  id: CheckIfSkipped(System.Type)
  parent: VRBuilder.Core.Configuration.Modes.IMode
  langs:
  - csharp
  - vb
  name: CheckIfSkipped(Type)
  nameWithType: IMode.CheckIfSkipped(Type)
  fullName: VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped(System.Type)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/IMode.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CheckIfSkipped
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/IMode.cs
    startLine: 28
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: Returns whether the given type should be skipped in this process mode.
  example: []
  syntax:
    content: bool CheckIfSkipped(Type type)
    parameters:
    - id: type
      type: System.Type
      description: The type to check.
    return:
      type: System.Boolean
    content.vb: Function CheckIfSkipped(type As Type) As Boolean
  overload: VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped*
- uid: VRBuilder.Core.Configuration.Modes.IMode.GetParameter``1(System.String)
  commentId: M:VRBuilder.Core.Configuration.Modes.IMode.GetParameter``1(System.String)
  id: GetParameter``1(System.String)
  parent: VRBuilder.Core.Configuration.Modes.IMode
  langs:
  - csharp
  - vb
  name: GetParameter<T>(string)
  nameWithType: IMode.GetParameter<T>(string)
  fullName: VRBuilder.Core.Configuration.Modes.IMode.GetParameter<T>(string)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/IMode.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetParameter
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/IMode.cs
    startLine: 36
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: Provides a specific parameter for this mode.
  example: []
  syntax:
    content: T GetParameter<T>(string key)
    parameters:
    - id: key
      type: System.String
      description: Name of the parameter.
    typeParameters:
    - id: T
      description: Type this parameter should be.
    return:
      type: '{T}'
      description: The value for the given key
    content.vb: Function GetParameter(Of T)(key As String) As T
  overload: VRBuilder.Core.Configuration.Modes.IMode.GetParameter*
  nameWithType.vb: IMode.GetParameter(Of T)(String)
  fullName.vb: VRBuilder.Core.Configuration.Modes.IMode.GetParameter(Of T)(String)
  name.vb: GetParameter(Of T)(String)
- uid: VRBuilder.Core.Configuration.Modes.IMode.ContainsParameter``1(System.String)
  commentId: M:VRBuilder.Core.Configuration.Modes.IMode.ContainsParameter``1(System.String)
  id: ContainsParameter``1(System.String)
  parent: VRBuilder.Core.Configuration.Modes.IMode
  langs:
  - csharp
  - vb
  name: ContainsParameter<T>(string)
  nameWithType: IMode.ContainsParameter<T>(string)
  fullName: VRBuilder.Core.Configuration.Modes.IMode.ContainsParameter<T>(string)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/IMode.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ContainsParameter
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/IMode.cs
    startLine: 42
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: Checks if given key exists.
  example: []
  syntax:
    content: bool ContainsParameter<T>(string key)
    parameters:
    - id: key
      type: System.String
      description: Name of the key
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Function ContainsParameter(Of T)(key As String) As Boolean
  overload: VRBuilder.Core.Configuration.Modes.IMode.ContainsParameter*
  nameWithType.vb: IMode.ContainsParameter(Of T)(String)
  fullName.vb: VRBuilder.Core.Configuration.Modes.IMode.ContainsParameter(Of T)(String)
  name.vb: ContainsParameter(Of T)(String)
references:
- uid: VRBuilder.Core.Configuration.Modes
  commentId: N:VRBuilder.Core.Configuration.Modes
  href: VRBuilder.html
  name: VRBuilder.Core.Configuration.Modes
  nameWithType: VRBuilder.Core.Configuration.Modes
  fullName: VRBuilder.Core.Configuration.Modes
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Configuration
    name: Configuration
    href: VRBuilder.Core.Configuration.html
  - name: .
  - uid: VRBuilder.Core.Configuration.Modes
    name: Modes
    href: VRBuilder.Core.Configuration.Modes.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Configuration
    name: Configuration
    href: VRBuilder.Core.Configuration.html
  - name: .
  - uid: VRBuilder.Core.Configuration.Modes
    name: Modes
    href: VRBuilder.Core.Configuration.Modes.html
- uid: VRBuilder.Core.Configuration.Modes.IMode.Name*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.IMode.Name
  href: VRBuilder.Core.Configuration.Modes.IMode.html#VRBuilder_Core_Configuration_Modes_IMode_Name
  name: Name
  nameWithType: IMode.Name
  fullName: VRBuilder.Core.Configuration.Modes.IMode.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Configuration.Modes.IOptional
  commentId: T:VRBuilder.Core.Configuration.Modes.IOptional
  parent: VRBuilder.Core.Configuration.Modes
  href: VRBuilder.Core.Configuration.Modes.IOptional.html
  name: IOptional
  nameWithType: IOptional
  fullName: VRBuilder.Core.Configuration.Modes.IOptional
- uid: VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped
  href: VRBuilder.Core.Configuration.Modes.IMode.html#VRBuilder_Core_Configuration_Modes_IMode_CheckIfSkipped__1
  name: CheckIfSkipped
  nameWithType: IMode.CheckIfSkipped
  fullName: VRBuilder.Core.Configuration.Modes.IMode.CheckIfSkipped
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: VRBuilder.Core.Configuration.Modes.IMode.GetParameter*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.IMode.GetParameter
  href: VRBuilder.Core.Configuration.Modes.IMode.html#VRBuilder_Core_Configuration_Modes_IMode_GetParameter__1_System_String_
  name: GetParameter
  nameWithType: IMode.GetParameter
  fullName: VRBuilder.Core.Configuration.Modes.IMode.GetParameter
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: VRBuilder.Core.Configuration.Modes.IMode.ContainsParameter*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.IMode.ContainsParameter
  href: VRBuilder.Core.Configuration.Modes.IMode.html#VRBuilder_Core_Configuration_Modes_IMode_ContainsParameter__1_System_String_
  name: ContainsParameter
  nameWithType: IMode.ContainsParameter
  fullName: VRBuilder.Core.Configuration.Modes.IMode.ContainsParameter
