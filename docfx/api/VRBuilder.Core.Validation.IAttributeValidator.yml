### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Validation.IAttributeValidator
  commentId: T:VRBuilder.Core.Validation.IAttributeValidator
  id: IAttributeValidator
  parent: VRBuilder.Core.Validation
  children:
  - VRBuilder.Core.Validation.IAttributeValidator.ErrorLevel
  - VRBuilder.Core.Validation.IAttributeValidator.Validate(System.Object)
  langs:
  - csharp
  - vb
  name: IAttributeValidator
  nameWithType: IAttributeValidator
  fullName: VRBuilder.Core.Validation.IAttributeValidator
  type: Interface
  source:
    remote:
      path: Source/Core/Runtime/ProcessValidation/IAttributeValidator.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IAttributeValidator
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessValidation/IAttributeValidator.cs
    startLine: 11
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Validation
  summary: "\nCan be used to validate variables in any EntityData.\n"
  example: []
  syntax:
    content: public interface IAttributeValidator
    content.vb: Public Interface IAttributeValidator
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VRBuilder.Core.Validation.IAttributeValidator.ErrorLevel
  commentId: P:VRBuilder.Core.Validation.IAttributeValidator.ErrorLevel
  id: ErrorLevel
  parent: VRBuilder.Core.Validation.IAttributeValidator
  langs:
  - csharp
  - vb
  name: ErrorLevel
  nameWithType: IAttributeValidator.ErrorLevel
  fullName: VRBuilder.Core.Validation.IAttributeValidator.ErrorLevel
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/ProcessValidation/IAttributeValidator.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ErrorLevel
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessValidation/IAttributeValidator.cs
    startLine: 16
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Validation
  summary: "\nValidationState which will be used if the validation fails.\n"
  example: []
  syntax:
    content: ValidationErrorLevel ErrorLevel { get; }
    parameters: []
    return:
      type: VRBuilder.Core.Validation.ValidationErrorLevel
    content.vb: ReadOnly Property ErrorLevel As ValidationErrorLevel
  overload: VRBuilder.Core.Validation.IAttributeValidator.ErrorLevel*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.Core.Validation.IAttributeValidator.Validate(System.Object)
  commentId: M:VRBuilder.Core.Validation.IAttributeValidator.Validate(System.Object)
  id: Validate(System.Object)
  parent: VRBuilder.Core.Validation.IAttributeValidator
  langs:
  - csharp
  - vb
  name: Validate(Object)
  nameWithType: IAttributeValidator.Validate(Object)
  fullName: VRBuilder.Core.Validation.IAttributeValidator.Validate(System.Object)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/ProcessValidation/IAttributeValidator.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Validate
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessValidation/IAttributeValidator.cs
    startLine: 23
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Validation
  summary: "\nRuns the validation and returns true if there is a problem.\n"
  example: []
  syntax:
    content: List<ReportEntry> Validate(object value)
    parameters:
    - id: value
      type: System.Object
      description: Object which will be validated.
    return:
      type: System.Collections.Generic.List{VRBuilder.Core.Validation.ReportEntry}
      description: Returns a list of report entries.
    content.vb: Function Validate(value As Object) As List(Of ReportEntry)
  overload: VRBuilder.Core.Validation.IAttributeValidator.Validate*
references:
- uid: VRBuilder.Core.Validation
  commentId: N:VRBuilder.Core.Validation
  name: VRBuilder.Core.Validation
  nameWithType: VRBuilder.Core.Validation
  fullName: VRBuilder.Core.Validation
- uid: VRBuilder.Core.Validation.IAttributeValidator.ErrorLevel*
  commentId: Overload:VRBuilder.Core.Validation.IAttributeValidator.ErrorLevel
  name: ErrorLevel
  nameWithType: IAttributeValidator.ErrorLevel
  fullName: VRBuilder.Core.Validation.IAttributeValidator.ErrorLevel
- uid: VRBuilder.Core.Validation.ValidationErrorLevel
  commentId: T:VRBuilder.Core.Validation.ValidationErrorLevel
  parent: VRBuilder.Core.Validation
  name: ValidationErrorLevel
  nameWithType: ValidationErrorLevel
  fullName: VRBuilder.Core.Validation.ValidationErrorLevel
- uid: VRBuilder.Core.Validation.IAttributeValidator.Validate*
  commentId: Overload:VRBuilder.Core.Validation.IAttributeValidator.Validate
  name: Validate
  nameWithType: IAttributeValidator.Validate
  fullName: VRBuilder.Core.Validation.IAttributeValidator.Validate
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.List{VRBuilder.Core.Validation.ReportEntry}
  commentId: T:System.Collections.Generic.List{VRBuilder.Core.Validation.ReportEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ReportEntry>
  nameWithType: List<ReportEntry>
  fullName: System.Collections.Generic.List<VRBuilder.Core.Validation.ReportEntry>
  nameWithType.vb: List(Of ReportEntry)
  fullName.vb: System.Collections.Generic.List(Of VRBuilder.Core.Validation.ReportEntry)
  name.vb: List(Of ReportEntry)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Validation.ReportEntry
    name: ReportEntry
    nameWithType: ReportEntry
    fullName: VRBuilder.Core.Validation.ReportEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Validation.ReportEntry
    name: ReportEntry
    nameWithType: ReportEntry
    fullName: VRBuilder.Core.Validation.ReportEntry
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
