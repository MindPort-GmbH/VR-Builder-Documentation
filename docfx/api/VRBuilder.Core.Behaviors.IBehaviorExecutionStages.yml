### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Behaviors.IBehaviorExecutionStages
  commentId: T:VRBuilder.Core.Behaviors.IBehaviorExecutionStages
  id: IBehaviorExecutionStages
  parent: VRBuilder.Core.Behaviors
  children:
  - VRBuilder.Core.Behaviors.IBehaviorExecutionStages.ExecutionStages
  langs:
  - csharp
  - vb
  name: IBehaviorExecutionStages
  nameWithType: IBehaviorExecutionStages
  fullName: VRBuilder.Core.Behaviors.IBehaviorExecutionStages
  type: Interface
  source:
    remote:
      path: Source/Core/Runtime/Behaviors/IBehaviorExecutionStages.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IBehaviorExecutionStages
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Behaviors/IBehaviorExecutionStages.cs
    startLine: 7
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  summary: "\nData structure to add the possibility to run at specific execution stages\n"
  example: []
  syntax:
    content: public interface IBehaviorExecutionStages
    content.vb: Public Interface IBehaviorExecutionStages
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VRBuilder.Core.Behaviors.IBehaviorExecutionStages.ExecutionStages
  commentId: P:VRBuilder.Core.Behaviors.IBehaviorExecutionStages.ExecutionStages
  id: ExecutionStages
  parent: VRBuilder.Core.Behaviors.IBehaviorExecutionStages
  langs:
  - csharp
  - vb
  name: ExecutionStages
  nameWithType: IBehaviorExecutionStages.ExecutionStages
  fullName: VRBuilder.Core.Behaviors.IBehaviorExecutionStages.ExecutionStages
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Behaviors/IBehaviorExecutionStages.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ExecutionStages
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Behaviors/IBehaviorExecutionStages.cs
    startLine: 12
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  summary: "\nA property that determines if the Behavior should be run at activation or deactivation (or both).\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      BehaviorExecutionStages ExecutionStages { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.Behaviors.BehaviorExecutionStages
    content.vb: >-
      <DataMember>

      Property ExecutionStages As BehaviorExecutionStages
  overload: VRBuilder.Core.Behaviors.IBehaviorExecutionStages.ExecutionStages*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - get
  - set
references:
- uid: VRBuilder.Core.Behaviors
  commentId: N:VRBuilder.Core.Behaviors
  name: VRBuilder.Core.Behaviors
  nameWithType: VRBuilder.Core.Behaviors
  fullName: VRBuilder.Core.Behaviors
- uid: VRBuilder.Core.Behaviors.IBehaviorExecutionStages.ExecutionStages*
  commentId: Overload:VRBuilder.Core.Behaviors.IBehaviorExecutionStages.ExecutionStages
  name: ExecutionStages
  nameWithType: IBehaviorExecutionStages.ExecutionStages
  fullName: VRBuilder.Core.Behaviors.IBehaviorExecutionStages.ExecutionStages
- uid: VRBuilder.Core.Behaviors.BehaviorExecutionStages
  commentId: T:VRBuilder.Core.Behaviors.BehaviorExecutionStages
  parent: VRBuilder.Core.Behaviors
  name: BehaviorExecutionStages
  nameWithType: BehaviorExecutionStages
  fullName: VRBuilder.Core.Behaviors.BehaviorExecutionStages
