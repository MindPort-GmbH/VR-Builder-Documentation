### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.ProcessUtils.ProcessVariable`1
  commentId: T:VRBuilder.Core.ProcessUtils.ProcessVariable`1
  id: ProcessVariable`1
  parent: VRBuilder.Core.ProcessUtils
  children:
  - VRBuilder.Core.ProcessUtils.ProcessVariable`1.#ctor(`0,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)
  - VRBuilder.Core.ProcessUtils.ProcessVariable`1.#ctor(`0,System.Guid,System.Boolean)
  - VRBuilder.Core.ProcessUtils.ProcessVariable`1.ConstValue
  - VRBuilder.Core.ProcessUtils.ProcessVariable`1.IsConst
  - VRBuilder.Core.ProcessUtils.ProcessVariable`1.Property
  - VRBuilder.Core.ProcessUtils.ProcessVariable`1.PropertyReference
  - VRBuilder.Core.ProcessUtils.ProcessVariable`1.ToString
  - VRBuilder.Core.ProcessUtils.ProcessVariable`1.Value
  langs:
  - csharp
  - vb
  name: ProcessVariable<T>
  nameWithType: ProcessVariable<T>
  fullName: VRBuilder.Core.ProcessUtils.ProcessVariable<T>
  type: Struct
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/ProcessVariable.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessVariable
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/ProcessVariable.cs
    startLine: 12
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.ProcessUtils
  summary: "\nStruct for a process variable. Accommodates the value coming from a <xref href=\"VRBuilder.Core.Properties.IDataProperty%601\" data-throw-if-not-resolved=\"false\"></xref>, or being a constant value set e.g. in the Step Inspector.\n"
  example: []
  syntax:
    content: >-
      [DataContract(IsReference = true)]

      public struct ProcessVariable<T>
    typeParameters:
    - id: T
    content.vb: >-
      <DataContract(IsReference:=True)>

      Public Structure ProcessVariable(Of T)
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  nameWithType.vb: ProcessVariable(Of T)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: VRBuilder.Core.ProcessUtils.ProcessVariable(Of T)
  name.vb: ProcessVariable(Of T)
- uid: VRBuilder.Core.ProcessUtils.ProcessVariable`1.ConstValue
  commentId: P:VRBuilder.Core.ProcessUtils.ProcessVariable`1.ConstValue
  id: ConstValue
  parent: VRBuilder.Core.ProcessUtils.ProcessVariable`1
  langs:
  - csharp
  - vb
  name: ConstValue
  nameWithType: ProcessVariable<T>.ConstValue
  fullName: VRBuilder.Core.ProcessUtils.ProcessVariable<T>.ConstValue
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/ProcessVariable.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ConstValue
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/ProcessVariable.cs
    startLine: 18
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.ProcessUtils
  summary: "\nConstant value.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public T ConstValue { readonly get; set;

      }
    parameters: []
    return:
      type: '{T}'
    content.vb: >-
      <DataMember>

      Public Property ConstValue As T
  overload: VRBuilder.Core.ProcessUtils.ProcessVariable`1.ConstValue*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  nameWithType.vb: ProcessVariable(Of T).ConstValue
  modifiers.csharp:
  - public
  - readonly get
  - set
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.ProcessUtils.ProcessVariable(Of T).ConstValue
- uid: VRBuilder.Core.ProcessUtils.ProcessVariable`1.Property
  commentId: P:VRBuilder.Core.ProcessUtils.ProcessVariable`1.Property
  id: Property
  parent: VRBuilder.Core.ProcessUtils.ProcessVariable`1
  langs:
  - csharp
  - vb
  name: Property
  nameWithType: ProcessVariable<T>.Property
  fullName: VRBuilder.Core.ProcessUtils.ProcessVariable<T>.Property
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/ProcessVariable.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Property
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/ProcessVariable.cs
    startLine: 24
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.ProcessUtils
  summary: "\nProperty reference for the variable.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public SingleScenePropertyReference<IDataProperty<T>> Property { readonly get; set;

      }
    parameters: []
    return:
      type: VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}
    content.vb: >-
      <DataMember>

      Public Property Property As SingleScenePropertyReference(Of IDataProperty(Of T))
  overload: VRBuilder.Core.ProcessUtils.ProcessVariable`1.Property*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  nameWithType.vb: ProcessVariable(Of T).Property
  modifiers.csharp:
  - public
  - readonly get
  - set
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.ProcessUtils.ProcessVariable(Of T).Property
- uid: VRBuilder.Core.ProcessUtils.ProcessVariable`1.PropertyReference
  commentId: P:VRBuilder.Core.ProcessUtils.ProcessVariable`1.PropertyReference
  id: PropertyReference
  parent: VRBuilder.Core.ProcessUtils.ProcessVariable`1
  langs:
  - csharp
  - vb
  name: PropertyReference
  nameWithType: ProcessVariable<T>.PropertyReference
  fullName: VRBuilder.Core.ProcessUtils.ProcessVariable<T>.PropertyReference
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/ProcessVariable.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: PropertyReference
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/ProcessVariable.cs
    startLine: 27
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.ProcessUtils
  syntax:
    content: >-
      [DataMember]

      [Obsolete("Use Property instead.")]

      [LegacyProperty("Property")]

      public ScenePropertyReference<IDataProperty<T>> PropertyReference { readonly get; set;

      }
    parameters: []
    return:
      type: VRBuilder.Core.SceneObjects.ScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}
    content.vb: >-
      <DataMember>

      <Obsolete("Use Property instead.")>

      <LegacyProperty("Property")>

      Public Property PropertyReference As ScenePropertyReference(Of IDataProperty(Of T))
  overload: VRBuilder.Core.ProcessUtils.ProcessVariable`1.PropertyReference*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use Property instead.
  - type: VRBuilder.Core.Attributes.LegacyPropertyAttribute
    ctor: VRBuilder.Core.Attributes.LegacyPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Property
  nameWithType.vb: ProcessVariable(Of T).PropertyReference
  modifiers.csharp:
  - public
  - readonly get
  - set
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.ProcessUtils.ProcessVariable(Of T).PropertyReference
- uid: VRBuilder.Core.ProcessUtils.ProcessVariable`1.IsConst
  commentId: P:VRBuilder.Core.ProcessUtils.ProcessVariable`1.IsConst
  id: IsConst
  parent: VRBuilder.Core.ProcessUtils.ProcessVariable`1
  langs:
  - csharp
  - vb
  name: IsConst
  nameWithType: ProcessVariable<T>.IsConst
  fullName: VRBuilder.Core.ProcessUtils.ProcessVariable<T>.IsConst
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/ProcessVariable.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsConst
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/ProcessVariable.cs
    startLine: 35
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.ProcessUtils
  summary: "\nIf true, <xref href=\"VRBuilder.Core.ProcessUtils.ProcessVariable%601.ConstValue\" data-throw-if-not-resolved=\"false\"></xref> is used. Else the value will be fetched from the <xref href=\"VRBuilder.Core.ProcessUtils.ProcessVariable%601.PropertyReference\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool IsConst { readonly get; set;

      }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property IsConst As Boolean
  overload: VRBuilder.Core.ProcessUtils.ProcessVariable`1.IsConst*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  nameWithType.vb: ProcessVariable(Of T).IsConst
  modifiers.csharp:
  - public
  - readonly get
  - set
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.ProcessUtils.ProcessVariable(Of T).IsConst
- uid: VRBuilder.Core.ProcessUtils.ProcessVariable`1.#ctor(`0,System.Guid,System.Boolean)
  commentId: M:VRBuilder.Core.ProcessUtils.ProcessVariable`1.#ctor(`0,System.Guid,System.Boolean)
  id: '#ctor(`0,System.Guid,System.Boolean)'
  parent: VRBuilder.Core.ProcessUtils.ProcessVariable`1
  langs:
  - csharp
  - vb
  name: ProcessVariable(T, Guid, Boolean)
  nameWithType: ProcessVariable<T>.ProcessVariable(T, Guid, Boolean)
  fullName: VRBuilder.Core.ProcessUtils.ProcessVariable<T>.ProcessVariable(T, System.Guid, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/ProcessVariable.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/ProcessVariable.cs
    startLine: 38
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.ProcessUtils
  syntax:
    content: public ProcessVariable(T constValue, Guid referenceId, bool isConst)
    parameters:
    - id: constValue
      type: '{T}'
    - id: referenceId
      type: System.Guid
    - id: isConst
      type: System.Boolean
    content.vb: Public Sub New(constValue As T, referenceId As Guid, isConst As Boolean)
  overload: VRBuilder.Core.ProcessUtils.ProcessVariable`1.#ctor*
  nameWithType.vb: ProcessVariable(Of T).ProcessVariable(T, Guid, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.ProcessUtils.ProcessVariable(Of T).ProcessVariable(T, System.Guid, System.Boolean)
- uid: VRBuilder.Core.ProcessUtils.ProcessVariable`1.#ctor(`0,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)
  commentId: M:VRBuilder.Core.ProcessUtils.ProcessVariable`1.#ctor(`0,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)
  id: '#ctor(`0,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean)'
  parent: VRBuilder.Core.ProcessUtils.ProcessVariable`1
  langs:
  - csharp
  - vb
  name: ProcessVariable(T, IEnumerable<Guid>, Boolean)
  nameWithType: ProcessVariable<T>.ProcessVariable(T, IEnumerable<Guid>, Boolean)
  fullName: VRBuilder.Core.ProcessUtils.ProcessVariable<T>.ProcessVariable(T, System.Collections.Generic.IEnumerable<System.Guid>, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/ProcessVariable.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/ProcessVariable.cs
    startLine: 49
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.ProcessUtils
  syntax:
    content: public ProcessVariable(T constValue, IEnumerable<Guid> referenceIds, bool isConst)
    parameters:
    - id: constValue
      type: '{T}'
    - id: referenceIds
      type: System.Collections.Generic.IEnumerable{System.Guid}
    - id: isConst
      type: System.Boolean
    content.vb: Public Sub New(constValue As T, referenceIds As IEnumerable(Of Guid), isConst As Boolean)
  overload: VRBuilder.Core.ProcessUtils.ProcessVariable`1.#ctor*
  nameWithType.vb: ProcessVariable(Of T).ProcessVariable(T, IEnumerable(Of Guid), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.ProcessUtils.ProcessVariable(Of T).ProcessVariable(T, System.Collections.Generic.IEnumerable(Of System.Guid), System.Boolean)
  name.vb: ProcessVariable(T, IEnumerable(Of Guid), Boolean)
- uid: VRBuilder.Core.ProcessUtils.ProcessVariable`1.Value
  commentId: P:VRBuilder.Core.ProcessUtils.ProcessVariable`1.Value
  id: Value
  parent: VRBuilder.Core.ProcessUtils.ProcessVariable`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ProcessVariable<T>.Value
  fullName: VRBuilder.Core.ProcessUtils.ProcessVariable<T>.Value
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/ProcessVariable.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Value
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/ProcessVariable.cs
    startLine: 63
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.ProcessUtils
  summary: "\nReturns the current value of this variable.\n"
  example: []
  syntax:
    content: public readonly T Value { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property Value As T
  overload: VRBuilder.Core.ProcessUtils.ProcessVariable`1.Value*
  nameWithType.vb: ProcessVariable(Of T).Value
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: VRBuilder.Core.ProcessUtils.ProcessVariable(Of T).Value
- uid: VRBuilder.Core.ProcessUtils.ProcessVariable`1.ToString
  commentId: M:VRBuilder.Core.ProcessUtils.ProcessVariable`1.ToString
  id: ToString
  parent: VRBuilder.Core.ProcessUtils.ProcessVariable`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ProcessVariable<T>.ToString()
  fullName: VRBuilder.Core.ProcessUtils.ProcessVariable<T>.ToString()
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/ProcessVariable.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ToString
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/ProcessVariable.cs
    startLine: 65
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.ProcessUtils
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: VRBuilder.Core.ProcessUtils.ProcessVariable`1.ToString*
  nameWithType.vb: ProcessVariable(Of T).ToString()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: VRBuilder.Core.ProcessUtils.ProcessVariable(Of T).ToString()
references:
- uid: VRBuilder.Core.Properties.IDataProperty`1
  commentId: T:VRBuilder.Core.Properties.IDataProperty`1
  name: IDataProperty<T>
  nameWithType: IDataProperty<T>
  fullName: VRBuilder.Core.Properties.IDataProperty<T>
  nameWithType.vb: IDataProperty(Of T)
  fullName.vb: VRBuilder.Core.Properties.IDataProperty(Of T)
  name.vb: IDataProperty(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.IDataProperty`1
    name: IDataProperty
    nameWithType: IDataProperty
    fullName: VRBuilder.Core.Properties.IDataProperty
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Properties.IDataProperty`1
    name: IDataProperty
    nameWithType: IDataProperty
    fullName: VRBuilder.Core.Properties.IDataProperty
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.ProcessUtils
  commentId: N:VRBuilder.Core.ProcessUtils
  name: VRBuilder.Core.ProcessUtils
  nameWithType: VRBuilder.Core.ProcessUtils
  fullName: VRBuilder.Core.ProcessUtils
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.ProcessUtils.ProcessVariable`1.ConstValue*
  commentId: Overload:VRBuilder.Core.ProcessUtils.ProcessVariable`1.ConstValue
  name: ConstValue
  nameWithType: ProcessVariable<T>.ConstValue
  fullName: VRBuilder.Core.ProcessUtils.ProcessVariable<T>.ConstValue
  nameWithType.vb: ProcessVariable(Of T).ConstValue
  fullName.vb: VRBuilder.Core.ProcessUtils.ProcessVariable(Of T).ConstValue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: VRBuilder.Core.ProcessUtils.ProcessVariable`1.Property*
  commentId: Overload:VRBuilder.Core.ProcessUtils.ProcessVariable`1.Property
  name: Property
  nameWithType: ProcessVariable<T>.Property
  fullName: VRBuilder.Core.ProcessUtils.ProcessVariable<T>.Property
  nameWithType.vb: ProcessVariable(Of T).Property
  fullName.vb: VRBuilder.Core.ProcessUtils.ProcessVariable(Of T).Property
- uid: VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}
  commentId: T:VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{`0}}
  parent: VRBuilder.Core.SceneObjects
  definition: VRBuilder.Core.SceneObjects.SingleScenePropertyReference`1
  name: SingleScenePropertyReference<IDataProperty<T>>
  nameWithType: SingleScenePropertyReference<IDataProperty<T>>
  fullName: VRBuilder.Core.SceneObjects.SingleScenePropertyReference<VRBuilder.Core.Properties.IDataProperty<T>>
  nameWithType.vb: SingleScenePropertyReference(Of IDataProperty(Of T))
  fullName.vb: VRBuilder.Core.SceneObjects.SingleScenePropertyReference(Of VRBuilder.Core.Properties.IDataProperty(Of T))
  name.vb: SingleScenePropertyReference(Of IDataProperty(Of T))
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.SingleScenePropertyReference`1
    name: SingleScenePropertyReference
    nameWithType: SingleScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.SingleScenePropertyReference
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Properties.IDataProperty`1
    name: IDataProperty
    nameWithType: IDataProperty
    fullName: VRBuilder.Core.Properties.IDataProperty
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.SingleScenePropertyReference`1
    name: SingleScenePropertyReference
    nameWithType: SingleScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.SingleScenePropertyReference
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Properties.IDataProperty`1
    name: IDataProperty
    nameWithType: IDataProperty
    fullName: VRBuilder.Core.Properties.IDataProperty
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.SingleScenePropertyReference`1
  commentId: T:VRBuilder.Core.SceneObjects.SingleScenePropertyReference`1
  name: SingleScenePropertyReference<T>
  nameWithType: SingleScenePropertyReference<T>
  fullName: VRBuilder.Core.SceneObjects.SingleScenePropertyReference<T>
  nameWithType.vb: SingleScenePropertyReference(Of T)
  fullName.vb: VRBuilder.Core.SceneObjects.SingleScenePropertyReference(Of T)
  name.vb: SingleScenePropertyReference(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.SingleScenePropertyReference`1
    name: SingleScenePropertyReference
    nameWithType: SingleScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.SingleScenePropertyReference
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.SingleScenePropertyReference`1
    name: SingleScenePropertyReference
    nameWithType: SingleScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.SingleScenePropertyReference
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: VRBuilder.Core.ProcessUtils.ProcessVariable`1.PropertyReference*
  commentId: Overload:VRBuilder.Core.ProcessUtils.ProcessVariable`1.PropertyReference
  name: PropertyReference
  nameWithType: ProcessVariable<T>.PropertyReference
  fullName: VRBuilder.Core.ProcessUtils.ProcessVariable<T>.PropertyReference
  nameWithType.vb: ProcessVariable(Of T).PropertyReference
  fullName.vb: VRBuilder.Core.ProcessUtils.ProcessVariable(Of T).PropertyReference
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}
  commentId: T:VRBuilder.Core.SceneObjects.ScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{`0}}
  parent: VRBuilder.Core.SceneObjects
  definition: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  name: ScenePropertyReference<IDataProperty<T>>
  nameWithType: ScenePropertyReference<IDataProperty<T>>
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<VRBuilder.Core.Properties.IDataProperty<T>>
  nameWithType.vb: ScenePropertyReference(Of IDataProperty(Of T))
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of VRBuilder.Core.Properties.IDataProperty(Of T))
  name.vb: ScenePropertyReference(Of IDataProperty(Of T))
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
    name: ScenePropertyReference
    nameWithType: ScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Properties.IDataProperty`1
    name: IDataProperty
    nameWithType: IDataProperty
    fullName: VRBuilder.Core.Properties.IDataProperty
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
    name: ScenePropertyReference
    nameWithType: ScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Properties.IDataProperty`1
    name: IDataProperty
    nameWithType: IDataProperty
    fullName: VRBuilder.Core.Properties.IDataProperty
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  commentId: T:VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  parent: VRBuilder.Core.SceneObjects
  name: ScenePropertyReference<T>
  nameWithType: ScenePropertyReference<T>
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<T>
  nameWithType.vb: ScenePropertyReference(Of T)
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T)
  name.vb: ScenePropertyReference(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
    name: ScenePropertyReference
    nameWithType: ScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
    name: ScenePropertyReference
    nameWithType: ScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.ProcessUtils.ProcessVariable`1.ConstValue
  commentId: P:VRBuilder.Core.ProcessUtils.ProcessVariable`1.ConstValue
  isExternal: true
- uid: VRBuilder.Core.ProcessUtils.ProcessVariable`1.PropertyReference
  commentId: P:VRBuilder.Core.ProcessUtils.ProcessVariable`1.PropertyReference
  isExternal: true
- uid: VRBuilder.Core.ProcessUtils.ProcessVariable`1.IsConst*
  commentId: Overload:VRBuilder.Core.ProcessUtils.ProcessVariable`1.IsConst
  name: IsConst
  nameWithType: ProcessVariable<T>.IsConst
  fullName: VRBuilder.Core.ProcessUtils.ProcessVariable<T>.IsConst
  nameWithType.vb: ProcessVariable(Of T).IsConst
  fullName.vb: VRBuilder.Core.ProcessUtils.ProcessVariable(Of T).IsConst
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.ProcessUtils.ProcessVariable`1.#ctor*
  commentId: Overload:VRBuilder.Core.ProcessUtils.ProcessVariable`1.#ctor
  name: ProcessVariable
  nameWithType: ProcessVariable<T>.ProcessVariable
  fullName: VRBuilder.Core.ProcessUtils.ProcessVariable<T>.ProcessVariable
  nameWithType.vb: ProcessVariable(Of T).ProcessVariable
  fullName.vb: VRBuilder.Core.ProcessUtils.ProcessVariable(Of T).ProcessVariable
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Collections.Generic.IEnumerable{System.Guid}
  commentId: T:System.Collections.Generic.IEnumerable{System.Guid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Guid>
  nameWithType: IEnumerable<Guid>
  fullName: System.Collections.Generic.IEnumerable<System.Guid>
  nameWithType.vb: IEnumerable(Of Guid)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Guid)
  name.vb: IEnumerable(Of Guid)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Core.ProcessUtils.ProcessVariable`1.Value*
  commentId: Overload:VRBuilder.Core.ProcessUtils.ProcessVariable`1.Value
  name: Value
  nameWithType: ProcessVariable<T>.Value
  fullName: VRBuilder.Core.ProcessUtils.ProcessVariable<T>.Value
  nameWithType.vb: ProcessVariable(Of T).Value
  fullName.vb: VRBuilder.Core.ProcessUtils.ProcessVariable(Of T).Value
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.ProcessUtils.ProcessVariable`1.ToString*
  commentId: Overload:VRBuilder.Core.ProcessUtils.ProcessVariable`1.ToString
  name: ToString
  nameWithType: ProcessVariable<T>.ToString
  fullName: VRBuilder.Core.ProcessUtils.ProcessVariable<T>.ToString
  nameWithType.vb: ProcessVariable(Of T).ToString
  fullName.vb: VRBuilder.Core.ProcessUtils.ProcessVariable(Of T).ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
