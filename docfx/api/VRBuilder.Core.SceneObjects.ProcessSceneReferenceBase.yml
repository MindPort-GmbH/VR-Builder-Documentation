### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  commentId: T:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  id: ProcessSceneReferenceBase
  parent: VRBuilder.Core.SceneObjects
  children:
  - VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.#ctor
  - VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.#ctor(System.Collections.Generic.IEnumerable{System.Guid})
  - VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.#ctor(System.Guid)
  - VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.AddGuid(System.Guid)
  - VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.Equals(System.Object)
  - VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.GetHashCode
  - VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.Guids
  - VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.HasValue
  - VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.IsEmpty
  - VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.op_Equality(VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase,VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase)
  - VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.op_Inequality(VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase,VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase)
  - VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.RemoveGuid(System.Guid)
  - VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.ResetGuids(System.Collections.Generic.IEnumerable{System.Guid})
  langs:
  - csharp
  - vb
  name: ProcessSceneReferenceBase
  nameWithType: ProcessSceneReferenceBase
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessSceneReferenceBase
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
    startLine: 11
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nBase class for a process reference to one or more objects.\n"
  example: []
  syntax:
    content: >-
      [DataContract(IsReference = true)]

      public abstract class ProcessSceneReferenceBase : ICanBeEmpty
    content.vb: >-
      <DataContract(IsReference:=True)>

      Public MustInherit Class ProcessSceneReferenceBase

          Implements ICanBeEmpty
  inheritance:
  - System.Object
  derivedClasses:
  - VRBuilder.Core.SceneObjects.ProcessSceneReference`1
  implements:
  - VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.Guids
  commentId: P:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.Guids
  id: Guids
  parent: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  langs:
  - csharp
  - vb
  name: Guids
  nameWithType: ProcessSceneReferenceBase.Guids
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.Guids
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Guids
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
    startLine: 17
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nList of guids, each Guid is a reference to a <xref href=\"VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IReadOnlyList<Guid> Guids { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Guid}
    content.vb: Public ReadOnly Property Guids As IReadOnlyList(Of Guid)
  overload: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.Guids*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.HasValue
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.HasValue
  id: HasValue
  parent: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  langs:
  - csharp
  - vb
  name: HasValue()
  nameWithType: ProcessSceneReferenceBase.HasValue()
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.HasValue()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: HasValue
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
    startLine: 35
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nReturns true if the reference contains a non-null value.\n"
  example: []
  syntax:
    content: public abstract bool HasValue()
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function HasValue As Boolean
  overload: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.HasValue*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.AddGuid(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.AddGuid(System.Guid)
  id: AddGuid(System.Guid)
  parent: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  langs:
  - csharp
  - vb
  name: AddGuid(Guid)
  nameWithType: ProcessSceneReferenceBase.AddGuid(Guid)
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.AddGuid(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AddGuid
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
    startLine: 40
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nAdds the specified guid to this reference.\n"
  example: []
  syntax:
    content: public void AddGuid(Guid guid)
    parameters:
    - id: guid
      type: System.Guid
    content.vb: Public Sub AddGuid(guid As Guid)
  overload: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.AddGuid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.RemoveGuid(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.RemoveGuid(System.Guid)
  id: RemoveGuid(System.Guid)
  parent: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  langs:
  - csharp
  - vb
  name: RemoveGuid(Guid)
  nameWithType: ProcessSceneReferenceBase.RemoveGuid(Guid)
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.RemoveGuid(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RemoveGuid
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
    startLine: 48
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nRemoves the specified guid from this reference.\n"
  example: []
  syntax:
    content: public bool RemoveGuid(Guid guid)
    parameters:
    - id: guid
      type: System.Guid
    return:
      type: System.Boolean
    content.vb: Public Function RemoveGuid(guid As Guid) As Boolean
  overload: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.RemoveGuid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.ResetGuids(System.Collections.Generic.IEnumerable{System.Guid})
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.ResetGuids(System.Collections.Generic.IEnumerable{System.Guid})
  id: ResetGuids(System.Collections.Generic.IEnumerable{System.Guid})
  parent: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  langs:
  - csharp
  - vb
  name: ResetGuids(IEnumerable<Guid>)
  nameWithType: ProcessSceneReferenceBase.ResetGuids(IEnumerable<Guid>)
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.ResetGuids(System.Collections.Generic.IEnumerable<System.Guid>)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ResetGuids
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
    startLine: 56
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nResets the guids on this reference to the specified value.\n"
  example: []
  syntax:
    content: public void ResetGuids(IEnumerable<Guid> newGuids = null)
    parameters:
    - id: newGuids
      type: System.Collections.Generic.IEnumerable{System.Guid}
    content.vb: Public Sub ResetGuids(newGuids As IEnumerable(Of Guid) = Nothing)
  overload: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.ResetGuids*
  nameWithType.vb: ProcessSceneReferenceBase.ResetGuids(IEnumerable(Of Guid))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.ResetGuids(System.Collections.Generic.IEnumerable(Of System.Guid))
  name.vb: ResetGuids(IEnumerable(Of Guid))
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.#ctor
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.#ctor
  id: '#ctor'
  parent: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  langs:
  - csharp
  - vb
  name: ProcessSceneReferenceBase()
  nameWithType: ProcessSceneReferenceBase.ProcessSceneReferenceBase()
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.ProcessSceneReferenceBase()
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
    startLine: 68
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public ProcessSceneReferenceBase()
    content.vb: Public Sub New
  overload: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.#ctor(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  langs:
  - csharp
  - vb
  name: ProcessSceneReferenceBase(Guid)
  nameWithType: ProcessSceneReferenceBase.ProcessSceneReferenceBase(Guid)
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.ProcessSceneReferenceBase(System.Guid)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
    startLine: 73
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public ProcessSceneReferenceBase(Guid guid)
    parameters:
    - id: guid
      type: System.Guid
    content.vb: Public Sub New(guid As Guid)
  overload: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.#ctor(System.Collections.Generic.IEnumerable{System.Guid})
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.#ctor(System.Collections.Generic.IEnumerable{System.Guid})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Guid})'
  parent: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  langs:
  - csharp
  - vb
  name: ProcessSceneReferenceBase(IEnumerable<Guid>)
  nameWithType: ProcessSceneReferenceBase.ProcessSceneReferenceBase(IEnumerable<Guid>)
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.ProcessSceneReferenceBase(System.Collections.Generic.IEnumerable<System.Guid>)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
    startLine: 85
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public ProcessSceneReferenceBase(IEnumerable<Guid> guids)
    parameters:
    - id: guids
      type: System.Collections.Generic.IEnumerable{System.Guid}
    content.vb: Public Sub New(guids As IEnumerable(Of Guid))
  overload: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.#ctor*
  nameWithType.vb: ProcessSceneReferenceBase.ProcessSceneReferenceBase(IEnumerable(Of Guid))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.ProcessSceneReferenceBase(System.Collections.Generic.IEnumerable(Of System.Guid))
  name.vb: ProcessSceneReferenceBase(IEnumerable(Of Guid))
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.IsEmpty
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.IsEmpty
  id: IsEmpty
  parent: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  langs:
  - csharp
  - vb
  name: IsEmpty()
  nameWithType: ProcessSceneReferenceBase.IsEmpty()
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.IsEmpty()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsEmpty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
    startLine: 98
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  example: []
  syntax:
    content: public virtual bool IsEmpty()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsEmpty As Boolean
  overload: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.IsEmpty*
  implements:
  - VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.Equals(System.Object)
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.Equals(System.Object)
  id: Equals(System.Object)
  parent: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ProcessSceneReferenceBase.Equals(Object)
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Equals
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
    startLine: 103
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.GetHashCode
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.GetHashCode
  id: GetHashCode
  parent: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ProcessSceneReferenceBase.GetHashCode()
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.GetHashCode()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetHashCode
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
    startLine: 122
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.op_Equality(VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase,VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase)
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.op_Equality(VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase,VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase)
  id: op_Equality(VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase,VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase)
  parent: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  langs:
  - csharp
  - vb
  name: Equality(ProcessSceneReferenceBase, ProcessSceneReferenceBase)
  nameWithType: ProcessSceneReferenceBase.Equality(ProcessSceneReferenceBase, ProcessSceneReferenceBase)
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.Equality(VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase, VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase)
  type: Operator
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: op_Equality
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
    startLine: 127
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public static bool operator ==(ProcessSceneReferenceBase left, ProcessSceneReferenceBase right)
    parameters:
    - id: left
      type: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
    - id: right
      type: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As ProcessSceneReferenceBase, right As ProcessSceneReferenceBase) As Boolean
  overload: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.op_Inequality(VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase,VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase)
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.op_Inequality(VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase,VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase)
  id: op_Inequality(VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase,VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase)
  parent: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  langs:
  - csharp
  - vb
  name: Inequality(ProcessSceneReferenceBase, ProcessSceneReferenceBase)
  nameWithType: ProcessSceneReferenceBase.Inequality(ProcessSceneReferenceBase, ProcessSceneReferenceBase)
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.Inequality(VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase, VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase)
  type: Operator
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: op_Inequality
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneReferenceBase.cs
    startLine: 137
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public static bool operator !=(ProcessSceneReferenceBase left, ProcessSceneReferenceBase right)
    parameters:
    - id: left
      type: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
    - id: right
      type: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As ProcessSceneReferenceBase, right As ProcessSceneReferenceBase) As Boolean
  overload: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  commentId: T:VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  parent: VRBuilder.Core.Runtime.Properties
  name: ICanBeEmpty
  nameWithType: ICanBeEmpty
  fullName: VRBuilder.Core.Runtime.Properties.ICanBeEmpty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Runtime.Properties
  commentId: N:VRBuilder.Core.Runtime.Properties
  name: VRBuilder.Core.Runtime.Properties
  nameWithType: VRBuilder.Core.Runtime.Properties
  fullName: VRBuilder.Core.Runtime.Properties
- uid: VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup
  commentId: T:VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup
  parent: VRBuilder.Core.Settings
  name: SceneObjectGroups.SceneObjectGroup
  nameWithType: SceneObjectGroups.SceneObjectGroup
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.Guids*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.Guids
  name: Guids
  nameWithType: ProcessSceneReferenceBase.Guids
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.Guids
- uid: System.Collections.Generic.IReadOnlyList{System.Guid}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Guid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<Guid>
  nameWithType: IReadOnlyList<Guid>
  fullName: System.Collections.Generic.IReadOnlyList<System.Guid>
  nameWithType.vb: IReadOnlyList(Of Guid)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of System.Guid)
  name.vb: IReadOnlyList(Of Guid)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Settings
  commentId: N:VRBuilder.Core.Settings
  name: VRBuilder.Core.Settings
  nameWithType: VRBuilder.Core.Settings
  fullName: VRBuilder.Core.Settings
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.HasValue*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.HasValue
  name: HasValue
  nameWithType: ProcessSceneReferenceBase.HasValue
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.HasValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.AddGuid*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.AddGuid
  name: AddGuid
  nameWithType: ProcessSceneReferenceBase.AddGuid
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.AddGuid
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.RemoveGuid*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.RemoveGuid
  name: RemoveGuid
  nameWithType: ProcessSceneReferenceBase.RemoveGuid
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.RemoveGuid
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.ResetGuids*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.ResetGuids
  name: ResetGuids
  nameWithType: ProcessSceneReferenceBase.ResetGuids
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.ResetGuids
- uid: System.Collections.Generic.IEnumerable{System.Guid}
  commentId: T:System.Collections.Generic.IEnumerable{System.Guid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Guid>
  nameWithType: IEnumerable<Guid>
  fullName: System.Collections.Generic.IEnumerable<System.Guid>
  nameWithType.vb: IEnumerable(Of Guid)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Guid)
  name.vb: IEnumerable(Of Guid)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.#ctor*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.#ctor
  name: ProcessSceneReferenceBase
  nameWithType: ProcessSceneReferenceBase.ProcessSceneReferenceBase
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.ProcessSceneReferenceBase
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.IsEmpty*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.IsEmpty
  name: IsEmpty
  nameWithType: ProcessSceneReferenceBase.IsEmpty
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.IsEmpty
- uid: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
  commentId: M:VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
  parent: VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  name: IsEmpty()
  nameWithType: ICanBeEmpty.IsEmpty()
  fullName: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty()
  spec.csharp:
  - uid: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
    name: IsEmpty
    nameWithType: ICanBeEmpty.IsEmpty
    fullName: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
    name: IsEmpty
    nameWithType: ICanBeEmpty.IsEmpty
    fullName: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.Equals*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.Equals
  name: Equals
  nameWithType: ProcessSceneReferenceBase.Equals
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.GetHashCode*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.GetHashCode
  name: GetHashCode
  nameWithType: ProcessSceneReferenceBase.GetHashCode
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.op_Equality*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.op_Equality
  name: Equality
  nameWithType: ProcessSceneReferenceBase.Equality
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.Equality
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  commentId: T:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  parent: VRBuilder.Core.SceneObjects
  name: ProcessSceneReferenceBase
  nameWithType: ProcessSceneReferenceBase
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.op_Inequality*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.op_Inequality
  name: Inequality
  nameWithType: ProcessSceneReferenceBase.Inequality
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.Inequality
