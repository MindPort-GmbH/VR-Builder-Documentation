### YamlMime:ManagedReference
items:
- uid: VRBuilder.StatesAndData.Properties.IEventProperty
  commentId: T:VRBuilder.StatesAndData.Properties.IEventProperty
  id: IEventProperty
  parent: VRBuilder.StatesAndData.Properties
  children:
  - VRBuilder.StatesAndData.Properties.IEventProperty.TriggerEvent
  langs:
  - csharp
  - vb
  name: IEventProperty
  nameWithType: IEventProperty
  fullName: VRBuilder.StatesAndData.Properties.IEventProperty
  type: Interface
  source:
    remote:
      path: Source/Runtime/Properties/IEventProperty.cs
      branch: feature/mp-2734-component-icons
      repo: git@github.com:MindPort-GmbH/States-and-Data-for-VR-Builder.git
    id: IEventProperty
    path: ../../Assets/MindPort/VR Builder/Add-ons/StatesAndData/Source/Runtime/Properties/IEventProperty.cs
    startLine: 7
  assemblies:
  - VRBuilder.StatesAndData
  namespace: VRBuilder.StatesAndData.Properties
  summary: "\nBase event property with no payload.\n"
  example: []
  syntax:
    content: 'public interface IEventProperty : ISceneObjectProperty'
    content.vb: >-
      Public Interface IEventProperty

          Inherits ISceneObjectProperty
  inheritedMembers:
  - VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VRBuilder.StatesAndData.Properties.IEventProperty.TriggerEvent
  commentId: M:VRBuilder.StatesAndData.Properties.IEventProperty.TriggerEvent
  id: TriggerEvent
  parent: VRBuilder.StatesAndData.Properties.IEventProperty
  langs:
  - csharp
  - vb
  name: TriggerEvent()
  nameWithType: IEventProperty.TriggerEvent()
  fullName: VRBuilder.StatesAndData.Properties.IEventProperty.TriggerEvent()
  type: Method
  source:
    remote:
      path: Source/Runtime/Properties/IEventProperty.cs
      branch: feature/mp-2734-component-icons
      repo: git@github.com:MindPort-GmbH/States-and-Data-for-VR-Builder.git
    id: TriggerEvent
    path: ../../Assets/MindPort/VR Builder/Add-ons/StatesAndData/Source/Runtime/Properties/IEventProperty.cs
    startLine: 12
  assemblies:
  - VRBuilder.StatesAndData
  namespace: VRBuilder.StatesAndData.Properties
  summary: "\nTriggers the associated event.\n"
  example: []
  syntax:
    content: void TriggerEvent()
    content.vb: Sub TriggerEvent
  overload: VRBuilder.StatesAndData.Properties.IEventProperty.TriggerEvent*
references:
- uid: VRBuilder.StatesAndData.Properties
  commentId: N:VRBuilder.StatesAndData.Properties
  name: VRBuilder.StatesAndData.Properties
  nameWithType: VRBuilder.StatesAndData.Properties
  fullName: VRBuilder.StatesAndData.Properties
- uid: VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
  commentId: P:VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
  parent: VRBuilder.Core.Properties.ISceneObjectProperty
  name: SceneObject
  nameWithType: ISceneObjectProperty.SceneObject
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
- uid: VRBuilder.Core.Properties.ISceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ISceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ISceneObjectProperty
  nameWithType: ISceneObjectProperty
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty
- uid: VRBuilder.Core.Properties
  commentId: N:VRBuilder.Core.Properties
  name: VRBuilder.Core.Properties
  nameWithType: VRBuilder.Core.Properties
  fullName: VRBuilder.Core.Properties
- uid: VRBuilder.StatesAndData.Properties.IEventProperty.TriggerEvent*
  commentId: Overload:VRBuilder.StatesAndData.Properties.IEventProperty.TriggerEvent
  name: TriggerEvent
  nameWithType: IEventProperty.TriggerEvent
  fullName: VRBuilder.StatesAndData.Properties.IEventProperty.TriggerEvent
