### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject
  commentId: T:VRBuilder.Core.SceneObjects.ProcessSceneObject
  id: ProcessSceneObject
  parent: VRBuilder.Core.SceneObjects
  children:
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.AddGuid(System.Guid)
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.ChangeUniqueName(System.String)
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.CheckHasProperty(System.Type)
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.CheckHasProperty``1
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.GameObject
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.GetProperty``1
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.guid
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.Guid
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.GuidAdded
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.GuidRemoved
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.guids
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.Guids
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.HasGuid(System.Guid)
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.Init
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.IsGuidAssigned
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.IsLocked
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.Locked
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.ObjectIdChanged
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.OnAfterDeserialize
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.OnBeforeSerialize
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.Properties
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.RemoveGuid(System.Guid)
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.RemoveUnlocker(VRBuilder.Core.IStepData)
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.ResetUniqueId
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.SetLocked(System.Boolean)
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.SetObjectId(System.Guid)
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.tags
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.Tags
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.ToString
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.uniqueName
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.UniqueName
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.UniqueNameChanged
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.Unlocked
  - VRBuilder.Core.SceneObjects.ProcessSceneObject.ValidateProperties(System.Collections.Generic.IEnumerable{System.Type})
  langs:
  - csharp
  - vb
  name: ProcessSceneObject
  nameWithType: ProcessSceneObject
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessSceneObject
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 30
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nThis component gives a GameObject a stable, non-replicatable Globally Unique Identifier.\nIt can be used to reference a specific instance of an object no matter where it is.  \n"
  example: []
  syntax:
    content: 'public class ProcessSceneObject : MonoBehaviour, ISceneObject, ILockable, IGuidContainer'
    content.vb: >-
      Public Class ProcessSceneObject

          Inherits MonoBehaviour

          Implements ISceneObject, ILockable, IGuidContainer
  inheritance:
  - System.Object
  implements:
  - ISerializationCallbackReceiver
  - VRBuilder.Core.SceneObjects.ISceneObject
  - VRBuilder.Core.SceneObjects.ILockable
  - VRBuilder.Core.SceneObjects.IGuidContainer
  extensionMethods:
  - VRBuilder.Core.SceneObjects.ISceneObject.VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(System.String)
  - VRBuilder.Core.SceneObjects.ISceneObject.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1
  - VRBuilder.Core.SceneObjects.ISceneObject.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(System.Type)
  - VRBuilder.Core.SceneObjects.ISceneObject.VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  - VRBuilder.Core.SceneObjects.ISceneObject.VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.guid
  commentId: F:VRBuilder.Core.SceneObjects.ProcessSceneObject.guid
  id: guid
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: guid
  nameWithType: ProcessSceneObject.guid
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.guid
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: guid
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 47
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nWe use this Guid for comparison, generation and caching.\n"
  remarks: "\nWhen the <xref href=\"VRBuilder.Core.SceneObjects.ProcessSceneObject.serializedGuid\" data-throw-if-not-resolved=\"false\"></xref> is modified by the Unity editor \n(e.g.: reverting a prefab) this will be used to revert it back canaling the changes of the editor.\n"
  example: []
  syntax:
    content: protected Guid guid
    return:
      type: System.Guid
    content.vb: Protected guid As Guid
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.uniqueName
  commentId: F:VRBuilder.Core.SceneObjects.ProcessSceneObject.uniqueName
  id: uniqueName
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: uniqueName
  nameWithType: ProcessSceneObject.uniqueName
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.uniqueName
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: uniqueName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 52
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: >-
      [Obsolete("This exists for backwards compatibility. Use the serializedGuid field to store the object's unique identifier.")]

      protected string uniqueName
    return:
      type: System.String
    content.vb: >-
      <Obsolete("This exists for backwards compatibility. Use the serializedGuid field to store the object's unique identifier.")>

      Protected uniqueName As String
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This exists for backwards compatibility. Use the serializedGuid field to store the object's unique identifier.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.Guid
  commentId: P:VRBuilder.Core.SceneObjects.ProcessSceneObject.Guid
  id: Guid
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: Guid
  nameWithType: ProcessSceneObject.Guid
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.Guid
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Guid
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 55
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  example: []
  syntax:
    content: public Guid Guid { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public ReadOnly Property Guid As Guid
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.Guid*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObject.Guid
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.UniqueName
  commentId: P:VRBuilder.Core.SceneObjects.ProcessSceneObject.UniqueName
  id: UniqueName
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: UniqueName
  nameWithType: ProcessSceneObject.UniqueName
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.UniqueName
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: UniqueName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 75
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: >-
      [Obsolete("Use Guid instead.")]

      public string UniqueName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Obsolete("Use Guid instead.")>

      Public ReadOnly Property UniqueName As String
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.UniqueName*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObject.UniqueName
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use Guid instead.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.guids
  commentId: F:VRBuilder.Core.SceneObjects.ProcessSceneObject.guids
  id: guids
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: guids
  nameWithType: ProcessSceneObject.guids
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.guids
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: guids
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 80
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: protected List<SerializableGuid> guids
    return:
      type: System.Collections.Generic.List{VRBuilder.Core.SceneObjects.SerializableGuid}
    content.vb: Protected guids As List(Of SerializableGuid)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.Guids
  commentId: P:VRBuilder.Core.SceneObjects.ProcessSceneObject.Guids
  id: Guids
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: Guids
  nameWithType: ProcessSceneObject.Guids
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.Guids
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Guids
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 83
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  example: []
  syntax:
    content: public IEnumerable<Guid> Guids { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Guid}
    content.vb: Public ReadOnly Property Guids As IEnumerable(Of Guid)
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.Guids*
  implements:
  - VRBuilder.Core.SceneObjects.IGuidContainer.Guids
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.tags
  commentId: F:VRBuilder.Core.SceneObjects.ProcessSceneObject.tags
  id: tags
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: tags
  nameWithType: ProcessSceneObject.tags
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.tags
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: tags
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 87
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: >-
      [Obsolete("This field will be removed in a future major version.")]

      protected List<string> tags
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: >-
      <Obsolete("This field will be removed in a future major version.")>

      Protected tags As List(Of String)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This field will be removed in a future major version.
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.Tags
  commentId: P:VRBuilder.Core.SceneObjects.ProcessSceneObject.Tags
  id: Tags
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: ProcessSceneObject.Tags
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.Tags
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Tags
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 90
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  example: []
  syntax:
    content: >-
      [Obsolete("This property will be removed in a future major version.")]

      public IEnumerable<Guid> Tags { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Guid}
    content.vb: >-
      <Obsolete("This property will be removed in a future major version.")>

      Public ReadOnly Property Tags As IEnumerable(Of Guid)
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.Tags*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This property will be removed in a future major version.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.GameObject
  commentId: P:VRBuilder.Core.SceneObjects.ProcessSceneObject.GameObject
  id: GameObject
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: GameObject
  nameWithType: ProcessSceneObject.GameObject
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.GameObject
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GameObject
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 94
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  example: []
  syntax:
    content: public GameObject GameObject { get; }
    parameters: []
    return:
      type: GameObject
    content.vb: Public ReadOnly Property GameObject As GameObject
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.GameObject*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObject.GameObject
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.Properties
  commentId: P:VRBuilder.Core.SceneObjects.ProcessSceneObject.Properties
  id: Properties
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: ProcessSceneObject.Properties
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.Properties
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Properties
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 99
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nProperties associated with this scene object.\n"
  example: []
  syntax:
    content: public ICollection<ISceneObjectProperty> Properties { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{VRBuilder.Core.Properties.ISceneObjectProperty}
    content.vb: Public ReadOnly Property Properties As ICollection(Of ISceneObjectProperty)
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.Properties*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObject.Properties
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.IsLocked
  commentId: P:VRBuilder.Core.SceneObjects.ProcessSceneObject.IsLocked
  id: IsLocked
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: IsLocked
  nameWithType: ProcessSceneObject.IsLocked
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.IsLocked
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsLocked
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 107
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  example: []
  syntax:
    content: public bool IsLocked { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLocked As Boolean
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.IsLocked*
  implements:
  - VRBuilder.Core.SceneObjects.ILockable.IsLocked
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.UniqueNameChanged
  commentId: E:VRBuilder.Core.SceneObjects.ProcessSceneObject.UniqueNameChanged
  id: UniqueNameChanged
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: UniqueNameChanged
  nameWithType: ProcessSceneObject.UniqueNameChanged
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.UniqueNameChanged
  type: Event
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: UniqueNameChanged
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 119
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: >-
      [Obsolete("This event is no longer used and will be removed in the next major release.")]

      public event EventHandler<SceneObjectNameChanged> UniqueNameChanged
    return:
      type: System.EventHandler{VRBuilder.Core.SceneObjects.SceneObjectNameChanged}
    content.vb: >-
      <Obsolete("This event is no longer used and will be removed in the next major release.")>

      Public Event UniqueNameChanged As EventHandler(Of SceneObjectNameChanged)
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObject.UniqueNameChanged
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This event is no longer used and will be removed in the next major release.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.Locked
  commentId: E:VRBuilder.Core.SceneObjects.ProcessSceneObject.Locked
  id: Locked
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: Locked
  nameWithType: ProcessSceneObject.Locked
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.Locked
  type: Event
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Locked
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 121
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public event EventHandler<LockStateChangedEventArgs> Locked
    return:
      type: System.EventHandler{VRBuilder.Core.SceneObjects.LockStateChangedEventArgs}
    content.vb: Public Event Locked As EventHandler(Of LockStateChangedEventArgs)
  implements:
  - VRBuilder.Core.SceneObjects.ILockable.Locked
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.Unlocked
  commentId: E:VRBuilder.Core.SceneObjects.ProcessSceneObject.Unlocked
  id: Unlocked
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: Unlocked
  nameWithType: ProcessSceneObject.Unlocked
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.Unlocked
  type: Event
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Unlocked
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 122
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public event EventHandler<LockStateChangedEventArgs> Unlocked
    return:
      type: System.EventHandler{VRBuilder.Core.SceneObjects.LockStateChangedEventArgs}
    content.vb: Public Event Unlocked As EventHandler(Of LockStateChangedEventArgs)
  implements:
  - VRBuilder.Core.SceneObjects.ILockable.Unlocked
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.GuidAdded
  commentId: E:VRBuilder.Core.SceneObjects.ProcessSceneObject.GuidAdded
  id: GuidAdded
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: GuidAdded
  nameWithType: ProcessSceneObject.GuidAdded
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.GuidAdded
  type: Event
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GuidAdded
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 123
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public event EventHandler<GuidContainerEventArgs> GuidAdded
    return:
      type: System.EventHandler{VRBuilder.Core.SceneObjects.GuidContainerEventArgs}
    content.vb: Public Event GuidAdded As EventHandler(Of GuidContainerEventArgs)
  implements:
  - VRBuilder.Core.SceneObjects.IGuidContainer.GuidAdded
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.GuidRemoved
  commentId: E:VRBuilder.Core.SceneObjects.ProcessSceneObject.GuidRemoved
  id: GuidRemoved
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: GuidRemoved
  nameWithType: ProcessSceneObject.GuidRemoved
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.GuidRemoved
  type: Event
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GuidRemoved
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 124
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public event EventHandler<GuidContainerEventArgs> GuidRemoved
    return:
      type: System.EventHandler{VRBuilder.Core.SceneObjects.GuidContainerEventArgs}
    content.vb: Public Event GuidRemoved As EventHandler(Of GuidContainerEventArgs)
  implements:
  - VRBuilder.Core.SceneObjects.IGuidContainer.GuidRemoved
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.ObjectIdChanged
  commentId: E:VRBuilder.Core.SceneObjects.ProcessSceneObject.ObjectIdChanged
  id: ObjectIdChanged
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: ObjectIdChanged
  nameWithType: ProcessSceneObject.ObjectIdChanged
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.ObjectIdChanged
  type: Event
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ObjectIdChanged
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 125
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public event EventHandler<UniqueIdChangedEventArgs> ObjectIdChanged
    return:
      type: System.EventHandler{VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs}
    content.vb: Public Event ObjectIdChanged As EventHandler(Of UniqueIdChangedEventArgs)
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObject.ObjectIdChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.OnBeforeSerialize
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneObject.OnBeforeSerialize
  id: OnBeforeSerialize
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: OnBeforeSerialize()
  nameWithType: ProcessSceneObject.OnBeforeSerialize()
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.OnBeforeSerialize()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnBeforeSerialize
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 172
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nImplement this method to receive a callback before Unity serializes your object.\n"
  remarks: "\nWe use this to prevent the GUID to be saved into a prefab on disk.\nBe aware this is called more often than you would think (e.g.: about once per frame if the object is selected in the editor)\n- https://discussions.unity.com/t/onbeforeserialize-is-getting-called-rapidly/115546, \n- https://blog.unity.com/engine-platform/serialization-in-unity "
  example: []
  syntax:
    content: public void OnBeforeSerialize()
    content.vb: Public Sub OnBeforeSerialize
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.OnBeforeSerialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.OnAfterDeserialize
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneObject.OnAfterDeserialize
  id: OnAfterDeserialize
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: OnAfterDeserialize()
  nameWithType: ProcessSceneObject.OnAfterDeserialize()
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.OnAfterDeserialize()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnAfterDeserialize
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 200
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public void OnAfterDeserialize()
    content.vb: Public Sub OnAfterDeserialize
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.OnAfterDeserialize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.ResetUniqueId
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneObject.ResetUniqueId
  id: ResetUniqueId
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: ResetUniqueId()
  nameWithType: ProcessSceneObject.ResetUniqueId()
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.ResetUniqueId()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ResetUniqueId
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 255
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public void ResetUniqueId()
    content.vb: Public Sub ResetUniqueId
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.ResetUniqueId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.SetObjectId(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneObject.SetObjectId(System.Guid)
  id: SetObjectId(System.Guid)
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: SetObjectId(Guid)
  nameWithType: ProcessSceneObject.SetObjectId(Guid)
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.SetObjectId(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetObjectId
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 275
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  example: []
  syntax:
    content: public void SetObjectId(Guid guid)
    parameters:
    - id: guid
      type: System.Guid
    content.vb: Public Sub SetObjectId(guid As Guid)
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.SetObjectId*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObject.SetObjectId(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.ChangeUniqueName(System.String)
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneObject.ChangeUniqueName(System.String)
  id: ChangeUniqueName(System.String)
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: ChangeUniqueName(String)
  nameWithType: ProcessSceneObject.ChangeUniqueName(String)
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.ChangeUniqueName(System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ChangeUniqueName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 287
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: >-
      [Obsolete("This is no longer supported.")]

      public void ChangeUniqueName(string newName = "")
    parameters:
    - id: newName
      type: System.String
    content.vb: >-
      <Obsolete("This is no longer supported.")>

      Public Sub ChangeUniqueName(newName As String = "")
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.ChangeUniqueName*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObject.ChangeUniqueName(System.String)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This is no longer supported.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.IsGuidAssigned
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneObject.IsGuidAssigned
  id: IsGuidAssigned
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: IsGuidAssigned()
  nameWithType: ProcessSceneObject.IsGuidAssigned()
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.IsGuidAssigned()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsGuidAssigned
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 294
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nChecks if the Guid was assigned a value and not <code>System.Guid.Empty</code>.\n"
  example: []
  syntax:
    content: protected bool IsGuidAssigned()
    return:
      type: System.Boolean
      description: <code>true</code> if the Guid is assigned; otherwise, <code>false</code>.
    content.vb: Protected Function IsGuidAssigned As Boolean
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.IsGuidAssigned*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.Init
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneObject.Init
  id: Init
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: ProcessSceneObject.Init()
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.Init()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Init
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 303
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nInitializes the ProcessSceneObject by registering it with the SceneObjectRegistry.\nIt will not register if in prefab mode edit mode or if we are a prefab asset.\n"
  example: []
  syntax:
    content: protected void Init()
    content.vb: Protected Sub Init
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.Init*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.CheckHasProperty``1
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneObject.CheckHasProperty``1
  id: CheckHasProperty``1
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: CheckHasProperty<T>()
  nameWithType: ProcessSceneObject.CheckHasProperty<T>()
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.CheckHasProperty<T>()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CheckHasProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 382
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  example: []
  syntax:
    content: >-
      public bool CheckHasProperty<T>()

          where T : ISceneObjectProperty
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Public Function CheckHasProperty(Of T As ISceneObjectProperty) As Boolean
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.CheckHasProperty*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty``1
  nameWithType.vb: ProcessSceneObject.CheckHasProperty(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.SceneObjects.ProcessSceneObject.CheckHasProperty(Of T)()
  name.vb: CheckHasProperty(Of T)()
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.CheckHasProperty(System.Type)
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneObject.CheckHasProperty(System.Type)
  id: CheckHasProperty(System.Type)
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: CheckHasProperty(Type)
  nameWithType: ProcessSceneObject.CheckHasProperty(Type)
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.CheckHasProperty(System.Type)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CheckHasProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 388
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  example: []
  syntax:
    content: public bool CheckHasProperty(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Function CheckHasProperty(type As Type) As Boolean
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.CheckHasProperty*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.GetProperty``1
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneObject.GetProperty``1
  id: GetProperty``1
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: GetProperty<T>()
  nameWithType: ProcessSceneObject.GetProperty<T>()
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.GetProperty<T>()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 394
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  example: []
  syntax:
    content: >-
      public T GetProperty<T>()

          where T : ISceneObjectProperty
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetProperty(Of T As ISceneObjectProperty) As T
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.GetProperty*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObject.GetProperty``1
  nameWithType.vb: ProcessSceneObject.GetProperty(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.SceneObjects.ProcessSceneObject.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.ValidateProperties(System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneObject.ValidateProperties(System.Collections.Generic.IEnumerable{System.Type})
  id: ValidateProperties(System.Collections.Generic.IEnumerable{System.Type})
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: ValidateProperties(IEnumerable<Type>)
  nameWithType: ProcessSceneObject.ValidateProperties(IEnumerable<Type>)
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.ValidateProperties(System.Collections.Generic.IEnumerable<System.Type>)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ValidateProperties
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 406
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  example: []
  syntax:
    content: public void ValidateProperties(IEnumerable<Type> properties)
    parameters:
    - id: properties
      type: System.Collections.Generic.IEnumerable{System.Type}
    content.vb: Public Sub ValidateProperties(properties As IEnumerable(Of Type))
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.ValidateProperties*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObject.ValidateProperties(System.Collections.Generic.IEnumerable{System.Type})
  nameWithType.vb: ProcessSceneObject.ValidateProperties(IEnumerable(Of Type))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.SceneObjects.ProcessSceneObject.ValidateProperties(System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: ValidateProperties(IEnumerable(Of Type))
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.SetLocked(System.Boolean)
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneObject.SetLocked(System.Boolean)
  id: SetLocked(System.Boolean)
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: SetLocked(Boolean)
  nameWithType: ProcessSceneObject.SetLocked(Boolean)
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.SetLocked(System.Boolean)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetLocked
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 426
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  example: []
  syntax:
    content: public void SetLocked(bool lockState)
    parameters:
    - id: lockState
      type: System.Boolean
    content.vb: Public Sub SetLocked(lockState As Boolean)
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.SetLocked*
  implements:
  - VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneObject.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  id: RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: RequestLocked(Boolean, IStepData)
  nameWithType: ProcessSceneObject.RequestLocked(Boolean, IStepData)
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.RequestLocked(System.Boolean, VRBuilder.Core.IStepData)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RequestLocked
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 452
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  example: []
  syntax:
    content: public virtual void RequestLocked(bool lockState, IStepData stepData)
    parameters:
    - id: lockState
      type: System.Boolean
    - id: stepData
      type: VRBuilder.Core.IStepData
    content.vb: Public Overridable Sub RequestLocked(lockState As Boolean, stepData As IStepData)
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.RequestLocked*
  implements:
  - VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.RemoveUnlocker(VRBuilder.Core.IStepData)
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneObject.RemoveUnlocker(VRBuilder.Core.IStepData)
  id: RemoveUnlocker(VRBuilder.Core.IStepData)
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: RemoveUnlocker(IStepData)
  nameWithType: ProcessSceneObject.RemoveUnlocker(IStepData)
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.RemoveUnlocker(VRBuilder.Core.IStepData)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RemoveUnlocker
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 487
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  example: []
  syntax:
    content: public bool RemoveUnlocker(IStepData data)
    parameters:
    - id: data
      type: VRBuilder.Core.IStepData
    return:
      type: System.Boolean
    content.vb: Public Function RemoveUnlocker(data As IStepData) As Boolean
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.RemoveUnlocker*
  implements:
  - VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.AddGuid(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneObject.AddGuid(System.Guid)
  id: AddGuid(System.Guid)
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: AddGuid(Guid)
  nameWithType: ProcessSceneObject.AddGuid(Guid)
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.AddGuid(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AddGuid
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 502
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  example: []
  syntax:
    content: public void AddGuid(Guid guid)
    parameters:
    - id: guid
      type: System.Guid
    content.vb: Public Sub AddGuid(guid As Guid)
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.AddGuid*
  implements:
  - VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.HasGuid(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneObject.HasGuid(System.Guid)
  id: HasGuid(System.Guid)
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: HasGuid(Guid)
  nameWithType: ProcessSceneObject.HasGuid(Guid)
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.HasGuid(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: HasGuid
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 513
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  example: []
  syntax:
    content: public bool HasGuid(Guid guid)
    parameters:
    - id: guid
      type: System.Guid
    return:
      type: System.Boolean
    content.vb: Public Function HasGuid(guid As Guid) As Boolean
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.HasGuid*
  implements:
  - VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.RemoveGuid(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneObject.RemoveGuid(System.Guid)
  id: RemoveGuid(System.Guid)
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: RemoveGuid(Guid)
  nameWithType: ProcessSceneObject.RemoveGuid(Guid)
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.RemoveGuid(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RemoveGuid
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 519
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  example: []
  syntax:
    content: public bool RemoveGuid(Guid guid)
    parameters:
    - id: guid
      type: System.Guid
    return:
      type: System.Boolean
    content.vb: Public Function RemoveGuid(guid As Guid) As Boolean
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.RemoveGuid*
  implements:
  - VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.ToString
  commentId: M:VRBuilder.Core.SceneObjects.ProcessSceneObject.ToString
  id: ToString
  parent: VRBuilder.Core.SceneObjects.ProcessSceneObject
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ProcessSceneObject.ToString()
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.ToString()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ToString
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessSceneObject.cs
    startLine: 532
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: VRBuilder.Core.SceneObjects.ProcessSceneObject.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ISerializationCallbackReceiver
  commentId: '!:ISerializationCallbackReceiver'
  isExternal: true
  name: ISerializationCallbackReceiver
  nameWithType: ISerializationCallbackReceiver
  fullName: ISerializationCallbackReceiver
- uid: VRBuilder.Core.SceneObjects.ISceneObject
  commentId: T:VRBuilder.Core.SceneObjects.ISceneObject
  parent: VRBuilder.Core.SceneObjects
  name: ISceneObject
  nameWithType: ISceneObject
  fullName: VRBuilder.Core.SceneObjects.ISceneObject
- uid: VRBuilder.Core.SceneObjects.ILockable
  commentId: T:VRBuilder.Core.SceneObjects.ILockable
  parent: VRBuilder.Core.SceneObjects
  name: ILockable
  nameWithType: ILockable
  fullName: VRBuilder.Core.SceneObjects.ILockable
- uid: VRBuilder.Core.SceneObjects.IGuidContainer
  commentId: T:VRBuilder.Core.SceneObjects.IGuidContainer
  parent: VRBuilder.Core.SceneObjects
  name: IGuidContainer
  nameWithType: IGuidContainer
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer
- uid: VRBuilder.Core.SceneObjects.ISceneObject.VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(System.String)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(VRBuilder.Core.SceneObjects.ISceneObject,System.String)
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  definition: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(VRBuilder.Core.SceneObjects.ISceneObject,System.String)
  name: SetSuitableName(String)
  nameWithType: SceneObjectExtensions.SetSuitableName(String)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(System.String)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(System.String)
    name: SetSuitableName
    nameWithType: SceneObjectExtensions.SetSuitableName
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(System.String)
    name: SetSuitableName
    nameWithType: SceneObjectExtensions.SetSuitableName
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ISceneObject.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1(VRBuilder.Core.SceneObjects.ISceneObject)
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  definition: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1(VRBuilder.Core.SceneObjects.ISceneObject)
  name: AddProcessProperty<T>()
  nameWithType: SceneObjectExtensions.AddProcessProperty<T>()
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty<T>()
  nameWithType.vb: SceneObjectExtensions.AddProcessProperty(Of T)()
  fullName.vb: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(Of T)()
  name.vb: AddProcessProperty(Of T)()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1
    name: AddProcessProperty<T>
    nameWithType: SceneObjectExtensions.AddProcessProperty<T>
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1
    name: AddProcessProperty(Of T)
    nameWithType: SceneObjectExtensions.AddProcessProperty(Of T)
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ISceneObject.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(System.Type)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type)
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  definition: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type)
  name: AddProcessProperty(Type)
  nameWithType: SceneObjectExtensions.AddProcessProperty(Type)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(System.Type)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(System.Type)
    name: AddProcessProperty
    nameWithType: SceneObjectExtensions.AddProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(System.Type)
    name: AddProcessProperty
    nameWithType: SceneObjectExtensions.AddProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ISceneObject.VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  definition: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  name: RemoveProcessProperty(Component, Boolean, IEnumerable<Component>)
  nameWithType: SceneObjectExtensions.RemoveProcessProperty(Component, Boolean, IEnumerable<Component>)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(Component, System.Boolean, System.Collections.Generic.IEnumerable<Component>)
  nameWithType.vb: SceneObjectExtensions.RemoveProcessProperty(Component, Boolean, IEnumerable(Of Component))
  fullName.vb: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(Component, System.Boolean, System.Collections.Generic.IEnumerable(Of Component))
  name.vb: RemoveProcessProperty(Component, Boolean, IEnumerable(Of Component))
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
    name: RemoveProcessProperty
    nameWithType: SceneObjectExtensions.RemoveProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
    name: RemoveProcessProperty
    nameWithType: SceneObjectExtensions.RemoveProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ISceneObject.VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  definition: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  name: RemoveProcessProperty(Type, Boolean, IEnumerable<Component>)
  nameWithType: SceneObjectExtensions.RemoveProcessProperty(Type, Boolean, IEnumerable<Component>)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(System.Type, System.Boolean, System.Collections.Generic.IEnumerable<Component>)
  nameWithType.vb: SceneObjectExtensions.RemoveProcessProperty(Type, Boolean, IEnumerable(Of Component))
  fullName.vb: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(System.Type, System.Boolean, System.Collections.Generic.IEnumerable(Of Component))
  name.vb: RemoveProcessProperty(Type, Boolean, IEnumerable(Of Component))
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
    name: RemoveProcessProperty
    nameWithType: SceneObjectExtensions.RemoveProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
    name: RemoveProcessProperty
    nameWithType: SceneObjectExtensions.RemoveProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(VRBuilder.Core.SceneObjects.ISceneObject,System.String)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(VRBuilder.Core.SceneObjects.ISceneObject,System.String)
  isExternal: true
  name: SetSuitableName(ISceneObject, String)
  nameWithType: SceneObjectExtensions.SetSuitableName(ISceneObject, String)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(VRBuilder.Core.SceneObjects.ISceneObject, System.String)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(VRBuilder.Core.SceneObjects.ISceneObject,System.String)
    name: SetSuitableName
    nameWithType: SceneObjectExtensions.SetSuitableName
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(VRBuilder.Core.SceneObjects.ISceneObject,System.String)
    name: SetSuitableName
    nameWithType: SceneObjectExtensions.SetSuitableName
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.SceneObjectExtensions
  commentId: T:VRBuilder.Core.Properties.SceneObjectExtensions
  parent: VRBuilder.Core.Properties
  name: SceneObjectExtensions
  nameWithType: SceneObjectExtensions
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1(VRBuilder.Core.SceneObjects.ISceneObject)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1(VRBuilder.Core.SceneObjects.ISceneObject)
  name: AddProcessProperty<T>(ISceneObject)
  nameWithType: SceneObjectExtensions.AddProcessProperty<T>(ISceneObject)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty<T>(VRBuilder.Core.SceneObjects.ISceneObject)
  nameWithType.vb: SceneObjectExtensions.AddProcessProperty(Of T)(ISceneObject)
  fullName.vb: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(Of T)(VRBuilder.Core.SceneObjects.ISceneObject)
  name.vb: AddProcessProperty(Of T)(ISceneObject)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1(VRBuilder.Core.SceneObjects.ISceneObject)
    name: AddProcessProperty<T>
    nameWithType: SceneObjectExtensions.AddProcessProperty<T>
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1(VRBuilder.Core.SceneObjects.ISceneObject)
    name: AddProcessProperty(Of T)
    nameWithType: SceneObjectExtensions.AddProcessProperty(Of T)
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type)
  isExternal: true
  name: AddProcessProperty(ISceneObject, Type)
  nameWithType: SceneObjectExtensions.AddProcessProperty(ISceneObject, Type)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject, System.Type)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type)
    name: AddProcessProperty
    nameWithType: SceneObjectExtensions.AddProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type)
    name: AddProcessProperty
    nameWithType: SceneObjectExtensions.AddProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  isExternal: true
  name: RemoveProcessProperty(ISceneObject, Component, Boolean, IEnumerable<Component>)
  nameWithType: SceneObjectExtensions.RemoveProcessProperty(ISceneObject, Component, Boolean, IEnumerable<Component>)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject, Component, System.Boolean, System.Collections.Generic.IEnumerable<Component>)
  nameWithType.vb: SceneObjectExtensions.RemoveProcessProperty(ISceneObject, Component, Boolean, IEnumerable(Of Component))
  fullName.vb: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject, Component, System.Boolean, System.Collections.Generic.IEnumerable(Of Component))
  name.vb: RemoveProcessProperty(ISceneObject, Component, Boolean, IEnumerable(Of Component))
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
    name: RemoveProcessProperty
    nameWithType: SceneObjectExtensions.RemoveProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
    name: RemoveProcessProperty
    nameWithType: SceneObjectExtensions.RemoveProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  isExternal: true
  name: RemoveProcessProperty(ISceneObject, Type, Boolean, IEnumerable<Component>)
  nameWithType: SceneObjectExtensions.RemoveProcessProperty(ISceneObject, Type, Boolean, IEnumerable<Component>)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject, System.Type, System.Boolean, System.Collections.Generic.IEnumerable<Component>)
  nameWithType.vb: SceneObjectExtensions.RemoveProcessProperty(ISceneObject, Type, Boolean, IEnumerable(Of Component))
  fullName.vb: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject, System.Type, System.Boolean, System.Collections.Generic.IEnumerable(Of Component))
  name.vb: RemoveProcessProperty(ISceneObject, Type, Boolean, IEnumerable(Of Component))
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
    name: RemoveProcessProperty
    nameWithType: SceneObjectExtensions.RemoveProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
    name: RemoveProcessProperty
    nameWithType: SceneObjectExtensions.RemoveProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties
  commentId: N:VRBuilder.Core.Properties
  name: VRBuilder.Core.Properties
  nameWithType: VRBuilder.Core.Properties
  fullName: VRBuilder.Core.Properties
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.serializedGuid
  commentId: F:VRBuilder.Core.SceneObjects.ProcessSceneObject.serializedGuid
  isExternal: true
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.Guid*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.Guid
  name: Guid
  nameWithType: ProcessSceneObject.Guid
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.Guid
- uid: VRBuilder.Core.SceneObjects.ISceneObject.Guid
  commentId: P:VRBuilder.Core.SceneObjects.ISceneObject.Guid
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  name: Guid
  nameWithType: ISceneObject.Guid
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.Guid
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.UniqueName*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.UniqueName
  name: UniqueName
  nameWithType: ProcessSceneObject.UniqueName
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.UniqueName
- uid: VRBuilder.Core.SceneObjects.ISceneObject.UniqueName
  commentId: P:VRBuilder.Core.SceneObjects.ISceneObject.UniqueName
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  name: UniqueName
  nameWithType: ISceneObject.UniqueName
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.UniqueName
- uid: System.Collections.Generic.List{VRBuilder.Core.SceneObjects.SerializableGuid}
  commentId: T:System.Collections.Generic.List{VRBuilder.Core.SceneObjects.SerializableGuid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SerializableGuid>
  nameWithType: List<SerializableGuid>
  fullName: System.Collections.Generic.List<VRBuilder.Core.SceneObjects.SerializableGuid>
  nameWithType.vb: List(Of SerializableGuid)
  fullName.vb: System.Collections.Generic.List(Of VRBuilder.Core.SceneObjects.SerializableGuid)
  name.vb: List(Of SerializableGuid)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.SceneObjects.SerializableGuid
    name: SerializableGuid
    nameWithType: SerializableGuid
    fullName: VRBuilder.Core.SceneObjects.SerializableGuid
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.SceneObjects.SerializableGuid
    name: SerializableGuid
    nameWithType: SerializableGuid
    fullName: VRBuilder.Core.SceneObjects.SerializableGuid
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.Guids*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.Guids
  name: Guids
  nameWithType: ProcessSceneObject.Guids
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.Guids
- uid: VRBuilder.Core.SceneObjects.IGuidContainer.Guids
  commentId: P:VRBuilder.Core.SceneObjects.IGuidContainer.Guids
  parent: VRBuilder.Core.SceneObjects.IGuidContainer
  name: Guids
  nameWithType: IGuidContainer.Guids
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer.Guids
- uid: System.Collections.Generic.IEnumerable{System.Guid}
  commentId: T:System.Collections.Generic.IEnumerable{System.Guid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Guid>
  nameWithType: IEnumerable<Guid>
  fullName: System.Collections.Generic.IEnumerable<System.Guid>
  nameWithType.vb: IEnumerable(Of Guid)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Guid)
  name.vb: IEnumerable(Of Guid)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.Tags*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.Tags
  name: Tags
  nameWithType: ProcessSceneObject.Tags
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.Tags
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.GameObject*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.GameObject
  name: GameObject
  nameWithType: ProcessSceneObject.GameObject
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.GameObject
- uid: VRBuilder.Core.SceneObjects.ISceneObject.GameObject
  commentId: P:VRBuilder.Core.SceneObjects.ISceneObject.GameObject
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  name: GameObject
  nameWithType: ISceneObject.GameObject
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.GameObject
- uid: GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.Properties*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.Properties
  name: Properties
  nameWithType: ProcessSceneObject.Properties
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.Properties
- uid: VRBuilder.Core.SceneObjects.ISceneObject.Properties
  commentId: P:VRBuilder.Core.SceneObjects.ISceneObject.Properties
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  name: Properties
  nameWithType: ISceneObject.Properties
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.Properties
- uid: System.Collections.Generic.ICollection{VRBuilder.Core.Properties.ISceneObjectProperty}
  commentId: T:System.Collections.Generic.ICollection{VRBuilder.Core.Properties.ISceneObjectProperty}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ISceneObjectProperty>
  nameWithType: ICollection<ISceneObjectProperty>
  fullName: System.Collections.Generic.ICollection<VRBuilder.Core.Properties.ISceneObjectProperty>
  nameWithType.vb: ICollection(Of ISceneObjectProperty)
  fullName.vb: System.Collections.Generic.ICollection(Of VRBuilder.Core.Properties.ISceneObjectProperty)
  name.vb: ICollection(Of ISceneObjectProperty)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Properties.ISceneObjectProperty
    name: ISceneObjectProperty
    nameWithType: ISceneObjectProperty
    fullName: VRBuilder.Core.Properties.ISceneObjectProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Properties.ISceneObjectProperty
    name: ISceneObjectProperty
    nameWithType: ISceneObjectProperty
    fullName: VRBuilder.Core.Properties.ISceneObjectProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.IsLocked*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.IsLocked
  name: IsLocked
  nameWithType: ProcessSceneObject.IsLocked
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.IsLocked
- uid: VRBuilder.Core.SceneObjects.ILockable.IsLocked
  commentId: P:VRBuilder.Core.SceneObjects.ILockable.IsLocked
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: IsLocked
  nameWithType: ILockable.IsLocked
  fullName: VRBuilder.Core.SceneObjects.ILockable.IsLocked
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.SceneObjects.ISceneObject.UniqueNameChanged
  commentId: E:VRBuilder.Core.SceneObjects.ISceneObject.UniqueNameChanged
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  name: UniqueNameChanged
  nameWithType: ISceneObject.UniqueNameChanged
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.UniqueNameChanged
- uid: System.EventHandler{VRBuilder.Core.SceneObjects.SceneObjectNameChanged}
  commentId: T:System.EventHandler{VRBuilder.Core.SceneObjects.SceneObjectNameChanged}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<SceneObjectNameChanged>
  nameWithType: EventHandler<SceneObjectNameChanged>
  fullName: System.EventHandler<VRBuilder.Core.SceneObjects.SceneObjectNameChanged>
  nameWithType.vb: EventHandler(Of SceneObjectNameChanged)
  fullName.vb: System.EventHandler(Of VRBuilder.Core.SceneObjects.SceneObjectNameChanged)
  name.vb: EventHandler(Of SceneObjectNameChanged)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.SceneObjects.SceneObjectNameChanged
    name: SceneObjectNameChanged
    nameWithType: SceneObjectNameChanged
    fullName: VRBuilder.Core.SceneObjects.SceneObjectNameChanged
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.SceneObjects.SceneObjectNameChanged
    name: SceneObjectNameChanged
    nameWithType: SceneObjectNameChanged
    fullName: VRBuilder.Core.SceneObjects.SceneObjectNameChanged
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ILockable.Locked
  commentId: E:VRBuilder.Core.SceneObjects.ILockable.Locked
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: Locked
  nameWithType: ILockable.Locked
  fullName: VRBuilder.Core.SceneObjects.ILockable.Locked
- uid: System.EventHandler{VRBuilder.Core.SceneObjects.LockStateChangedEventArgs}
  commentId: T:System.EventHandler{VRBuilder.Core.SceneObjects.LockStateChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<LockStateChangedEventArgs>
  nameWithType: EventHandler<LockStateChangedEventArgs>
  fullName: System.EventHandler<VRBuilder.Core.SceneObjects.LockStateChangedEventArgs>
  nameWithType.vb: EventHandler(Of LockStateChangedEventArgs)
  fullName.vb: System.EventHandler(Of VRBuilder.Core.SceneObjects.LockStateChangedEventArgs)
  name.vb: EventHandler(Of LockStateChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.SceneObjects.LockStateChangedEventArgs
    name: LockStateChangedEventArgs
    nameWithType: LockStateChangedEventArgs
    fullName: VRBuilder.Core.SceneObjects.LockStateChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.SceneObjects.LockStateChangedEventArgs
    name: LockStateChangedEventArgs
    nameWithType: LockStateChangedEventArgs
    fullName: VRBuilder.Core.SceneObjects.LockStateChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ILockable.Unlocked
  commentId: E:VRBuilder.Core.SceneObjects.ILockable.Unlocked
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: Unlocked
  nameWithType: ILockable.Unlocked
  fullName: VRBuilder.Core.SceneObjects.ILockable.Unlocked
- uid: VRBuilder.Core.SceneObjects.IGuidContainer.GuidAdded
  commentId: E:VRBuilder.Core.SceneObjects.IGuidContainer.GuidAdded
  parent: VRBuilder.Core.SceneObjects.IGuidContainer
  name: GuidAdded
  nameWithType: IGuidContainer.GuidAdded
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer.GuidAdded
- uid: System.EventHandler{VRBuilder.Core.SceneObjects.GuidContainerEventArgs}
  commentId: T:System.EventHandler{VRBuilder.Core.SceneObjects.GuidContainerEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<GuidContainerEventArgs>
  nameWithType: EventHandler<GuidContainerEventArgs>
  fullName: System.EventHandler<VRBuilder.Core.SceneObjects.GuidContainerEventArgs>
  nameWithType.vb: EventHandler(Of GuidContainerEventArgs)
  fullName.vb: System.EventHandler(Of VRBuilder.Core.SceneObjects.GuidContainerEventArgs)
  name.vb: EventHandler(Of GuidContainerEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.SceneObjects.GuidContainerEventArgs
    name: GuidContainerEventArgs
    nameWithType: GuidContainerEventArgs
    fullName: VRBuilder.Core.SceneObjects.GuidContainerEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.SceneObjects.GuidContainerEventArgs
    name: GuidContainerEventArgs
    nameWithType: GuidContainerEventArgs
    fullName: VRBuilder.Core.SceneObjects.GuidContainerEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.IGuidContainer.GuidRemoved
  commentId: E:VRBuilder.Core.SceneObjects.IGuidContainer.GuidRemoved
  parent: VRBuilder.Core.SceneObjects.IGuidContainer
  name: GuidRemoved
  nameWithType: IGuidContainer.GuidRemoved
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer.GuidRemoved
- uid: VRBuilder.Core.SceneObjects.ISceneObject.ObjectIdChanged
  commentId: E:VRBuilder.Core.SceneObjects.ISceneObject.ObjectIdChanged
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  name: ObjectIdChanged
  nameWithType: ISceneObject.ObjectIdChanged
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.ObjectIdChanged
- uid: System.EventHandler{VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs}
  commentId: T:System.EventHandler{VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<UniqueIdChangedEventArgs>
  nameWithType: EventHandler<UniqueIdChangedEventArgs>
  fullName: System.EventHandler<VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs>
  nameWithType.vb: EventHandler(Of UniqueIdChangedEventArgs)
  fullName.vb: System.EventHandler(Of VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs)
  name.vb: EventHandler(Of UniqueIdChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs
    name: UniqueIdChangedEventArgs
    nameWithType: UniqueIdChangedEventArgs
    fullName: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs
    name: UniqueIdChangedEventArgs
    nameWithType: UniqueIdChangedEventArgs
    fullName: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.OnBeforeSerialize*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.OnBeforeSerialize
  name: OnBeforeSerialize
  nameWithType: ProcessSceneObject.OnBeforeSerialize
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.OnBeforeSerialize
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.OnAfterDeserialize*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.OnAfterDeserialize
  name: OnAfterDeserialize
  nameWithType: ProcessSceneObject.OnAfterDeserialize
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.OnAfterDeserialize
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.ResetUniqueId*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.ResetUniqueId
  name: ResetUniqueId
  nameWithType: ProcessSceneObject.ResetUniqueId
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.ResetUniqueId
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.SetObjectId*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.SetObjectId
  name: SetObjectId
  nameWithType: ProcessSceneObject.SetObjectId
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.SetObjectId
- uid: VRBuilder.Core.SceneObjects.ISceneObject.SetObjectId(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObject.SetObjectId(System.Guid)
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  isExternal: true
  name: SetObjectId(Guid)
  nameWithType: ISceneObject.SetObjectId(Guid)
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.SetObjectId(System.Guid)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ISceneObject.SetObjectId(System.Guid)
    name: SetObjectId
    nameWithType: ISceneObject.SetObjectId
    fullName: VRBuilder.Core.SceneObjects.ISceneObject.SetObjectId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ISceneObject.SetObjectId(System.Guid)
    name: SetObjectId
    nameWithType: ISceneObject.SetObjectId
    fullName: VRBuilder.Core.SceneObjects.ISceneObject.SetObjectId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.ChangeUniqueName*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.ChangeUniqueName
  name: ChangeUniqueName
  nameWithType: ProcessSceneObject.ChangeUniqueName
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.ChangeUniqueName
- uid: VRBuilder.Core.SceneObjects.ISceneObject.ChangeUniqueName(System.String)
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObject.ChangeUniqueName(System.String)
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  isExternal: true
  name: ChangeUniqueName(String)
  nameWithType: ISceneObject.ChangeUniqueName(String)
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.ChangeUniqueName(System.String)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ISceneObject.ChangeUniqueName(System.String)
    name: ChangeUniqueName
    nameWithType: ISceneObject.ChangeUniqueName
    fullName: VRBuilder.Core.SceneObjects.ISceneObject.ChangeUniqueName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ISceneObject.ChangeUniqueName(System.String)
    name: ChangeUniqueName
    nameWithType: ISceneObject.ChangeUniqueName
    fullName: VRBuilder.Core.SceneObjects.ISceneObject.ChangeUniqueName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.IsGuidAssigned*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.IsGuidAssigned
  name: IsGuidAssigned
  nameWithType: ProcessSceneObject.IsGuidAssigned
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.IsGuidAssigned
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.Init*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.Init
  name: Init
  nameWithType: ProcessSceneObject.Init
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.Init
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.CheckHasProperty*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.CheckHasProperty
  name: CheckHasProperty
  nameWithType: ProcessSceneObject.CheckHasProperty
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.CheckHasProperty
- uid: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty``1
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty``1
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  name: CheckHasProperty<T>()
  nameWithType: ISceneObject.CheckHasProperty<T>()
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty<T>()
  nameWithType.vb: ISceneObject.CheckHasProperty(Of T)()
  fullName.vb: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty(Of T)()
  name.vb: CheckHasProperty(Of T)()
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty``1
    name: CheckHasProperty<T>
    nameWithType: ISceneObject.CheckHasProperty<T>
    fullName: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty``1
    name: CheckHasProperty(Of T)
    nameWithType: ISceneObject.CheckHasProperty(Of T)
    fullName: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty(System.Type)
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty(System.Type)
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  isExternal: true
  name: CheckHasProperty(Type)
  nameWithType: ISceneObject.CheckHasProperty(Type)
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty(System.Type)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty(System.Type)
    name: CheckHasProperty
    nameWithType: ISceneObject.CheckHasProperty
    fullName: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty(System.Type)
    name: CheckHasProperty
    nameWithType: ISceneObject.CheckHasProperty
    fullName: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.GetProperty*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.GetProperty
  name: GetProperty
  nameWithType: ProcessSceneObject.GetProperty
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.GetProperty
- uid: VRBuilder.Core.SceneObjects.ISceneObject.GetProperty``1
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObject.GetProperty``1
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  name: GetProperty<T>()
  nameWithType: ISceneObject.GetProperty<T>()
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.GetProperty<T>()
  nameWithType.vb: ISceneObject.GetProperty(Of T)()
  fullName.vb: VRBuilder.Core.SceneObjects.ISceneObject.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ISceneObject.GetProperty``1
    name: GetProperty<T>
    nameWithType: ISceneObject.GetProperty<T>
    fullName: VRBuilder.Core.SceneObjects.ISceneObject.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ISceneObject.GetProperty``1
    name: GetProperty(Of T)
    nameWithType: ISceneObject.GetProperty(Of T)
    fullName: VRBuilder.Core.SceneObjects.ISceneObject.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.ValidateProperties*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.ValidateProperties
  name: ValidateProperties
  nameWithType: ProcessSceneObject.ValidateProperties
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.ValidateProperties
- uid: VRBuilder.Core.SceneObjects.ISceneObject.ValidateProperties(System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObject.ValidateProperties(System.Collections.Generic.IEnumerable{System.Type})
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  isExternal: true
  name: ValidateProperties(IEnumerable<Type>)
  nameWithType: ISceneObject.ValidateProperties(IEnumerable<Type>)
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.ValidateProperties(System.Collections.Generic.IEnumerable<System.Type>)
  nameWithType.vb: ISceneObject.ValidateProperties(IEnumerable(Of Type))
  fullName.vb: VRBuilder.Core.SceneObjects.ISceneObject.ValidateProperties(System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: ValidateProperties(IEnumerable(Of Type))
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ISceneObject.ValidateProperties(System.Collections.Generic.IEnumerable{System.Type})
    name: ValidateProperties
    nameWithType: ISceneObject.ValidateProperties
    fullName: VRBuilder.Core.SceneObjects.ISceneObject.ValidateProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ISceneObject.ValidateProperties(System.Collections.Generic.IEnumerable{System.Type})
    name: ValidateProperties
    nameWithType: ISceneObject.ValidateProperties
    fullName: VRBuilder.Core.SceneObjects.ISceneObject.ValidateProperties
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.SetLocked*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.SetLocked
  name: SetLocked
  nameWithType: ProcessSceneObject.SetLocked
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.SetLocked
- uid: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  commentId: M:VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  parent: VRBuilder.Core.SceneObjects.ILockable
  isExternal: true
  name: SetLocked(Boolean)
  nameWithType: ILockable.SetLocked(Boolean)
  fullName: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
    name: SetLocked
    nameWithType: ILockable.SetLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.SetLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
    name: SetLocked
    nameWithType: ILockable.SetLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.SetLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.RequestLocked*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.RequestLocked
  name: RequestLocked
  nameWithType: ProcessSceneObject.RequestLocked
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.RequestLocked
- uid: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  commentId: M:VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  parent: VRBuilder.Core.SceneObjects.ILockable
  isExternal: true
  name: RequestLocked(Boolean, IStepData)
  nameWithType: ILockable.RequestLocked(Boolean, IStepData)
  fullName: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean, VRBuilder.Core.IStepData)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
    name: RequestLocked
    nameWithType: ILockable.RequestLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.RequestLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
    name: RequestLocked
    nameWithType: ILockable.RequestLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.RequestLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IStepData
  commentId: T:VRBuilder.Core.IStepData
  parent: VRBuilder.Core
  name: IStepData
  nameWithType: IStepData
  fullName: VRBuilder.Core.IStepData
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.RemoveUnlocker*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.RemoveUnlocker
  name: RemoveUnlocker
  nameWithType: ProcessSceneObject.RemoveUnlocker
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.RemoveUnlocker
- uid: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  commentId: M:VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: RemoveUnlocker(IStepData)
  nameWithType: ILockable.RemoveUnlocker(IStepData)
  fullName: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
    name: RemoveUnlocker
    nameWithType: ILockable.RemoveUnlocker
    fullName: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
    name: RemoveUnlocker
    nameWithType: ILockable.RemoveUnlocker
    fullName: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.AddGuid*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.AddGuid
  name: AddGuid
  nameWithType: ProcessSceneObject.AddGuid
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.AddGuid
- uid: VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid(System.Guid)
  parent: VRBuilder.Core.SceneObjects.IGuidContainer
  isExternal: true
  name: AddGuid(Guid)
  nameWithType: IGuidContainer.AddGuid(Guid)
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid(System.Guid)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid(System.Guid)
    name: AddGuid
    nameWithType: IGuidContainer.AddGuid
    fullName: VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid(System.Guid)
    name: AddGuid
    nameWithType: IGuidContainer.AddGuid
    fullName: VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.HasGuid*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.HasGuid
  name: HasGuid
  nameWithType: ProcessSceneObject.HasGuid
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.HasGuid
- uid: VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid(System.Guid)
  parent: VRBuilder.Core.SceneObjects.IGuidContainer
  isExternal: true
  name: HasGuid(Guid)
  nameWithType: IGuidContainer.HasGuid(Guid)
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid(System.Guid)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid(System.Guid)
    name: HasGuid
    nameWithType: IGuidContainer.HasGuid
    fullName: VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid(System.Guid)
    name: HasGuid
    nameWithType: IGuidContainer.HasGuid
    fullName: VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.RemoveGuid*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.RemoveGuid
  name: RemoveGuid
  nameWithType: ProcessSceneObject.RemoveGuid
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.RemoveGuid
- uid: VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid(System.Guid)
  parent: VRBuilder.Core.SceneObjects.IGuidContainer
  isExternal: true
  name: RemoveGuid(Guid)
  nameWithType: IGuidContainer.RemoveGuid(Guid)
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid(System.Guid)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid(System.Guid)
    name: RemoveGuid
    nameWithType: IGuidContainer.RemoveGuid
    fullName: VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid(System.Guid)
    name: RemoveGuid
    nameWithType: IGuidContainer.RemoveGuid
    fullName: VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ProcessSceneObject.ToString*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessSceneObject.ToString
  name: ToString
  nameWithType: ProcessSceneObject.ToString
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneObject.ToString
