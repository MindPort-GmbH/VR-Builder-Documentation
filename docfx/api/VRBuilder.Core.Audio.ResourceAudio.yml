### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Audio.ResourceAudio
  commentId: T:VRBuilder.Core.Audio.ResourceAudio
  id: ResourceAudio
  parent: VRBuilder.Core.Audio
  children:
  - VRBuilder.Core.Audio.ResourceAudio.#ctor
  - VRBuilder.Core.Audio.ResourceAudio.#ctor(System.String)
  - VRBuilder.Core.Audio.ResourceAudio.AudioClip
  - VRBuilder.Core.Audio.ResourceAudio.ClipData
  - VRBuilder.Core.Audio.ResourceAudio.GetLocalizedContent
  - VRBuilder.Core.Audio.ResourceAudio.HasAudioClip
  - VRBuilder.Core.Audio.ResourceAudio.InitializeAudioClip
  - VRBuilder.Core.Audio.ResourceAudio.IsEmpty
  - VRBuilder.Core.Audio.ResourceAudio.ResourcesPath
  langs:
  - csharp
  - vb
  name: ResourceAudio
  nameWithType: ResourceAudio
  fullName: VRBuilder.Core.Audio.ResourceAudio
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Utils/Audio/ResourceAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ResourceAudio
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Audio/ResourceAudio.cs
    startLine: 15
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Audio
  summary: "\nUnity resource based audio data.\n"
  example: []
  syntax:
    content: >-
      [DataContract(IsReference = true)]

      [DisplayName("Play Audio File")]

      public class ResourceAudio : IAudioData, ICanBeEmpty, ILocalizedContent
    content.vb: >-
      <DataContract(IsReference:=True)>

      <DisplayName("Play Audio File")>

      Public Class ResourceAudio

          Implements IAudioData, ICanBeEmpty, ILocalizedContent
  inheritance:
  - System.Object
  implements:
  - VRBuilder.Core.Audio.IAudioData
  - VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  - VRBuilder.Core.Localization.ILocalizedContent
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Play Audio File
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.Audio.ResourceAudio.ResourcesPath
  commentId: P:VRBuilder.Core.Audio.ResourceAudio.ResourcesPath
  id: ResourcesPath
  parent: VRBuilder.Core.Audio.ResourceAudio
  langs:
  - csharp
  - vb
  name: ResourcesPath
  nameWithType: ResourceAudio.ResourcesPath
  fullName: VRBuilder.Core.Audio.ResourceAudio.ResourcesPath
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Utils/Audio/ResourceAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ResourcesPath
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Audio/ResourceAudio.cs
    startLine: 24
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Audio
  summary: "\nFile path relative to the Resources folder.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DisplayName("Resources path / Key")]

      [DisplayTooltip("The audio clip needs to be in a folder called Resources or one of its subfolders. The path to enter here is the relative path to the Resources folder, without extension. So, if the path is 'Assets/Resources/Audio/MyFile.wav', you would need to enter 'Audio/MyFile'.")]

      public string ResourcesPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      <DisplayName("Resources path / Key")>

      <DisplayTooltip("The audio clip needs to be in a folder called Resources or one of its subfolders. The path to enter here is the relative path to the Resources folder, without extension. So, if the path is 'Assets/Resources/Audio/MyFile.wav', you would need to enter 'Audio/MyFile'.")>

      Public Property ResourcesPath As String
  overload: VRBuilder.Core.Audio.ResourceAudio.ResourcesPath*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Resources path / Key
  - type: VRBuilder.Core.Attributes.DisplayTooltipAttribute
    ctor: VRBuilder.Core.Attributes.DisplayTooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: The audio clip needs to be in a folder called Resources or one of its subfolders. The path to enter here is the relative path to the Resources folder, without extension. So, if the path is 'Assets/Resources/Audio/MyFile.wav', you would need to enter 'Audio/MyFile'.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Audio.ResourceAudio.#ctor(System.String)
  commentId: M:VRBuilder.Core.Audio.ResourceAudio.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: VRBuilder.Core.Audio.ResourceAudio
  langs:
  - csharp
  - vb
  name: ResourceAudio(String)
  nameWithType: ResourceAudio.ResourceAudio(String)
  fullName: VRBuilder.Core.Audio.ResourceAudio.ResourceAudio(System.String)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/Utils/Audio/ResourceAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Audio/ResourceAudio.cs
    startLine: 43
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Audio
  syntax:
    content: public ResourceAudio(string path)
    parameters:
    - id: path
      type: System.String
    content.vb: Public Sub New(path As String)
  overload: VRBuilder.Core.Audio.ResourceAudio.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Audio.ResourceAudio.#ctor
  commentId: M:VRBuilder.Core.Audio.ResourceAudio.#ctor
  id: '#ctor'
  parent: VRBuilder.Core.Audio.ResourceAudio
  langs:
  - csharp
  - vb
  name: ResourceAudio()
  nameWithType: ResourceAudio.ResourceAudio()
  fullName: VRBuilder.Core.Audio.ResourceAudio.ResourceAudio()
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/Utils/Audio/ResourceAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Audio/ResourceAudio.cs
    startLine: 48
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Audio
  syntax:
    content: protected ResourceAudio()
    content.vb: Protected Sub New
  overload: VRBuilder.Core.Audio.ResourceAudio.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.Core.Audio.ResourceAudio.HasAudioClip
  commentId: P:VRBuilder.Core.Audio.ResourceAudio.HasAudioClip
  id: HasAudioClip
  parent: VRBuilder.Core.Audio.ResourceAudio
  langs:
  - csharp
  - vb
  name: HasAudioClip
  nameWithType: ResourceAudio.HasAudioClip
  fullName: VRBuilder.Core.Audio.ResourceAudio.HasAudioClip
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Utils/Audio/ResourceAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: HasAudioClip
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Audio/ResourceAudio.cs
    startLine: 53
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Audio
  syntax:
    content: public bool HasAudioClip { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasAudioClip As Boolean
  overload: VRBuilder.Core.Audio.ResourceAudio.HasAudioClip*
  implements:
  - VRBuilder.Core.Audio.IAudioData.HasAudioClip
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.Audio.ResourceAudio.AudioClip
  commentId: P:VRBuilder.Core.Audio.ResourceAudio.AudioClip
  id: AudioClip
  parent: VRBuilder.Core.Audio.ResourceAudio
  langs:
  - csharp
  - vb
  name: AudioClip
  nameWithType: ResourceAudio.AudioClip
  fullName: VRBuilder.Core.Audio.ResourceAudio.AudioClip
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Utils/Audio/ResourceAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AudioClip
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Audio/ResourceAudio.cs
    startLine: 62
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Audio
  example: []
  syntax:
    content: public AudioClip AudioClip { get; }
    parameters: []
    return:
      type: AudioClip
    content.vb: Public ReadOnly Property AudioClip As AudioClip
  overload: VRBuilder.Core.Audio.ResourceAudio.AudioClip*
  implements:
  - VRBuilder.Core.Audio.IAudioData.AudioClip
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.Audio.ResourceAudio.ClipData
  commentId: P:VRBuilder.Core.Audio.ResourceAudio.ClipData
  id: ClipData
  parent: VRBuilder.Core.Audio.ResourceAudio
  langs:
  - csharp
  - vb
  name: ClipData
  nameWithType: ResourceAudio.ClipData
  fullName: VRBuilder.Core.Audio.ResourceAudio.ClipData
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Utils/Audio/ResourceAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ClipData
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Audio/ResourceAudio.cs
    startLine: 65
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Audio
  example: []
  syntax:
    content: public string ClipData { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClipData As String
  overload: VRBuilder.Core.Audio.ResourceAudio.ClipData*
  implements:
  - VRBuilder.Core.Audio.IAudioData.ClipData
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Audio.ResourceAudio.InitializeAudioClip
  commentId: M:VRBuilder.Core.Audio.ResourceAudio.InitializeAudioClip
  id: InitializeAudioClip
  parent: VRBuilder.Core.Audio.ResourceAudio
  langs:
  - csharp
  - vb
  name: InitializeAudioClip()
  nameWithType: ResourceAudio.InitializeAudioClip()
  fullName: VRBuilder.Core.Audio.ResourceAudio.InitializeAudioClip()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Utils/Audio/ResourceAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: InitializeAudioClip
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Audio/ResourceAudio.cs
    startLine: 77
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Audio
  syntax:
    content: public void InitializeAudioClip()
    content.vb: Public Sub InitializeAudioClip
  overload: VRBuilder.Core.Audio.ResourceAudio.InitializeAudioClip*
  implements:
  - VRBuilder.Core.Audio.IAudioData.InitializeAudioClip
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Audio.ResourceAudio.IsEmpty
  commentId: M:VRBuilder.Core.Audio.ResourceAudio.IsEmpty
  id: IsEmpty
  parent: VRBuilder.Core.Audio.ResourceAudio
  langs:
  - csharp
  - vb
  name: IsEmpty()
  nameWithType: ResourceAudio.IsEmpty()
  fullName: VRBuilder.Core.Audio.ResourceAudio.IsEmpty()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Utils/Audio/ResourceAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsEmpty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Audio/ResourceAudio.cs
    startLine: 102
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Audio
  example: []
  syntax:
    content: public bool IsEmpty()
    return:
      type: System.Boolean
    content.vb: Public Function IsEmpty As Boolean
  overload: VRBuilder.Core.Audio.ResourceAudio.IsEmpty*
  implements:
  - VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Audio.ResourceAudio.GetLocalizedContent
  commentId: M:VRBuilder.Core.Audio.ResourceAudio.GetLocalizedContent
  id: GetLocalizedContent
  parent: VRBuilder.Core.Audio.ResourceAudio
  langs:
  - csharp
  - vb
  name: GetLocalizedContent()
  nameWithType: ResourceAudio.GetLocalizedContent()
  fullName: VRBuilder.Core.Audio.ResourceAudio.GetLocalizedContent()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Utils/Audio/ResourceAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetLocalizedContent
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Audio/ResourceAudio.cs
    startLine: 107
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Audio
  syntax:
    content: public string GetLocalizedContent()
    return:
      type: System.String
    content.vb: Public Function GetLocalizedContent As String
  overload: VRBuilder.Core.Audio.ResourceAudio.GetLocalizedContent*
  implements:
  - VRBuilder.Core.Localization.ILocalizedContent.GetLocalizedContent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Core.Audio
  commentId: N:VRBuilder.Core.Audio
  name: VRBuilder.Core.Audio
  nameWithType: VRBuilder.Core.Audio
  fullName: VRBuilder.Core.Audio
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Audio.IAudioData
  commentId: T:VRBuilder.Core.Audio.IAudioData
  parent: VRBuilder.Core.Audio
  name: IAudioData
  nameWithType: IAudioData
  fullName: VRBuilder.Core.Audio.IAudioData
- uid: VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  commentId: T:VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  parent: VRBuilder.Core.Runtime.Properties
  name: ICanBeEmpty
  nameWithType: ICanBeEmpty
  fullName: VRBuilder.Core.Runtime.Properties.ICanBeEmpty
- uid: VRBuilder.Core.Localization.ILocalizedContent
  commentId: T:VRBuilder.Core.Localization.ILocalizedContent
  parent: VRBuilder.Core.Localization
  name: ILocalizedContent
  nameWithType: ILocalizedContent
  fullName: VRBuilder.Core.Localization.ILocalizedContent
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Runtime.Properties
  commentId: N:VRBuilder.Core.Runtime.Properties
  name: VRBuilder.Core.Runtime.Properties
  nameWithType: VRBuilder.Core.Runtime.Properties
  fullName: VRBuilder.Core.Runtime.Properties
- uid: VRBuilder.Core.Localization
  commentId: N:VRBuilder.Core.Localization
  name: VRBuilder.Core.Localization
  nameWithType: VRBuilder.Core.Localization
  fullName: VRBuilder.Core.Localization
- uid: VRBuilder.Core.Audio.ResourceAudio.ResourcesPath*
  commentId: Overload:VRBuilder.Core.Audio.ResourceAudio.ResourcesPath
  name: ResourcesPath
  nameWithType: ResourceAudio.ResourcesPath
  fullName: VRBuilder.Core.Audio.ResourceAudio.ResourcesPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Core.Audio.ResourceAudio.#ctor*
  commentId: Overload:VRBuilder.Core.Audio.ResourceAudio.#ctor
  name: ResourceAudio
  nameWithType: ResourceAudio.ResourceAudio
  fullName: VRBuilder.Core.Audio.ResourceAudio.ResourceAudio
- uid: VRBuilder.Core.Audio.ResourceAudio.HasAudioClip*
  commentId: Overload:VRBuilder.Core.Audio.ResourceAudio.HasAudioClip
  name: HasAudioClip
  nameWithType: ResourceAudio.HasAudioClip
  fullName: VRBuilder.Core.Audio.ResourceAudio.HasAudioClip
- uid: VRBuilder.Core.Audio.IAudioData.HasAudioClip
  commentId: P:VRBuilder.Core.Audio.IAudioData.HasAudioClip
  parent: VRBuilder.Core.Audio.IAudioData
  name: HasAudioClip
  nameWithType: IAudioData.HasAudioClip
  fullName: VRBuilder.Core.Audio.IAudioData.HasAudioClip
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.Audio.ResourceAudio.AudioClip*
  commentId: Overload:VRBuilder.Core.Audio.ResourceAudio.AudioClip
  name: AudioClip
  nameWithType: ResourceAudio.AudioClip
  fullName: VRBuilder.Core.Audio.ResourceAudio.AudioClip
- uid: VRBuilder.Core.Audio.IAudioData.AudioClip
  commentId: P:VRBuilder.Core.Audio.IAudioData.AudioClip
  parent: VRBuilder.Core.Audio.IAudioData
  name: AudioClip
  nameWithType: IAudioData.AudioClip
  fullName: VRBuilder.Core.Audio.IAudioData.AudioClip
- uid: AudioClip
  isExternal: true
  name: AudioClip
  nameWithType: AudioClip
  fullName: AudioClip
- uid: VRBuilder.Core.Audio.ResourceAudio.ClipData*
  commentId: Overload:VRBuilder.Core.Audio.ResourceAudio.ClipData
  name: ClipData
  nameWithType: ResourceAudio.ClipData
  fullName: VRBuilder.Core.Audio.ResourceAudio.ClipData
- uid: VRBuilder.Core.Audio.IAudioData.ClipData
  commentId: P:VRBuilder.Core.Audio.IAudioData.ClipData
  parent: VRBuilder.Core.Audio.IAudioData
  name: ClipData
  nameWithType: IAudioData.ClipData
  fullName: VRBuilder.Core.Audio.IAudioData.ClipData
- uid: VRBuilder.Core.Audio.ResourceAudio.InitializeAudioClip*
  commentId: Overload:VRBuilder.Core.Audio.ResourceAudio.InitializeAudioClip
  name: InitializeAudioClip
  nameWithType: ResourceAudio.InitializeAudioClip
  fullName: VRBuilder.Core.Audio.ResourceAudio.InitializeAudioClip
- uid: VRBuilder.Core.Audio.IAudioData.InitializeAudioClip
  commentId: M:VRBuilder.Core.Audio.IAudioData.InitializeAudioClip
  parent: VRBuilder.Core.Audio.IAudioData
  name: InitializeAudioClip()
  nameWithType: IAudioData.InitializeAudioClip()
  fullName: VRBuilder.Core.Audio.IAudioData.InitializeAudioClip()
  spec.csharp:
  - uid: VRBuilder.Core.Audio.IAudioData.InitializeAudioClip
    name: InitializeAudioClip
    nameWithType: IAudioData.InitializeAudioClip
    fullName: VRBuilder.Core.Audio.IAudioData.InitializeAudioClip
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Audio.IAudioData.InitializeAudioClip
    name: InitializeAudioClip
    nameWithType: IAudioData.InitializeAudioClip
    fullName: VRBuilder.Core.Audio.IAudioData.InitializeAudioClip
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Audio.ResourceAudio.IsEmpty*
  commentId: Overload:VRBuilder.Core.Audio.ResourceAudio.IsEmpty
  name: IsEmpty
  nameWithType: ResourceAudio.IsEmpty
  fullName: VRBuilder.Core.Audio.ResourceAudio.IsEmpty
- uid: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
  commentId: M:VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
  parent: VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  name: IsEmpty()
  nameWithType: ICanBeEmpty.IsEmpty()
  fullName: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty()
  spec.csharp:
  - uid: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
    name: IsEmpty
    nameWithType: ICanBeEmpty.IsEmpty
    fullName: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
    name: IsEmpty
    nameWithType: ICanBeEmpty.IsEmpty
    fullName: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Audio.ResourceAudio.GetLocalizedContent*
  commentId: Overload:VRBuilder.Core.Audio.ResourceAudio.GetLocalizedContent
  name: GetLocalizedContent
  nameWithType: ResourceAudio.GetLocalizedContent
  fullName: VRBuilder.Core.Audio.ResourceAudio.GetLocalizedContent
- uid: VRBuilder.Core.Localization.ILocalizedContent.GetLocalizedContent
  commentId: M:VRBuilder.Core.Localization.ILocalizedContent.GetLocalizedContent
  parent: VRBuilder.Core.Localization.ILocalizedContent
  name: GetLocalizedContent()
  nameWithType: ILocalizedContent.GetLocalizedContent()
  fullName: VRBuilder.Core.Localization.ILocalizedContent.GetLocalizedContent()
  spec.csharp:
  - uid: VRBuilder.Core.Localization.ILocalizedContent.GetLocalizedContent
    name: GetLocalizedContent
    nameWithType: ILocalizedContent.GetLocalizedContent
    fullName: VRBuilder.Core.Localization.ILocalizedContent.GetLocalizedContent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Localization.ILocalizedContent.GetLocalizedContent
    name: GetLocalizedContent
    nameWithType: ILocalizedContent.GetLocalizedContent
    fullName: VRBuilder.Core.Localization.ILocalizedContent.GetLocalizedContent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
