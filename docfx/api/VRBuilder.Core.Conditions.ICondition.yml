### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Conditions.ICondition
  commentId: T:VRBuilder.Core.Conditions.ICondition
  id: ICondition
  parent: VRBuilder.Core.Conditions
  children: []
  langs:
  - csharp
  - vb
  name: ICondition
  nameWithType: ICondition
  fullName: VRBuilder.Core.Conditions.ICondition
  type: Interface
  source:
    remote:
      path: Source/Core/Runtime/Conditions/ICondition.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ICondition
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Conditions/ICondition.cs
    startLine: 6
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Conditions
  syntax:
    content: 'public interface ICondition : ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>'
    content.vb: >-
      Public Interface ICondition

          Inherits ICompletableEntity, IDataOwner(Of IConditionData), IClonable(Of ICondition)
  inheritedMembers:
  - VRBuilder.Core.ICompletable.IsCompleted
  - VRBuilder.Core.ICompletable.Autocomplete
  - VRBuilder.Core.IEntity.LifeCycle
  - VRBuilder.Core.IEntity.GetActivatingProcess
  - VRBuilder.Core.IEntity.GetActiveProcess
  - VRBuilder.Core.IEntity.GetDeactivatingProcess
  - VRBuilder.Core.IEntity.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  - VRBuilder.Core.IEntity.Update
  - VRBuilder.Core.IEntity.Parent
  - VRBuilder.Core.IDataOwner{VRBuilder.Core.Conditions.IConditionData}.Data
  - VRBuilder.Core.IClonable{VRBuilder.Core.Conditions.ICondition}.Clone
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: VRBuilder.Core.Conditions
  commentId: N:VRBuilder.Core.Conditions
  name: VRBuilder.Core.Conditions
  nameWithType: VRBuilder.Core.Conditions
  fullName: VRBuilder.Core.Conditions
- uid: VRBuilder.Core.ICompletable.IsCompleted
  commentId: P:VRBuilder.Core.ICompletable.IsCompleted
  parent: VRBuilder.Core.ICompletable
  name: IsCompleted
  nameWithType: ICompletable.IsCompleted
  fullName: VRBuilder.Core.ICompletable.IsCompleted
- uid: VRBuilder.Core.ICompletable.Autocomplete
  commentId: M:VRBuilder.Core.ICompletable.Autocomplete
  parent: VRBuilder.Core.ICompletable
  name: Autocomplete()
  nameWithType: ICompletable.Autocomplete()
  fullName: VRBuilder.Core.ICompletable.Autocomplete()
  spec.csharp:
  - uid: VRBuilder.Core.ICompletable.Autocomplete
    name: Autocomplete
    nameWithType: ICompletable.Autocomplete
    fullName: VRBuilder.Core.ICompletable.Autocomplete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.ICompletable.Autocomplete
    name: Autocomplete
    nameWithType: ICompletable.Autocomplete
    fullName: VRBuilder.Core.ICompletable.Autocomplete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IEntity.LifeCycle
  commentId: P:VRBuilder.Core.IEntity.LifeCycle
  parent: VRBuilder.Core.IEntity
  name: LifeCycle
  nameWithType: IEntity.LifeCycle
  fullName: VRBuilder.Core.IEntity.LifeCycle
- uid: VRBuilder.Core.IEntity.GetActivatingProcess
  commentId: M:VRBuilder.Core.IEntity.GetActivatingProcess
  parent: VRBuilder.Core.IEntity
  name: GetActivatingProcess()
  nameWithType: IEntity.GetActivatingProcess()
  fullName: VRBuilder.Core.IEntity.GetActivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.IEntity.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: IEntity.GetActivatingProcess
    fullName: VRBuilder.Core.IEntity.GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IEntity.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: IEntity.GetActivatingProcess
    fullName: VRBuilder.Core.IEntity.GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IEntity.GetActiveProcess
  commentId: M:VRBuilder.Core.IEntity.GetActiveProcess
  parent: VRBuilder.Core.IEntity
  name: GetActiveProcess()
  nameWithType: IEntity.GetActiveProcess()
  fullName: VRBuilder.Core.IEntity.GetActiveProcess()
  spec.csharp:
  - uid: VRBuilder.Core.IEntity.GetActiveProcess
    name: GetActiveProcess
    nameWithType: IEntity.GetActiveProcess
    fullName: VRBuilder.Core.IEntity.GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IEntity.GetActiveProcess
    name: GetActiveProcess
    nameWithType: IEntity.GetActiveProcess
    fullName: VRBuilder.Core.IEntity.GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IEntity.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.IEntity.GetDeactivatingProcess
  parent: VRBuilder.Core.IEntity
  name: GetDeactivatingProcess()
  nameWithType: IEntity.GetDeactivatingProcess()
  fullName: VRBuilder.Core.IEntity.GetDeactivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.IEntity.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: IEntity.GetDeactivatingProcess
    fullName: VRBuilder.Core.IEntity.GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IEntity.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: IEntity.GetDeactivatingProcess
    fullName: VRBuilder.Core.IEntity.GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IEntity.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.Core.IEntity.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  parent: VRBuilder.Core.IEntity
  name: Configure(IMode)
  nameWithType: IEntity.Configure(IMode)
  fullName: VRBuilder.Core.IEntity.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  spec.csharp:
  - uid: VRBuilder.Core.IEntity.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: IEntity.Configure
    fullName: VRBuilder.Core.IEntity.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IEntity.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: IEntity.Configure
    fullName: VRBuilder.Core.IEntity.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IEntity.Update
  commentId: M:VRBuilder.Core.IEntity.Update
  parent: VRBuilder.Core.IEntity
  name: Update()
  nameWithType: IEntity.Update()
  fullName: VRBuilder.Core.IEntity.Update()
  spec.csharp:
  - uid: VRBuilder.Core.IEntity.Update
    name: Update
    nameWithType: IEntity.Update
    fullName: VRBuilder.Core.IEntity.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IEntity.Update
    name: Update
    nameWithType: IEntity.Update
    fullName: VRBuilder.Core.IEntity.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IEntity.Parent
  commentId: P:VRBuilder.Core.IEntity.Parent
  parent: VRBuilder.Core.IEntity
  name: Parent
  nameWithType: IEntity.Parent
  fullName: VRBuilder.Core.IEntity.Parent
- uid: VRBuilder.Core.IDataOwner{VRBuilder.Core.Conditions.IConditionData}.Data
  commentId: P:VRBuilder.Core.IDataOwner{VRBuilder.Core.Conditions.IConditionData}.Data
  parent: VRBuilder.Core.IDataOwner{VRBuilder.Core.Conditions.IConditionData}
  definition: VRBuilder.Core.IDataOwner`1.Data
  name: Data
  nameWithType: IDataOwner<IConditionData>.Data
  fullName: VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.IConditionData>.Data
  nameWithType.vb: IDataOwner(Of IConditionData).Data
  fullName.vb: VRBuilder.Core.IDataOwner(Of VRBuilder.Core.Conditions.IConditionData).Data
- uid: VRBuilder.Core.IClonable{VRBuilder.Core.Conditions.ICondition}.Clone
  commentId: M:VRBuilder.Core.IClonable{VRBuilder.Core.Conditions.ICondition}.Clone
  parent: VRBuilder.Core.IClonable{VRBuilder.Core.Conditions.ICondition}
  definition: VRBuilder.Core.IClonable`1.Clone
  name: Clone()
  nameWithType: IClonable<ICondition>.Clone()
  fullName: VRBuilder.Core.IClonable<VRBuilder.Core.Conditions.ICondition>.Clone()
  nameWithType.vb: IClonable(Of ICondition).Clone()
  fullName.vb: VRBuilder.Core.IClonable(Of VRBuilder.Core.Conditions.ICondition).Clone()
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1.Clone
    name: Clone
    nameWithType: IClonable<ICondition>.Clone
    fullName: VRBuilder.Core.IClonable<VRBuilder.Core.Conditions.ICondition>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1.Clone
    name: Clone
    nameWithType: IClonable(Of ICondition).Clone
    fullName: VRBuilder.Core.IClonable(Of VRBuilder.Core.Conditions.ICondition).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.ICompletable
  commentId: T:VRBuilder.Core.ICompletable
  parent: VRBuilder.Core
  name: ICompletable
  nameWithType: ICompletable
  fullName: VRBuilder.Core.ICompletable
- uid: VRBuilder.Core.IEntity
  commentId: T:VRBuilder.Core.IEntity
  parent: VRBuilder.Core
  name: IEntity
  nameWithType: IEntity
  fullName: VRBuilder.Core.IEntity
- uid: VRBuilder.Core.IDataOwner`1.Data
  commentId: P:VRBuilder.Core.IDataOwner`1.Data
  name: Data
  nameWithType: IDataOwner<TData>.Data
  fullName: VRBuilder.Core.IDataOwner<TData>.Data
  nameWithType.vb: IDataOwner(Of TData).Data
  fullName.vb: VRBuilder.Core.IDataOwner(Of TData).Data
- uid: VRBuilder.Core.IDataOwner{VRBuilder.Core.Conditions.IConditionData}
  commentId: T:VRBuilder.Core.IDataOwner{VRBuilder.Core.Conditions.IConditionData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IDataOwner`1
  name: IDataOwner<IConditionData>
  nameWithType: IDataOwner<IConditionData>
  fullName: VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.IConditionData>
  nameWithType.vb: IDataOwner(Of IConditionData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of VRBuilder.Core.Conditions.IConditionData)
  name.vb: IDataOwner(Of IConditionData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Conditions.IConditionData
    name: IConditionData
    nameWithType: IConditionData
    fullName: VRBuilder.Core.Conditions.IConditionData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Conditions.IConditionData
    name: IConditionData
    nameWithType: IConditionData
    fullName: VRBuilder.Core.Conditions.IConditionData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IClonable`1.Clone
  commentId: M:VRBuilder.Core.IClonable`1.Clone
  name: Clone()
  nameWithType: IClonable<T>.Clone()
  fullName: VRBuilder.Core.IClonable<T>.Clone()
  nameWithType.vb: IClonable(Of T).Clone()
  fullName.vb: VRBuilder.Core.IClonable(Of T).Clone()
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1.Clone
    name: Clone
    nameWithType: IClonable<T>.Clone
    fullName: VRBuilder.Core.IClonable<T>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1.Clone
    name: Clone
    nameWithType: IClonable(Of T).Clone
    fullName: VRBuilder.Core.IClonable(Of T).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IClonable{VRBuilder.Core.Conditions.ICondition}
  commentId: T:VRBuilder.Core.IClonable{VRBuilder.Core.Conditions.ICondition}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IClonable`1
  name: IClonable<ICondition>
  nameWithType: IClonable<ICondition>
  fullName: VRBuilder.Core.IClonable<VRBuilder.Core.Conditions.ICondition>
  nameWithType.vb: IClonable(Of ICondition)
  fullName.vb: VRBuilder.Core.IClonable(Of VRBuilder.Core.Conditions.ICondition)
  name.vb: IClonable(Of ICondition)
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Conditions.ICondition
    name: ICondition
    nameWithType: ICondition
    fullName: VRBuilder.Core.Conditions.ICondition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Conditions.ICondition
    name: ICondition
    nameWithType: ICondition
    fullName: VRBuilder.Core.Conditions.ICondition
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Core.IDataOwner`1
  commentId: T:VRBuilder.Core.IDataOwner`1
  name: IDataOwner<TData>
  nameWithType: IDataOwner<TData>
  fullName: VRBuilder.Core.IDataOwner<TData>
  nameWithType.vb: IDataOwner(Of TData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of TData)
  name.vb: IDataOwner(Of TData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IClonable`1
  commentId: T:VRBuilder.Core.IClonable`1
  name: IClonable<T>
  nameWithType: IClonable<T>
  fullName: VRBuilder.Core.IClonable<T>
  nameWithType.vb: IClonable(Of T)
  fullName.vb: VRBuilder.Core.IClonable(Of T)
  name.vb: IClonable(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
