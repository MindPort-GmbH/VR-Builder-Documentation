### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Properties.DataProperty`1
  commentId: T:VRBuilder.Core.Properties.DataProperty`1
  id: DataProperty`1
  parent: VRBuilder.Core.Properties
  children:
  - VRBuilder.Core.Properties.DataProperty`1.DefaultValue
  - VRBuilder.Core.Properties.DataProperty`1.GetValue
  - VRBuilder.Core.Properties.DataProperty`1.OnValueChanged
  - VRBuilder.Core.Properties.DataProperty`1.OnValueReset
  - VRBuilder.Core.Properties.DataProperty`1.ResetValue
  - VRBuilder.Core.Properties.DataProperty`1.SetValue(`0)
  - VRBuilder.Core.Properties.DataProperty`1.storedValue
  - VRBuilder.Core.Properties.DataProperty`1.ValueToString(`0)
  langs:
  - csharp
  - vb
  name: DataProperty<T>
  nameWithType: DataProperty<T>
  fullName: VRBuilder.Core.Properties.DataProperty<T>
  type: Class
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/DataProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DataProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/DataProperty.cs
    startLine: 10
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nBase implementation for process data properties.\n"
  example: []
  syntax:
    content: 'public abstract class DataProperty<T> : ProcessSceneObjectProperty, IDataProperty<T>, IDataPropertyBase, ISceneObjectProperty'
    typeParameters:
    - id: T
    content.vb: >-
      Public MustInherit Class DataProperty(Of T)
          Inherits ProcessSceneObjectProperty
          Implements IDataProperty(Of T), IDataPropertyBase, ISceneObjectProperty
  inheritance:
  - System.Object
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty
  derivedClasses:
  - VRBuilder.Core.Properties.BooleanDataProperty
  - VRBuilder.Core.Properties.NumberDataProperty
  - VRBuilder.Core.Properties.TextDataProperty
  - VRBuilder.StatesAndData.Properties.StateDataPropertyBase
  implements:
  - VRBuilder.Core.Properties.IDataProperty{{T}}
  - VRBuilder.Core.Properties.IDataPropertyBase
  - VRBuilder.Core.Properties.ISceneObjectProperty
  inheritedMembers:
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  extensionMethods:
  - VRBuilder.Core.Properties.ISceneObjectProperty.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  nameWithType.vb: DataProperty(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: VRBuilder.Core.Properties.DataProperty(Of T)
  name.vb: DataProperty(Of T)
- uid: VRBuilder.Core.Properties.DataProperty`1.DefaultValue
  commentId: P:VRBuilder.Core.Properties.DataProperty`1.DefaultValue
  id: DefaultValue
  parent: VRBuilder.Core.Properties.DataProperty`1
  langs:
  - csharp
  - vb
  name: DefaultValue
  nameWithType: DataProperty<T>.DefaultValue
  fullName: VRBuilder.Core.Properties.DataProperty<T>.DefaultValue
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/DataProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DefaultValue
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/DataProperty.cs
    startLine: 16
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nDefines a default value for the property.\n"
  example: []
  syntax:
    content: public abstract T DefaultValue { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public MustOverride ReadOnly Property DefaultValue As T
  overload: VRBuilder.Core.Properties.DataProperty`1.DefaultValue*
  nameWithType.vb: DataProperty(Of T).DefaultValue
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: VRBuilder.Core.Properties.DataProperty(Of T).DefaultValue
- uid: VRBuilder.Core.Properties.DataProperty`1.storedValue
  commentId: F:VRBuilder.Core.Properties.DataProperty`1.storedValue
  id: storedValue
  parent: VRBuilder.Core.Properties.DataProperty`1
  langs:
  - csharp
  - vb
  name: storedValue
  nameWithType: DataProperty<T>.storedValue
  fullName: VRBuilder.Core.Properties.DataProperty<T>.storedValue
  type: Field
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/DataProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: storedValue
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/DataProperty.cs
    startLine: 19
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  example: []
  syntax:
    content: protected T storedValue
    return:
      type: '{T}'
    content.vb: Protected storedValue As T
  nameWithType.vb: DataProperty(Of T).storedValue
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: VRBuilder.Core.Properties.DataProperty(Of T).storedValue
- uid: VRBuilder.Core.Properties.DataProperty`1.OnValueChanged
  commentId: P:VRBuilder.Core.Properties.DataProperty`1.OnValueChanged
  id: OnValueChanged
  parent: VRBuilder.Core.Properties.DataProperty`1
  langs:
  - csharp
  - vb
  name: OnValueChanged
  nameWithType: DataProperty<T>.OnValueChanged
  fullName: VRBuilder.Core.Properties.DataProperty<T>.OnValueChanged
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/DataProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnValueChanged
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/DataProperty.cs
    startLine: 22
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nRaised when the stored value changes.\n"
  example: []
  syntax:
    content: public abstract UnityEvent<T> OnValueChanged { get; }
    parameters: []
    return:
      type: UnityEvent{{T}}
    content.vb: Public MustOverride ReadOnly Property OnValueChanged As UnityEvent(Of T)
  overload: VRBuilder.Core.Properties.DataProperty`1.OnValueChanged*
  implements:
  - VRBuilder.Core.Properties.IDataProperty{{T}}.OnValueChanged
  nameWithType.vb: DataProperty(Of T).OnValueChanged
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: VRBuilder.Core.Properties.DataProperty(Of T).OnValueChanged
- uid: VRBuilder.Core.Properties.DataProperty`1.OnValueReset
  commentId: P:VRBuilder.Core.Properties.DataProperty`1.OnValueReset
  id: OnValueReset
  parent: VRBuilder.Core.Properties.DataProperty`1
  langs:
  - csharp
  - vb
  name: OnValueReset
  nameWithType: DataProperty<T>.OnValueReset
  fullName: VRBuilder.Core.Properties.DataProperty<T>.OnValueReset
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/DataProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnValueReset
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/DataProperty.cs
    startLine: 25
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nRaised when the stored value is reset to the default.\n"
  example: []
  syntax:
    content: public abstract UnityEvent OnValueReset { get; }
    parameters: []
    return:
      type: UnityEvent
    content.vb: Public MustOverride ReadOnly Property OnValueReset As UnityEvent
  overload: VRBuilder.Core.Properties.DataProperty`1.OnValueReset*
  implements:
  - VRBuilder.Core.Properties.IDataPropertyBase.OnValueReset
  nameWithType.vb: DataProperty(Of T).OnValueReset
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: VRBuilder.Core.Properties.DataProperty(Of T).OnValueReset
- uid: VRBuilder.Core.Properties.DataProperty`1.GetValue
  commentId: M:VRBuilder.Core.Properties.DataProperty`1.GetValue
  id: GetValue
  parent: VRBuilder.Core.Properties.DataProperty`1
  langs:
  - csharp
  - vb
  name: GetValue()
  nameWithType: DataProperty<T>.GetValue()
  fullName: VRBuilder.Core.Properties.DataProperty<T>.GetValue()
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/DataProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetValue
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/DataProperty.cs
    startLine: 33
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nReturns the value.\n"
  example: []
  syntax:
    content: public T GetValue()
    return:
      type: '{T}'
    content.vb: Public Function GetValue As T
  overload: VRBuilder.Core.Properties.DataProperty`1.GetValue*
  implements:
  - VRBuilder.Core.Properties.IDataProperty{{T}}.GetValue
  nameWithType.vb: DataProperty(Of T).GetValue()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.Properties.DataProperty(Of T).GetValue()
- uid: VRBuilder.Core.Properties.DataProperty`1.ResetValue
  commentId: M:VRBuilder.Core.Properties.DataProperty`1.ResetValue
  id: ResetValue
  parent: VRBuilder.Core.Properties.DataProperty`1
  langs:
  - csharp
  - vb
  name: ResetValue()
  nameWithType: DataProperty<T>.ResetValue()
  fullName: VRBuilder.Core.Properties.DataProperty<T>.ResetValue()
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/DataProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ResetValue
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/DataProperty.cs
    startLine: 39
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nResets the value to its default.\n"
  example: []
  syntax:
    content: public void ResetValue()
    content.vb: Public Sub ResetValue
  overload: VRBuilder.Core.Properties.DataProperty`1.ResetValue*
  implements:
  - VRBuilder.Core.Properties.IDataPropertyBase.ResetValue
  nameWithType.vb: DataProperty(Of T).ResetValue()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.Properties.DataProperty(Of T).ResetValue()
- uid: VRBuilder.Core.Properties.DataProperty`1.SetValue(`0)
  commentId: M:VRBuilder.Core.Properties.DataProperty`1.SetValue(`0)
  id: SetValue(`0)
  parent: VRBuilder.Core.Properties.DataProperty`1
  langs:
  - csharp
  - vb
  name: SetValue(T)
  nameWithType: DataProperty<T>.SetValue(T)
  fullName: VRBuilder.Core.Properties.DataProperty<T>.SetValue(T)
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/DataProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetValue
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/DataProperty.cs
    startLine: 46
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nSets the value.\n"
  example: []
  syntax:
    content: public void SetValue(T value)
    parameters:
    - id: value
      type: '{T}'
    content.vb: Public Sub SetValue(value As T)
  overload: VRBuilder.Core.Properties.DataProperty`1.SetValue*
  implements:
  - VRBuilder.Core.Properties.IDataProperty{{T}}.SetValue({T})
  nameWithType.vb: DataProperty(Of T).SetValue(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.Properties.DataProperty(Of T).SetValue(T)
- uid: VRBuilder.Core.Properties.DataProperty`1.ValueToString(`0)
  commentId: M:VRBuilder.Core.Properties.DataProperty`1.ValueToString(`0)
  id: ValueToString(`0)
  parent: VRBuilder.Core.Properties.DataProperty`1
  langs:
  - csharp
  - vb
  name: ValueToString(T)
  nameWithType: DataProperty<T>.ValueToString(T)
  fullName: VRBuilder.Core.Properties.DataProperty<T>.ValueToString(T)
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/DataProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ValueToString
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/DataProperty.cs
    startLine: 62
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  syntax:
    content: protected virtual string ValueToString(T value)
    parameters:
    - id: value
      type: '{T}'
    return:
      type: System.String
    content.vb: Protected Overridable Function ValueToString(value As T) As String
  overload: VRBuilder.Core.Properties.DataProperty`1.ValueToString*
  nameWithType.vb: DataProperty(Of T).ValueToString(T)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: VRBuilder.Core.Properties.DataProperty(Of T).ValueToString(T)
references:
- uid: VRBuilder.Core.Properties
  commentId: N:VRBuilder.Core.Properties
  name: VRBuilder.Core.Properties
  nameWithType: VRBuilder.Core.Properties
  fullName: VRBuilder.Core.Properties
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ProcessSceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ProcessSceneObjectProperty
  nameWithType: ProcessSceneObjectProperty
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty
- uid: VRBuilder.Core.Properties.IDataProperty{{T}}
  commentId: T:VRBuilder.Core.Properties.IDataProperty{`0}
  parent: VRBuilder.Core.Properties
  definition: VRBuilder.Core.Properties.IDataProperty`1
  name: IDataProperty<T>
  nameWithType: IDataProperty<T>
  fullName: VRBuilder.Core.Properties.IDataProperty<T>
  nameWithType.vb: IDataProperty(Of T)
  fullName.vb: VRBuilder.Core.Properties.IDataProperty(Of T)
  name.vb: IDataProperty(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.IDataProperty`1
    name: IDataProperty
    nameWithType: IDataProperty
    fullName: VRBuilder.Core.Properties.IDataProperty
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Properties.IDataProperty`1
    name: IDataProperty
    nameWithType: IDataProperty
    fullName: VRBuilder.Core.Properties.IDataProperty
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.IDataPropertyBase
  commentId: T:VRBuilder.Core.Properties.IDataPropertyBase
  parent: VRBuilder.Core.Properties
  name: IDataPropertyBase
  nameWithType: IDataPropertyBase
  fullName: VRBuilder.Core.Properties.IDataPropertyBase
- uid: VRBuilder.Core.Properties.ISceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ISceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ISceneObjectProperty
  nameWithType: ISceneObjectProperty
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  commentId: P:VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: SceneObject
  nameWithType: ProcessSceneObjectProperty.SceneObject
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  commentId: M:VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: OnEnable()
  nameWithType: ProcessSceneObjectProperty.OnEnable()
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
    name: OnEnable
    nameWithType: ProcessSceneObjectProperty.OnEnable
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
    name: OnEnable
    nameWithType: ProcessSceneObjectProperty.OnEnable
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  commentId: M:VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: Reset()
  nameWithType: ProcessSceneObjectProperty.Reset()
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
    name: Reset
    nameWithType: ProcessSceneObjectProperty.Reset
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
    name: Reset
    nameWithType: ProcessSceneObjectProperty.Reset
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  commentId: M:VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: ToString()
  nameWithType: ProcessSceneObjectProperty.ToString()
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
    name: ToString
    nameWithType: ProcessSceneObjectProperty.ToString
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
    name: ToString
    nameWithType: ProcessSceneObjectProperty.ToString
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ISceneObjectProperty.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  definition: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  name: AddProcessPropertyExtensions()
  nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions()
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Properties.IDataProperty`1
  commentId: T:VRBuilder.Core.Properties.IDataProperty`1
  name: IDataProperty<T>
  nameWithType: IDataProperty<T>
  fullName: VRBuilder.Core.Properties.IDataProperty<T>
  nameWithType.vb: IDataProperty(Of T)
  fullName.vb: VRBuilder.Core.Properties.IDataProperty(Of T)
  name.vb: IDataProperty(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.IDataProperty`1
    name: IDataProperty
    nameWithType: IDataProperty
    fullName: VRBuilder.Core.Properties.IDataProperty
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Properties.IDataProperty`1
    name: IDataProperty
    nameWithType: IDataProperty
    fullName: VRBuilder.Core.Properties.IDataProperty
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  name: AddProcessPropertyExtensions(ISceneObjectProperty)
  nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Properties.ISceneObjectProperty
    name: ISceneObjectProperty
    nameWithType: ISceneObjectProperty
    fullName: VRBuilder.Core.Properties.ISceneObjectProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Properties.ISceneObjectProperty
    name: ISceneObjectProperty
    nameWithType: ISceneObjectProperty
    fullName: VRBuilder.Core.Properties.ISceneObjectProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.SceneObjectExtensions
  commentId: T:VRBuilder.Core.Properties.SceneObjectExtensions
  parent: VRBuilder.Core.Properties
  name: SceneObjectExtensions
  nameWithType: SceneObjectExtensions
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions
- uid: VRBuilder.Core.Properties.DataProperty`1.DefaultValue*
  commentId: Overload:VRBuilder.Core.Properties.DataProperty`1.DefaultValue
  name: DefaultValue
  nameWithType: DataProperty<T>.DefaultValue
  fullName: VRBuilder.Core.Properties.DataProperty<T>.DefaultValue
  nameWithType.vb: DataProperty(Of T).DefaultValue
  fullName.vb: VRBuilder.Core.Properties.DataProperty(Of T).DefaultValue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: VRBuilder.Core.Properties.DataProperty`1.OnValueChanged*
  commentId: Overload:VRBuilder.Core.Properties.DataProperty`1.OnValueChanged
  name: OnValueChanged
  nameWithType: DataProperty<T>.OnValueChanged
  fullName: VRBuilder.Core.Properties.DataProperty<T>.OnValueChanged
  nameWithType.vb: DataProperty(Of T).OnValueChanged
  fullName.vb: VRBuilder.Core.Properties.DataProperty(Of T).OnValueChanged
- uid: VRBuilder.Core.Properties.IDataProperty{{T}}.OnValueChanged
  commentId: P:VRBuilder.Core.Properties.IDataProperty{`0}.OnValueChanged
  parent: VRBuilder.Core.Properties.IDataProperty{{T}}
  definition: VRBuilder.Core.Properties.IDataProperty`1.OnValueChanged
  name: OnValueChanged
  nameWithType: IDataProperty<T>.OnValueChanged
  fullName: VRBuilder.Core.Properties.IDataProperty<T>.OnValueChanged
  nameWithType.vb: IDataProperty(Of T).OnValueChanged
  fullName.vb: VRBuilder.Core.Properties.IDataProperty(Of T).OnValueChanged
- uid: UnityEvent{{T}}
  commentId: '!:UnityEvent{`0}'
  definition: UnityEvent`1
  name: UnityEvent<T>
  nameWithType: UnityEvent<T>
  fullName: UnityEvent<T>
  nameWithType.vb: UnityEvent(Of T)
  fullName.vb: UnityEvent(Of T)
  name.vb: UnityEvent(Of T)
  spec.csharp:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.IDataProperty`1.OnValueChanged
  commentId: P:VRBuilder.Core.Properties.IDataProperty`1.OnValueChanged
  name: OnValueChanged
  nameWithType: IDataProperty<T>.OnValueChanged
  fullName: VRBuilder.Core.Properties.IDataProperty<T>.OnValueChanged
  nameWithType.vb: IDataProperty(Of T).OnValueChanged
  fullName.vb: VRBuilder.Core.Properties.IDataProperty(Of T).OnValueChanged
- uid: UnityEvent`1
  isExternal: true
  name: UnityEvent<>
  nameWithType: UnityEvent<>
  fullName: UnityEvent<>
  nameWithType.vb: UnityEvent(Of )
  fullName.vb: UnityEvent(Of )
  name.vb: UnityEvent(Of )
  spec.csharp:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.DataProperty`1.OnValueReset*
  commentId: Overload:VRBuilder.Core.Properties.DataProperty`1.OnValueReset
  name: OnValueReset
  nameWithType: DataProperty<T>.OnValueReset
  fullName: VRBuilder.Core.Properties.DataProperty<T>.OnValueReset
  nameWithType.vb: DataProperty(Of T).OnValueReset
  fullName.vb: VRBuilder.Core.Properties.DataProperty(Of T).OnValueReset
- uid: VRBuilder.Core.Properties.IDataPropertyBase.OnValueReset
  commentId: P:VRBuilder.Core.Properties.IDataPropertyBase.OnValueReset
  parent: VRBuilder.Core.Properties.IDataPropertyBase
  name: OnValueReset
  nameWithType: IDataPropertyBase.OnValueReset
  fullName: VRBuilder.Core.Properties.IDataPropertyBase.OnValueReset
- uid: UnityEvent
  isExternal: true
  name: UnityEvent
  nameWithType: UnityEvent
  fullName: UnityEvent
- uid: VRBuilder.Core.Properties.DataProperty`1.GetValue*
  commentId: Overload:VRBuilder.Core.Properties.DataProperty`1.GetValue
  name: GetValue
  nameWithType: DataProperty<T>.GetValue
  fullName: VRBuilder.Core.Properties.DataProperty<T>.GetValue
  nameWithType.vb: DataProperty(Of T).GetValue
  fullName.vb: VRBuilder.Core.Properties.DataProperty(Of T).GetValue
- uid: VRBuilder.Core.Properties.IDataProperty{{T}}.GetValue
  commentId: M:VRBuilder.Core.Properties.IDataProperty{`0}.GetValue
  parent: VRBuilder.Core.Properties.IDataProperty{{T}}
  definition: VRBuilder.Core.Properties.IDataProperty`1.GetValue
  name: GetValue()
  nameWithType: IDataProperty<T>.GetValue()
  fullName: VRBuilder.Core.Properties.IDataProperty<T>.GetValue()
  nameWithType.vb: IDataProperty(Of T).GetValue()
  fullName.vb: VRBuilder.Core.Properties.IDataProperty(Of T).GetValue()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.IDataProperty`1.GetValue
    name: GetValue
    nameWithType: IDataProperty<T>.GetValue
    fullName: VRBuilder.Core.Properties.IDataProperty<T>.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.IDataProperty`1.GetValue
    name: GetValue
    nameWithType: IDataProperty(Of T).GetValue
    fullName: VRBuilder.Core.Properties.IDataProperty(Of T).GetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.IDataProperty`1.GetValue
  commentId: M:VRBuilder.Core.Properties.IDataProperty`1.GetValue
  name: GetValue()
  nameWithType: IDataProperty<T>.GetValue()
  fullName: VRBuilder.Core.Properties.IDataProperty<T>.GetValue()
  nameWithType.vb: IDataProperty(Of T).GetValue()
  fullName.vb: VRBuilder.Core.Properties.IDataProperty(Of T).GetValue()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.IDataProperty`1.GetValue
    name: GetValue
    nameWithType: IDataProperty<T>.GetValue
    fullName: VRBuilder.Core.Properties.IDataProperty<T>.GetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.IDataProperty`1.GetValue
    name: GetValue
    nameWithType: IDataProperty(Of T).GetValue
    fullName: VRBuilder.Core.Properties.IDataProperty(Of T).GetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.DataProperty`1.ResetValue*
  commentId: Overload:VRBuilder.Core.Properties.DataProperty`1.ResetValue
  name: ResetValue
  nameWithType: DataProperty<T>.ResetValue
  fullName: VRBuilder.Core.Properties.DataProperty<T>.ResetValue
  nameWithType.vb: DataProperty(Of T).ResetValue
  fullName.vb: VRBuilder.Core.Properties.DataProperty(Of T).ResetValue
- uid: VRBuilder.Core.Properties.IDataPropertyBase.ResetValue
  commentId: M:VRBuilder.Core.Properties.IDataPropertyBase.ResetValue
  parent: VRBuilder.Core.Properties.IDataPropertyBase
  name: ResetValue()
  nameWithType: IDataPropertyBase.ResetValue()
  fullName: VRBuilder.Core.Properties.IDataPropertyBase.ResetValue()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.IDataPropertyBase.ResetValue
    name: ResetValue
    nameWithType: IDataPropertyBase.ResetValue
    fullName: VRBuilder.Core.Properties.IDataPropertyBase.ResetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.IDataPropertyBase.ResetValue
    name: ResetValue
    nameWithType: IDataPropertyBase.ResetValue
    fullName: VRBuilder.Core.Properties.IDataPropertyBase.ResetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.DataProperty`1.SetValue*
  commentId: Overload:VRBuilder.Core.Properties.DataProperty`1.SetValue
  name: SetValue
  nameWithType: DataProperty<T>.SetValue
  fullName: VRBuilder.Core.Properties.DataProperty<T>.SetValue
  nameWithType.vb: DataProperty(Of T).SetValue
  fullName.vb: VRBuilder.Core.Properties.DataProperty(Of T).SetValue
- uid: VRBuilder.Core.Properties.IDataProperty{{T}}.SetValue({T})
  commentId: M:VRBuilder.Core.Properties.IDataProperty{`0}.SetValue(`0)
  parent: VRBuilder.Core.Properties.IDataProperty{{T}}
  definition: VRBuilder.Core.Properties.IDataProperty`1.SetValue(`0)
  name: SetValue(T)
  nameWithType: IDataProperty<T>.SetValue(T)
  fullName: VRBuilder.Core.Properties.IDataProperty<T>.SetValue(T)
  nameWithType.vb: IDataProperty(Of T).SetValue(T)
  fullName.vb: VRBuilder.Core.Properties.IDataProperty(Of T).SetValue(T)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.IDataProperty`1.SetValue(`0)
    name: SetValue
    nameWithType: IDataProperty<T>.SetValue
    fullName: VRBuilder.Core.Properties.IDataProperty<T>.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.IDataProperty`1.SetValue(`0)
    name: SetValue
    nameWithType: IDataProperty(Of T).SetValue
    fullName: VRBuilder.Core.Properties.IDataProperty(Of T).SetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.IDataProperty`1.SetValue(`0)
  commentId: M:VRBuilder.Core.Properties.IDataProperty`1.SetValue(`0)
  name: SetValue(T)
  nameWithType: IDataProperty<T>.SetValue(T)
  fullName: VRBuilder.Core.Properties.IDataProperty<T>.SetValue(T)
  nameWithType.vb: IDataProperty(Of T).SetValue(T)
  fullName.vb: VRBuilder.Core.Properties.IDataProperty(Of T).SetValue(T)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.IDataProperty`1.SetValue(`0)
    name: SetValue
    nameWithType: IDataProperty<T>.SetValue
    fullName: VRBuilder.Core.Properties.IDataProperty<T>.SetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.IDataProperty`1.SetValue(`0)
    name: SetValue
    nameWithType: IDataProperty(Of T).SetValue
    fullName: VRBuilder.Core.Properties.IDataProperty(Of T).SetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.DataProperty`1.ValueToString*
  commentId: Overload:VRBuilder.Core.Properties.DataProperty`1.ValueToString
  name: ValueToString
  nameWithType: DataProperty<T>.ValueToString
  fullName: VRBuilder.Core.Properties.DataProperty<T>.ValueToString
  nameWithType.vb: DataProperty(Of T).ValueToString
  fullName.vb: VRBuilder.Core.Properties.DataProperty(Of T).ValueToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
