### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Utils.BezierSpline
  commentId: T:VRBuilder.Core.Utils.BezierSpline
  id: BezierSpline
  parent: VRBuilder.Core.Utils
  children:
  - VRBuilder.Core.Utils.BezierSpline.AddCurve
  - VRBuilder.Core.Utils.BezierSpline.ControlPointCount
  - VRBuilder.Core.Utils.BezierSpline.CurveCount
  - VRBuilder.Core.Utils.BezierSpline.CurveResolution
  - VRBuilder.Core.Utils.BezierSpline.GetControlPoint(System.Int32)
  - VRBuilder.Core.Utils.BezierSpline.GetControlPointMode(System.Int32)
  - VRBuilder.Core.Utils.BezierSpline.GetDirection(System.Single)
  - VRBuilder.Core.Utils.BezierSpline.GetPoint(System.Single)
  - VRBuilder.Core.Utils.BezierSpline.GetVelocity(System.Single)
  - VRBuilder.Core.Utils.BezierSpline.LinearVelocity
  - VRBuilder.Core.Utils.BezierSpline.Loop
  - VRBuilder.Core.Utils.BezierSpline.RemoveCurve
  - VRBuilder.Core.Utils.BezierSpline.Reset
  - VRBuilder.Core.Utils.BezierSpline.SetControlPoint(System.Int32,Vector3)
  - VRBuilder.Core.Utils.BezierSpline.SetControlPointMode(System.Int32,VRBuilder.Core.Utils.BezierControlPointMode)
  langs:
  - csharp
  - vb
  name: BezierSpline
  nameWithType: BezierSpline
  fullName: VRBuilder.Core.Utils.BezierSpline
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: BezierSpline
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
    startLine: 9
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  summary: "\nClass that generates a Bezier spline.\n"
  example: []
  syntax:
    content: 'public class BezierSpline : MonoBehaviour'
    content.vb: >-
      Public Class BezierSpline

          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.Utils.BezierSpline.Loop
  commentId: P:VRBuilder.Core.Utils.BezierSpline.Loop
  id: Loop
  parent: VRBuilder.Core.Utils.BezierSpline
  langs:
  - csharp
  - vb
  name: Loop
  nameWithType: BezierSpline.Loop
  fullName: VRBuilder.Core.Utils.BezierSpline.Loop
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Loop
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
    startLine: 33
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  summary: "\nIf true, the spline will form a loop.\n"
  example: []
  syntax:
    content: public bool Loop { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Loop As Boolean
  overload: VRBuilder.Core.Utils.BezierSpline.Loop*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Utils.BezierSpline.LinearVelocity
  commentId: P:VRBuilder.Core.Utils.BezierSpline.LinearVelocity
  id: LinearVelocity
  parent: VRBuilder.Core.Utils.BezierSpline
  langs:
  - csharp
  - vb
  name: LinearVelocity
  nameWithType: BezierSpline.LinearVelocity
  fullName: VRBuilder.Core.Utils.BezierSpline.LinearVelocity
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LinearVelocity
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
    startLine: 53
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  summary: "\nIf true, the t parameter will be applied linearly, with some approximation.\n"
  example: []
  syntax:
    content: public bool LinearVelocity { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LinearVelocity As Boolean
  overload: VRBuilder.Core.Utils.BezierSpline.LinearVelocity*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Utils.BezierSpline.CurveResolution
  commentId: P:VRBuilder.Core.Utils.BezierSpline.CurveResolution
  id: CurveResolution
  parent: VRBuilder.Core.Utils.BezierSpline
  langs:
  - csharp
  - vb
  name: CurveResolution
  nameWithType: BezierSpline.CurveResolution
  fullName: VRBuilder.Core.Utils.BezierSpline.CurveResolution
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CurveResolution
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
    startLine: 68
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  summary: "\nThe amount of segments the curve will be divided in for the linear approximation.\n"
  example: []
  syntax:
    content: public int CurveResolution { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CurveResolution As Integer
  overload: VRBuilder.Core.Utils.BezierSpline.CurveResolution*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Utils.BezierSpline.ControlPointCount
  commentId: P:VRBuilder.Core.Utils.BezierSpline.ControlPointCount
  id: ControlPointCount
  parent: VRBuilder.Core.Utils.BezierSpline
  langs:
  - csharp
  - vb
  name: ControlPointCount
  nameWithType: BezierSpline.ControlPointCount
  fullName: VRBuilder.Core.Utils.BezierSpline.ControlPointCount
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ControlPointCount
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
    startLine: 83
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  summary: "\nAmount of control points in the spline.\n"
  example: []
  syntax:
    content: public int ControlPointCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ControlPointCount As Integer
  overload: VRBuilder.Core.Utils.BezierSpline.ControlPointCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.Utils.BezierSpline.CurveCount
  commentId: P:VRBuilder.Core.Utils.BezierSpline.CurveCount
  id: CurveCount
  parent: VRBuilder.Core.Utils.BezierSpline
  langs:
  - csharp
  - vb
  name: CurveCount
  nameWithType: BezierSpline.CurveCount
  fullName: VRBuilder.Core.Utils.BezierSpline.CurveCount
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CurveCount
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
    startLine: 94
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  summary: "\nReturns curve count.\n"
  example: []
  syntax:
    content: public int CurveCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CurveCount As Integer
  overload: VRBuilder.Core.Utils.BezierSpline.CurveCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.Utils.BezierSpline.GetControlPoint(System.Int32)
  commentId: M:VRBuilder.Core.Utils.BezierSpline.GetControlPoint(System.Int32)
  id: GetControlPoint(System.Int32)
  parent: VRBuilder.Core.Utils.BezierSpline
  langs:
  - csharp
  - vb
  name: GetControlPoint(Int32)
  nameWithType: BezierSpline.GetControlPoint(Int32)
  fullName: VRBuilder.Core.Utils.BezierSpline.GetControlPoint(System.Int32)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetControlPoint
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
    startLine: 105
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  summary: "\nReturns the control point at the given index.\n"
  example: []
  syntax:
    content: public Vector3 GetControlPoint(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: Vector3
    content.vb: Public Function GetControlPoint(index As Integer) As Vector3
  overload: VRBuilder.Core.Utils.BezierSpline.GetControlPoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Utils.BezierSpline.SetControlPoint(System.Int32,Vector3)
  commentId: M:VRBuilder.Core.Utils.BezierSpline.SetControlPoint(System.Int32,Vector3)
  id: SetControlPoint(System.Int32,Vector3)
  parent: VRBuilder.Core.Utils.BezierSpline
  langs:
  - csharp
  - vb
  name: SetControlPoint(Int32, Vector3)
  nameWithType: BezierSpline.SetControlPoint(Int32, Vector3)
  fullName: VRBuilder.Core.Utils.BezierSpline.SetControlPoint(System.Int32, Vector3)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetControlPoint
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
    startLine: 113
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  summary: "\nSets the control point at the given index.\n"
  example: []
  syntax:
    content: public void SetControlPoint(int index, Vector3 point)
    parameters:
    - id: index
      type: System.Int32
    - id: point
      type: Vector3
    content.vb: Public Sub SetControlPoint(index As Integer, point As Vector3)
  overload: VRBuilder.Core.Utils.BezierSpline.SetControlPoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Utils.BezierSpline.GetControlPointMode(System.Int32)
  commentId: M:VRBuilder.Core.Utils.BezierSpline.GetControlPointMode(System.Int32)
  id: GetControlPointMode(System.Int32)
  parent: VRBuilder.Core.Utils.BezierSpline
  langs:
  - csharp
  - vb
  name: GetControlPointMode(Int32)
  nameWithType: BezierSpline.GetControlPointMode(Int32)
  fullName: VRBuilder.Core.Utils.BezierSpline.GetControlPointMode(System.Int32)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetControlPointMode
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
    startLine: 158
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  summary: "\nReturns control point mode.\n"
  example: []
  syntax:
    content: public BezierControlPointMode GetControlPointMode(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: VRBuilder.Core.Utils.BezierControlPointMode
    content.vb: Public Function GetControlPointMode(index As Integer) As BezierControlPointMode
  overload: VRBuilder.Core.Utils.BezierSpline.GetControlPointMode*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Utils.BezierSpline.SetControlPointMode(System.Int32,VRBuilder.Core.Utils.BezierControlPointMode)
  commentId: M:VRBuilder.Core.Utils.BezierSpline.SetControlPointMode(System.Int32,VRBuilder.Core.Utils.BezierControlPointMode)
  id: SetControlPointMode(System.Int32,VRBuilder.Core.Utils.BezierControlPointMode)
  parent: VRBuilder.Core.Utils.BezierSpline
  langs:
  - csharp
  - vb
  name: SetControlPointMode(Int32, BezierControlPointMode)
  nameWithType: BezierSpline.SetControlPointMode(Int32, BezierControlPointMode)
  fullName: VRBuilder.Core.Utils.BezierSpline.SetControlPointMode(System.Int32, VRBuilder.Core.Utils.BezierControlPointMode)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetControlPointMode
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
    startLine: 166
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  summary: "\nSets control point mode.\n"
  example: []
  syntax:
    content: public void SetControlPointMode(int index, BezierControlPointMode mode)
    parameters:
    - id: index
      type: System.Int32
    - id: mode
      type: VRBuilder.Core.Utils.BezierControlPointMode
    content.vb: Public Sub SetControlPointMode(index As Integer, mode As BezierControlPointMode)
  overload: VRBuilder.Core.Utils.BezierSpline.SetControlPointMode*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Utils.BezierSpline.GetPoint(System.Single)
  commentId: M:VRBuilder.Core.Utils.BezierSpline.GetPoint(System.Single)
  id: GetPoint(System.Single)
  parent: VRBuilder.Core.Utils.BezierSpline
  langs:
  - csharp
  - vb
  name: GetPoint(Single)
  nameWithType: BezierSpline.GetPoint(Single)
  fullName: VRBuilder.Core.Utils.BezierSpline.GetPoint(System.Single)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetPoint
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
    startLine: 187
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  summary: "\nReturns the point at the given position.\n"
  example: []
  syntax:
    content: public Vector3 GetPoint(float t)
    parameters:
    - id: t
      type: System.Single
    return:
      type: Vector3
    content.vb: Public Function GetPoint(t As Single) As Vector3
  overload: VRBuilder.Core.Utils.BezierSpline.GetPoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Utils.BezierSpline.GetVelocity(System.Single)
  commentId: M:VRBuilder.Core.Utils.BezierSpline.GetVelocity(System.Single)
  id: GetVelocity(System.Single)
  parent: VRBuilder.Core.Utils.BezierSpline
  langs:
  - csharp
  - vb
  name: GetVelocity(Single)
  nameWithType: BezierSpline.GetVelocity(Single)
  fullName: VRBuilder.Core.Utils.BezierSpline.GetVelocity(System.Single)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetVelocity
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
    startLine: 219
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  summary: "\nReturns velocity at the given position.\n"
  example: []
  syntax:
    content: public Vector3 GetVelocity(float t)
    parameters:
    - id: t
      type: System.Single
    return:
      type: Vector3
    content.vb: Public Function GetVelocity(t As Single) As Vector3
  overload: VRBuilder.Core.Utils.BezierSpline.GetVelocity*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Utils.BezierSpline.GetDirection(System.Single)
  commentId: M:VRBuilder.Core.Utils.BezierSpline.GetDirection(System.Single)
  id: GetDirection(System.Single)
  parent: VRBuilder.Core.Utils.BezierSpline
  langs:
  - csharp
  - vb
  name: GetDirection(Single)
  nameWithType: BezierSpline.GetDirection(Single)
  fullName: VRBuilder.Core.Utils.BezierSpline.GetDirection(System.Single)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetDirection
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
    startLine: 251
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  summary: "\nReturns direction at the given position.\n"
  example: []
  syntax:
    content: public Vector3 GetDirection(float t)
    parameters:
    - id: t
      type: System.Single
    return:
      type: Vector3
    content.vb: Public Function GetDirection(t As Single) As Vector3
  overload: VRBuilder.Core.Utils.BezierSpline.GetDirection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Utils.BezierSpline.AddCurve
  commentId: M:VRBuilder.Core.Utils.BezierSpline.AddCurve
  id: AddCurve
  parent: VRBuilder.Core.Utils.BezierSpline
  langs:
  - csharp
  - vb
  name: AddCurve()
  nameWithType: BezierSpline.AddCurve()
  fullName: VRBuilder.Core.Utils.BezierSpline.AddCurve()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AddCurve
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
    startLine: 259
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  summary: "\nAdds a new curve to the spline.\n"
  example: []
  syntax:
    content: public void AddCurve()
    content.vb: Public Sub AddCurve
  overload: VRBuilder.Core.Utils.BezierSpline.AddCurve*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Utils.BezierSpline.RemoveCurve
  commentId: M:VRBuilder.Core.Utils.BezierSpline.RemoveCurve
  id: RemoveCurve
  parent: VRBuilder.Core.Utils.BezierSpline
  langs:
  - csharp
  - vb
  name: RemoveCurve()
  nameWithType: BezierSpline.RemoveCurve()
  fullName: VRBuilder.Core.Utils.BezierSpline.RemoveCurve()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RemoveCurve
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
    startLine: 285
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  summary: "\nRemoves the last curve from the spline.\n"
  example: []
  syntax:
    content: public void RemoveCurve()
    content.vb: Public Sub RemoveCurve
  overload: VRBuilder.Core.Utils.BezierSpline.RemoveCurve*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Utils.BezierSpline.Reset
  commentId: M:VRBuilder.Core.Utils.BezierSpline.Reset
  id: Reset
  parent: VRBuilder.Core.Utils.BezierSpline
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: BezierSpline.Reset()
  fullName: VRBuilder.Core.Utils.BezierSpline.Reset()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Reset
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/BezierSpline.cs
    startLine: 395
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: VRBuilder.Core.Utils.BezierSpline.Reset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Core.Utils
  commentId: N:VRBuilder.Core.Utils
  name: VRBuilder.Core.Utils
  nameWithType: VRBuilder.Core.Utils
  fullName: VRBuilder.Core.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Utils.BezierSpline.Loop*
  commentId: Overload:VRBuilder.Core.Utils.BezierSpline.Loop
  name: Loop
  nameWithType: BezierSpline.Loop
  fullName: VRBuilder.Core.Utils.BezierSpline.Loop
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.Utils.BezierSpline.LinearVelocity*
  commentId: Overload:VRBuilder.Core.Utils.BezierSpline.LinearVelocity
  name: LinearVelocity
  nameWithType: BezierSpline.LinearVelocity
  fullName: VRBuilder.Core.Utils.BezierSpline.LinearVelocity
- uid: VRBuilder.Core.Utils.BezierSpline.CurveResolution*
  commentId: Overload:VRBuilder.Core.Utils.BezierSpline.CurveResolution
  name: CurveResolution
  nameWithType: BezierSpline.CurveResolution
  fullName: VRBuilder.Core.Utils.BezierSpline.CurveResolution
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VRBuilder.Core.Utils.BezierSpline.ControlPointCount*
  commentId: Overload:VRBuilder.Core.Utils.BezierSpline.ControlPointCount
  name: ControlPointCount
  nameWithType: BezierSpline.ControlPointCount
  fullName: VRBuilder.Core.Utils.BezierSpline.ControlPointCount
- uid: VRBuilder.Core.Utils.BezierSpline.CurveCount*
  commentId: Overload:VRBuilder.Core.Utils.BezierSpline.CurveCount
  name: CurveCount
  nameWithType: BezierSpline.CurveCount
  fullName: VRBuilder.Core.Utils.BezierSpline.CurveCount
- uid: VRBuilder.Core.Utils.BezierSpline.GetControlPoint*
  commentId: Overload:VRBuilder.Core.Utils.BezierSpline.GetControlPoint
  name: GetControlPoint
  nameWithType: BezierSpline.GetControlPoint
  fullName: VRBuilder.Core.Utils.BezierSpline.GetControlPoint
- uid: Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Vector3
- uid: VRBuilder.Core.Utils.BezierSpline.SetControlPoint*
  commentId: Overload:VRBuilder.Core.Utils.BezierSpline.SetControlPoint
  name: SetControlPoint
  nameWithType: BezierSpline.SetControlPoint
  fullName: VRBuilder.Core.Utils.BezierSpline.SetControlPoint
- uid: VRBuilder.Core.Utils.BezierSpline.GetControlPointMode*
  commentId: Overload:VRBuilder.Core.Utils.BezierSpline.GetControlPointMode
  name: GetControlPointMode
  nameWithType: BezierSpline.GetControlPointMode
  fullName: VRBuilder.Core.Utils.BezierSpline.GetControlPointMode
- uid: VRBuilder.Core.Utils.BezierControlPointMode
  commentId: T:VRBuilder.Core.Utils.BezierControlPointMode
  parent: VRBuilder.Core.Utils
  name: BezierControlPointMode
  nameWithType: BezierControlPointMode
  fullName: VRBuilder.Core.Utils.BezierControlPointMode
- uid: VRBuilder.Core.Utils.BezierSpline.SetControlPointMode*
  commentId: Overload:VRBuilder.Core.Utils.BezierSpline.SetControlPointMode
  name: SetControlPointMode
  nameWithType: BezierSpline.SetControlPointMode
  fullName: VRBuilder.Core.Utils.BezierSpline.SetControlPointMode
- uid: VRBuilder.Core.Utils.BezierSpline.GetPoint*
  commentId: Overload:VRBuilder.Core.Utils.BezierSpline.GetPoint
  name: GetPoint
  nameWithType: BezierSpline.GetPoint
  fullName: VRBuilder.Core.Utils.BezierSpline.GetPoint
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: VRBuilder.Core.Utils.BezierSpline.GetVelocity*
  commentId: Overload:VRBuilder.Core.Utils.BezierSpline.GetVelocity
  name: GetVelocity
  nameWithType: BezierSpline.GetVelocity
  fullName: VRBuilder.Core.Utils.BezierSpline.GetVelocity
- uid: VRBuilder.Core.Utils.BezierSpline.GetDirection*
  commentId: Overload:VRBuilder.Core.Utils.BezierSpline.GetDirection
  name: GetDirection
  nameWithType: BezierSpline.GetDirection
  fullName: VRBuilder.Core.Utils.BezierSpline.GetDirection
- uid: VRBuilder.Core.Utils.BezierSpline.AddCurve*
  commentId: Overload:VRBuilder.Core.Utils.BezierSpline.AddCurve
  name: AddCurve
  nameWithType: BezierSpline.AddCurve
  fullName: VRBuilder.Core.Utils.BezierSpline.AddCurve
- uid: VRBuilder.Core.Utils.BezierSpline.RemoveCurve*
  commentId: Overload:VRBuilder.Core.Utils.BezierSpline.RemoveCurve
  name: RemoveCurve
  nameWithType: BezierSpline.RemoveCurve
  fullName: VRBuilder.Core.Utils.BezierSpline.RemoveCurve
- uid: VRBuilder.Core.Utils.BezierSpline.Reset*
  commentId: Overload:VRBuilder.Core.Utils.BezierSpline.Reset
  name: Reset
  nameWithType: BezierSpline.Reset
  fullName: VRBuilder.Core.Utils.BezierSpline.Reset
