### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager
  commentId: T:VRBuilder.Editor.PackageManager.PackageOperationsManager
  id: PackageOperationsManager
  parent: VRBuilder.Editor.PackageManager
  children:
  - VRBuilder.Editor.PackageManager.PackageOperationsManager.GetInstalledPackageVersion(System.String)
  - VRBuilder.Editor.PackageManager.PackageOperationsManager.IsInitialized
  - VRBuilder.Editor.PackageManager.PackageOperationsManager.IsPackageLoaded(System.String,System.String)
  - VRBuilder.Editor.PackageManager.PackageOperationsManager.LoadPackage(System.String,System.String)
  - VRBuilder.Editor.PackageManager.PackageOperationsManager.OnInitialized
  - VRBuilder.Editor.PackageManager.PackageOperationsManager.OnPackageDisabled
  - VRBuilder.Editor.PackageManager.PackageOperationsManager.OnPackageEnabled
  - VRBuilder.Editor.PackageManager.PackageOperationsManager.Packages
  - VRBuilder.Editor.PackageManager.PackageOperationsManager.RemovePackage(System.String)
  langs:
  - csharp
  - vb
  name: PackageOperationsManager
  nameWithType: PackageOperationsManager
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager
  type: Class
  source:
    remote:
      path: Source/Package-Manager/PackageManager/PackageOperationsManager.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: PackageOperationsManager
    path: ../../Assets/MindPort/VR Builder/Core/Source/Package-Manager/PackageManager/PackageOperationsManager.cs
    startLine: 19
  assemblies:
  - VRBuilder.Editor.PackageManager
  namespace: VRBuilder.Editor.PackageManager
  summary: "\nHandles different Unity&apos;s Package Manager requests.\n"
  example: []
  syntax:
    content: public class PackageOperationsManager
    content.vb: Public Class PackageOperationsManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.OnPackageEnabled
  commentId: E:VRBuilder.Editor.PackageManager.PackageOperationsManager.OnPackageEnabled
  id: OnPackageEnabled
  parent: VRBuilder.Editor.PackageManager.PackageOperationsManager
  langs:
  - csharp
  - vb
  name: OnPackageEnabled
  nameWithType: PackageOperationsManager.OnPackageEnabled
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.OnPackageEnabled
  type: Event
  source:
    remote:
      path: Source/Package-Manager/PackageManager/PackageOperationsManager.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnPackageEnabled
    path: ../../Assets/MindPort/VR Builder/Core/Source/Package-Manager/PackageManager/PackageOperationsManager.cs
    startLine: 49
  assemblies:
  - VRBuilder.Editor.PackageManager
  namespace: VRBuilder.Editor.PackageManager
  summary: "\nEmitted when a package was successfully installed.\n"
  example: []
  syntax:
    content: public static event EventHandler<PackageOperationsManager.PackageEnabledEventArgs> OnPackageEnabled
    return:
      type: System.EventHandler{VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageEnabledEventArgs}
    content.vb: Public Shared Event OnPackageEnabled As EventHandler(Of PackageOperationsManager.PackageEnabledEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.OnPackageDisabled
  commentId: E:VRBuilder.Editor.PackageManager.PackageOperationsManager.OnPackageDisabled
  id: OnPackageDisabled
  parent: VRBuilder.Editor.PackageManager.PackageOperationsManager
  langs:
  - csharp
  - vb
  name: OnPackageDisabled
  nameWithType: PackageOperationsManager.OnPackageDisabled
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.OnPackageDisabled
  type: Event
  source:
    remote:
      path: Source/Package-Manager/PackageManager/PackageOperationsManager.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnPackageDisabled
    path: ../../Assets/MindPort/VR Builder/Core/Source/Package-Manager/PackageManager/PackageOperationsManager.cs
    startLine: 54
  assemblies:
  - VRBuilder.Editor.PackageManager
  namespace: VRBuilder.Editor.PackageManager
  summary: "\nEmitted when a package was successfully removed.\n"
  example: []
  syntax:
    content: public static event EventHandler<PackageOperationsManager.PackageDisabledEventArgs> OnPackageDisabled
    return:
      type: System.EventHandler{VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageDisabledEventArgs}
    content.vb: Public Shared Event OnPackageDisabled As EventHandler(Of PackageOperationsManager.PackageDisabledEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.OnInitialized
  commentId: E:VRBuilder.Editor.PackageManager.PackageOperationsManager.OnInitialized
  id: OnInitialized
  parent: VRBuilder.Editor.PackageManager.PackageOperationsManager
  langs:
  - csharp
  - vb
  name: OnInitialized
  nameWithType: PackageOperationsManager.OnInitialized
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.OnInitialized
  type: Event
  source:
    remote:
      path: Source/Package-Manager/PackageManager/PackageOperationsManager.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnInitialized
    path: ../../Assets/MindPort/VR Builder/Core/Source/Package-Manager/PackageManager/PackageOperationsManager.cs
    startLine: 59
  assemblies:
  - VRBuilder.Editor.PackageManager
  namespace: VRBuilder.Editor.PackageManager
  summary: "\nEmitted when the package list has been fetched.\n"
  example: []
  syntax:
    content: public static event EventHandler<PackageOperationsManager.InitializedEventArgs> OnInitialized
    return:
      type: System.EventHandler{VRBuilder.Editor.PackageManager.PackageOperationsManager.InitializedEventArgs}
    content.vb: Public Shared Event OnInitialized As EventHandler(Of PackageOperationsManager.InitializedEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.Packages
  commentId: P:VRBuilder.Editor.PackageManager.PackageOperationsManager.Packages
  id: Packages
  parent: VRBuilder.Editor.PackageManager.PackageOperationsManager
  langs:
  - csharp
  - vb
  name: Packages
  nameWithType: PackageOperationsManager.Packages
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.Packages
  type: Property
  source:
    remote:
      path: Source/Package-Manager/PackageManager/PackageOperationsManager.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Packages
    path: ../../Assets/MindPort/VR Builder/Core/Source/Package-Manager/PackageManager/PackageOperationsManager.cs
    startLine: 64
  assemblies:
  - VRBuilder.Editor.PackageManager
  namespace: VRBuilder.Editor.PackageManager
  summary: "\nList of currently loaded packages in the Package Manager.\n"
  example: []
  syntax:
    content: public static PackageCollection Packages { get; }
    parameters: []
    return:
      type: PackageCollection
    content.vb: Public Shared ReadOnly Property Packages As PackageCollection
  overload: VRBuilder.Editor.PackageManager.PackageOperationsManager.Packages*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsInitialized
  commentId: P:VRBuilder.Editor.PackageManager.PackageOperationsManager.IsInitialized
  id: IsInitialized
  parent: VRBuilder.Editor.PackageManager.PackageOperationsManager
  langs:
  - csharp
  - vb
  name: IsInitialized
  nameWithType: PackageOperationsManager.IsInitialized
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsInitialized
  type: Property
  source:
    remote:
      path: Source/Package-Manager/PackageManager/PackageOperationsManager.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsInitialized
    path: ../../Assets/MindPort/VR Builder/Core/Source/Package-Manager/PackageManager/PackageOperationsManager.cs
    startLine: 69
  assemblies:
  - VRBuilder.Editor.PackageManager
  namespace: VRBuilder.Editor.PackageManager
  summary: "\nSet to true when the package list has been fetched.\n"
  example: []
  syntax:
    content: public static bool IsInitialized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsInitialized As Boolean
  overload: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsInitialized*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.LoadPackage(System.String,System.String)
  commentId: M:VRBuilder.Editor.PackageManager.PackageOperationsManager.LoadPackage(System.String,System.String)
  id: LoadPackage(System.String,System.String)
  parent: VRBuilder.Editor.PackageManager.PackageOperationsManager
  langs:
  - csharp
  - vb
  name: LoadPackage(String, String)
  nameWithType: PackageOperationsManager.LoadPackage(String, String)
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.LoadPackage(System.String, System.String)
  type: Method
  source:
    remote:
      path: Source/Package-Manager/PackageManager/PackageOperationsManager.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LoadPackage
    path: ../../Assets/MindPort/VR Builder/Core/Source/Package-Manager/PackageManager/PackageOperationsManager.cs
    startLine: 102
  assemblies:
  - VRBuilder.Editor.PackageManager
  namespace: VRBuilder.Editor.PackageManager
  summary: "\nAdds a package to the Package Manager.\n"
  example: []
  syntax:
    content: public static async void LoadPackage(string package, string version = null)
    parameters:
    - id: package
      type: System.String
      description: A string representing the package to be added.
    - id: version
      type: System.String
      description: If provided, the package will be loaded with this specific version.
    content.vb: Public Shared Sub LoadPackage(package As String, version As String = Nothing)
  overload: VRBuilder.Editor.PackageManager.PackageOperationsManager.LoadPackage*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.RemovePackage(System.String)
  commentId: M:VRBuilder.Editor.PackageManager.PackageOperationsManager.RemovePackage(System.String)
  id: RemovePackage(System.String)
  parent: VRBuilder.Editor.PackageManager.PackageOperationsManager
  langs:
  - csharp
  - vb
  name: RemovePackage(String)
  nameWithType: PackageOperationsManager.RemovePackage(String)
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.RemovePackage(System.String)
  type: Method
  source:
    remote:
      path: Source/Package-Manager/PackageManager/PackageOperationsManager.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RemovePackage
    path: ../../Assets/MindPort/VR Builder/Core/Source/Package-Manager/PackageManager/PackageOperationsManager.cs
    startLine: 144
  assemblies:
  - VRBuilder.Editor.PackageManager
  namespace: VRBuilder.Editor.PackageManager
  summary: "\nRemoves a package from the Package Manager.\n"
  example: []
  syntax:
    content: public static async void RemovePackage(string package)
    parameters:
    - id: package
      type: System.String
      description: A string representing the package to be removed.
    content.vb: Public Shared Sub RemovePackage(package As String)
  overload: VRBuilder.Editor.PackageManager.PackageOperationsManager.RemovePackage*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsPackageLoaded(System.String,System.String)
  commentId: M:VRBuilder.Editor.PackageManager.PackageOperationsManager.IsPackageLoaded(System.String,System.String)
  id: IsPackageLoaded(System.String,System.String)
  parent: VRBuilder.Editor.PackageManager.PackageOperationsManager
  langs:
  - csharp
  - vb
  name: IsPackageLoaded(String, String)
  nameWithType: PackageOperationsManager.IsPackageLoaded(String, String)
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsPackageLoaded(System.String, System.String)
  type: Method
  source:
    remote:
      path: Source/Package-Manager/PackageManager/PackageOperationsManager.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsPackageLoaded
    path: ../../Assets/MindPort/VR Builder/Core/Source/Package-Manager/PackageManager/PackageOperationsManager.cs
    startLine: 176
  assemblies:
  - VRBuilder.Editor.PackageManager
  namespace: VRBuilder.Editor.PackageManager
  summary: "\nReturns true if the <xref href=\"VRBuilder.Editor.PackageManager.PackageOperationsManager\" data-throw-if-not-resolved=\"false\"></xref> has already collected a list of currently available packages and\ngiven <code data-dev-comment-type=\"paramref\" class=\"paramref\">package</code> is already on that list with given <code data-dev-comment-type=\"paramref\" class=\"paramref\">version</code>.\n"
  remarks: If <code data-dev-comment-type="paramref" class="paramref">package</code> already contains an embedded version, <code data-dev-comment-type="paramref" class="paramref">version</code> will be ignored.
  example: []
  syntax:
    content: public static bool IsPackageLoaded(string package, string version = null)
    parameters:
    - id: package
      type: System.String
    - id: version
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsPackageLoaded(package As String, version As String = Nothing) As Boolean
  overload: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsPackageLoaded*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.GetInstalledPackageVersion(System.String)
  commentId: M:VRBuilder.Editor.PackageManager.PackageOperationsManager.GetInstalledPackageVersion(System.String)
  id: GetInstalledPackageVersion(System.String)
  parent: VRBuilder.Editor.PackageManager.PackageOperationsManager
  langs:
  - csharp
  - vb
  name: GetInstalledPackageVersion(String)
  nameWithType: PackageOperationsManager.GetInstalledPackageVersion(String)
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.GetInstalledPackageVersion(System.String)
  type: Method
  source:
    remote:
      path: Source/Package-Manager/PackageManager/PackageOperationsManager.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetInstalledPackageVersion
    path: ../../Assets/MindPort/VR Builder/Core/Source/Package-Manager/PackageManager/PackageOperationsManager.cs
    startLine: 198
  assemblies:
  - VRBuilder.Editor.PackageManager
  namespace: VRBuilder.Editor.PackageManager
  summary: "\nReturns the version corresponding to the provided <code data-dev-comment-type=\"paramref\" class=\"paramref\">package</code> if this is installed, otherwise it returns null.\n"
  example: []
  syntax:
    content: public static string GetInstalledPackageVersion(string package)
    parameters:
    - id: package
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetInstalledPackageVersion(package As String) As String
  overload: VRBuilder.Editor.PackageManager.PackageOperationsManager.GetInstalledPackageVersion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VRBuilder.Editor.PackageManager
  commentId: N:VRBuilder.Editor.PackageManager
  name: VRBuilder.Editor.PackageManager
  nameWithType: VRBuilder.Editor.PackageManager
  fullName: VRBuilder.Editor.PackageManager
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler{VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageEnabledEventArgs}
  commentId: T:System.EventHandler{VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageEnabledEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PackageOperationsManager.PackageEnabledEventArgs>
  nameWithType: EventHandler<PackageOperationsManager.PackageEnabledEventArgs>
  fullName: System.EventHandler<VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageEnabledEventArgs>
  nameWithType.vb: EventHandler(Of PackageOperationsManager.PackageEnabledEventArgs)
  fullName.vb: System.EventHandler(Of VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageEnabledEventArgs)
  name.vb: EventHandler(Of PackageOperationsManager.PackageEnabledEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageEnabledEventArgs
    name: PackageOperationsManager.PackageEnabledEventArgs
    nameWithType: PackageOperationsManager.PackageEnabledEventArgs
    fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageEnabledEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageEnabledEventArgs
    name: PackageOperationsManager.PackageEnabledEventArgs
    nameWithType: PackageOperationsManager.PackageEnabledEventArgs
    fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageEnabledEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageDisabledEventArgs}
  commentId: T:System.EventHandler{VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageDisabledEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PackageOperationsManager.PackageDisabledEventArgs>
  nameWithType: EventHandler<PackageOperationsManager.PackageDisabledEventArgs>
  fullName: System.EventHandler<VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageDisabledEventArgs>
  nameWithType.vb: EventHandler(Of PackageOperationsManager.PackageDisabledEventArgs)
  fullName.vb: System.EventHandler(Of VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageDisabledEventArgs)
  name.vb: EventHandler(Of PackageOperationsManager.PackageDisabledEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageDisabledEventArgs
    name: PackageOperationsManager.PackageDisabledEventArgs
    nameWithType: PackageOperationsManager.PackageDisabledEventArgs
    fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageDisabledEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageDisabledEventArgs
    name: PackageOperationsManager.PackageDisabledEventArgs
    nameWithType: PackageOperationsManager.PackageDisabledEventArgs
    fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageDisabledEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{VRBuilder.Editor.PackageManager.PackageOperationsManager.InitializedEventArgs}
  commentId: T:System.EventHandler{VRBuilder.Editor.PackageManager.PackageOperationsManager.InitializedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<PackageOperationsManager.InitializedEventArgs>
  nameWithType: EventHandler<PackageOperationsManager.InitializedEventArgs>
  fullName: System.EventHandler<VRBuilder.Editor.PackageManager.PackageOperationsManager.InitializedEventArgs>
  nameWithType.vb: EventHandler(Of PackageOperationsManager.InitializedEventArgs)
  fullName.vb: System.EventHandler(Of VRBuilder.Editor.PackageManager.PackageOperationsManager.InitializedEventArgs)
  name.vb: EventHandler(Of PackageOperationsManager.InitializedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.InitializedEventArgs
    name: PackageOperationsManager.InitializedEventArgs
    nameWithType: PackageOperationsManager.InitializedEventArgs
    fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.InitializedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.InitializedEventArgs
    name: PackageOperationsManager.InitializedEventArgs
    nameWithType: PackageOperationsManager.InitializedEventArgs
    fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.InitializedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.Packages*
  commentId: Overload:VRBuilder.Editor.PackageManager.PackageOperationsManager.Packages
  name: Packages
  nameWithType: PackageOperationsManager.Packages
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.Packages
- uid: PackageCollection
  commentId: '!:PackageCollection'
  isExternal: true
  name: PackageCollection
  nameWithType: PackageCollection
  fullName: PackageCollection
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsInitialized*
  commentId: Overload:VRBuilder.Editor.PackageManager.PackageOperationsManager.IsInitialized
  name: IsInitialized
  nameWithType: PackageOperationsManager.IsInitialized
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsInitialized
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.LoadPackage*
  commentId: Overload:VRBuilder.Editor.PackageManager.PackageOperationsManager.LoadPackage
  name: LoadPackage
  nameWithType: PackageOperationsManager.LoadPackage
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.LoadPackage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.RemovePackage*
  commentId: Overload:VRBuilder.Editor.PackageManager.PackageOperationsManager.RemovePackage
  name: RemovePackage
  nameWithType: PackageOperationsManager.RemovePackage
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.RemovePackage
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager
  commentId: T:VRBuilder.Editor.PackageManager.PackageOperationsManager
  name: PackageOperationsManager
  nameWithType: PackageOperationsManager
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsPackageLoaded*
  commentId: Overload:VRBuilder.Editor.PackageManager.PackageOperationsManager.IsPackageLoaded
  name: IsPackageLoaded
  nameWithType: PackageOperationsManager.IsPackageLoaded
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsPackageLoaded
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.GetInstalledPackageVersion*
  commentId: Overload:VRBuilder.Editor.PackageManager.PackageOperationsManager.GetInstalledPackageVersion
  name: GetInstalledPackageVersion
  nameWithType: PackageOperationsManager.GetInstalledPackageVersion
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.GetInstalledPackageVersion
