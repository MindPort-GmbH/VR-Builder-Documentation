### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager
  commentId: T:VRBuilder.Editor.PackageManager.PackageOperationsManager
  id: PackageOperationsManager
  parent: VRBuilder.Editor.PackageManager
  children:
  - VRBuilder.Editor.PackageManager.PackageOperationsManager.GetInstalledPackageVersion(System.String)
  - VRBuilder.Editor.PackageManager.PackageOperationsManager.IsInitialized
  - VRBuilder.Editor.PackageManager.PackageOperationsManager.IsPackageLoaded(System.String,System.String)
  - VRBuilder.Editor.PackageManager.PackageOperationsManager.LoadPackage(System.String,System.String)
  - VRBuilder.Editor.PackageManager.PackageOperationsManager.OnInitialized
  - VRBuilder.Editor.PackageManager.PackageOperationsManager.OnPackageDisabled
  - VRBuilder.Editor.PackageManager.PackageOperationsManager.OnPackageEnabled
  - VRBuilder.Editor.PackageManager.PackageOperationsManager.Packages
  - VRBuilder.Editor.PackageManager.PackageOperationsManager.RemovePackage(System.String)
  langs:
  - csharp
  - vb
  name: PackageOperationsManager
  nameWithType: PackageOperationsManager
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager
  type: Class
  source:
    remote:
      path: Source/Package-Manager/PackageManager/PackageOperationsManager.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: PackageOperationsManager
    path: ../../Assets/MindPort/VR Builder/Core/Source/Package-Manager/PackageManager/PackageOperationsManager.cs
    startLine: 19
  assemblies:
  - VRBuilder.Editor.PackageManager
  namespace: VRBuilder.Editor.PackageManager
  summary: Handles different Unity's Package Manager requests.
  example: []
  syntax:
    content: >-
      [InitializeOnLoad]

      public class PackageOperationsManager
    content.vb: >-
      <InitializeOnLoad>

      Public Class PackageOperationsManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: UnityEditor.InitializeOnLoadAttribute
    ctor: UnityEditor.InitializeOnLoadAttribute.#ctor
    arguments: []
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.OnPackageEnabled
  commentId: E:VRBuilder.Editor.PackageManager.PackageOperationsManager.OnPackageEnabled
  id: OnPackageEnabled
  parent: VRBuilder.Editor.PackageManager.PackageOperationsManager
  langs:
  - csharp
  - vb
  name: OnPackageEnabled
  nameWithType: PackageOperationsManager.OnPackageEnabled
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.OnPackageEnabled
  type: Event
  source:
    remote:
      path: Source/Package-Manager/PackageManager/PackageOperationsManager.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnPackageEnabled
    path: ../../Assets/MindPort/VR Builder/Core/Source/Package-Manager/PackageManager/PackageOperationsManager.cs
    startLine: 49
  assemblies:
  - VRBuilder.Editor.PackageManager
  namespace: VRBuilder.Editor.PackageManager
  summary: Emitted when a package was successfully installed.
  example: []
  syntax:
    content: public static event EventHandler<PackageOperationsManager.PackageEnabledEventArgs> OnPackageEnabled
    return:
      type: System.EventHandler{VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageEnabledEventArgs}
    content.vb: Public Shared Event OnPackageEnabled As EventHandler(Of PackageOperationsManager.PackageEnabledEventArgs)
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.OnPackageDisabled
  commentId: E:VRBuilder.Editor.PackageManager.PackageOperationsManager.OnPackageDisabled
  id: OnPackageDisabled
  parent: VRBuilder.Editor.PackageManager.PackageOperationsManager
  langs:
  - csharp
  - vb
  name: OnPackageDisabled
  nameWithType: PackageOperationsManager.OnPackageDisabled
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.OnPackageDisabled
  type: Event
  source:
    remote:
      path: Source/Package-Manager/PackageManager/PackageOperationsManager.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnPackageDisabled
    path: ../../Assets/MindPort/VR Builder/Core/Source/Package-Manager/PackageManager/PackageOperationsManager.cs
    startLine: 54
  assemblies:
  - VRBuilder.Editor.PackageManager
  namespace: VRBuilder.Editor.PackageManager
  summary: Emitted when a package was successfully removed.
  example: []
  syntax:
    content: public static event EventHandler<PackageOperationsManager.PackageDisabledEventArgs> OnPackageDisabled
    return:
      type: System.EventHandler{VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageDisabledEventArgs}
    content.vb: Public Shared Event OnPackageDisabled As EventHandler(Of PackageOperationsManager.PackageDisabledEventArgs)
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.OnInitialized
  commentId: E:VRBuilder.Editor.PackageManager.PackageOperationsManager.OnInitialized
  id: OnInitialized
  parent: VRBuilder.Editor.PackageManager.PackageOperationsManager
  langs:
  - csharp
  - vb
  name: OnInitialized
  nameWithType: PackageOperationsManager.OnInitialized
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.OnInitialized
  type: Event
  source:
    remote:
      path: Source/Package-Manager/PackageManager/PackageOperationsManager.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnInitialized
    path: ../../Assets/MindPort/VR Builder/Core/Source/Package-Manager/PackageManager/PackageOperationsManager.cs
    startLine: 59
  assemblies:
  - VRBuilder.Editor.PackageManager
  namespace: VRBuilder.Editor.PackageManager
  summary: Emitted when the package list has been fetched.
  example: []
  syntax:
    content: public static event EventHandler<PackageOperationsManager.InitializedEventArgs> OnInitialized
    return:
      type: System.EventHandler{VRBuilder.Editor.PackageManager.PackageOperationsManager.InitializedEventArgs}
    content.vb: Public Shared Event OnInitialized As EventHandler(Of PackageOperationsManager.InitializedEventArgs)
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.Packages
  commentId: P:VRBuilder.Editor.PackageManager.PackageOperationsManager.Packages
  id: Packages
  parent: VRBuilder.Editor.PackageManager.PackageOperationsManager
  langs:
  - csharp
  - vb
  name: Packages
  nameWithType: PackageOperationsManager.Packages
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.Packages
  type: Property
  source:
    remote:
      path: Source/Package-Manager/PackageManager/PackageOperationsManager.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Packages
    path: ../../Assets/MindPort/VR Builder/Core/Source/Package-Manager/PackageManager/PackageOperationsManager.cs
    startLine: 64
  assemblies:
  - VRBuilder.Editor.PackageManager
  namespace: VRBuilder.Editor.PackageManager
  summary: List of currently loaded packages in the Package Manager.
  example: []
  syntax:
    content: public static PackageCollection Packages { get; }
    parameters: []
    return:
      type: UnityEditor.PackageManager.PackageCollection
    content.vb: Public Shared Property Packages As PackageCollection
  overload: VRBuilder.Editor.PackageManager.PackageOperationsManager.Packages*
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsInitialized
  commentId: P:VRBuilder.Editor.PackageManager.PackageOperationsManager.IsInitialized
  id: IsInitialized
  parent: VRBuilder.Editor.PackageManager.PackageOperationsManager
  langs:
  - csharp
  - vb
  name: IsInitialized
  nameWithType: PackageOperationsManager.IsInitialized
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsInitialized
  type: Property
  source:
    remote:
      path: Source/Package-Manager/PackageManager/PackageOperationsManager.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsInitialized
    path: ../../Assets/MindPort/VR Builder/Core/Source/Package-Manager/PackageManager/PackageOperationsManager.cs
    startLine: 69
  assemblies:
  - VRBuilder.Editor.PackageManager
  namespace: VRBuilder.Editor.PackageManager
  summary: Set to true when the package list has been fetched.
  example: []
  syntax:
    content: public static bool IsInitialized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property IsInitialized As Boolean
  overload: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsInitialized*
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.LoadPackage(System.String,System.String)
  commentId: M:VRBuilder.Editor.PackageManager.PackageOperationsManager.LoadPackage(System.String,System.String)
  id: LoadPackage(System.String,System.String)
  parent: VRBuilder.Editor.PackageManager.PackageOperationsManager
  langs:
  - csharp
  - vb
  name: LoadPackage(string, string)
  nameWithType: PackageOperationsManager.LoadPackage(string, string)
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.LoadPackage(string, string)
  type: Method
  source:
    remote:
      path: Source/Package-Manager/PackageManager/PackageOperationsManager.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LoadPackage
    path: ../../Assets/MindPort/VR Builder/Core/Source/Package-Manager/PackageManager/PackageOperationsManager.cs
    startLine: 102
  assemblies:
  - VRBuilder.Editor.PackageManager
  namespace: VRBuilder.Editor.PackageManager
  summary: Adds a package to the Package Manager.
  example: []
  syntax:
    content: public static void LoadPackage(string package, string version = null)
    parameters:
    - id: package
      type: System.String
      description: A string representing the package to be added.
    - id: version
      type: System.String
      description: If provided, the package will be loaded with this specific version.
    content.vb: Public Shared Sub LoadPackage(package As String, version As String = Nothing)
  overload: VRBuilder.Editor.PackageManager.PackageOperationsManager.LoadPackage*
  nameWithType.vb: PackageOperationsManager.LoadPackage(String, String)
  fullName.vb: VRBuilder.Editor.PackageManager.PackageOperationsManager.LoadPackage(String, String)
  name.vb: LoadPackage(String, String)
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.RemovePackage(System.String)
  commentId: M:VRBuilder.Editor.PackageManager.PackageOperationsManager.RemovePackage(System.String)
  id: RemovePackage(System.String)
  parent: VRBuilder.Editor.PackageManager.PackageOperationsManager
  langs:
  - csharp
  - vb
  name: RemovePackage(string)
  nameWithType: PackageOperationsManager.RemovePackage(string)
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.RemovePackage(string)
  type: Method
  source:
    remote:
      path: Source/Package-Manager/PackageManager/PackageOperationsManager.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RemovePackage
    path: ../../Assets/MindPort/VR Builder/Core/Source/Package-Manager/PackageManager/PackageOperationsManager.cs
    startLine: 144
  assemblies:
  - VRBuilder.Editor.PackageManager
  namespace: VRBuilder.Editor.PackageManager
  summary: Removes a package from the Package Manager.
  example: []
  syntax:
    content: public static void RemovePackage(string package)
    parameters:
    - id: package
      type: System.String
      description: A string representing the package to be removed.
    content.vb: Public Shared Sub RemovePackage(package As String)
  overload: VRBuilder.Editor.PackageManager.PackageOperationsManager.RemovePackage*
  nameWithType.vb: PackageOperationsManager.RemovePackage(String)
  fullName.vb: VRBuilder.Editor.PackageManager.PackageOperationsManager.RemovePackage(String)
  name.vb: RemovePackage(String)
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsPackageLoaded(System.String,System.String)
  commentId: M:VRBuilder.Editor.PackageManager.PackageOperationsManager.IsPackageLoaded(System.String,System.String)
  id: IsPackageLoaded(System.String,System.String)
  parent: VRBuilder.Editor.PackageManager.PackageOperationsManager
  langs:
  - csharp
  - vb
  name: IsPackageLoaded(string, string)
  nameWithType: PackageOperationsManager.IsPackageLoaded(string, string)
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsPackageLoaded(string, string)
  type: Method
  source:
    remote:
      path: Source/Package-Manager/PackageManager/PackageOperationsManager.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsPackageLoaded
    path: ../../Assets/MindPort/VR Builder/Core/Source/Package-Manager/PackageManager/PackageOperationsManager.cs
    startLine: 176
  assemblies:
  - VRBuilder.Editor.PackageManager
  namespace: VRBuilder.Editor.PackageManager
  summary: >-
    Returns true if the <xref href="VRBuilder.Editor.PackageManager.PackageOperationsManager" data-throw-if-not-resolved="false"></xref> has already collected a list of currently available packages and

    given <code class="paramref">package</code> is already on that list with given <code class="paramref">version</code>.
  remarks: If <code class="paramref">package</code> already contains an embedded version, <code class="paramref">version</code> will be ignored.
  example: []
  syntax:
    content: public static bool IsPackageLoaded(string package, string version = null)
    parameters:
    - id: package
      type: System.String
    - id: version
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsPackageLoaded(package As String, version As String = Nothing) As Boolean
  overload: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsPackageLoaded*
  nameWithType.vb: PackageOperationsManager.IsPackageLoaded(String, String)
  fullName.vb: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsPackageLoaded(String, String)
  name.vb: IsPackageLoaded(String, String)
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.GetInstalledPackageVersion(System.String)
  commentId: M:VRBuilder.Editor.PackageManager.PackageOperationsManager.GetInstalledPackageVersion(System.String)
  id: GetInstalledPackageVersion(System.String)
  parent: VRBuilder.Editor.PackageManager.PackageOperationsManager
  langs:
  - csharp
  - vb
  name: GetInstalledPackageVersion(string)
  nameWithType: PackageOperationsManager.GetInstalledPackageVersion(string)
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.GetInstalledPackageVersion(string)
  type: Method
  source:
    remote:
      path: Source/Package-Manager/PackageManager/PackageOperationsManager.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetInstalledPackageVersion
    path: ../../Assets/MindPort/VR Builder/Core/Source/Package-Manager/PackageManager/PackageOperationsManager.cs
    startLine: 198
  assemblies:
  - VRBuilder.Editor.PackageManager
  namespace: VRBuilder.Editor.PackageManager
  summary: Returns the version corresponding to the provided <code class="paramref">package</code> if this is installed, otherwise it returns null.
  example: []
  syntax:
    content: public static string GetInstalledPackageVersion(string package)
    parameters:
    - id: package
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetInstalledPackageVersion(package As String) As String
  overload: VRBuilder.Editor.PackageManager.PackageOperationsManager.GetInstalledPackageVersion*
  nameWithType.vb: PackageOperationsManager.GetInstalledPackageVersion(String)
  fullName.vb: VRBuilder.Editor.PackageManager.PackageOperationsManager.GetInstalledPackageVersion(String)
  name.vb: GetInstalledPackageVersion(String)
references:
- uid: VRBuilder.Editor.PackageManager
  commentId: N:VRBuilder.Editor.PackageManager
  href: VRBuilder.html
  name: VRBuilder.Editor.PackageManager
  nameWithType: VRBuilder.Editor.PackageManager
  fullName: VRBuilder.Editor.PackageManager
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Editor
    name: Editor
    href: VRBuilder.Editor.html
  - name: .
  - uid: VRBuilder.Editor.PackageManager
    name: PackageManager
    href: VRBuilder.Editor.PackageManager.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Editor
    name: Editor
    href: VRBuilder.Editor.html
  - name: .
  - uid: VRBuilder.Editor.PackageManager
    name: PackageManager
    href: VRBuilder.Editor.PackageManager.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler{VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageEnabledEventArgs}
  commentId: T:System.EventHandler{VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageEnabledEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<PackageOperationsManager.PackageEnabledEventArgs>
  nameWithType: EventHandler<PackageOperationsManager.PackageEnabledEventArgs>
  fullName: System.EventHandler<VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageEnabledEventArgs>
  nameWithType.vb: EventHandler(Of PackageOperationsManager.PackageEnabledEventArgs)
  fullName.vb: System.EventHandler(Of VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageEnabledEventArgs)
  name.vb: EventHandler(Of PackageOperationsManager.PackageEnabledEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: VRBuilder.Editor.PackageManager.PackageOperationsManager
    name: PackageOperationsManager
    href: VRBuilder.Editor.PackageManager.PackageOperationsManager.html
  - name: .
  - uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageEnabledEventArgs
    name: PackageEnabledEventArgs
    href: VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageEnabledEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: VRBuilder.Editor.PackageManager.PackageOperationsManager
    name: PackageOperationsManager
    href: VRBuilder.Editor.PackageManager.PackageOperationsManager.html
  - name: .
  - uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageEnabledEventArgs
    name: PackageEnabledEventArgs
    href: VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageEnabledEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: System.EventHandler{VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageDisabledEventArgs}
  commentId: T:System.EventHandler{VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageDisabledEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<PackageOperationsManager.PackageDisabledEventArgs>
  nameWithType: EventHandler<PackageOperationsManager.PackageDisabledEventArgs>
  fullName: System.EventHandler<VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageDisabledEventArgs>
  nameWithType.vb: EventHandler(Of PackageOperationsManager.PackageDisabledEventArgs)
  fullName.vb: System.EventHandler(Of VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageDisabledEventArgs)
  name.vb: EventHandler(Of PackageOperationsManager.PackageDisabledEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: VRBuilder.Editor.PackageManager.PackageOperationsManager
    name: PackageOperationsManager
    href: VRBuilder.Editor.PackageManager.PackageOperationsManager.html
  - name: .
  - uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageDisabledEventArgs
    name: PackageDisabledEventArgs
    href: VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageDisabledEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: VRBuilder.Editor.PackageManager.PackageOperationsManager
    name: PackageOperationsManager
    href: VRBuilder.Editor.PackageManager.PackageOperationsManager.html
  - name: .
  - uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageDisabledEventArgs
    name: PackageDisabledEventArgs
    href: VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageDisabledEventArgs.html
  - name: )
- uid: System.EventHandler{VRBuilder.Editor.PackageManager.PackageOperationsManager.InitializedEventArgs}
  commentId: T:System.EventHandler{VRBuilder.Editor.PackageManager.PackageOperationsManager.InitializedEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<PackageOperationsManager.InitializedEventArgs>
  nameWithType: EventHandler<PackageOperationsManager.InitializedEventArgs>
  fullName: System.EventHandler<VRBuilder.Editor.PackageManager.PackageOperationsManager.InitializedEventArgs>
  nameWithType.vb: EventHandler(Of PackageOperationsManager.InitializedEventArgs)
  fullName.vb: System.EventHandler(Of VRBuilder.Editor.PackageManager.PackageOperationsManager.InitializedEventArgs)
  name.vb: EventHandler(Of PackageOperationsManager.InitializedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: VRBuilder.Editor.PackageManager.PackageOperationsManager
    name: PackageOperationsManager
    href: VRBuilder.Editor.PackageManager.PackageOperationsManager.html
  - name: .
  - uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.InitializedEventArgs
    name: InitializedEventArgs
    href: VRBuilder.Editor.PackageManager.PackageOperationsManager.InitializedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: VRBuilder.Editor.PackageManager.PackageOperationsManager
    name: PackageOperationsManager
    href: VRBuilder.Editor.PackageManager.PackageOperationsManager.html
  - name: .
  - uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.InitializedEventArgs
    name: InitializedEventArgs
    href: VRBuilder.Editor.PackageManager.PackageOperationsManager.InitializedEventArgs.html
  - name: )
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.Packages*
  commentId: Overload:VRBuilder.Editor.PackageManager.PackageOperationsManager.Packages
  href: VRBuilder.Editor.PackageManager.PackageOperationsManager.html#VRBuilder_Editor_PackageManager_PackageOperationsManager_Packages
  name: Packages
  nameWithType: PackageOperationsManager.Packages
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.Packages
- uid: UnityEditor.PackageManager.PackageCollection
  commentId: T:UnityEditor.PackageManager.PackageCollection
  parent: UnityEditor.PackageManager
  isExternal: true
  name: PackageCollection
  nameWithType: PackageCollection
  fullName: UnityEditor.PackageManager.PackageCollection
- uid: UnityEditor.PackageManager
  commentId: N:UnityEditor.PackageManager
  isExternal: true
  name: UnityEditor.PackageManager
  nameWithType: UnityEditor.PackageManager
  fullName: UnityEditor.PackageManager
  spec.csharp:
  - uid: UnityEditor
    name: UnityEditor
    isExternal: true
  - name: .
  - uid: UnityEditor.PackageManager
    name: PackageManager
    isExternal: true
  spec.vb:
  - uid: UnityEditor
    name: UnityEditor
    isExternal: true
  - name: .
  - uid: UnityEditor.PackageManager
    name: PackageManager
    isExternal: true
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsInitialized*
  commentId: Overload:VRBuilder.Editor.PackageManager.PackageOperationsManager.IsInitialized
  href: VRBuilder.Editor.PackageManager.PackageOperationsManager.html#VRBuilder_Editor_PackageManager_PackageOperationsManager_IsInitialized
  name: IsInitialized
  nameWithType: PackageOperationsManager.IsInitialized
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsInitialized
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.LoadPackage*
  commentId: Overload:VRBuilder.Editor.PackageManager.PackageOperationsManager.LoadPackage
  href: VRBuilder.Editor.PackageManager.PackageOperationsManager.html#VRBuilder_Editor_PackageManager_PackageOperationsManager_LoadPackage_System_String_System_String_
  name: LoadPackage
  nameWithType: PackageOperationsManager.LoadPackage
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.LoadPackage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.RemovePackage*
  commentId: Overload:VRBuilder.Editor.PackageManager.PackageOperationsManager.RemovePackage
  href: VRBuilder.Editor.PackageManager.PackageOperationsManager.html#VRBuilder_Editor_PackageManager_PackageOperationsManager_RemovePackage_System_String_
  name: RemovePackage
  nameWithType: PackageOperationsManager.RemovePackage
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.RemovePackage
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager
  commentId: T:VRBuilder.Editor.PackageManager.PackageOperationsManager
  href: VRBuilder.Editor.PackageManager.PackageOperationsManager.html
  name: PackageOperationsManager
  nameWithType: PackageOperationsManager
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsPackageLoaded*
  commentId: Overload:VRBuilder.Editor.PackageManager.PackageOperationsManager.IsPackageLoaded
  href: VRBuilder.Editor.PackageManager.PackageOperationsManager.html#VRBuilder_Editor_PackageManager_PackageOperationsManager_IsPackageLoaded_System_String_System_String_
  name: IsPackageLoaded
  nameWithType: PackageOperationsManager.IsPackageLoaded
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.IsPackageLoaded
- uid: VRBuilder.Editor.PackageManager.PackageOperationsManager.GetInstalledPackageVersion*
  commentId: Overload:VRBuilder.Editor.PackageManager.PackageOperationsManager.GetInstalledPackageVersion
  href: VRBuilder.Editor.PackageManager.PackageOperationsManager.html#VRBuilder_Editor_PackageManager_PackageOperationsManager_GetInstalledPackageVersion_System_String_
  name: GetInstalledPackageVersion
  nameWithType: PackageOperationsManager.GetInstalledPackageVersion
  fullName: VRBuilder.Editor.PackageManager.PackageOperationsManager.GetInstalledPackageVersion
