### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Properties.IParticleSystemProperty
  commentId: T:VRBuilder.Core.Properties.IParticleSystemProperty
  id: IParticleSystemProperty
  parent: VRBuilder.Core.Properties
  children:
  - VRBuilder.Core.Properties.IParticleSystemProperty.IsEmitting
  - VRBuilder.Core.Properties.IParticleSystemProperty.StartedEmission
  - VRBuilder.Core.Properties.IParticleSystemProperty.StartEmission
  - VRBuilder.Core.Properties.IParticleSystemProperty.StopEmission
  - VRBuilder.Core.Properties.IParticleSystemProperty.StoppedEmission
  langs:
  - csharp
  - vb
  name: IParticleSystemProperty
  nameWithType: IParticleSystemProperty
  fullName: VRBuilder.Core.Properties.IParticleSystemProperty
  type: Interface
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/IParticleSystemProperty.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IParticleSystemProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/IParticleSystemProperty.cs
    startLine: 8
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nProperty that controls a particle system.\n"
  example: []
  syntax:
    content: 'public interface IParticleSystemProperty : ISceneObjectProperty'
    content.vb: >-
      Public Interface IParticleSystemProperty

          Inherits ISceneObjectProperty
  inheritedMembers:
  - VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
  extensionMethods:
  - VRBuilder.Core.Properties.ISceneObjectProperty.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VRBuilder.Core.Properties.IParticleSystemProperty.StartedEmission
  commentId: P:VRBuilder.Core.Properties.IParticleSystemProperty.StartedEmission
  id: StartedEmission
  parent: VRBuilder.Core.Properties.IParticleSystemProperty
  langs:
  - csharp
  - vb
  name: StartedEmission
  nameWithType: IParticleSystemProperty.StartedEmission
  fullName: VRBuilder.Core.Properties.IParticleSystemProperty.StartedEmission
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/IParticleSystemProperty.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StartedEmission
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/IParticleSystemProperty.cs
    startLine: 13
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nCalled when the system starts emitting particles.\n"
  example: []
  syntax:
    content: UnityEvent<ParticleSystemPropertyEventArgs> StartedEmission { get; }
    parameters: []
    return:
      type: UnityEngine.Events.UnityEvent{VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs}
    content.vb: ReadOnly Property StartedEmission As UnityEvent(Of ParticleSystemPropertyEventArgs)
  overload: VRBuilder.Core.Properties.IParticleSystemProperty.StartedEmission*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.Core.Properties.IParticleSystemProperty.StoppedEmission
  commentId: P:VRBuilder.Core.Properties.IParticleSystemProperty.StoppedEmission
  id: StoppedEmission
  parent: VRBuilder.Core.Properties.IParticleSystemProperty
  langs:
  - csharp
  - vb
  name: StoppedEmission
  nameWithType: IParticleSystemProperty.StoppedEmission
  fullName: VRBuilder.Core.Properties.IParticleSystemProperty.StoppedEmission
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/IParticleSystemProperty.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StoppedEmission
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/IParticleSystemProperty.cs
    startLine: 18
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nCalled when the system stops emitting particles.\n"
  example: []
  syntax:
    content: UnityEvent<ParticleSystemPropertyEventArgs> StoppedEmission { get; }
    parameters: []
    return:
      type: UnityEngine.Events.UnityEvent{VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs}
    content.vb: ReadOnly Property StoppedEmission As UnityEvent(Of ParticleSystemPropertyEventArgs)
  overload: VRBuilder.Core.Properties.IParticleSystemProperty.StoppedEmission*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.Core.Properties.IParticleSystemProperty.IsEmitting
  commentId: P:VRBuilder.Core.Properties.IParticleSystemProperty.IsEmitting
  id: IsEmitting
  parent: VRBuilder.Core.Properties.IParticleSystemProperty
  langs:
  - csharp
  - vb
  name: IsEmitting
  nameWithType: IParticleSystemProperty.IsEmitting
  fullName: VRBuilder.Core.Properties.IParticleSystemProperty.IsEmitting
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/IParticleSystemProperty.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsEmitting
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/IParticleSystemProperty.cs
    startLine: 23
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nTrue if the system is emitting particles.\n"
  example: []
  syntax:
    content: bool IsEmitting { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsEmitting As Boolean
  overload: VRBuilder.Core.Properties.IParticleSystemProperty.IsEmitting*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.Core.Properties.IParticleSystemProperty.StartEmission
  commentId: M:VRBuilder.Core.Properties.IParticleSystemProperty.StartEmission
  id: StartEmission
  parent: VRBuilder.Core.Properties.IParticleSystemProperty
  langs:
  - csharp
  - vb
  name: StartEmission()
  nameWithType: IParticleSystemProperty.StartEmission()
  fullName: VRBuilder.Core.Properties.IParticleSystemProperty.StartEmission()
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/IParticleSystemProperty.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StartEmission
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/IParticleSystemProperty.cs
    startLine: 28
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nStart emitting particles.\n"
  example: []
  syntax:
    content: void StartEmission()
    content.vb: Sub StartEmission
  overload: VRBuilder.Core.Properties.IParticleSystemProperty.StartEmission*
- uid: VRBuilder.Core.Properties.IParticleSystemProperty.StopEmission
  commentId: M:VRBuilder.Core.Properties.IParticleSystemProperty.StopEmission
  id: StopEmission
  parent: VRBuilder.Core.Properties.IParticleSystemProperty
  langs:
  - csharp
  - vb
  name: StopEmission()
  nameWithType: IParticleSystemProperty.StopEmission()
  fullName: VRBuilder.Core.Properties.IParticleSystemProperty.StopEmission()
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/IParticleSystemProperty.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StopEmission
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/IParticleSystemProperty.cs
    startLine: 33
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nStop emitting particles.\n"
  example: []
  syntax:
    content: void StopEmission()
    content.vb: Sub StopEmission
  overload: VRBuilder.Core.Properties.IParticleSystemProperty.StopEmission*
references:
- uid: VRBuilder.Core.Properties
  commentId: N:VRBuilder.Core.Properties
  name: VRBuilder.Core.Properties
  nameWithType: VRBuilder.Core.Properties
  fullName: VRBuilder.Core.Properties
- uid: VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
  commentId: P:VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
  parent: VRBuilder.Core.Properties.ISceneObjectProperty
  name: SceneObject
  nameWithType: ISceneObjectProperty.SceneObject
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
- uid: VRBuilder.Core.Properties.ISceneObjectProperty.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  definition: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  name: AddProcessPropertyExtensions()
  nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions()
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ISceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ISceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ISceneObjectProperty
  nameWithType: ISceneObjectProperty
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  name: AddProcessPropertyExtensions(ISceneObjectProperty)
  nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Properties.ISceneObjectProperty
    name: ISceneObjectProperty
    nameWithType: ISceneObjectProperty
    fullName: VRBuilder.Core.Properties.ISceneObjectProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Properties.ISceneObjectProperty
    name: ISceneObjectProperty
    nameWithType: ISceneObjectProperty
    fullName: VRBuilder.Core.Properties.ISceneObjectProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.SceneObjectExtensions
  commentId: T:VRBuilder.Core.Properties.SceneObjectExtensions
  parent: VRBuilder.Core.Properties
  name: SceneObjectExtensions
  nameWithType: SceneObjectExtensions
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions
- uid: VRBuilder.Core.Properties.IParticleSystemProperty.StartedEmission*
  commentId: Overload:VRBuilder.Core.Properties.IParticleSystemProperty.StartedEmission
  name: StartedEmission
  nameWithType: IParticleSystemProperty.StartedEmission
  fullName: VRBuilder.Core.Properties.IParticleSystemProperty.StartedEmission
- uid: UnityEngine.Events.UnityEvent{VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs}
  commentId: T:UnityEngine.Events.UnityEvent{VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs}
  parent: UnityEngine.Events
  definition: UnityEngine.Events.UnityEvent`1
  name: UnityEvent<ParticleSystemPropertyEventArgs>
  nameWithType: UnityEvent<ParticleSystemPropertyEventArgs>
  fullName: UnityEngine.Events.UnityEvent<VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs>
  nameWithType.vb: UnityEvent(Of ParticleSystemPropertyEventArgs)
  fullName.vb: UnityEngine.Events.UnityEvent(Of VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs)
  name.vb: UnityEvent(Of ParticleSystemPropertyEventArgs)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEngine.Events.UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs
    name: ParticleSystemPropertyEventArgs
    nameWithType: ParticleSystemPropertyEventArgs
    fullName: VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEngine.Events.UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs
    name: ParticleSystemPropertyEventArgs
    nameWithType: ParticleSystemPropertyEventArgs
    fullName: VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Events.UnityEvent`1
  commentId: T:UnityEngine.Events.UnityEvent`1
  isExternal: true
  name: UnityEvent<T0>
  nameWithType: UnityEvent<T0>
  fullName: UnityEngine.Events.UnityEvent<T0>
  nameWithType.vb: UnityEvent(Of T0)
  fullName.vb: UnityEngine.Events.UnityEvent(Of T0)
  name.vb: UnityEvent(Of T0)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEngine.Events.UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T0
    nameWithType: T0
    fullName: T0
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEngine.Events.UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T0
    nameWithType: T0
    fullName: T0
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Events
  commentId: N:UnityEngine.Events
  isExternal: true
  name: UnityEngine.Events
  nameWithType: UnityEngine.Events
  fullName: UnityEngine.Events
- uid: VRBuilder.Core.Properties.IParticleSystemProperty.StoppedEmission*
  commentId: Overload:VRBuilder.Core.Properties.IParticleSystemProperty.StoppedEmission
  name: StoppedEmission
  nameWithType: IParticleSystemProperty.StoppedEmission
  fullName: VRBuilder.Core.Properties.IParticleSystemProperty.StoppedEmission
- uid: VRBuilder.Core.Properties.IParticleSystemProperty.IsEmitting*
  commentId: Overload:VRBuilder.Core.Properties.IParticleSystemProperty.IsEmitting
  name: IsEmitting
  nameWithType: IParticleSystemProperty.IsEmitting
  fullName: VRBuilder.Core.Properties.IParticleSystemProperty.IsEmitting
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Properties.IParticleSystemProperty.StartEmission*
  commentId: Overload:VRBuilder.Core.Properties.IParticleSystemProperty.StartEmission
  name: StartEmission
  nameWithType: IParticleSystemProperty.StartEmission
  fullName: VRBuilder.Core.Properties.IParticleSystemProperty.StartEmission
- uid: VRBuilder.Core.Properties.IParticleSystemProperty.StopEmission*
  commentId: Overload:VRBuilder.Core.Properties.IParticleSystemProperty.StopEmission
  name: StopEmission
  nameWithType: IParticleSystemProperty.StopEmission
  fullName: VRBuilder.Core.Properties.IParticleSystemProperty.StopEmission
