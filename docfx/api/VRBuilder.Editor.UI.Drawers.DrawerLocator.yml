### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.UI.Drawers.DrawerLocator
  commentId: T:VRBuilder.Editor.UI.Drawers.DrawerLocator
  id: DrawerLocator
  parent: VRBuilder.Editor.UI.Drawers
  children:
  - VRBuilder.Editor.UI.Drawers.DrawerLocator.GetDrawerForMember(System.Reflection.MemberInfo,System.Object)
  - VRBuilder.Editor.UI.Drawers.DrawerLocator.GetDrawerForValue(System.Object,System.Type)
  - VRBuilder.Editor.UI.Drawers.DrawerLocator.GetInstantiatorDrawer(System.Type)
  langs:
  - csharp
  - vb
  name: DrawerLocator
  nameWithType: DrawerLocator
  fullName: VRBuilder.Editor.UI.Drawers.DrawerLocator
  type: Class
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/DrawerLocator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawerLocator
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/DrawerLocator.cs
    startLine: 14
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  syntax:
    content: public static class DrawerLocator
    content.vb: Public Module DrawerLocator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VRBuilder.Editor.UI.Drawers.DrawerLocator.GetDrawerForMember(System.Reflection.MemberInfo,System.Object)
  commentId: M:VRBuilder.Editor.UI.Drawers.DrawerLocator.GetDrawerForMember(System.Reflection.MemberInfo,System.Object)
  id: GetDrawerForMember(System.Reflection.MemberInfo,System.Object)
  parent: VRBuilder.Editor.UI.Drawers.DrawerLocator
  langs:
  - csharp
  - vb
  name: GetDrawerForMember(MemberInfo, Object)
  nameWithType: DrawerLocator.GetDrawerForMember(MemberInfo, Object)
  fullName: VRBuilder.Editor.UI.Drawers.DrawerLocator.GetDrawerForMember(System.Reflection.MemberInfo, System.Object)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/DrawerLocator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetDrawerForMember
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/DrawerLocator.cs
    startLine: 59
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  summary: "\nReturns required drawer for a given object member.\nIf the member has a <xref href=\"VRBuilder.Core.Attributes.UsesSpecificProcessDrawerAttribute\" data-throw-if-not-resolved=\"false\"></xref>, returns the drawer defined in that attribute.\nIf the member contains non-null value, tries to find drawers from most concrete type definition (which is actual value&apos;s type) and up through inheritance tree.\nIf member&apos;s value is null, does the same starting from the property declared type instead.\nIf drawer is still not found, checks drawers for interfaces.\nIf everything else fails, returns the drawer for System.Object.\n"
  example: []
  syntax:
    content: public static IProcessDrawer GetDrawerForMember(MemberInfo memberInfo, object owner)
    parameters:
    - id: memberInfo
      type: System.Reflection.MemberInfo
      description: Reflection information about the member for which drawer is needed.
    - id: owner
      type: System.Object
      description: Object to which this member belongs to.
    return:
      type: VRBuilder.Editor.UI.Drawers.IProcessDrawer
      description: Returns suitable Process drawer. Returns null only if the member is not a property or field, or the specified custom drawer is not found.
    content.vb: Public Shared Function GetDrawerForMember(memberInfo As MemberInfo, owner As Object) As IProcessDrawer
  overload: VRBuilder.Editor.UI.Drawers.DrawerLocator.GetDrawerForMember*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.UI.Drawers.DrawerLocator.GetDrawerForValue(System.Object,System.Type)
  commentId: M:VRBuilder.Editor.UI.Drawers.DrawerLocator.GetDrawerForValue(System.Object,System.Type)
  id: GetDrawerForValue(System.Object,System.Type)
  parent: VRBuilder.Editor.UI.Drawers.DrawerLocator
  langs:
  - csharp
  - vb
  name: GetDrawerForValue(Object, Type)
  nameWithType: DrawerLocator.GetDrawerForValue(Object, Type)
  fullName: VRBuilder.Editor.UI.Drawers.DrawerLocator.GetDrawerForValue(System.Object, System.Type)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/DrawerLocator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetDrawerForValue
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/DrawerLocator.cs
    startLine: 85
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  summary: "\nReturns required drawer for a given value.\nIf the value is not null, try to find drawers from most concrete type definition (which is actual value&apos;s type) and up through inheritance tree.\nIf the value is null, does the same starting from the member declaring type instead.\nIf drawer is still not found, checks drawers for interfaces.\nIf everything else fails, returns the drawer for System.Object.\n"
  example: []
  syntax:
    content: public static IProcessDrawer GetDrawerForValue(object value, Type declaredType)
    parameters:
    - id: value
      type: System.Object
      description: Value to get drawer for.
    - id: declaredType
      type: System.Type
      description: Declaring type of the class member that contains the value.
    return:
      type: VRBuilder.Editor.UI.Drawers.IProcessDrawer
      description: Returns suitable Process drawer.
    content.vb: Public Shared Function GetDrawerForValue(value As Object, declaredType As Type) As IProcessDrawer
  overload: VRBuilder.Editor.UI.Drawers.DrawerLocator.GetDrawerForValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.UI.Drawers.DrawerLocator.GetInstantiatorDrawer(System.Type)
  commentId: M:VRBuilder.Editor.UI.Drawers.DrawerLocator.GetInstantiatorDrawer(System.Type)
  id: GetInstantiatorDrawer(System.Type)
  parent: VRBuilder.Editor.UI.Drawers.DrawerLocator
  langs:
  - csharp
  - vb
  name: GetInstantiatorDrawer(Type)
  nameWithType: DrawerLocator.GetInstantiatorDrawer(Type)
  fullName: VRBuilder.Editor.UI.Drawers.DrawerLocator.GetInstantiatorDrawer(System.Type)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/DrawerLocator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetInstantiatorDrawer
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/DrawerLocator.cs
    startLine: 98
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  summary: "\nGet a drawer for a view that creates a new instance of <code data-dev-comment-type=\"paramref\" class=\"paramref\">declaredType</code>\n"
  example: []
  syntax:
    content: public static IProcessDrawer GetInstantiatorDrawer(Type declaredType)
    parameters:
    - id: declaredType
      type: System.Type
    return:
      type: VRBuilder.Editor.UI.Drawers.IProcessDrawer
    content.vb: Public Shared Function GetInstantiatorDrawer(declaredType As Type) As IProcessDrawer
  overload: VRBuilder.Editor.UI.Drawers.DrawerLocator.GetInstantiatorDrawer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VRBuilder.Editor.UI.Drawers
  commentId: N:VRBuilder.Editor.UI.Drawers
  name: VRBuilder.Editor.UI.Drawers
  nameWithType: VRBuilder.Editor.UI.Drawers
  fullName: VRBuilder.Editor.UI.Drawers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Attributes.UsesSpecificProcessDrawerAttribute
  commentId: T:VRBuilder.Core.Attributes.UsesSpecificProcessDrawerAttribute
  parent: VRBuilder.Core.Attributes
  name: UsesSpecificProcessDrawerAttribute
  nameWithType: UsesSpecificProcessDrawerAttribute
  fullName: VRBuilder.Core.Attributes.UsesSpecificProcessDrawerAttribute
- uid: VRBuilder.Editor.UI.Drawers.DrawerLocator.GetDrawerForMember*
  commentId: Overload:VRBuilder.Editor.UI.Drawers.DrawerLocator.GetDrawerForMember
  name: GetDrawerForMember
  nameWithType: DrawerLocator.GetDrawerForMember
  fullName: VRBuilder.Editor.UI.Drawers.DrawerLocator.GetDrawerForMember
- uid: System.Reflection.MemberInfo
  commentId: T:System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: VRBuilder.Editor.UI.Drawers.IProcessDrawer
  commentId: T:VRBuilder.Editor.UI.Drawers.IProcessDrawer
  parent: VRBuilder.Editor.UI.Drawers
  name: IProcessDrawer
  nameWithType: IProcessDrawer
  fullName: VRBuilder.Editor.UI.Drawers.IProcessDrawer
- uid: VRBuilder.Core.Attributes
  commentId: N:VRBuilder.Core.Attributes
  name: VRBuilder.Core.Attributes
  nameWithType: VRBuilder.Core.Attributes
  fullName: VRBuilder.Core.Attributes
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: VRBuilder.Editor.UI.Drawers.DrawerLocator.GetDrawerForValue*
  commentId: Overload:VRBuilder.Editor.UI.Drawers.DrawerLocator.GetDrawerForValue
  name: GetDrawerForValue
  nameWithType: DrawerLocator.GetDrawerForValue
  fullName: VRBuilder.Editor.UI.Drawers.DrawerLocator.GetDrawerForValue
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: VRBuilder.Editor.UI.Drawers.DrawerLocator.GetInstantiatorDrawer*
  commentId: Overload:VRBuilder.Editor.UI.Drawers.DrawerLocator.GetInstantiatorDrawer
  name: GetInstantiatorDrawer
  nameWithType: DrawerLocator.GetInstantiatorDrawer
  fullName: VRBuilder.Editor.UI.Drawers.DrawerLocator.GetInstantiatorDrawer
