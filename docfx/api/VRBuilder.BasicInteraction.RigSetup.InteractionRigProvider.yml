### YamlMime:ManagedReference
items:
- uid: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider
  commentId: T:VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider
  id: InteractionRigProvider
  parent: VRBuilder.BasicInteraction.RigSetup
  children:
  - VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.CanBeUsed
  - VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.FindPrefab(System.String)
  - VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.GetPrefab
  - VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.GetSetupTooltip
  - VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.Name
  - VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.OnSetup
  - VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.PrefabName
  - VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.PreSetup
  langs:
  - csharp
  - vb
  name: InteractionRigProvider
  nameWithType: InteractionRigProvider
  fullName: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider
  type: Class
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/RigSetup/InteractionRigProvider.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: InteractionRigProvider
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/RigSetup/InteractionRigProvider.cs
    startLine: 7
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.RigSetup
  summary: "\nProvides all information and methods to setup a scene with a fitting and working rig.\n"
  example: []
  syntax:
    content: public abstract class InteractionRigProvider
    content.vb: Public MustInherit Class InteractionRigProvider
  inheritance:
  - System.Object
  derivedClasses:
  - VRBuilder.BasicInteraction.RigSetup.NoRigSetup
  - VRBuilder.Components.Runtime.Rigs.XRSetupBase
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.Name
  commentId: P:VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.Name
  id: Name
  parent: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: InteractionRigProvider.Name
  fullName: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.Name
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/RigSetup/InteractionRigProvider.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Name
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/RigSetup/InteractionRigProvider.cs
    startLine: 12
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.RigSetup
  summary: "\nThe name for this rig, has to be unique.\n"
  example: []
  syntax:
    content: public abstract string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property Name As String
  overload: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.Name*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.PrefabName
  commentId: P:VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.PrefabName
  id: PrefabName
  parent: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider
  langs:
  - csharp
  - vb
  name: PrefabName
  nameWithType: InteractionRigProvider.PrefabName
  fullName: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.PrefabName
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/RigSetup/InteractionRigProvider.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: PrefabName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/RigSetup/InteractionRigProvider.cs
    startLine: 17
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.RigSetup
  summary: "\nName of the prefab which should be loaded.\n"
  example: []
  syntax:
    content: public abstract string PrefabName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property PrefabName As String
  overload: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.PrefabName*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.CanBeUsed
  commentId: M:VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.CanBeUsed
  id: CanBeUsed
  parent: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider
  langs:
  - csharp
  - vb
  name: CanBeUsed()
  nameWithType: InteractionRigProvider.CanBeUsed()
  fullName: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.CanBeUsed()
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/RigSetup/InteractionRigProvider.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CanBeUsed
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/RigSetup/InteractionRigProvider.cs
    startLine: 22
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.RigSetup
  summary: "\nDecides if this rig is useable at this moment. Can be overwritten to be more sophisticated.\n"
  example: []
  syntax:
    content: public virtual bool CanBeUsed()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function CanBeUsed As Boolean
  overload: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.CanBeUsed*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.GetSetupTooltip
  commentId: M:VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.GetSetupTooltip
  id: GetSetupTooltip
  parent: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider
  langs:
  - csharp
  - vb
  name: GetSetupTooltip()
  nameWithType: InteractionRigProvider.GetSetupTooltip()
  fullName: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.GetSetupTooltip()
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/RigSetup/InteractionRigProvider.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetSetupTooltip
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/RigSetup/InteractionRigProvider.cs
    startLine: 30
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.RigSetup
  summary: "\nReturns the tooltip which should be shown when this rig cannot be used.\n"
  example: []
  syntax:
    content: public virtual string GetSetupTooltip()
    return:
      type: System.String
    content.vb: Public Overridable Function GetSetupTooltip As String
  overload: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.GetSetupTooltip*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.GetPrefab
  commentId: M:VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.GetPrefab
  id: GetPrefab
  parent: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider
  langs:
  - csharp
  - vb
  name: GetPrefab()
  nameWithType: InteractionRigProvider.GetPrefab()
  fullName: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.GetPrefab()
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/RigSetup/InteractionRigProvider.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetPrefab
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/RigSetup/InteractionRigProvider.cs
    startLine: 38
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.RigSetup
  summary: "\nReturns the found Prefab object.\n"
  example: []
  syntax:
    content: public virtual GameObject GetPrefab()
    return:
      type: GameObject
    content.vb: Public Overridable Function GetPrefab As GameObject
  overload: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.GetPrefab*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.OnSetup
  commentId: M:VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.OnSetup
  id: OnSetup
  parent: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider
  langs:
  - csharp
  - vb
  name: OnSetup()
  nameWithType: InteractionRigProvider.OnSetup()
  fullName: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.OnSetup()
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/RigSetup/InteractionRigProvider.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnSetup
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/RigSetup/InteractionRigProvider.cs
    startLine: 51
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.RigSetup
  summary: "\nWill be called when the scene is done setting up this rig to allow additional changes.\n"
  example: []
  syntax:
    content: public virtual void OnSetup()
    content.vb: Public Overridable Sub OnSetup
  overload: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.OnSetup*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.PreSetup
  commentId: M:VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.PreSetup
  id: PreSetup
  parent: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider
  langs:
  - csharp
  - vb
  name: PreSetup()
  nameWithType: InteractionRigProvider.PreSetup()
  fullName: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.PreSetup()
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/RigSetup/InteractionRigProvider.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: PreSetup
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/RigSetup/InteractionRigProvider.cs
    startLine: 59
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.RigSetup
  summary: "\nWill be called before the rig is instantiated.\n"
  example: []
  syntax:
    content: public virtual void PreSetup()
    content.vb: Public Overridable Sub PreSetup
  overload: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.PreSetup*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.FindPrefab(System.String)
  commentId: M:VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.FindPrefab(System.String)
  id: FindPrefab(System.String)
  parent: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider
  langs:
  - csharp
  - vb
  name: FindPrefab(String)
  nameWithType: InteractionRigProvider.FindPrefab(String)
  fullName: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.FindPrefab(System.String)
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/RigSetup/InteractionRigProvider.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: FindPrefab
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/RigSetup/InteractionRigProvider.cs
    startLine: 67
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.RigSetup
  summary: "\nSearches the given prefab name and returns it.\n"
  example: []
  syntax:
    content: protected GameObject FindPrefab(string prefab)
    parameters:
    - id: prefab
      type: System.String
    return:
      type: GameObject
    content.vb: Protected Function FindPrefab(prefab As String) As GameObject
  overload: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.FindPrefab*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: VRBuilder.BasicInteraction.RigSetup
  commentId: N:VRBuilder.BasicInteraction.RigSetup
  name: VRBuilder.BasicInteraction.RigSetup
  nameWithType: VRBuilder.BasicInteraction.RigSetup
  fullName: VRBuilder.BasicInteraction.RigSetup
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.Name*
  commentId: Overload:VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.Name
  name: Name
  nameWithType: InteractionRigProvider.Name
  fullName: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.PrefabName*
  commentId: Overload:VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.PrefabName
  name: PrefabName
  nameWithType: InteractionRigProvider.PrefabName
  fullName: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.PrefabName
- uid: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.CanBeUsed*
  commentId: Overload:VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.CanBeUsed
  name: CanBeUsed
  nameWithType: InteractionRigProvider.CanBeUsed
  fullName: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.CanBeUsed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.GetSetupTooltip*
  commentId: Overload:VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.GetSetupTooltip
  name: GetSetupTooltip
  nameWithType: InteractionRigProvider.GetSetupTooltip
  fullName: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.GetSetupTooltip
- uid: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.GetPrefab*
  commentId: Overload:VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.GetPrefab
  name: GetPrefab
  nameWithType: InteractionRigProvider.GetPrefab
  fullName: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.GetPrefab
- uid: GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
- uid: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.OnSetup*
  commentId: Overload:VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.OnSetup
  name: OnSetup
  nameWithType: InteractionRigProvider.OnSetup
  fullName: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.OnSetup
- uid: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.PreSetup*
  commentId: Overload:VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.PreSetup
  name: PreSetup
  nameWithType: InteractionRigProvider.PreSetup
  fullName: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.PreSetup
- uid: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.FindPrefab*
  commentId: Overload:VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.FindPrefab
  name: FindPrefab
  nameWithType: InteractionRigProvider.FindPrefab
  fullName: VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.FindPrefab
