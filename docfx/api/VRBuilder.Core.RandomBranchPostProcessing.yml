### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.RandomBranchPostProcessing
  commentId: T:VRBuilder.Core.RandomBranchPostProcessing
  id: RandomBranchPostProcessing
  parent: VRBuilder.Core
  children:
  - VRBuilder.Core.RandomBranchPostProcessing.Execute(VRBuilder.Core.IStep)
  langs:
  - csharp
  - vb
  name: RandomBranchPostProcessing
  nameWithType: RandomBranchPostProcessing
  fullName: VRBuilder.Core.RandomBranchPostProcessing
  type: Class
  source:
    remote:
      path: Source/Runtime/EntityPostProcessing/RandomBranchPostProcessing.cs
      branch: feature/mp-2734-component-icons
      repo: git@github.com:VaLiuM09/Randomization-for-VR-Builder.git
    id: RandomBranchPostProcessing
    path: ../../Assets/MindPort/VR Builder/Add-ons/Randomization/Source/Runtime/EntityPostProcessing/RandomBranchPostProcessing.cs
    startLine: 8
  assemblies:
  - VRBuilder.Randomization
  namespace: VRBuilder.Core
  summary: "\n<xref href=\"VRBuilder.Core.IStep\" data-throw-if-not-resolved=\"false\"></xref> implementation of <xref href=\"VRBuilder.Core.EntityPostProcessing%601\" data-throw-if-not-resolved=\"false\"></xref> specific for &quot;randomBranch&quot; steps.\n"
  example: []
  syntax:
    content: 'public class RandomBranchPostProcessing : EntityPostProcessing<IStep>'
    content.vb: >-
      Public Class RandomBranchPostProcessing

          Inherits EntityPostProcessing(Of IStep)
  inheritance:
  - System.Object
  - VRBuilder.Core.EntityPostProcessing{VRBuilder.Core.IStep}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.RandomBranchPostProcessing.Execute(VRBuilder.Core.IStep)
  commentId: M:VRBuilder.Core.RandomBranchPostProcessing.Execute(VRBuilder.Core.IStep)
  id: Execute(VRBuilder.Core.IStep)
  parent: VRBuilder.Core.RandomBranchPostProcessing
  langs:
  - csharp
  - vb
  name: Execute(IStep)
  nameWithType: RandomBranchPostProcessing.Execute(IStep)
  fullName: VRBuilder.Core.RandomBranchPostProcessing.Execute(VRBuilder.Core.IStep)
  type: Method
  source:
    remote:
      path: Source/Runtime/EntityPostProcessing/RandomBranchPostProcessing.cs
      branch: feature/mp-2734-component-icons
      repo: git@github.com:VaLiuM09/Randomization-for-VR-Builder.git
    id: Execute
    path: ../../Assets/MindPort/VR Builder/Add-ons/Randomization/Source/Runtime/EntityPostProcessing/RandomBranchPostProcessing.cs
    startLine: 11
  assemblies:
  - VRBuilder.Randomization
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: public override void Execute(IStep entity)
    parameters:
    - id: entity
      type: VRBuilder.Core.IStep
    content.vb: Public Overrides Sub Execute(entity As IStep)
  overridden: VRBuilder.Core.EntityPostProcessing{VRBuilder.Core.IStep}.Execute(VRBuilder.Core.IStep)
  overload: VRBuilder.Core.RandomBranchPostProcessing.Execute*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VRBuilder.Core.IStep
  commentId: T:VRBuilder.Core.IStep
  parent: VRBuilder.Core
  name: IStep
  nameWithType: IStep
  fullName: VRBuilder.Core.IStep
- uid: VRBuilder.Core.EntityPostProcessing`1
  commentId: T:VRBuilder.Core.EntityPostProcessing`1
  name: EntityPostProcessing<T>
  nameWithType: EntityPostProcessing<T>
  fullName: VRBuilder.Core.EntityPostProcessing<T>
  nameWithType.vb: EntityPostProcessing(Of T)
  fullName.vb: VRBuilder.Core.EntityPostProcessing(Of T)
  name.vb: EntityPostProcessing(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.EntityPostProcessing`1
    name: EntityPostProcessing
    nameWithType: EntityPostProcessing
    fullName: VRBuilder.Core.EntityPostProcessing
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityPostProcessing`1
    name: EntityPostProcessing
    nameWithType: EntityPostProcessing
    fullName: VRBuilder.Core.EntityPostProcessing
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.EntityPostProcessing{VRBuilder.Core.IStep}
  commentId: T:VRBuilder.Core.EntityPostProcessing{VRBuilder.Core.IStep}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.EntityPostProcessing`1
  name: EntityPostProcessing<IStep>
  nameWithType: EntityPostProcessing<IStep>
  fullName: VRBuilder.Core.EntityPostProcessing<VRBuilder.Core.IStep>
  nameWithType.vb: EntityPostProcessing(Of IStep)
  fullName.vb: VRBuilder.Core.EntityPostProcessing(Of VRBuilder.Core.IStep)
  name.vb: EntityPostProcessing(Of IStep)
  spec.csharp:
  - uid: VRBuilder.Core.EntityPostProcessing`1
    name: EntityPostProcessing
    nameWithType: EntityPostProcessing
    fullName: VRBuilder.Core.EntityPostProcessing
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityPostProcessing`1
    name: EntityPostProcessing
    nameWithType: EntityPostProcessing
    fullName: VRBuilder.Core.EntityPostProcessing
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.EntityPostProcessing{VRBuilder.Core.IStep}.Execute(VRBuilder.Core.IStep)
  commentId: M:VRBuilder.Core.EntityPostProcessing{VRBuilder.Core.IStep}.Execute(VRBuilder.Core.IStep)
  parent: VRBuilder.Core.EntityPostProcessing{VRBuilder.Core.IStep}
  definition: VRBuilder.Core.EntityPostProcessing`1.Execute(`0)
  name: Execute(IStep)
  nameWithType: EntityPostProcessing<IStep>.Execute(IStep)
  fullName: VRBuilder.Core.EntityPostProcessing<VRBuilder.Core.IStep>.Execute(VRBuilder.Core.IStep)
  nameWithType.vb: EntityPostProcessing(Of IStep).Execute(IStep)
  fullName.vb: VRBuilder.Core.EntityPostProcessing(Of VRBuilder.Core.IStep).Execute(VRBuilder.Core.IStep)
  spec.csharp:
  - uid: VRBuilder.Core.EntityPostProcessing`1.Execute(`0)
    name: Execute
    nameWithType: EntityPostProcessing<IStep>.Execute
    fullName: VRBuilder.Core.EntityPostProcessing<VRBuilder.Core.IStep>.Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityPostProcessing`1.Execute(`0)
    name: Execute
    nameWithType: EntityPostProcessing(Of IStep).Execute
    fullName: VRBuilder.Core.EntityPostProcessing(Of VRBuilder.Core.IStep).Execute
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.RandomBranchPostProcessing.Execute*
  commentId: Overload:VRBuilder.Core.RandomBranchPostProcessing.Execute
  name: Execute
  nameWithType: RandomBranchPostProcessing.Execute
  fullName: VRBuilder.Core.RandomBranchPostProcessing.Execute
- uid: VRBuilder.Core.EntityPostProcessing`1.Execute(`0)
  commentId: M:VRBuilder.Core.EntityPostProcessing`1.Execute(`0)
  name: Execute(T)
  nameWithType: EntityPostProcessing<T>.Execute(T)
  fullName: VRBuilder.Core.EntityPostProcessing<T>.Execute(T)
  nameWithType.vb: EntityPostProcessing(Of T).Execute(T)
  fullName.vb: VRBuilder.Core.EntityPostProcessing(Of T).Execute(T)
  spec.csharp:
  - uid: VRBuilder.Core.EntityPostProcessing`1.Execute(`0)
    name: Execute
    nameWithType: EntityPostProcessing<T>.Execute
    fullName: VRBuilder.Core.EntityPostProcessing<T>.Execute
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityPostProcessing`1.Execute(`0)
    name: Execute
    nameWithType: EntityPostProcessing(Of T).Execute
    fullName: VRBuilder.Core.EntityPostProcessing(Of T).Execute
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
