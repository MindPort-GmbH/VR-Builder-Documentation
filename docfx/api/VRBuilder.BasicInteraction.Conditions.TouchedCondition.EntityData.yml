### YamlMime:ManagedReference
items:
- uid: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData
  commentId: T:VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData
  id: TouchedCondition.EntityData
  parent: VRBuilder.BasicInteraction.Conditions
  children:
  - VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.IsCompleted
  - VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.Metadata
  - VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.Name
  - VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.TouchableProperties
  - VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.TouchableProperty
  langs:
  - csharp
  - vb
  name: TouchedCondition.EntityData
  nameWithType: TouchedCondition.EntityData
  fullName: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData
  type: Class
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Conditions/TouchedCondition.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EntityData
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Conditions/TouchedCondition.cs
    startLine: 21
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Conditions
  syntax:
    content: >-
      [DisplayName("Touch Object")]

      public class EntityData : IConditionData, ICompletableData, INamedData, IData
    content.vb: >-
      <DisplayName("Touch Object")>

      Public Class EntityData

          Implements IConditionData, ICompletableData, INamedData, IData
  inheritance:
  - System.Object
  implements:
  - VRBuilder.Core.Conditions.IConditionData
  - VRBuilder.Core.Conditions.ICompletableData
  - VRBuilder.Core.INamedData
  - VRBuilder.Core.IData
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Touch Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.TouchableProperties
  commentId: P:VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.TouchableProperties
  id: TouchableProperties
  parent: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData
  langs:
  - csharp
  - vb
  name: TouchableProperties
  nameWithType: TouchedCondition.EntityData.TouchableProperties
  fullName: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.TouchableProperties
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Conditions/TouchedCondition.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: TouchableProperties
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Conditions/TouchedCondition.cs
    startLine: 24
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Conditions
  syntax:
    content: >-
      [DataMember]

      [DisplayName("Touchable objects")]

      public MultipleScenePropertyReference<ITouchableProperty> TouchableProperties { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.SceneObjects.MultipleScenePropertyReference{VRBuilder.BasicInteraction.Properties.ITouchableProperty}
    content.vb: >-
      <DataMember>

      <DisplayName("Touchable objects")>

      Public Property TouchableProperties As MultipleScenePropertyReference(Of ITouchableProperty)
  overload: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.TouchableProperties*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Touchable objects
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.TouchableProperty
  commentId: P:VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.TouchableProperty
  id: TouchableProperty
  parent: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData
  langs:
  - csharp
  - vb
  name: TouchableProperty
  nameWithType: TouchedCondition.EntityData.TouchableProperty
  fullName: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.TouchableProperty
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Conditions/TouchedCondition.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: TouchableProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Conditions/TouchedCondition.cs
    startLine: 28
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Conditions
  syntax:
    content: >-
      [DataMember]

      [Obsolete("Use TouchableProperties instead.")]

      [LegacyProperty("TouchableProperties")]

      public ScenePropertyReference<ITouchableProperty> TouchableProperty { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.SceneObjects.ScenePropertyReference{VRBuilder.BasicInteraction.Properties.ITouchableProperty}
    content.vb: >-
      <DataMember>

      <Obsolete("Use TouchableProperties instead.")>

      <LegacyProperty("TouchableProperties")>

      Public Property TouchableProperty As ScenePropertyReference(Of ITouchableProperty)
  overload: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.TouchableProperty*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use TouchableProperties instead.
  - type: VRBuilder.Core.Attributes.LegacyPropertyAttribute
    ctor: VRBuilder.Core.Attributes.LegacyPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TouchableProperties
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.IsCompleted
  commentId: P:VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.IsCompleted
  id: IsCompleted
  parent: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData
  langs:
  - csharp
  - vb
  name: IsCompleted
  nameWithType: TouchedCondition.EntityData.IsCompleted
  fullName: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.IsCompleted
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Conditions/TouchedCondition.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsCompleted
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Conditions/TouchedCondition.cs
    startLine: 34
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Conditions
  syntax:
    content: public bool IsCompleted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsCompleted As Boolean
  overload: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.IsCompleted*
  implements:
  - VRBuilder.Core.Conditions.ICompletableData.IsCompleted
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.Name
  commentId: P:VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.Name
  id: Name
  parent: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TouchedCondition.EntityData.Name
  fullName: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.Name
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Conditions/TouchedCondition.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Name
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Conditions/TouchedCondition.cs
    startLine: 36
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Conditions
  syntax:
    content: >-
      [IgnoreDataMember]

      public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <IgnoreDataMember>

      Public ReadOnly Property Name As String
  overload: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.Name*
  implements:
  - VRBuilder.Core.INamedData.Name
  attributes:
  - type: System.Runtime.Serialization.IgnoreDataMemberAttribute
    ctor: System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.Metadata
  commentId: P:VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.Metadata
  id: Metadata
  parent: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: TouchedCondition.EntityData.Metadata
  fullName: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.Metadata
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Conditions/TouchedCondition.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Metadata
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Conditions/TouchedCondition.cs
    startLine: 40
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Conditions
  syntax:
    content: public Metadata Metadata { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.Metadata
    content.vb: Public Property Metadata As Metadata
  overload: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.Metadata*
  implements:
  - VRBuilder.Core.IData.Metadata
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.BasicInteraction.Conditions
  commentId: N:VRBuilder.BasicInteraction.Conditions
  name: VRBuilder.BasicInteraction.Conditions
  nameWithType: VRBuilder.BasicInteraction.Conditions
  fullName: VRBuilder.BasicInteraction.Conditions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Conditions.IConditionData
  commentId: T:VRBuilder.Core.Conditions.IConditionData
  parent: VRBuilder.Core.Conditions
  name: IConditionData
  nameWithType: IConditionData
  fullName: VRBuilder.Core.Conditions.IConditionData
- uid: VRBuilder.Core.Conditions.ICompletableData
  commentId: T:VRBuilder.Core.Conditions.ICompletableData
  parent: VRBuilder.Core.Conditions
  name: ICompletableData
  nameWithType: ICompletableData
  fullName: VRBuilder.Core.Conditions.ICompletableData
- uid: VRBuilder.Core.INamedData
  commentId: T:VRBuilder.Core.INamedData
  parent: VRBuilder.Core
  name: INamedData
  nameWithType: INamedData
  fullName: VRBuilder.Core.INamedData
- uid: VRBuilder.Core.IData
  commentId: T:VRBuilder.Core.IData
  parent: VRBuilder.Core
  name: IData
  nameWithType: IData
  fullName: VRBuilder.Core.IData
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Conditions
  commentId: N:VRBuilder.Core.Conditions
  name: VRBuilder.Core.Conditions
  nameWithType: VRBuilder.Core.Conditions
  fullName: VRBuilder.Core.Conditions
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.TouchableProperties*
  commentId: Overload:VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.TouchableProperties
  name: TouchableProperties
  nameWithType: TouchedCondition.EntityData.TouchableProperties
  fullName: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.TouchableProperties
- uid: VRBuilder.Core.SceneObjects.MultipleScenePropertyReference{VRBuilder.BasicInteraction.Properties.ITouchableProperty}
  commentId: T:VRBuilder.Core.SceneObjects.MultipleScenePropertyReference{VRBuilder.BasicInteraction.Properties.ITouchableProperty}
  parent: VRBuilder.Core.SceneObjects
  definition: VRBuilder.Core.SceneObjects.MultipleScenePropertyReference`1
  name: MultipleScenePropertyReference<ITouchableProperty>
  nameWithType: MultipleScenePropertyReference<ITouchableProperty>
  fullName: VRBuilder.Core.SceneObjects.MultipleScenePropertyReference<VRBuilder.BasicInteraction.Properties.ITouchableProperty>
  nameWithType.vb: MultipleScenePropertyReference(Of ITouchableProperty)
  fullName.vb: VRBuilder.Core.SceneObjects.MultipleScenePropertyReference(Of VRBuilder.BasicInteraction.Properties.ITouchableProperty)
  name.vb: MultipleScenePropertyReference(Of ITouchableProperty)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.MultipleScenePropertyReference`1
    name: MultipleScenePropertyReference
    nameWithType: MultipleScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.MultipleScenePropertyReference
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.BasicInteraction.Properties.ITouchableProperty
    name: ITouchableProperty
    nameWithType: ITouchableProperty
    fullName: VRBuilder.BasicInteraction.Properties.ITouchableProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.MultipleScenePropertyReference`1
    name: MultipleScenePropertyReference
    nameWithType: MultipleScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.MultipleScenePropertyReference
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.BasicInteraction.Properties.ITouchableProperty
    name: ITouchableProperty
    nameWithType: ITouchableProperty
    fullName: VRBuilder.BasicInteraction.Properties.ITouchableProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.MultipleScenePropertyReference`1
  commentId: T:VRBuilder.Core.SceneObjects.MultipleScenePropertyReference`1
  name: MultipleScenePropertyReference<T>
  nameWithType: MultipleScenePropertyReference<T>
  fullName: VRBuilder.Core.SceneObjects.MultipleScenePropertyReference<T>
  nameWithType.vb: MultipleScenePropertyReference(Of T)
  fullName.vb: VRBuilder.Core.SceneObjects.MultipleScenePropertyReference(Of T)
  name.vb: MultipleScenePropertyReference(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.MultipleScenePropertyReference`1
    name: MultipleScenePropertyReference
    nameWithType: MultipleScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.MultipleScenePropertyReference
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.MultipleScenePropertyReference`1
    name: MultipleScenePropertyReference
    nameWithType: MultipleScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.MultipleScenePropertyReference
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.TouchableProperty*
  commentId: Overload:VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.TouchableProperty
  name: TouchableProperty
  nameWithType: TouchedCondition.EntityData.TouchableProperty
  fullName: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.TouchableProperty
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference{VRBuilder.BasicInteraction.Properties.ITouchableProperty}
  commentId: T:VRBuilder.Core.SceneObjects.ScenePropertyReference{VRBuilder.BasicInteraction.Properties.ITouchableProperty}
  parent: VRBuilder.Core.SceneObjects
  definition: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  name: ScenePropertyReference<ITouchableProperty>
  nameWithType: ScenePropertyReference<ITouchableProperty>
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<VRBuilder.BasicInteraction.Properties.ITouchableProperty>
  nameWithType.vb: ScenePropertyReference(Of ITouchableProperty)
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of VRBuilder.BasicInteraction.Properties.ITouchableProperty)
  name.vb: ScenePropertyReference(Of ITouchableProperty)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
    name: ScenePropertyReference
    nameWithType: ScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.BasicInteraction.Properties.ITouchableProperty
    name: ITouchableProperty
    nameWithType: ITouchableProperty
    fullName: VRBuilder.BasicInteraction.Properties.ITouchableProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
    name: ScenePropertyReference
    nameWithType: ScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.BasicInteraction.Properties.ITouchableProperty
    name: ITouchableProperty
    nameWithType: ITouchableProperty
    fullName: VRBuilder.BasicInteraction.Properties.ITouchableProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  commentId: T:VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  parent: VRBuilder.Core.SceneObjects
  name: ScenePropertyReference<T>
  nameWithType: ScenePropertyReference<T>
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<T>
  nameWithType.vb: ScenePropertyReference(Of T)
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T)
  name.vb: ScenePropertyReference(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
    name: ScenePropertyReference
    nameWithType: ScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
    name: ScenePropertyReference
    nameWithType: ScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.IsCompleted*
  commentId: Overload:VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.IsCompleted
  name: IsCompleted
  nameWithType: TouchedCondition.EntityData.IsCompleted
  fullName: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.IsCompleted
- uid: VRBuilder.Core.Conditions.ICompletableData.IsCompleted
  commentId: P:VRBuilder.Core.Conditions.ICompletableData.IsCompleted
  parent: VRBuilder.Core.Conditions.ICompletableData
  name: IsCompleted
  nameWithType: ICompletableData.IsCompleted
  fullName: VRBuilder.Core.Conditions.ICompletableData.IsCompleted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.Name*
  commentId: Overload:VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.Name
  name: Name
  nameWithType: TouchedCondition.EntityData.Name
  fullName: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.Name
- uid: VRBuilder.Core.INamedData.Name
  commentId: P:VRBuilder.Core.INamedData.Name
  parent: VRBuilder.Core.INamedData
  name: Name
  nameWithType: INamedData.Name
  fullName: VRBuilder.Core.INamedData.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.Metadata*
  commentId: Overload:VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.Metadata
  name: Metadata
  nameWithType: TouchedCondition.EntityData.Metadata
  fullName: VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.Metadata
- uid: VRBuilder.Core.IData.Metadata
  commentId: P:VRBuilder.Core.IData.Metadata
  parent: VRBuilder.Core.IData
  name: Metadata
  nameWithType: IData.Metadata
  fullName: VRBuilder.Core.IData.Metadata
- uid: VRBuilder.Core.Metadata
  commentId: T:VRBuilder.Core.Metadata
  parent: VRBuilder.Core
  name: Metadata
  nameWithType: Metadata
  fullName: VRBuilder.Core.Metadata
