### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.IChapter
  commentId: T:VRBuilder.Core.IChapter
  id: IChapter
  parent: VRBuilder.Core
  children:
  - VRBuilder.Core.IChapter.ChapterMetadata
  langs:
  - csharp
  - vb
  name: IChapter
  nameWithType: IChapter
  fullName: VRBuilder.Core.IChapter
  type: Interface
  source:
    remote:
      path: Source/Core/Runtime/IChapter.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IChapter
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IChapter.cs
    startLine: 9
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nA chapter is a high-level grouping of several <xref href=\"VRBuilder.Core.IStep\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: 'public interface IChapter : IEntity, IDataOwner<IChapterData>, IDataOwner, IClonable<IChapter>'
    content.vb: >-
      Public Interface IChapter

          Inherits IEntity, IDataOwner(Of IChapterData), IClonable(Of IChapter)
  inheritedMembers:
  - VRBuilder.Core.IEntity.LifeCycle
  - VRBuilder.Core.IEntity.GetActivatingProcess
  - VRBuilder.Core.IEntity.GetActiveProcess
  - VRBuilder.Core.IEntity.GetDeactivatingProcess
  - VRBuilder.Core.IEntity.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  - VRBuilder.Core.IEntity.Update
  - VRBuilder.Core.IEntity.Parent
  - VRBuilder.Core.IDataOwner{VRBuilder.Core.IChapterData}.Data
  - VRBuilder.Core.IClonable{VRBuilder.Core.IChapter}.Clone
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VRBuilder.Core.IChapter.ChapterMetadata
  commentId: P:VRBuilder.Core.IChapter.ChapterMetadata
  id: ChapterMetadata
  parent: VRBuilder.Core.IChapter
  langs:
  - csharp
  - vb
  name: ChapterMetadata
  nameWithType: IChapter.ChapterMetadata
  fullName: VRBuilder.Core.IChapter.ChapterMetadata
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/IChapter.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ChapterMetadata
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IChapter.cs
    startLine: 14
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nUtility data which is used by VR Builder custom editors.\n"
  example: []
  syntax:
    content: ChapterMetadata ChapterMetadata { get; }
    parameters: []
    return:
      type: VRBuilder.Core.ChapterMetadata
    content.vb: ReadOnly Property ChapterMetadata As ChapterMetadata
  overload: VRBuilder.Core.IChapter.ChapterMetadata*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: VRBuilder.Core.IStep
  commentId: T:VRBuilder.Core.IStep
  parent: VRBuilder.Core
  name: IStep
  nameWithType: IStep
  fullName: VRBuilder.Core.IStep
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Core.IEntity.LifeCycle
  commentId: P:VRBuilder.Core.IEntity.LifeCycle
  parent: VRBuilder.Core.IEntity
  name: LifeCycle
  nameWithType: IEntity.LifeCycle
  fullName: VRBuilder.Core.IEntity.LifeCycle
- uid: VRBuilder.Core.IEntity.GetActivatingProcess
  commentId: M:VRBuilder.Core.IEntity.GetActivatingProcess
  parent: VRBuilder.Core.IEntity
  name: GetActivatingProcess()
  nameWithType: IEntity.GetActivatingProcess()
  fullName: VRBuilder.Core.IEntity.GetActivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.IEntity.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: IEntity.GetActivatingProcess
    fullName: VRBuilder.Core.IEntity.GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IEntity.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: IEntity.GetActivatingProcess
    fullName: VRBuilder.Core.IEntity.GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IEntity.GetActiveProcess
  commentId: M:VRBuilder.Core.IEntity.GetActiveProcess
  parent: VRBuilder.Core.IEntity
  name: GetActiveProcess()
  nameWithType: IEntity.GetActiveProcess()
  fullName: VRBuilder.Core.IEntity.GetActiveProcess()
  spec.csharp:
  - uid: VRBuilder.Core.IEntity.GetActiveProcess
    name: GetActiveProcess
    nameWithType: IEntity.GetActiveProcess
    fullName: VRBuilder.Core.IEntity.GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IEntity.GetActiveProcess
    name: GetActiveProcess
    nameWithType: IEntity.GetActiveProcess
    fullName: VRBuilder.Core.IEntity.GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IEntity.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.IEntity.GetDeactivatingProcess
  parent: VRBuilder.Core.IEntity
  name: GetDeactivatingProcess()
  nameWithType: IEntity.GetDeactivatingProcess()
  fullName: VRBuilder.Core.IEntity.GetDeactivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.IEntity.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: IEntity.GetDeactivatingProcess
    fullName: VRBuilder.Core.IEntity.GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IEntity.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: IEntity.GetDeactivatingProcess
    fullName: VRBuilder.Core.IEntity.GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IEntity.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.Core.IEntity.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  parent: VRBuilder.Core.IEntity
  name: Configure(IMode)
  nameWithType: IEntity.Configure(IMode)
  fullName: VRBuilder.Core.IEntity.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  spec.csharp:
  - uid: VRBuilder.Core.IEntity.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: IEntity.Configure
    fullName: VRBuilder.Core.IEntity.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IEntity.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: IEntity.Configure
    fullName: VRBuilder.Core.IEntity.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IEntity.Update
  commentId: M:VRBuilder.Core.IEntity.Update
  parent: VRBuilder.Core.IEntity
  name: Update()
  nameWithType: IEntity.Update()
  fullName: VRBuilder.Core.IEntity.Update()
  spec.csharp:
  - uid: VRBuilder.Core.IEntity.Update
    name: Update
    nameWithType: IEntity.Update
    fullName: VRBuilder.Core.IEntity.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IEntity.Update
    name: Update
    nameWithType: IEntity.Update
    fullName: VRBuilder.Core.IEntity.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IEntity.Parent
  commentId: P:VRBuilder.Core.IEntity.Parent
  parent: VRBuilder.Core.IEntity
  name: Parent
  nameWithType: IEntity.Parent
  fullName: VRBuilder.Core.IEntity.Parent
- uid: VRBuilder.Core.IDataOwner{VRBuilder.Core.IChapterData}.Data
  commentId: P:VRBuilder.Core.IDataOwner{VRBuilder.Core.IChapterData}.Data
  parent: VRBuilder.Core.IDataOwner{VRBuilder.Core.IChapterData}
  definition: VRBuilder.Core.IDataOwner`1.Data
  name: Data
  nameWithType: IDataOwner<IChapterData>.Data
  fullName: VRBuilder.Core.IDataOwner<VRBuilder.Core.IChapterData>.Data
  nameWithType.vb: IDataOwner(Of IChapterData).Data
  fullName.vb: VRBuilder.Core.IDataOwner(Of VRBuilder.Core.IChapterData).Data
- uid: VRBuilder.Core.IClonable{VRBuilder.Core.IChapter}.Clone
  commentId: M:VRBuilder.Core.IClonable{VRBuilder.Core.IChapter}.Clone
  parent: VRBuilder.Core.IClonable{VRBuilder.Core.IChapter}
  definition: VRBuilder.Core.IClonable`1.Clone
  name: Clone()
  nameWithType: IClonable<IChapter>.Clone()
  fullName: VRBuilder.Core.IClonable<VRBuilder.Core.IChapter>.Clone()
  nameWithType.vb: IClonable(Of IChapter).Clone()
  fullName.vb: VRBuilder.Core.IClonable(Of VRBuilder.Core.IChapter).Clone()
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1.Clone
    name: Clone
    nameWithType: IClonable<IChapter>.Clone
    fullName: VRBuilder.Core.IClonable<VRBuilder.Core.IChapter>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1.Clone
    name: Clone
    nameWithType: IClonable(Of IChapter).Clone
    fullName: VRBuilder.Core.IClonable(Of VRBuilder.Core.IChapter).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IEntity
  commentId: T:VRBuilder.Core.IEntity
  parent: VRBuilder.Core
  name: IEntity
  nameWithType: IEntity
  fullName: VRBuilder.Core.IEntity
- uid: VRBuilder.Core.IDataOwner`1.Data
  commentId: P:VRBuilder.Core.IDataOwner`1.Data
  name: Data
  nameWithType: IDataOwner<TData>.Data
  fullName: VRBuilder.Core.IDataOwner<TData>.Data
  nameWithType.vb: IDataOwner(Of TData).Data
  fullName.vb: VRBuilder.Core.IDataOwner(Of TData).Data
- uid: VRBuilder.Core.IDataOwner{VRBuilder.Core.IChapterData}
  commentId: T:VRBuilder.Core.IDataOwner{VRBuilder.Core.IChapterData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IDataOwner`1
  name: IDataOwner<IChapterData>
  nameWithType: IDataOwner<IChapterData>
  fullName: VRBuilder.Core.IDataOwner<VRBuilder.Core.IChapterData>
  nameWithType.vb: IDataOwner(Of IChapterData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of VRBuilder.Core.IChapterData)
  name.vb: IDataOwner(Of IChapterData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IChapterData
    name: IChapterData
    nameWithType: IChapterData
    fullName: VRBuilder.Core.IChapterData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IChapterData
    name: IChapterData
    nameWithType: IChapterData
    fullName: VRBuilder.Core.IChapterData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IClonable`1.Clone
  commentId: M:VRBuilder.Core.IClonable`1.Clone
  name: Clone()
  nameWithType: IClonable<T>.Clone()
  fullName: VRBuilder.Core.IClonable<T>.Clone()
  nameWithType.vb: IClonable(Of T).Clone()
  fullName.vb: VRBuilder.Core.IClonable(Of T).Clone()
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1.Clone
    name: Clone
    nameWithType: IClonable<T>.Clone
    fullName: VRBuilder.Core.IClonable<T>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1.Clone
    name: Clone
    nameWithType: IClonable(Of T).Clone
    fullName: VRBuilder.Core.IClonable(Of T).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IClonable{VRBuilder.Core.IChapter}
  commentId: T:VRBuilder.Core.IClonable{VRBuilder.Core.IChapter}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IClonable`1
  name: IClonable<IChapter>
  nameWithType: IClonable<IChapter>
  fullName: VRBuilder.Core.IClonable<VRBuilder.Core.IChapter>
  nameWithType.vb: IClonable(Of IChapter)
  fullName.vb: VRBuilder.Core.IClonable(Of VRBuilder.Core.IChapter)
  name.vb: IClonable(Of IChapter)
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IDataOwner`1
  commentId: T:VRBuilder.Core.IDataOwner`1
  name: IDataOwner<TData>
  nameWithType: IDataOwner<TData>
  fullName: VRBuilder.Core.IDataOwner<TData>
  nameWithType.vb: IDataOwner(Of TData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of TData)
  name.vb: IDataOwner(Of TData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IClonable`1
  commentId: T:VRBuilder.Core.IClonable`1
  name: IClonable<T>
  nameWithType: IClonable<T>
  fullName: VRBuilder.Core.IClonable<T>
  nameWithType.vb: IClonable(Of T)
  fullName.vb: VRBuilder.Core.IClonable(Of T)
  name.vb: IClonable(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IChapter.ChapterMetadata*
  commentId: Overload:VRBuilder.Core.IChapter.ChapterMetadata
  name: ChapterMetadata
  nameWithType: IChapter.ChapterMetadata
  fullName: VRBuilder.Core.IChapter.ChapterMetadata
- uid: VRBuilder.Core.ChapterMetadata
  commentId: T:VRBuilder.Core.ChapterMetadata
  parent: VRBuilder.Core
  name: ChapterMetadata
  nameWithType: ChapterMetadata
  fullName: VRBuilder.Core.ChapterMetadata
