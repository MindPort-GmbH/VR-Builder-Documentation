### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry
  commentId: T:VRBuilder.Core.SceneObjects.SceneObjectRegistry
  id: SceneObjectRegistry
  parent: VRBuilder.Core.SceneObjects
  children:
  - VRBuilder.Core.SceneObjects.SceneObjectRegistry.#ctor
  - VRBuilder.Core.SceneObjects.SceneObjectRegistry.ContainsGuid(System.Guid)
  - VRBuilder.Core.SceneObjects.SceneObjectRegistry.ContainsName(System.String)
  - VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByGuid(System.Guid)
  - VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByName(System.String)
  - VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByTag(System.Guid)
  - VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetObjects(System.Guid)
  - VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetProperties``1(System.Guid)
  - VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetPropertyByTag``1(System.Guid)
  - VRBuilder.Core.SceneObjects.SceneObjectRegistry.Item(System.Guid)
  - VRBuilder.Core.SceneObjects.SceneObjectRegistry.Item(System.String)
  - VRBuilder.Core.SceneObjects.SceneObjectRegistry.Refresh
  - VRBuilder.Core.SceneObjects.SceneObjectRegistry.Register(VRBuilder.Core.SceneObjects.ISceneObject)
  - VRBuilder.Core.SceneObjects.SceneObjectRegistry.RegisterAll
  - VRBuilder.Core.SceneObjects.SceneObjectRegistry.Unregister(VRBuilder.Core.SceneObjects.ISceneObject)
  langs:
  - csharp
  - vb
  name: SceneObjectRegistry
  nameWithType: SceneObjectRegistry
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SceneObjectRegistry
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
    startLine: 17
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  example: []
  syntax:
    content: >-
      [Obsolete("This implementation of the scene object registry is obsolete. Use SceneObjectRegistryV2 instead.")]

      public class SceneObjectRegistry : ISceneObjectRegistry
    content.vb: >-
      <Obsolete("This implementation of the scene object registry is obsolete. Use SceneObjectRegistryV2 instead.")>

      Public Class SceneObjectRegistry
          Implements ISceneObjectRegistry
  inheritance:
  - System.Object
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObjectRegistry
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This implementation of the scene object registry is obsolete. Use SceneObjectRegistryV2 instead.
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Item(System.Guid)
  commentId: P:VRBuilder.Core.SceneObjects.SceneObjectRegistry.Item(System.Guid)
  id: Item(System.Guid)
  parent: VRBuilder.Core.SceneObjects.SceneObjectRegistry
  langs:
  - csharp
  - vb
  name: Item[Guid]
  nameWithType: SceneObjectRegistry.Item[Guid]
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Item[System.Guid]
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: this[]
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
    startLine: 23
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nShortcut for GetByGuid(Guid guid) method.\n"
  example: []
  syntax:
    content: public ISceneObject this[Guid guid] { get; }
    parameters:
    - id: guid
      type: System.Guid
    return:
      type: VRBuilder.Core.SceneObjects.ISceneObject
    content.vb: Public ReadOnly Property Item(guid As Guid) As ISceneObject
  overload: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Item*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Item(System.Guid)
  nameWithType.vb: SceneObjectRegistry.Item(Guid)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Item(System.Guid)
  name.vb: Item(Guid)
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.#ctor
  commentId: M:VRBuilder.Core.SceneObjects.SceneObjectRegistry.#ctor
  id: '#ctor'
  parent: VRBuilder.Core.SceneObjects.SceneObjectRegistry
  langs:
  - csharp
  - vb
  name: SceneObjectRegistry()
  nameWithType: SceneObjectRegistry.SceneObjectRegistry()
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.SceneObjectRegistry()
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
    startLine: 31
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public SceneObjectRegistry()
    content.vb: Public Sub New
  overload: VRBuilder.Core.SceneObjects.SceneObjectRegistry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.RegisterAll
  commentId: M:VRBuilder.Core.SceneObjects.SceneObjectRegistry.RegisterAll
  id: RegisterAll
  parent: VRBuilder.Core.SceneObjects.SceneObjectRegistry
  langs:
  - csharp
  - vb
  name: RegisterAll()
  nameWithType: SceneObjectRegistry.RegisterAll()
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.RegisterAll()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RegisterAll
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
    startLine: 37
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nRegisters all SceneObject in scene, independent of their state.\n"
  example: []
  syntax:
    content: public void RegisterAll()
    content.vb: Public Sub RegisterAll
  overload: VRBuilder.Core.SceneObjects.SceneObjectRegistry.RegisterAll*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObjectRegistry.RegisterAll
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Item(System.String)
  commentId: P:VRBuilder.Core.SceneObjects.SceneObjectRegistry.Item(System.String)
  id: Item(System.String)
  parent: VRBuilder.Core.SceneObjects.SceneObjectRegistry
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: SceneObjectRegistry.Item[String]
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Item[System.String]
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: this[]
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
    startLine: 64
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nShortcut for GetByName(string name) method.\n"
  example: []
  syntax:
    content: public ISceneObject this[string name] { get; }
    parameters:
    - id: name
      type: System.String
    return:
      type: VRBuilder.Core.SceneObjects.ISceneObject
    content.vb: Public ReadOnly Property Item(name As String) As ISceneObject
  overload: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Item*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Item(System.String)
  nameWithType.vb: SceneObjectRegistry.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Item(System.String)
  name.vb: Item(String)
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Register(VRBuilder.Core.SceneObjects.ISceneObject)
  commentId: M:VRBuilder.Core.SceneObjects.SceneObjectRegistry.Register(VRBuilder.Core.SceneObjects.ISceneObject)
  id: Register(VRBuilder.Core.SceneObjects.ISceneObject)
  parent: VRBuilder.Core.SceneObjects.SceneObjectRegistry
  langs:
  - csharp
  - vb
  name: Register(ISceneObject)
  nameWithType: SceneObjectRegistry.Register(ISceneObject)
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Register(VRBuilder.Core.SceneObjects.ISceneObject)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Register
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
    startLine: 73
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nRegisters an SceneObject in the registry. If there is an SceneObject with the same name\nalready registered, an NameNotUniqueException will be thrown. Also if the Guid\nis already known an SceneObjectAlreadyRegisteredException will be thrown.\n"
  example: []
  syntax:
    content: public void Register(ISceneObject obj)
    parameters:
    - id: obj
      type: VRBuilder.Core.SceneObjects.ISceneObject
    content.vb: Public Sub Register(obj As ISceneObject)
  overload: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Register*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Register(VRBuilder.Core.SceneObjects.ISceneObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Unregister(VRBuilder.Core.SceneObjects.ISceneObject)
  commentId: M:VRBuilder.Core.SceneObjects.SceneObjectRegistry.Unregister(VRBuilder.Core.SceneObjects.ISceneObject)
  id: Unregister(VRBuilder.Core.SceneObjects.ISceneObject)
  parent: VRBuilder.Core.SceneObjects.SceneObjectRegistry
  langs:
  - csharp
  - vb
  name: Unregister(ISceneObject)
  nameWithType: SceneObjectRegistry.Unregister(ISceneObject)
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Unregister(VRBuilder.Core.SceneObjects.ISceneObject)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Unregister
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
    startLine: 89
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nRemoves the SceneObject completely from the Registry.\n"
  example: []
  syntax:
    content: public bool Unregister(ISceneObject entity)
    parameters:
    - id: entity
      type: VRBuilder.Core.SceneObjects.ISceneObject
    return:
      type: System.Boolean
    content.vb: Public Function Unregister(entity As ISceneObject) As Boolean
  overload: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Unregister*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Unregister(VRBuilder.Core.SceneObjects.ISceneObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.ContainsName(System.String)
  commentId: M:VRBuilder.Core.SceneObjects.SceneObjectRegistry.ContainsName(System.String)
  id: ContainsName(System.String)
  parent: VRBuilder.Core.SceneObjects.SceneObjectRegistry
  langs:
  - csharp
  - vb
  name: ContainsName(String)
  nameWithType: SceneObjectRegistry.ContainsName(String)
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.ContainsName(System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ContainsName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
    startLine: 95
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nReturns if the name is registered in the registry.\n"
  example: []
  syntax:
    content: public bool ContainsName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function ContainsName(name As String) As Boolean
  overload: VRBuilder.Core.SceneObjects.SceneObjectRegistry.ContainsName*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObjectRegistry.ContainsName(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByName(System.String)
  commentId: M:VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByName(System.String)
  id: GetByName(System.String)
  parent: VRBuilder.Core.SceneObjects.SceneObjectRegistry
  langs:
  - csharp
  - vb
  name: GetByName(String)
  nameWithType: SceneObjectRegistry.GetByName(String)
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByName(System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetByName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
    startLine: 101
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nReturns the IProcessSceneEntity belonging to the given unique name.\nIf there is no fitting Entity found a MissingEntityException will be thrown.\n"
  example: []
  syntax:
    content: public ISceneObject GetByName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: VRBuilder.Core.SceneObjects.ISceneObject
    content.vb: Public Function GetByName(name As String) As ISceneObject
  overload: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByName*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByName(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.ContainsGuid(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.SceneObjectRegistry.ContainsGuid(System.Guid)
  id: ContainsGuid(System.Guid)
  parent: VRBuilder.Core.SceneObjects.SceneObjectRegistry
  langs:
  - csharp
  - vb
  name: ContainsGuid(Guid)
  nameWithType: SceneObjectRegistry.ContainsGuid(Guid)
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.ContainsGuid(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ContainsGuid
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
    startLine: 112
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nReturns if the Guid is registered in the registry.\n"
  example: []
  syntax:
    content: public bool ContainsGuid(Guid guid)
    parameters:
    - id: guid
      type: System.Guid
    return:
      type: System.Boolean
    content.vb: Public Function ContainsGuid(guid As Guid) As Boolean
  overload: VRBuilder.Core.SceneObjects.SceneObjectRegistry.ContainsGuid*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObjectRegistry.ContainsGuid(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByGuid(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByGuid(System.Guid)
  id: GetByGuid(System.Guid)
  parent: VRBuilder.Core.SceneObjects.SceneObjectRegistry
  langs:
  - csharp
  - vb
  name: GetByGuid(Guid)
  nameWithType: SceneObjectRegistry.GetByGuid(Guid)
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByGuid(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetByGuid
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
    startLine: 118
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nReturns the IProcessSceneEntity belonging to the given Guid.\nIf there is no fitting Entity found a MissingEntityException will be thrown.\n"
  example: []
  syntax:
    content: public ISceneObject GetByGuid(Guid guid)
    parameters:
    - id: guid
      type: System.Guid
    return:
      type: VRBuilder.Core.SceneObjects.ISceneObject
    content.vb: Public Function GetByGuid(guid As Guid) As ISceneObject
  overload: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByGuid*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByGuid(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetObjects(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetObjects(System.Guid)
  id: GetObjects(System.Guid)
  parent: VRBuilder.Core.SceneObjects.SceneObjectRegistry
  langs:
  - csharp
  - vb
  name: GetObjects(Guid)
  nameWithType: SceneObjectRegistry.GetObjects(Guid)
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetObjects(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetObjects
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
    startLine: 131
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nReturns all registered scene objects which have the provided guid assigned to them.\n"
  example: []
  syntax:
    content: public IEnumerable<ISceneObject> GetObjects(Guid tag)
    parameters:
    - id: tag
      type: System.Guid
    return:
      type: System.Collections.Generic.IEnumerable{VRBuilder.Core.SceneObjects.ISceneObject}
    content.vb: Public Function GetObjects(tag As Guid) As IEnumerable(Of ISceneObject)
  overload: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetObjects*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetObjects(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetProperties``1(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetProperties``1(System.Guid)
  id: GetProperties``1(System.Guid)
  parent: VRBuilder.Core.SceneObjects.SceneObjectRegistry
  langs:
  - csharp
  - vb
  name: GetProperties<T>(Guid)
  nameWithType: SceneObjectRegistry.GetProperties<T>(Guid)
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetProperties<T>(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetProperties
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
    startLine: 137
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nReturns all registered scene objects with the provided guid and at least one valid property of the specified type.\n"
  example: []
  syntax:
    content: >-
      public IEnumerable<T> GetProperties<T>(Guid tag)
          where T : ISceneObjectProperty
    parameters:
    - id: tag
      type: System.Guid
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Function GetProperties(Of T As ISceneObjectProperty)(tag As Guid) As IEnumerable(Of T)
  overload: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetProperties*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetProperties``1(System.Guid)
  nameWithType.vb: SceneObjectRegistry.GetProperties(Of T)(Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetProperties(Of T)(System.Guid)
  name.vb: GetProperties(Of T)(Guid)
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByTag(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByTag(System.Guid)
  id: GetByTag(System.Guid)
  parent: VRBuilder.Core.SceneObjects.SceneObjectRegistry
  langs:
  - csharp
  - vb
  name: GetByTag(Guid)
  nameWithType: SceneObjectRegistry.GetByTag(Guid)
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByTag(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetByTag
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
    startLine: 145
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: >-
      [Obsolete("Use GetObjects instead.")]

      public IEnumerable<ISceneObject> GetByTag(Guid tag)
    parameters:
    - id: tag
      type: System.Guid
    return:
      type: System.Collections.Generic.IEnumerable{VRBuilder.Core.SceneObjects.ISceneObject}
    content.vb: >-
      <Obsolete("Use GetObjects instead.")>

      Public Function GetByTag(tag As Guid) As IEnumerable(Of ISceneObject)
  overload: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByTag*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByTag(System.Guid)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use GetObjects instead.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetPropertyByTag``1(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetPropertyByTag``1(System.Guid)
  id: GetPropertyByTag``1(System.Guid)
  parent: VRBuilder.Core.SceneObjects.SceneObjectRegistry
  langs:
  - csharp
  - vb
  name: GetPropertyByTag<T>(Guid)
  nameWithType: SceneObjectRegistry.GetPropertyByTag<T>(Guid)
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetPropertyByTag<T>(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetPropertyByTag
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
    startLine: 151
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: >-
      [Obsolete("Use GetProperties instead.")]

      public IEnumerable<T> GetPropertyByTag<T>(Guid tag)
          where T : ISceneObjectProperty
    parameters:
    - id: tag
      type: System.Guid
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: >-
      <Obsolete("Use GetProperties instead.")>

      Public Function GetPropertyByTag(Of T As ISceneObjectProperty)(tag As Guid) As IEnumerable(Of T)
  overload: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetPropertyByTag*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetPropertyByTag``1(System.Guid)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use GetProperties instead.
  nameWithType.vb: SceneObjectRegistry.GetPropertyByTag(Of T)(Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetPropertyByTag(Of T)(System.Guid)
  name.vb: GetPropertyByTag(Of T)(Guid)
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Refresh
  commentId: M:VRBuilder.Core.SceneObjects.SceneObjectRegistry.Refresh
  id: Refresh
  parent: VRBuilder.Core.SceneObjects.SceneObjectRegistry
  langs:
  - csharp
  - vb
  name: Refresh()
  nameWithType: SceneObjectRegistry.Refresh()
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Refresh()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Refresh
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectRegistry.cs
    startLine: 158
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nUpdates the registry by removing all <xref href=\"VRBuilder.Core.SceneObjects.ISceneObject\" data-throw-if-not-resolved=\"false\"></xref> which are not in the scene anymore and adding new ones.\n"
  example: []
  syntax:
    content: public void Refresh()
    content.vb: Public Sub Refresh
  overload: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Refresh*
  implements:
  - VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Refresh
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry
  commentId: T:VRBuilder.Core.SceneObjects.ISceneObjectRegistry
  parent: VRBuilder.Core.SceneObjects
  name: ISceneObjectRegistry
  nameWithType: ISceneObjectRegistry
  fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Item*
  commentId: Overload:VRBuilder.Core.SceneObjects.SceneObjectRegistry.Item
  name: Item
  nameWithType: SceneObjectRegistry.Item
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Item
- uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Item(System.Guid)
  commentId: P:VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Item(System.Guid)
  parent: VRBuilder.Core.SceneObjects.ISceneObjectRegistry
  isExternal: true
  name: Item[Guid]
  nameWithType: ISceneObjectRegistry.Item[Guid]
  fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Item[System.Guid]
  nameWithType.vb: ISceneObjectRegistry.Item(Guid)
  fullName.vb: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Item(System.Guid)
  name.vb: Item(Guid)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Item(System.Guid)
    name: Item
    nameWithType: ISceneObjectRegistry.Item
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Item(System.Guid)
    name: Item
    nameWithType: ISceneObjectRegistry.Item
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: VRBuilder.Core.SceneObjects.ISceneObject
  commentId: T:VRBuilder.Core.SceneObjects.ISceneObject
  parent: VRBuilder.Core.SceneObjects
  name: ISceneObject
  nameWithType: ISceneObject
  fullName: VRBuilder.Core.SceneObjects.ISceneObject
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.#ctor*
  commentId: Overload:VRBuilder.Core.SceneObjects.SceneObjectRegistry.#ctor
  name: SceneObjectRegistry
  nameWithType: SceneObjectRegistry.SceneObjectRegistry
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.SceneObjectRegistry
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.RegisterAll*
  commentId: Overload:VRBuilder.Core.SceneObjects.SceneObjectRegistry.RegisterAll
  name: RegisterAll
  nameWithType: SceneObjectRegistry.RegisterAll
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.RegisterAll
- uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.RegisterAll
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObjectRegistry.RegisterAll
  parent: VRBuilder.Core.SceneObjects.ISceneObjectRegistry
  name: RegisterAll()
  nameWithType: ISceneObjectRegistry.RegisterAll()
  fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.RegisterAll()
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.RegisterAll
    name: RegisterAll
    nameWithType: ISceneObjectRegistry.RegisterAll
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.RegisterAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.RegisterAll
    name: RegisterAll
    nameWithType: ISceneObjectRegistry.RegisterAll
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.RegisterAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Item(System.String)
  commentId: P:VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Item(System.String)
  parent: VRBuilder.Core.SceneObjects.ISceneObjectRegistry
  isExternal: true
  name: Item[String]
  nameWithType: ISceneObjectRegistry.Item[String]
  fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Item[System.String]
  nameWithType.vb: ISceneObjectRegistry.Item(String)
  fullName.vb: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Item(System.String)
    name: Item
    nameWithType: ISceneObjectRegistry.Item
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Item(System.String)
    name: Item
    nameWithType: ISceneObjectRegistry.Item
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Register*
  commentId: Overload:VRBuilder.Core.SceneObjects.SceneObjectRegistry.Register
  name: Register
  nameWithType: SceneObjectRegistry.Register
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Register
- uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Register(VRBuilder.Core.SceneObjects.ISceneObject)
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Register(VRBuilder.Core.SceneObjects.ISceneObject)
  parent: VRBuilder.Core.SceneObjects.ISceneObjectRegistry
  name: Register(ISceneObject)
  nameWithType: ISceneObjectRegistry.Register(ISceneObject)
  fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Register(VRBuilder.Core.SceneObjects.ISceneObject)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Register(VRBuilder.Core.SceneObjects.ISceneObject)
    name: Register
    nameWithType: ISceneObjectRegistry.Register
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Register
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Register(VRBuilder.Core.SceneObjects.ISceneObject)
    name: Register
    nameWithType: ISceneObjectRegistry.Register
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Register
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Unregister*
  commentId: Overload:VRBuilder.Core.SceneObjects.SceneObjectRegistry.Unregister
  name: Unregister
  nameWithType: SceneObjectRegistry.Unregister
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Unregister
- uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Unregister(VRBuilder.Core.SceneObjects.ISceneObject)
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Unregister(VRBuilder.Core.SceneObjects.ISceneObject)
  parent: VRBuilder.Core.SceneObjects.ISceneObjectRegistry
  name: Unregister(ISceneObject)
  nameWithType: ISceneObjectRegistry.Unregister(ISceneObject)
  fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Unregister(VRBuilder.Core.SceneObjects.ISceneObject)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Unregister(VRBuilder.Core.SceneObjects.ISceneObject)
    name: Unregister
    nameWithType: ISceneObjectRegistry.Unregister
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Unregister
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Unregister(VRBuilder.Core.SceneObjects.ISceneObject)
    name: Unregister
    nameWithType: ISceneObjectRegistry.Unregister
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Unregister
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.ContainsName*
  commentId: Overload:VRBuilder.Core.SceneObjects.SceneObjectRegistry.ContainsName
  name: ContainsName
  nameWithType: SceneObjectRegistry.ContainsName
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.ContainsName
- uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.ContainsName(System.String)
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObjectRegistry.ContainsName(System.String)
  parent: VRBuilder.Core.SceneObjects.ISceneObjectRegistry
  isExternal: true
  name: ContainsName(String)
  nameWithType: ISceneObjectRegistry.ContainsName(String)
  fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.ContainsName(System.String)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.ContainsName(System.String)
    name: ContainsName
    nameWithType: ISceneObjectRegistry.ContainsName
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.ContainsName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.ContainsName(System.String)
    name: ContainsName
    nameWithType: ISceneObjectRegistry.ContainsName
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.ContainsName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByName*
  commentId: Overload:VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByName
  name: GetByName
  nameWithType: SceneObjectRegistry.GetByName
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByName
- uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByName(System.String)
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByName(System.String)
  parent: VRBuilder.Core.SceneObjects.ISceneObjectRegistry
  isExternal: true
  name: GetByName(String)
  nameWithType: ISceneObjectRegistry.GetByName(String)
  fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByName(System.String)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByName(System.String)
    name: GetByName
    nameWithType: ISceneObjectRegistry.GetByName
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByName(System.String)
    name: GetByName
    nameWithType: ISceneObjectRegistry.GetByName
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.ContainsGuid*
  commentId: Overload:VRBuilder.Core.SceneObjects.SceneObjectRegistry.ContainsGuid
  name: ContainsGuid
  nameWithType: SceneObjectRegistry.ContainsGuid
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.ContainsGuid
- uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.ContainsGuid(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObjectRegistry.ContainsGuid(System.Guid)
  parent: VRBuilder.Core.SceneObjects.ISceneObjectRegistry
  isExternal: true
  name: ContainsGuid(Guid)
  nameWithType: ISceneObjectRegistry.ContainsGuid(Guid)
  fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.ContainsGuid(System.Guid)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.ContainsGuid(System.Guid)
    name: ContainsGuid
    nameWithType: ISceneObjectRegistry.ContainsGuid
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.ContainsGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.ContainsGuid(System.Guid)
    name: ContainsGuid
    nameWithType: ISceneObjectRegistry.ContainsGuid
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.ContainsGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByGuid*
  commentId: Overload:VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByGuid
  name: GetByGuid
  nameWithType: SceneObjectRegistry.GetByGuid
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByGuid
- uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByGuid(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByGuid(System.Guid)
  parent: VRBuilder.Core.SceneObjects.ISceneObjectRegistry
  isExternal: true
  name: GetByGuid(Guid)
  nameWithType: ISceneObjectRegistry.GetByGuid(Guid)
  fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByGuid(System.Guid)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByGuid(System.Guid)
    name: GetByGuid
    nameWithType: ISceneObjectRegistry.GetByGuid
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByGuid(System.Guid)
    name: GetByGuid
    nameWithType: ISceneObjectRegistry.GetByGuid
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetObjects*
  commentId: Overload:VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetObjects
  name: GetObjects
  nameWithType: SceneObjectRegistry.GetObjects
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetObjects
- uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetObjects(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetObjects(System.Guid)
  parent: VRBuilder.Core.SceneObjects.ISceneObjectRegistry
  isExternal: true
  name: GetObjects(Guid)
  nameWithType: ISceneObjectRegistry.GetObjects(Guid)
  fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetObjects(System.Guid)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetObjects(System.Guid)
    name: GetObjects
    nameWithType: ISceneObjectRegistry.GetObjects
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetObjects
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetObjects(System.Guid)
    name: GetObjects
    nameWithType: ISceneObjectRegistry.GetObjects
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetObjects
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VRBuilder.Core.SceneObjects.ISceneObject}
  commentId: T:System.Collections.Generic.IEnumerable{VRBuilder.Core.SceneObjects.ISceneObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ISceneObject>
  nameWithType: IEnumerable<ISceneObject>
  fullName: System.Collections.Generic.IEnumerable<VRBuilder.Core.SceneObjects.ISceneObject>
  nameWithType.vb: IEnumerable(Of ISceneObject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VRBuilder.Core.SceneObjects.ISceneObject)
  name.vb: IEnumerable(Of ISceneObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetProperties*
  commentId: Overload:VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetProperties
  name: GetProperties
  nameWithType: SceneObjectRegistry.GetProperties
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetProperties
- uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetProperties``1(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetProperties``1(System.Guid)
  parent: VRBuilder.Core.SceneObjects.ISceneObjectRegistry
  isExternal: true
  name: GetProperties<T>(Guid)
  nameWithType: ISceneObjectRegistry.GetProperties<T>(Guid)
  fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetProperties<T>(System.Guid)
  nameWithType.vb: ISceneObjectRegistry.GetProperties(Of T)(Guid)
  fullName.vb: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetProperties(Of T)(System.Guid)
  name.vb: GetProperties(Of T)(Guid)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetProperties``1(System.Guid)
    name: GetProperties<T>
    nameWithType: ISceneObjectRegistry.GetProperties<T>
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetProperties<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetProperties``1(System.Guid)
    name: GetProperties(Of T)
    nameWithType: ISceneObjectRegistry.GetProperties(Of T)
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetProperties(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByTag*
  commentId: Overload:VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByTag
  name: GetByTag
  nameWithType: SceneObjectRegistry.GetByTag
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetByTag
- uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByTag(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByTag(System.Guid)
  parent: VRBuilder.Core.SceneObjects.ISceneObjectRegistry
  isExternal: true
  name: GetByTag(Guid)
  nameWithType: ISceneObjectRegistry.GetByTag(Guid)
  fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByTag(System.Guid)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByTag(System.Guid)
    name: GetByTag
    nameWithType: ISceneObjectRegistry.GetByTag
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByTag
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByTag(System.Guid)
    name: GetByTag
    nameWithType: ISceneObjectRegistry.GetByTag
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetByTag
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetPropertyByTag*
  commentId: Overload:VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetPropertyByTag
  name: GetPropertyByTag
  nameWithType: SceneObjectRegistry.GetPropertyByTag
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.GetPropertyByTag
- uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetPropertyByTag``1(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetPropertyByTag``1(System.Guid)
  parent: VRBuilder.Core.SceneObjects.ISceneObjectRegistry
  isExternal: true
  name: GetPropertyByTag<T>(Guid)
  nameWithType: ISceneObjectRegistry.GetPropertyByTag<T>(Guid)
  fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetPropertyByTag<T>(System.Guid)
  nameWithType.vb: ISceneObjectRegistry.GetPropertyByTag(Of T)(Guid)
  fullName.vb: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetPropertyByTag(Of T)(System.Guid)
  name.vb: GetPropertyByTag(Of T)(Guid)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetPropertyByTag``1(System.Guid)
    name: GetPropertyByTag<T>
    nameWithType: ISceneObjectRegistry.GetPropertyByTag<T>
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetPropertyByTag<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetPropertyByTag``1(System.Guid)
    name: GetPropertyByTag(Of T)
    nameWithType: ISceneObjectRegistry.GetPropertyByTag(Of T)
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.GetPropertyByTag(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Refresh*
  commentId: Overload:VRBuilder.Core.SceneObjects.SceneObjectRegistry.Refresh
  name: Refresh
  nameWithType: SceneObjectRegistry.Refresh
  fullName: VRBuilder.Core.SceneObjects.SceneObjectRegistry.Refresh
- uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Refresh
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Refresh
  parent: VRBuilder.Core.SceneObjects.ISceneObjectRegistry
  name: Refresh()
  nameWithType: ISceneObjectRegistry.Refresh()
  fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Refresh()
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Refresh
    name: Refresh
    nameWithType: ISceneObjectRegistry.Refresh
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Refresh
    name: Refresh
    nameWithType: ISceneObjectRegistry.Refresh
    fullName: VRBuilder.Core.SceneObjects.ISceneObjectRegistry.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
