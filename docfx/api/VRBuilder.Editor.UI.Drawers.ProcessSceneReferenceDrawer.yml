### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer
  commentId: T:VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer
  id: ProcessSceneReferenceDrawer
  parent: VRBuilder.Editor.UI.Drawers
  children:
  - VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddFixItAllButton(System.Collections.Generic.IEnumerable{UnityEngine.GameObject},System.Type,UnityEngine.Rect@,UnityEngine.Rect@)
  - VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddFixItButton(UnityEngine.GameObject,System.Type,UnityEngine.Rect@,UnityEngine.Rect@)
  - VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddNewRectLine(UnityEngine.Rect@,System.Single)
  - VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.CreateProcessSceneObject(UnityEngine.GameObject)
  - VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.Draw(UnityEngine.Rect,System.Object,System.Action{System.Object},UnityEngine.GUIContent)
  - VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.DropAreaGUI(UnityEngine.Rect@,UnityEngine.Rect@,VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase,System.Action{UnityEngine.GameObject,UnityEngine.Rect},System.Action{System.Object},UnityEngine.GUIContent)
  - VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.dropBoxStyle
  - VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.isExpanded
  - VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.isUndoOperation
  - VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.richTextLabelStyle
  - VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.SceneObjectAutomaticSetup(UnityEngine.GameObject,System.Type)
  langs:
  - csharp
  - vb
  name: ProcessSceneReferenceDrawer
  nameWithType: ProcessSceneReferenceDrawer
  fullName: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer
  type: Class
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessSceneReferenceDrawer
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
    startLine: 20
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  summary: "\nDrawer for <xref href=\"VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: >-
      [DefaultProcessDrawer(typeof(ProcessSceneReferenceBase))]

      public class ProcessSceneReferenceDrawer : AbstractDrawer, IProcessDrawer
    content.vb: >-
      <DefaultProcessDrawer(GetType(ProcessSceneReferenceBase))>

      Public Class ProcessSceneReferenceDrawer

          Inherits AbstractDrawer

          Implements IProcessDrawer
  inheritance:
  - System.Object
  - VRBuilder.Editor.UI.Drawers.AbstractDrawer
  implements:
  - VRBuilder.Editor.UI.Drawers.IProcessDrawer
  inheritedMembers:
  - VRBuilder.Editor.UI.Drawers.AbstractDrawer.Draw(UnityEngine.Rect,System.Object,System.Action{System.Object},System.String)
  - VRBuilder.Editor.UI.Drawers.AbstractDrawer.GetLabel(System.Reflection.MemberInfo,System.Object)
  - VRBuilder.Editor.UI.Drawers.AbstractDrawer.GetLabel(System.Object,System.Type)
  - VRBuilder.Editor.UI.Drawers.AbstractDrawer.ChangeValue(System.Func{System.Object},System.Func{System.Object},System.Action{System.Object})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: VRBuilder.Editor.UI.Drawers.DefaultProcessDrawerAttribute
    ctor: VRBuilder.Editor.UI.Drawers.DefaultProcessDrawerAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.isUndoOperation
  commentId: F:VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.isUndoOperation
  id: isUndoOperation
  parent: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer
  langs:
  - csharp
  - vb
  name: isUndoOperation
  nameWithType: ProcessSceneReferenceDrawer.isUndoOperation
  fullName: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.isUndoOperation
  type: Field
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: isUndoOperation
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
    startLine: 23
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  syntax:
    content: protected bool isUndoOperation
    return:
      type: System.Boolean
    content.vb: Protected isUndoOperation As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.isExpanded
  commentId: F:VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.isExpanded
  id: isExpanded
  parent: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer
  langs:
  - csharp
  - vb
  name: isExpanded
  nameWithType: ProcessSceneReferenceDrawer.isExpanded
  fullName: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.isExpanded
  type: Field
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: isExpanded
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
    startLine: 24
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  syntax:
    content: protected bool isExpanded
    return:
      type: System.Boolean
    content.vb: Protected isExpanded As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.richTextLabelStyle
  commentId: F:VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.richTextLabelStyle
  id: richTextLabelStyle
  parent: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer
  langs:
  - csharp
  - vb
  name: richTextLabelStyle
  nameWithType: ProcessSceneReferenceDrawer.richTextLabelStyle
  fullName: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.richTextLabelStyle
  type: Field
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: richTextLabelStyle
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
    startLine: 31
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  syntax:
    content: protected GUIStyle richTextLabelStyle
    return:
      type: UnityEngine.GUIStyle
    content.vb: Protected richTextLabelStyle As GUIStyle
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.dropBoxStyle
  commentId: F:VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.dropBoxStyle
  id: dropBoxStyle
  parent: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer
  langs:
  - csharp
  - vb
  name: dropBoxStyle
  nameWithType: ProcessSceneReferenceDrawer.dropBoxStyle
  fullName: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.dropBoxStyle
  type: Field
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: dropBoxStyle
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
    startLine: 32
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  syntax:
    content: protected GUIStyle dropBoxStyle
    return:
      type: UnityEngine.GUIStyle
    content.vb: Protected dropBoxStyle As GUIStyle
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.Draw(UnityEngine.Rect,System.Object,System.Action{System.Object},UnityEngine.GUIContent)
  commentId: M:VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.Draw(UnityEngine.Rect,System.Object,System.Action{System.Object},UnityEngine.GUIContent)
  id: Draw(UnityEngine.Rect,System.Object,System.Action{System.Object},UnityEngine.GUIContent)
  parent: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer
  langs:
  - csharp
  - vb
  name: Draw(Rect, Object, Action<Object>, GUIContent)
  nameWithType: ProcessSceneReferenceDrawer.Draw(Rect, Object, Action<Object>, GUIContent)
  fullName: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.Draw(UnityEngine.Rect, System.Object, System.Action<System.Object>, UnityEngine.GUIContent)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Draw
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
    startLine: 34
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  syntax:
    content: public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label)
    parameters:
    - id: rect
      type: UnityEngine.Rect
    - id: currentValue
      type: System.Object
    - id: changeValueCallback
      type: System.Action{System.Object}
    - id: label
      type: UnityEngine.GUIContent
    return:
      type: UnityEngine.Rect
    content.vb: Public Overrides Function Draw(rect As Rect, currentValue As Object, changeValueCallback As Action(Of Object), label As GUIContent) As Rect
  overridden: VRBuilder.Editor.UI.Drawers.AbstractDrawer.Draw(UnityEngine.Rect,System.Object,System.Action{System.Object},UnityEngine.GUIContent)
  overload: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.Draw*
  nameWithType.vb: ProcessSceneReferenceDrawer.Draw(Rect, Object, Action(Of Object), GUIContent)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.Draw(UnityEngine.Rect, System.Object, System.Action(Of System.Object), UnityEngine.GUIContent)
  name.vb: Draw(Rect, Object, Action(Of Object), GUIContent)
- uid: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.DropAreaGUI(UnityEngine.Rect@,UnityEngine.Rect@,VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase,System.Action{UnityEngine.GameObject,UnityEngine.Rect},System.Action{System.Object},UnityEngine.GUIContent)
  commentId: M:VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.DropAreaGUI(UnityEngine.Rect@,UnityEngine.Rect@,VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase,System.Action{UnityEngine.GameObject,UnityEngine.Rect},System.Action{System.Object},UnityEngine.GUIContent)
  id: DropAreaGUI(UnityEngine.Rect@,UnityEngine.Rect@,VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase,System.Action{UnityEngine.GameObject,UnityEngine.Rect},System.Action{System.Object},UnityEngine.GUIContent)
  parent: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer
  langs:
  - csharp
  - vb
  name: DropAreaGUI(ref Rect, ref Rect, ProcessSceneReferenceBase, Action<GameObject, Rect>, Action<Object>, GUIContent)
  nameWithType: ProcessSceneReferenceDrawer.DropAreaGUI(ref Rect, ref Rect, ProcessSceneReferenceBase, Action<GameObject, Rect>, Action<Object>, GUIContent)
  fullName: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.DropAreaGUI(ref UnityEngine.Rect, ref UnityEngine.Rect, VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase, System.Action<UnityEngine.GameObject, UnityEngine.Rect>, System.Action<System.Object>, UnityEngine.GUIContent)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DropAreaGUI
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
    startLine: 217
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  summary: "\nRenders a drop area GUI for assigning groups to the behavior or condition.\n"
  example: []
  syntax:
    content: protected void DropAreaGUI(ref Rect originalRect, ref Rect guiLineRect, ProcessSceneReferenceBase reference, Action<GameObject, Rect> dropAction, Action<object> changeValueCallback, GUIContent label)
    parameters:
    - id: originalRect
      type: UnityEngine.Rect
      description: The rect of the whole behavior or condition.
    - id: guiLineRect
      type: UnityEngine.Rect
      description: The rect of the last drawn line.
    - id: reference
      type: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
    - id: dropAction
      type: System.Action{UnityEngine.GameObject,UnityEngine.Rect}
      description: The action to perform when a game object is dropped.
    - id: changeValueCallback
      type: System.Action{System.Object}
    - id: label
      type: UnityEngine.GUIContent
    content.vb: Protected Sub DropAreaGUI(ByRef originalRect As Rect, ByRef guiLineRect As Rect, reference As ProcessSceneReferenceBase, dropAction As Action(Of GameObject, Rect), changeValueCallback As Action(Of Object), label As GUIContent)
  overload: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.DropAreaGUI*
  nameWithType.vb: ProcessSceneReferenceDrawer.DropAreaGUI(ByRef Rect, ByRef Rect, ProcessSceneReferenceBase, Action(Of GameObject, Rect), Action(Of Object), GUIContent)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.DropAreaGUI(ByRef UnityEngine.Rect, ByRef UnityEngine.Rect, VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase, System.Action(Of UnityEngine.GameObject, UnityEngine.Rect), System.Action(Of System.Object), UnityEngine.GUIContent)
  name.vb: DropAreaGUI(ByRef Rect, ByRef Rect, ProcessSceneReferenceBase, Action(Of GameObject, Rect), Action(Of Object), GUIContent)
- uid: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.CreateProcessSceneObject(UnityEngine.GameObject)
  commentId: M:VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.CreateProcessSceneObject(UnityEngine.GameObject)
  id: CreateProcessSceneObject(UnityEngine.GameObject)
  parent: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer
  langs:
  - csharp
  - vb
  name: CreateProcessSceneObject(GameObject)
  nameWithType: ProcessSceneReferenceDrawer.CreateProcessSceneObject(GameObject)
  fullName: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.CreateProcessSceneObject(UnityEngine.GameObject)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CreateProcessSceneObject
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
    startLine: 367
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  syntax:
    content: protected Guid CreateProcessSceneObject(GameObject selectedSceneObject)
    parameters:
    - id: selectedSceneObject
      type: UnityEngine.GameObject
    return:
      type: System.Guid
    content.vb: Protected Function CreateProcessSceneObject(selectedSceneObject As GameObject) As Guid
  overload: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.CreateProcessSceneObject*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddFixItAllButton(System.Collections.Generic.IEnumerable{UnityEngine.GameObject},System.Type,UnityEngine.Rect@,UnityEngine.Rect@)
  commentId: M:VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddFixItAllButton(System.Collections.Generic.IEnumerable{UnityEngine.GameObject},System.Type,UnityEngine.Rect@,UnityEngine.Rect@)
  id: AddFixItAllButton(System.Collections.Generic.IEnumerable{UnityEngine.GameObject},System.Type,UnityEngine.Rect@,UnityEngine.Rect@)
  parent: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer
  langs:
  - csharp
  - vb
  name: AddFixItAllButton(IEnumerable<GameObject>, Type, ref Rect, ref Rect)
  nameWithType: ProcessSceneReferenceDrawer.AddFixItAllButton(IEnumerable<GameObject>, Type, ref Rect, ref Rect)
  fullName: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddFixItAllButton(System.Collections.Generic.IEnumerable<UnityEngine.GameObject>, System.Type, ref UnityEngine.Rect, ref UnityEngine.Rect)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AddFixItAllButton
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
    startLine: 395
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  syntax:
    content: protected void AddFixItAllButton(IEnumerable<GameObject> selectedSceneObject, Type valueType, ref Rect originalRect, ref Rect guiLineRect)
    parameters:
    - id: selectedSceneObject
      type: System.Collections.Generic.IEnumerable{UnityEngine.GameObject}
    - id: valueType
      type: System.Type
    - id: originalRect
      type: UnityEngine.Rect
    - id: guiLineRect
      type: UnityEngine.Rect
    content.vb: Protected Sub AddFixItAllButton(selectedSceneObject As IEnumerable(Of GameObject), valueType As Type, ByRef originalRect As Rect, ByRef guiLineRect As Rect)
  overload: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddFixItAllButton*
  nameWithType.vb: ProcessSceneReferenceDrawer.AddFixItAllButton(IEnumerable(Of GameObject), Type, ByRef Rect, ByRef Rect)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddFixItAllButton(System.Collections.Generic.IEnumerable(Of UnityEngine.GameObject), System.Type, ByRef UnityEngine.Rect, ByRef UnityEngine.Rect)
  name.vb: AddFixItAllButton(IEnumerable(Of GameObject), Type, ByRef Rect, ByRef Rect)
- uid: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddFixItButton(UnityEngine.GameObject,System.Type,UnityEngine.Rect@,UnityEngine.Rect@)
  commentId: M:VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddFixItButton(UnityEngine.GameObject,System.Type,UnityEngine.Rect@,UnityEngine.Rect@)
  id: AddFixItButton(UnityEngine.GameObject,System.Type,UnityEngine.Rect@,UnityEngine.Rect@)
  parent: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer
  langs:
  - csharp
  - vb
  name: AddFixItButton(GameObject, Type, ref Rect, ref Rect)
  nameWithType: ProcessSceneReferenceDrawer.AddFixItButton(GameObject, Type, ref Rect, ref Rect)
  fullName: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddFixItButton(UnityEngine.GameObject, System.Type, ref UnityEngine.Rect, ref UnityEngine.Rect)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AddFixItButton
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
    startLine: 418
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  syntax:
    content: protected void AddFixItButton(GameObject selectedSceneObject, Type valueType, ref Rect originalRect, ref Rect guiLineRect)
    parameters:
    - id: selectedSceneObject
      type: UnityEngine.GameObject
    - id: valueType
      type: System.Type
    - id: originalRect
      type: UnityEngine.Rect
    - id: guiLineRect
      type: UnityEngine.Rect
    content.vb: Protected Sub AddFixItButton(selectedSceneObject As GameObject, valueType As Type, ByRef originalRect As Rect, ByRef guiLineRect As Rect)
  overload: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddFixItButton*
  nameWithType.vb: ProcessSceneReferenceDrawer.AddFixItButton(GameObject, Type, ByRef Rect, ByRef Rect)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddFixItButton(UnityEngine.GameObject, System.Type, ByRef UnityEngine.Rect, ByRef UnityEngine.Rect)
  name.vb: AddFixItButton(GameObject, Type, ByRef Rect, ByRef Rect)
- uid: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddNewRectLine(UnityEngine.Rect@,System.Single)
  commentId: M:VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddNewRectLine(UnityEngine.Rect@,System.Single)
  id: AddNewRectLine(UnityEngine.Rect@,System.Single)
  parent: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer
  langs:
  - csharp
  - vb
  name: AddNewRectLine(ref Rect, Single)
  nameWithType: ProcessSceneReferenceDrawer.AddNewRectLine(ref Rect, Single)
  fullName: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddNewRectLine(ref UnityEngine.Rect, System.Single)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AddNewRectLine
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
    startLine: 440
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  syntax:
    content: protected Rect AddNewRectLine(ref Rect currentRect, float height = -3.40282347E+38F)
    parameters:
    - id: currentRect
      type: UnityEngine.Rect
    - id: height
      type: System.Single
    return:
      type: UnityEngine.Rect
    content.vb: Protected Function AddNewRectLine(ByRef currentRect As Rect, height As Single = -3.40282347E+38F) As Rect
  overload: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddNewRectLine*
  nameWithType.vb: ProcessSceneReferenceDrawer.AddNewRectLine(ByRef Rect, Single)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddNewRectLine(ByRef UnityEngine.Rect, System.Single)
  name.vb: AddNewRectLine(ByRef Rect, Single)
- uid: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.SceneObjectAutomaticSetup(UnityEngine.GameObject,System.Type)
  commentId: M:VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.SceneObjectAutomaticSetup(UnityEngine.GameObject,System.Type)
  id: SceneObjectAutomaticSetup(UnityEngine.GameObject,System.Type)
  parent: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer
  langs:
  - csharp
  - vb
  name: SceneObjectAutomaticSetup(GameObject, Type)
  nameWithType: ProcessSceneReferenceDrawer.SceneObjectAutomaticSetup(GameObject, Type)
  fullName: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.SceneObjectAutomaticSetup(UnityEngine.GameObject, System.Type)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SceneObjectAutomaticSetup
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/ProcessSceneReferenceDrawer.cs
    startLine: 451
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  syntax:
    content: protected void SceneObjectAutomaticSetup(GameObject selectedSceneObject, Type valueType)
    parameters:
    - id: selectedSceneObject
      type: UnityEngine.GameObject
    - id: valueType
      type: System.Type
    content.vb: Protected Sub SceneObjectAutomaticSetup(selectedSceneObject As GameObject, valueType As Type)
  overload: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.SceneObjectAutomaticSetup*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  commentId: T:VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
  parent: VRBuilder.Core.SceneObjects
  name: ProcessSceneReferenceBase
  nameWithType: ProcessSceneReferenceBase
  fullName: VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase
- uid: VRBuilder.Editor.UI.Drawers
  commentId: N:VRBuilder.Editor.UI.Drawers
  name: VRBuilder.Editor.UI.Drawers
  nameWithType: VRBuilder.Editor.UI.Drawers
  fullName: VRBuilder.Editor.UI.Drawers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Editor.UI.Drawers.AbstractDrawer
  commentId: T:VRBuilder.Editor.UI.Drawers.AbstractDrawer
  parent: VRBuilder.Editor.UI.Drawers
  name: AbstractDrawer
  nameWithType: AbstractDrawer
  fullName: VRBuilder.Editor.UI.Drawers.AbstractDrawer
- uid: VRBuilder.Editor.UI.Drawers.IProcessDrawer
  commentId: T:VRBuilder.Editor.UI.Drawers.IProcessDrawer
  parent: VRBuilder.Editor.UI.Drawers
  name: IProcessDrawer
  nameWithType: IProcessDrawer
  fullName: VRBuilder.Editor.UI.Drawers.IProcessDrawer
- uid: VRBuilder.Editor.UI.Drawers.AbstractDrawer.Draw(UnityEngine.Rect,System.Object,System.Action{System.Object},System.String)
  commentId: M:VRBuilder.Editor.UI.Drawers.AbstractDrawer.Draw(UnityEngine.Rect,System.Object,System.Action{System.Object},System.String)
  parent: VRBuilder.Editor.UI.Drawers.AbstractDrawer
  isExternal: true
  name: Draw(Rect, Object, Action<Object>, String)
  nameWithType: AbstractDrawer.Draw(Rect, Object, Action<Object>, String)
  fullName: VRBuilder.Editor.UI.Drawers.AbstractDrawer.Draw(UnityEngine.Rect, System.Object, System.Action<System.Object>, System.String)
  nameWithType.vb: AbstractDrawer.Draw(Rect, Object, Action(Of Object), String)
  fullName.vb: VRBuilder.Editor.UI.Drawers.AbstractDrawer.Draw(UnityEngine.Rect, System.Object, System.Action(Of System.Object), System.String)
  name.vb: Draw(Rect, Object, Action(Of Object), String)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Drawers.AbstractDrawer.Draw(UnityEngine.Rect,System.Object,System.Action{System.Object},System.String)
    name: Draw
    nameWithType: AbstractDrawer.Draw
    fullName: VRBuilder.Editor.UI.Drawers.AbstractDrawer.Draw
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rect
    name: Rect
    nameWithType: Rect
    fullName: UnityEngine.Rect
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Drawers.AbstractDrawer.Draw(UnityEngine.Rect,System.Object,System.Action{System.Object},System.String)
    name: Draw
    nameWithType: AbstractDrawer.Draw
    fullName: VRBuilder.Editor.UI.Drawers.AbstractDrawer.Draw
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rect
    name: Rect
    nameWithType: Rect
    fullName: UnityEngine.Rect
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Drawers.AbstractDrawer.GetLabel(System.Reflection.MemberInfo,System.Object)
  commentId: M:VRBuilder.Editor.UI.Drawers.AbstractDrawer.GetLabel(System.Reflection.MemberInfo,System.Object)
  parent: VRBuilder.Editor.UI.Drawers.AbstractDrawer
  isExternal: true
  name: GetLabel(MemberInfo, Object)
  nameWithType: AbstractDrawer.GetLabel(MemberInfo, Object)
  fullName: VRBuilder.Editor.UI.Drawers.AbstractDrawer.GetLabel(System.Reflection.MemberInfo, System.Object)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Drawers.AbstractDrawer.GetLabel(System.Reflection.MemberInfo,System.Object)
    name: GetLabel
    nameWithType: AbstractDrawer.GetLabel
    fullName: VRBuilder.Editor.UI.Drawers.AbstractDrawer.GetLabel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Drawers.AbstractDrawer.GetLabel(System.Reflection.MemberInfo,System.Object)
    name: GetLabel
    nameWithType: AbstractDrawer.GetLabel
    fullName: VRBuilder.Editor.UI.Drawers.AbstractDrawer.GetLabel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: System.Reflection.MemberInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Drawers.AbstractDrawer.GetLabel(System.Object,System.Type)
  commentId: M:VRBuilder.Editor.UI.Drawers.AbstractDrawer.GetLabel(System.Object,System.Type)
  parent: VRBuilder.Editor.UI.Drawers.AbstractDrawer
  isExternal: true
  name: GetLabel(Object, Type)
  nameWithType: AbstractDrawer.GetLabel(Object, Type)
  fullName: VRBuilder.Editor.UI.Drawers.AbstractDrawer.GetLabel(System.Object, System.Type)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Drawers.AbstractDrawer.GetLabel(System.Object,System.Type)
    name: GetLabel
    nameWithType: AbstractDrawer.GetLabel
    fullName: VRBuilder.Editor.UI.Drawers.AbstractDrawer.GetLabel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Drawers.AbstractDrawer.GetLabel(System.Object,System.Type)
    name: GetLabel
    nameWithType: AbstractDrawer.GetLabel
    fullName: VRBuilder.Editor.UI.Drawers.AbstractDrawer.GetLabel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Drawers.AbstractDrawer.ChangeValue(System.Func{System.Object},System.Func{System.Object},System.Action{System.Object})
  commentId: M:VRBuilder.Editor.UI.Drawers.AbstractDrawer.ChangeValue(System.Func{System.Object},System.Func{System.Object},System.Action{System.Object})
  parent: VRBuilder.Editor.UI.Drawers.AbstractDrawer
  isExternal: true
  name: ChangeValue(Func<Object>, Func<Object>, Action<Object>)
  nameWithType: AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>)
  fullName: VRBuilder.Editor.UI.Drawers.AbstractDrawer.ChangeValue(System.Func<System.Object>, System.Func<System.Object>, System.Action<System.Object>)
  nameWithType.vb: AbstractDrawer.ChangeValue(Func(Of Object), Func(Of Object), Action(Of Object))
  fullName.vb: VRBuilder.Editor.UI.Drawers.AbstractDrawer.ChangeValue(System.Func(Of System.Object), System.Func(Of System.Object), System.Action(Of System.Object))
  name.vb: ChangeValue(Func(Of Object), Func(Of Object), Action(Of Object))
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Drawers.AbstractDrawer.ChangeValue(System.Func{System.Object},System.Func{System.Object},System.Action{System.Object})
    name: ChangeValue
    nameWithType: AbstractDrawer.ChangeValue
    fullName: VRBuilder.Editor.UI.Drawers.AbstractDrawer.ChangeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Drawers.AbstractDrawer.ChangeValue(System.Func{System.Object},System.Func{System.Object},System.Action{System.Object})
    name: ChangeValue
    nameWithType: AbstractDrawer.ChangeValue
    fullName: VRBuilder.Editor.UI.Drawers.AbstractDrawer.ChangeValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: UnityEngine.GUIStyle
  commentId: T:UnityEngine.GUIStyle
  parent: UnityEngine
  isExternal: true
  name: GUIStyle
  nameWithType: GUIStyle
  fullName: UnityEngine.GUIStyle
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: VRBuilder.Editor.UI.Drawers.AbstractDrawer.Draw(UnityEngine.Rect,System.Object,System.Action{System.Object},UnityEngine.GUIContent)
  commentId: M:VRBuilder.Editor.UI.Drawers.AbstractDrawer.Draw(UnityEngine.Rect,System.Object,System.Action{System.Object},UnityEngine.GUIContent)
  parent: VRBuilder.Editor.UI.Drawers.AbstractDrawer
  isExternal: true
  name: Draw(Rect, Object, Action<Object>, GUIContent)
  nameWithType: AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent)
  fullName: VRBuilder.Editor.UI.Drawers.AbstractDrawer.Draw(UnityEngine.Rect, System.Object, System.Action<System.Object>, UnityEngine.GUIContent)
  nameWithType.vb: AbstractDrawer.Draw(Rect, Object, Action(Of Object), GUIContent)
  fullName.vb: VRBuilder.Editor.UI.Drawers.AbstractDrawer.Draw(UnityEngine.Rect, System.Object, System.Action(Of System.Object), UnityEngine.GUIContent)
  name.vb: Draw(Rect, Object, Action(Of Object), GUIContent)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Drawers.AbstractDrawer.Draw(UnityEngine.Rect,System.Object,System.Action{System.Object},UnityEngine.GUIContent)
    name: Draw
    nameWithType: AbstractDrawer.Draw
    fullName: VRBuilder.Editor.UI.Drawers.AbstractDrawer.Draw
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rect
    name: Rect
    nameWithType: Rect
    fullName: UnityEngine.Rect
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.GUIContent
    name: GUIContent
    nameWithType: GUIContent
    fullName: UnityEngine.GUIContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Drawers.AbstractDrawer.Draw(UnityEngine.Rect,System.Object,System.Action{System.Object},UnityEngine.GUIContent)
    name: Draw
    nameWithType: AbstractDrawer.Draw
    fullName: VRBuilder.Editor.UI.Drawers.AbstractDrawer.Draw
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Rect
    name: Rect
    nameWithType: Rect
    fullName: UnityEngine.Rect
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.GUIContent
    name: GUIContent
    nameWithType: GUIContent
    fullName: UnityEngine.GUIContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.Draw*
  commentId: Overload:VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.Draw
  name: Draw
  nameWithType: ProcessSceneReferenceDrawer.Draw
  fullName: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.Draw
- uid: UnityEngine.Rect
  commentId: T:UnityEngine.Rect
  parent: UnityEngine
  isExternal: true
  name: Rect
  nameWithType: Rect
  fullName: UnityEngine.Rect
- uid: System.Action{System.Object}
  commentId: T:System.Action{System.Object}
  parent: System
  definition: System.Action`1
  name: Action<Object>
  nameWithType: Action<Object>
  fullName: System.Action<System.Object>
  nameWithType.vb: Action(Of Object)
  fullName.vb: System.Action(Of System.Object)
  name.vb: Action(Of Object)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.GUIContent
  commentId: T:UnityEngine.GUIContent
  parent: UnityEngine
  isExternal: true
  name: GUIContent
  nameWithType: GUIContent
  fullName: UnityEngine.GUIContent
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.DropAreaGUI*
  commentId: Overload:VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.DropAreaGUI
  name: DropAreaGUI
  nameWithType: ProcessSceneReferenceDrawer.DropAreaGUI
  fullName: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.DropAreaGUI
- uid: System.Action{UnityEngine.GameObject,UnityEngine.Rect}
  commentId: T:System.Action{UnityEngine.GameObject,UnityEngine.Rect}
  parent: System
  definition: System.Action`2
  name: Action<GameObject, Rect>
  nameWithType: Action<GameObject, Rect>
  fullName: System.Action<UnityEngine.GameObject, UnityEngine.Rect>
  nameWithType.vb: Action(Of GameObject, Rect)
  fullName.vb: System.Action(Of UnityEngine.GameObject, UnityEngine.Rect)
  name.vb: Action(Of GameObject, Rect)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Rect
    name: Rect
    nameWithType: Rect
    fullName: UnityEngine.Rect
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Rect
    name: Rect
    nameWithType: Rect
    fullName: UnityEngine.Rect
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.CreateProcessSceneObject*
  commentId: Overload:VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.CreateProcessSceneObject
  name: CreateProcessSceneObject
  nameWithType: ProcessSceneReferenceDrawer.CreateProcessSceneObject
  fullName: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.CreateProcessSceneObject
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddFixItAllButton*
  commentId: Overload:VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddFixItAllButton
  name: AddFixItAllButton
  nameWithType: ProcessSceneReferenceDrawer.AddFixItAllButton
  fullName: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddFixItAllButton
- uid: System.Collections.Generic.IEnumerable{UnityEngine.GameObject}
  commentId: T:System.Collections.Generic.IEnumerable{UnityEngine.GameObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<GameObject>
  nameWithType: IEnumerable<GameObject>
  fullName: System.Collections.Generic.IEnumerable<UnityEngine.GameObject>
  nameWithType.vb: IEnumerable(Of GameObject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of UnityEngine.GameObject)
  name.vb: IEnumerable(Of GameObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddFixItButton*
  commentId: Overload:VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddFixItButton
  name: AddFixItButton
  nameWithType: ProcessSceneReferenceDrawer.AddFixItButton
  fullName: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddFixItButton
- uid: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddNewRectLine*
  commentId: Overload:VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddNewRectLine
  name: AddNewRectLine
  nameWithType: ProcessSceneReferenceDrawer.AddNewRectLine
  fullName: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.AddNewRectLine
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.SceneObjectAutomaticSetup*
  commentId: Overload:VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.SceneObjectAutomaticSetup
  name: SceneObjectAutomaticSetup
  nameWithType: ProcessSceneReferenceDrawer.SceneObjectAutomaticSetup
  fullName: VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.SceneObjectAutomaticSetup
