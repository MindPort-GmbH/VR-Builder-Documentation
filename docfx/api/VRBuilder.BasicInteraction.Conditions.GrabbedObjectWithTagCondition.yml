### YamlMime:ManagedReference
items:
- uid: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition
  commentId: T:VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition
  id: GrabbedObjectWithTagCondition
  parent: VRBuilder.BasicInteraction.Conditions
  children:
  - VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.#ctor
  - VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.#ctor(System.Guid)
  - VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetActiveProcess
  - VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetAutocompleter
  - VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetLockableProperties
  langs:
  - csharp
  - vb
  name: GrabbedObjectWithTagCondition
  nameWithType: GrabbedObjectWithTagCondition
  fullName: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition
  type: Class
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Conditions/GrabbedObjectWithTagCondition.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GrabbedObjectWithTagCondition
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Conditions/GrabbedObjectWithTagCondition.cs
    startLine: 18
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Conditions
  summary: "\nCondition which is completed when a <xref href=\"VRBuilder.BasicInteraction.Properties.IGrabbableProperty\" data-throw-if-not-resolved=\"false\"></xref> with the given tag is grabbed.\n"
  example: []
  syntax:
    content: >-
      [DataContract(IsReference = true)]

      [Obsolete("Use GrabbedCondition instead.")]

      public class GrabbedObjectWithTagCondition : Condition<GrabbedObjectWithTagCondition.EntityData>, IDataOwner<GrabbedObjectWithTagCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider
    content.vb: >-
      <DataContract(IsReference:=True)>

      <Obsolete("Use GrabbedCondition instead.")>

      Public Class GrabbedObjectWithTagCondition

          Inherits Condition(Of GrabbedObjectWithTagCondition.EntityData)

          Implements IDataOwner(Of GrabbedObjectWithTagCondition.EntityData), ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner(Of IConditionData), IDataOwner, IClonable(Of ICondition), ILockablePropertiesProvider
  inheritance:
  - System.Object
  - VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  - VRBuilder.Core.CompletableEntity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  - VRBuilder.Core.Conditions.Condition{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  implements:
  - VRBuilder.Core.IDataOwner{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  - VRBuilder.Core.Conditions.ICondition
  - VRBuilder.Core.ICompletableEntity
  - VRBuilder.Core.ICompletable
  - VRBuilder.Core.IEntity
  - VRBuilder.Core.IDataOwner{VRBuilder.Core.Conditions.IConditionData}
  - VRBuilder.Core.IDataOwner
  - VRBuilder.Core.IClonable{VRBuilder.Core.Conditions.ICondition}
  - VRBuilder.Core.ILockablePropertiesProvider
  inheritedMembers:
  - VRBuilder.Core.Conditions.Condition{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.VRBuilder#Core#IDataOwner{VRBuilder#Core#Conditions#IConditionData}#Data
  - VRBuilder.Core.Conditions.Condition{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.Clone
  - VRBuilder.Core.CompletableEntity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.IsCompleted
  - VRBuilder.Core.CompletableEntity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.Autocomplete
  - VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.Data
  - VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.VRBuilder#Core#IDataOwner#Data
  - VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.LifeCycle
  - VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.Parent
  - VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.GetActivatingProcess
  - VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.GetDeactivatingProcess
  - VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.GetConfigurator
  - VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  - VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.Update
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use GrabbedCondition instead.
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.#ctor
  commentId: M:VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.#ctor
  id: '#ctor'
  parent: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition
  langs:
  - csharp
  - vb
  name: GrabbedObjectWithTagCondition()
  nameWithType: GrabbedObjectWithTagCondition.GrabbedObjectWithTagCondition()
  fullName: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GrabbedObjectWithTagCondition()
  type: Constructor
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Conditions/GrabbedObjectWithTagCondition.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Conditions/GrabbedObjectWithTagCondition.cs
    startLine: 78
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Conditions
  syntax:
    content: >-
      [JsonConstructor]

      [Preserve]

      public GrabbedObjectWithTagCondition()
    content.vb: >-
      <JsonConstructor>

      <Preserve>

      Public Sub New
  overload: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.#ctor*
  attributes:
  - type: Newtonsoft.Json.JsonConstructorAttribute
    ctor: Newtonsoft.Json.JsonConstructorAttribute.#ctor
    arguments: []
  - type: UnityEngine.Scripting.PreserveAttribute
    ctor: UnityEngine.Scripting.PreserveAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.#ctor(System.Guid)
  commentId: M:VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition
  langs:
  - csharp
  - vb
  name: GrabbedObjectWithTagCondition(Guid)
  nameWithType: GrabbedObjectWithTagCondition.GrabbedObjectWithTagCondition(Guid)
  fullName: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GrabbedObjectWithTagCondition(System.Guid)
  type: Constructor
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Conditions/GrabbedObjectWithTagCondition.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Conditions/GrabbedObjectWithTagCondition.cs
    startLine: 83
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Conditions
  syntax:
    content: public GrabbedObjectWithTagCondition(Guid guid)
    parameters:
    - id: guid
      type: System.Guid
    content.vb: Public Sub New(guid As Guid)
  overload: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetLockableProperties
  commentId: M:VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetLockableProperties
  id: GetLockableProperties
  parent: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition
  langs:
  - csharp
  - vb
  name: GetLockableProperties()
  nameWithType: GrabbedObjectWithTagCondition.GetLockableProperties()
  fullName: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetLockableProperties()
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Conditions/GrabbedObjectWithTagCondition.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetLockableProperties
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Conditions/GrabbedObjectWithTagCondition.cs
    startLine: 88
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Conditions
  syntax:
    content: public override IEnumerable<LockablePropertyData> GetLockableProperties()
    return:
      type: System.Collections.Generic.IEnumerable{VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData}
    content.vb: Public Overrides Function GetLockableProperties As IEnumerable(Of LockablePropertyData)
  overridden: VRBuilder.Core.Conditions.Condition{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.GetLockableProperties
  overload: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetLockableProperties*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetActiveProcess
  commentId: M:VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetActiveProcess
  id: GetActiveProcess
  parent: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition
  langs:
  - csharp
  - vb
  name: GetActiveProcess()
  nameWithType: GrabbedObjectWithTagCondition.GetActiveProcess()
  fullName: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetActiveProcess()
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Conditions/GrabbedObjectWithTagCondition.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetActiveProcess
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Conditions/GrabbedObjectWithTagCondition.cs
    startLine: 99
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Conditions
  syntax:
    content: public override IStageProcess GetActiveProcess()
    return:
      type: VRBuilder.Core.IStageProcess
    content.vb: Public Overrides Function GetActiveProcess As IStageProcess
  overridden: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.GetActiveProcess
  overload: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetActiveProcess*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetAutocompleter
  commentId: M:VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetAutocompleter
  id: GetAutocompleter
  parent: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition
  langs:
  - csharp
  - vb
  name: GetAutocompleter()
  nameWithType: GrabbedObjectWithTagCondition.GetAutocompleter()
  fullName: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetAutocompleter()
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Conditions/GrabbedObjectWithTagCondition.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetAutocompleter
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Conditions/GrabbedObjectWithTagCondition.cs
    startLine: 104
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Conditions
  syntax:
    content: protected override IAutocompleter GetAutocompleter()
    return:
      type: VRBuilder.Core.IAutocompleter
    content.vb: Protected Overrides Function GetAutocompleter As IAutocompleter
  overridden: VRBuilder.Core.CompletableEntity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.GetAutocompleter
  overload: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetAutocompleter*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: VRBuilder.BasicInteraction.Properties.IGrabbableProperty
  commentId: T:VRBuilder.BasicInteraction.Properties.IGrabbableProperty
  parent: VRBuilder.BasicInteraction.Properties
  name: IGrabbableProperty
  nameWithType: IGrabbableProperty
  fullName: VRBuilder.BasicInteraction.Properties.IGrabbableProperty
- uid: VRBuilder.BasicInteraction.Conditions
  commentId: N:VRBuilder.BasicInteraction.Conditions
  name: VRBuilder.BasicInteraction.Conditions
  nameWithType: VRBuilder.BasicInteraction.Conditions
  fullName: VRBuilder.BasicInteraction.Conditions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  commentId: T:VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.Entity`1
  name: Entity<GrabbedObjectWithTagCondition.EntityData>
  nameWithType: Entity<GrabbedObjectWithTagCondition.EntityData>
  fullName: VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>
  nameWithType.vb: Entity(Of GrabbedObjectWithTagCondition.EntityData)
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData)
  name.vb: Entity(Of GrabbedObjectWithTagCondition.EntityData)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: VRBuilder.Core.Entity
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData
    name: GrabbedObjectWithTagCondition.EntityData
    nameWithType: GrabbedObjectWithTagCondition.EntityData
    fullName: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: VRBuilder.Core.Entity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData
    name: GrabbedObjectWithTagCondition.EntityData
    nameWithType: GrabbedObjectWithTagCondition.EntityData
    fullName: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.CompletableEntity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  commentId: T:VRBuilder.Core.CompletableEntity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.CompletableEntity`1
  name: CompletableEntity<GrabbedObjectWithTagCondition.EntityData>
  nameWithType: CompletableEntity<GrabbedObjectWithTagCondition.EntityData>
  fullName: VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>
  nameWithType.vb: CompletableEntity(Of GrabbedObjectWithTagCondition.EntityData)
  fullName.vb: VRBuilder.Core.CompletableEntity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData)
  name.vb: CompletableEntity(Of GrabbedObjectWithTagCondition.EntityData)
  spec.csharp:
  - uid: VRBuilder.Core.CompletableEntity`1
    name: CompletableEntity
    nameWithType: CompletableEntity
    fullName: VRBuilder.Core.CompletableEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData
    name: GrabbedObjectWithTagCondition.EntityData
    nameWithType: GrabbedObjectWithTagCondition.EntityData
    fullName: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.CompletableEntity`1
    name: CompletableEntity
    nameWithType: CompletableEntity
    fullName: VRBuilder.Core.CompletableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData
    name: GrabbedObjectWithTagCondition.EntityData
    nameWithType: GrabbedObjectWithTagCondition.EntityData
    fullName: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Conditions.Condition{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  commentId: T:VRBuilder.Core.Conditions.Condition{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  parent: VRBuilder.Core.Conditions
  definition: VRBuilder.Core.Conditions.Condition`1
  name: Condition<GrabbedObjectWithTagCondition.EntityData>
  nameWithType: Condition<GrabbedObjectWithTagCondition.EntityData>
  fullName: VRBuilder.Core.Conditions.Condition<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>
  nameWithType.vb: Condition(Of GrabbedObjectWithTagCondition.EntityData)
  fullName.vb: VRBuilder.Core.Conditions.Condition(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData)
  name.vb: Condition(Of GrabbedObjectWithTagCondition.EntityData)
  spec.csharp:
  - uid: VRBuilder.Core.Conditions.Condition`1
    name: Condition
    nameWithType: Condition
    fullName: VRBuilder.Core.Conditions.Condition
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData
    name: GrabbedObjectWithTagCondition.EntityData
    nameWithType: GrabbedObjectWithTagCondition.EntityData
    fullName: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Conditions.Condition`1
    name: Condition
    nameWithType: Condition
    fullName: VRBuilder.Core.Conditions.Condition
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData
    name: GrabbedObjectWithTagCondition.EntityData
    nameWithType: GrabbedObjectWithTagCondition.EntityData
    fullName: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IDataOwner{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  commentId: T:VRBuilder.Core.IDataOwner{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IDataOwner`1
  name: IDataOwner<GrabbedObjectWithTagCondition.EntityData>
  nameWithType: IDataOwner<GrabbedObjectWithTagCondition.EntityData>
  fullName: VRBuilder.Core.IDataOwner<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>
  nameWithType.vb: IDataOwner(Of GrabbedObjectWithTagCondition.EntityData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData)
  name.vb: IDataOwner(Of GrabbedObjectWithTagCondition.EntityData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData
    name: GrabbedObjectWithTagCondition.EntityData
    nameWithType: GrabbedObjectWithTagCondition.EntityData
    fullName: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData
    name: GrabbedObjectWithTagCondition.EntityData
    nameWithType: GrabbedObjectWithTagCondition.EntityData
    fullName: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Conditions.ICondition
  commentId: T:VRBuilder.Core.Conditions.ICondition
  parent: VRBuilder.Core.Conditions
  name: ICondition
  nameWithType: ICondition
  fullName: VRBuilder.Core.Conditions.ICondition
- uid: VRBuilder.Core.ICompletableEntity
  commentId: T:VRBuilder.Core.ICompletableEntity
  parent: VRBuilder.Core
  name: ICompletableEntity
  nameWithType: ICompletableEntity
  fullName: VRBuilder.Core.ICompletableEntity
- uid: VRBuilder.Core.ICompletable
  commentId: T:VRBuilder.Core.ICompletable
  parent: VRBuilder.Core
  name: ICompletable
  nameWithType: ICompletable
  fullName: VRBuilder.Core.ICompletable
- uid: VRBuilder.Core.IEntity
  commentId: T:VRBuilder.Core.IEntity
  parent: VRBuilder.Core
  name: IEntity
  nameWithType: IEntity
  fullName: VRBuilder.Core.IEntity
- uid: VRBuilder.Core.IDataOwner{VRBuilder.Core.Conditions.IConditionData}
  commentId: T:VRBuilder.Core.IDataOwner{VRBuilder.Core.Conditions.IConditionData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IDataOwner`1
  name: IDataOwner<IConditionData>
  nameWithType: IDataOwner<IConditionData>
  fullName: VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.IConditionData>
  nameWithType.vb: IDataOwner(Of IConditionData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of VRBuilder.Core.Conditions.IConditionData)
  name.vb: IDataOwner(Of IConditionData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Conditions.IConditionData
    name: IConditionData
    nameWithType: IConditionData
    fullName: VRBuilder.Core.Conditions.IConditionData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Conditions.IConditionData
    name: IConditionData
    nameWithType: IConditionData
    fullName: VRBuilder.Core.Conditions.IConditionData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IDataOwner
  commentId: T:VRBuilder.Core.IDataOwner
  parent: VRBuilder.Core
  name: IDataOwner
  nameWithType: IDataOwner
  fullName: VRBuilder.Core.IDataOwner
- uid: VRBuilder.Core.IClonable{VRBuilder.Core.Conditions.ICondition}
  commentId: T:VRBuilder.Core.IClonable{VRBuilder.Core.Conditions.ICondition}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IClonable`1
  name: IClonable<ICondition>
  nameWithType: IClonable<ICondition>
  fullName: VRBuilder.Core.IClonable<VRBuilder.Core.Conditions.ICondition>
  nameWithType.vb: IClonable(Of ICondition)
  fullName.vb: VRBuilder.Core.IClonable(Of VRBuilder.Core.Conditions.ICondition)
  name.vb: IClonable(Of ICondition)
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Conditions.ICondition
    name: ICondition
    nameWithType: ICondition
    fullName: VRBuilder.Core.Conditions.ICondition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Conditions.ICondition
    name: ICondition
    nameWithType: ICondition
    fullName: VRBuilder.Core.Conditions.ICondition
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.ILockablePropertiesProvider
  commentId: T:VRBuilder.Core.ILockablePropertiesProvider
  parent: VRBuilder.Core
  name: ILockablePropertiesProvider
  nameWithType: ILockablePropertiesProvider
  fullName: VRBuilder.Core.ILockablePropertiesProvider
- uid: VRBuilder.Core.Conditions.Condition{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.VRBuilder#Core#IDataOwner{VRBuilder#Core#Conditions#IConditionData}#Data
  commentId: P:VRBuilder.Core.Conditions.Condition{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.VRBuilder#Core#IDataOwner{VRBuilder#Core#Conditions#IConditionData}#Data
  parent: VRBuilder.Core.Conditions.Condition{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  definition: VRBuilder.Core.Conditions.Condition`1.VRBuilder#Core#IDataOwner{VRBuilder#Core#Conditions#IConditionData}#Data
  name: IDataOwner<IConditionData>.Data
  nameWithType: Condition<GrabbedObjectWithTagCondition.EntityData>.IDataOwner<IConditionData>.Data
  fullName: VRBuilder.Core.Conditions.Condition<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.IConditionData>.Data
  nameWithType.vb: Condition(Of GrabbedObjectWithTagCondition.EntityData).VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.IConditionData>.Data
  fullName.vb: VRBuilder.Core.Conditions.Condition(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.IConditionData>.Data
  name.vb: VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.IConditionData>.Data
- uid: VRBuilder.Core.Conditions.Condition{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.Clone
  commentId: M:VRBuilder.Core.Conditions.Condition{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.Clone
  parent: VRBuilder.Core.Conditions.Condition{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  definition: VRBuilder.Core.Conditions.Condition`1.Clone
  name: Clone()
  nameWithType: Condition<GrabbedObjectWithTagCondition.EntityData>.Clone()
  fullName: VRBuilder.Core.Conditions.Condition<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.Clone()
  nameWithType.vb: Condition(Of GrabbedObjectWithTagCondition.EntityData).Clone()
  fullName.vb: VRBuilder.Core.Conditions.Condition(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).Clone()
  spec.csharp:
  - uid: VRBuilder.Core.Conditions.Condition`1.Clone
    name: Clone
    nameWithType: Condition<GrabbedObjectWithTagCondition.EntityData>.Clone
    fullName: VRBuilder.Core.Conditions.Condition<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Conditions.Condition`1.Clone
    name: Clone
    nameWithType: Condition(Of GrabbedObjectWithTagCondition.EntityData).Clone
    fullName: VRBuilder.Core.Conditions.Condition(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.CompletableEntity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.IsCompleted
  commentId: P:VRBuilder.Core.CompletableEntity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.IsCompleted
  parent: VRBuilder.Core.CompletableEntity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  definition: VRBuilder.Core.CompletableEntity`1.IsCompleted
  name: IsCompleted
  nameWithType: CompletableEntity<GrabbedObjectWithTagCondition.EntityData>.IsCompleted
  fullName: VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.IsCompleted
  nameWithType.vb: CompletableEntity(Of GrabbedObjectWithTagCondition.EntityData).IsCompleted
  fullName.vb: VRBuilder.Core.CompletableEntity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).IsCompleted
- uid: VRBuilder.Core.CompletableEntity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.Autocomplete
  commentId: M:VRBuilder.Core.CompletableEntity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.Autocomplete
  parent: VRBuilder.Core.CompletableEntity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  definition: VRBuilder.Core.CompletableEntity`1.Autocomplete
  name: Autocomplete()
  nameWithType: CompletableEntity<GrabbedObjectWithTagCondition.EntityData>.Autocomplete()
  fullName: VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.Autocomplete()
  nameWithType.vb: CompletableEntity(Of GrabbedObjectWithTagCondition.EntityData).Autocomplete()
  fullName.vb: VRBuilder.Core.CompletableEntity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).Autocomplete()
  spec.csharp:
  - uid: VRBuilder.Core.CompletableEntity`1.Autocomplete
    name: Autocomplete
    nameWithType: CompletableEntity<GrabbedObjectWithTagCondition.EntityData>.Autocomplete
    fullName: VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.Autocomplete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.CompletableEntity`1.Autocomplete
    name: Autocomplete
    nameWithType: CompletableEntity(Of GrabbedObjectWithTagCondition.EntityData).Autocomplete
    fullName: VRBuilder.Core.CompletableEntity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).Autocomplete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.Data
  commentId: P:VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.Data
  parent: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  definition: VRBuilder.Core.Entity`1.Data
  name: Data
  nameWithType: Entity<GrabbedObjectWithTagCondition.EntityData>.Data
  fullName: VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.Data
  nameWithType.vb: Entity(Of GrabbedObjectWithTagCondition.EntityData).Data
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).Data
- uid: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.VRBuilder#Core#IDataOwner#Data
  commentId: P:VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.VRBuilder#Core#IDataOwner#Data
  parent: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  definition: VRBuilder.Core.Entity`1.VRBuilder#Core#IDataOwner#Data
  name: IDataOwner.Data
  nameWithType: Entity<GrabbedObjectWithTagCondition.EntityData>.IDataOwner.Data
  fullName: VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.VRBuilder.Core.IDataOwner.Data
  nameWithType.vb: Entity(Of GrabbedObjectWithTagCondition.EntityData).VRBuilder.Core.IDataOwner.Data
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).VRBuilder.Core.IDataOwner.Data
  name.vb: VRBuilder.Core.IDataOwner.Data
- uid: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.LifeCycle
  commentId: P:VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.LifeCycle
  parent: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  definition: VRBuilder.Core.Entity`1.LifeCycle
  name: LifeCycle
  nameWithType: Entity<GrabbedObjectWithTagCondition.EntityData>.LifeCycle
  fullName: VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.LifeCycle
  nameWithType.vb: Entity(Of GrabbedObjectWithTagCondition.EntityData).LifeCycle
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).LifeCycle
- uid: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.Parent
  commentId: P:VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.Parent
  parent: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  definition: VRBuilder.Core.Entity`1.Parent
  name: Parent
  nameWithType: Entity<GrabbedObjectWithTagCondition.EntityData>.Parent
  fullName: VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.Parent
  nameWithType.vb: Entity(Of GrabbedObjectWithTagCondition.EntityData).Parent
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).Parent
- uid: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.GetActivatingProcess
  commentId: M:VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.GetActivatingProcess
  parent: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  definition: VRBuilder.Core.Entity`1.GetActivatingProcess
  name: GetActivatingProcess()
  nameWithType: Entity<GrabbedObjectWithTagCondition.EntityData>.GetActivatingProcess()
  fullName: VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.GetActivatingProcess()
  nameWithType.vb: Entity(Of GrabbedObjectWithTagCondition.EntityData).GetActivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).GetActivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: Entity<GrabbedObjectWithTagCondition.EntityData>.GetActivatingProcess
    fullName: VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: Entity(Of GrabbedObjectWithTagCondition.EntityData).GetActivatingProcess
    fullName: VRBuilder.Core.Entity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.GetDeactivatingProcess
  parent: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  definition: VRBuilder.Core.Entity`1.GetDeactivatingProcess
  name: GetDeactivatingProcess()
  nameWithType: Entity<GrabbedObjectWithTagCondition.EntityData>.GetDeactivatingProcess()
  fullName: VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.GetDeactivatingProcess()
  nameWithType.vb: Entity(Of GrabbedObjectWithTagCondition.EntityData).GetDeactivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).GetDeactivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: Entity<GrabbedObjectWithTagCondition.EntityData>.GetDeactivatingProcess
    fullName: VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: Entity(Of GrabbedObjectWithTagCondition.EntityData).GetDeactivatingProcess
    fullName: VRBuilder.Core.Entity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.GetConfigurator
  commentId: M:VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.GetConfigurator
  parent: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  definition: VRBuilder.Core.Entity`1.GetConfigurator
  name: GetConfigurator()
  nameWithType: Entity<GrabbedObjectWithTagCondition.EntityData>.GetConfigurator()
  fullName: VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.GetConfigurator()
  nameWithType.vb: Entity(Of GrabbedObjectWithTagCondition.EntityData).GetConfigurator()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).GetConfigurator()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    nameWithType: Entity<GrabbedObjectWithTagCondition.EntityData>.GetConfigurator
    fullName: VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.GetConfigurator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    nameWithType: Entity(Of GrabbedObjectWithTagCondition.EntityData).GetConfigurator
    fullName: VRBuilder.Core.Entity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).GetConfigurator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  parent: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  definition: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  name: Configure(IMode)
  nameWithType: Entity<GrabbedObjectWithTagCondition.EntityData>.Configure(IMode)
  fullName: VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  nameWithType.vb: Entity(Of GrabbedObjectWithTagCondition.EntityData).Configure(IMode)
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).Configure(VRBuilder.Core.Configuration.Modes.IMode)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: Entity<GrabbedObjectWithTagCondition.EntityData>.Configure
    fullName: VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: Entity(Of GrabbedObjectWithTagCondition.EntityData).Configure
    fullName: VRBuilder.Core.Entity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.Update
  commentId: M:VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.Update
  parent: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  definition: VRBuilder.Core.Entity`1.Update
  name: Update()
  nameWithType: Entity<GrabbedObjectWithTagCondition.EntityData>.Update()
  fullName: VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.Update()
  nameWithType.vb: Entity(Of GrabbedObjectWithTagCondition.EntityData).Update()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).Update()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    nameWithType: Entity<GrabbedObjectWithTagCondition.EntityData>.Update
    fullName: VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    nameWithType: Entity(Of GrabbedObjectWithTagCondition.EntityData).Update
    fullName: VRBuilder.Core.Entity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.BasicInteraction.Properties
  commentId: N:VRBuilder.BasicInteraction.Properties
  name: VRBuilder.BasicInteraction.Properties
  nameWithType: VRBuilder.BasicInteraction.Properties
  fullName: VRBuilder.BasicInteraction.Properties
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Entity`1
  commentId: T:VRBuilder.Core.Entity`1
  name: Entity<TData>
  nameWithType: Entity<TData>
  fullName: VRBuilder.Core.Entity<TData>
  nameWithType.vb: Entity(Of TData)
  fullName.vb: VRBuilder.Core.Entity(Of TData)
  name.vb: Entity(Of TData)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: VRBuilder.Core.Entity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: VRBuilder.Core.Entity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Core.CompletableEntity`1
  commentId: T:VRBuilder.Core.CompletableEntity`1
  name: CompletableEntity<TData>
  nameWithType: CompletableEntity<TData>
  fullName: VRBuilder.Core.CompletableEntity<TData>
  nameWithType.vb: CompletableEntity(Of TData)
  fullName.vb: VRBuilder.Core.CompletableEntity(Of TData)
  name.vb: CompletableEntity(Of TData)
  spec.csharp:
  - uid: VRBuilder.Core.CompletableEntity`1
    name: CompletableEntity
    nameWithType: CompletableEntity
    fullName: VRBuilder.Core.CompletableEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.CompletableEntity`1
    name: CompletableEntity
    nameWithType: CompletableEntity
    fullName: VRBuilder.Core.CompletableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Conditions.Condition`1
  commentId: T:VRBuilder.Core.Conditions.Condition`1
  name: Condition<TData>
  nameWithType: Condition<TData>
  fullName: VRBuilder.Core.Conditions.Condition<TData>
  nameWithType.vb: Condition(Of TData)
  fullName.vb: VRBuilder.Core.Conditions.Condition(Of TData)
  name.vb: Condition(Of TData)
  spec.csharp:
  - uid: VRBuilder.Core.Conditions.Condition`1
    name: Condition
    nameWithType: Condition
    fullName: VRBuilder.Core.Conditions.Condition
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Conditions.Condition`1
    name: Condition
    nameWithType: Condition
    fullName: VRBuilder.Core.Conditions.Condition
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Conditions
  commentId: N:VRBuilder.Core.Conditions
  name: VRBuilder.Core.Conditions
  nameWithType: VRBuilder.Core.Conditions
  fullName: VRBuilder.Core.Conditions
- uid: VRBuilder.Core.IDataOwner`1
  commentId: T:VRBuilder.Core.IDataOwner`1
  name: IDataOwner<TData>
  nameWithType: IDataOwner<TData>
  fullName: VRBuilder.Core.IDataOwner<TData>
  nameWithType.vb: IDataOwner(Of TData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of TData)
  name.vb: IDataOwner(Of TData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IClonable`1
  commentId: T:VRBuilder.Core.IClonable`1
  name: IClonable<T>
  nameWithType: IClonable<T>
  fullName: VRBuilder.Core.IClonable<T>
  nameWithType.vb: IClonable(Of T)
  fullName.vb: VRBuilder.Core.IClonable(Of T)
  name.vb: IClonable(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Conditions.Condition`1.VRBuilder#Core#IDataOwner{VRBuilder#Core#Conditions#IConditionData}#Data
  commentId: P:VRBuilder.Core.Conditions.Condition`1.VRBuilder#Core#IDataOwner{VRBuilder#Core#Conditions#IConditionData}#Data
  name: IDataOwner<IConditionData>.Data
  nameWithType: Condition<TData>.IDataOwner<IConditionData>.Data
  fullName: VRBuilder.Core.Conditions.Condition<TData>.VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.IConditionData>.Data
  nameWithType.vb: Condition(Of TData).VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.IConditionData>.Data
  fullName.vb: VRBuilder.Core.Conditions.Condition(Of TData).VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.IConditionData>.Data
  name.vb: VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.IConditionData>.Data
- uid: VRBuilder.Core.Conditions.Condition`1.Clone
  commentId: M:VRBuilder.Core.Conditions.Condition`1.Clone
  name: Clone()
  nameWithType: Condition<TData>.Clone()
  fullName: VRBuilder.Core.Conditions.Condition<TData>.Clone()
  nameWithType.vb: Condition(Of TData).Clone()
  fullName.vb: VRBuilder.Core.Conditions.Condition(Of TData).Clone()
  spec.csharp:
  - uid: VRBuilder.Core.Conditions.Condition`1.Clone
    name: Clone
    nameWithType: Condition<TData>.Clone
    fullName: VRBuilder.Core.Conditions.Condition<TData>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Conditions.Condition`1.Clone
    name: Clone
    nameWithType: Condition(Of TData).Clone
    fullName: VRBuilder.Core.Conditions.Condition(Of TData).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.CompletableEntity`1.IsCompleted
  commentId: P:VRBuilder.Core.CompletableEntity`1.IsCompleted
  name: IsCompleted
  nameWithType: CompletableEntity<TData>.IsCompleted
  fullName: VRBuilder.Core.CompletableEntity<TData>.IsCompleted
  nameWithType.vb: CompletableEntity(Of TData).IsCompleted
  fullName.vb: VRBuilder.Core.CompletableEntity(Of TData).IsCompleted
- uid: VRBuilder.Core.CompletableEntity`1.Autocomplete
  commentId: M:VRBuilder.Core.CompletableEntity`1.Autocomplete
  name: Autocomplete()
  nameWithType: CompletableEntity<TData>.Autocomplete()
  fullName: VRBuilder.Core.CompletableEntity<TData>.Autocomplete()
  nameWithType.vb: CompletableEntity(Of TData).Autocomplete()
  fullName.vb: VRBuilder.Core.CompletableEntity(Of TData).Autocomplete()
  spec.csharp:
  - uid: VRBuilder.Core.CompletableEntity`1.Autocomplete
    name: Autocomplete
    nameWithType: CompletableEntity<TData>.Autocomplete
    fullName: VRBuilder.Core.CompletableEntity<TData>.Autocomplete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.CompletableEntity`1.Autocomplete
    name: Autocomplete
    nameWithType: CompletableEntity(Of TData).Autocomplete
    fullName: VRBuilder.Core.CompletableEntity(Of TData).Autocomplete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.Data
  commentId: P:VRBuilder.Core.Entity`1.Data
  name: Data
  nameWithType: Entity<TData>.Data
  fullName: VRBuilder.Core.Entity<TData>.Data
  nameWithType.vb: Entity(Of TData).Data
  fullName.vb: VRBuilder.Core.Entity(Of TData).Data
- uid: VRBuilder.Core.Entity`1.VRBuilder#Core#IDataOwner#Data
  commentId: P:VRBuilder.Core.Entity`1.VRBuilder#Core#IDataOwner#Data
  name: IDataOwner.Data
  nameWithType: Entity<TData>.IDataOwner.Data
  fullName: VRBuilder.Core.Entity<TData>.VRBuilder.Core.IDataOwner.Data
  nameWithType.vb: Entity(Of TData).VRBuilder.Core.IDataOwner.Data
  fullName.vb: VRBuilder.Core.Entity(Of TData).VRBuilder.Core.IDataOwner.Data
  name.vb: VRBuilder.Core.IDataOwner.Data
- uid: VRBuilder.Core.Entity`1.LifeCycle
  commentId: P:VRBuilder.Core.Entity`1.LifeCycle
  name: LifeCycle
  nameWithType: Entity<TData>.LifeCycle
  fullName: VRBuilder.Core.Entity<TData>.LifeCycle
  nameWithType.vb: Entity(Of TData).LifeCycle
  fullName.vb: VRBuilder.Core.Entity(Of TData).LifeCycle
- uid: VRBuilder.Core.Entity`1.Parent
  commentId: P:VRBuilder.Core.Entity`1.Parent
  name: Parent
  nameWithType: Entity<TData>.Parent
  fullName: VRBuilder.Core.Entity<TData>.Parent
  nameWithType.vb: Entity(Of TData).Parent
  fullName.vb: VRBuilder.Core.Entity(Of TData).Parent
- uid: VRBuilder.Core.Entity`1.GetActivatingProcess
  commentId: M:VRBuilder.Core.Entity`1.GetActivatingProcess
  name: GetActivatingProcess()
  nameWithType: Entity<TData>.GetActivatingProcess()
  fullName: VRBuilder.Core.Entity<TData>.GetActivatingProcess()
  nameWithType.vb: Entity(Of TData).GetActivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetActivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: Entity<TData>.GetActivatingProcess
    fullName: VRBuilder.Core.Entity<TData>.GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: Entity(Of TData).GetActivatingProcess
    fullName: VRBuilder.Core.Entity(Of TData).GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.Entity`1.GetDeactivatingProcess
  name: GetDeactivatingProcess()
  nameWithType: Entity<TData>.GetDeactivatingProcess()
  fullName: VRBuilder.Core.Entity<TData>.GetDeactivatingProcess()
  nameWithType.vb: Entity(Of TData).GetDeactivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetDeactivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: Entity<TData>.GetDeactivatingProcess
    fullName: VRBuilder.Core.Entity<TData>.GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: Entity(Of TData).GetDeactivatingProcess
    fullName: VRBuilder.Core.Entity(Of TData).GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.GetConfigurator
  commentId: M:VRBuilder.Core.Entity`1.GetConfigurator
  name: GetConfigurator()
  nameWithType: Entity<TData>.GetConfigurator()
  fullName: VRBuilder.Core.Entity<TData>.GetConfigurator()
  nameWithType.vb: Entity(Of TData).GetConfigurator()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetConfigurator()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    nameWithType: Entity<TData>.GetConfigurator
    fullName: VRBuilder.Core.Entity<TData>.GetConfigurator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    nameWithType: Entity(Of TData).GetConfigurator
    fullName: VRBuilder.Core.Entity(Of TData).GetConfigurator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  name: Configure(IMode)
  nameWithType: Entity<TData>.Configure(IMode)
  fullName: VRBuilder.Core.Entity<TData>.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  nameWithType.vb: Entity(Of TData).Configure(IMode)
  fullName.vb: VRBuilder.Core.Entity(Of TData).Configure(VRBuilder.Core.Configuration.Modes.IMode)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: Entity<TData>.Configure
    fullName: VRBuilder.Core.Entity<TData>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: Entity(Of TData).Configure
    fullName: VRBuilder.Core.Entity(Of TData).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.Update
  commentId: M:VRBuilder.Core.Entity`1.Update
  name: Update()
  nameWithType: Entity<TData>.Update()
  fullName: VRBuilder.Core.Entity<TData>.Update()
  nameWithType.vb: Entity(Of TData).Update()
  fullName.vb: VRBuilder.Core.Entity(Of TData).Update()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    nameWithType: Entity<TData>.Update
    fullName: VRBuilder.Core.Entity<TData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    nameWithType: Entity(Of TData).Update
    fullName: VRBuilder.Core.Entity(Of TData).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.#ctor*
  commentId: Overload:VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.#ctor
  name: GrabbedObjectWithTagCondition
  nameWithType: GrabbedObjectWithTagCondition.GrabbedObjectWithTagCondition
  fullName: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GrabbedObjectWithTagCondition
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: VRBuilder.Core.Conditions.Condition{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.GetLockableProperties
  commentId: M:VRBuilder.Core.Conditions.Condition{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.GetLockableProperties
  parent: VRBuilder.Core.Conditions.Condition{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  definition: VRBuilder.Core.Conditions.Condition`1.GetLockableProperties
  name: GetLockableProperties()
  nameWithType: Condition<GrabbedObjectWithTagCondition.EntityData>.GetLockableProperties()
  fullName: VRBuilder.Core.Conditions.Condition<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.GetLockableProperties()
  nameWithType.vb: Condition(Of GrabbedObjectWithTagCondition.EntityData).GetLockableProperties()
  fullName.vb: VRBuilder.Core.Conditions.Condition(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).GetLockableProperties()
  spec.csharp:
  - uid: VRBuilder.Core.Conditions.Condition`1.GetLockableProperties
    name: GetLockableProperties
    nameWithType: Condition<GrabbedObjectWithTagCondition.EntityData>.GetLockableProperties
    fullName: VRBuilder.Core.Conditions.Condition<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.GetLockableProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Conditions.Condition`1.GetLockableProperties
    name: GetLockableProperties
    nameWithType: Condition(Of GrabbedObjectWithTagCondition.EntityData).GetLockableProperties
    fullName: VRBuilder.Core.Conditions.Condition(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).GetLockableProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetLockableProperties*
  commentId: Overload:VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetLockableProperties
  name: GetLockableProperties
  nameWithType: GrabbedObjectWithTagCondition.GetLockableProperties
  fullName: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetLockableProperties
- uid: System.Collections.Generic.IEnumerable{VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData}
  commentId: T:System.Collections.Generic.IEnumerable{VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<LockablePropertyData>
  nameWithType: IEnumerable<LockablePropertyData>
  fullName: System.Collections.Generic.IEnumerable<VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData>
  nameWithType.vb: IEnumerable(Of LockablePropertyData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData)
  name.vb: IEnumerable(Of LockablePropertyData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData
    name: LockablePropertyData
    nameWithType: LockablePropertyData
    fullName: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData
    name: LockablePropertyData
    nameWithType: LockablePropertyData
    fullName: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Conditions.Condition`1.GetLockableProperties
  commentId: M:VRBuilder.Core.Conditions.Condition`1.GetLockableProperties
  name: GetLockableProperties()
  nameWithType: Condition<TData>.GetLockableProperties()
  fullName: VRBuilder.Core.Conditions.Condition<TData>.GetLockableProperties()
  nameWithType.vb: Condition(Of TData).GetLockableProperties()
  fullName.vb: VRBuilder.Core.Conditions.Condition(Of TData).GetLockableProperties()
  spec.csharp:
  - uid: VRBuilder.Core.Conditions.Condition`1.GetLockableProperties
    name: GetLockableProperties
    nameWithType: Condition<TData>.GetLockableProperties
    fullName: VRBuilder.Core.Conditions.Condition<TData>.GetLockableProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Conditions.Condition`1.GetLockableProperties
    name: GetLockableProperties
    nameWithType: Condition(Of TData).GetLockableProperties
    fullName: VRBuilder.Core.Conditions.Condition(Of TData).GetLockableProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.GetActiveProcess
  commentId: M:VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.GetActiveProcess
  parent: VRBuilder.Core.Entity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  definition: VRBuilder.Core.Entity`1.GetActiveProcess
  name: GetActiveProcess()
  nameWithType: Entity<GrabbedObjectWithTagCondition.EntityData>.GetActiveProcess()
  fullName: VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.GetActiveProcess()
  nameWithType.vb: Entity(Of GrabbedObjectWithTagCondition.EntityData).GetActiveProcess()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).GetActiveProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    nameWithType: Entity<GrabbedObjectWithTagCondition.EntityData>.GetActiveProcess
    fullName: VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    nameWithType: Entity(Of GrabbedObjectWithTagCondition.EntityData).GetActiveProcess
    fullName: VRBuilder.Core.Entity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetActiveProcess*
  commentId: Overload:VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetActiveProcess
  name: GetActiveProcess
  nameWithType: GrabbedObjectWithTagCondition.GetActiveProcess
  fullName: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetActiveProcess
- uid: VRBuilder.Core.IStageProcess
  commentId: T:VRBuilder.Core.IStageProcess
  parent: VRBuilder.Core
  name: IStageProcess
  nameWithType: IStageProcess
  fullName: VRBuilder.Core.IStageProcess
- uid: VRBuilder.Core.Entity`1.GetActiveProcess
  commentId: M:VRBuilder.Core.Entity`1.GetActiveProcess
  name: GetActiveProcess()
  nameWithType: Entity<TData>.GetActiveProcess()
  fullName: VRBuilder.Core.Entity<TData>.GetActiveProcess()
  nameWithType.vb: Entity(Of TData).GetActiveProcess()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetActiveProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    nameWithType: Entity<TData>.GetActiveProcess
    fullName: VRBuilder.Core.Entity<TData>.GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    nameWithType: Entity(Of TData).GetActiveProcess
    fullName: VRBuilder.Core.Entity(Of TData).GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.CompletableEntity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.GetAutocompleter
  commentId: M:VRBuilder.Core.CompletableEntity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}.GetAutocompleter
  parent: VRBuilder.Core.CompletableEntity{VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData}
  definition: VRBuilder.Core.CompletableEntity`1.GetAutocompleter
  name: GetAutocompleter()
  nameWithType: CompletableEntity<GrabbedObjectWithTagCondition.EntityData>.GetAutocompleter()
  fullName: VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.GetAutocompleter()
  nameWithType.vb: CompletableEntity(Of GrabbedObjectWithTagCondition.EntityData).GetAutocompleter()
  fullName.vb: VRBuilder.Core.CompletableEntity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).GetAutocompleter()
  spec.csharp:
  - uid: VRBuilder.Core.CompletableEntity`1.GetAutocompleter
    name: GetAutocompleter
    nameWithType: CompletableEntity<GrabbedObjectWithTagCondition.EntityData>.GetAutocompleter
    fullName: VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.GetAutocompleter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.CompletableEntity`1.GetAutocompleter
    name: GetAutocompleter
    nameWithType: CompletableEntity(Of GrabbedObjectWithTagCondition.EntityData).GetAutocompleter
    fullName: VRBuilder.Core.CompletableEntity(Of VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData).GetAutocompleter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetAutocompleter*
  commentId: Overload:VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetAutocompleter
  name: GetAutocompleter
  nameWithType: GrabbedObjectWithTagCondition.GetAutocompleter
  fullName: VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.GetAutocompleter
- uid: VRBuilder.Core.IAutocompleter
  commentId: T:VRBuilder.Core.IAutocompleter
  parent: VRBuilder.Core
  name: IAutocompleter
  nameWithType: IAutocompleter
  fullName: VRBuilder.Core.IAutocompleter
- uid: VRBuilder.Core.CompletableEntity`1.GetAutocompleter
  commentId: M:VRBuilder.Core.CompletableEntity`1.GetAutocompleter
  name: GetAutocompleter()
  nameWithType: CompletableEntity<TData>.GetAutocompleter()
  fullName: VRBuilder.Core.CompletableEntity<TData>.GetAutocompleter()
  nameWithType.vb: CompletableEntity(Of TData).GetAutocompleter()
  fullName.vb: VRBuilder.Core.CompletableEntity(Of TData).GetAutocompleter()
  spec.csharp:
  - uid: VRBuilder.Core.CompletableEntity`1.GetAutocompleter
    name: GetAutocompleter
    nameWithType: CompletableEntity<TData>.GetAutocompleter
    fullName: VRBuilder.Core.CompletableEntity<TData>.GetAutocompleter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.CompletableEntity`1.GetAutocompleter
    name: GetAutocompleter
    nameWithType: CompletableEntity(Of TData).GetAutocompleter
    fullName: VRBuilder.Core.CompletableEntity(Of TData).GetAutocompleter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
