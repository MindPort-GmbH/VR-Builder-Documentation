### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Properties.ColliderWithTriggerProperty
  commentId: T:VRBuilder.Core.Properties.ColliderWithTriggerProperty
  id: ColliderWithTriggerProperty
  parent: VRBuilder.Core.Properties
  children:
  - VRBuilder.Core.Properties.ColliderWithTriggerProperty.EnteredTrigger
  - VRBuilder.Core.Properties.ColliderWithTriggerProperty.ExitedTrigger
  - VRBuilder.Core.Properties.ColliderWithTriggerProperty.FastForwardEnter(VRBuilder.Core.SceneObjects.ISceneObject)
  - VRBuilder.Core.Properties.ColliderWithTriggerProperty.IsTransformInsideTrigger(Transform)
  - VRBuilder.Core.Properties.ColliderWithTriggerProperty.OnEnable
  langs:
  - csharp
  - vb
  name: ColliderWithTriggerProperty
  nameWithType: ColliderWithTriggerProperty
  fullName: VRBuilder.Core.Properties.ColliderWithTriggerProperty
  type: Class
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/ColliderWithTriggerProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ColliderWithTriggerProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/ColliderWithTriggerProperty.cs
    startLine: 6
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  syntax:
    content: 'public class ColliderWithTriggerProperty : ProcessSceneObjectProperty, ISceneObjectProperty'
    content.vb: >-
      Public Class ColliderWithTriggerProperty

          Inherits ProcessSceneObjectProperty

          Implements ISceneObjectProperty
  inheritance:
  - System.Object
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty
  implements:
  - VRBuilder.Core.Properties.ISceneObjectProperty
  inheritedMembers:
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  extensionMethods:
  - VRBuilder.Core.Properties.ISceneObjectProperty.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.Properties.ColliderWithTriggerProperty.EnteredTrigger
  commentId: E:VRBuilder.Core.Properties.ColliderWithTriggerProperty.EnteredTrigger
  id: EnteredTrigger
  parent: VRBuilder.Core.Properties.ColliderWithTriggerProperty
  langs:
  - csharp
  - vb
  name: EnteredTrigger
  nameWithType: ColliderWithTriggerProperty.EnteredTrigger
  fullName: VRBuilder.Core.Properties.ColliderWithTriggerProperty.EnteredTrigger
  type: Event
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/ColliderWithTriggerProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EnteredTrigger
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/ColliderWithTriggerProperty.cs
    startLine: 17
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  syntax:
    content: public event EventHandler<ColliderWithTriggerProperty.ColliderWithTriggerEventArgs> EnteredTrigger
    return:
      type: System.EventHandler{VRBuilder.Core.Properties.ColliderWithTriggerProperty.ColliderWithTriggerEventArgs}
    content.vb: Public Event EnteredTrigger As EventHandler(Of ColliderWithTriggerProperty.ColliderWithTriggerEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Properties.ColliderWithTriggerProperty.ExitedTrigger
  commentId: E:VRBuilder.Core.Properties.ColliderWithTriggerProperty.ExitedTrigger
  id: ExitedTrigger
  parent: VRBuilder.Core.Properties.ColliderWithTriggerProperty
  langs:
  - csharp
  - vb
  name: ExitedTrigger
  nameWithType: ColliderWithTriggerProperty.ExitedTrigger
  fullName: VRBuilder.Core.Properties.ColliderWithTriggerProperty.ExitedTrigger
  type: Event
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/ColliderWithTriggerProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ExitedTrigger
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/ColliderWithTriggerProperty.cs
    startLine: 18
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  syntax:
    content: public event EventHandler<ColliderWithTriggerProperty.ColliderWithTriggerEventArgs> ExitedTrigger
    return:
      type: System.EventHandler{VRBuilder.Core.Properties.ColliderWithTriggerProperty.ColliderWithTriggerEventArgs}
    content.vb: Public Event ExitedTrigger As EventHandler(Of ColliderWithTriggerProperty.ColliderWithTriggerEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Properties.ColliderWithTriggerProperty.OnEnable
  commentId: M:VRBuilder.Core.Properties.ColliderWithTriggerProperty.OnEnable
  id: OnEnable
  parent: VRBuilder.Core.Properties.ColliderWithTriggerProperty
  langs:
  - csharp
  - vb
  name: OnEnable()
  nameWithType: ColliderWithTriggerProperty.OnEnable()
  fullName: VRBuilder.Core.Properties.ColliderWithTriggerProperty.OnEnable()
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/ColliderWithTriggerProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnEnable
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/ColliderWithTriggerProperty.cs
    startLine: 20
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  syntax:
    content: protected override void OnEnable()
    content.vb: Protected Overrides Sub OnEnable
  overridden: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  overload: VRBuilder.Core.Properties.ColliderWithTriggerProperty.OnEnable*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: VRBuilder.Core.Properties.ColliderWithTriggerProperty.IsTransformInsideTrigger(Transform)
  commentId: M:VRBuilder.Core.Properties.ColliderWithTriggerProperty.IsTransformInsideTrigger(Transform)
  id: IsTransformInsideTrigger(Transform)
  parent: VRBuilder.Core.Properties.ColliderWithTriggerProperty
  langs:
  - csharp
  - vb
  name: IsTransformInsideTrigger(Transform)
  nameWithType: ColliderWithTriggerProperty.IsTransformInsideTrigger(Transform)
  fullName: VRBuilder.Core.Properties.ColliderWithTriggerProperty.IsTransformInsideTrigger(Transform)
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/ColliderWithTriggerProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsTransformInsideTrigger
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/ColliderWithTriggerProperty.cs
    startLine: 55
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  syntax:
    content: public bool IsTransformInsideTrigger(Transform targetTransform)
    parameters:
    - id: targetTransform
      type: Transform
    return:
      type: System.Boolean
    content.vb: Public Function IsTransformInsideTrigger(targetTransform As Transform) As Boolean
  overload: VRBuilder.Core.Properties.ColliderWithTriggerProperty.IsTransformInsideTrigger*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Properties.ColliderWithTriggerProperty.FastForwardEnter(VRBuilder.Core.SceneObjects.ISceneObject)
  commentId: M:VRBuilder.Core.Properties.ColliderWithTriggerProperty.FastForwardEnter(VRBuilder.Core.SceneObjects.ISceneObject)
  id: FastForwardEnter(VRBuilder.Core.SceneObjects.ISceneObject)
  parent: VRBuilder.Core.Properties.ColliderWithTriggerProperty
  langs:
  - csharp
  - vb
  name: FastForwardEnter(ISceneObject)
  nameWithType: ColliderWithTriggerProperty.FastForwardEnter(ISceneObject)
  fullName: VRBuilder.Core.Properties.ColliderWithTriggerProperty.FastForwardEnter(VRBuilder.Core.SceneObjects.ISceneObject)
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/ColliderWithTriggerProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: FastForwardEnter
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/ColliderWithTriggerProperty.cs
    startLine: 107
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nInstantaneously move target inside the collider and fire the event.\n"
  example: []
  syntax:
    content: public void FastForwardEnter(ISceneObject target)
    parameters:
    - id: target
      type: VRBuilder.Core.SceneObjects.ISceneObject
      description: ''
    content.vb: Public Sub FastForwardEnter(target As ISceneObject)
  overload: VRBuilder.Core.Properties.ColliderWithTriggerProperty.FastForwardEnter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Core.Properties
  commentId: N:VRBuilder.Core.Properties
  name: VRBuilder.Core.Properties
  nameWithType: VRBuilder.Core.Properties
  fullName: VRBuilder.Core.Properties
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ProcessSceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ProcessSceneObjectProperty
  nameWithType: ProcessSceneObjectProperty
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty
- uid: VRBuilder.Core.Properties.ISceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ISceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ISceneObjectProperty
  nameWithType: ISceneObjectProperty
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  commentId: P:VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: SceneObject
  nameWithType: ProcessSceneObjectProperty.SceneObject
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  commentId: M:VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: Reset()
  nameWithType: ProcessSceneObjectProperty.Reset()
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
    name: Reset
    nameWithType: ProcessSceneObjectProperty.Reset
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
    name: Reset
    nameWithType: ProcessSceneObjectProperty.Reset
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  commentId: M:VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: ToString()
  nameWithType: ProcessSceneObjectProperty.ToString()
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
    name: ToString
    nameWithType: ProcessSceneObjectProperty.ToString
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
    name: ToString
    nameWithType: ProcessSceneObjectProperty.ToString
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ISceneObjectProperty.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  definition: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  name: AddProcessPropertyExtensions()
  nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions()
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  name: AddProcessPropertyExtensions(ISceneObjectProperty)
  nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Properties.ISceneObjectProperty
    name: ISceneObjectProperty
    nameWithType: ISceneObjectProperty
    fullName: VRBuilder.Core.Properties.ISceneObjectProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Properties.ISceneObjectProperty
    name: ISceneObjectProperty
    nameWithType: ISceneObjectProperty
    fullName: VRBuilder.Core.Properties.ISceneObjectProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.SceneObjectExtensions
  commentId: T:VRBuilder.Core.Properties.SceneObjectExtensions
  parent: VRBuilder.Core.Properties
  name: SceneObjectExtensions
  nameWithType: SceneObjectExtensions
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions
- uid: System.EventHandler{VRBuilder.Core.Properties.ColliderWithTriggerProperty.ColliderWithTriggerEventArgs}
  commentId: T:System.EventHandler{VRBuilder.Core.Properties.ColliderWithTriggerProperty.ColliderWithTriggerEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ColliderWithTriggerProperty.ColliderWithTriggerEventArgs>
  nameWithType: EventHandler<ColliderWithTriggerProperty.ColliderWithTriggerEventArgs>
  fullName: System.EventHandler<VRBuilder.Core.Properties.ColliderWithTriggerProperty.ColliderWithTriggerEventArgs>
  nameWithType.vb: EventHandler(Of ColliderWithTriggerProperty.ColliderWithTriggerEventArgs)
  fullName.vb: System.EventHandler(Of VRBuilder.Core.Properties.ColliderWithTriggerProperty.ColliderWithTriggerEventArgs)
  name.vb: EventHandler(Of ColliderWithTriggerProperty.ColliderWithTriggerEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Properties.ColliderWithTriggerProperty.ColliderWithTriggerEventArgs
    name: ColliderWithTriggerProperty.ColliderWithTriggerEventArgs
    nameWithType: ColliderWithTriggerProperty.ColliderWithTriggerEventArgs
    fullName: VRBuilder.Core.Properties.ColliderWithTriggerProperty.ColliderWithTriggerEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Properties.ColliderWithTriggerProperty.ColliderWithTriggerEventArgs
    name: ColliderWithTriggerProperty.ColliderWithTriggerEventArgs
    nameWithType: ColliderWithTriggerProperty.ColliderWithTriggerEventArgs
    fullName: VRBuilder.Core.Properties.ColliderWithTriggerProperty.ColliderWithTriggerEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  commentId: M:VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: OnEnable()
  nameWithType: ProcessSceneObjectProperty.OnEnable()
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
    name: OnEnable
    nameWithType: ProcessSceneObjectProperty.OnEnable
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
    name: OnEnable
    nameWithType: ProcessSceneObjectProperty.OnEnable
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ColliderWithTriggerProperty.OnEnable*
  commentId: Overload:VRBuilder.Core.Properties.ColliderWithTriggerProperty.OnEnable
  name: OnEnable
  nameWithType: ColliderWithTriggerProperty.OnEnable
  fullName: VRBuilder.Core.Properties.ColliderWithTriggerProperty.OnEnable
- uid: VRBuilder.Core.Properties.ColliderWithTriggerProperty.IsTransformInsideTrigger*
  commentId: Overload:VRBuilder.Core.Properties.ColliderWithTriggerProperty.IsTransformInsideTrigger
  name: IsTransformInsideTrigger
  nameWithType: ColliderWithTriggerProperty.IsTransformInsideTrigger
  fullName: VRBuilder.Core.Properties.ColliderWithTriggerProperty.IsTransformInsideTrigger
- uid: Transform
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: Transform
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.Properties.ColliderWithTriggerProperty.FastForwardEnter*
  commentId: Overload:VRBuilder.Core.Properties.ColliderWithTriggerProperty.FastForwardEnter
  name: FastForwardEnter
  nameWithType: ColliderWithTriggerProperty.FastForwardEnter
  fullName: VRBuilder.Core.Properties.ColliderWithTriggerProperty.FastForwardEnter
- uid: VRBuilder.Core.SceneObjects.ISceneObject
  commentId: T:VRBuilder.Core.SceneObjects.ISceneObject
  parent: VRBuilder.Core.SceneObjects
  name: ISceneObject
  nameWithType: ISceneObject
  fullName: VRBuilder.Core.SceneObjects.ISceneObject
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
