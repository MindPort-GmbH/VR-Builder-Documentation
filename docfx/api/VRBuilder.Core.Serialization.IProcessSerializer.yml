### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Serialization.IProcessSerializer
  commentId: T:VRBuilder.Core.Serialization.IProcessSerializer
  id: IProcessSerializer
  parent: VRBuilder.Core.Serialization
  children:
  - VRBuilder.Core.Serialization.IProcessSerializer.ChapterFromByteArray(System.Byte[])
  - VRBuilder.Core.Serialization.IProcessSerializer.ChapterToByteArray(VRBuilder.Core.IChapter)
  - VRBuilder.Core.Serialization.IProcessSerializer.EntityFromByteArray(System.Byte[])
  - VRBuilder.Core.Serialization.IProcessSerializer.EntityToByteArray(VRBuilder.Core.IEntity)
  - VRBuilder.Core.Serialization.IProcessSerializer.FileFormat
  - VRBuilder.Core.Serialization.IProcessSerializer.ManifestFromByteArray(System.Byte[])
  - VRBuilder.Core.Serialization.IProcessSerializer.ManifestToByteArray(VRBuilder.Core.IO.IProcessAssetManifest)
  - VRBuilder.Core.Serialization.IProcessSerializer.Name
  - VRBuilder.Core.Serialization.IProcessSerializer.ProcessFromByteArray(System.Byte[])
  - VRBuilder.Core.Serialization.IProcessSerializer.ProcessToByteArray(VRBuilder.Core.IProcess)
  - VRBuilder.Core.Serialization.IProcessSerializer.StepFromByteArray(System.Byte[])
  - VRBuilder.Core.Serialization.IProcessSerializer.StepToByteArray(VRBuilder.Core.IStep)
  langs:
  - csharp
  - vb
  name: IProcessSerializer
  nameWithType: IProcessSerializer
  fullName: VRBuilder.Core.Serialization.IProcessSerializer
  type: Interface
  source:
    remote:
      path: Source/Core/Runtime/Serialization/IProcessSerializer.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IProcessSerializer
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Serialization/IProcessSerializer.cs
    startLine: 11
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Serialization
  summary: A serializer which can de/serialize processes and steps to a certain format.
  example: []
  syntax:
    content: public interface IProcessSerializer
    content.vb: Public Interface IProcessSerializer
- uid: VRBuilder.Core.Serialization.IProcessSerializer.Name
  commentId: P:VRBuilder.Core.Serialization.IProcessSerializer.Name
  id: Name
  parent: VRBuilder.Core.Serialization.IProcessSerializer
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IProcessSerializer.Name
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.Name
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Serialization/IProcessSerializer.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Name
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Serialization/IProcessSerializer.cs
    startLine: 16
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Serialization
  summary: Display name.
  example: []
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: VRBuilder.Core.Serialization.IProcessSerializer.Name*
- uid: VRBuilder.Core.Serialization.IProcessSerializer.FileFormat
  commentId: P:VRBuilder.Core.Serialization.IProcessSerializer.FileFormat
  id: FileFormat
  parent: VRBuilder.Core.Serialization.IProcessSerializer
  langs:
  - csharp
  - vb
  name: FileFormat
  nameWithType: IProcessSerializer.FileFormat
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.FileFormat
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Serialization/IProcessSerializer.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: FileFormat
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Serialization/IProcessSerializer.cs
    startLine: 21
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Serialization
  summary: File format used for this serializer. For example, 'json'.
  example: []
  syntax:
    content: string FileFormat { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property FileFormat As String
  overload: VRBuilder.Core.Serialization.IProcessSerializer.FileFormat*
- uid: VRBuilder.Core.Serialization.IProcessSerializer.EntityToByteArray(VRBuilder.Core.IEntity)
  commentId: M:VRBuilder.Core.Serialization.IProcessSerializer.EntityToByteArray(VRBuilder.Core.IEntity)
  id: EntityToByteArray(VRBuilder.Core.IEntity)
  parent: VRBuilder.Core.Serialization.IProcessSerializer
  langs:
  - csharp
  - vb
  name: EntityToByteArray(IEntity)
  nameWithType: IProcessSerializer.EntityToByteArray(IEntity)
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.EntityToByteArray(VRBuilder.Core.IEntity)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Serialization/IProcessSerializer.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EntityToByteArray
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Serialization/IProcessSerializer.cs
    startLine: 26
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Serialization
  summary: Serializes a given entity into a byte array.
  example: []
  syntax:
    content: byte[] EntityToByteArray(IEntity entity)
    parameters:
    - id: entity
      type: VRBuilder.Core.IEntity
    return:
      type: System.Byte[]
    content.vb: Function EntityToByteArray(entity As IEntity) As Byte()
  overload: VRBuilder.Core.Serialization.IProcessSerializer.EntityToByteArray*
- uid: VRBuilder.Core.Serialization.IProcessSerializer.EntityFromByteArray(System.Byte[])
  commentId: M:VRBuilder.Core.Serialization.IProcessSerializer.EntityFromByteArray(System.Byte[])
  id: EntityFromByteArray(System.Byte[])
  parent: VRBuilder.Core.Serialization.IProcessSerializer
  langs:
  - csharp
  - vb
  name: EntityFromByteArray(byte[])
  nameWithType: IProcessSerializer.EntityFromByteArray(byte[])
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.EntityFromByteArray(byte[])
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Serialization/IProcessSerializer.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EntityFromByteArray
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Serialization/IProcessSerializer.cs
    startLine: 31
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Serialization
  summary: Deserializes a given entity to a usable object.
  example: []
  syntax:
    content: IEntity EntityFromByteArray(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    return:
      type: VRBuilder.Core.IEntity
    content.vb: Function EntityFromByteArray(data As Byte()) As IEntity
  overload: VRBuilder.Core.Serialization.IProcessSerializer.EntityFromByteArray*
  nameWithType.vb: IProcessSerializer.EntityFromByteArray(Byte())
  fullName.vb: VRBuilder.Core.Serialization.IProcessSerializer.EntityFromByteArray(Byte())
  name.vb: EntityFromByteArray(Byte())
- uid: VRBuilder.Core.Serialization.IProcessSerializer.ProcessToByteArray(VRBuilder.Core.IProcess)
  commentId: M:VRBuilder.Core.Serialization.IProcessSerializer.ProcessToByteArray(VRBuilder.Core.IProcess)
  id: ProcessToByteArray(VRBuilder.Core.IProcess)
  parent: VRBuilder.Core.Serialization.IProcessSerializer
  langs:
  - csharp
  - vb
  name: ProcessToByteArray(IProcess)
  nameWithType: IProcessSerializer.ProcessToByteArray(IProcess)
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.ProcessToByteArray(VRBuilder.Core.IProcess)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Serialization/IProcessSerializer.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessToByteArray
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Serialization/IProcessSerializer.cs
    startLine: 36
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Serialization
  summary: Serializes a given process into a byte array.
  example: []
  syntax:
    content: byte[] ProcessToByteArray(IProcess target)
    parameters:
    - id: target
      type: VRBuilder.Core.IProcess
    return:
      type: System.Byte[]
    content.vb: Function ProcessToByteArray(target As IProcess) As Byte()
  overload: VRBuilder.Core.Serialization.IProcessSerializer.ProcessToByteArray*
- uid: VRBuilder.Core.Serialization.IProcessSerializer.ProcessFromByteArray(System.Byte[])
  commentId: M:VRBuilder.Core.Serialization.IProcessSerializer.ProcessFromByteArray(System.Byte[])
  id: ProcessFromByteArray(System.Byte[])
  parent: VRBuilder.Core.Serialization.IProcessSerializer
  langs:
  - csharp
  - vb
  name: ProcessFromByteArray(byte[])
  nameWithType: IProcessSerializer.ProcessFromByteArray(byte[])
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.ProcessFromByteArray(byte[])
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Serialization/IProcessSerializer.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessFromByteArray
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Serialization/IProcessSerializer.cs
    startLine: 41
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Serialization
  summary: Deserializes a given process to a usable object.
  example: []
  syntax:
    content: IProcess ProcessFromByteArray(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    return:
      type: VRBuilder.Core.IProcess
    content.vb: Function ProcessFromByteArray(data As Byte()) As IProcess
  overload: VRBuilder.Core.Serialization.IProcessSerializer.ProcessFromByteArray*
  nameWithType.vb: IProcessSerializer.ProcessFromByteArray(Byte())
  fullName.vb: VRBuilder.Core.Serialization.IProcessSerializer.ProcessFromByteArray(Byte())
  name.vb: ProcessFromByteArray(Byte())
- uid: VRBuilder.Core.Serialization.IProcessSerializer.ChapterToByteArray(VRBuilder.Core.IChapter)
  commentId: M:VRBuilder.Core.Serialization.IProcessSerializer.ChapterToByteArray(VRBuilder.Core.IChapter)
  id: ChapterToByteArray(VRBuilder.Core.IChapter)
  parent: VRBuilder.Core.Serialization.IProcessSerializer
  langs:
  - csharp
  - vb
  name: ChapterToByteArray(IChapter)
  nameWithType: IProcessSerializer.ChapterToByteArray(IChapter)
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.ChapterToByteArray(VRBuilder.Core.IChapter)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Serialization/IProcessSerializer.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ChapterToByteArray
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Serialization/IProcessSerializer.cs
    startLine: 46
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Serialization
  summary: Serializes a given chapter into a byte array.
  example: []
  syntax:
    content: byte[] ChapterToByteArray(IChapter chapter)
    parameters:
    - id: chapter
      type: VRBuilder.Core.IChapter
    return:
      type: System.Byte[]
    content.vb: Function ChapterToByteArray(chapter As IChapter) As Byte()
  overload: VRBuilder.Core.Serialization.IProcessSerializer.ChapterToByteArray*
- uid: VRBuilder.Core.Serialization.IProcessSerializer.ChapterFromByteArray(System.Byte[])
  commentId: M:VRBuilder.Core.Serialization.IProcessSerializer.ChapterFromByteArray(System.Byte[])
  id: ChapterFromByteArray(System.Byte[])
  parent: VRBuilder.Core.Serialization.IProcessSerializer
  langs:
  - csharp
  - vb
  name: ChapterFromByteArray(byte[])
  nameWithType: IProcessSerializer.ChapterFromByteArray(byte[])
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.ChapterFromByteArray(byte[])
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Serialization/IProcessSerializer.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ChapterFromByteArray
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Serialization/IProcessSerializer.cs
    startLine: 51
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Serialization
  summary: Deserializes a given chapter to a usable object.
  example: []
  syntax:
    content: IChapter ChapterFromByteArray(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    return:
      type: VRBuilder.Core.IChapter
    content.vb: Function ChapterFromByteArray(data As Byte()) As IChapter
  overload: VRBuilder.Core.Serialization.IProcessSerializer.ChapterFromByteArray*
  nameWithType.vb: IProcessSerializer.ChapterFromByteArray(Byte())
  fullName.vb: VRBuilder.Core.Serialization.IProcessSerializer.ChapterFromByteArray(Byte())
  name.vb: ChapterFromByteArray(Byte())
- uid: VRBuilder.Core.Serialization.IProcessSerializer.StepToByteArray(VRBuilder.Core.IStep)
  commentId: M:VRBuilder.Core.Serialization.IProcessSerializer.StepToByteArray(VRBuilder.Core.IStep)
  id: StepToByteArray(VRBuilder.Core.IStep)
  parent: VRBuilder.Core.Serialization.IProcessSerializer
  langs:
  - csharp
  - vb
  name: StepToByteArray(IStep)
  nameWithType: IProcessSerializer.StepToByteArray(IStep)
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.StepToByteArray(VRBuilder.Core.IStep)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Serialization/IProcessSerializer.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StepToByteArray
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Serialization/IProcessSerializer.cs
    startLine: 56
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Serialization
  summary: Serializes a given step into a byte array. The implementation should trim target steps of the step.
  example: []
  syntax:
    content: byte[] StepToByteArray(IStep step)
    parameters:
    - id: step
      type: VRBuilder.Core.IStep
    return:
      type: System.Byte[]
    content.vb: Function StepToByteArray([step] As IStep) As Byte()
  overload: VRBuilder.Core.Serialization.IProcessSerializer.StepToByteArray*
- uid: VRBuilder.Core.Serialization.IProcessSerializer.StepFromByteArray(System.Byte[])
  commentId: M:VRBuilder.Core.Serialization.IProcessSerializer.StepFromByteArray(System.Byte[])
  id: StepFromByteArray(System.Byte[])
  parent: VRBuilder.Core.Serialization.IProcessSerializer
  langs:
  - csharp
  - vb
  name: StepFromByteArray(byte[])
  nameWithType: IProcessSerializer.StepFromByteArray(byte[])
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.StepFromByteArray(byte[])
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Serialization/IProcessSerializer.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StepFromByteArray
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Serialization/IProcessSerializer.cs
    startLine: 61
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Serialization
  summary: Deserializes a given step to a usable object.
  example: []
  syntax:
    content: IStep StepFromByteArray(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    return:
      type: VRBuilder.Core.IStep
    content.vb: Function StepFromByteArray(data As Byte()) As IStep
  overload: VRBuilder.Core.Serialization.IProcessSerializer.StepFromByteArray*
  nameWithType.vb: IProcessSerializer.StepFromByteArray(Byte())
  fullName.vb: VRBuilder.Core.Serialization.IProcessSerializer.StepFromByteArray(Byte())
  name.vb: StepFromByteArray(Byte())
- uid: VRBuilder.Core.Serialization.IProcessSerializer.ManifestToByteArray(VRBuilder.Core.IO.IProcessAssetManifest)
  commentId: M:VRBuilder.Core.Serialization.IProcessSerializer.ManifestToByteArray(VRBuilder.Core.IO.IProcessAssetManifest)
  id: ManifestToByteArray(VRBuilder.Core.IO.IProcessAssetManifest)
  parent: VRBuilder.Core.Serialization.IProcessSerializer
  langs:
  - csharp
  - vb
  name: ManifestToByteArray(IProcessAssetManifest)
  nameWithType: IProcessSerializer.ManifestToByteArray(IProcessAssetManifest)
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.ManifestToByteArray(VRBuilder.Core.IO.IProcessAssetManifest)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Serialization/IProcessSerializer.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ManifestToByteArray
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Serialization/IProcessSerializer.cs
    startLine: 66
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Serialization
  summary: Serializes a process asset manifest into a byte array.
  example: []
  syntax:
    content: byte[] ManifestToByteArray(IProcessAssetManifest manifest)
    parameters:
    - id: manifest
      type: VRBuilder.Core.IO.IProcessAssetManifest
    return:
      type: System.Byte[]
    content.vb: Function ManifestToByteArray(manifest As IProcessAssetManifest) As Byte()
  overload: VRBuilder.Core.Serialization.IProcessSerializer.ManifestToByteArray*
- uid: VRBuilder.Core.Serialization.IProcessSerializer.ManifestFromByteArray(System.Byte[])
  commentId: M:VRBuilder.Core.Serialization.IProcessSerializer.ManifestFromByteArray(System.Byte[])
  id: ManifestFromByteArray(System.Byte[])
  parent: VRBuilder.Core.Serialization.IProcessSerializer
  langs:
  - csharp
  - vb
  name: ManifestFromByteArray(byte[])
  nameWithType: IProcessSerializer.ManifestFromByteArray(byte[])
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.ManifestFromByteArray(byte[])
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Serialization/IProcessSerializer.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ManifestFromByteArray
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Serialization/IProcessSerializer.cs
    startLine: 71
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Serialization
  summary: Deserializes a process asset manifest to a usable object.
  example: []
  syntax:
    content: IProcessAssetManifest ManifestFromByteArray(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    return:
      type: VRBuilder.Core.IO.IProcessAssetManifest
    content.vb: Function ManifestFromByteArray(data As Byte()) As IProcessAssetManifest
  overload: VRBuilder.Core.Serialization.IProcessSerializer.ManifestFromByteArray*
  nameWithType.vb: IProcessSerializer.ManifestFromByteArray(Byte())
  fullName.vb: VRBuilder.Core.Serialization.IProcessSerializer.ManifestFromByteArray(Byte())
  name.vb: ManifestFromByteArray(Byte())
references:
- uid: VRBuilder.Core.Serialization
  commentId: N:VRBuilder.Core.Serialization
  href: VRBuilder.html
  name: VRBuilder.Core.Serialization
  nameWithType: VRBuilder.Core.Serialization
  fullName: VRBuilder.Core.Serialization
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Serialization
    name: Serialization
    href: VRBuilder.Core.Serialization.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Serialization
    name: Serialization
    href: VRBuilder.Core.Serialization.html
- uid: VRBuilder.Core.Serialization.IProcessSerializer.Name*
  commentId: Overload:VRBuilder.Core.Serialization.IProcessSerializer.Name
  href: VRBuilder.Core.Serialization.IProcessSerializer.html#VRBuilder_Core_Serialization_IProcessSerializer_Name
  name: Name
  nameWithType: IProcessSerializer.Name
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Serialization.IProcessSerializer.FileFormat*
  commentId: Overload:VRBuilder.Core.Serialization.IProcessSerializer.FileFormat
  href: VRBuilder.Core.Serialization.IProcessSerializer.html#VRBuilder_Core_Serialization_IProcessSerializer_FileFormat
  name: FileFormat
  nameWithType: IProcessSerializer.FileFormat
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.FileFormat
- uid: VRBuilder.Core.Serialization.IProcessSerializer.EntityToByteArray*
  commentId: Overload:VRBuilder.Core.Serialization.IProcessSerializer.EntityToByteArray
  href: VRBuilder.Core.Serialization.IProcessSerializer.html#VRBuilder_Core_Serialization_IProcessSerializer_EntityToByteArray_VRBuilder_Core_IEntity_
  name: EntityToByteArray
  nameWithType: IProcessSerializer.EntityToByteArray
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.EntityToByteArray
- uid: VRBuilder.Core.IEntity
  commentId: T:VRBuilder.Core.IEntity
  parent: VRBuilder.Core
  href: VRBuilder.Core.IEntity.html
  name: IEntity
  nameWithType: IEntity
  fullName: VRBuilder.Core.IEntity
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  href: VRBuilder.html
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
- uid: VRBuilder.Core.Serialization.IProcessSerializer.EntityFromByteArray*
  commentId: Overload:VRBuilder.Core.Serialization.IProcessSerializer.EntityFromByteArray
  href: VRBuilder.Core.Serialization.IProcessSerializer.html#VRBuilder_Core_Serialization_IProcessSerializer_EntityFromByteArray_System_Byte___
  name: EntityFromByteArray
  nameWithType: IProcessSerializer.EntityFromByteArray
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.EntityFromByteArray
- uid: VRBuilder.Core.Serialization.IProcessSerializer.ProcessToByteArray*
  commentId: Overload:VRBuilder.Core.Serialization.IProcessSerializer.ProcessToByteArray
  href: VRBuilder.Core.Serialization.IProcessSerializer.html#VRBuilder_Core_Serialization_IProcessSerializer_ProcessToByteArray_VRBuilder_Core_IProcess_
  name: ProcessToByteArray
  nameWithType: IProcessSerializer.ProcessToByteArray
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.ProcessToByteArray
- uid: VRBuilder.Core.IProcess
  commentId: T:VRBuilder.Core.IProcess
  parent: VRBuilder.Core
  href: VRBuilder.Core.IProcess.html
  name: IProcess
  nameWithType: IProcess
  fullName: VRBuilder.Core.IProcess
- uid: VRBuilder.Core.Serialization.IProcessSerializer.ProcessFromByteArray*
  commentId: Overload:VRBuilder.Core.Serialization.IProcessSerializer.ProcessFromByteArray
  href: VRBuilder.Core.Serialization.IProcessSerializer.html#VRBuilder_Core_Serialization_IProcessSerializer_ProcessFromByteArray_System_Byte___
  name: ProcessFromByteArray
  nameWithType: IProcessSerializer.ProcessFromByteArray
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.ProcessFromByteArray
- uid: VRBuilder.Core.Serialization.IProcessSerializer.ChapterToByteArray*
  commentId: Overload:VRBuilder.Core.Serialization.IProcessSerializer.ChapterToByteArray
  href: VRBuilder.Core.Serialization.IProcessSerializer.html#VRBuilder_Core_Serialization_IProcessSerializer_ChapterToByteArray_VRBuilder_Core_IChapter_
  name: ChapterToByteArray
  nameWithType: IProcessSerializer.ChapterToByteArray
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.ChapterToByteArray
- uid: VRBuilder.Core.IChapter
  commentId: T:VRBuilder.Core.IChapter
  parent: VRBuilder.Core
  href: VRBuilder.Core.IChapter.html
  name: IChapter
  nameWithType: IChapter
  fullName: VRBuilder.Core.IChapter
- uid: VRBuilder.Core.Serialization.IProcessSerializer.ChapterFromByteArray*
  commentId: Overload:VRBuilder.Core.Serialization.IProcessSerializer.ChapterFromByteArray
  href: VRBuilder.Core.Serialization.IProcessSerializer.html#VRBuilder_Core_Serialization_IProcessSerializer_ChapterFromByteArray_System_Byte___
  name: ChapterFromByteArray
  nameWithType: IProcessSerializer.ChapterFromByteArray
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.ChapterFromByteArray
- uid: VRBuilder.Core.Serialization.IProcessSerializer.StepToByteArray*
  commentId: Overload:VRBuilder.Core.Serialization.IProcessSerializer.StepToByteArray
  href: VRBuilder.Core.Serialization.IProcessSerializer.html#VRBuilder_Core_Serialization_IProcessSerializer_StepToByteArray_VRBuilder_Core_IStep_
  name: StepToByteArray
  nameWithType: IProcessSerializer.StepToByteArray
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.StepToByteArray
- uid: VRBuilder.Core.IStep
  commentId: T:VRBuilder.Core.IStep
  parent: VRBuilder.Core
  href: VRBuilder.Core.IStep.html
  name: IStep
  nameWithType: IStep
  fullName: VRBuilder.Core.IStep
- uid: VRBuilder.Core.Serialization.IProcessSerializer.StepFromByteArray*
  commentId: Overload:VRBuilder.Core.Serialization.IProcessSerializer.StepFromByteArray
  href: VRBuilder.Core.Serialization.IProcessSerializer.html#VRBuilder_Core_Serialization_IProcessSerializer_StepFromByteArray_System_Byte___
  name: StepFromByteArray
  nameWithType: IProcessSerializer.StepFromByteArray
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.StepFromByteArray
- uid: VRBuilder.Core.Serialization.IProcessSerializer.ManifestToByteArray*
  commentId: Overload:VRBuilder.Core.Serialization.IProcessSerializer.ManifestToByteArray
  href: VRBuilder.Core.Serialization.IProcessSerializer.html#VRBuilder_Core_Serialization_IProcessSerializer_ManifestToByteArray_VRBuilder_Core_IO_IProcessAssetManifest_
  name: ManifestToByteArray
  nameWithType: IProcessSerializer.ManifestToByteArray
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.ManifestToByteArray
- uid: VRBuilder.Core.IO.IProcessAssetManifest
  commentId: T:VRBuilder.Core.IO.IProcessAssetManifest
  parent: VRBuilder.Core.IO
  href: VRBuilder.Core.IO.IProcessAssetManifest.html
  name: IProcessAssetManifest
  nameWithType: IProcessAssetManifest
  fullName: VRBuilder.Core.IO.IProcessAssetManifest
- uid: VRBuilder.Core.IO
  commentId: N:VRBuilder.Core.IO
  href: VRBuilder.html
  name: VRBuilder.Core.IO
  nameWithType: VRBuilder.Core.IO
  fullName: VRBuilder.Core.IO
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.IO
    name: IO
    href: VRBuilder.Core.IO.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.IO
    name: IO
    href: VRBuilder.Core.IO.html
- uid: VRBuilder.Core.Serialization.IProcessSerializer.ManifestFromByteArray*
  commentId: Overload:VRBuilder.Core.Serialization.IProcessSerializer.ManifestFromByteArray
  href: VRBuilder.Core.Serialization.IProcessSerializer.html#VRBuilder_Core_Serialization_IProcessSerializer_ManifestFromByteArray_System_Byte___
  name: ManifestFromByteArray
  nameWithType: IProcessSerializer.ManifestFromByteArray
  fullName: VRBuilder.Core.Serialization.IProcessSerializer.ManifestFromByteArray
