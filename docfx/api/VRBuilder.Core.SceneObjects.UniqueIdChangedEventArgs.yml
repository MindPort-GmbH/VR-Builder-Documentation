### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs
  commentId: T:VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs
  id: UniqueIdChangedEventArgs
  parent: VRBuilder.Core.SceneObjects
  children:
  - VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs.#ctor(System.Guid,System.Guid)
  - VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs.NewId
  - VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs.PreviousId
  langs:
  - csharp
  - vb
  name: UniqueIdChangedEventArgs
  nameWithType: UniqueIdChangedEventArgs
  fullName: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ISceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: UniqueIdChangedEventArgs
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ISceneObject.cs
    startLine: 27
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nArguments for UniqueIdChanged event.\n"
  example: []
  syntax:
    content: 'public class UniqueIdChangedEventArgs : EventArgs'
    content.vb: >-
      Public Class UniqueIdChangedEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs.NewId
  commentId: F:VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs.NewId
  id: NewId
  parent: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs
  langs:
  - csharp
  - vb
  name: NewId
  nameWithType: UniqueIdChangedEventArgs.NewId
  fullName: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs.NewId
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ISceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: NewId
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ISceneObject.cs
    startLine: 29
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public readonly Guid NewId
    return:
      type: System.Guid
    content.vb: Public ReadOnly NewId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs.PreviousId
  commentId: F:VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs.PreviousId
  id: PreviousId
  parent: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs
  langs:
  - csharp
  - vb
  name: PreviousId
  nameWithType: UniqueIdChangedEventArgs.PreviousId
  fullName: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs.PreviousId
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ISceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: PreviousId
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ISceneObject.cs
    startLine: 30
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public readonly Guid PreviousId
    return:
      type: System.Guid
    content.vb: Public ReadOnly PreviousId As Guid
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs.#ctor(System.Guid,System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs.#ctor(System.Guid,System.Guid)
  id: '#ctor(System.Guid,System.Guid)'
  parent: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs
  langs:
  - csharp
  - vb
  name: UniqueIdChangedEventArgs(Guid, Guid)
  nameWithType: UniqueIdChangedEventArgs.UniqueIdChangedEventArgs(Guid, Guid)
  fullName: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs.UniqueIdChangedEventArgs(System.Guid, System.Guid)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ISceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ISceneObject.cs
    startLine: 32
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public UniqueIdChangedEventArgs(Guid previousId, Guid newId)
    parameters:
    - id: previousId
      type: System.Guid
    - id: newId
      type: System.Guid
    content.vb: Public Sub New(previousId As Guid, newId As Guid)
  overload: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs.#ctor*
  commentId: Overload:VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs.#ctor
  name: UniqueIdChangedEventArgs
  nameWithType: UniqueIdChangedEventArgs.UniqueIdChangedEventArgs
  fullName: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs.UniqueIdChangedEventArgs
