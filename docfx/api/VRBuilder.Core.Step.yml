### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Step
  commentId: T:VRBuilder.Core.Step
  id: Step
  parent: VRBuilder.Core
  children:
  - VRBuilder.Core.Step.#ctor
  - VRBuilder.Core.Step.#ctor(System.String)
  - VRBuilder.Core.Step.Clone
  - VRBuilder.Core.Step.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  - VRBuilder.Core.Step.GetActivatingProcess
  - VRBuilder.Core.Step.GetActiveProcess
  - VRBuilder.Core.Step.GetConfigurator
  - VRBuilder.Core.Step.GetDeactivatingProcess
  - VRBuilder.Core.Step.StepMetadata
  - VRBuilder.Core.Step.VRBuilder#Core#IDataOwner{VRBuilder#Core#IStepData}#Data
  langs:
  - csharp
  - vb
  name: Step
  nameWithType: Step
  fullName: VRBuilder.Core.Step
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Step
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 27
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nAn implementation of <xref href=\"VRBuilder.Core.IStep\" data-throw-if-not-resolved=\"false\"></xref> interface.\n"
  example: []
  syntax:
    content: >-
      [DataContract(IsReference = true)]

      public class Step : Entity<Step.EntityData>, IDataOwner<Step.EntityData>, IStep, IDataOwner<IStepData>, IDataOwner, IEntity, IClonable<IStep>
    content.vb: >-
      <DataContract(IsReference:=True)>

      Public Class Step

          Inherits Entity(Of  Step.EntityData)

          Implements IDataOwner(Of  Step.EntityData), IStep, IDataOwner(Of IStepData), IDataOwner, IEntity, IClonable(Of IStep)
  inheritance:
  - System.Object
  - VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}
  implements:
  - VRBuilder.Core.IDataOwner{VRBuilder.Core.Step.EntityData}
  - VRBuilder.Core.IStep
  - VRBuilder.Core.IDataOwner{VRBuilder.Core.IStepData}
  - VRBuilder.Core.IDataOwner
  - VRBuilder.Core.IEntity
  - VRBuilder.Core.IClonable{VRBuilder.Core.IStep}
  inheritedMembers:
  - VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.Data
  - VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.VRBuilder#Core#IDataOwner#Data
  - VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.LifeCycle
  - VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.Parent
  - VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.Update
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.Step.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.Core.Step.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  id: Configure(VRBuilder.Core.Configuration.Modes.IMode)
  parent: VRBuilder.Core.Step
  langs:
  - csharp
  - vb
  name: Configure(IMode)
  nameWithType: Step.Configure(IMode)
  fullName: VRBuilder.Core.Step.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Configure
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 101
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  syntax:
    content: public override void Configure(IMode mode)
    parameters:
    - id: mode
      type: VRBuilder.Core.Configuration.Modes.IMode
    content.vb: Public Overrides Sub Configure(mode As IMode)
  overridden: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  overload: VRBuilder.Core.Step.Configure*
  implements:
  - VRBuilder.Core.IEntity.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Core.Step.StepMetadata
  commentId: P:VRBuilder.Core.Step.StepMetadata
  id: StepMetadata
  parent: VRBuilder.Core.Step
  langs:
  - csharp
  - vb
  name: StepMetadata
  nameWithType: Step.StepMetadata
  fullName: VRBuilder.Core.Step.StepMetadata
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StepMetadata
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 235
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: >-
      [DataMember]

      public StepMetadata StepMetadata { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.StepMetadata
    content.vb: >-
      <DataMember>

      Public Property StepMetadata As StepMetadata
  overload: VRBuilder.Core.Step.StepMetadata*
  implements:
  - VRBuilder.Core.IStep.StepMetadata
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Step.GetActivatingProcess
  commentId: M:VRBuilder.Core.Step.GetActivatingProcess
  id: GetActivatingProcess
  parent: VRBuilder.Core.Step
  langs:
  - csharp
  - vb
  name: GetActivatingProcess()
  nameWithType: Step.GetActivatingProcess()
  fullName: VRBuilder.Core.Step.GetActivatingProcess()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetActivatingProcess
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 239
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: public override IStageProcess GetActivatingProcess()
    return:
      type: VRBuilder.Core.IStageProcess
    content.vb: Public Overrides Function GetActivatingProcess As IStageProcess
  overridden: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.GetActivatingProcess
  overload: VRBuilder.Core.Step.GetActivatingProcess*
  implements:
  - VRBuilder.Core.IEntity.GetActivatingProcess
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Core.Step.GetActiveProcess
  commentId: M:VRBuilder.Core.Step.GetActiveProcess
  id: GetActiveProcess
  parent: VRBuilder.Core.Step
  langs:
  - csharp
  - vb
  name: GetActiveProcess()
  nameWithType: Step.GetActiveProcess()
  fullName: VRBuilder.Core.Step.GetActiveProcess()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetActiveProcess
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 245
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: public override IStageProcess GetActiveProcess()
    return:
      type: VRBuilder.Core.IStageProcess
    content.vb: Public Overrides Function GetActiveProcess As IStageProcess
  overridden: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.GetActiveProcess
  overload: VRBuilder.Core.Step.GetActiveProcess*
  implements:
  - VRBuilder.Core.IEntity.GetActiveProcess
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Core.Step.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.Step.GetDeactivatingProcess
  id: GetDeactivatingProcess
  parent: VRBuilder.Core.Step
  langs:
  - csharp
  - vb
  name: GetDeactivatingProcess()
  nameWithType: Step.GetDeactivatingProcess()
  fullName: VRBuilder.Core.Step.GetDeactivatingProcess()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetDeactivatingProcess
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 251
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: public override IStageProcess GetDeactivatingProcess()
    return:
      type: VRBuilder.Core.IStageProcess
    content.vb: Public Overrides Function GetDeactivatingProcess As IStageProcess
  overridden: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.GetDeactivatingProcess
  overload: VRBuilder.Core.Step.GetDeactivatingProcess*
  implements:
  - VRBuilder.Core.IEntity.GetDeactivatingProcess
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Core.Step.GetConfigurator
  commentId: M:VRBuilder.Core.Step.GetConfigurator
  id: GetConfigurator
  parent: VRBuilder.Core.Step
  langs:
  - csharp
  - vb
  name: GetConfigurator()
  nameWithType: Step.GetConfigurator()
  fullName: VRBuilder.Core.Step.GetConfigurator()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetConfigurator
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 257
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: protected override IConfigurator GetConfigurator()
    return:
      type: VRBuilder.Core.Configuration.Modes.IConfigurator
    content.vb: Protected Overrides Function GetConfigurator As IConfigurator
  overridden: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.GetConfigurator
  overload: VRBuilder.Core.Step.GetConfigurator*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: VRBuilder.Core.Step.Clone
  commentId: M:VRBuilder.Core.Step.Clone
  id: Clone
  parent: VRBuilder.Core.Step
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Step.Clone()
  fullName: VRBuilder.Core.Step.Clone()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Clone
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 263
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: public IStep Clone()
    return:
      type: VRBuilder.Core.IStep
    content.vb: Public Function Clone As IStep
  overload: VRBuilder.Core.Step.Clone*
  implements:
  - VRBuilder.Core.IClonable{VRBuilder.Core.IStep}.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Step.VRBuilder#Core#IDataOwner{VRBuilder#Core#IStepData}#Data
  commentId: P:VRBuilder.Core.Step.VRBuilder#Core#IDataOwner{VRBuilder#Core#IStepData}#Data
  id: VRBuilder#Core#IDataOwner{VRBuilder#Core#IStepData}#Data
  isEii: true
  parent: VRBuilder.Core.Step
  langs:
  - csharp
  - vb
  name: IDataOwner<IStepData>.Data
  nameWithType: Step.IDataOwner<IStepData>.Data
  fullName: VRBuilder.Core.Step.VRBuilder.Core.IDataOwner<VRBuilder.Core.IStepData>.Data
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: VRBuilder.Core.IDataOwner<VRBuilder.Core.IStepData>.Data
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 279
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: IStepData IDataOwner<IStepData>.Data { get; }
    parameters: []
    return:
      type: VRBuilder.Core.IStepData
    content.vb: ReadOnly WriteOnly Property VRBuilder.Core.IDataOwner<VRBuilder.Core.IStepData>.Data As IStepData Implements IDataOwner(Of IStepData).Data
  overload: VRBuilder.Core.Step.VRBuilder#Core#IDataOwner{VRBuilder#Core#IStepData}#Data*
  implements:
  - VRBuilder.Core.IDataOwner{VRBuilder.Core.IStepData}.Data
  nameWithType.vb: Step.VRBuilder.Core.IDataOwner<VRBuilder.Core.IStepData>.Data
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: VRBuilder.Core.IDataOwner<VRBuilder.Core.IStepData>.Data
- uid: VRBuilder.Core.Step.#ctor
  commentId: M:VRBuilder.Core.Step.#ctor
  id: '#ctor'
  parent: VRBuilder.Core.Step
  langs:
  - csharp
  - vb
  name: Step()
  nameWithType: Step.Step()
  fullName: VRBuilder.Core.Step.Step()
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 284
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  syntax:
    content: protected Step()
    content.vb: Protected Sub New
  overload: VRBuilder.Core.Step.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.Core.Step.#ctor(System.String)
  commentId: M:VRBuilder.Core.Step.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: VRBuilder.Core.Step
  langs:
  - csharp
  - vb
  name: Step(String)
  nameWithType: Step.Step(String)
  fullName: VRBuilder.Core.Step.Step(System.String)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 288
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  syntax:
    content: public Step(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub New(name As String)
  overload: VRBuilder.Core.Step.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Core.IStep
  commentId: T:VRBuilder.Core.IStep
  parent: VRBuilder.Core
  name: IStep
  nameWithType: IStep
  fullName: VRBuilder.Core.IStep
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}
  commentId: T:VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.Entity`1
  name: Entity<Step.EntityData>
  nameWithType: Entity<Step.EntityData>
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>
  nameWithType.vb: Entity(Of Step.EntityData)
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Step.EntityData)
  name.vb: Entity(Of Step.EntityData)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: VRBuilder.Core.Entity
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Step.EntityData
    name: Step.EntityData
    nameWithType: Step.EntityData
    fullName: VRBuilder.Core.Step.EntityData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: VRBuilder.Core.Entity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Step.EntityData
    name: Step.EntityData
    nameWithType: Step.EntityData
    fullName: VRBuilder.Core.Step.EntityData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IDataOwner{VRBuilder.Core.Step.EntityData}
  commentId: T:VRBuilder.Core.IDataOwner{VRBuilder.Core.Step.EntityData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IDataOwner`1
  name: IDataOwner<Step.EntityData>
  nameWithType: IDataOwner<Step.EntityData>
  fullName: VRBuilder.Core.IDataOwner<VRBuilder.Core.Step.EntityData>
  nameWithType.vb: IDataOwner(Of Step.EntityData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of VRBuilder.Core.Step.EntityData)
  name.vb: IDataOwner(Of Step.EntityData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Step.EntityData
    name: Step.EntityData
    nameWithType: Step.EntityData
    fullName: VRBuilder.Core.Step.EntityData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Step.EntityData
    name: Step.EntityData
    nameWithType: Step.EntityData
    fullName: VRBuilder.Core.Step.EntityData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IDataOwner{VRBuilder.Core.IStepData}
  commentId: T:VRBuilder.Core.IDataOwner{VRBuilder.Core.IStepData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IDataOwner`1
  name: IDataOwner<IStepData>
  nameWithType: IDataOwner<IStepData>
  fullName: VRBuilder.Core.IDataOwner<VRBuilder.Core.IStepData>
  nameWithType.vb: IDataOwner(Of IStepData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of VRBuilder.Core.IStepData)
  name.vb: IDataOwner(Of IStepData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IDataOwner
  commentId: T:VRBuilder.Core.IDataOwner
  parent: VRBuilder.Core
  name: IDataOwner
  nameWithType: IDataOwner
  fullName: VRBuilder.Core.IDataOwner
- uid: VRBuilder.Core.IEntity
  commentId: T:VRBuilder.Core.IEntity
  parent: VRBuilder.Core
  name: IEntity
  nameWithType: IEntity
  fullName: VRBuilder.Core.IEntity
- uid: VRBuilder.Core.IClonable{VRBuilder.Core.IStep}
  commentId: T:VRBuilder.Core.IClonable{VRBuilder.Core.IStep}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IClonable`1
  name: IClonable<IStep>
  nameWithType: IClonable<IStep>
  fullName: VRBuilder.Core.IClonable<VRBuilder.Core.IStep>
  nameWithType.vb: IClonable(Of IStep)
  fullName.vb: VRBuilder.Core.IClonable(Of VRBuilder.Core.IStep)
  name.vb: IClonable(Of IStep)
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.Data
  commentId: P:VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.Data
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}
  definition: VRBuilder.Core.Entity`1.Data
  name: Data
  nameWithType: Entity<Step.EntityData>.Data
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.Data
  nameWithType.vb: Entity(Of Step.EntityData).Data
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Step.EntityData).Data
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.VRBuilder#Core#IDataOwner#Data
  commentId: P:VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.VRBuilder#Core#IDataOwner#Data
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}
  definition: VRBuilder.Core.Entity`1.VRBuilder#Core#IDataOwner#Data
  name: IDataOwner.Data
  nameWithType: Entity<Step.EntityData>.IDataOwner.Data
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.VRBuilder.Core.IDataOwner.Data
  nameWithType.vb: Entity(Of Step.EntityData).VRBuilder.Core.IDataOwner.Data
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Step.EntityData).VRBuilder.Core.IDataOwner.Data
  name.vb: VRBuilder.Core.IDataOwner.Data
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.LifeCycle
  commentId: P:VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.LifeCycle
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}
  definition: VRBuilder.Core.Entity`1.LifeCycle
  name: LifeCycle
  nameWithType: Entity<Step.EntityData>.LifeCycle
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.LifeCycle
  nameWithType.vb: Entity(Of Step.EntityData).LifeCycle
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Step.EntityData).LifeCycle
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.Parent
  commentId: P:VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.Parent
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}
  definition: VRBuilder.Core.Entity`1.Parent
  name: Parent
  nameWithType: Entity<Step.EntityData>.Parent
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.Parent
  nameWithType.vb: Entity(Of Step.EntityData).Parent
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Step.EntityData).Parent
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.Update
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.Update
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}
  definition: VRBuilder.Core.Entity`1.Update
  name: Update()
  nameWithType: Entity<Step.EntityData>.Update()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.Update()
  nameWithType.vb: Entity(Of Step.EntityData).Update()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Step.EntityData).Update()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    nameWithType: Entity<Step.EntityData>.Update
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    nameWithType: Entity(Of Step.EntityData).Update
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.Step.EntityData).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Entity`1
  commentId: T:VRBuilder.Core.Entity`1
  name: Entity<TData>
  nameWithType: Entity<TData>
  fullName: VRBuilder.Core.Entity<TData>
  nameWithType.vb: Entity(Of TData)
  fullName.vb: VRBuilder.Core.Entity(Of TData)
  name.vb: Entity(Of TData)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: VRBuilder.Core.Entity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: VRBuilder.Core.Entity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IDataOwner`1
  commentId: T:VRBuilder.Core.IDataOwner`1
  name: IDataOwner<TData>
  nameWithType: IDataOwner<TData>
  fullName: VRBuilder.Core.IDataOwner<TData>
  nameWithType.vb: IDataOwner(Of TData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of TData)
  name.vb: IDataOwner(Of TData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IClonable`1
  commentId: T:VRBuilder.Core.IClonable`1
  name: IClonable<T>
  nameWithType: IClonable<T>
  fullName: VRBuilder.Core.IClonable<T>
  nameWithType.vb: IClonable(Of T)
  fullName.vb: VRBuilder.Core.IClonable(Of T)
  name.vb: IClonable(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.Data
  commentId: P:VRBuilder.Core.Entity`1.Data
  name: Data
  nameWithType: Entity<TData>.Data
  fullName: VRBuilder.Core.Entity<TData>.Data
  nameWithType.vb: Entity(Of TData).Data
  fullName.vb: VRBuilder.Core.Entity(Of TData).Data
- uid: VRBuilder.Core.Entity`1.VRBuilder#Core#IDataOwner#Data
  commentId: P:VRBuilder.Core.Entity`1.VRBuilder#Core#IDataOwner#Data
  name: IDataOwner.Data
  nameWithType: Entity<TData>.IDataOwner.Data
  fullName: VRBuilder.Core.Entity<TData>.VRBuilder.Core.IDataOwner.Data
  nameWithType.vb: Entity(Of TData).VRBuilder.Core.IDataOwner.Data
  fullName.vb: VRBuilder.Core.Entity(Of TData).VRBuilder.Core.IDataOwner.Data
  name.vb: VRBuilder.Core.IDataOwner.Data
- uid: VRBuilder.Core.Entity`1.LifeCycle
  commentId: P:VRBuilder.Core.Entity`1.LifeCycle
  name: LifeCycle
  nameWithType: Entity<TData>.LifeCycle
  fullName: VRBuilder.Core.Entity<TData>.LifeCycle
  nameWithType.vb: Entity(Of TData).LifeCycle
  fullName.vb: VRBuilder.Core.Entity(Of TData).LifeCycle
- uid: VRBuilder.Core.Entity`1.Parent
  commentId: P:VRBuilder.Core.Entity`1.Parent
  name: Parent
  nameWithType: Entity<TData>.Parent
  fullName: VRBuilder.Core.Entity<TData>.Parent
  nameWithType.vb: Entity(Of TData).Parent
  fullName.vb: VRBuilder.Core.Entity(Of TData).Parent
- uid: VRBuilder.Core.Entity`1.Update
  commentId: M:VRBuilder.Core.Entity`1.Update
  name: Update()
  nameWithType: Entity<TData>.Update()
  fullName: VRBuilder.Core.Entity<TData>.Update()
  nameWithType.vb: Entity(Of TData).Update()
  fullName.vb: VRBuilder.Core.Entity(Of TData).Update()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    nameWithType: Entity<TData>.Update
    fullName: VRBuilder.Core.Entity<TData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    nameWithType: Entity(Of TData).Update
    fullName: VRBuilder.Core.Entity(Of TData).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}
  definition: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  name: Configure(IMode)
  nameWithType: Entity<Step.EntityData>.Configure(IMode)
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  nameWithType.vb: Entity(Of Step.EntityData).Configure(IMode)
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Step.EntityData).Configure(VRBuilder.Core.Configuration.Modes.IMode)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: Entity<Step.EntityData>.Configure
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: Entity(Of Step.EntityData).Configure
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.Step.EntityData).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Step.Configure*
  commentId: Overload:VRBuilder.Core.Step.Configure
  name: Configure
  nameWithType: Step.Configure
  fullName: VRBuilder.Core.Step.Configure
- uid: VRBuilder.Core.IEntity.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.Core.IEntity.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  parent: VRBuilder.Core.IEntity
  name: Configure(IMode)
  nameWithType: IEntity.Configure(IMode)
  fullName: VRBuilder.Core.IEntity.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  spec.csharp:
  - uid: VRBuilder.Core.IEntity.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: IEntity.Configure
    fullName: VRBuilder.Core.IEntity.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IEntity.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: IEntity.Configure
    fullName: VRBuilder.Core.IEntity.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes.IMode
  commentId: T:VRBuilder.Core.Configuration.Modes.IMode
  parent: VRBuilder.Core.Configuration.Modes
  name: IMode
  nameWithType: IMode
  fullName: VRBuilder.Core.Configuration.Modes.IMode
- uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  name: Configure(IMode)
  nameWithType: Entity<TData>.Configure(IMode)
  fullName: VRBuilder.Core.Entity<TData>.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  nameWithType.vb: Entity(Of TData).Configure(IMode)
  fullName.vb: VRBuilder.Core.Entity(Of TData).Configure(VRBuilder.Core.Configuration.Modes.IMode)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: Entity<TData>.Configure
    fullName: VRBuilder.Core.Entity<TData>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: Entity(Of TData).Configure
    fullName: VRBuilder.Core.Entity(Of TData).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes
  commentId: N:VRBuilder.Core.Configuration.Modes
  name: VRBuilder.Core.Configuration.Modes
  nameWithType: VRBuilder.Core.Configuration.Modes
  fullName: VRBuilder.Core.Configuration.Modes
- uid: VRBuilder.Core.Step.StepMetadata*
  commentId: Overload:VRBuilder.Core.Step.StepMetadata
  name: StepMetadata
  nameWithType: Step.StepMetadata
  fullName: VRBuilder.Core.Step.StepMetadata
- uid: VRBuilder.Core.IStep.StepMetadata
  commentId: P:VRBuilder.Core.IStep.StepMetadata
  parent: VRBuilder.Core.IStep
  name: StepMetadata
  nameWithType: IStep.StepMetadata
  fullName: VRBuilder.Core.IStep.StepMetadata
- uid: VRBuilder.Core.StepMetadata
  commentId: T:VRBuilder.Core.StepMetadata
  parent: VRBuilder.Core
  name: StepMetadata
  nameWithType: StepMetadata
  fullName: VRBuilder.Core.StepMetadata
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.GetActivatingProcess
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.GetActivatingProcess
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}
  definition: VRBuilder.Core.Entity`1.GetActivatingProcess
  name: GetActivatingProcess()
  nameWithType: Entity<Step.EntityData>.GetActivatingProcess()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.GetActivatingProcess()
  nameWithType.vb: Entity(Of Step.EntityData).GetActivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Step.EntityData).GetActivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: Entity<Step.EntityData>.GetActivatingProcess
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: Entity(Of Step.EntityData).GetActivatingProcess
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.Step.EntityData).GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Step.GetActivatingProcess*
  commentId: Overload:VRBuilder.Core.Step.GetActivatingProcess
  name: GetActivatingProcess
  nameWithType: Step.GetActivatingProcess
  fullName: VRBuilder.Core.Step.GetActivatingProcess
- uid: VRBuilder.Core.IEntity.GetActivatingProcess
  commentId: M:VRBuilder.Core.IEntity.GetActivatingProcess
  parent: VRBuilder.Core.IEntity
  name: GetActivatingProcess()
  nameWithType: IEntity.GetActivatingProcess()
  fullName: VRBuilder.Core.IEntity.GetActivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.IEntity.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: IEntity.GetActivatingProcess
    fullName: VRBuilder.Core.IEntity.GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IEntity.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: IEntity.GetActivatingProcess
    fullName: VRBuilder.Core.IEntity.GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IStageProcess
  commentId: T:VRBuilder.Core.IStageProcess
  parent: VRBuilder.Core
  name: IStageProcess
  nameWithType: IStageProcess
  fullName: VRBuilder.Core.IStageProcess
- uid: VRBuilder.Core.Entity`1.GetActivatingProcess
  commentId: M:VRBuilder.Core.Entity`1.GetActivatingProcess
  name: GetActivatingProcess()
  nameWithType: Entity<TData>.GetActivatingProcess()
  fullName: VRBuilder.Core.Entity<TData>.GetActivatingProcess()
  nameWithType.vb: Entity(Of TData).GetActivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetActivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: Entity<TData>.GetActivatingProcess
    fullName: VRBuilder.Core.Entity<TData>.GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: Entity(Of TData).GetActivatingProcess
    fullName: VRBuilder.Core.Entity(Of TData).GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.GetActiveProcess
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.GetActiveProcess
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}
  definition: VRBuilder.Core.Entity`1.GetActiveProcess
  name: GetActiveProcess()
  nameWithType: Entity<Step.EntityData>.GetActiveProcess()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.GetActiveProcess()
  nameWithType.vb: Entity(Of Step.EntityData).GetActiveProcess()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Step.EntityData).GetActiveProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    nameWithType: Entity<Step.EntityData>.GetActiveProcess
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    nameWithType: Entity(Of Step.EntityData).GetActiveProcess
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.Step.EntityData).GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Step.GetActiveProcess*
  commentId: Overload:VRBuilder.Core.Step.GetActiveProcess
  name: GetActiveProcess
  nameWithType: Step.GetActiveProcess
  fullName: VRBuilder.Core.Step.GetActiveProcess
- uid: VRBuilder.Core.IEntity.GetActiveProcess
  commentId: M:VRBuilder.Core.IEntity.GetActiveProcess
  parent: VRBuilder.Core.IEntity
  name: GetActiveProcess()
  nameWithType: IEntity.GetActiveProcess()
  fullName: VRBuilder.Core.IEntity.GetActiveProcess()
  spec.csharp:
  - uid: VRBuilder.Core.IEntity.GetActiveProcess
    name: GetActiveProcess
    nameWithType: IEntity.GetActiveProcess
    fullName: VRBuilder.Core.IEntity.GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IEntity.GetActiveProcess
    name: GetActiveProcess
    nameWithType: IEntity.GetActiveProcess
    fullName: VRBuilder.Core.IEntity.GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.GetActiveProcess
  commentId: M:VRBuilder.Core.Entity`1.GetActiveProcess
  name: GetActiveProcess()
  nameWithType: Entity<TData>.GetActiveProcess()
  fullName: VRBuilder.Core.Entity<TData>.GetActiveProcess()
  nameWithType.vb: Entity(Of TData).GetActiveProcess()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetActiveProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    nameWithType: Entity<TData>.GetActiveProcess
    fullName: VRBuilder.Core.Entity<TData>.GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    nameWithType: Entity(Of TData).GetActiveProcess
    fullName: VRBuilder.Core.Entity(Of TData).GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.GetDeactivatingProcess
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}
  definition: VRBuilder.Core.Entity`1.GetDeactivatingProcess
  name: GetDeactivatingProcess()
  nameWithType: Entity<Step.EntityData>.GetDeactivatingProcess()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.GetDeactivatingProcess()
  nameWithType.vb: Entity(Of Step.EntityData).GetDeactivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Step.EntityData).GetDeactivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: Entity<Step.EntityData>.GetDeactivatingProcess
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: Entity(Of Step.EntityData).GetDeactivatingProcess
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.Step.EntityData).GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Step.GetDeactivatingProcess*
  commentId: Overload:VRBuilder.Core.Step.GetDeactivatingProcess
  name: GetDeactivatingProcess
  nameWithType: Step.GetDeactivatingProcess
  fullName: VRBuilder.Core.Step.GetDeactivatingProcess
- uid: VRBuilder.Core.IEntity.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.IEntity.GetDeactivatingProcess
  parent: VRBuilder.Core.IEntity
  name: GetDeactivatingProcess()
  nameWithType: IEntity.GetDeactivatingProcess()
  fullName: VRBuilder.Core.IEntity.GetDeactivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.IEntity.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: IEntity.GetDeactivatingProcess
    fullName: VRBuilder.Core.IEntity.GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IEntity.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: IEntity.GetDeactivatingProcess
    fullName: VRBuilder.Core.IEntity.GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.Entity`1.GetDeactivatingProcess
  name: GetDeactivatingProcess()
  nameWithType: Entity<TData>.GetDeactivatingProcess()
  fullName: VRBuilder.Core.Entity<TData>.GetDeactivatingProcess()
  nameWithType.vb: Entity(Of TData).GetDeactivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetDeactivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: Entity<TData>.GetDeactivatingProcess
    fullName: VRBuilder.Core.Entity<TData>.GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: Entity(Of TData).GetDeactivatingProcess
    fullName: VRBuilder.Core.Entity(Of TData).GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.GetConfigurator
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}.GetConfigurator
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Step.EntityData}
  definition: VRBuilder.Core.Entity`1.GetConfigurator
  name: GetConfigurator()
  nameWithType: Entity<Step.EntityData>.GetConfigurator()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.GetConfigurator()
  nameWithType.vb: Entity(Of Step.EntityData).GetConfigurator()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Step.EntityData).GetConfigurator()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    nameWithType: Entity<Step.EntityData>.GetConfigurator
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.GetConfigurator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    nameWithType: Entity(Of Step.EntityData).GetConfigurator
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.Step.EntityData).GetConfigurator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Step.GetConfigurator*
  commentId: Overload:VRBuilder.Core.Step.GetConfigurator
  name: GetConfigurator
  nameWithType: Step.GetConfigurator
  fullName: VRBuilder.Core.Step.GetConfigurator
- uid: VRBuilder.Core.Configuration.Modes.IConfigurator
  commentId: T:VRBuilder.Core.Configuration.Modes.IConfigurator
  parent: VRBuilder.Core.Configuration.Modes
  name: IConfigurator
  nameWithType: IConfigurator
  fullName: VRBuilder.Core.Configuration.Modes.IConfigurator
- uid: VRBuilder.Core.Entity`1.GetConfigurator
  commentId: M:VRBuilder.Core.Entity`1.GetConfigurator
  name: GetConfigurator()
  nameWithType: Entity<TData>.GetConfigurator()
  fullName: VRBuilder.Core.Entity<TData>.GetConfigurator()
  nameWithType.vb: Entity(Of TData).GetConfigurator()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetConfigurator()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    nameWithType: Entity<TData>.GetConfigurator
    fullName: VRBuilder.Core.Entity<TData>.GetConfigurator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    nameWithType: Entity(Of TData).GetConfigurator
    fullName: VRBuilder.Core.Entity(Of TData).GetConfigurator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Step.Clone*
  commentId: Overload:VRBuilder.Core.Step.Clone
  name: Clone
  nameWithType: Step.Clone
  fullName: VRBuilder.Core.Step.Clone
- uid: VRBuilder.Core.IClonable{VRBuilder.Core.IStep}.Clone
  commentId: M:VRBuilder.Core.IClonable{VRBuilder.Core.IStep}.Clone
  parent: VRBuilder.Core.IClonable{VRBuilder.Core.IStep}
  definition: VRBuilder.Core.IClonable`1.Clone
  name: Clone()
  nameWithType: IClonable<IStep>.Clone()
  fullName: VRBuilder.Core.IClonable<VRBuilder.Core.IStep>.Clone()
  nameWithType.vb: IClonable(Of IStep).Clone()
  fullName.vb: VRBuilder.Core.IClonable(Of VRBuilder.Core.IStep).Clone()
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1.Clone
    name: Clone
    nameWithType: IClonable<IStep>.Clone
    fullName: VRBuilder.Core.IClonable<VRBuilder.Core.IStep>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1.Clone
    name: Clone
    nameWithType: IClonable(Of IStep).Clone
    fullName: VRBuilder.Core.IClonable(Of VRBuilder.Core.IStep).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IClonable`1.Clone
  commentId: M:VRBuilder.Core.IClonable`1.Clone
  name: Clone()
  nameWithType: IClonable<T>.Clone()
  fullName: VRBuilder.Core.IClonable<T>.Clone()
  nameWithType.vb: IClonable(Of T).Clone()
  fullName.vb: VRBuilder.Core.IClonable(Of T).Clone()
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1.Clone
    name: Clone
    nameWithType: IClonable<T>.Clone
    fullName: VRBuilder.Core.IClonable<T>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1.Clone
    name: Clone
    nameWithType: IClonable(Of T).Clone
    fullName: VRBuilder.Core.IClonable(Of T).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Step.VRBuilder#Core#IDataOwner{VRBuilder#Core#IStepData}#Data*
  commentId: Overload:VRBuilder.Core.Step.VRBuilder#Core#IDataOwner{VRBuilder#Core#IStepData}#Data
  name: IDataOwner<IStepData>.Data
  nameWithType: Step.IDataOwner<IStepData>.Data
  fullName: VRBuilder.Core.Step.VRBuilder.Core.IDataOwner<VRBuilder.Core.IStepData>.Data
  nameWithType.vb: Step.VRBuilder.Core.IDataOwner<VRBuilder.Core.IStepData>.Data
  name.vb: VRBuilder.Core.IDataOwner<VRBuilder.Core.IStepData>.Data
- uid: VRBuilder.Core.IDataOwner{VRBuilder.Core.IStepData}.Data
  commentId: P:VRBuilder.Core.IDataOwner{VRBuilder.Core.IStepData}.Data
  parent: VRBuilder.Core.IDataOwner{VRBuilder.Core.IStepData}
  definition: VRBuilder.Core.IDataOwner`1.Data
  name: Data
  nameWithType: IDataOwner<IStepData>.Data
  fullName: VRBuilder.Core.IDataOwner<VRBuilder.Core.IStepData>.Data
  nameWithType.vb: IDataOwner(Of IStepData).Data
  fullName.vb: VRBuilder.Core.IDataOwner(Of VRBuilder.Core.IStepData).Data
- uid: VRBuilder.Core.IStepData
  commentId: T:VRBuilder.Core.IStepData
  parent: VRBuilder.Core
  name: IStepData
  nameWithType: IStepData
  fullName: VRBuilder.Core.IStepData
- uid: VRBuilder.Core.IDataOwner`1.Data
  commentId: P:VRBuilder.Core.IDataOwner`1.Data
  name: Data
  nameWithType: IDataOwner<TData>.Data
  fullName: VRBuilder.Core.IDataOwner<TData>.Data
  nameWithType.vb: IDataOwner(Of TData).Data
  fullName.vb: VRBuilder.Core.IDataOwner(Of TData).Data
- uid: VRBuilder.Core.Step.#ctor*
  commentId: Overload:VRBuilder.Core.Step.#ctor
  name: Step
  nameWithType: Step.Step
  fullName: VRBuilder.Core.Step.Step
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
