### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.UI.EditorDrawingHelper
  commentId: T:VRBuilder.Editor.UI.EditorDrawingHelper
  id: EditorDrawingHelper
  parent: VRBuilder.Editor.UI
  children:
  - VRBuilder.Editor.UI.EditorDrawingHelper.ButtonHeight
  - VRBuilder.Editor.UI.EditorDrawingHelper.CalculateAddButtonRect(Rect@)
  - VRBuilder.Editor.UI.EditorDrawingHelper.DrawAddButton(Rect@,System.String)
  - VRBuilder.Editor.UI.EditorDrawingHelper.DrawArrow(Vector2,Vector2,Color,System.Single,System.Single)
  - VRBuilder.Editor.UI.EditorDrawingHelper.DrawCircle(Vector2,System.Single,Color)
  - VRBuilder.Editor.UI.EditorDrawingHelper.DrawFoldoutWithReducedFocusArea(Rect,System.Boolean,GUIContent,GUIStyle,GUIStyle)
  - VRBuilder.Editor.UI.EditorDrawingHelper.DrawHelpButton(Rect@)
  - VRBuilder.Editor.UI.EditorDrawingHelper.DrawHollowRectangle(Rect,Color,System.Single)
  - VRBuilder.Editor.UI.EditorDrawingHelper.DrawHorizontalLine(Vector2,System.Single,Color)
  - VRBuilder.Editor.UI.EditorDrawingHelper.DrawPasteButton(Rect@)
  - VRBuilder.Editor.UI.EditorDrawingHelper.DrawPolyline(System.Collections.Generic.IList{Vector2},Color)
  - VRBuilder.Editor.UI.EditorDrawingHelper.DrawRect(Rect,Color)
  - VRBuilder.Editor.UI.EditorDrawingHelper.DrawRoundedRect(Rect,Color,System.Single)
  - VRBuilder.Editor.UI.EditorDrawingHelper.DrawTexture(Rect,Texture,Color)
  - VRBuilder.Editor.UI.EditorDrawingHelper.DrawTriangle(System.Collections.Generic.IList{Vector2},Color)
  - VRBuilder.Editor.UI.EditorDrawingHelper.DrawVerticalLine(Vector2,System.Single,Color)
  - VRBuilder.Editor.UI.EditorDrawingHelper.GetNextLineRect(Rect)
  - VRBuilder.Editor.UI.EditorDrawingHelper.HeaderLineHeight
  - VRBuilder.Editor.UI.EditorDrawingHelper.IndentationWidth
  - VRBuilder.Editor.UI.EditorDrawingHelper.SingleLineHeight
  - VRBuilder.Editor.UI.EditorDrawingHelper.TruncateText(System.String,GUIStyle,System.Single,System.String)
  - VRBuilder.Editor.UI.EditorDrawingHelper.VerticalSpacing
  langs:
  - csharp
  - vb
  name: EditorDrawingHelper
  nameWithType: EditorDrawingHelper
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper
  type: Class
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EditorDrawingHelper
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 13
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nHelper class for drawing primitives in custom editors.\n"
  example: []
  syntax:
    content: public static class EditorDrawingHelper
    content.vb: Public Module EditorDrawingHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.VerticalSpacing
  commentId: F:VRBuilder.Editor.UI.EditorDrawingHelper.VerticalSpacing
  id: VerticalSpacing
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: VerticalSpacing
  nameWithType: EditorDrawingHelper.VerticalSpacing
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.VerticalSpacing
  type: Field
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: VerticalSpacing
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 22
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nDefault spacing between Step Inspector elements.\n"
  example: []
  syntax:
    content: public const float VerticalSpacing = 6F
    return:
      type: System.Single
    content.vb: Public Const VerticalSpacing As Single = 6F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.IndentationWidth
  commentId: F:VRBuilder.Editor.UI.EditorDrawingHelper.IndentationWidth
  id: IndentationWidth
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: IndentationWidth
  nameWithType: EditorDrawingHelper.IndentationWidth
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.IndentationWidth
  type: Field
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IndentationWidth
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 27
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nWidth of one indentation step in the Step Inspector.\n"
  example: []
  syntax:
    content: public const float IndentationWidth = 16F
    return:
      type: System.Single
    content.vb: Public Const IndentationWidth As Single = 16F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.SingleLineHeight
  commentId: P:VRBuilder.Editor.UI.EditorDrawingHelper.SingleLineHeight
  id: SingleLineHeight
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: SingleLineHeight
  nameWithType: EditorDrawingHelper.SingleLineHeight
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.SingleLineHeight
  type: Property
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SingleLineHeight
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 32
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nHeight of one line in the Step Inspector.\n"
  example: []
  syntax:
    content: public static float SingleLineHeight { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Shared ReadOnly Property SingleLineHeight As Single
  overload: VRBuilder.Editor.UI.EditorDrawingHelper.SingleLineHeight*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.ButtonHeight
  commentId: F:VRBuilder.Editor.UI.EditorDrawingHelper.ButtonHeight
  id: ButtonHeight
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: ButtonHeight
  nameWithType: EditorDrawingHelper.ButtonHeight
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.ButtonHeight
  type: Field
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ButtonHeight
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 46
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nHeight of one button in the Step Inspector.\n"
  remarks: "\nThere isn&apos;t a constant for this in Unity. This is the same as the height of the &quot;Add Behavior&quot; Unity button.\n"
  example: []
  syntax:
    content: public static float ButtonHeight
    return:
      type: System.Single
    content.vb: Public Shared ButtonHeight As Single
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.HeaderLineHeight
  commentId: P:VRBuilder.Editor.UI.EditorDrawingHelper.HeaderLineHeight
  id: HeaderLineHeight
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: HeaderLineHeight
  nameWithType: EditorDrawingHelper.HeaderLineHeight
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.HeaderLineHeight
  type: Property
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: HeaderLineHeight
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 53
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nHeight of slightly bigger line in the Step Inspector.\n"
  example: []
  syntax:
    content: public static float HeaderLineHeight { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Shared ReadOnly Property HeaderLineHeight As Single
  overload: VRBuilder.Editor.UI.EditorDrawingHelper.HeaderLineHeight*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.CalculateAddButtonRect(Rect@)
  commentId: M:VRBuilder.Editor.UI.EditorDrawingHelper.CalculateAddButtonRect(Rect@)
  id: CalculateAddButtonRect(Rect@)
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: CalculateAddButtonRect(ref Rect)
  nameWithType: EditorDrawingHelper.CalculateAddButtonRect(ref Rect)
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.CalculateAddButtonRect(ref Rect)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CalculateAddButtonRect
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 65
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nDraw button which is similar to default &quot;Add Component&quot; Unity button.\n"
  example: []
  syntax:
    content: public static Rect CalculateAddButtonRect(ref Rect rect)
    parameters:
    - id: rect
      type: Rect
    return:
      type: Rect
    content.vb: Public Shared Function CalculateAddButtonRect(ByRef rect As Rect) As Rect
  overload: VRBuilder.Editor.UI.EditorDrawingHelper.CalculateAddButtonRect*
  nameWithType.vb: EditorDrawingHelper.CalculateAddButtonRect(ByRef Rect)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.Editor.UI.EditorDrawingHelper.CalculateAddButtonRect(ByRef Rect)
  name.vb: CalculateAddButtonRect(ByRef Rect)
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawAddButton(Rect@,System.String)
  commentId: M:VRBuilder.Editor.UI.EditorDrawingHelper.DrawAddButton(Rect@,System.String)
  id: DrawAddButton(Rect@,System.String)
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: DrawAddButton(ref Rect, String)
  nameWithType: EditorDrawingHelper.DrawAddButton(ref Rect, String)
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawAddButton(ref Rect, System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawAddButton
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 80
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nDraw button which is similar to default &quot;Add Component&quot; Unity button.\n"
  example: []
  syntax:
    content: public static bool DrawAddButton(ref Rect rect, string label)
    parameters:
    - id: rect
      type: Rect
    - id: label
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function DrawAddButton(ByRef rect As Rect, label As String) As Boolean
  overload: VRBuilder.Editor.UI.EditorDrawingHelper.DrawAddButton*
  nameWithType.vb: EditorDrawingHelper.DrawAddButton(ByRef Rect, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.Editor.UI.EditorDrawingHelper.DrawAddButton(ByRef Rect, System.String)
  name.vb: DrawAddButton(ByRef Rect, String)
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawPasteButton(Rect@)
  commentId: M:VRBuilder.Editor.UI.EditorDrawingHelper.DrawPasteButton(Rect@)
  id: DrawPasteButton(Rect@)
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: DrawPasteButton(ref Rect)
  nameWithType: EditorDrawingHelper.DrawPasteButton(ref Rect)
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawPasteButton(ref Rect)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawPasteButton
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 96
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nDraw a paste button next to the <xref href=\"VRBuilder.Editor.UI.EditorDrawingHelper.DrawAddButton(Rect%40%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref> button.\n"
  example: []
  syntax:
    content: public static bool DrawPasteButton(ref Rect rect)
    parameters:
    - id: rect
      type: Rect
    return:
      type: System.Boolean
    content.vb: Public Shared Function DrawPasteButton(ByRef rect As Rect) As Boolean
  overload: VRBuilder.Editor.UI.EditorDrawingHelper.DrawPasteButton*
  nameWithType.vb: EditorDrawingHelper.DrawPasteButton(ByRef Rect)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.Editor.UI.EditorDrawingHelper.DrawPasteButton(ByRef Rect)
  name.vb: DrawPasteButton(ByRef Rect)
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawHelpButton(Rect@)
  commentId: M:VRBuilder.Editor.UI.EditorDrawingHelper.DrawHelpButton(Rect@)
  id: DrawHelpButton(Rect@)
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: DrawHelpButton(ref Rect)
  nameWithType: EditorDrawingHelper.DrawHelpButton(ref Rect)
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawHelpButton(ref Rect)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawHelpButton
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 117
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nDraw a paste button next to the <xref href=\"VRBuilder.Editor.UI.EditorDrawingHelper.DrawPasteButton(Rect%40)\" data-throw-if-not-resolved=\"false\"></xref> button.\n"
  example: []
  syntax:
    content: public static bool DrawHelpButton(ref Rect rect)
    parameters:
    - id: rect
      type: Rect
    return:
      type: System.Boolean
    content.vb: Public Shared Function DrawHelpButton(ByRef rect As Rect) As Boolean
  overload: VRBuilder.Editor.UI.EditorDrawingHelper.DrawHelpButton*
  nameWithType.vb: EditorDrawingHelper.DrawHelpButton(ByRef Rect)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.Editor.UI.EditorDrawingHelper.DrawHelpButton(ByRef Rect)
  name.vb: DrawHelpButton(ByRef Rect)
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawCircle(Vector2,System.Single,Color)
  commentId: M:VRBuilder.Editor.UI.EditorDrawingHelper.DrawCircle(Vector2,System.Single,Color)
  id: DrawCircle(Vector2,System.Single,Color)
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: DrawCircle(Vector2, Single, Color)
  nameWithType: EditorDrawingHelper.DrawCircle(Vector2, Single, Color)
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawCircle(Vector2, System.Single, Color)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawCircle
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 139
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nDraw a circle.\n"
  example: []
  syntax:
    content: public static void DrawCircle(Vector2 position, float radius, Color color)
    parameters:
    - id: position
      type: Vector2
      description: Center of the circle.
    - id: radius
      type: System.Single
      description: Radius of the circle.
    - id: color
      type: Color
      description: Color of the circle.
    content.vb: Public Shared Sub DrawCircle(position As Vector2, radius As Single, color As Color)
  overload: VRBuilder.Editor.UI.EditorDrawingHelper.DrawCircle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawArrow(Vector2,Vector2,Color,System.Single,System.Single)
  commentId: M:VRBuilder.Editor.UI.EditorDrawingHelper.DrawArrow(Vector2,Vector2,Color,System.Single,System.Single)
  id: DrawArrow(Vector2,Vector2,Color,System.Single,System.Single)
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: DrawArrow(Vector2, Vector2, Color, Single, Single)
  nameWithType: EditorDrawingHelper.DrawArrow(Vector2, Vector2, Color, Single, Single)
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawArrow(Vector2, Vector2, Color, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawArrow
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 159
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nDraw an arrow.\n"
  example: []
  syntax:
    content: public static void DrawArrow(Vector2 from, Vector2 to, Color color, float arrowheadAngleInDegrees, float arrowheadLength)
    parameters:
    - id: from
      type: Vector2
      description: Position from which arrow begins.
    - id: to
      type: Vector2
      description: Position at which arrow is pointing.
    - id: color
      type: Color
      description: Arrow color.
    - id: arrowheadAngleInDegrees
      type: System.Single
      description: How wide is the arrow&apos;s end in degrees.
    - id: arrowheadLength
      type: System.Single
      description: How long is the arrow head in pixels.
    content.vb: Public Shared Sub DrawArrow(from As Vector2, to As Vector2, color As Color, arrowheadAngleInDegrees As Single, arrowheadLength As Single)
  overload: VRBuilder.Editor.UI.EditorDrawingHelper.DrawArrow*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawTriangle(System.Collections.Generic.IList{Vector2},Color)
  commentId: M:VRBuilder.Editor.UI.EditorDrawingHelper.DrawTriangle(System.Collections.Generic.IList{Vector2},Color)
  id: DrawTriangle(System.Collections.Generic.IList{Vector2},Color)
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: DrawTriangle(IList<Vector2>, Color)
  nameWithType: EditorDrawingHelper.DrawTriangle(IList<Vector2>, Color)
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawTriangle(System.Collections.Generic.IList<Vector2>, Color)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawTriangle
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 179
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nDraw a triangle.\n"
  example: []
  syntax:
    content: public static void DrawTriangle(IList<Vector2> points, Color color)
    parameters:
    - id: points
      type: System.Collections.Generic.IList{Vector2}
      description: List of points
    - id: color
      type: Color
      description: Fill color of triangle
    content.vb: Public Shared Sub DrawTriangle(points As IList(Of Vector2), color As Color)
  overload: VRBuilder.Editor.UI.EditorDrawingHelper.DrawTriangle*
  nameWithType.vb: EditorDrawingHelper.DrawTriangle(IList(Of Vector2), Color)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.Editor.UI.EditorDrawingHelper.DrawTriangle(System.Collections.Generic.IList(Of Vector2), Color)
  name.vb: DrawTriangle(IList(Of Vector2), Color)
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawRect(Rect,Color)
  commentId: M:VRBuilder.Editor.UI.EditorDrawingHelper.DrawRect(Rect,Color)
  id: DrawRect(Rect,Color)
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: DrawRect(Rect, Color)
  nameWithType: EditorDrawingHelper.DrawRect(Rect, Color)
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawRect(Rect, Color)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawRect
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 230
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nDraw a rect.\n"
  example: []
  syntax:
    content: public static void DrawRect(Rect rect, Color color)
    parameters:
    - id: rect
      type: Rect
      description: Rect size and position to draw.
    - id: color
      type: Color
      description: Color of the rect.
    content.vb: Public Shared Sub DrawRect(rect As Rect, color As Color)
  overload: VRBuilder.Editor.UI.EditorDrawingHelper.DrawRect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawRoundedRect(Rect,Color,System.Single)
  commentId: M:VRBuilder.Editor.UI.EditorDrawingHelper.DrawRoundedRect(Rect,Color,System.Single)
  id: DrawRoundedRect(Rect,Color,System.Single)
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: DrawRoundedRect(Rect, Color, Single)
  nameWithType: EditorDrawingHelper.DrawRoundedRect(Rect, Color, Single)
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawRoundedRect(Rect, Color, System.Single)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawRoundedRect
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 241
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nDraw a rectangle with rounded corners.\n"
  example: []
  syntax:
    content: public static void DrawRoundedRect(Rect rect, Color color, float cornerRadius)
    parameters:
    - id: rect
      type: Rect
      description: Rect size and position to draw.
    - id: color
      type: Color
      description: Color of the rect.
    - id: cornerRadius
      type: System.Single
      description: Corners are drawn as quarters of a circle with radius equal to cornerRadius. If the radius is too small (less than one pixel) or too big (bigger than a half of any side), simple rect is drawn.
    content.vb: Public Shared Sub DrawRoundedRect(rect As Rect, color As Color, cornerRadius As Single)
  overload: VRBuilder.Editor.UI.EditorDrawingHelper.DrawRoundedRect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawFoldoutWithReducedFocusArea(Rect,System.Boolean,GUIContent,GUIStyle,GUIStyle)
  commentId: M:VRBuilder.Editor.UI.EditorDrawingHelper.DrawFoldoutWithReducedFocusArea(Rect,System.Boolean,GUIContent,GUIStyle,GUIStyle)
  id: DrawFoldoutWithReducedFocusArea(Rect,System.Boolean,GUIContent,GUIStyle,GUIStyle)
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: DrawFoldoutWithReducedFocusArea(Rect, Boolean, GUIContent, GUIStyle, GUIStyle)
  nameWithType: EditorDrawingHelper.DrawFoldoutWithReducedFocusArea(Rect, Boolean, GUIContent, GUIStyle, GUIStyle)
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawFoldoutWithReducedFocusArea(Rect, System.Boolean, GUIContent, GUIStyle, GUIStyle)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawFoldoutWithReducedFocusArea
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 274
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nDraws EditorGUI.Foldout with focus area located only around triangle-shaped button.\n"
  example: []
  syntax:
    content: public static bool DrawFoldoutWithReducedFocusArea(Rect rect, bool currentState, GUIContent foldoutLabel, GUIStyle foldoutStyle = null, GUIStyle labelStyle = null)
    parameters:
    - id: rect
      type: Rect
      description: Rectangle in which foldout view is drawn.
    - id: currentState
      type: System.Boolean
      description: Are contents folded out.
    - id: foldoutLabel
      type: GUIContent
      description: Foldout text.
    - id: foldoutStyle
      type: GUIStyle
      description: Foldout style.
    - id: labelStyle
      type: GUIStyle
    return:
      type: System.Boolean
      description: result of EditorGUI.Foldout (is foldout expanded or not).
    content.vb: Public Shared Function DrawFoldoutWithReducedFocusArea(rect As Rect, currentState As Boolean, foldoutLabel As GUIContent, foldoutStyle As GUIStyle = Nothing, labelStyle As GUIStyle = Nothing) As Boolean
  overload: VRBuilder.Editor.UI.EditorDrawingHelper.DrawFoldoutWithReducedFocusArea*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.GetNextLineRect(Rect)
  commentId: M:VRBuilder.Editor.UI.EditorDrawingHelper.GetNextLineRect(Rect)
  id: GetNextLineRect(Rect)
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: GetNextLineRect(Rect)
  nameWithType: EditorDrawingHelper.GetNextLineRect(Rect)
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.GetNextLineRect(Rect)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetNextLineRect
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 296
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nReturns Rect which is one EditorGUIUtility.singleLineHeight lower and one EditorGUIUtility.singleLineHeight shorter than origin Rect.\n"
  example: []
  syntax:
    content: public static Rect GetNextLineRect(Rect origin)
    parameters:
    - id: origin
      type: Rect
    return:
      type: Rect
    content.vb: Public Shared Function GetNextLineRect(origin As Rect) As Rect
  overload: VRBuilder.Editor.UI.EditorDrawingHelper.GetNextLineRect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.TruncateText(System.String,GUIStyle,System.Single,System.String)
  commentId: M:VRBuilder.Editor.UI.EditorDrawingHelper.TruncateText(System.String,GUIStyle,System.Single,System.String)
  id: TruncateText(System.String,GUIStyle,System.Single,System.String)
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: TruncateText(String, GUIStyle, Single, String)
  nameWithType: EditorDrawingHelper.TruncateText(String, GUIStyle, Single, String)
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.TruncateText(System.String, GUIStyle, System.Single, System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: TruncateText
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 310
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nTruncate given text. Applies `truncatingSequence` at the end of truncated text. Space characters at the end of the line are discarded.\nDesigned for a single-line string, no clue how well would it work with multi-line.\n"
  example: []
  syntax:
    content: public static string TruncateText(string text, GUIStyle style, float maxWidth, string truncatingSequence = "...")
    parameters:
    - id: text
      type: System.String
      description: Initial text.
    - id: style
      type: GUIStyle
      description: Style in which text width is calculated.
    - id: maxWidth
      type: System.Single
      description: Maximal width allowed in pixels.
    - id: truncatingSequence
      type: System.String
      description: Text to be appended at the end of the truncated text.
    return:
      type: System.String
      description: Truncated text that is not wider than maximal width.
    content.vb: Public Shared Function TruncateText(text As String, style As GUIStyle, maxWidth As Single, truncatingSequence As String = "...") As String
  overload: VRBuilder.Editor.UI.EditorDrawingHelper.TruncateText*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawHollowRectangle(Rect,Color,System.Single)
  commentId: M:VRBuilder.Editor.UI.EditorDrawingHelper.DrawHollowRectangle(Rect,Color,System.Single)
  id: DrawHollowRectangle(Rect,Color,System.Single)
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: DrawHollowRectangle(Rect, Color, Single)
  nameWithType: EditorDrawingHelper.DrawHollowRectangle(Rect, Color, Single)
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawHollowRectangle(Rect, Color, System.Single)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawHollowRectangle
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 346
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nDraws a rectangle which is hollow inside.\n"
  example: []
  syntax:
    content: public static void DrawHollowRectangle(Rect rect, Color color, float lineWidth)
    parameters:
    - id: rect
      type: Rect
      description: Rect that defines outer bounds of rectangle.
    - id: color
      type: Color
      description: Color of rectangle borders.
    - id: lineWidth
      type: System.Single
      description: Thickness of the rect border.
    content.vb: Public Shared Sub DrawHollowRectangle(rect As Rect, color As Color, lineWidth As Single)
  overload: VRBuilder.Editor.UI.EditorDrawingHelper.DrawHollowRectangle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawPolyline(System.Collections.Generic.IList{Vector2},Color)
  commentId: M:VRBuilder.Editor.UI.EditorDrawingHelper.DrawPolyline(System.Collections.Generic.IList{Vector2},Color)
  id: DrawPolyline(System.Collections.Generic.IList{Vector2},Color)
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: DrawPolyline(IList<Vector2>, Color)
  nameWithType: EditorDrawingHelper.DrawPolyline(IList<Vector2>, Color)
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawPolyline(System.Collections.Generic.IList<Vector2>, Color)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawPolyline
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 364
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nDraws a curve by connecting the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">points</code> with lines.\n"
  example: []
  syntax:
    content: public static void DrawPolyline(IList<Vector2> points, Color color)
    parameters:
    - id: points
      type: System.Collections.Generic.IList{Vector2}
    - id: color
      type: Color
      description: Color of the curve.
    content.vb: Public Shared Sub DrawPolyline(points As IList(Of Vector2), color As Color)
  overload: VRBuilder.Editor.UI.EditorDrawingHelper.DrawPolyline*
  nameWithType.vb: EditorDrawingHelper.DrawPolyline(IList(Of Vector2), Color)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.Editor.UI.EditorDrawingHelper.DrawPolyline(System.Collections.Generic.IList(Of Vector2), Color)
  name.vb: DrawPolyline(IList(Of Vector2), Color)
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawHorizontalLine(Vector2,System.Single,Color)
  commentId: M:VRBuilder.Editor.UI.EditorDrawingHelper.DrawHorizontalLine(Vector2,System.Single,Color)
  id: DrawHorizontalLine(Vector2,System.Single,Color)
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: DrawHorizontalLine(Vector2, Single, Color)
  nameWithType: EditorDrawingHelper.DrawHorizontalLine(Vector2, Single, Color)
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawHorizontalLine(Vector2, System.Single, Color)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawHorizontalLine
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 389
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nDraws a horizontal line starting at <code data-dev-comment-type=\"paramref\" class=\"paramref\">startPoint</code> with given <code data-dev-comment-type=\"paramref\" class=\"paramref\">length</code>.\n"
  example: []
  syntax:
    content: public static void DrawHorizontalLine(Vector2 startPoint, float length, Color color)
    parameters:
    - id: startPoint
      type: Vector2
      description: Origin of line.
    - id: length
      type: System.Single
      description: Length of line.
    - id: color
      type: Color
      description: Color or line.
    content.vb: Public Shared Sub DrawHorizontalLine(startPoint As Vector2, length As Single, color As Color)
  overload: VRBuilder.Editor.UI.EditorDrawingHelper.DrawHorizontalLine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawVerticalLine(Vector2,System.Single,Color)
  commentId: M:VRBuilder.Editor.UI.EditorDrawingHelper.DrawVerticalLine(Vector2,System.Single,Color)
  id: DrawVerticalLine(Vector2,System.Single,Color)
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: DrawVerticalLine(Vector2, Single, Color)
  nameWithType: EditorDrawingHelper.DrawVerticalLine(Vector2, Single, Color)
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawVerticalLine(Vector2, System.Single, Color)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawVerticalLine
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 400
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nDraws a vertical line starting at <code data-dev-comment-type=\"paramref\" class=\"paramref\">startPoint</code> with given <code data-dev-comment-type=\"paramref\" class=\"paramref\">length</code>.\n"
  example: []
  syntax:
    content: public static void DrawVerticalLine(Vector2 startPoint, float length, Color color)
    parameters:
    - id: startPoint
      type: Vector2
      description: Origin of line.
    - id: length
      type: System.Single
      description: Length of line.
    - id: color
      type: Color
      description: Color or line.
    content.vb: Public Shared Sub DrawVerticalLine(startPoint As Vector2, length As Single, color As Color)
  overload: VRBuilder.Editor.UI.EditorDrawingHelper.DrawVerticalLine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawTexture(Rect,Texture,Color)
  commentId: M:VRBuilder.Editor.UI.EditorDrawingHelper.DrawTexture(Rect,Texture,Color)
  id: DrawTexture(Rect,Texture,Color)
  parent: VRBuilder.Editor.UI.EditorDrawingHelper
  langs:
  - csharp
  - vb
  name: DrawTexture(Rect, Texture, Color)
  nameWithType: EditorDrawingHelper.DrawTexture(Rect, Texture, Color)
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawTexture(Rect, Texture, Color)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/EditorDrawingHelper.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawTexture
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/EditorDrawingHelper.cs
    startLine: 411
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nDraws a texture in a specific color\n"
  example: []
  syntax:
    content: public static void DrawTexture(Rect iconRect, Texture texture, Color color)
    parameters:
    - id: iconRect
      type: Rect
      description: Position and size of the texture.
    - id: texture
      type: Texture
      description: The texture to paint.
    - id: color
      type: Color
      description: The color it should be painted in.
    content.vb: Public Shared Sub DrawTexture(iconRect As Rect, texture As Texture, color As Color)
  overload: VRBuilder.Editor.UI.EditorDrawingHelper.DrawTexture*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VRBuilder.Editor.UI
  commentId: N:VRBuilder.Editor.UI
  name: VRBuilder.Editor.UI
  nameWithType: VRBuilder.Editor.UI
  fullName: VRBuilder.Editor.UI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.SingleLineHeight*
  commentId: Overload:VRBuilder.Editor.UI.EditorDrawingHelper.SingleLineHeight
  name: SingleLineHeight
  nameWithType: EditorDrawingHelper.SingleLineHeight
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.SingleLineHeight
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.HeaderLineHeight*
  commentId: Overload:VRBuilder.Editor.UI.EditorDrawingHelper.HeaderLineHeight
  name: HeaderLineHeight
  nameWithType: EditorDrawingHelper.HeaderLineHeight
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.HeaderLineHeight
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.CalculateAddButtonRect*
  commentId: Overload:VRBuilder.Editor.UI.EditorDrawingHelper.CalculateAddButtonRect
  name: CalculateAddButtonRect
  nameWithType: EditorDrawingHelper.CalculateAddButtonRect
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.CalculateAddButtonRect
- uid: Rect
  isExternal: true
  name: Rect
  nameWithType: Rect
  fullName: Rect
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawAddButton*
  commentId: Overload:VRBuilder.Editor.UI.EditorDrawingHelper.DrawAddButton
  name: DrawAddButton
  nameWithType: EditorDrawingHelper.DrawAddButton
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawAddButton
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawAddButton(Rect@,System.String)
  commentId: M:VRBuilder.Editor.UI.EditorDrawingHelper.DrawAddButton(Rect@,System.String)
  isExternal: true
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawPasteButton*
  commentId: Overload:VRBuilder.Editor.UI.EditorDrawingHelper.DrawPasteButton
  name: DrawPasteButton
  nameWithType: EditorDrawingHelper.DrawPasteButton
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawPasteButton
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawPasteButton(Rect@)
  commentId: M:VRBuilder.Editor.UI.EditorDrawingHelper.DrawPasteButton(Rect@)
  isExternal: true
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawHelpButton*
  commentId: Overload:VRBuilder.Editor.UI.EditorDrawingHelper.DrawHelpButton
  name: DrawHelpButton
  nameWithType: EditorDrawingHelper.DrawHelpButton
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawHelpButton
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawCircle*
  commentId: Overload:VRBuilder.Editor.UI.EditorDrawingHelper.DrawCircle
  name: DrawCircle
  nameWithType: EditorDrawingHelper.DrawCircle
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawCircle
- uid: Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Vector2
- uid: Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Color
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawArrow*
  commentId: Overload:VRBuilder.Editor.UI.EditorDrawingHelper.DrawArrow
  name: DrawArrow
  nameWithType: EditorDrawingHelper.DrawArrow
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawArrow
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawTriangle*
  commentId: Overload:VRBuilder.Editor.UI.EditorDrawingHelper.DrawTriangle
  name: DrawTriangle
  nameWithType: EditorDrawingHelper.DrawTriangle
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawTriangle
- uid: System.Collections.Generic.IList{Vector2}
  commentId: T:System.Collections.Generic.IList{Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Vector2>
  nameWithType: IList<Vector2>
  fullName: System.Collections.Generic.IList<Vector2>
  nameWithType.vb: IList(Of Vector2)
  fullName.vb: System.Collections.Generic.IList(Of Vector2)
  name.vb: IList(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Vector2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Vector2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawRect*
  commentId: Overload:VRBuilder.Editor.UI.EditorDrawingHelper.DrawRect
  name: DrawRect
  nameWithType: EditorDrawingHelper.DrawRect
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawRect
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawRoundedRect*
  commentId: Overload:VRBuilder.Editor.UI.EditorDrawingHelper.DrawRoundedRect
  name: DrawRoundedRect
  nameWithType: EditorDrawingHelper.DrawRoundedRect
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawRoundedRect
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawFoldoutWithReducedFocusArea*
  commentId: Overload:VRBuilder.Editor.UI.EditorDrawingHelper.DrawFoldoutWithReducedFocusArea
  name: DrawFoldoutWithReducedFocusArea
  nameWithType: EditorDrawingHelper.DrawFoldoutWithReducedFocusArea
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawFoldoutWithReducedFocusArea
- uid: GUIContent
  isExternal: true
  name: GUIContent
  nameWithType: GUIContent
  fullName: GUIContent
- uid: GUIStyle
  isExternal: true
  name: GUIStyle
  nameWithType: GUIStyle
  fullName: GUIStyle
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.GetNextLineRect*
  commentId: Overload:VRBuilder.Editor.UI.EditorDrawingHelper.GetNextLineRect
  name: GetNextLineRect
  nameWithType: EditorDrawingHelper.GetNextLineRect
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.GetNextLineRect
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.TruncateText*
  commentId: Overload:VRBuilder.Editor.UI.EditorDrawingHelper.TruncateText
  name: TruncateText
  nameWithType: EditorDrawingHelper.TruncateText
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.TruncateText
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawHollowRectangle*
  commentId: Overload:VRBuilder.Editor.UI.EditorDrawingHelper.DrawHollowRectangle
  name: DrawHollowRectangle
  nameWithType: EditorDrawingHelper.DrawHollowRectangle
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawHollowRectangle
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawPolyline*
  commentId: Overload:VRBuilder.Editor.UI.EditorDrawingHelper.DrawPolyline
  name: DrawPolyline
  nameWithType: EditorDrawingHelper.DrawPolyline
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawPolyline
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawHorizontalLine*
  commentId: Overload:VRBuilder.Editor.UI.EditorDrawingHelper.DrawHorizontalLine
  name: DrawHorizontalLine
  nameWithType: EditorDrawingHelper.DrawHorizontalLine
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawHorizontalLine
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawVerticalLine*
  commentId: Overload:VRBuilder.Editor.UI.EditorDrawingHelper.DrawVerticalLine
  name: DrawVerticalLine
  nameWithType: EditorDrawingHelper.DrawVerticalLine
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawVerticalLine
- uid: VRBuilder.Editor.UI.EditorDrawingHelper.DrawTexture*
  commentId: Overload:VRBuilder.Editor.UI.EditorDrawingHelper.DrawTexture
  name: DrawTexture
  nameWithType: EditorDrawingHelper.DrawTexture
  fullName: VRBuilder.Editor.UI.EditorDrawingHelper.DrawTexture
- uid: Texture
  isExternal: true
  name: Texture
  nameWithType: Texture
  fullName: Texture
