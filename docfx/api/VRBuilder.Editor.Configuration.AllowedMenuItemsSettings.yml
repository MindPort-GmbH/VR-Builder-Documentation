### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings
  commentId: T:VRBuilder.Editor.Configuration.AllowedMenuItemsSettings
  id: AllowedMenuItemsSettings
  parent: VRBuilder.Editor.Configuration
  children:
  - VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.#ctor
  - VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.#ctor(System.Collections.Generic.IDictionary{System.String,System.Boolean},System.Collections.Generic.IDictionary{System.String,System.Boolean})
  - VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.GetBehaviorMenuOptions
  - VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.GetConditionMenuOptions
  - VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.Load
  - VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.RefreshMenuOptions
  - VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.Save(VRBuilder.Editor.Configuration.AllowedMenuItemsSettings)
  - VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.SerializedBehaviorSelections
  - VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.SerializedConditionSelections
  langs:
  - csharp
  - vb
  name: AllowedMenuItemsSettings
  nameWithType: AllowedMenuItemsSettings
  fullName: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings
  type: Class
  source:
    remote:
      path: Source/Core/Editor/Configuration/AllowedMenuItemsSettings.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AllowedMenuItemsSettings
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/Configuration/AllowedMenuItemsSettings.cs
    startLine: 26
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.Configuration
  summary: "\nConfiguration class for menu items.\nIt manages whether a behavior or condition should be displayed in the Step Inspector or not.\nCan be serialized.\n"
  example: []
  syntax:
    content: >-
      [DataContract(IsReference = true)]

      public class AllowedMenuItemsSettings
    content.vb: >-
      <DataContract(IsReference:=True)>

      Public Class AllowedMenuItemsSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.SerializedBehaviorSelections
  commentId: F:VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.SerializedBehaviorSelections
  id: SerializedBehaviorSelections
  parent: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings
  langs:
  - csharp
  - vb
  name: SerializedBehaviorSelections
  nameWithType: AllowedMenuItemsSettings.SerializedBehaviorSelections
  fullName: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.SerializedBehaviorSelections
  type: Field
  source:
    remote:
      path: Source/Core/Editor/Configuration/AllowedMenuItemsSettings.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SerializedBehaviorSelections
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/Configuration/AllowedMenuItemsSettings.cs
    startLine: 33
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.Configuration
  syntax:
    content: >-
      [DataMember]

      public IDictionary<string, bool> SerializedBehaviorSelections
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Boolean}
    content.vb: >-
      <DataMember>

      Public SerializedBehaviorSelections As IDictionary(Of String, Boolean)
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.SerializedConditionSelections
  commentId: F:VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.SerializedConditionSelections
  id: SerializedConditionSelections
  parent: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings
  langs:
  - csharp
  - vb
  name: SerializedConditionSelections
  nameWithType: AllowedMenuItemsSettings.SerializedConditionSelections
  fullName: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.SerializedConditionSelections
  type: Field
  source:
    remote:
      path: Source/Core/Editor/Configuration/AllowedMenuItemsSettings.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SerializedConditionSelections
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/Configuration/AllowedMenuItemsSettings.cs
    startLine: 36
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.Configuration
  syntax:
    content: >-
      [DataMember]

      public IDictionary<string, bool> SerializedConditionSelections
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Boolean}
    content.vb: >-
      <DataMember>

      Public SerializedConditionSelections As IDictionary(Of String, Boolean)
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.#ctor
  commentId: M:VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.#ctor
  id: '#ctor'
  parent: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings
  langs:
  - csharp
  - vb
  name: AllowedMenuItemsSettings()
  nameWithType: AllowedMenuItemsSettings.AllowedMenuItemsSettings()
  fullName: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.AllowedMenuItemsSettings()
  type: Constructor
  source:
    remote:
      path: Source/Core/Editor/Configuration/AllowedMenuItemsSettings.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/Configuration/AllowedMenuItemsSettings.cs
    startLine: 38
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.Configuration
  syntax:
    content: >-
      [JsonConstructor]

      public AllowedMenuItemsSettings()
    content.vb: >-
      <JsonConstructor>

      Public Sub New
  overload: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.#ctor*
  attributes:
  - type: Newtonsoft.Json.JsonConstructorAttribute
    ctor: Newtonsoft.Json.JsonConstructorAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.#ctor(System.Collections.Generic.IDictionary{System.String,System.Boolean},System.Collections.Generic.IDictionary{System.String,System.Boolean})
  commentId: M:VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.#ctor(System.Collections.Generic.IDictionary{System.String,System.Boolean},System.Collections.Generic.IDictionary{System.String,System.Boolean})
  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.Boolean},System.Collections.Generic.IDictionary{System.String,System.Boolean})'
  parent: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings
  langs:
  - csharp
  - vb
  name: AllowedMenuItemsSettings(IDictionary<String, Boolean>, IDictionary<String, Boolean>)
  nameWithType: AllowedMenuItemsSettings.AllowedMenuItemsSettings(IDictionary<String, Boolean>, IDictionary<String, Boolean>)
  fullName: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.AllowedMenuItemsSettings(System.Collections.Generic.IDictionary<System.String, System.Boolean>, System.Collections.Generic.IDictionary<System.String, System.Boolean>)
  type: Constructor
  source:
    remote:
      path: Source/Core/Editor/Configuration/AllowedMenuItemsSettings.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/Configuration/AllowedMenuItemsSettings.cs
    startLine: 43
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.Configuration
  syntax:
    content: public AllowedMenuItemsSettings(IDictionary<string, bool> behaviors, IDictionary<string, bool> serializedConditions)
    parameters:
    - id: behaviors
      type: System.Collections.Generic.IDictionary{System.String,System.Boolean}
    - id: serializedConditions
      type: System.Collections.Generic.IDictionary{System.String,System.Boolean}
    content.vb: Public Sub New(behaviors As IDictionary(Of String, Boolean), serializedConditions As IDictionary(Of String, Boolean))
  overload: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.#ctor*
  nameWithType.vb: AllowedMenuItemsSettings.AllowedMenuItemsSettings(IDictionary(Of String, Boolean), IDictionary(Of String, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.AllowedMenuItemsSettings(System.Collections.Generic.IDictionary(Of System.String, System.Boolean), System.Collections.Generic.IDictionary(Of System.String, System.Boolean))
  name.vb: AllowedMenuItemsSettings(IDictionary(Of String, Boolean), IDictionary(Of String, Boolean))
- uid: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.GetBehaviorMenuOptions
  commentId: M:VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.GetBehaviorMenuOptions
  id: GetBehaviorMenuOptions
  parent: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings
  langs:
  - csharp
  - vb
  name: GetBehaviorMenuOptions()
  nameWithType: AllowedMenuItemsSettings.GetBehaviorMenuOptions()
  fullName: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.GetBehaviorMenuOptions()
  type: Method
  source:
    remote:
      path: Source/Core/Editor/Configuration/AllowedMenuItemsSettings.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetBehaviorMenuOptions
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/Configuration/AllowedMenuItemsSettings.cs
    startLine: 54
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.Configuration
  summary: "\nReturns all active behavior menu items.\n"
  example: []
  syntax:
    content: public IEnumerable<MenuItem<IBehavior>> GetBehaviorMenuOptions()
    return:
      type: System.Collections.Generic.IEnumerable{VRBuilder.Editor.UI.StepInspector.Menu.MenuItem{VRBuilder.Core.Behaviors.IBehavior}}
    content.vb: Public Function GetBehaviorMenuOptions As IEnumerable(Of MenuItem(Of IBehavior))
  overload: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.GetBehaviorMenuOptions*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.GetConditionMenuOptions
  commentId: M:VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.GetConditionMenuOptions
  id: GetConditionMenuOptions
  parent: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings
  langs:
  - csharp
  - vb
  name: GetConditionMenuOptions()
  nameWithType: AllowedMenuItemsSettings.GetConditionMenuOptions()
  fullName: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.GetConditionMenuOptions()
  type: Method
  source:
    remote:
      path: Source/Core/Editor/Configuration/AllowedMenuItemsSettings.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetConditionMenuOptions
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/Configuration/AllowedMenuItemsSettings.cs
    startLine: 70
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.Configuration
  summary: "\nReturns all active condition menu items.\n"
  example: []
  syntax:
    content: public IEnumerable<MenuItem<ICondition>> GetConditionMenuOptions()
    return:
      type: System.Collections.Generic.IEnumerable{VRBuilder.Editor.UI.StepInspector.Menu.MenuItem{VRBuilder.Core.Conditions.ICondition}}
    content.vb: Public Function GetConditionMenuOptions As IEnumerable(Of MenuItem(Of ICondition))
  overload: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.GetConditionMenuOptions*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.RefreshMenuOptions
  commentId: M:VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.RefreshMenuOptions
  id: RefreshMenuOptions
  parent: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings
  langs:
  - csharp
  - vb
  name: RefreshMenuOptions()
  nameWithType: AllowedMenuItemsSettings.RefreshMenuOptions()
  fullName: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.RefreshMenuOptions()
  type: Method
  source:
    remote:
      path: Source/Core/Editor/Configuration/AllowedMenuItemsSettings.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RefreshMenuOptions
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/Configuration/AllowedMenuItemsSettings.cs
    startLine: 83
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.Configuration
  syntax:
    content: public async void RefreshMenuOptions()
    content.vb: Public Sub RefreshMenuOptions
  overload: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.RefreshMenuOptions*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.Save(VRBuilder.Editor.Configuration.AllowedMenuItemsSettings)
  commentId: M:VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.Save(VRBuilder.Editor.Configuration.AllowedMenuItemsSettings)
  id: Save(VRBuilder.Editor.Configuration.AllowedMenuItemsSettings)
  parent: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings
  langs:
  - csharp
  - vb
  name: Save(AllowedMenuItemsSettings)
  nameWithType: AllowedMenuItemsSettings.Save(AllowedMenuItemsSettings)
  fullName: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.Save(VRBuilder.Editor.Configuration.AllowedMenuItemsSettings)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/Configuration/AllowedMenuItemsSettings.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Save
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/Configuration/AllowedMenuItemsSettings.cs
    startLine: 96
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.Configuration
  summary: "\nSerializes the <code data-dev-comment-type=\"paramref\" class=\"paramref\">settings</code> object and saves it into a configuration file at a default path.\n"
  example: []
  syntax:
    content: public static bool Save(AllowedMenuItemsSettings settings)
    parameters:
    - id: settings
      type: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings
    return:
      type: System.Boolean
    content.vb: Public Shared Function Save(settings As AllowedMenuItemsSettings) As Boolean
  overload: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.Save*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: Thrown when parameter is null.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.Load
  commentId: M:VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.Load
  id: Load
  parent: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings
  langs:
  - csharp
  - vb
  name: Load()
  nameWithType: AllowedMenuItemsSettings.Load()
  fullName: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.Load()
  type: Method
  source:
    remote:
      path: Source/Core/Editor/Configuration/AllowedMenuItemsSettings.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Load
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/Configuration/AllowedMenuItemsSettings.cs
    startLine: 160
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.Configuration
  summary: "\nLoads and returns the <xref href=\"VRBuilder.Editor.Configuration.AllowedMenuItemsSettings\" data-throw-if-not-resolved=\"false\"></xref> object from the default configuration file location.\nIf the <see cref=\"!:AllowedMenuItemsSettingsAssetPath\"></see> in the editor configuration is empty or null,\nit returns an empty <xref href=\"VRBuilder.Editor.Configuration.AllowedMenuItemsSettings\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  example: []
  syntax:
    content: public static AllowedMenuItemsSettings Load()
    return:
      type: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings
    content.vb: Public Shared Function Load As AllowedMenuItemsSettings
  overload: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.Load*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VRBuilder.Editor.Configuration
  commentId: N:VRBuilder.Editor.Configuration
  name: VRBuilder.Editor.Configuration
  nameWithType: VRBuilder.Editor.Configuration
  fullName: VRBuilder.Editor.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IDictionary{System.String,System.Boolean}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Boolean}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Boolean>
  nameWithType: IDictionary<String, Boolean>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Boolean>
  nameWithType.vb: IDictionary(Of String, Boolean)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Boolean)
  name.vb: IDictionary(Of String, Boolean)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.#ctor*
  commentId: Overload:VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.#ctor
  name: AllowedMenuItemsSettings
  nameWithType: AllowedMenuItemsSettings.AllowedMenuItemsSettings
  fullName: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.AllowedMenuItemsSettings
- uid: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.GetBehaviorMenuOptions*
  commentId: Overload:VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.GetBehaviorMenuOptions
  name: GetBehaviorMenuOptions
  nameWithType: AllowedMenuItemsSettings.GetBehaviorMenuOptions
  fullName: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.GetBehaviorMenuOptions
- uid: System.Collections.Generic.IEnumerable{VRBuilder.Editor.UI.StepInspector.Menu.MenuItem{VRBuilder.Core.Behaviors.IBehavior}}
  commentId: T:System.Collections.Generic.IEnumerable{VRBuilder.Editor.UI.StepInspector.Menu.MenuItem{VRBuilder.Core.Behaviors.IBehavior}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<MenuItem<IBehavior>>
  nameWithType: IEnumerable<MenuItem<IBehavior>>
  fullName: System.Collections.Generic.IEnumerable<VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>>
  nameWithType.vb: IEnumerable(Of MenuItem(Of IBehavior))
  fullName.vb: System.Collections.Generic.IEnumerable(Of VRBuilder.Editor.UI.StepInspector.Menu.MenuItem(Of VRBuilder.Core.Behaviors.IBehavior))
  name.vb: IEnumerable(Of MenuItem(Of IBehavior))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1
    name: MenuItem
    nameWithType: MenuItem
    fullName: VRBuilder.Editor.UI.StepInspector.Menu.MenuItem
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Behaviors.IBehavior
    name: IBehavior
    nameWithType: IBehavior
    fullName: VRBuilder.Core.Behaviors.IBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1
    name: MenuItem
    nameWithType: MenuItem
    fullName: VRBuilder.Editor.UI.StepInspector.Menu.MenuItem
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Behaviors.IBehavior
    name: IBehavior
    nameWithType: IBehavior
    fullName: VRBuilder.Core.Behaviors.IBehavior
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.GetConditionMenuOptions*
  commentId: Overload:VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.GetConditionMenuOptions
  name: GetConditionMenuOptions
  nameWithType: AllowedMenuItemsSettings.GetConditionMenuOptions
  fullName: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.GetConditionMenuOptions
- uid: System.Collections.Generic.IEnumerable{VRBuilder.Editor.UI.StepInspector.Menu.MenuItem{VRBuilder.Core.Conditions.ICondition}}
  commentId: T:System.Collections.Generic.IEnumerable{VRBuilder.Editor.UI.StepInspector.Menu.MenuItem{VRBuilder.Core.Conditions.ICondition}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<MenuItem<ICondition>>
  nameWithType: IEnumerable<MenuItem<ICondition>>
  fullName: System.Collections.Generic.IEnumerable<VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>>
  nameWithType.vb: IEnumerable(Of MenuItem(Of ICondition))
  fullName.vb: System.Collections.Generic.IEnumerable(Of VRBuilder.Editor.UI.StepInspector.Menu.MenuItem(Of VRBuilder.Core.Conditions.ICondition))
  name.vb: IEnumerable(Of MenuItem(Of ICondition))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1
    name: MenuItem
    nameWithType: MenuItem
    fullName: VRBuilder.Editor.UI.StepInspector.Menu.MenuItem
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Conditions.ICondition
    name: ICondition
    nameWithType: ICondition
    fullName: VRBuilder.Core.Conditions.ICondition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1
    name: MenuItem
    nameWithType: MenuItem
    fullName: VRBuilder.Editor.UI.StepInspector.Menu.MenuItem
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Conditions.ICondition
    name: ICondition
    nameWithType: ICondition
    fullName: VRBuilder.Core.Conditions.ICondition
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.RefreshMenuOptions*
  commentId: Overload:VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.RefreshMenuOptions
  name: RefreshMenuOptions
  nameWithType: AllowedMenuItemsSettings.RefreshMenuOptions
  fullName: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.RefreshMenuOptions
- uid: System.NullReferenceException
  commentId: T:System.NullReferenceException
  isExternal: true
- uid: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.Save*
  commentId: Overload:VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.Save
  name: Save
  nameWithType: AllowedMenuItemsSettings.Save
  fullName: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.Save
- uid: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings
  commentId: T:VRBuilder.Editor.Configuration.AllowedMenuItemsSettings
  parent: VRBuilder.Editor.Configuration
  name: AllowedMenuItemsSettings
  nameWithType: AllowedMenuItemsSettings
  fullName: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.Load*
  commentId: Overload:VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.Load
  name: Load
  nameWithType: AllowedMenuItemsSettings.Load
  fullName: VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.Load
