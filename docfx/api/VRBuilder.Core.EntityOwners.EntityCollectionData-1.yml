### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1
  commentId: T:VRBuilder.Core.EntityOwners.EntityCollectionData`1
  id: EntityCollectionData`1
  parent: VRBuilder.Core.EntityOwners
  children:
  - VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
  - VRBuilder.Core.EntityOwners.EntityCollectionData`1.Metadata
  - VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  langs:
  - csharp
  - vb
  name: EntityCollectionData<TEntity>
  nameWithType: EntityCollectionData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/EntityOwners/Collection/EntityCollectionData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EntityCollectionData
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/EntityOwners/Collection/EntityCollectionData.cs
    startLine: 12
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.EntityOwners
  summary: "\nA base class for data classes that are collections of other entities.\n"
  example: []
  syntax:
    content: 'public abstract class EntityCollectionData<TEntity> : IEntityCollectionData<TEntity>, IEntityCollectionData, IData where TEntity : IEntity'
    typeParameters:
    - id: TEntity
    content.vb: >-
      Public MustInherit Class EntityCollectionData(Of TEntity As IEntity)
          Implements IEntityCollectionData(Of TEntity), IEntityCollectionData, IData
  inheritance:
  - System.Object
  derivedClasses:
  - VRBuilder.Core.BehaviorCollection.EntityData
  - VRBuilder.Core.Behaviors.BehaviorSequence.EntityData
  - VRBuilder.Core.Behaviors.ExecuteChapterBehavior.EntityData
  - VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData
  - VRBuilder.Core.Chapter.EntityData
  - VRBuilder.Core.Process.EntityData
  - VRBuilder.Core.Step.EntityData
  - VRBuilder.Core.Transition.EntityData
  - VRBuilder.Core.TransitionCollection.EntityData
  implements:
  - VRBuilder.Core.EntityOwners.IEntityCollectionData{{TEntity}}
  - VRBuilder.Core.EntityOwners.IEntityCollectionData
  - VRBuilder.Core.IData
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: EntityCollectionData(Of TEntity)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity)
  name.vb: EntityCollectionData(Of TEntity)
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.Metadata
  commentId: P:VRBuilder.Core.EntityOwners.EntityCollectionData`1.Metadata
  id: Metadata
  parent: VRBuilder.Core.EntityOwners.EntityCollectionData`1
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: EntityCollectionData<TEntity>.Metadata
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.Metadata
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/EntityOwners/Collection/EntityCollectionData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Metadata
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/EntityOwners/Collection/EntityCollectionData.cs
    startLine: 15
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.EntityOwners
  summary: "\nReference to this object&apos;s <xref href=\"VRBuilder.Core.IMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Metadata Metadata { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.Metadata
    content.vb: Public Property Metadata As Metadata
  overload: VRBuilder.Core.EntityOwners.EntityCollectionData`1.Metadata*
  implements:
  - VRBuilder.Core.IData.Metadata
  nameWithType.vb: EntityCollectionData(Of TEntity).Metadata
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).Metadata
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
  id: GetChildren
  parent: VRBuilder.Core.EntityOwners.EntityCollectionData`1
  langs:
  - csharp
  - vb
  name: GetChildren()
  nameWithType: EntityCollectionData<TEntity>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.GetChildren()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/EntityOwners/Collection/EntityCollectionData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetChildren
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/EntityOwners/Collection/EntityCollectionData.cs
    startLine: 18
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.EntityOwners
  example: []
  syntax:
    content: public abstract IEnumerable<TEntity> GetChildren()
    return:
      type: System.Collections.Generic.IEnumerable{{TEntity}}
    content.vb: Public MustOverride Function GetChildren As IEnumerable(Of TEntity)
  overload: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren*
  implements:
  - VRBuilder.Core.EntityOwners.IEntityCollectionData{{TEntity}}.GetChildren
  nameWithType.vb: EntityCollectionData(Of TEntity).GetChildren()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).GetChildren()
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  id: VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  isEii: true
  parent: VRBuilder.Core.EntityOwners.EntityCollectionData`1
  langs:
  - csharp
  - vb
  name: IEntityCollectionData.GetChildren()
  nameWithType: EntityCollectionData<TEntity>.IEntityCollectionData.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/EntityOwners/Collection/EntityCollectionData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/EntityOwners/Collection/EntityCollectionData.cs
    startLine: 21
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.EntityOwners
  example: []
  syntax:
    content: IEnumerable<IEntity> IEntityCollectionData.GetChildren()
    return:
      type: System.Collections.Generic.IEnumerable{VRBuilder.Core.IEntity}
    content.vb: Function VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren As IEnumerable(Of IEntity) Implements IEntityCollectionData.GetChildren
  overload: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren*
  implements:
  - VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  nameWithType.vb: EntityCollectionData(Of TEntity).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  name.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
references:
- uid: VRBuilder.Core.EntityOwners
  commentId: N:VRBuilder.Core.EntityOwners
  name: VRBuilder.Core.EntityOwners
  nameWithType: VRBuilder.Core.EntityOwners
  fullName: VRBuilder.Core.EntityOwners
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData{{TEntity}}
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData{`0}
  parent: VRBuilder.Core.EntityOwners
  definition: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  name: IEntityCollectionData<TEntity>
  nameWithType: IEntityCollectionData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>
  nameWithType.vb: IEntityCollectionData(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity)
  name.vb: IEntityCollectionData(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData
  parent: VRBuilder.Core.EntityOwners
  name: IEntityCollectionData
  nameWithType: IEntityCollectionData
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
- uid: VRBuilder.Core.IData
  commentId: T:VRBuilder.Core.IData
  parent: VRBuilder.Core
  name: IData
  nameWithType: IData
  fullName: VRBuilder.Core.IData
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  name: IEntityCollectionData<TEntity>
  nameWithType: IEntityCollectionData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>
  nameWithType.vb: IEntityCollectionData(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity)
  name.vb: IEntityCollectionData(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.Metadata*
  commentId: Overload:VRBuilder.Core.EntityOwners.EntityCollectionData`1.Metadata
  name: Metadata
  nameWithType: EntityCollectionData<TEntity>.Metadata
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.Metadata
  nameWithType.vb: EntityCollectionData(Of TEntity).Metadata
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).Metadata
- uid: VRBuilder.Core.IData.Metadata
  commentId: P:VRBuilder.Core.IData.Metadata
  parent: VRBuilder.Core.IData
  name: Metadata
  nameWithType: IData.Metadata
  fullName: VRBuilder.Core.IData.Metadata
- uid: VRBuilder.Core.Metadata
  commentId: T:VRBuilder.Core.Metadata
  parent: VRBuilder.Core
  name: Metadata
  nameWithType: Metadata
  fullName: VRBuilder.Core.Metadata
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren*
  commentId: Overload:VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
  name: GetChildren
  nameWithType: EntityCollectionData<TEntity>.GetChildren
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.GetChildren
  nameWithType.vb: EntityCollectionData(Of TEntity).GetChildren
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).GetChildren
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData{{TEntity}}.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.IEntityCollectionData{`0}.GetChildren
  parent: VRBuilder.Core.EntityOwners.IEntityCollectionData{{TEntity}}
  definition: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: IEntityCollectionData<TEntity>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren()
  nameWithType.vb: IEntityCollectionData(Of TEntity).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData<TEntity>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData(Of TEntity).GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TEntity}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TEntity>
  nameWithType: IEnumerable<TEntity>
  fullName: System.Collections.Generic.IEnumerable<TEntity>
  nameWithType.vb: IEnumerable(Of TEntity)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TEntity)
  name.vb: IEnumerable(Of TEntity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: IEntityCollectionData<TEntity>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren()
  nameWithType.vb: IEntityCollectionData(Of TEntity).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData<TEntity>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData(Of TEntity).GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren*
  commentId: Overload:VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  name: IEntityCollectionData.GetChildren
  nameWithType: EntityCollectionData<TEntity>.IEntityCollectionData.GetChildren
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  nameWithType.vb: EntityCollectionData(Of TEntity).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  name.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  parent: VRBuilder.Core.EntityOwners.IEntityCollectionData
  name: GetChildren()
  nameWithType: IEntityCollectionData.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData.GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData.GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VRBuilder.Core.IEntity}
  commentId: T:System.Collections.Generic.IEnumerable{VRBuilder.Core.IEntity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IEntity>
  nameWithType: IEnumerable<IEntity>
  fullName: System.Collections.Generic.IEnumerable<VRBuilder.Core.IEntity>
  nameWithType.vb: IEnumerable(Of IEntity)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VRBuilder.Core.IEntity)
  name.vb: IEnumerable(Of IEntity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IEntity
    name: IEntity
    nameWithType: IEntity
    fullName: VRBuilder.Core.IEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IEntity
    name: IEntity
    nameWithType: IEntity
    fullName: VRBuilder.Core.IEntity
  - name: )
    nameWithType: )
    fullName: )
