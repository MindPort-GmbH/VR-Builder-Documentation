### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Configuration.SceneConfiguration
  commentId: T:VRBuilder.Core.Configuration.SceneConfiguration
  id: SceneConfiguration
  parent: VRBuilder.Core.Configuration
  children:
  - VRBuilder.Core.Configuration.SceneConfiguration.AddWhitelistAssemblies(System.Collections.Generic.IEnumerable{System.String})
  - VRBuilder.Core.Configuration.SceneConfiguration.DefaultConfettiPrefab
  - VRBuilder.Core.Configuration.SceneConfiguration.ExtensionAssembliesWhitelist
  - VRBuilder.Core.Configuration.SceneConfiguration.IsAllowedInAssembly(System.Type,System.String)
  langs:
  - csharp
  - vb
  name: SceneConfiguration
  nameWithType: SceneConfiguration
  fullName: VRBuilder.Core.Configuration.SceneConfiguration
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Configuration/SceneConfiguration.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SceneConfiguration
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/SceneConfiguration.cs
    startLine: 10
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: "\nHandles configuration specific to this scene.\n"
  example: []
  syntax:
    content: 'public class SceneConfiguration : MonoBehaviour, ISceneConfiguration'
    content.vb: >-
      Public Class SceneConfiguration

          Inherits MonoBehaviour

          Implements ISceneConfiguration
  inheritance:
  - System.Object
  implements:
  - VRBuilder.Core.Configuration.ISceneConfiguration
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.Configuration.SceneConfiguration.ExtensionAssembliesWhitelist
  commentId: P:VRBuilder.Core.Configuration.SceneConfiguration.ExtensionAssembliesWhitelist
  id: ExtensionAssembliesWhitelist
  parent: VRBuilder.Core.Configuration.SceneConfiguration
  langs:
  - csharp
  - vb
  name: ExtensionAssembliesWhitelist
  nameWithType: SceneConfiguration.ExtensionAssembliesWhitelist
  fullName: VRBuilder.Core.Configuration.SceneConfiguration.ExtensionAssembliesWhitelist
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Configuration/SceneConfiguration.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ExtensionAssembliesWhitelist
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/SceneConfiguration.cs
    startLine: 21
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  example: []
  syntax:
    content: public IEnumerable<string> ExtensionAssembliesWhitelist { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public ReadOnly Property ExtensionAssembliesWhitelist As IEnumerable(Of String)
  overload: VRBuilder.Core.Configuration.SceneConfiguration.ExtensionAssembliesWhitelist*
  implements:
  - VRBuilder.Core.Configuration.ISceneConfiguration.ExtensionAssembliesWhitelist
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.Configuration.SceneConfiguration.DefaultConfettiPrefab
  commentId: P:VRBuilder.Core.Configuration.SceneConfiguration.DefaultConfettiPrefab
  id: DefaultConfettiPrefab
  parent: VRBuilder.Core.Configuration.SceneConfiguration
  langs:
  - csharp
  - vb
  name: DefaultConfettiPrefab
  nameWithType: SceneConfiguration.DefaultConfettiPrefab
  fullName: VRBuilder.Core.Configuration.SceneConfiguration.DefaultConfettiPrefab
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Configuration/SceneConfiguration.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DefaultConfettiPrefab
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/SceneConfiguration.cs
    startLine: 24
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  example: []
  syntax:
    content: public string DefaultConfettiPrefab { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DefaultConfettiPrefab As String
  overload: VRBuilder.Core.Configuration.SceneConfiguration.DefaultConfettiPrefab*
  implements:
  - VRBuilder.Core.Configuration.ISceneConfiguration.DefaultConfettiPrefab
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Configuration.SceneConfiguration.IsAllowedInAssembly(System.Type,System.String)
  commentId: M:VRBuilder.Core.Configuration.SceneConfiguration.IsAllowedInAssembly(System.Type,System.String)
  id: IsAllowedInAssembly(System.Type,System.String)
  parent: VRBuilder.Core.Configuration.SceneConfiguration
  langs:
  - csharp
  - vb
  name: IsAllowedInAssembly(Type, String)
  nameWithType: SceneConfiguration.IsAllowedInAssembly(Type, String)
  fullName: VRBuilder.Core.Configuration.SceneConfiguration.IsAllowedInAssembly(System.Type, System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/SceneConfiguration.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsAllowedInAssembly
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/SceneConfiguration.cs
    startLine: 31
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  example: []
  syntax:
    content: public bool IsAllowedInAssembly(Type extensionType, string assemblyName)
    parameters:
    - id: extensionType
      type: System.Type
    - id: assemblyName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function IsAllowedInAssembly(extensionType As Type, assemblyName As String) As Boolean
  overload: VRBuilder.Core.Configuration.SceneConfiguration.IsAllowedInAssembly*
  implements:
  - VRBuilder.Core.Configuration.ISceneConfiguration.IsAllowedInAssembly(System.Type,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Configuration.SceneConfiguration.AddWhitelistAssemblies(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VRBuilder.Core.Configuration.SceneConfiguration.AddWhitelistAssemblies(System.Collections.Generic.IEnumerable{System.String})
  id: AddWhitelistAssemblies(System.Collections.Generic.IEnumerable{System.String})
  parent: VRBuilder.Core.Configuration.SceneConfiguration
  langs:
  - csharp
  - vb
  name: AddWhitelistAssemblies(IEnumerable<String>)
  nameWithType: SceneConfiguration.AddWhitelistAssemblies(IEnumerable<String>)
  fullName: VRBuilder.Core.Configuration.SceneConfiguration.AddWhitelistAssemblies(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/SceneConfiguration.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AddWhitelistAssemblies
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/SceneConfiguration.cs
    startLine: 53
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: "\nAdds the specified assembly names to the extension whitelist.\n"
  example: []
  syntax:
    content: public void AddWhitelistAssemblies(IEnumerable<string> assemblyNames)
    parameters:
    - id: assemblyNames
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Sub AddWhitelistAssemblies(assemblyNames As IEnumerable(Of String))
  overload: VRBuilder.Core.Configuration.SceneConfiguration.AddWhitelistAssemblies*
  nameWithType.vb: SceneConfiguration.AddWhitelistAssemblies(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.Configuration.SceneConfiguration.AddWhitelistAssemblies(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: AddWhitelistAssemblies(IEnumerable(Of String))
references:
- uid: VRBuilder.Core.Configuration
  commentId: N:VRBuilder.Core.Configuration
  name: VRBuilder.Core.Configuration
  nameWithType: VRBuilder.Core.Configuration
  fullName: VRBuilder.Core.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Configuration.ISceneConfiguration
  commentId: T:VRBuilder.Core.Configuration.ISceneConfiguration
  parent: VRBuilder.Core.Configuration
  name: ISceneConfiguration
  nameWithType: ISceneConfiguration
  fullName: VRBuilder.Core.Configuration.ISceneConfiguration
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Configuration.SceneConfiguration.ExtensionAssembliesWhitelist*
  commentId: Overload:VRBuilder.Core.Configuration.SceneConfiguration.ExtensionAssembliesWhitelist
  name: ExtensionAssembliesWhitelist
  nameWithType: SceneConfiguration.ExtensionAssembliesWhitelist
  fullName: VRBuilder.Core.Configuration.SceneConfiguration.ExtensionAssembliesWhitelist
- uid: VRBuilder.Core.Configuration.ISceneConfiguration.ExtensionAssembliesWhitelist
  commentId: P:VRBuilder.Core.Configuration.ISceneConfiguration.ExtensionAssembliesWhitelist
  parent: VRBuilder.Core.Configuration.ISceneConfiguration
  name: ExtensionAssembliesWhitelist
  nameWithType: ISceneConfiguration.ExtensionAssembliesWhitelist
  fullName: VRBuilder.Core.Configuration.ISceneConfiguration.ExtensionAssembliesWhitelist
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Core.Configuration.SceneConfiguration.DefaultConfettiPrefab*
  commentId: Overload:VRBuilder.Core.Configuration.SceneConfiguration.DefaultConfettiPrefab
  name: DefaultConfettiPrefab
  nameWithType: SceneConfiguration.DefaultConfettiPrefab
  fullName: VRBuilder.Core.Configuration.SceneConfiguration.DefaultConfettiPrefab
- uid: VRBuilder.Core.Configuration.ISceneConfiguration.DefaultConfettiPrefab
  commentId: P:VRBuilder.Core.Configuration.ISceneConfiguration.DefaultConfettiPrefab
  parent: VRBuilder.Core.Configuration.ISceneConfiguration
  name: DefaultConfettiPrefab
  nameWithType: ISceneConfiguration.DefaultConfettiPrefab
  fullName: VRBuilder.Core.Configuration.ISceneConfiguration.DefaultConfettiPrefab
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Core.Configuration.SceneConfiguration.IsAllowedInAssembly*
  commentId: Overload:VRBuilder.Core.Configuration.SceneConfiguration.IsAllowedInAssembly
  name: IsAllowedInAssembly
  nameWithType: SceneConfiguration.IsAllowedInAssembly
  fullName: VRBuilder.Core.Configuration.SceneConfiguration.IsAllowedInAssembly
- uid: VRBuilder.Core.Configuration.ISceneConfiguration.IsAllowedInAssembly(System.Type,System.String)
  commentId: M:VRBuilder.Core.Configuration.ISceneConfiguration.IsAllowedInAssembly(System.Type,System.String)
  parent: VRBuilder.Core.Configuration.ISceneConfiguration
  isExternal: true
  name: IsAllowedInAssembly(Type, String)
  nameWithType: ISceneConfiguration.IsAllowedInAssembly(Type, String)
  fullName: VRBuilder.Core.Configuration.ISceneConfiguration.IsAllowedInAssembly(System.Type, System.String)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.ISceneConfiguration.IsAllowedInAssembly(System.Type,System.String)
    name: IsAllowedInAssembly
    nameWithType: ISceneConfiguration.IsAllowedInAssembly
    fullName: VRBuilder.Core.Configuration.ISceneConfiguration.IsAllowedInAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.ISceneConfiguration.IsAllowedInAssembly(System.Type,System.String)
    name: IsAllowedInAssembly
    nameWithType: ISceneConfiguration.IsAllowedInAssembly
    fullName: VRBuilder.Core.Configuration.ISceneConfiguration.IsAllowedInAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.Configuration.SceneConfiguration.AddWhitelistAssemblies*
  commentId: Overload:VRBuilder.Core.Configuration.SceneConfiguration.AddWhitelistAssemblies
  name: AddWhitelistAssemblies
  nameWithType: SceneConfiguration.AddWhitelistAssemblies
  fullName: VRBuilder.Core.Configuration.SceneConfiguration.AddWhitelistAssemblies
