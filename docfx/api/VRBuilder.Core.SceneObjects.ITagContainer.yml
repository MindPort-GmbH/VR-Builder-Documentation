### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.SceneObjects.ITagContainer
  commentId: T:VRBuilder.Core.SceneObjects.ITagContainer
  id: ITagContainer
  parent: VRBuilder.Core.SceneObjects
  children:
  - VRBuilder.Core.SceneObjects.ITagContainer.AddTag(System.Guid)
  - VRBuilder.Core.SceneObjects.ITagContainer.HasTag(System.Guid)
  - VRBuilder.Core.SceneObjects.ITagContainer.RemoveTag(System.Guid)
  - VRBuilder.Core.SceneObjects.ITagContainer.TagAdded
  - VRBuilder.Core.SceneObjects.ITagContainer.TagRemoved
  - VRBuilder.Core.SceneObjects.ITagContainer.Tags
  langs:
  - csharp
  - vb
  name: ITagContainer
  nameWithType: ITagContainer
  fullName: VRBuilder.Core.SceneObjects.ITagContainer
  type: Interface
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ITagContainer.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ITagContainer
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ITagContainer.cs
    startLine: 22
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nA container for a list of guids that are associated to an object as tags.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use IGuidContainer instead.")]

      public interface ITagContainer
    content.vb: >-
      <Obsolete("Use IGuidContainer instead.")>

      Public Interface ITagContainer
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use IGuidContainer instead.
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VRBuilder.Core.SceneObjects.ITagContainer.TagAdded
  commentId: E:VRBuilder.Core.SceneObjects.ITagContainer.TagAdded
  id: TagAdded
  parent: VRBuilder.Core.SceneObjects.ITagContainer
  langs:
  - csharp
  - vb
  name: TagAdded
  nameWithType: ITagContainer.TagAdded
  fullName: VRBuilder.Core.SceneObjects.ITagContainer.TagAdded
  type: Event
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ITagContainer.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: TagAdded
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ITagContainer.cs
    startLine: 28
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nRaised when a tag is added.\n"
  example: []
  syntax:
    content: event EventHandler<GuidContainerEventArgs> TagAdded
    return:
      type: System.EventHandler{VRBuilder.Core.SceneObjects.GuidContainerEventArgs}
    content.vb: Event TagAdded As EventHandler(Of GuidContainerEventArgs)
- uid: VRBuilder.Core.SceneObjects.ITagContainer.TagRemoved
  commentId: E:VRBuilder.Core.SceneObjects.ITagContainer.TagRemoved
  id: TagRemoved
  parent: VRBuilder.Core.SceneObjects.ITagContainer
  langs:
  - csharp
  - vb
  name: TagRemoved
  nameWithType: ITagContainer.TagRemoved
  fullName: VRBuilder.Core.SceneObjects.ITagContainer.TagRemoved
  type: Event
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ITagContainer.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: TagRemoved
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ITagContainer.cs
    startLine: 33
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nRaised when a tag is removed.\n"
  example: []
  syntax:
    content: event EventHandler<GuidContainerEventArgs> TagRemoved
    return:
      type: System.EventHandler{VRBuilder.Core.SceneObjects.GuidContainerEventArgs}
    content.vb: Event TagRemoved As EventHandler(Of GuidContainerEventArgs)
- uid: VRBuilder.Core.SceneObjects.ITagContainer.Tags
  commentId: P:VRBuilder.Core.SceneObjects.ITagContainer.Tags
  id: Tags
  parent: VRBuilder.Core.SceneObjects.ITagContainer
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: ITagContainer.Tags
  fullName: VRBuilder.Core.SceneObjects.ITagContainer.Tags
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ITagContainer.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Tags
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ITagContainer.cs
    startLine: 38
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nAll tags on the object.\n"
  example: []
  syntax:
    content: IEnumerable<Guid> Tags { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Guid}
    content.vb: ReadOnly Property Tags As IEnumerable(Of Guid)
  overload: VRBuilder.Core.SceneObjects.ITagContainer.Tags*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.Core.SceneObjects.ITagContainer.HasTag(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.ITagContainer.HasTag(System.Guid)
  id: HasTag(System.Guid)
  parent: VRBuilder.Core.SceneObjects.ITagContainer
  langs:
  - csharp
  - vb
  name: HasTag(Guid)
  nameWithType: ITagContainer.HasTag(Guid)
  fullName: VRBuilder.Core.SceneObjects.ITagContainer.HasTag(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ITagContainer.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: HasTag
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ITagContainer.cs
    startLine: 43
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nTrue if the object has the specified tag.\n"
  example: []
  syntax:
    content: bool HasTag(Guid tag)
    parameters:
    - id: tag
      type: System.Guid
    return:
      type: System.Boolean
    content.vb: Function HasTag(tag As Guid) As Boolean
  overload: VRBuilder.Core.SceneObjects.ITagContainer.HasTag*
- uid: VRBuilder.Core.SceneObjects.ITagContainer.AddTag(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.ITagContainer.AddTag(System.Guid)
  id: AddTag(System.Guid)
  parent: VRBuilder.Core.SceneObjects.ITagContainer
  langs:
  - csharp
  - vb
  name: AddTag(Guid)
  nameWithType: ITagContainer.AddTag(Guid)
  fullName: VRBuilder.Core.SceneObjects.ITagContainer.AddTag(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ITagContainer.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AddTag
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ITagContainer.cs
    startLine: 48
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nAdd the specified tag.\n"
  example: []
  syntax:
    content: void AddTag(Guid tag)
    parameters:
    - id: tag
      type: System.Guid
    content.vb: Sub AddTag(tag As Guid)
  overload: VRBuilder.Core.SceneObjects.ITagContainer.AddTag*
- uid: VRBuilder.Core.SceneObjects.ITagContainer.RemoveTag(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.ITagContainer.RemoveTag(System.Guid)
  id: RemoveTag(System.Guid)
  parent: VRBuilder.Core.SceneObjects.ITagContainer
  langs:
  - csharp
  - vb
  name: RemoveTag(Guid)
  nameWithType: ITagContainer.RemoveTag(Guid)
  fullName: VRBuilder.Core.SceneObjects.ITagContainer.RemoveTag(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ITagContainer.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RemoveTag
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ITagContainer.cs
    startLine: 53
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nRemove the specified tag.\n"
  example: []
  syntax:
    content: bool RemoveTag(Guid tag)
    parameters:
    - id: tag
      type: System.Guid
    return:
      type: System.Boolean
    content.vb: Function RemoveTag(tag As Guid) As Boolean
  overload: VRBuilder.Core.SceneObjects.ITagContainer.RemoveTag*
references:
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: System.EventHandler{VRBuilder.Core.SceneObjects.GuidContainerEventArgs}
  commentId: T:System.EventHandler{VRBuilder.Core.SceneObjects.GuidContainerEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<GuidContainerEventArgs>
  nameWithType: EventHandler<GuidContainerEventArgs>
  fullName: System.EventHandler<VRBuilder.Core.SceneObjects.GuidContainerEventArgs>
  nameWithType.vb: EventHandler(Of GuidContainerEventArgs)
  fullName.vb: System.EventHandler(Of VRBuilder.Core.SceneObjects.GuidContainerEventArgs)
  name.vb: EventHandler(Of GuidContainerEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.SceneObjects.GuidContainerEventArgs
    name: GuidContainerEventArgs
    nameWithType: GuidContainerEventArgs
    fullName: VRBuilder.Core.SceneObjects.GuidContainerEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.SceneObjects.GuidContainerEventArgs
    name: GuidContainerEventArgs
    nameWithType: GuidContainerEventArgs
    fullName: VRBuilder.Core.SceneObjects.GuidContainerEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.SceneObjects.ITagContainer.Tags*
  commentId: Overload:VRBuilder.Core.SceneObjects.ITagContainer.Tags
  name: Tags
  nameWithType: ITagContainer.Tags
  fullName: VRBuilder.Core.SceneObjects.ITagContainer.Tags
- uid: System.Collections.Generic.IEnumerable{System.Guid}
  commentId: T:System.Collections.Generic.IEnumerable{System.Guid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Guid>
  nameWithType: IEnumerable<Guid>
  fullName: System.Collections.Generic.IEnumerable<System.Guid>
  nameWithType.vb: IEnumerable(Of Guid)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Guid)
  name.vb: IEnumerable(Of Guid)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Core.SceneObjects.ITagContainer.HasTag*
  commentId: Overload:VRBuilder.Core.SceneObjects.ITagContainer.HasTag
  name: HasTag
  nameWithType: ITagContainer.HasTag
  fullName: VRBuilder.Core.SceneObjects.ITagContainer.HasTag
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.SceneObjects.ITagContainer.AddTag*
  commentId: Overload:VRBuilder.Core.SceneObjects.ITagContainer.AddTag
  name: AddTag
  nameWithType: ITagContainer.AddTag
  fullName: VRBuilder.Core.SceneObjects.ITagContainer.AddTag
- uid: VRBuilder.Core.SceneObjects.ITagContainer.RemoveTag*
  commentId: Overload:VRBuilder.Core.SceneObjects.ITagContainer.RemoveTag
  name: RemoveTag
  nameWithType: ITagContainer.RemoveTag
  fullName: VRBuilder.Core.SceneObjects.ITagContainer.RemoveTag
