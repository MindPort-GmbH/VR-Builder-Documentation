### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Utils.GameObjectExtension
  commentId: T:VRBuilder.Core.Utils.GameObjectExtension
  id: GameObjectExtension
  parent: VRBuilder.Core.Utils
  children:
  - VRBuilder.Core.Utils.GameObjectExtension.RemoveChildWithNameImmediate(GameObject,System.String)
  - VRBuilder.Core.Utils.GameObjectExtension.SetLayer``1(GameObject,System.Int32,System.Boolean)
  langs:
  - csharp
  - vb
  name: GameObjectExtension
  nameWithType: GameObjectExtension
  fullName: VRBuilder.Core.Utils.GameObjectExtension
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Utils/GameObjectExtension.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GameObjectExtension
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/GameObjectExtension.cs
    startLine: 4
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  syntax:
    content: public static class GameObjectExtension
    content.vb: Public Module GameObjectExtension
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VRBuilder.Core.Utils.GameObjectExtension.SetLayer``1(GameObject,System.Int32,System.Boolean)
  commentId: M:VRBuilder.Core.Utils.GameObjectExtension.SetLayer``1(GameObject,System.Int32,System.Boolean)
  id: SetLayer``1(GameObject,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: VRBuilder.Core.Utils.GameObjectExtension
  langs:
  - csharp
  - vb
  name: SetLayer<T>(GameObject, Int32, Boolean)
  nameWithType: GameObjectExtension.SetLayer<T>(GameObject, Int32, Boolean)
  fullName: VRBuilder.Core.Utils.GameObjectExtension.SetLayer<T>(GameObject, System.Int32, System.Boolean)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Utils/GameObjectExtension.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetLayer
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/GameObjectExtension.cs
    startLine: 13
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  syntax:
    content: >-
      public static void SetLayer<T>(this GameObject gameObject, int layer, bool includeChildren = false)
          where T : Component
    parameters:
    - id: gameObject
      type: GameObject
    - id: layer
      type: System.Int32
    - id: includeChildren
      type: System.Boolean
    typeParameters:
    - id: T
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetLayer(Of T As Component)(gameObject As GameObject, layer As Integer, includeChildren As Boolean = False)
  overload: VRBuilder.Core.Utils.GameObjectExtension.SetLayer*
  nameWithType.vb: GameObjectExtension.SetLayer(Of T)(GameObject, Int32, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.Core.Utils.GameObjectExtension.SetLayer(Of T)(GameObject, System.Int32, System.Boolean)
  name.vb: SetLayer(Of T)(GameObject, Int32, Boolean)
- uid: VRBuilder.Core.Utils.GameObjectExtension.RemoveChildWithNameImmediate(GameObject,System.String)
  commentId: M:VRBuilder.Core.Utils.GameObjectExtension.RemoveChildWithNameImmediate(GameObject,System.String)
  id: RemoveChildWithNameImmediate(GameObject,System.String)
  isExtensionMethod: true
  parent: VRBuilder.Core.Utils.GameObjectExtension
  langs:
  - csharp
  - vb
  name: RemoveChildWithNameImmediate(GameObject, String)
  nameWithType: GameObjectExtension.RemoveChildWithNameImmediate(GameObject, String)
  fullName: VRBuilder.Core.Utils.GameObjectExtension.RemoveChildWithNameImmediate(GameObject, System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Utils/GameObjectExtension.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RemoveChildWithNameImmediate
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/GameObjectExtension.cs
    startLine: 29
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  summary: "\nRemoves a gameobject child with a specific name.\nAs it uses DestroyImmediate it should only be used during editor time.\n"
  example: []
  syntax:
    content: public static void RemoveChildWithNameImmediate(this GameObject gameObject, string name)
    parameters:
    - id: gameObject
      type: GameObject
      description: ''
    - id: name
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub RemoveChildWithNameImmediate(gameObject As GameObject, name As String)
  overload: VRBuilder.Core.Utils.GameObjectExtension.RemoveChildWithNameImmediate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VRBuilder.Core.Utils
  commentId: N:VRBuilder.Core.Utils
  name: VRBuilder.Core.Utils
  nameWithType: VRBuilder.Core.Utils
  fullName: VRBuilder.Core.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Utils.GameObjectExtension.SetLayer*
  commentId: Overload:VRBuilder.Core.Utils.GameObjectExtension.SetLayer
  name: SetLayer
  nameWithType: GameObjectExtension.SetLayer
  fullName: VRBuilder.Core.Utils.GameObjectExtension.SetLayer
- uid: GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.Utils.GameObjectExtension.RemoveChildWithNameImmediate*
  commentId: Overload:VRBuilder.Core.Utils.GameObjectExtension.RemoveChildWithNameImmediate
  name: RemoveChildWithNameImmediate
  nameWithType: GameObjectExtension.RemoveChildWithNameImmediate
  fullName: VRBuilder.Core.Utils.GameObjectExtension.RemoveChildWithNameImmediate
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
