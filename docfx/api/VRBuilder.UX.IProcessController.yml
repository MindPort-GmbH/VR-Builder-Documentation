### YamlMime:ManagedReference
items:
- uid: VRBuilder.UX.IProcessController
  commentId: T:VRBuilder.UX.IProcessController
  id: IProcessController
  parent: VRBuilder.UX
  children:
  - VRBuilder.UX.IProcessController.GetProcessControllerPrefab
  - VRBuilder.UX.IProcessController.GetRequiredSetupComponents
  - VRBuilder.UX.IProcessController.HandlePostSetup(GameObject)
  - VRBuilder.UX.IProcessController.Name
  - VRBuilder.UX.IProcessController.Priority
  langs:
  - csharp
  - vb
  name: IProcessController
  nameWithType: IProcessController
  fullName: VRBuilder.UX.IProcessController
  type: Interface
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/Controllers/IProcessController.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IProcessController
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/Controllers/IProcessController.cs
    startLine: 10
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nController for managing the process.\nCan for example instantiate a controller menu and a spectator camera.\n"
  example: []
  syntax:
    content: public interface IProcessController
    content.vb: Public Interface IProcessController
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VRBuilder.UX.IProcessController.Name
  commentId: P:VRBuilder.UX.IProcessController.Name
  id: Name
  parent: VRBuilder.UX.IProcessController
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IProcessController.Name
  fullName: VRBuilder.UX.IProcessController.Name
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/Controllers/IProcessController.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Name
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/Controllers/IProcessController.cs
    startLine: 15
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nPrettified name.\n"
  example: []
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: VRBuilder.UX.IProcessController.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.UX.IProcessController.Priority
  commentId: P:VRBuilder.UX.IProcessController.Priority
  id: Priority
  parent: VRBuilder.UX.IProcessController
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: IProcessController.Priority
  fullName: VRBuilder.UX.IProcessController.Priority
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/Controllers/IProcessController.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Priority
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/Controllers/IProcessController.cs
    startLine: 20
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nPriority of the controller.\n"
  example: []
  syntax:
    content: int Priority { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Priority As Integer
  overload: VRBuilder.UX.IProcessController.Priority*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.UX.IProcessController.GetProcessControllerPrefab
  commentId: M:VRBuilder.UX.IProcessController.GetProcessControllerPrefab
  id: GetProcessControllerPrefab
  parent: VRBuilder.UX.IProcessController
  langs:
  - csharp
  - vb
  name: GetProcessControllerPrefab()
  nameWithType: IProcessController.GetProcessControllerPrefab()
  fullName: VRBuilder.UX.IProcessController.GetProcessControllerPrefab()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/Controllers/IProcessController.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetProcessControllerPrefab
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/Controllers/IProcessController.cs
    startLine: 25
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nGets a process controller game object.\n"
  example: []
  syntax:
    content: GameObject GetProcessControllerPrefab()
    return:
      type: GameObject
    content.vb: Function GetProcessControllerPrefab As GameObject
  overload: VRBuilder.UX.IProcessController.GetProcessControllerPrefab*
- uid: VRBuilder.UX.IProcessController.GetRequiredSetupComponents
  commentId: M:VRBuilder.UX.IProcessController.GetRequiredSetupComponents
  id: GetRequiredSetupComponents
  parent: VRBuilder.UX.IProcessController
  langs:
  - csharp
  - vb
  name: GetRequiredSetupComponents()
  nameWithType: IProcessController.GetRequiredSetupComponents()
  fullName: VRBuilder.UX.IProcessController.GetRequiredSetupComponents()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/Controllers/IProcessController.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetRequiredSetupComponents
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/Controllers/IProcessController.cs
    startLine: 31
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nList of component types which are required on the setup object.\n"
  example: []
  syntax:
    content: List<Type> GetRequiredSetupComponents()
    return:
      type: System.Collections.Generic.List{System.Type}
      description: List of component types.
    content.vb: Function GetRequiredSetupComponents As List(Of Type)
  overload: VRBuilder.UX.IProcessController.GetRequiredSetupComponents*
- uid: VRBuilder.UX.IProcessController.HandlePostSetup(GameObject)
  commentId: M:VRBuilder.UX.IProcessController.HandlePostSetup(GameObject)
  id: HandlePostSetup(GameObject)
  parent: VRBuilder.UX.IProcessController
  langs:
  - csharp
  - vb
  name: HandlePostSetup(GameObject)
  nameWithType: IProcessController.HandlePostSetup(GameObject)
  fullName: VRBuilder.UX.IProcessController.HandlePostSetup(GameObject)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/Controllers/IProcessController.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: HandlePostSetup
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/Controllers/IProcessController.cs
    startLine: 38
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nHandles post-setup logic.\nShould be called after all components are added and object is initialized.\n"
  example: []
  syntax:
    content: void HandlePostSetup(GameObject processControllerObject)
    parameters:
    - id: processControllerObject
      type: GameObject
      description: Actual process controller object
    content.vb: Sub HandlePostSetup(processControllerObject As GameObject)
  overload: VRBuilder.UX.IProcessController.HandlePostSetup*
references:
- uid: VRBuilder.UX
  commentId: N:VRBuilder.UX
  name: VRBuilder.UX
  nameWithType: VRBuilder.UX
  fullName: VRBuilder.UX
- uid: VRBuilder.UX.IProcessController.Name*
  commentId: Overload:VRBuilder.UX.IProcessController.Name
  name: Name
  nameWithType: IProcessController.Name
  fullName: VRBuilder.UX.IProcessController.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.UX.IProcessController.Priority*
  commentId: Overload:VRBuilder.UX.IProcessController.Priority
  name: Priority
  nameWithType: IProcessController.Priority
  fullName: VRBuilder.UX.IProcessController.Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VRBuilder.UX.IProcessController.GetProcessControllerPrefab*
  commentId: Overload:VRBuilder.UX.IProcessController.GetProcessControllerPrefab
  name: GetProcessControllerPrefab
  nameWithType: IProcessController.GetProcessControllerPrefab
  fullName: VRBuilder.UX.IProcessController.GetProcessControllerPrefab
- uid: GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
- uid: VRBuilder.UX.IProcessController.GetRequiredSetupComponents*
  commentId: Overload:VRBuilder.UX.IProcessController.GetRequiredSetupComponents
  name: GetRequiredSetupComponents
  nameWithType: IProcessController.GetRequiredSetupComponents
  fullName: VRBuilder.UX.IProcessController.GetRequiredSetupComponents
- uid: System.Collections.Generic.List{System.Type}
  commentId: T:System.Collections.Generic.List{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Type>
  nameWithType: List<Type>
  fullName: System.Collections.Generic.List<System.Type>
  nameWithType.vb: List(Of Type)
  fullName.vb: System.Collections.Generic.List(Of System.Type)
  name.vb: List(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.UX.IProcessController.HandlePostSetup*
  commentId: Overload:VRBuilder.UX.IProcessController.HandlePostSetup
  name: HandlePostSetup
  nameWithType: IProcessController.HandlePostSetup
  fullName: VRBuilder.UX.IProcessController.HandlePostSetup
