### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Properties.LockableProperty
  commentId: T:VRBuilder.Core.Properties.LockableProperty
  id: LockableProperty
  parent: VRBuilder.Core.Properties
  children:
  - VRBuilder.Core.Properties.LockableProperty.EndStepLocked
  - VRBuilder.Core.Properties.LockableProperty.InternalSetLocked(System.Boolean)
  - VRBuilder.Core.Properties.LockableProperty.IsLocked
  - VRBuilder.Core.Properties.LockableProperty.Locked
  - VRBuilder.Core.Properties.LockableProperty.LockOnParentObjectLock
  - VRBuilder.Core.Properties.LockableProperty.OnDisable
  - VRBuilder.Core.Properties.LockableProperty.OnEnable
  - VRBuilder.Core.Properties.LockableProperty.RemoveUnlocker(VRBuilder.Core.IStepData)
  - VRBuilder.Core.Properties.LockableProperty.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  - VRBuilder.Core.Properties.LockableProperty.SetLocked(System.Boolean)
  - VRBuilder.Core.Properties.LockableProperty.Unlocked
  langs:
  - csharp
  - vb
  name: LockableProperty
  nameWithType: LockableProperty
  fullName: VRBuilder.Core.Properties.LockableProperty
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Properties/LockableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LockableProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/LockableProperty.cs
    startLine: 17
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\n<xref href=\"VRBuilder.Core.Properties.ProcessSceneObjectProperty\" data-throw-if-not-resolved=\"false\"></xref> which is lockable, to allow the restrictive environment to handle\nlocking/unlocking your properties, extend this class.\n"
  example: []
  syntax:
    content: 'public abstract class LockableProperty : ProcessSceneObjectProperty, ISceneObjectProperty, ILockable'
    content.vb: >-
      Public MustInherit Class LockableProperty
          Inherits ProcessSceneObjectProperty
          Implements ISceneObjectProperty, ILockable
  inheritance:
  - System.Object
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty
  derivedClasses:
  - VRBuilder.Core.Properties.TeleportationProperty
  - VRBuilder.XRInteraction.Properties.GrabbableProperty
  - VRBuilder.XRInteraction.Properties.SnappableProperty
  - VRBuilder.XRInteraction.Properties.SnapZoneProperty
  - VRBuilder.XRInteraction.Properties.TouchableProperty
  - VRBuilder.XRInteraction.Properties.UsableProperty
  implements:
  - VRBuilder.Core.Properties.ISceneObjectProperty
  - VRBuilder.Core.SceneObjects.ILockable
  inheritedMembers:
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  extensionMethods:
  - VRBuilder.Core.Properties.ISceneObjectProperty.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VRBuilder.Core.Properties.LockableProperty.Locked
  commentId: E:VRBuilder.Core.Properties.LockableProperty.Locked
  id: Locked
  parent: VRBuilder.Core.Properties.LockableProperty
  langs:
  - csharp
  - vb
  name: Locked
  nameWithType: LockableProperty.Locked
  fullName: VRBuilder.Core.Properties.LockableProperty.Locked
  type: Event
  source:
    remote:
      path: Source/Core/Runtime/Properties/LockableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Locked
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/LockableProperty.cs
    startLine: 20
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nWill be called when the object containing this interface is locked.\n"
  example: []
  syntax:
    content: public event EventHandler<LockStateChangedEventArgs> Locked
    return:
      type: System.EventHandler{VRBuilder.Core.SceneObjects.LockStateChangedEventArgs}
    content.vb: Public Event Locked As EventHandler(Of LockStateChangedEventArgs)
  implements:
  - VRBuilder.Core.SceneObjects.ILockable.Locked
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Properties.LockableProperty.Unlocked
  commentId: E:VRBuilder.Core.Properties.LockableProperty.Unlocked
  id: Unlocked
  parent: VRBuilder.Core.Properties.LockableProperty
  langs:
  - csharp
  - vb
  name: Unlocked
  nameWithType: LockableProperty.Unlocked
  fullName: VRBuilder.Core.Properties.LockableProperty.Unlocked
  type: Event
  source:
    remote:
      path: Source/Core/Runtime/Properties/LockableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Unlocked
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/LockableProperty.cs
    startLine: 22
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nWill be called when the object containing this interface is unlocked.\n"
  example: []
  syntax:
    content: public event EventHandler<LockStateChangedEventArgs> Unlocked
    return:
      type: System.EventHandler{VRBuilder.Core.SceneObjects.LockStateChangedEventArgs}
    content.vb: Public Event Unlocked As EventHandler(Of LockStateChangedEventArgs)
  implements:
  - VRBuilder.Core.SceneObjects.ILockable.Unlocked
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Properties.LockableProperty.LockOnParentObjectLock
  commentId: P:VRBuilder.Core.Properties.LockableProperty.LockOnParentObjectLock
  id: LockOnParentObjectLock
  parent: VRBuilder.Core.Properties.LockableProperty
  langs:
  - csharp
  - vb
  name: LockOnParentObjectLock
  nameWithType: LockableProperty.LockOnParentObjectLock
  fullName: VRBuilder.Core.Properties.LockableProperty.LockOnParentObjectLock
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Properties/LockableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LockOnParentObjectLock
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/LockableProperty.cs
    startLine: 32
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nDecides if the property will be locked when the parent scene object is locked.\n"
  example: []
  syntax:
    content: public bool LockOnParentObjectLock { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LockOnParentObjectLock As Boolean
  overload: VRBuilder.Core.Properties.LockableProperty.LockOnParentObjectLock*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Properties.LockableProperty.IsLocked
  commentId: P:VRBuilder.Core.Properties.LockableProperty.IsLocked
  id: IsLocked
  parent: VRBuilder.Core.Properties.LockableProperty
  langs:
  - csharp
  - vb
  name: IsLocked
  nameWithType: LockableProperty.IsLocked
  fullName: VRBuilder.Core.Properties.LockableProperty.IsLocked
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Properties/LockableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsLocked
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/LockableProperty.cs
    startLine: 39
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nReturns if the object is locked.\n"
  example: []
  syntax:
    content: public bool IsLocked { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLocked As Boolean
  overload: VRBuilder.Core.Properties.LockableProperty.IsLocked*
  implements:
  - VRBuilder.Core.SceneObjects.ILockable.IsLocked
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.Properties.LockableProperty.EndStepLocked
  commentId: P:VRBuilder.Core.Properties.LockableProperty.EndStepLocked
  id: EndStepLocked
  parent: VRBuilder.Core.Properties.LockableProperty
  langs:
  - csharp
  - vb
  name: EndStepLocked
  nameWithType: LockableProperty.EndStepLocked
  fullName: VRBuilder.Core.Properties.LockableProperty.EndStepLocked
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Properties/LockableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EndStepLocked
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/LockableProperty.cs
    startLine: 44
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nOn default the lockable property will use this value to determine if its locked at the end of a step.\n"
  example: []
  syntax:
    content: public virtual bool EndStepLocked { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property EndStepLocked As Boolean
  overload: VRBuilder.Core.Properties.LockableProperty.EndStepLocked*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VRBuilder.Core.Properties.LockableProperty.OnEnable
  commentId: M:VRBuilder.Core.Properties.LockableProperty.OnEnable
  id: OnEnable
  parent: VRBuilder.Core.Properties.LockableProperty
  langs:
  - csharp
  - vb
  name: OnEnable()
  nameWithType: LockableProperty.OnEnable()
  fullName: VRBuilder.Core.Properties.LockableProperty.OnEnable()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Properties/LockableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnEnable
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/LockableProperty.cs
    startLine: 46
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  syntax:
    content: protected override void OnEnable()
    content.vb: Protected Overrides Sub OnEnable
  overridden: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  overload: VRBuilder.Core.Properties.LockableProperty.OnEnable*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: VRBuilder.Core.Properties.LockableProperty.OnDisable
  commentId: M:VRBuilder.Core.Properties.LockableProperty.OnDisable
  id: OnDisable
  parent: VRBuilder.Core.Properties.LockableProperty
  langs:
  - csharp
  - vb
  name: OnDisable()
  nameWithType: LockableProperty.OnDisable()
  fullName: VRBuilder.Core.Properties.LockableProperty.OnDisable()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Properties/LockableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnDisable
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/LockableProperty.cs
    startLine: 54
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  syntax:
    content: protected virtual void OnDisable()
    content.vb: Protected Overridable Sub OnDisable
  overload: VRBuilder.Core.Properties.LockableProperty.OnDisable*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VRBuilder.Core.Properties.LockableProperty.SetLocked(System.Boolean)
  commentId: M:VRBuilder.Core.Properties.LockableProperty.SetLocked(System.Boolean)
  id: SetLocked(System.Boolean)
  parent: VRBuilder.Core.Properties.LockableProperty
  langs:
  - csharp
  - vb
  name: SetLocked(Boolean)
  nameWithType: LockableProperty.SetLocked(Boolean)
  fullName: VRBuilder.Core.Properties.LockableProperty.SetLocked(System.Boolean)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Properties/LockableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetLocked
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/LockableProperty.cs
    startLine: 61
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nChanges the lock state of the object.\n"
  example: []
  syntax:
    content: public virtual void SetLocked(bool lockState)
    parameters:
    - id: lockState
      type: System.Boolean
    content.vb: Public Overridable Sub SetLocked(lockState As Boolean)
  overload: VRBuilder.Core.Properties.LockableProperty.SetLocked*
  implements:
  - VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VRBuilder.Core.Properties.LockableProperty.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  commentId: M:VRBuilder.Core.Properties.LockableProperty.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  id: RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  parent: VRBuilder.Core.Properties.LockableProperty
  langs:
  - csharp
  - vb
  name: RequestLocked(Boolean, IStepData)
  nameWithType: LockableProperty.RequestLocked(Boolean, IStepData)
  fullName: VRBuilder.Core.Properties.LockableProperty.RequestLocked(System.Boolean, VRBuilder.Core.IStepData)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Properties/LockableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RequestLocked
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/LockableProperty.cs
    startLine: 89
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nRequests a change on the lock state of the object.\n"
  example: []
  syntax:
    content: public virtual void RequestLocked(bool lockState, IStepData stepData = null)
    parameters:
    - id: lockState
      type: System.Boolean
    - id: stepData
      type: VRBuilder.Core.IStepData
    content.vb: Public Overridable Sub RequestLocked(lockState As Boolean, stepData As IStepData = Nothing)
  overload: VRBuilder.Core.Properties.LockableProperty.RequestLocked*
  implements:
  - VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VRBuilder.Core.Properties.LockableProperty.RemoveUnlocker(VRBuilder.Core.IStepData)
  commentId: M:VRBuilder.Core.Properties.LockableProperty.RemoveUnlocker(VRBuilder.Core.IStepData)
  id: RemoveUnlocker(VRBuilder.Core.IStepData)
  parent: VRBuilder.Core.Properties.LockableProperty
  langs:
  - csharp
  - vb
  name: RemoveUnlocker(IStepData)
  nameWithType: LockableProperty.RemoveUnlocker(IStepData)
  fullName: VRBuilder.Core.Properties.LockableProperty.RemoveUnlocker(VRBuilder.Core.IStepData)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Properties/LockableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RemoveUnlocker
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/LockableProperty.cs
    startLine: 124
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nManually removes a step data keeping the object unlocked.\n"
  example: []
  syntax:
    content: public bool RemoveUnlocker(IStepData data)
    parameters:
    - id: data
      type: VRBuilder.Core.IStepData
    return:
      type: System.Boolean
    content.vb: Public Function RemoveUnlocker(data As IStepData) As Boolean
  overload: VRBuilder.Core.Properties.LockableProperty.RemoveUnlocker*
  implements:
  - VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Properties.LockableProperty.InternalSetLocked(System.Boolean)
  commentId: M:VRBuilder.Core.Properties.LockableProperty.InternalSetLocked(System.Boolean)
  id: InternalSetLocked(System.Boolean)
  parent: VRBuilder.Core.Properties.LockableProperty
  langs:
  - csharp
  - vb
  name: InternalSetLocked(Boolean)
  nameWithType: LockableProperty.InternalSetLocked(Boolean)
  fullName: VRBuilder.Core.Properties.LockableProperty.InternalSetLocked(System.Boolean)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Properties/LockableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: InternalSetLocked
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/LockableProperty.cs
    startLine: 148
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nHandle your internal locking affairs here.\n"
  example: []
  syntax:
    content: protected abstract void InternalSetLocked(bool lockState)
    parameters:
    - id: lockState
      type: System.Boolean
    content.vb: Protected MustOverride Sub InternalSetLocked(lockState As Boolean)
  overload: VRBuilder.Core.Properties.LockableProperty.InternalSetLocked*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ProcessSceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ProcessSceneObjectProperty
  nameWithType: ProcessSceneObjectProperty
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty
- uid: VRBuilder.Core.Properties
  commentId: N:VRBuilder.Core.Properties
  name: VRBuilder.Core.Properties
  nameWithType: VRBuilder.Core.Properties
  fullName: VRBuilder.Core.Properties
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Properties.ISceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ISceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ISceneObjectProperty
  nameWithType: ISceneObjectProperty
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty
- uid: VRBuilder.Core.SceneObjects.ILockable
  commentId: T:VRBuilder.Core.SceneObjects.ILockable
  parent: VRBuilder.Core.SceneObjects
  name: ILockable
  nameWithType: ILockable
  fullName: VRBuilder.Core.SceneObjects.ILockable
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  commentId: P:VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: SceneObject
  nameWithType: ProcessSceneObjectProperty.SceneObject
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  commentId: M:VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: Reset()
  nameWithType: ProcessSceneObjectProperty.Reset()
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
    name: Reset
    nameWithType: ProcessSceneObjectProperty.Reset
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
    name: Reset
    nameWithType: ProcessSceneObjectProperty.Reset
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  commentId: M:VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: ToString()
  nameWithType: ProcessSceneObjectProperty.ToString()
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
    name: ToString
    nameWithType: ProcessSceneObjectProperty.ToString
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
    name: ToString
    nameWithType: ProcessSceneObjectProperty.ToString
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ISceneObjectProperty.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  definition: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  name: AddProcessPropertyExtensions()
  nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions()
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  name: AddProcessPropertyExtensions(ISceneObjectProperty)
  nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Properties.ISceneObjectProperty
    name: ISceneObjectProperty
    nameWithType: ISceneObjectProperty
    fullName: VRBuilder.Core.Properties.ISceneObjectProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Properties.ISceneObjectProperty
    name: ISceneObjectProperty
    nameWithType: ISceneObjectProperty
    fullName: VRBuilder.Core.Properties.ISceneObjectProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.SceneObjectExtensions
  commentId: T:VRBuilder.Core.Properties.SceneObjectExtensions
  parent: VRBuilder.Core.Properties
  name: SceneObjectExtensions
  nameWithType: SceneObjectExtensions
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions
- uid: VRBuilder.Core.SceneObjects.ILockable.Locked
  commentId: E:VRBuilder.Core.SceneObjects.ILockable.Locked
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: Locked
  nameWithType: ILockable.Locked
  fullName: VRBuilder.Core.SceneObjects.ILockable.Locked
- uid: System.EventHandler{VRBuilder.Core.SceneObjects.LockStateChangedEventArgs}
  commentId: T:System.EventHandler{VRBuilder.Core.SceneObjects.LockStateChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<LockStateChangedEventArgs>
  nameWithType: EventHandler<LockStateChangedEventArgs>
  fullName: System.EventHandler<VRBuilder.Core.SceneObjects.LockStateChangedEventArgs>
  nameWithType.vb: EventHandler(Of LockStateChangedEventArgs)
  fullName.vb: System.EventHandler(Of VRBuilder.Core.SceneObjects.LockStateChangedEventArgs)
  name.vb: EventHandler(Of LockStateChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.SceneObjects.LockStateChangedEventArgs
    name: LockStateChangedEventArgs
    nameWithType: LockStateChangedEventArgs
    fullName: VRBuilder.Core.SceneObjects.LockStateChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.SceneObjects.LockStateChangedEventArgs
    name: LockStateChangedEventArgs
    nameWithType: LockStateChangedEventArgs
    fullName: VRBuilder.Core.SceneObjects.LockStateChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ILockable.Unlocked
  commentId: E:VRBuilder.Core.SceneObjects.ILockable.Unlocked
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: Unlocked
  nameWithType: ILockable.Unlocked
  fullName: VRBuilder.Core.SceneObjects.ILockable.Unlocked
- uid: VRBuilder.Core.Properties.LockableProperty.LockOnParentObjectLock*
  commentId: Overload:VRBuilder.Core.Properties.LockableProperty.LockOnParentObjectLock
  name: LockOnParentObjectLock
  nameWithType: LockableProperty.LockOnParentObjectLock
  fullName: VRBuilder.Core.Properties.LockableProperty.LockOnParentObjectLock
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.Properties.LockableProperty.IsLocked*
  commentId: Overload:VRBuilder.Core.Properties.LockableProperty.IsLocked
  name: IsLocked
  nameWithType: LockableProperty.IsLocked
  fullName: VRBuilder.Core.Properties.LockableProperty.IsLocked
- uid: VRBuilder.Core.SceneObjects.ILockable.IsLocked
  commentId: P:VRBuilder.Core.SceneObjects.ILockable.IsLocked
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: IsLocked
  nameWithType: ILockable.IsLocked
  fullName: VRBuilder.Core.SceneObjects.ILockable.IsLocked
- uid: VRBuilder.Core.Properties.LockableProperty.EndStepLocked*
  commentId: Overload:VRBuilder.Core.Properties.LockableProperty.EndStepLocked
  name: EndStepLocked
  nameWithType: LockableProperty.EndStepLocked
  fullName: VRBuilder.Core.Properties.LockableProperty.EndStepLocked
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  commentId: M:VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: OnEnable()
  nameWithType: ProcessSceneObjectProperty.OnEnable()
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
    name: OnEnable
    nameWithType: ProcessSceneObjectProperty.OnEnable
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
    name: OnEnable
    nameWithType: ProcessSceneObjectProperty.OnEnable
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.LockableProperty.OnEnable*
  commentId: Overload:VRBuilder.Core.Properties.LockableProperty.OnEnable
  name: OnEnable
  nameWithType: LockableProperty.OnEnable
  fullName: VRBuilder.Core.Properties.LockableProperty.OnEnable
- uid: VRBuilder.Core.Properties.LockableProperty.OnDisable*
  commentId: Overload:VRBuilder.Core.Properties.LockableProperty.OnDisable
  name: OnDisable
  nameWithType: LockableProperty.OnDisable
  fullName: VRBuilder.Core.Properties.LockableProperty.OnDisable
- uid: VRBuilder.Core.Properties.LockableProperty.SetLocked*
  commentId: Overload:VRBuilder.Core.Properties.LockableProperty.SetLocked
  name: SetLocked
  nameWithType: LockableProperty.SetLocked
  fullName: VRBuilder.Core.Properties.LockableProperty.SetLocked
- uid: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  commentId: M:VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  parent: VRBuilder.Core.SceneObjects.ILockable
  isExternal: true
  name: SetLocked(Boolean)
  nameWithType: ILockable.SetLocked(Boolean)
  fullName: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
    name: SetLocked
    nameWithType: ILockable.SetLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.SetLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
    name: SetLocked
    nameWithType: ILockable.SetLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.SetLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.LockableProperty.RequestLocked*
  commentId: Overload:VRBuilder.Core.Properties.LockableProperty.RequestLocked
  name: RequestLocked
  nameWithType: LockableProperty.RequestLocked
  fullName: VRBuilder.Core.Properties.LockableProperty.RequestLocked
- uid: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  commentId: M:VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  parent: VRBuilder.Core.SceneObjects.ILockable
  isExternal: true
  name: RequestLocked(Boolean, IStepData)
  nameWithType: ILockable.RequestLocked(Boolean, IStepData)
  fullName: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean, VRBuilder.Core.IStepData)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
    name: RequestLocked
    nameWithType: ILockable.RequestLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.RequestLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
    name: RequestLocked
    nameWithType: ILockable.RequestLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.RequestLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IStepData
  commentId: T:VRBuilder.Core.IStepData
  parent: VRBuilder.Core
  name: IStepData
  nameWithType: IStepData
  fullName: VRBuilder.Core.IStepData
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Core.Properties.LockableProperty.RemoveUnlocker*
  commentId: Overload:VRBuilder.Core.Properties.LockableProperty.RemoveUnlocker
  name: RemoveUnlocker
  nameWithType: LockableProperty.RemoveUnlocker
  fullName: VRBuilder.Core.Properties.LockableProperty.RemoveUnlocker
- uid: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  commentId: M:VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: RemoveUnlocker(IStepData)
  nameWithType: ILockable.RemoveUnlocker(IStepData)
  fullName: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
    name: RemoveUnlocker
    nameWithType: ILockable.RemoveUnlocker
    fullName: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
    name: RemoveUnlocker
    nameWithType: ILockable.RemoveUnlocker
    fullName: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.LockableProperty.InternalSetLocked*
  commentId: Overload:VRBuilder.Core.Properties.LockableProperty.InternalSetLocked
  name: InternalSetLocked
  nameWithType: LockableProperty.InternalSetLocked
  fullName: VRBuilder.Core.Properties.LockableProperty.InternalSetLocked
