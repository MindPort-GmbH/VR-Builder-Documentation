### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.SceneSetup
  commentId: T:VRBuilder.Editor.SceneSetup
  id: SceneSetup
  parent: VRBuilder.Editor
  children:
  - VRBuilder.Editor.SceneSetup.FindPrefab(System.String)
  - VRBuilder.Editor.SceneSetup.IsPrefabMissingInScene(System.String)
  - VRBuilder.Editor.SceneSetup.Key
  - VRBuilder.Editor.SceneSetup.Priority
  - VRBuilder.Editor.SceneSetup.Setup(VRBuilder.Editor.Setup.ISceneSetupConfiguration)
  - VRBuilder.Editor.SceneSetup.SetupPrefab(System.String)
  langs:
  - csharp
  - vb
  name: SceneSetup
  nameWithType: SceneSetup
  fullName: VRBuilder.Editor.SceneSetup
  type: Class
  source:
    remote:
      path: Source/Core/Editor/Setup/SceneSetup.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SceneSetup
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/Setup/SceneSetup.cs
    startLine: 21
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor
  summary: >-
    This base class is supposed to be implemented by classes which will be called to setup the scene.

    Can be used to e.g. setup process classes or interaction frameworks.
  remarks: See ProcessConfigurationSetup as a reference.
  example: []
  syntax:
    content: public abstract class SceneSetup
    content.vb: Public MustInherit Class SceneSetup
  inheritance:
  - System.Object
  derivedClasses:
  - VRBuilder.Editor.BasicInteraction.InteractionFrameworkSceneSetup
  - VRBuilder.Editor.BasicInteraction.RigSetup.DefaultRigSceneSetup
  - VRBuilder.Editor.BasicInteraction.RigSetup.RigLoaderSceneSetup
  - VRBuilder.Editor.UX.ProcessControllerSceneSetup
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: VRBuilder.Editor.SceneSetup.Key
  commentId: P:VRBuilder.Editor.SceneSetup.Key
  id: Key
  parent: VRBuilder.Editor.SceneSetup
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: SceneSetup.Key
  fullName: VRBuilder.Editor.SceneSetup.Key
  type: Property
  source:
    remote:
      path: Source/Core/Editor/Setup/SceneSetup.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Key
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/Setup/SceneSetup.cs
    startLine: 27
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor
  summary: >-
    Identifier key for specific scene setup types,

    e.g. for every interaction framework.
  example: []
  syntax:
    content: public virtual string Key { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property Key As String
  overload: VRBuilder.Editor.SceneSetup.Key*
- uid: VRBuilder.Editor.SceneSetup.Priority
  commentId: P:VRBuilder.Editor.SceneSetup.Priority
  id: Priority
  parent: VRBuilder.Editor.SceneSetup
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: SceneSetup.Priority
  fullName: VRBuilder.Editor.SceneSetup.Priority
  type: Property
  source:
    remote:
      path: Source/Core/Editor/Setup/SceneSetup.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Priority
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/Setup/SceneSetup.cs
    startLine: 33
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor
  summary: >-
    Priority lets you tweak in which order different <xref href="VRBuilder.Editor.SceneSetup" data-throw-if-not-resolved="false"></xref>s will be performed.

    The priority is considered from lowest to highest.
  example: []
  syntax:
    content: public virtual int Priority { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property Priority As Integer
  overload: VRBuilder.Editor.SceneSetup.Priority*
- uid: VRBuilder.Editor.SceneSetup.Setup(VRBuilder.Editor.Setup.ISceneSetupConfiguration)
  commentId: M:VRBuilder.Editor.SceneSetup.Setup(VRBuilder.Editor.Setup.ISceneSetupConfiguration)
  id: Setup(VRBuilder.Editor.Setup.ISceneSetupConfiguration)
  parent: VRBuilder.Editor.SceneSetup
  langs:
  - csharp
  - vb
  name: Setup(ISceneSetupConfiguration)
  nameWithType: SceneSetup.Setup(ISceneSetupConfiguration)
  fullName: VRBuilder.Editor.SceneSetup.Setup(VRBuilder.Editor.Setup.ISceneSetupConfiguration)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/Setup/SceneSetup.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Setup
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/Setup/SceneSetup.cs
    startLine: 38
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor
  summary: Setup the scene with necessary objects and/or logic.
  example: []
  syntax:
    content: public abstract void Setup(ISceneSetupConfiguration configuration)
    parameters:
    - id: configuration
      type: VRBuilder.Editor.Setup.ISceneSetupConfiguration
    content.vb: Public MustOverride Sub Setup(configuration As ISceneSetupConfiguration)
  overload: VRBuilder.Editor.SceneSetup.Setup*
- uid: VRBuilder.Editor.SceneSetup.SetupPrefab(System.String)
  commentId: M:VRBuilder.Editor.SceneSetup.SetupPrefab(System.String)
  id: SetupPrefab(System.String)
  parent: VRBuilder.Editor.SceneSetup
  langs:
  - csharp
  - vb
  name: SetupPrefab(string)
  nameWithType: SceneSetup.SetupPrefab(string)
  fullName: VRBuilder.Editor.SceneSetup.SetupPrefab(string)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/Setup/SceneSetup.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetupPrefab
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/Setup/SceneSetup.cs
    startLine: 46
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor
  summary: Sets up given <code class="paramref">prefab</code> in current scene.
  remarks: Extensions must be omitted. All asset names and paths in Unity use forward slashes, paths using backslashes will not work.
  example: []
  syntax:
    content: protected GameObject SetupPrefab(string prefab)
    parameters:
    - id: prefab
      type: System.String
      description: Name or path to the target resource to setup.
    return:
      type: UnityEngine.GameObject
    content.vb: Protected Function SetupPrefab(prefab As String) As GameObject
  overload: VRBuilder.Editor.SceneSetup.SetupPrefab*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: Exception thrown if no prefab can be found in project with given <code class="paramref">prefab</code>.
  nameWithType.vb: SceneSetup.SetupPrefab(String)
  fullName.vb: VRBuilder.Editor.SceneSetup.SetupPrefab(String)
  name.vb: SetupPrefab(String)
- uid: VRBuilder.Editor.SceneSetup.FindPrefab(System.String)
  commentId: M:VRBuilder.Editor.SceneSetup.FindPrefab(System.String)
  id: FindPrefab(System.String)
  parent: VRBuilder.Editor.SceneSetup
  langs:
  - csharp
  - vb
  name: FindPrefab(string)
  nameWithType: SceneSetup.FindPrefab(string)
  fullName: VRBuilder.Editor.SceneSetup.FindPrefab(string)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/Setup/SceneSetup.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: FindPrefab
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/Setup/SceneSetup.cs
    startLine: 64
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor
  summary: Finds and returns a prefab
  remarks: Extensions must be omitted. All asset names and paths in Unity use forward slashes, paths using backslashes will not work.
  example: []
  syntax:
    content: protected GameObject FindPrefab(string prefab)
    parameters:
    - id: prefab
      type: System.String
      description: Name or path to the target resource to setup.
    return:
      type: UnityEngine.GameObject
    content.vb: Protected Function FindPrefab(prefab As String) As GameObject
  overload: VRBuilder.Editor.SceneSetup.FindPrefab*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: Exception thrown if no prefab can be found in project with given <code class="paramref">prefab</code>.
  nameWithType.vb: SceneSetup.FindPrefab(String)
  fullName.vb: VRBuilder.Editor.SceneSetup.FindPrefab(String)
  name.vb: FindPrefab(String)
- uid: VRBuilder.Editor.SceneSetup.IsPrefabMissingInScene(System.String)
  commentId: M:VRBuilder.Editor.SceneSetup.IsPrefabMissingInScene(System.String)
  id: IsPrefabMissingInScene(System.String)
  parent: VRBuilder.Editor.SceneSetup
  langs:
  - csharp
  - vb
  name: IsPrefabMissingInScene(string)
  nameWithType: SceneSetup.IsPrefabMissingInScene(string)
  fullName: VRBuilder.Editor.SceneSetup.IsPrefabMissingInScene(string)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/Setup/SceneSetup.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsPrefabMissingInScene
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/Setup/SceneSetup.cs
    startLine: 84
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor
  summary: Returns true if given <code class="paramref">prefabName</code> is missing in current scene.
  example: []
  syntax:
    content: protected bool IsPrefabMissingInScene(string prefabName)
    parameters:
    - id: prefabName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Protected Function IsPrefabMissingInScene(prefabName As String) As Boolean
  overload: VRBuilder.Editor.SceneSetup.IsPrefabMissingInScene*
  nameWithType.vb: SceneSetup.IsPrefabMissingInScene(String)
  fullName.vb: VRBuilder.Editor.SceneSetup.IsPrefabMissingInScene(String)
  name.vb: IsPrefabMissingInScene(String)
references:
- uid: VRBuilder.Editor
  commentId: N:VRBuilder.Editor
  href: VRBuilder.html
  name: VRBuilder.Editor
  nameWithType: VRBuilder.Editor
  fullName: VRBuilder.Editor
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Editor
    name: Editor
    href: VRBuilder.Editor.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Editor
    name: Editor
    href: VRBuilder.Editor.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Editor.SceneSetup.Key*
  commentId: Overload:VRBuilder.Editor.SceneSetup.Key
  href: VRBuilder.Editor.SceneSetup.html#VRBuilder_Editor_SceneSetup_Key
  name: Key
  nameWithType: SceneSetup.Key
  fullName: VRBuilder.Editor.SceneSetup.Key
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: VRBuilder.Editor.SceneSetup
  commentId: T:VRBuilder.Editor.SceneSetup
  parent: VRBuilder.Editor
  href: VRBuilder.Editor.SceneSetup.html
  name: SceneSetup
  nameWithType: SceneSetup
  fullName: VRBuilder.Editor.SceneSetup
- uid: VRBuilder.Editor.SceneSetup.Priority*
  commentId: Overload:VRBuilder.Editor.SceneSetup.Priority
  href: VRBuilder.Editor.SceneSetup.html#VRBuilder_Editor_SceneSetup_Priority
  name: Priority
  nameWithType: SceneSetup.Priority
  fullName: VRBuilder.Editor.SceneSetup.Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: VRBuilder.Editor.SceneSetup.Setup*
  commentId: Overload:VRBuilder.Editor.SceneSetup.Setup
  href: VRBuilder.Editor.SceneSetup.html#VRBuilder_Editor_SceneSetup_Setup_VRBuilder_Editor_Setup_ISceneSetupConfiguration_
  name: Setup
  nameWithType: SceneSetup.Setup
  fullName: VRBuilder.Editor.SceneSetup.Setup
- uid: VRBuilder.Editor.Setup.ISceneSetupConfiguration
  commentId: T:VRBuilder.Editor.Setup.ISceneSetupConfiguration
  parent: VRBuilder.Editor.Setup
  href: VRBuilder.Editor.Setup.ISceneSetupConfiguration.html
  name: ISceneSetupConfiguration
  nameWithType: ISceneSetupConfiguration
  fullName: VRBuilder.Editor.Setup.ISceneSetupConfiguration
- uid: VRBuilder.Editor.Setup
  commentId: N:VRBuilder.Editor.Setup
  href: VRBuilder.html
  name: VRBuilder.Editor.Setup
  nameWithType: VRBuilder.Editor.Setup
  fullName: VRBuilder.Editor.Setup
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Editor
    name: Editor
    href: VRBuilder.Editor.html
  - name: .
  - uid: VRBuilder.Editor.Setup
    name: Setup
    href: VRBuilder.Editor.Setup.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Editor
    name: Editor
    href: VRBuilder.Editor.html
  - name: .
  - uid: VRBuilder.Editor.Setup
    name: Setup
    href: VRBuilder.Editor.Setup.html
- uid: System.IO.FileNotFoundException
  commentId: T:System.IO.FileNotFoundException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.filenotfoundexception
  name: FileNotFoundException
  nameWithType: FileNotFoundException
  fullName: System.IO.FileNotFoundException
- uid: VRBuilder.Editor.SceneSetup.SetupPrefab*
  commentId: Overload:VRBuilder.Editor.SceneSetup.SetupPrefab
  href: VRBuilder.Editor.SceneSetup.html#VRBuilder_Editor_SceneSetup_SetupPrefab_System_String_
  name: SetupPrefab
  nameWithType: SceneSetup.SetupPrefab
  fullName: VRBuilder.Editor.SceneSetup.SetupPrefab
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: VRBuilder.Editor.SceneSetup.FindPrefab*
  commentId: Overload:VRBuilder.Editor.SceneSetup.FindPrefab
  href: VRBuilder.Editor.SceneSetup.html#VRBuilder_Editor_SceneSetup_FindPrefab_System_String_
  name: FindPrefab
  nameWithType: SceneSetup.FindPrefab
  fullName: VRBuilder.Editor.SceneSetup.FindPrefab
- uid: VRBuilder.Editor.SceneSetup.IsPrefabMissingInScene*
  commentId: Overload:VRBuilder.Editor.SceneSetup.IsPrefabMissingInScene
  href: VRBuilder.Editor.SceneSetup.html#VRBuilder_Editor_SceneSetup_IsPrefabMissingInScene_System_String_
  name: IsPrefabMissingInScene
  nameWithType: SceneSetup.IsPrefabMissingInScene
  fullName: VRBuilder.Editor.SceneSetup.IsPrefabMissingInScene
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
