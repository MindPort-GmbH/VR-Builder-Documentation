### YamlMime:ManagedReference
items:
- uid: VRBuilder.BasicInteraction.BaseLocomotionHandler
  commentId: T:VRBuilder.BasicInteraction.BaseLocomotionHandler
  id: BaseLocomotionHandler
  parent: VRBuilder.BasicInteraction
  children:
  - VRBuilder.BasicInteraction.BaseLocomotionHandler.CurrentPosition
  - VRBuilder.BasicInteraction.BaseLocomotionHandler.CurrentRotation
  - VRBuilder.BasicInteraction.BaseLocomotionHandler.SetPositionAndRotation(Vector3,Quaternion)
  langs:
  - csharp
  - vb
  name: BaseLocomotionHandler
  nameWithType: BaseLocomotionHandler
  fullName: VRBuilder.BasicInteraction.BaseLocomotionHandler
  type: Class
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Locomotion/BaseLocomotionHandler.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: BaseLocomotionHandler
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Locomotion/BaseLocomotionHandler.cs
    startLine: 7
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction
  summary: "\nHandles basic locomotion for e.g. rigs and provides an abstract locomotion layer.\n"
  example: []
  syntax:
    content: 'public abstract class BaseLocomotionHandler : MonoBehaviour'
    content.vb: >-
      Public MustInherit Class BaseLocomotionHandler

          Inherits MonoBehaviour
  inheritance:
  - System.Object
  derivedClasses:
  - VRBuilder.XRInteraction.XRLocomotionHandler
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VRBuilder.BasicInteraction.BaseLocomotionHandler.CurrentRotation
  commentId: P:VRBuilder.BasicInteraction.BaseLocomotionHandler.CurrentRotation
  id: CurrentRotation
  parent: VRBuilder.BasicInteraction.BaseLocomotionHandler
  langs:
  - csharp
  - vb
  name: CurrentRotation
  nameWithType: BaseLocomotionHandler.CurrentRotation
  fullName: VRBuilder.BasicInteraction.BaseLocomotionHandler.CurrentRotation
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Locomotion/BaseLocomotionHandler.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CurrentRotation
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Locomotion/BaseLocomotionHandler.cs
    startLine: 12
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction
  summary: "\nCurrent rotation of the rig or camera.\n"
  example: []
  syntax:
    content: public abstract Quaternion CurrentRotation { get; }
    parameters: []
    return:
      type: Quaternion
    content.vb: Public MustOverride ReadOnly Property CurrentRotation As Quaternion
  overload: VRBuilder.BasicInteraction.BaseLocomotionHandler.CurrentRotation*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: VRBuilder.BasicInteraction.BaseLocomotionHandler.CurrentPosition
  commentId: P:VRBuilder.BasicInteraction.BaseLocomotionHandler.CurrentPosition
  id: CurrentPosition
  parent: VRBuilder.BasicInteraction.BaseLocomotionHandler
  langs:
  - csharp
  - vb
  name: CurrentPosition
  nameWithType: BaseLocomotionHandler.CurrentPosition
  fullName: VRBuilder.BasicInteraction.BaseLocomotionHandler.CurrentPosition
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Locomotion/BaseLocomotionHandler.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CurrentPosition
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Locomotion/BaseLocomotionHandler.cs
    startLine: 17
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction
  summary: "\nCurrent position of the rig or camera.\n"
  example: []
  syntax:
    content: public abstract Vector3 CurrentPosition { get; }
    parameters: []
    return:
      type: Vector3
    content.vb: Public MustOverride ReadOnly Property CurrentPosition As Vector3
  overload: VRBuilder.BasicInteraction.BaseLocomotionHandler.CurrentPosition*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: VRBuilder.BasicInteraction.BaseLocomotionHandler.SetPositionAndRotation(Vector3,Quaternion)
  commentId: M:VRBuilder.BasicInteraction.BaseLocomotionHandler.SetPositionAndRotation(Vector3,Quaternion)
  id: SetPositionAndRotation(Vector3,Quaternion)
  parent: VRBuilder.BasicInteraction.BaseLocomotionHandler
  langs:
  - csharp
  - vb
  name: SetPositionAndRotation(Vector3, Quaternion)
  nameWithType: BaseLocomotionHandler.SetPositionAndRotation(Vector3, Quaternion)
  fullName: VRBuilder.BasicInteraction.BaseLocomotionHandler.SetPositionAndRotation(Vector3, Quaternion)
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Locomotion/BaseLocomotionHandler.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetPositionAndRotation
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Locomotion/BaseLocomotionHandler.cs
    startLine: 24
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction
  summary: "\nSets a new position and rotation for the rig or camera.\n"
  example: []
  syntax:
    content: public abstract void SetPositionAndRotation(Vector3 destinationPosition, Quaternion destinationRotation)
    parameters:
    - id: destinationPosition
      type: Vector3
      description: Target position.
    - id: destinationRotation
      type: Quaternion
      description: Target rotation.
    content.vb: Public MustOverride Sub SetPositionAndRotation(destinationPosition As Vector3, destinationRotation As Quaternion)
  overload: VRBuilder.BasicInteraction.BaseLocomotionHandler.SetPositionAndRotation*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: VRBuilder.BasicInteraction
  commentId: N:VRBuilder.BasicInteraction
  name: VRBuilder.BasicInteraction
  nameWithType: VRBuilder.BasicInteraction
  fullName: VRBuilder.BasicInteraction
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.BasicInteraction.BaseLocomotionHandler.CurrentRotation*
  commentId: Overload:VRBuilder.BasicInteraction.BaseLocomotionHandler.CurrentRotation
  name: CurrentRotation
  nameWithType: BaseLocomotionHandler.CurrentRotation
  fullName: VRBuilder.BasicInteraction.BaseLocomotionHandler.CurrentRotation
- uid: Quaternion
  isExternal: true
  name: Quaternion
  nameWithType: Quaternion
  fullName: Quaternion
- uid: VRBuilder.BasicInteraction.BaseLocomotionHandler.CurrentPosition*
  commentId: Overload:VRBuilder.BasicInteraction.BaseLocomotionHandler.CurrentPosition
  name: CurrentPosition
  nameWithType: BaseLocomotionHandler.CurrentPosition
  fullName: VRBuilder.BasicInteraction.BaseLocomotionHandler.CurrentPosition
- uid: Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Vector3
- uid: VRBuilder.BasicInteraction.BaseLocomotionHandler.SetPositionAndRotation*
  commentId: Overload:VRBuilder.BasicInteraction.BaseLocomotionHandler.SetPositionAndRotation
  name: SetPositionAndRotation
  nameWithType: BaseLocomotionHandler.SetPositionAndRotation
  fullName: VRBuilder.BasicInteraction.BaseLocomotionHandler.SetPositionAndRotation
