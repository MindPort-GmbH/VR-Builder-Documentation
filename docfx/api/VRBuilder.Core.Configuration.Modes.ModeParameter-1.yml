### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Configuration.Modes.ModeParameter`1
  commentId: T:VRBuilder.Core.Configuration.Modes.ModeParameter`1
  id: ModeParameter`1
  parent: VRBuilder.Core.Configuration.Modes
  children:
  - VRBuilder.Core.Configuration.Modes.ModeParameter`1.#ctor(System.String,`0)
  - VRBuilder.Core.Configuration.Modes.ModeParameter`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  - VRBuilder.Core.Configuration.Modes.ModeParameter`1.IsModified
  - VRBuilder.Core.Configuration.Modes.ModeParameter`1.ParameterModified
  - VRBuilder.Core.Configuration.Modes.ModeParameter`1.Reset
  - VRBuilder.Core.Configuration.Modes.ModeParameter`1.Value
  langs:
  - csharp
  - vb
  name: ModeParameter<T>
  nameWithType: ModeParameter<T>
  fullName: VRBuilder.Core.Configuration.Modes.ModeParameter<T>
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/ModeParameter.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ModeParameter
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/ModeParameter.cs
    startLine: 12
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: >-
    ModeParameter is responsible for fetching its parameter value from a <xref href="VRBuilder.Core.Configuration.Modes.IMode" data-throw-if-not-resolved="false"></xref>.

    If the value changes while being configured, an event will be triggered.
  example: []
  syntax:
    content: public class ModeParameter<T>
    typeParameters:
    - id: T
    content.vb: Public Class ModeParameter(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ModeParameter(Of T)
  fullName.vb: VRBuilder.Core.Configuration.Modes.ModeParameter(Of T)
  name.vb: ModeParameter(Of T)
- uid: VRBuilder.Core.Configuration.Modes.ModeParameter`1.ParameterModified
  commentId: F:VRBuilder.Core.Configuration.Modes.ModeParameter`1.ParameterModified
  id: ParameterModified
  parent: VRBuilder.Core.Configuration.Modes.ModeParameter`1
  langs:
  - csharp
  - vb
  name: ParameterModified
  nameWithType: ModeParameter<T>.ParameterModified
  fullName: VRBuilder.Core.Configuration.Modes.ModeParameter<T>.ParameterModified
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/ModeParameter.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ParameterModified
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/ModeParameter.cs
    startLine: 14
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  syntax:
    content: public EventHandler<EventArgs> ParameterModified
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Public ParameterModified As EventHandler(Of EventArgs)
  nameWithType.vb: ModeParameter(Of T).ParameterModified
  fullName.vb: VRBuilder.Core.Configuration.Modes.ModeParameter(Of T).ParameterModified
- uid: VRBuilder.Core.Configuration.Modes.ModeParameter`1.IsModified
  commentId: P:VRBuilder.Core.Configuration.Modes.ModeParameter`1.IsModified
  id: IsModified
  parent: VRBuilder.Core.Configuration.Modes.ModeParameter`1
  langs:
  - csharp
  - vb
  name: IsModified
  nameWithType: ModeParameter<T>.IsModified
  fullName: VRBuilder.Core.Configuration.Modes.ModeParameter<T>.IsModified
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/ModeParameter.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsModified
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/ModeParameter.cs
    startLine: 19
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: Is true when the current value is different to the default value.
  example: []
  syntax:
    content: public bool IsModified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsModified As Boolean
  overload: VRBuilder.Core.Configuration.Modes.ModeParameter`1.IsModified*
  nameWithType.vb: ModeParameter(Of T).IsModified
  fullName.vb: VRBuilder.Core.Configuration.Modes.ModeParameter(Of T).IsModified
- uid: VRBuilder.Core.Configuration.Modes.ModeParameter`1.Value
  commentId: P:VRBuilder.Core.Configuration.Modes.ModeParameter`1.Value
  id: Value
  parent: VRBuilder.Core.Configuration.Modes.ModeParameter`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ModeParameter<T>.Value
  fullName: VRBuilder.Core.Configuration.Modes.ModeParameter<T>.Value
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/ModeParameter.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Value
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/ModeParameter.cs
    startLine: 24
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: Returns the current value, if set and different to the default value it will invoke a ParameterModified event.
  example: []
  syntax:
    content: public T Value { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Property Value As T
  overload: VRBuilder.Core.Configuration.Modes.ModeParameter`1.Value*
  nameWithType.vb: ModeParameter(Of T).Value
  fullName.vb: VRBuilder.Core.Configuration.Modes.ModeParameter(Of T).Value
- uid: VRBuilder.Core.Configuration.Modes.ModeParameter`1.#ctor(System.String,`0)
  commentId: M:VRBuilder.Core.Configuration.Modes.ModeParameter`1.#ctor(System.String,`0)
  id: '#ctor(System.String,`0)'
  parent: VRBuilder.Core.Configuration.Modes.ModeParameter`1
  langs:
  - csharp
  - vb
  name: ModeParameter(string, T)
  nameWithType: ModeParameter<T>.ModeParameter(string, T)
  fullName: VRBuilder.Core.Configuration.Modes.ModeParameter<T>.ModeParameter(string, T)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/ModeParameter.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/ModeParameter.cs
    startLine: 49
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  syntax:
    content: public ModeParameter(string key, T defaultValue = default)
    parameters:
    - id: key
      type: System.String
    - id: defaultValue
      type: '{T}'
    content.vb: Public Sub New(key As String, defaultValue As T = Nothing)
  overload: VRBuilder.Core.Configuration.Modes.ModeParameter`1.#ctor*
  nameWithType.vb: ModeParameter(Of T).New(String, T)
  fullName.vb: VRBuilder.Core.Configuration.Modes.ModeParameter(Of T).New(String, T)
  name.vb: New(String, T)
- uid: VRBuilder.Core.Configuration.Modes.ModeParameter`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.Core.Configuration.Modes.ModeParameter`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  id: Configure(VRBuilder.Core.Configuration.Modes.IMode)
  parent: VRBuilder.Core.Configuration.Modes.ModeParameter`1
  langs:
  - csharp
  - vb
  name: Configure(IMode)
  nameWithType: ModeParameter<T>.Configure(IMode)
  fullName: VRBuilder.Core.Configuration.Modes.ModeParameter<T>.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/ModeParameter.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Configure
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/ModeParameter.cs
    startLine: 59
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: Configures this parameter with the given mode.
  example: []
  syntax:
    content: public void Configure(IMode mode)
    parameters:
    - id: mode
      type: VRBuilder.Core.Configuration.Modes.IMode
    content.vb: Public Sub Configure(mode As IMode)
  overload: VRBuilder.Core.Configuration.Modes.ModeParameter`1.Configure*
  nameWithType.vb: ModeParameter(Of T).Configure(IMode)
  fullName.vb: VRBuilder.Core.Configuration.Modes.ModeParameter(Of T).Configure(VRBuilder.Core.Configuration.Modes.IMode)
- uid: VRBuilder.Core.Configuration.Modes.ModeParameter`1.Reset
  commentId: M:VRBuilder.Core.Configuration.Modes.ModeParameter`1.Reset
  id: Reset
  parent: VRBuilder.Core.Configuration.Modes.ModeParameter`1
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: ModeParameter<T>.Reset()
  fullName: VRBuilder.Core.Configuration.Modes.ModeParameter<T>.Reset()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/ModeParameter.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Reset
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/ModeParameter.cs
    startLine: 74
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: Resets the parameter, will triggered modified if the value changes.
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: VRBuilder.Core.Configuration.Modes.ModeParameter`1.Reset*
  nameWithType.vb: ModeParameter(Of T).Reset()
  fullName.vb: VRBuilder.Core.Configuration.Modes.ModeParameter(Of T).Reset()
references:
- uid: VRBuilder.Core.Configuration.Modes.IMode
  commentId: T:VRBuilder.Core.Configuration.Modes.IMode
  parent: VRBuilder.Core.Configuration.Modes
  href: VRBuilder.Core.Configuration.Modes.IMode.html
  name: IMode
  nameWithType: IMode
  fullName: VRBuilder.Core.Configuration.Modes.IMode
- uid: VRBuilder.Core.Configuration.Modes
  commentId: N:VRBuilder.Core.Configuration.Modes
  href: VRBuilder.html
  name: VRBuilder.Core.Configuration.Modes
  nameWithType: VRBuilder.Core.Configuration.Modes
  fullName: VRBuilder.Core.Configuration.Modes
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Configuration
    name: Configuration
    href: VRBuilder.Core.Configuration.html
  - name: .
  - uid: VRBuilder.Core.Configuration.Modes
    name: Modes
    href: VRBuilder.Core.Configuration.Modes.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Configuration
    name: Configuration
    href: VRBuilder.Core.Configuration.html
  - name: .
  - uid: VRBuilder.Core.Configuration.Modes
    name: Modes
    href: VRBuilder.Core.Configuration.Modes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler{System.EventArgs}
  commentId: T:System.EventHandler{System.EventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<EventArgs>
  nameWithType: EventHandler<EventArgs>
  fullName: System.EventHandler<System.EventArgs>
  nameWithType.vb: EventHandler(Of EventArgs)
  fullName.vb: System.EventHandler(Of System.EventArgs)
  name.vb: EventHandler(Of EventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.ModeParameter`1.IsModified*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.ModeParameter`1.IsModified
  href: VRBuilder.Core.Configuration.Modes.ModeParameter-1.html#VRBuilder_Core_Configuration_Modes_ModeParameter_1_IsModified
  name: IsModified
  nameWithType: ModeParameter<T>.IsModified
  fullName: VRBuilder.Core.Configuration.Modes.ModeParameter<T>.IsModified
  nameWithType.vb: ModeParameter(Of T).IsModified
  fullName.vb: VRBuilder.Core.Configuration.Modes.ModeParameter(Of T).IsModified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: VRBuilder.Core.Configuration.Modes.ModeParameter`1.Value*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.ModeParameter`1.Value
  href: VRBuilder.Core.Configuration.Modes.ModeParameter-1.html#VRBuilder_Core_Configuration_Modes_ModeParameter_1_Value
  name: Value
  nameWithType: ModeParameter<T>.Value
  fullName: VRBuilder.Core.Configuration.Modes.ModeParameter<T>.Value
  nameWithType.vb: ModeParameter(Of T).Value
  fullName.vb: VRBuilder.Core.Configuration.Modes.ModeParameter(Of T).Value
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: VRBuilder.Core.Configuration.Modes.ModeParameter`1.#ctor*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.ModeParameter`1.#ctor
  href: VRBuilder.Core.Configuration.Modes.ModeParameter-1.html#VRBuilder_Core_Configuration_Modes_ModeParameter_1__ctor_System_String__0_
  name: ModeParameter
  nameWithType: ModeParameter<T>.ModeParameter
  fullName: VRBuilder.Core.Configuration.Modes.ModeParameter<T>.ModeParameter
  nameWithType.vb: ModeParameter(Of T).New
  fullName.vb: VRBuilder.Core.Configuration.Modes.ModeParameter(Of T).New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: VRBuilder.Core.Configuration.Modes.ModeParameter`1.Configure*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.ModeParameter`1.Configure
  href: VRBuilder.Core.Configuration.Modes.ModeParameter-1.html#VRBuilder_Core_Configuration_Modes_ModeParameter_1_Configure_VRBuilder_Core_Configuration_Modes_IMode_
  name: Configure
  nameWithType: ModeParameter<T>.Configure
  fullName: VRBuilder.Core.Configuration.Modes.ModeParameter<T>.Configure
  nameWithType.vb: ModeParameter(Of T).Configure
  fullName.vb: VRBuilder.Core.Configuration.Modes.ModeParameter(Of T).Configure
- uid: VRBuilder.Core.Configuration.Modes.ModeParameter`1.Reset*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.ModeParameter`1.Reset
  href: VRBuilder.Core.Configuration.Modes.ModeParameter-1.html#VRBuilder_Core_Configuration_Modes_ModeParameter_1_Reset
  name: Reset
  nameWithType: ModeParameter<T>.Reset
  fullName: VRBuilder.Core.Configuration.Modes.ModeParameter<T>.Reset
  nameWithType.vb: ModeParameter(Of T).Reset
  fullName.vb: VRBuilder.Core.Configuration.Modes.ModeParameter(Of T).Reset
