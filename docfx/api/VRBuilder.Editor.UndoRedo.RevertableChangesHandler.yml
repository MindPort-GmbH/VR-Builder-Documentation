### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.UndoRedo.RevertableChangesHandler
  commentId: T:VRBuilder.Editor.UndoRedo.RevertableChangesHandler
  id: RevertableChangesHandler
  parent: VRBuilder.Editor.UndoRedo
  children:
  - VRBuilder.Editor.UndoRedo.RevertableChangesHandler.CollapseUndoOperations(System.String)
  - VRBuilder.Editor.UndoRedo.RevertableChangesHandler.Do(VRBuilder.Editor.UndoRedo.IRevertableCommand,System.String)
  - VRBuilder.Editor.UndoRedo.RevertableChangesHandler.FlushStack
  langs:
  - csharp
  - vb
  name: RevertableChangesHandler
  nameWithType: RevertableChangesHandler
  fullName: VRBuilder.Editor.UndoRedo.RevertableChangesHandler
  type: Class
  source:
    remote:
      path: Source/Core/Editor/UndoRedo/RevertableChangesHandler.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RevertableChangesHandler
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UndoRedo/RevertableChangesHandler.cs
    startLine: 13
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UndoRedo
  summary: "\nUtility class to hook up non-serializeable changes to Unity&apos;s `Undo`.\n"
  example: []
  syntax:
    content: public static class RevertableChangesHandler
    content.vb: Public Module RevertableChangesHandler
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VRBuilder.Editor.UndoRedo.RevertableChangesHandler.Do(VRBuilder.Editor.UndoRedo.IRevertableCommand,System.String)
  commentId: M:VRBuilder.Editor.UndoRedo.RevertableChangesHandler.Do(VRBuilder.Editor.UndoRedo.IRevertableCommand,System.String)
  id: Do(VRBuilder.Editor.UndoRedo.IRevertableCommand,System.String)
  parent: VRBuilder.Editor.UndoRedo.RevertableChangesHandler
  langs:
  - csharp
  - vb
  name: Do(IRevertableCommand, String)
  nameWithType: RevertableChangesHandler.Do(IRevertableCommand, String)
  fullName: VRBuilder.Editor.UndoRedo.RevertableChangesHandler.Do(VRBuilder.Editor.UndoRedo.IRevertableCommand, System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UndoRedo/RevertableChangesHandler.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Do
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UndoRedo/RevertableChangesHandler.cs
    startLine: 57
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UndoRedo
  summary: "\nRegisters <code data-dev-comment-type=\"paramref\" class=\"paramref\">revertableCommand</code> and executes it.\n"
  remarks: "\nIf <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">commandGroup</code> is empty, <code data-dev-comment-type=\"paramref\" class=\"paramref\">revertableCommand</code> will be added to the main stack, otherwise,\nit will remind in a group called as <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">commandGroup</code> content until <xref href=\"VRBuilder.Editor.UndoRedo.RevertableChangesHandler.CollapseUndoOperations(System.String)\" data-throw-if-not-resolved=\"false\"></xref> is called.\n"
  example: []
  syntax:
    content: public static void Do(IRevertableCommand revertableCommand, string commandGroup = "")
    parameters:
    - id: revertableCommand
      type: VRBuilder.Editor.UndoRedo.IRevertableCommand
    - id: commandGroup
      type: System.String
    content.vb: Public Shared Sub Do(revertableCommand As IRevertableCommand, commandGroup As String = "")
  overload: VRBuilder.Editor.UndoRedo.RevertableChangesHandler.Do*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.UndoRedo.RevertableChangesHandler.CollapseUndoOperations(System.String)
  commentId: M:VRBuilder.Editor.UndoRedo.RevertableChangesHandler.CollapseUndoOperations(System.String)
  id: CollapseUndoOperations(System.String)
  parent: VRBuilder.Editor.UndoRedo.RevertableChangesHandler
  langs:
  - csharp
  - vb
  name: CollapseUndoOperations(String)
  nameWithType: RevertableChangesHandler.CollapseUndoOperations(String)
  fullName: VRBuilder.Editor.UndoRedo.RevertableChangesHandler.CollapseUndoOperations(System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UndoRedo/RevertableChangesHandler.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CollapseUndoOperations
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UndoRedo/RevertableChangesHandler.cs
    startLine: 80
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UndoRedo
  summary: "\nCollapses all undo operation up to group index together into the main stack.\n"
  example: []
  syntax:
    content: public static void CollapseUndoOperations(string groupName)
    parameters:
    - id: groupName
      type: System.String
    content.vb: Public Shared Sub CollapseUndoOperations(groupName As String)
  overload: VRBuilder.Editor.UndoRedo.RevertableChangesHandler.CollapseUndoOperations*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.UndoRedo.RevertableChangesHandler.FlushStack
  commentId: M:VRBuilder.Editor.UndoRedo.RevertableChangesHandler.FlushStack
  id: FlushStack
  parent: VRBuilder.Editor.UndoRedo.RevertableChangesHandler
  langs:
  - csharp
  - vb
  name: FlushStack()
  nameWithType: RevertableChangesHandler.FlushStack()
  fullName: VRBuilder.Editor.UndoRedo.RevertableChangesHandler.FlushStack()
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UndoRedo/RevertableChangesHandler.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: FlushStack
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UndoRedo/RevertableChangesHandler.cs
    startLine: 116
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UndoRedo
  summary: "\nClear Unity&apos;s `Undo` stack and reset the command handler.\n"
  example: []
  syntax:
    content: public static void FlushStack()
    content.vb: Public Shared Sub FlushStack
  overload: VRBuilder.Editor.UndoRedo.RevertableChangesHandler.FlushStack*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VRBuilder.Editor.UndoRedo
  commentId: N:VRBuilder.Editor.UndoRedo
  name: VRBuilder.Editor.UndoRedo
  nameWithType: VRBuilder.Editor.UndoRedo
  fullName: VRBuilder.Editor.UndoRedo
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Editor.UndoRedo.RevertableChangesHandler.CollapseUndoOperations(System.String)
  commentId: M:VRBuilder.Editor.UndoRedo.RevertableChangesHandler.CollapseUndoOperations(System.String)
  isExternal: true
- uid: VRBuilder.Editor.UndoRedo.RevertableChangesHandler.Do*
  commentId: Overload:VRBuilder.Editor.UndoRedo.RevertableChangesHandler.Do
  name: Do
  nameWithType: RevertableChangesHandler.Do
  fullName: VRBuilder.Editor.UndoRedo.RevertableChangesHandler.Do
- uid: VRBuilder.Editor.UndoRedo.IRevertableCommand
  commentId: T:VRBuilder.Editor.UndoRedo.IRevertableCommand
  parent: VRBuilder.Editor.UndoRedo
  name: IRevertableCommand
  nameWithType: IRevertableCommand
  fullName: VRBuilder.Editor.UndoRedo.IRevertableCommand
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Editor.UndoRedo.RevertableChangesHandler.CollapseUndoOperations*
  commentId: Overload:VRBuilder.Editor.UndoRedo.RevertableChangesHandler.CollapseUndoOperations
  name: CollapseUndoOperations
  nameWithType: RevertableChangesHandler.CollapseUndoOperations
  fullName: VRBuilder.Editor.UndoRedo.RevertableChangesHandler.CollapseUndoOperations
- uid: VRBuilder.Editor.UndoRedo.RevertableChangesHandler.FlushStack*
  commentId: Overload:VRBuilder.Editor.UndoRedo.RevertableChangesHandler.FlushStack
  name: FlushStack
  nameWithType: RevertableChangesHandler.FlushStack
  fullName: VRBuilder.Editor.UndoRedo.RevertableChangesHandler.FlushStack
