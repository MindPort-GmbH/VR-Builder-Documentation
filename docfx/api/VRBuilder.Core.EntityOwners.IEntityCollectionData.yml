### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData
  id: IEntityCollectionData
  parent: VRBuilder.Core.EntityOwners
  children:
  - VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  langs:
  - csharp
  - vb
  name: IEntityCollectionData
  nameWithType: IEntityCollectionData
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  type: Interface
  source:
    remote:
      path: Source/Core/Runtime/EntityOwners/Collection/IEntityCollectionData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IEntityCollectionData
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/EntityOwners/Collection/IEntityCollectionData.cs
    startLine: 19
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.EntityOwners
  summary: "\nAn entity&apos;s data which represents a collection of other entities.\n"
  example: []
  syntax:
    content: 'public interface IEntityCollectionData : IData'
    content.vb: >-
      Public Interface IEntityCollectionData
          Inherits IData
  inheritedMembers:
  - VRBuilder.Core.IData.Metadata
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  id: GetChildren
  parent: VRBuilder.Core.EntityOwners.IEntityCollectionData
  langs:
  - csharp
  - vb
  name: GetChildren()
  nameWithType: IEntityCollectionData.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/EntityOwners/Collection/IEntityCollectionData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetChildren
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/EntityOwners/Collection/IEntityCollectionData.cs
    startLine: 21
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.EntityOwners
  syntax:
    content: IEnumerable<IEntity> GetChildren()
    return:
      type: System.Collections.Generic.IEnumerable{VRBuilder.Core.IEntity}
    content.vb: Function GetChildren As IEnumerable(Of IEntity)
  overload: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren*
references:
- uid: VRBuilder.Core.EntityOwners
  commentId: N:VRBuilder.Core.EntityOwners
  name: VRBuilder.Core.EntityOwners
  nameWithType: VRBuilder.Core.EntityOwners
  fullName: VRBuilder.Core.EntityOwners
- uid: VRBuilder.Core.IData.Metadata
  commentId: P:VRBuilder.Core.IData.Metadata
  parent: VRBuilder.Core.IData
  name: Metadata
  nameWithType: IData.Metadata
  fullName: VRBuilder.Core.IData.Metadata
- uid: VRBuilder.Core.IData
  commentId: T:VRBuilder.Core.IData
  parent: VRBuilder.Core
  name: IData
  nameWithType: IData
  fullName: VRBuilder.Core.IData
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren*
  commentId: Overload:VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  name: GetChildren
  nameWithType: IEntityCollectionData.GetChildren
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
- uid: System.Collections.Generic.IEnumerable{VRBuilder.Core.IEntity}
  commentId: T:System.Collections.Generic.IEnumerable{VRBuilder.Core.IEntity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IEntity>
  nameWithType: IEnumerable<IEntity>
  fullName: System.Collections.Generic.IEnumerable<VRBuilder.Core.IEntity>
  nameWithType.vb: IEnumerable(Of IEntity)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VRBuilder.Core.IEntity)
  name.vb: IEnumerable(Of IEntity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IEntity
    name: IEntity
    nameWithType: IEntity
    fullName: VRBuilder.Core.IEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IEntity
    name: IEntity
    nameWithType: IEntity
    fullName: VRBuilder.Core.IEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
