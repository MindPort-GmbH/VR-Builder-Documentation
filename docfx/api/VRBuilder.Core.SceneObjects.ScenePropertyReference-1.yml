### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  commentId: T:VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  id: ScenePropertyReference`1
  parent: VRBuilder.Core.SceneObjects
  children:
  - VRBuilder.Core.SceneObjects.ScenePropertyReference`1.#ctor
  - VRBuilder.Core.SceneObjects.ScenePropertyReference`1.#ctor(System.String)
  - VRBuilder.Core.SceneObjects.ScenePropertyReference`1.DetermineValue(`0)
  - VRBuilder.Core.SceneObjects.ScenePropertyReference`1.op_Implicit(VRBuilder.Core.SceneObjects.ScenePropertyReference{`0})~`0
  langs:
  - csharp
  - vb
  name: ScenePropertyReference<T>
  nameWithType: ScenePropertyReference<T>
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<T>
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ScenePropertyReference.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ScenePropertyReference
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ScenePropertyReference.cs
    startLine: 14
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nWeak reference to a property of a process object with the same unique name.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      [DataContract(IsReference = true)]

      [Obsolete("Use ProcessSceneReferenceBase and derived classes to store references to objects in the scene.")]

      public sealed class ScenePropertyReference<T> : ObjectReference<T>, ICanBeEmpty where T : class, ISceneObjectProperty
    typeParameters:
    - id: T
    content.vb: >-
      <Serializable>

      <DataContract(IsReference:=True)>

      <Obsolete("Use ProcessSceneReferenceBase and derived classes to store references to objects in the scene.")>

      Public NotInheritable Class ScenePropertyReference(Of T As {Class, ISceneObjectProperty})
          Inherits ObjectReference(Of T)
          Implements ICanBeEmpty
  inheritance:
  - System.Object
  - VRBuilder.Core.SceneObjects.UniqueNameReference
  - VRBuilder.Core.SceneObjects.ObjectReference{{T}}
  implements:
  - VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  inheritedMembers:
  - VRBuilder.Core.SceneObjects.ObjectReference{{T}}.UniqueName
  - VRBuilder.Core.SceneObjects.ObjectReference{{T}}.Value
  - VRBuilder.Core.SceneObjects.ObjectReference{{T}}.IsEmpty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ProcessSceneReferenceBase and derived classes to store references to objects in the scene.
  nameWithType.vb: ScenePropertyReference(Of T)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T)
  name.vb: ScenePropertyReference(Of T)
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.op_Implicit(VRBuilder.Core.SceneObjects.ScenePropertyReference{`0})~`0
  commentId: M:VRBuilder.Core.SceneObjects.ScenePropertyReference`1.op_Implicit(VRBuilder.Core.SceneObjects.ScenePropertyReference{`0})~`0
  id: op_Implicit(VRBuilder.Core.SceneObjects.ScenePropertyReference{`0})~`0
  parent: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  langs:
  - csharp
  - vb
  name: Implicit(ScenePropertyReference<T> to T)
  nameWithType: ScenePropertyReference<T>.Implicit(ScenePropertyReference<T> to T)
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<T>.Implicit(VRBuilder.Core.SceneObjects.ScenePropertyReference<T> to T)
  type: Operator
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ScenePropertyReference.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: op_Implicit
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ScenePropertyReference.cs
    startLine: 19
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public static implicit operator T(ScenePropertyReference<T> reference)
    parameters:
    - id: reference
      type: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
    return:
      type: '{T}'
    content.vb: Public Shared Widening Operator CType(reference As ScenePropertyReference(Of T)) As T
  overload: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.op_Implicit*
  nameWithType.vb: ScenePropertyReference(Of T).Widening(ScenePropertyReference(Of T) to T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T).Widening(VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T) to T)
  name.vb: Widening(ScenePropertyReference(Of T) to T)
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.#ctor
  commentId: M:VRBuilder.Core.SceneObjects.ScenePropertyReference`1.#ctor
  id: '#ctor'
  parent: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  langs:
  - csharp
  - vb
  name: ScenePropertyReference()
  nameWithType: ScenePropertyReference<T>.ScenePropertyReference()
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<T>.ScenePropertyReference()
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ScenePropertyReference.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ScenePropertyReference.cs
    startLine: 24
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public ScenePropertyReference()
    content.vb: Public Sub New
  overload: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.#ctor*
  nameWithType.vb: ScenePropertyReference(Of T).ScenePropertyReference()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T).ScenePropertyReference()
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.#ctor(System.String)
  commentId: M:VRBuilder.Core.SceneObjects.ScenePropertyReference`1.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  langs:
  - csharp
  - vb
  name: ScenePropertyReference(String)
  nameWithType: ScenePropertyReference<T>.ScenePropertyReference(String)
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<T>.ScenePropertyReference(System.String)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ScenePropertyReference.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ScenePropertyReference.cs
    startLine: 28
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public ScenePropertyReference(string uniqueName)
    parameters:
    - id: uniqueName
      type: System.String
    content.vb: Public Sub New(uniqueName As String)
  overload: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.#ctor*
  nameWithType.vb: ScenePropertyReference(Of T).ScenePropertyReference(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T).ScenePropertyReference(System.String)
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.DetermineValue(`0)
  commentId: M:VRBuilder.Core.SceneObjects.ScenePropertyReference`1.DetermineValue(`0)
  id: DetermineValue(`0)
  parent: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  langs:
  - csharp
  - vb
  name: DetermineValue(T)
  nameWithType: ScenePropertyReference<T>.DetermineValue(T)
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<T>.DetermineValue(T)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ScenePropertyReference.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DetermineValue
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ScenePropertyReference.cs
    startLine: 32
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: protected override T DetermineValue(T cachedValue)
    parameters:
    - id: cachedValue
      type: '{T}'
    return:
      type: '{T}'
    content.vb: Protected Overrides Function DetermineValue(cachedValue As T) As T
  overridden: VRBuilder.Core.SceneObjects.ObjectReference{{T}}.DetermineValue({T})
  overload: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.DetermineValue*
  nameWithType.vb: ScenePropertyReference(Of T).DetermineValue(T)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T).DetermineValue(T)
references:
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.SceneObjects.UniqueNameReference
  commentId: T:VRBuilder.Core.SceneObjects.UniqueNameReference
  parent: VRBuilder.Core.SceneObjects
  name: UniqueNameReference
  nameWithType: UniqueNameReference
  fullName: VRBuilder.Core.SceneObjects.UniqueNameReference
- uid: VRBuilder.Core.SceneObjects.ObjectReference{{T}}
  commentId: T:VRBuilder.Core.SceneObjects.ObjectReference{`0}
  parent: VRBuilder.Core.SceneObjects
  definition: VRBuilder.Core.SceneObjects.ObjectReference`1
  name: ObjectReference<T>
  nameWithType: ObjectReference<T>
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>
  nameWithType.vb: ObjectReference(Of T)
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T)
  name.vb: ObjectReference(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1
    name: ObjectReference
    nameWithType: ObjectReference
    fullName: VRBuilder.Core.SceneObjects.ObjectReference
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1
    name: ObjectReference
    nameWithType: ObjectReference
    fullName: VRBuilder.Core.SceneObjects.ObjectReference
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  commentId: T:VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  parent: VRBuilder.Core.Runtime.Properties
  name: ICanBeEmpty
  nameWithType: ICanBeEmpty
  fullName: VRBuilder.Core.Runtime.Properties.ICanBeEmpty
- uid: VRBuilder.Core.SceneObjects.ObjectReference{{T}}.UniqueName
  commentId: P:VRBuilder.Core.SceneObjects.ObjectReference{`0}.UniqueName
  parent: VRBuilder.Core.SceneObjects.ObjectReference{{T}}
  definition: VRBuilder.Core.SceneObjects.ObjectReference`1.UniqueName
  name: UniqueName
  nameWithType: ObjectReference<T>.UniqueName
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.UniqueName
  nameWithType.vb: ObjectReference(Of T).UniqueName
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).UniqueName
- uid: VRBuilder.Core.SceneObjects.ObjectReference{{T}}.Value
  commentId: P:VRBuilder.Core.SceneObjects.ObjectReference{`0}.Value
  parent: VRBuilder.Core.SceneObjects.ObjectReference{{T}}
  definition: VRBuilder.Core.SceneObjects.ObjectReference`1.Value
  name: Value
  nameWithType: ObjectReference<T>.Value
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.Value
  nameWithType.vb: ObjectReference(Of T).Value
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).Value
- uid: VRBuilder.Core.SceneObjects.ObjectReference{{T}}.IsEmpty
  commentId: M:VRBuilder.Core.SceneObjects.ObjectReference{`0}.IsEmpty
  parent: VRBuilder.Core.SceneObjects.ObjectReference{{T}}
  definition: VRBuilder.Core.SceneObjects.ObjectReference`1.IsEmpty
  name: IsEmpty()
  nameWithType: ObjectReference<T>.IsEmpty()
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.IsEmpty()
  nameWithType.vb: ObjectReference(Of T).IsEmpty()
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).IsEmpty()
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1.IsEmpty
    name: IsEmpty
    nameWithType: ObjectReference<T>.IsEmpty
    fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1.IsEmpty
    name: IsEmpty
    nameWithType: ObjectReference(Of T).IsEmpty
    fullName: VRBuilder.Core.SceneObjects.ObjectReference(Of T).IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1
  commentId: T:VRBuilder.Core.SceneObjects.ObjectReference`1
  parent: VRBuilder.Core.SceneObjects
  name: ObjectReference<T>
  nameWithType: ObjectReference<T>
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>
  nameWithType.vb: ObjectReference(Of T)
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T)
  name.vb: ObjectReference(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1
    name: ObjectReference
    nameWithType: ObjectReference
    fullName: VRBuilder.Core.SceneObjects.ObjectReference
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1
    name: ObjectReference
    nameWithType: ObjectReference
    fullName: VRBuilder.Core.SceneObjects.ObjectReference
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Runtime.Properties
  commentId: N:VRBuilder.Core.Runtime.Properties
  name: VRBuilder.Core.Runtime.Properties
  nameWithType: VRBuilder.Core.Runtime.Properties
  fullName: VRBuilder.Core.Runtime.Properties
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.UniqueName
  commentId: P:VRBuilder.Core.SceneObjects.ObjectReference`1.UniqueName
  name: UniqueName
  nameWithType: ObjectReference<T>.UniqueName
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.UniqueName
  nameWithType.vb: ObjectReference(Of T).UniqueName
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).UniqueName
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.Value
  commentId: P:VRBuilder.Core.SceneObjects.ObjectReference`1.Value
  name: Value
  nameWithType: ObjectReference<T>.Value
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.Value
  nameWithType.vb: ObjectReference(Of T).Value
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).Value
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.IsEmpty
  commentId: M:VRBuilder.Core.SceneObjects.ObjectReference`1.IsEmpty
  name: IsEmpty()
  nameWithType: ObjectReference<T>.IsEmpty()
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.IsEmpty()
  nameWithType.vb: ObjectReference(Of T).IsEmpty()
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).IsEmpty()
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1.IsEmpty
    name: IsEmpty
    nameWithType: ObjectReference<T>.IsEmpty
    fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1.IsEmpty
    name: IsEmpty
    nameWithType: ObjectReference(Of T).IsEmpty
    fullName: VRBuilder.Core.SceneObjects.ObjectReference(Of T).IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.op_Implicit*
  commentId: Overload:VRBuilder.Core.SceneObjects.ScenePropertyReference`1.op_Implicit
  name: Implicit
  nameWithType: ScenePropertyReference<T>.Implicit
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<T>.Implicit
  nameWithType.vb: ScenePropertyReference(Of T).Widening
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T).Widening
  name.vb: Widening
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  commentId: T:VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  parent: VRBuilder.Core.SceneObjects
  name: ScenePropertyReference<T>
  nameWithType: ScenePropertyReference<T>
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<T>
  nameWithType.vb: ScenePropertyReference(Of T)
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T)
  name.vb: ScenePropertyReference(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
    name: ScenePropertyReference
    nameWithType: ScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
    name: ScenePropertyReference
    nameWithType: ScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.#ctor*
  commentId: Overload:VRBuilder.Core.SceneObjects.ScenePropertyReference`1.#ctor
  name: ScenePropertyReference
  nameWithType: ScenePropertyReference<T>.ScenePropertyReference
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<T>.ScenePropertyReference
  nameWithType.vb: ScenePropertyReference(Of T).ScenePropertyReference
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T).ScenePropertyReference
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Core.SceneObjects.ObjectReference{{T}}.DetermineValue({T})
  commentId: M:VRBuilder.Core.SceneObjects.ObjectReference{`0}.DetermineValue(`0)
  parent: VRBuilder.Core.SceneObjects.ObjectReference{{T}}
  definition: VRBuilder.Core.SceneObjects.ObjectReference`1.DetermineValue(`0)
  name: DetermineValue(T)
  nameWithType: ObjectReference<T>.DetermineValue(T)
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.DetermineValue(T)
  nameWithType.vb: ObjectReference(Of T).DetermineValue(T)
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).DetermineValue(T)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1.DetermineValue(`0)
    name: DetermineValue
    nameWithType: ObjectReference<T>.DetermineValue
    fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.DetermineValue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1.DetermineValue(`0)
    name: DetermineValue
    nameWithType: ObjectReference(Of T).DetermineValue
    fullName: VRBuilder.Core.SceneObjects.ObjectReference(Of T).DetermineValue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.DetermineValue*
  commentId: Overload:VRBuilder.Core.SceneObjects.ScenePropertyReference`1.DetermineValue
  name: DetermineValue
  nameWithType: ScenePropertyReference<T>.DetermineValue
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<T>.DetermineValue
  nameWithType.vb: ScenePropertyReference(Of T).DetermineValue
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T).DetermineValue
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.DetermineValue(`0)
  commentId: M:VRBuilder.Core.SceneObjects.ObjectReference`1.DetermineValue(`0)
  name: DetermineValue(T)
  nameWithType: ObjectReference<T>.DetermineValue(T)
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.DetermineValue(T)
  nameWithType.vb: ObjectReference(Of T).DetermineValue(T)
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).DetermineValue(T)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1.DetermineValue(`0)
    name: DetermineValue
    nameWithType: ObjectReference<T>.DetermineValue
    fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.DetermineValue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1.DetermineValue(`0)
    name: DetermineValue
    nameWithType: ObjectReference(Of T).DetermineValue
    fullName: VRBuilder.Core.SceneObjects.ObjectReference(Of T).DetermineValue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
