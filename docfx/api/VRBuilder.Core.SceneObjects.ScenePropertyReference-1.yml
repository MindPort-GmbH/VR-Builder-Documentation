### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  commentId: T:VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  id: ScenePropertyReference`1
  parent: VRBuilder.Core.SceneObjects
  children:
  - VRBuilder.Core.SceneObjects.ScenePropertyReference`1.#ctor
  - VRBuilder.Core.SceneObjects.ScenePropertyReference`1.#ctor(System.String)
  - VRBuilder.Core.SceneObjects.ScenePropertyReference`1.DetermineValue(`0)
  - VRBuilder.Core.SceneObjects.ScenePropertyReference`1.op_Implicit(VRBuilder.Core.SceneObjects.ScenePropertyReference{`0})~`0
  langs:
  - csharp
  - vb
  name: ScenePropertyReference<T>
  nameWithType: ScenePropertyReference<T>
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<T>
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ScenePropertyReference.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ScenePropertyReference
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ScenePropertyReference.cs
    startLine: 14
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: Weak reference to a property of a process object with the same unique name.
  example: []
  syntax:
    content: >-
      [Serializable]

      [DataContract(IsReference = true)]

      [Obsolete("Use ProcessSceneReferenceBase and derived classes to store references to objects in the scene.")]

      public sealed class ScenePropertyReference<T> : ObjectReference<T>, ICanBeEmpty where T : class, ISceneObjectProperty
    typeParameters:
    - id: T
    content.vb: >-
      <Serializable>

      <DataContract(IsReference:=True)>

      <Obsolete("Use ProcessSceneReferenceBase and derived classes to store references to objects in the scene.")>

      Public NotInheritable Class ScenePropertyReference(Of T As {Class, ISceneObjectProperty}) Inherits ObjectReference(Of T) Implements ICanBeEmpty
  inheritance:
  - System.Object
  - VRBuilder.Core.SceneObjects.UniqueNameReference
  - VRBuilder.Core.SceneObjects.ObjectReference{{T}}
  implements:
  - VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  inheritedMembers:
  - VRBuilder.Core.SceneObjects.ObjectReference{{T}}.UniqueName
  - VRBuilder.Core.SceneObjects.ObjectReference{{T}}.Value
  - VRBuilder.Core.SceneObjects.ObjectReference{{T}}.IsEmpty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ProcessSceneReferenceBase and derived classes to store references to objects in the scene.
  nameWithType.vb: ScenePropertyReference(Of T)
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T)
  name.vb: ScenePropertyReference(Of T)
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.op_Implicit(VRBuilder.Core.SceneObjects.ScenePropertyReference{`0})~`0
  commentId: M:VRBuilder.Core.SceneObjects.ScenePropertyReference`1.op_Implicit(VRBuilder.Core.SceneObjects.ScenePropertyReference{`0})~`0
  id: op_Implicit(VRBuilder.Core.SceneObjects.ScenePropertyReference{`0})~`0
  parent: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  langs:
  - csharp
  - vb
  name: implicit operator T(ScenePropertyReference<T>)
  nameWithType: ScenePropertyReference<T>.implicit operator T(ScenePropertyReference<T>)
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<T>.implicit operator T(VRBuilder.Core.SceneObjects.ScenePropertyReference<T>)
  type: Operator
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ScenePropertyReference.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: op_Implicit
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ScenePropertyReference.cs
    startLine: 19
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public static implicit operator T(ScenePropertyReference<T> reference)
    parameters:
    - id: reference
      type: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
    return:
      type: '{T}'
    content.vb: Public Shared Widening Operator CType(reference As ScenePropertyReference(Of T)) As T
  overload: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.op_Implicit*
  nameWithType.vb: ScenePropertyReference(Of T).CType(ScenePropertyReference(Of T))
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T).CType(VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T))
  name.vb: CType(ScenePropertyReference(Of T))
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.#ctor
  commentId: M:VRBuilder.Core.SceneObjects.ScenePropertyReference`1.#ctor
  id: '#ctor'
  parent: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  langs:
  - csharp
  - vb
  name: ScenePropertyReference()
  nameWithType: ScenePropertyReference<T>.ScenePropertyReference()
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<T>.ScenePropertyReference()
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ScenePropertyReference.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ScenePropertyReference.cs
    startLine: 24
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public ScenePropertyReference()
    content.vb: Public Sub New()
  overload: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.#ctor*
  nameWithType.vb: ScenePropertyReference(Of T).New()
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T).New()
  name.vb: New()
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.#ctor(System.String)
  commentId: M:VRBuilder.Core.SceneObjects.ScenePropertyReference`1.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  langs:
  - csharp
  - vb
  name: ScenePropertyReference(string)
  nameWithType: ScenePropertyReference<T>.ScenePropertyReference(string)
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<T>.ScenePropertyReference(string)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ScenePropertyReference.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ScenePropertyReference.cs
    startLine: 28
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public ScenePropertyReference(string uniqueName)
    parameters:
    - id: uniqueName
      type: System.String
    content.vb: Public Sub New(uniqueName As String)
  overload: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.#ctor*
  nameWithType.vb: ScenePropertyReference(Of T).New(String)
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T).New(String)
  name.vb: New(String)
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.DetermineValue(`0)
  commentId: M:VRBuilder.Core.SceneObjects.ScenePropertyReference`1.DetermineValue(`0)
  id: DetermineValue(`0)
  parent: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  langs:
  - csharp
  - vb
  name: DetermineValue(T)
  nameWithType: ScenePropertyReference<T>.DetermineValue(T)
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<T>.DetermineValue(T)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ScenePropertyReference.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DetermineValue
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ScenePropertyReference.cs
    startLine: 32
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  example: []
  syntax:
    content: protected override T DetermineValue(T cachedValue)
    parameters:
    - id: cachedValue
      type: '{T}'
    return:
      type: '{T}'
    content.vb: Protected Overrides Function DetermineValue(cachedValue As T) As T
  overridden: VRBuilder.Core.SceneObjects.ObjectReference{{T}}.DetermineValue({T})
  overload: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.DetermineValue*
  nameWithType.vb: ScenePropertyReference(Of T).DetermineValue(T)
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T).DetermineValue(T)
references:
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  href: VRBuilder.html
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.SceneObjects
    name: SceneObjects
    href: VRBuilder.Core.SceneObjects.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.SceneObjects
    name: SceneObjects
    href: VRBuilder.Core.SceneObjects.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: VRBuilder.Core.SceneObjects.UniqueNameReference
  commentId: T:VRBuilder.Core.SceneObjects.UniqueNameReference
  parent: VRBuilder.Core.SceneObjects
  href: VRBuilder.Core.SceneObjects.UniqueNameReference.html
  name: UniqueNameReference
  nameWithType: UniqueNameReference
  fullName: VRBuilder.Core.SceneObjects.UniqueNameReference
- uid: VRBuilder.Core.SceneObjects.ObjectReference{{T}}
  commentId: T:VRBuilder.Core.SceneObjects.ObjectReference{`0}
  parent: VRBuilder.Core.SceneObjects
  definition: VRBuilder.Core.SceneObjects.ObjectReference`1
  href: VRBuilder.Core.SceneObjects.ObjectReference-1.html
  name: ObjectReference<T>
  nameWithType: ObjectReference<T>
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>
  nameWithType.vb: ObjectReference(Of T)
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T)
  name.vb: ObjectReference(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1
    name: ObjectReference
    href: VRBuilder.Core.SceneObjects.ObjectReference-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1
    name: ObjectReference
    href: VRBuilder.Core.SceneObjects.ObjectReference-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  commentId: T:VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  parent: VRBuilder.Core.Runtime.Properties
  href: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.html
  name: ICanBeEmpty
  nameWithType: ICanBeEmpty
  fullName: VRBuilder.Core.Runtime.Properties.ICanBeEmpty
- uid: VRBuilder.Core.SceneObjects.ObjectReference{{T}}.UniqueName
  commentId: P:VRBuilder.Core.SceneObjects.ObjectReference{`0}.UniqueName
  parent: VRBuilder.Core.SceneObjects.ObjectReference{{T}}
  definition: VRBuilder.Core.SceneObjects.ObjectReference`1.UniqueName
  href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1_UniqueName
  name: UniqueName
  nameWithType: ObjectReference<T>.UniqueName
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.UniqueName
  nameWithType.vb: ObjectReference(Of T).UniqueName
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).UniqueName
- uid: VRBuilder.Core.SceneObjects.ObjectReference{{T}}.Value
  commentId: P:VRBuilder.Core.SceneObjects.ObjectReference{`0}.Value
  parent: VRBuilder.Core.SceneObjects.ObjectReference{{T}}
  definition: VRBuilder.Core.SceneObjects.ObjectReference`1.Value
  href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1_Value
  name: Value
  nameWithType: ObjectReference<T>.Value
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.Value
  nameWithType.vb: ObjectReference(Of T).Value
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).Value
- uid: VRBuilder.Core.SceneObjects.ObjectReference{{T}}.IsEmpty
  commentId: M:VRBuilder.Core.SceneObjects.ObjectReference{`0}.IsEmpty
  parent: VRBuilder.Core.SceneObjects.ObjectReference{{T}}
  definition: VRBuilder.Core.SceneObjects.ObjectReference`1.IsEmpty
  href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1_IsEmpty
  name: IsEmpty()
  nameWithType: ObjectReference<T>.IsEmpty()
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.IsEmpty()
  nameWithType.vb: ObjectReference(Of T).IsEmpty()
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).IsEmpty()
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference{`0}.IsEmpty
    name: IsEmpty
    href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1_IsEmpty
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference{`0}.IsEmpty
    name: IsEmpty
    href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1_IsEmpty
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1
  commentId: T:VRBuilder.Core.SceneObjects.ObjectReference`1
  parent: VRBuilder.Core.SceneObjects
  href: VRBuilder.Core.SceneObjects.ObjectReference-1.html
  name: ObjectReference<T>
  nameWithType: ObjectReference<T>
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>
  nameWithType.vb: ObjectReference(Of T)
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T)
  name.vb: ObjectReference(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1
    name: ObjectReference
    href: VRBuilder.Core.SceneObjects.ObjectReference-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1
    name: ObjectReference
    href: VRBuilder.Core.SceneObjects.ObjectReference-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: VRBuilder.Core.Runtime.Properties
  commentId: N:VRBuilder.Core.Runtime.Properties
  href: VRBuilder.html
  name: VRBuilder.Core.Runtime.Properties
  nameWithType: VRBuilder.Core.Runtime.Properties
  fullName: VRBuilder.Core.Runtime.Properties
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Runtime
    name: Runtime
    href: VRBuilder.Core.Runtime.html
  - name: .
  - uid: VRBuilder.Core.Runtime.Properties
    name: Properties
    href: VRBuilder.Core.Runtime.Properties.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Runtime
    name: Runtime
    href: VRBuilder.Core.Runtime.html
  - name: .
  - uid: VRBuilder.Core.Runtime.Properties
    name: Properties
    href: VRBuilder.Core.Runtime.Properties.html
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.UniqueName
  commentId: P:VRBuilder.Core.SceneObjects.ObjectReference`1.UniqueName
  href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1_UniqueName
  name: UniqueName
  nameWithType: ObjectReference<T>.UniqueName
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.UniqueName
  nameWithType.vb: ObjectReference(Of T).UniqueName
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).UniqueName
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.Value
  commentId: P:VRBuilder.Core.SceneObjects.ObjectReference`1.Value
  href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1_Value
  name: Value
  nameWithType: ObjectReference<T>.Value
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.Value
  nameWithType.vb: ObjectReference(Of T).Value
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).Value
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.IsEmpty
  commentId: M:VRBuilder.Core.SceneObjects.ObjectReference`1.IsEmpty
  href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1_IsEmpty
  name: IsEmpty()
  nameWithType: ObjectReference<T>.IsEmpty()
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.IsEmpty()
  nameWithType.vb: ObjectReference(Of T).IsEmpty()
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).IsEmpty()
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1.IsEmpty
    name: IsEmpty
    href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1_IsEmpty
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1.IsEmpty
    name: IsEmpty
    href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1_IsEmpty
  - name: (
  - name: )
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.op_Implicit*
  commentId: Overload:VRBuilder.Core.SceneObjects.ScenePropertyReference`1.op_Implicit
  name: implicit operator
  nameWithType: ScenePropertyReference<T>.implicit operator
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<T>.implicit operator
  nameWithType.vb: ScenePropertyReference(Of T).CType
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T).CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  commentId: T:VRBuilder.Core.SceneObjects.ScenePropertyReference`1
  parent: VRBuilder.Core.SceneObjects
  href: VRBuilder.Core.SceneObjects.ScenePropertyReference-1.html
  name: ScenePropertyReference<T>
  nameWithType: ScenePropertyReference<T>
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<T>
  nameWithType.vb: ScenePropertyReference(Of T)
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T)
  name.vb: ScenePropertyReference(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
    name: ScenePropertyReference
    href: VRBuilder.Core.SceneObjects.ScenePropertyReference-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1
    name: ScenePropertyReference
    href: VRBuilder.Core.SceneObjects.ScenePropertyReference-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.#ctor*
  commentId: Overload:VRBuilder.Core.SceneObjects.ScenePropertyReference`1.#ctor
  href: VRBuilder.Core.SceneObjects.ScenePropertyReference-1.html#VRBuilder_Core_SceneObjects_ScenePropertyReference_1__ctor
  name: ScenePropertyReference
  nameWithType: ScenePropertyReference<T>.ScenePropertyReference
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<T>.ScenePropertyReference
  nameWithType.vb: ScenePropertyReference(Of T).New
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T).New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: VRBuilder.Core.SceneObjects.ObjectReference{{T}}.DetermineValue({T})
  commentId: M:VRBuilder.Core.SceneObjects.ObjectReference{`0}.DetermineValue(`0)
  parent: VRBuilder.Core.SceneObjects.ObjectReference{{T}}
  definition: VRBuilder.Core.SceneObjects.ObjectReference`1.DetermineValue(`0)
  href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1_DetermineValue__0_
  name: DetermineValue(T)
  nameWithType: ObjectReference<T>.DetermineValue(T)
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.DetermineValue(T)
  nameWithType.vb: ObjectReference(Of T).DetermineValue(T)
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).DetermineValue(T)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference{`0}.DetermineValue(`0)
    name: DetermineValue
    href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1_DetermineValue__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference{`0}.DetermineValue(`0)
    name: DetermineValue
    href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1_DetermineValue__0_
  - name: (
  - name: T
  - name: )
- uid: VRBuilder.Core.SceneObjects.ScenePropertyReference`1.DetermineValue*
  commentId: Overload:VRBuilder.Core.SceneObjects.ScenePropertyReference`1.DetermineValue
  href: VRBuilder.Core.SceneObjects.ScenePropertyReference-1.html#VRBuilder_Core_SceneObjects_ScenePropertyReference_1_DetermineValue__0_
  name: DetermineValue
  nameWithType: ScenePropertyReference<T>.DetermineValue
  fullName: VRBuilder.Core.SceneObjects.ScenePropertyReference<T>.DetermineValue
  nameWithType.vb: ScenePropertyReference(Of T).DetermineValue
  fullName.vb: VRBuilder.Core.SceneObjects.ScenePropertyReference(Of T).DetermineValue
- uid: VRBuilder.Core.SceneObjects.ObjectReference`1.DetermineValue(`0)
  commentId: M:VRBuilder.Core.SceneObjects.ObjectReference`1.DetermineValue(`0)
  href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1_DetermineValue__0_
  name: DetermineValue(T)
  nameWithType: ObjectReference<T>.DetermineValue(T)
  fullName: VRBuilder.Core.SceneObjects.ObjectReference<T>.DetermineValue(T)
  nameWithType.vb: ObjectReference(Of T).DetermineValue(T)
  fullName.vb: VRBuilder.Core.SceneObjects.ObjectReference(Of T).DetermineValue(T)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1.DetermineValue(`0)
    name: DetermineValue
    href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1_DetermineValue__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ObjectReference`1.DetermineValue(`0)
    name: DetermineValue
    href: VRBuilder.Core.SceneObjects.ObjectReference-1.html#VRBuilder_Core_SceneObjects_ObjectReference_1_DetermineValue__0_
  - name: (
  - name: T
  - name: )
