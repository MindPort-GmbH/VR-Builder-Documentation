### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Configuration.Modes.ListTypeRule`2
  commentId: T:VRBuilder.Core.Configuration.Modes.ListTypeRule`2
  id: ListTypeRule`2
  parent: VRBuilder.Core.Configuration.Modes
  children:
  - VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Add``1
  - VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Clone
  - VRBuilder.Core.Configuration.Modes.ListTypeRule`2.StoredTypes
  langs:
  - csharp
  - vb
  name: ListTypeRule<TRecursive, TValueBase>
  nameWithType: ListTypeRule<TRecursive, TValueBase>
  fullName: VRBuilder.Core.Configuration.Modes.ListTypeRule<TRecursive, TValueBase>
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/ListTypeRule.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ListTypeRule
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/ListTypeRule.cs
    startLine: 12
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: Base class for list-based implementations of the <xref href="VRBuilder.Core.Configuration.Modes.TypeRule%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: 'public abstract class ListTypeRule<TRecursive, TValueBase> : TypeRule<TValueBase>, IRule<Type> where TRecursive : ListTypeRule<TRecursive, TValueBase>, new()'
    typeParameters:
    - id: TRecursive
    - id: TValueBase
    content.vb: Public MustInherit Class ListTypeRule(Of TRecursive As {ListTypeRule(Of TRecursive, TValueBase), New}, TValueBase) Inherits TypeRule(Of TValueBase) Implements IRule(Of Type)
  inheritance:
  - System.Object
  - VRBuilder.Core.Configuration.Modes.TypeRule{{TValueBase}}
  derivedClasses:
  - VRBuilder.Core.Configuration.Modes.BlacklistTypeRule`1
  - VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1
  implements:
  - VRBuilder.Core.Configuration.Modes.IRule{System.Type}
  inheritedMembers:
  - VRBuilder.Core.Configuration.Modes.TypeRule{{TValueBase}}.IsQualifiedBy``1
  - VRBuilder.Core.Configuration.Modes.TypeRule{{TValueBase}}.IsQualifiedBy(System.Type)
  - VRBuilder.Core.Configuration.Modes.TypeRule{{TValueBase}}.IsQualifiedByPredicate(System.Type)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ListTypeRule(Of TRecursive, TValueBase)
  fullName.vb: VRBuilder.Core.Configuration.Modes.ListTypeRule(Of TRecursive, TValueBase)
  name.vb: ListTypeRule(Of TRecursive, TValueBase)
- uid: VRBuilder.Core.Configuration.Modes.ListTypeRule`2.StoredTypes
  commentId: P:VRBuilder.Core.Configuration.Modes.ListTypeRule`2.StoredTypes
  id: StoredTypes
  parent: VRBuilder.Core.Configuration.Modes.ListTypeRule`2
  langs:
  - csharp
  - vb
  name: StoredTypes
  nameWithType: ListTypeRule<TRecursive, TValueBase>.StoredTypes
  fullName: VRBuilder.Core.Configuration.Modes.ListTypeRule<TRecursive, TValueBase>.StoredTypes
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/ListTypeRule.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StoredTypes
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/ListTypeRule.cs
    startLine: 16
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  syntax:
    content: protected HashSet<Type> StoredTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.Type}
    content.vb: Protected ReadOnly Property StoredTypes As HashSet(Of Type)
  overload: VRBuilder.Core.Configuration.Modes.ListTypeRule`2.StoredTypes*
  nameWithType.vb: ListTypeRule(Of TRecursive, TValueBase).StoredTypes
  fullName.vb: VRBuilder.Core.Configuration.Modes.ListTypeRule(Of TRecursive, TValueBase).StoredTypes
- uid: VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Add``1
  commentId: M:VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Add``1
  id: Add``1
  parent: VRBuilder.Core.Configuration.Modes.ListTypeRule`2
  langs:
  - csharp
  - vb
  name: Add<T>()
  nameWithType: ListTypeRule<TRecursive, TValueBase>.Add<T>()
  fullName: VRBuilder.Core.Configuration.Modes.ListTypeRule<TRecursive, TValueBase>.Add<T>()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/ListTypeRule.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Add
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/ListTypeRule.cs
    startLine: 28
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: Adds an additional Type to the list and returns a changed instance of this rule.
  example: []
  syntax:
    content: 'public TRecursive Add<T>() where T : TValueBase'
    typeParameters:
    - id: T
      description: Type which is added.
    return:
      type: '{TRecursive}'
    content.vb: Public Function Add(Of T As TValueBase)() As TRecursive
  overload: VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Add*
  nameWithType.vb: ListTypeRule(Of TRecursive, TValueBase).Add(Of T)()
  fullName.vb: VRBuilder.Core.Configuration.Modes.ListTypeRule(Of TRecursive, TValueBase).Add(Of T)()
  name.vb: Add(Of T)()
- uid: VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Clone
  commentId: M:VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Clone
  id: Clone
  parent: VRBuilder.Core.Configuration.Modes.ListTypeRule`2
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ListTypeRule<TRecursive, TValueBase>.Clone()
  fullName: VRBuilder.Core.Configuration.Modes.ListTypeRule<TRecursive, TValueBase>.Clone()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/ListTypeRule.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Clone
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/ListTypeRule.cs
    startLine: 40
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  syntax:
    content: protected virtual TRecursive Clone()
    return:
      type: '{TRecursive}'
    content.vb: Protected Overridable Function Clone() As TRecursive
  overload: VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Clone*
  nameWithType.vb: ListTypeRule(Of TRecursive, TValueBase).Clone()
  fullName.vb: VRBuilder.Core.Configuration.Modes.ListTypeRule(Of TRecursive, TValueBase).Clone()
references:
- uid: VRBuilder.Core.Configuration.Modes.TypeRule`1
  commentId: T:VRBuilder.Core.Configuration.Modes.TypeRule`1
  href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html
  name: TypeRule<TValueBase>
  nameWithType: TypeRule<TValueBase>
  fullName: VRBuilder.Core.Configuration.Modes.TypeRule<TValueBase>
  nameWithType.vb: TypeRule(Of TValueBase)
  fullName.vb: VRBuilder.Core.Configuration.Modes.TypeRule(Of TValueBase)
  name.vb: TypeRule(Of TValueBase)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1
    name: TypeRule
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html
  - name: <
  - name: TValueBase
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1
    name: TypeRule
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TValueBase
  - name: )
- uid: VRBuilder.Core.Configuration.Modes
  commentId: N:VRBuilder.Core.Configuration.Modes
  href: VRBuilder.html
  name: VRBuilder.Core.Configuration.Modes
  nameWithType: VRBuilder.Core.Configuration.Modes
  fullName: VRBuilder.Core.Configuration.Modes
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Configuration
    name: Configuration
    href: VRBuilder.Core.Configuration.html
  - name: .
  - uid: VRBuilder.Core.Configuration.Modes
    name: Modes
    href: VRBuilder.Core.Configuration.Modes.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Configuration
    name: Configuration
    href: VRBuilder.Core.Configuration.html
  - name: .
  - uid: VRBuilder.Core.Configuration.Modes
    name: Modes
    href: VRBuilder.Core.Configuration.Modes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: VRBuilder.Core.Configuration.Modes.TypeRule{{TValueBase}}
  commentId: T:VRBuilder.Core.Configuration.Modes.TypeRule{`1}
  parent: VRBuilder.Core.Configuration.Modes
  definition: VRBuilder.Core.Configuration.Modes.TypeRule`1
  href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html
  name: TypeRule<TValueBase>
  nameWithType: TypeRule<TValueBase>
  fullName: VRBuilder.Core.Configuration.Modes.TypeRule<TValueBase>
  nameWithType.vb: TypeRule(Of TValueBase)
  fullName.vb: VRBuilder.Core.Configuration.Modes.TypeRule(Of TValueBase)
  name.vb: TypeRule(Of TValueBase)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1
    name: TypeRule
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html
  - name: <
  - name: TValueBase
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1
    name: TypeRule
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TValueBase
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.IRule{System.Type}
  commentId: T:VRBuilder.Core.Configuration.Modes.IRule{System.Type}
  parent: VRBuilder.Core.Configuration.Modes
  definition: VRBuilder.Core.Configuration.Modes.IRule`1
  href: VRBuilder.Core.Configuration.Modes.IRule-1.html
  name: IRule<Type>
  nameWithType: IRule<Type>
  fullName: VRBuilder.Core.Configuration.Modes.IRule<System.Type>
  nameWithType.vb: IRule(Of Type)
  fullName.vb: VRBuilder.Core.Configuration.Modes.IRule(Of System.Type)
  name.vb: IRule(Of Type)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.IRule`1
    name: IRule
    href: VRBuilder.Core.Configuration.Modes.IRule-1.html
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.IRule`1
    name: IRule
    href: VRBuilder.Core.Configuration.Modes.IRule-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.TypeRule{{TValueBase}}.IsQualifiedBy``1
  commentId: M:VRBuilder.Core.Configuration.Modes.TypeRule{`1}.IsQualifiedBy``1
  parent: VRBuilder.Core.Configuration.Modes.TypeRule{{TValueBase}}
  definition: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedBy``1
  href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy__1
  name: IsQualifiedBy<T>()
  nameWithType: TypeRule<TValueBase>.IsQualifiedBy<T>()
  fullName: VRBuilder.Core.Configuration.Modes.TypeRule<TValueBase>.IsQualifiedBy<T>()
  nameWithType.vb: TypeRule(Of TValueBase).IsQualifiedBy(Of T)()
  fullName.vb: VRBuilder.Core.Configuration.Modes.TypeRule(Of TValueBase).IsQualifiedBy(Of T)()
  name.vb: IsQualifiedBy(Of T)()
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule{`1}.IsQualifiedBy``1
    name: IsQualifiedBy
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule{`1}.IsQualifiedBy``1
    name: IsQualifiedBy
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.TypeRule{{TValueBase}}.IsQualifiedBy(System.Type)
  commentId: M:VRBuilder.Core.Configuration.Modes.TypeRule{`1}.IsQualifiedBy(System.Type)
  parent: VRBuilder.Core.Configuration.Modes.TypeRule{{TValueBase}}
  definition: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedBy(System.Type)
  href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy_System_Type_
  name: IsQualifiedBy(Type)
  nameWithType: TypeRule<TValueBase>.IsQualifiedBy(Type)
  fullName: VRBuilder.Core.Configuration.Modes.TypeRule<TValueBase>.IsQualifiedBy(System.Type)
  nameWithType.vb: TypeRule(Of TValueBase).IsQualifiedBy(Type)
  fullName.vb: VRBuilder.Core.Configuration.Modes.TypeRule(Of TValueBase).IsQualifiedBy(System.Type)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule{`1}.IsQualifiedBy(System.Type)
    name: IsQualifiedBy
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule{`1}.IsQualifiedBy(System.Type)
    name: IsQualifiedBy
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.TypeRule{{TValueBase}}.IsQualifiedByPredicate(System.Type)
  commentId: M:VRBuilder.Core.Configuration.Modes.TypeRule{`1}.IsQualifiedByPredicate(System.Type)
  parent: VRBuilder.Core.Configuration.Modes.TypeRule{{TValueBase}}
  definition: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedByPredicate(System.Type)
  href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedByPredicate_System_Type_
  name: IsQualifiedByPredicate(Type)
  nameWithType: TypeRule<TValueBase>.IsQualifiedByPredicate(Type)
  fullName: VRBuilder.Core.Configuration.Modes.TypeRule<TValueBase>.IsQualifiedByPredicate(System.Type)
  nameWithType.vb: TypeRule(Of TValueBase).IsQualifiedByPredicate(Type)
  fullName.vb: VRBuilder.Core.Configuration.Modes.TypeRule(Of TValueBase).IsQualifiedByPredicate(System.Type)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule{`1}.IsQualifiedByPredicate(System.Type)
    name: IsQualifiedByPredicate
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedByPredicate_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule{`1}.IsQualifiedByPredicate(System.Type)
    name: IsQualifiedByPredicate
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedByPredicate_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Configuration.Modes.IRule`1
  commentId: T:VRBuilder.Core.Configuration.Modes.IRule`1
  href: VRBuilder.Core.Configuration.Modes.IRule-1.html
  name: IRule<T>
  nameWithType: IRule<T>
  fullName: VRBuilder.Core.Configuration.Modes.IRule<T>
  nameWithType.vb: IRule(Of T)
  fullName.vb: VRBuilder.Core.Configuration.Modes.IRule(Of T)
  name.vb: IRule(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.IRule`1
    name: IRule
    href: VRBuilder.Core.Configuration.Modes.IRule-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.IRule`1
    name: IRule
    href: VRBuilder.Core.Configuration.Modes.IRule-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedBy``1
  commentId: M:VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedBy``1
  href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy__1
  name: IsQualifiedBy<T>()
  nameWithType: TypeRule<TValueBase>.IsQualifiedBy<T>()
  fullName: VRBuilder.Core.Configuration.Modes.TypeRule<TValueBase>.IsQualifiedBy<T>()
  nameWithType.vb: TypeRule(Of TValueBase).IsQualifiedBy(Of T)()
  fullName.vb: VRBuilder.Core.Configuration.Modes.TypeRule(Of TValueBase).IsQualifiedBy(Of T)()
  name.vb: IsQualifiedBy(Of T)()
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedBy``1
    name: IsQualifiedBy
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedBy``1
    name: IsQualifiedBy
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedBy(System.Type)
  commentId: M:VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedBy(System.Type)
  isExternal: true
  href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy_System_Type_
  name: IsQualifiedBy(Type)
  nameWithType: TypeRule<TValueBase>.IsQualifiedBy(Type)
  fullName: VRBuilder.Core.Configuration.Modes.TypeRule<TValueBase>.IsQualifiedBy(System.Type)
  nameWithType.vb: TypeRule(Of TValueBase).IsQualifiedBy(Type)
  fullName.vb: VRBuilder.Core.Configuration.Modes.TypeRule(Of TValueBase).IsQualifiedBy(System.Type)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedBy(System.Type)
    name: IsQualifiedBy
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedBy(System.Type)
    name: IsQualifiedBy
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedByPredicate(System.Type)
  commentId: M:VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedByPredicate(System.Type)
  isExternal: true
  href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedByPredicate_System_Type_
  name: IsQualifiedByPredicate(Type)
  nameWithType: TypeRule<TValueBase>.IsQualifiedByPredicate(Type)
  fullName: VRBuilder.Core.Configuration.Modes.TypeRule<TValueBase>.IsQualifiedByPredicate(System.Type)
  nameWithType.vb: TypeRule(Of TValueBase).IsQualifiedByPredicate(Type)
  fullName.vb: VRBuilder.Core.Configuration.Modes.TypeRule(Of TValueBase).IsQualifiedByPredicate(System.Type)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedByPredicate(System.Type)
    name: IsQualifiedByPredicate
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedByPredicate_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedByPredicate(System.Type)
    name: IsQualifiedByPredicate
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedByPredicate_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.ListTypeRule`2.StoredTypes*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.ListTypeRule`2.StoredTypes
  href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html#VRBuilder_Core_Configuration_Modes_ListTypeRule_2_StoredTypes
  name: StoredTypes
  nameWithType: ListTypeRule<TRecursive, TValueBase>.StoredTypes
  fullName: VRBuilder.Core.Configuration.Modes.ListTypeRule<TRecursive, TValueBase>.StoredTypes
  nameWithType.vb: ListTypeRule(Of TRecursive, TValueBase).StoredTypes
  fullName.vb: VRBuilder.Core.Configuration.Modes.ListTypeRule(Of TRecursive, TValueBase).StoredTypes
- uid: System.Collections.Generic.HashSet{System.Type}
  commentId: T:System.Collections.Generic.HashSet{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<Type>
  nameWithType: HashSet<Type>
  fullName: System.Collections.Generic.HashSet<System.Type>
  nameWithType.vb: HashSet(Of Type)
  fullName.vb: System.Collections.Generic.HashSet(Of System.Type)
  name.vb: HashSet(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Add*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Add
  href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html#VRBuilder_Core_Configuration_Modes_ListTypeRule_2_Add__1
  name: Add
  nameWithType: ListTypeRule<TRecursive, TValueBase>.Add
  fullName: VRBuilder.Core.Configuration.Modes.ListTypeRule<TRecursive, TValueBase>.Add
  nameWithType.vb: ListTypeRule(Of TRecursive, TValueBase).Add
  fullName.vb: VRBuilder.Core.Configuration.Modes.ListTypeRule(Of TRecursive, TValueBase).Add
- uid: '{TRecursive}'
  commentId: '!:TRecursive'
  definition: TRecursive
  name: TRecursive
  nameWithType: TRecursive
  fullName: TRecursive
- uid: TRecursive
  name: TRecursive
  nameWithType: TRecursive
  fullName: TRecursive
- uid: VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Clone*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Clone
  href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html#VRBuilder_Core_Configuration_Modes_ListTypeRule_2_Clone
  name: Clone
  nameWithType: ListTypeRule<TRecursive, TValueBase>.Clone
  fullName: VRBuilder.Core.Configuration.Modes.ListTypeRule<TRecursive, TValueBase>.Clone
  nameWithType.vb: ListTypeRule(Of TRecursive, TValueBase).Clone
  fullName.vb: VRBuilder.Core.Configuration.Modes.ListTypeRule(Of TRecursive, TValueBase).Clone
