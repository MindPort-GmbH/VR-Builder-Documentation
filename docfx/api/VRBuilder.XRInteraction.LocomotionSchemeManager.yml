### YamlMime:ManagedReference
items:
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager
  commentId: T:VRBuilder.XRInteraction.LocomotionSchemeManager
  id: LocomotionSchemeManager
  parent: VRBuilder.XRInteraction
  children:
  - VRBuilder.XRInteraction.LocomotionSchemeManager.ActionAssets
  - VRBuilder.XRInteraction.LocomotionSchemeManager.ActionMaps
  - VRBuilder.XRInteraction.LocomotionSchemeManager.Actions
  - VRBuilder.XRInteraction.LocomotionSchemeManager.BaseControlScheme
  - VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousControlScheme
  - VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousMoveProvider
  - VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousTurnProvider
  - VRBuilder.XRInteraction.LocomotionSchemeManager.HeadForwardSource
  - VRBuilder.XRInteraction.LocomotionSchemeManager.LeftHandForwardSource
  - VRBuilder.XRInteraction.LocomotionSchemeManager.MoveForwardSource
  - VRBuilder.XRInteraction.LocomotionSchemeManager.MoveScheme
  - VRBuilder.XRInteraction.LocomotionSchemeManager.NoncontinuousControlScheme
  - VRBuilder.XRInteraction.LocomotionSchemeManager.RightHandForwardSource
  - VRBuilder.XRInteraction.LocomotionSchemeManager.SnapTurnProvider
  - VRBuilder.XRInteraction.LocomotionSchemeManager.TurnStyle
  langs:
  - csharp
  - vb
  name: LocomotionSchemeManager
  nameWithType: LocomotionSchemeManager
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager
  type: Class
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LocomotionSchemeManager
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
    startLine: 36
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: "\nUse this class as a central manager to configure locomotion control schemes and configuration preferences.\n"
  remarks: "\nInput bindings will often overlap between different locomotion methods, and this class can be used to\nset binding masks which are used to determine which bindings of an action to enable and which to ignore.\n\n<example>\nTeleport  (Input Action)\n(1) Binding &lt;XRController>{LeftHand}/PrimaryButton (Use in control scheme &quot;Generic XR&quot;)\n(2) Binding &lt;XRController>{LeftHand}/Primary2DAxis (Use in control scheme &quot;Noncontinuous Move&quot;)\nMove (Input Action)\n(3) Binding &lt;XRController>{LeftHand}/Primary2DAxis (Use in control scheme &quot;Continuous Move&quot;)\n\nSet <xref href=\"VRBuilder.XRInteraction.LocomotionSchemeManager.baseControlScheme\" data-throw-if-not-resolved=\"false\"></xref>=&quot;Generic XR&quot;\nSet <xref href=\"VRBuilder.XRInteraction.LocomotionSchemeManager.noncontinuousControlScheme\" data-throw-if-not-resolved=\"false\"></xref>=&quot;Noncontinuous Move&quot;\nSet <xref href=\"VRBuilder.XRInteraction.LocomotionSchemeManager.continuousControlScheme\" data-throw-if-not-resolved=\"false\"></xref>=&quot;Continuous Move&quot;\nSet <xref href=\"VRBuilder.XRInteraction.LocomotionSchemeManager.actions\" data-throw-if-not-resolved=\"false\"></xref> to be both input actions (Teleport and Move).\n\nWhen <xref href=\"VRBuilder.XRInteraction.LocomotionSchemeManager.moveScheme\" data-throw-if-not-resolved=\"false\"></xref>=<xref href=\"VRBuilder.XRInteraction.LocomotionSchemeManager.MoveSchemeType.Noncontinuous\" data-throw-if-not-resolved=\"false\"></xref>,\nbindings (1) and (2) will be enabled, but binding (3) will be disabled.\n\nWhen <xref href=\"VRBuilder.XRInteraction.LocomotionSchemeManager.moveScheme\" data-throw-if-not-resolved=\"false\"></xref>=<xref href=\"VRBuilder.XRInteraction.LocomotionSchemeManager.MoveSchemeType.Continuous\" data-throw-if-not-resolved=\"false\"></xref>,\nbindings (1) and (3) will be enabled, but binding (2) will be disabled.\n</example>\n"
  example: []
  syntax:
    content: 'public class LocomotionSchemeManager : MonoBehaviour'
    content.vb: >-
      Public Class LocomotionSchemeManager

          Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  inheritedMembers:
  - UnityEngine.MonoBehaviour.IsInvoking
  - UnityEngine.MonoBehaviour.CancelInvoke
  - UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
  - UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
  - UnityEngine.MonoBehaviour.CancelInvoke(System.String)
  - UnityEngine.MonoBehaviour.IsInvoking(System.String)
  - UnityEngine.MonoBehaviour.StartCoroutine(System.String)
  - UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
  - UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
  - UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
  - UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
  - UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
  - UnityEngine.MonoBehaviour.StopCoroutine(System.String)
  - UnityEngine.MonoBehaviour.StopAllCoroutines
  - UnityEngine.MonoBehaviour.print(System.Object)
  - UnityEngine.MonoBehaviour.useGUILayout
  - UnityEngine.MonoBehaviour.runInEditMode
  - UnityEngine.Behaviour.enabled
  - UnityEngine.Behaviour.isActiveAndEnabled
  - UnityEngine.Component.GetComponent(System.Type)
  - UnityEngine.Component.GetComponent``1
  - UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
  - UnityEngine.Component.TryGetComponent``1({T}@)
  - UnityEngine.Component.GetComponent(System.String)
  - UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
  - UnityEngine.Component.GetComponentInChildren(System.Type)
  - UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
  - UnityEngine.Component.GetComponentInChildren``1
  - UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
  - UnityEngine.Component.GetComponentsInChildren(System.Type)
  - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
  - UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
  - UnityEngine.Component.GetComponentsInChildren``1
  - UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
  - UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
  - UnityEngine.Component.GetComponentInParent(System.Type)
  - UnityEngine.Component.GetComponentInParent``1(System.Boolean)
  - UnityEngine.Component.GetComponentInParent``1
  - UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
  - UnityEngine.Component.GetComponentsInParent(System.Type)
  - UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
  - UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
  - UnityEngine.Component.GetComponentsInParent``1
  - UnityEngine.Component.GetComponents(System.Type)
  - UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
  - UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
  - UnityEngine.Component.GetComponents``1
  - UnityEngine.Component.CompareTag(System.String)
  - UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
  - UnityEngine.Component.SendMessageUpwards(System.String)
  - UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.SendMessage(System.String,System.Object)
  - UnityEngine.Component.SendMessage(System.String)
  - UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.BroadcastMessage(System.String,System.Object)
  - UnityEngine.Component.BroadcastMessage(System.String)
  - UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
  - UnityEngine.Component.transform
  - UnityEngine.Component.gameObject
  - UnityEngine.Component.tag
  - UnityEngine.Object.GetInstanceID
  - UnityEngine.Object.GetHashCode
  - UnityEngine.Object.Equals(System.Object)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate(UnityEngine.Object)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  - UnityEngine.Object.Instantiate``1({T})
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
  - UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
  - UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  - UnityEngine.Object.Destroy(UnityEngine.Object)
  - UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  - UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  - UnityEngine.Object.FindObjectsOfType(System.Type)
  - UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  - UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  - UnityEngine.Object.DestroyObject(UnityEngine.Object)
  - UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  - UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  - UnityEngine.Object.FindObjectsOfType``1
  - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  - UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  - UnityEngine.Object.FindObjectOfType``1
  - UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  - UnityEngine.Object.FindFirstObjectByType``1
  - UnityEngine.Object.FindAnyObjectByType``1
  - UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  - UnityEngine.Object.FindObjectOfType(System.Type)
  - UnityEngine.Object.FindFirstObjectByType(System.Type)
  - UnityEngine.Object.FindAnyObjectByType(System.Type)
  - UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  - UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  - UnityEngine.Object.ToString
  - UnityEngine.Object.name
  - UnityEngine.Object.hideFlags
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.MoveScheme
  commentId: P:VRBuilder.XRInteraction.LocomotionSchemeManager.MoveScheme
  id: MoveScheme
  parent: VRBuilder.XRInteraction.LocomotionSchemeManager
  langs:
  - csharp
  - vb
  name: MoveScheme
  nameWithType: LocomotionSchemeManager.MoveScheme
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.MoveScheme
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: MoveScheme
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
    startLine: 103
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: "\nControls which movement control scheme to use.\n"
  example: []
  syntax:
    content: public LocomotionSchemeManager.MoveSchemeType MoveScheme { get; set; }
    parameters: []
    return:
      type: VRBuilder.XRInteraction.LocomotionSchemeManager.MoveSchemeType
    content.vb: Public Property MoveScheme As LocomotionSchemeManager.MoveSchemeType
  overload: VRBuilder.XRInteraction.LocomotionSchemeManager.MoveScheme*
  seealso:
  - linkId: VRBuilder.XRInteraction.LocomotionSchemeManager.MoveSchemeType
    commentId: T:VRBuilder.XRInteraction.LocomotionSchemeManager.MoveSchemeType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.TurnStyle
  commentId: P:VRBuilder.XRInteraction.LocomotionSchemeManager.TurnStyle
  id: TurnStyle
  parent: VRBuilder.XRInteraction.LocomotionSchemeManager
  langs:
  - csharp
  - vb
  name: TurnStyle
  nameWithType: LocomotionSchemeManager.TurnStyle
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.TurnStyle
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: TurnStyle
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
    startLine: 121
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: "\nControls which turn style of locomotion to use.\n"
  example: []
  syntax:
    content: public LocomotionSchemeManager.TurnStyleType TurnStyle { get; set; }
    parameters: []
    return:
      type: VRBuilder.XRInteraction.LocomotionSchemeManager.TurnStyleType
    content.vb: Public Property TurnStyle As LocomotionSchemeManager.TurnStyleType
  overload: VRBuilder.XRInteraction.LocomotionSchemeManager.TurnStyle*
  seealso:
  - linkId: VRBuilder.XRInteraction.LocomotionSchemeManager.TurnStyleType
    commentId: T:VRBuilder.XRInteraction.LocomotionSchemeManager.TurnStyleType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.MoveForwardSource
  commentId: P:VRBuilder.XRInteraction.LocomotionSchemeManager.MoveForwardSource
  id: MoveForwardSource
  parent: VRBuilder.XRInteraction.LocomotionSchemeManager
  langs:
  - csharp
  - vb
  name: MoveForwardSource
  nameWithType: LocomotionSchemeManager.MoveForwardSource
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.MoveForwardSource
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: MoveForwardSource
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
    startLine: 139
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: "\nControls which orientation the forward direction of continuous movement is relative to.\n"
  example: []
  syntax:
    content: public LocomotionSchemeManager.MoveForwardSourceType MoveForwardSource { get; set; }
    parameters: []
    return:
      type: VRBuilder.XRInteraction.LocomotionSchemeManager.MoveForwardSourceType
    content.vb: Public Property MoveForwardSource As LocomotionSchemeManager.MoveForwardSourceType
  overload: VRBuilder.XRInteraction.LocomotionSchemeManager.MoveForwardSource*
  seealso:
  - linkId: VRBuilder.XRInteraction.LocomotionSchemeManager.MoveForwardSourceType
    commentId: T:VRBuilder.XRInteraction.LocomotionSchemeManager.MoveForwardSourceType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.ActionAssets
  commentId: P:VRBuilder.XRInteraction.LocomotionSchemeManager.ActionAssets
  id: ActionAssets
  parent: VRBuilder.XRInteraction.LocomotionSchemeManager
  langs:
  - csharp
  - vb
  name: ActionAssets
  nameWithType: LocomotionSchemeManager.ActionAssets
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.ActionAssets
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ActionAssets
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
    startLine: 159
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: "\nInput action assets associated with locomotion to affect when the active movement control scheme is set.\nCan use this list by itself or together with the Action Maps list to set control scheme masks by Asset or Map.\n"
  example: []
  syntax:
    content: public List<InputActionAsset> ActionAssets { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{UnityEngine.InputSystem.InputActionAsset}
    content.vb: Public Property ActionAssets As List(Of InputActionAsset)
  overload: VRBuilder.XRInteraction.LocomotionSchemeManager.ActionAssets*
  seealso:
  - linkId: VRBuilder.XRInteraction.LocomotionSchemeManager.actionMaps
    commentId: F:VRBuilder.XRInteraction.LocomotionSchemeManager.actionMaps
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.ActionMaps
  commentId: P:VRBuilder.XRInteraction.LocomotionSchemeManager.ActionMaps
  id: ActionMaps
  parent: VRBuilder.XRInteraction.LocomotionSchemeManager
  langs:
  - csharp
  - vb
  name: ActionMaps
  nameWithType: LocomotionSchemeManager.ActionMaps
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.ActionMaps
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ActionMaps
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
    startLine: 175
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: "\nInput action maps associated with locomotion to affect when the active movement control scheme is set.\nCan use this list together with the Action Assets list to set control scheme masks by Map instead of the whole Asset.\n"
  example: []
  syntax:
    content: public List<string> ActionMaps { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property ActionMaps As List(Of String)
  overload: VRBuilder.XRInteraction.LocomotionSchemeManager.ActionMaps*
  seealso:
  - linkId: VRBuilder.XRInteraction.LocomotionSchemeManager.actionAssets
    commentId: F:VRBuilder.XRInteraction.LocomotionSchemeManager.actionAssets
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.Actions
  commentId: P:VRBuilder.XRInteraction.LocomotionSchemeManager.Actions
  id: Actions
  parent: VRBuilder.XRInteraction.LocomotionSchemeManager
  langs:
  - csharp
  - vb
  name: Actions
  nameWithType: LocomotionSchemeManager.Actions
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.Actions
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Actions
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
    startLine: 192
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: "\nInput actions associated with locomotion that are affected by the active movement control scheme.\nCan use this list to select exactly the actions to affect instead of setting control scheme masks by Asset or Map.\n"
  example: []
  syntax:
    content: public List<InputActionReference> Actions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{UnityEngine.InputSystem.InputActionReference}
    content.vb: Public Property Actions As List(Of InputActionReference)
  overload: VRBuilder.XRInteraction.LocomotionSchemeManager.Actions*
  seealso:
  - linkId: VRBuilder.XRInteraction.LocomotionSchemeManager.actionAssets
    commentId: F:VRBuilder.XRInteraction.LocomotionSchemeManager.actionAssets
  - linkId: VRBuilder.XRInteraction.LocomotionSchemeManager.actionMaps
    commentId: F:VRBuilder.XRInteraction.LocomotionSchemeManager.actionMaps
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.BaseControlScheme
  commentId: P:VRBuilder.XRInteraction.LocomotionSchemeManager.BaseControlScheme
  id: BaseControlScheme
  parent: VRBuilder.XRInteraction.LocomotionSchemeManager
  langs:
  - csharp
  - vb
  name: BaseControlScheme
  nameWithType: LocomotionSchemeManager.BaseControlScheme
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.BaseControlScheme
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: BaseControlScheme
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
    startLine: 209
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: "\nName of an input control scheme that defines the grouping of bindings that should remain enabled when applying any movement control scheme.\nControl schemes are created and named in the Input Actions window. The other movement control schemes are applied additively to this scheme.\nCan be an empty string, which means only bindings that match the specified movement control scheme will be enabled.\n"
  example: []
  syntax:
    content: public string BaseControlScheme { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property BaseControlScheme As String
  overload: VRBuilder.XRInteraction.LocomotionSchemeManager.BaseControlScheme*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.NoncontinuousControlScheme
  commentId: P:VRBuilder.XRInteraction.LocomotionSchemeManager.NoncontinuousControlScheme
  id: NoncontinuousControlScheme
  parent: VRBuilder.XRInteraction.LocomotionSchemeManager
  langs:
  - csharp
  - vb
  name: NoncontinuousControlScheme
  nameWithType: LocomotionSchemeManager.NoncontinuousControlScheme
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.NoncontinuousControlScheme
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: NoncontinuousControlScheme
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
    startLine: 226
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: "\nName of an input control scheme that defines the grouping of bindings that should remain enabled when applying the noncontinuous movement control scheme.\nControl schemes are created and named in the Input Actions window. Can be an empty string, which means only bindings that match the\nbase control scheme will be enabled.\n"
  example: []
  syntax:
    content: public string NoncontinuousControlScheme { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NoncontinuousControlScheme As String
  overload: VRBuilder.XRInteraction.LocomotionSchemeManager.NoncontinuousControlScheme*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousControlScheme
  commentId: P:VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousControlScheme
  id: ContinuousControlScheme
  parent: VRBuilder.XRInteraction.LocomotionSchemeManager
  langs:
  - csharp
  - vb
  name: ContinuousControlScheme
  nameWithType: LocomotionSchemeManager.ContinuousControlScheme
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousControlScheme
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ContinuousControlScheme
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
    startLine: 243
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: "\nName of an input control scheme that defines the grouping of bindings that should remain enabled when applying the continuous movement control scheme.\nControl schemes are created and named in the Input Actions window. Can be an empty string, which means only bindings that match the\nbase control scheme will be enabled.\n"
  example: []
  syntax:
    content: public string ContinuousControlScheme { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ContinuousControlScheme As String
  overload: VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousControlScheme*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousMoveProvider
  commentId: P:VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousMoveProvider
  id: ContinuousMoveProvider
  parent: VRBuilder.XRInteraction.LocomotionSchemeManager
  langs:
  - csharp
  - vb
  name: ContinuousMoveProvider
  nameWithType: LocomotionSchemeManager.ContinuousMoveProvider
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousMoveProvider
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ContinuousMoveProvider
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
    startLine: 257
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: "\nStores the locomotion provider for continuous movement.\n"
  example: []
  syntax:
    content: public ContinuousMoveProviderBase ContinuousMoveProvider { get; set; }
    parameters: []
    return:
      type: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase
    content.vb: Public Property ContinuousMoveProvider As ContinuousMoveProviderBase
  overload: VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousMoveProvider*
  seealso:
  - linkId: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase
    commentId: T:UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousTurnProvider
  commentId: P:VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousTurnProvider
  id: ContinuousTurnProvider
  parent: VRBuilder.XRInteraction.LocomotionSchemeManager
  langs:
  - csharp
  - vb
  name: ContinuousTurnProvider
  nameWithType: LocomotionSchemeManager.ContinuousTurnProvider
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousTurnProvider
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ContinuousTurnProvider
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
    startLine: 271
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: "\nStores the locomotion provider for continuous turning.\n"
  example: []
  syntax:
    content: public ContinuousTurnProviderBase ContinuousTurnProvider { get; set; }
    parameters: []
    return:
      type: UnityEngine.XR.Interaction.Toolkit.ContinuousTurnProviderBase
    content.vb: Public Property ContinuousTurnProvider As ContinuousTurnProviderBase
  overload: VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousTurnProvider*
  seealso:
  - linkId: UnityEngine.XR.Interaction.Toolkit.ContinuousTurnProviderBase
    commentId: T:UnityEngine.XR.Interaction.Toolkit.ContinuousTurnProviderBase
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.SnapTurnProvider
  commentId: P:VRBuilder.XRInteraction.LocomotionSchemeManager.SnapTurnProvider
  id: SnapTurnProvider
  parent: VRBuilder.XRInteraction.LocomotionSchemeManager
  langs:
  - csharp
  - vb
  name: SnapTurnProvider
  nameWithType: LocomotionSchemeManager.SnapTurnProvider
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.SnapTurnProvider
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SnapTurnProvider
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
    startLine: 285
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: "\nStores the locomotion provider for snap turning.\n"
  example: []
  syntax:
    content: public SnapTurnProviderBase SnapTurnProvider { get; set; }
    parameters: []
    return:
      type: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase
    content.vb: Public Property SnapTurnProvider As SnapTurnProviderBase
  overload: VRBuilder.XRInteraction.LocomotionSchemeManager.SnapTurnProvider*
  seealso:
  - linkId: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase
    commentId: T:UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.HeadForwardSource
  commentId: P:VRBuilder.XRInteraction.LocomotionSchemeManager.HeadForwardSource
  id: HeadForwardSource
  parent: VRBuilder.XRInteraction.LocomotionSchemeManager
  langs:
  - csharp
  - vb
  name: HeadForwardSource
  nameWithType: LocomotionSchemeManager.HeadForwardSource
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.HeadForwardSource
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: HeadForwardSource
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
    startLine: 298
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: "\nStores the &quot;Head&quot; <xref href=\"UnityEngine.Transform\" data-throw-if-not-resolved=\"false\"></xref> used with continuous movement when inputs should be relative to head orientation (usually the main camera).\n"
  example: []
  syntax:
    content: public Transform HeadForwardSource { get; set; }
    parameters: []
    return:
      type: UnityEngine.Transform
    content.vb: Public Property HeadForwardSource As Transform
  overload: VRBuilder.XRInteraction.LocomotionSchemeManager.HeadForwardSource*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.LeftHandForwardSource
  commentId: P:VRBuilder.XRInteraction.LocomotionSchemeManager.LeftHandForwardSource
  id: LeftHandForwardSource
  parent: VRBuilder.XRInteraction.LocomotionSchemeManager
  langs:
  - csharp
  - vb
  name: LeftHandForwardSource
  nameWithType: LocomotionSchemeManager.LeftHandForwardSource
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.LeftHandForwardSource
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LeftHandForwardSource
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
    startLine: 311
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: "\nStores the &quot;Left Hand&quot; <xref href=\"UnityEngine.Transform\" data-throw-if-not-resolved=\"false\"></xref> used with continuous movement when inputs should be relative to the left hand&apos;s orientation.\n"
  example: []
  syntax:
    content: public Transform LeftHandForwardSource { get; set; }
    parameters: []
    return:
      type: UnityEngine.Transform
    content.vb: Public Property LeftHandForwardSource As Transform
  overload: VRBuilder.XRInteraction.LocomotionSchemeManager.LeftHandForwardSource*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.RightHandForwardSource
  commentId: P:VRBuilder.XRInteraction.LocomotionSchemeManager.RightHandForwardSource
  id: RightHandForwardSource
  parent: VRBuilder.XRInteraction.LocomotionSchemeManager
  langs:
  - csharp
  - vb
  name: RightHandForwardSource
  nameWithType: LocomotionSchemeManager.RightHandForwardSource
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.RightHandForwardSource
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RightHandForwardSource
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/LocomotionSchemeManager.cs
    startLine: 324
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: "\nStores the &quot;Right Hand&quot; <xref href=\"UnityEngine.Transform\" data-throw-if-not-resolved=\"false\"></xref> used with continuous movement when inputs should be relative to the right hand&apos;s orientation.\n"
  example: []
  syntax:
    content: public Transform RightHandForwardSource { get; set; }
    parameters: []
    return:
      type: UnityEngine.Transform
    content.vb: Public Property RightHandForwardSource As Transform
  overload: VRBuilder.XRInteraction.LocomotionSchemeManager.RightHandForwardSource*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.baseControlScheme
  commentId: F:VRBuilder.XRInteraction.LocomotionSchemeManager.baseControlScheme
  isExternal: true
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.noncontinuousControlScheme
  commentId: F:VRBuilder.XRInteraction.LocomotionSchemeManager.noncontinuousControlScheme
  isExternal: true
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.continuousControlScheme
  commentId: F:VRBuilder.XRInteraction.LocomotionSchemeManager.continuousControlScheme
  isExternal: true
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.actions
  commentId: F:VRBuilder.XRInteraction.LocomotionSchemeManager.actions
  isExternal: true
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.moveScheme
  commentId: F:VRBuilder.XRInteraction.LocomotionSchemeManager.moveScheme
  isExternal: true
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.MoveSchemeType.Noncontinuous
  commentId: F:VRBuilder.XRInteraction.LocomotionSchemeManager.MoveSchemeType.Noncontinuous
  isExternal: true
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.MoveSchemeType.Continuous
  commentId: F:VRBuilder.XRInteraction.LocomotionSchemeManager.MoveSchemeType.Continuous
  isExternal: true
- uid: VRBuilder.XRInteraction
  commentId: N:VRBuilder.XRInteraction
  name: VRBuilder.XRInteraction
  nameWithType: VRBuilder.XRInteraction
  fullName: VRBuilder.XRInteraction
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: UnityEngine.MonoBehaviour.IsInvoking
  commentId: M:UnityEngine.MonoBehaviour.IsInvoking
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: IsInvoking()
  nameWithType: MonoBehaviour.IsInvoking()
  fullName: UnityEngine.MonoBehaviour.IsInvoking()
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.IsInvoking
    name: IsInvoking
    nameWithType: MonoBehaviour.IsInvoking
    fullName: UnityEngine.MonoBehaviour.IsInvoking
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.IsInvoking
    name: IsInvoking
    nameWithType: MonoBehaviour.IsInvoking
    fullName: UnityEngine.MonoBehaviour.IsInvoking
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.CancelInvoke
  commentId: M:UnityEngine.MonoBehaviour.CancelInvoke
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: CancelInvoke()
  nameWithType: MonoBehaviour.CancelInvoke()
  fullName: UnityEngine.MonoBehaviour.CancelInvoke()
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.CancelInvoke
    name: CancelInvoke
    nameWithType: MonoBehaviour.CancelInvoke
    fullName: UnityEngine.MonoBehaviour.CancelInvoke
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.CancelInvoke
    name: CancelInvoke
    nameWithType: MonoBehaviour.CancelInvoke
    fullName: UnityEngine.MonoBehaviour.CancelInvoke
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
  commentId: M:UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: Invoke(String, Single)
  nameWithType: MonoBehaviour.Invoke(String, Single)
  fullName: UnityEngine.MonoBehaviour.Invoke(System.String, System.Single)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    name: Invoke
    nameWithType: MonoBehaviour.Invoke
    fullName: UnityEngine.MonoBehaviour.Invoke
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.Invoke(System.String,System.Single)
    name: Invoke
    nameWithType: MonoBehaviour.Invoke
    fullName: UnityEngine.MonoBehaviour.Invoke
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
  commentId: M:UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: InvokeRepeating(String, Single, Single)
  nameWithType: MonoBehaviour.InvokeRepeating(String, Single, Single)
  fullName: UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    name: InvokeRepeating
    nameWithType: MonoBehaviour.InvokeRepeating
    fullName: UnityEngine.MonoBehaviour.InvokeRepeating
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.InvokeRepeating(System.String,System.Single,System.Single)
    name: InvokeRepeating
    nameWithType: MonoBehaviour.InvokeRepeating
    fullName: UnityEngine.MonoBehaviour.InvokeRepeating
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.CancelInvoke(System.String)
  commentId: M:UnityEngine.MonoBehaviour.CancelInvoke(System.String)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: CancelInvoke(String)
  nameWithType: MonoBehaviour.CancelInvoke(String)
  fullName: UnityEngine.MonoBehaviour.CancelInvoke(System.String)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    name: CancelInvoke
    nameWithType: MonoBehaviour.CancelInvoke
    fullName: UnityEngine.MonoBehaviour.CancelInvoke
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.CancelInvoke(System.String)
    name: CancelInvoke
    nameWithType: MonoBehaviour.CancelInvoke
    fullName: UnityEngine.MonoBehaviour.CancelInvoke
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.IsInvoking(System.String)
  commentId: M:UnityEngine.MonoBehaviour.IsInvoking(System.String)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: IsInvoking(String)
  nameWithType: MonoBehaviour.IsInvoking(String)
  fullName: UnityEngine.MonoBehaviour.IsInvoking(System.String)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.IsInvoking(System.String)
    name: IsInvoking
    nameWithType: MonoBehaviour.IsInvoking
    fullName: UnityEngine.MonoBehaviour.IsInvoking
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.IsInvoking(System.String)
    name: IsInvoking
    nameWithType: MonoBehaviour.IsInvoking
    fullName: UnityEngine.MonoBehaviour.IsInvoking
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String)
  commentId: M:UnityEngine.MonoBehaviour.StartCoroutine(System.String)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StartCoroutine(String)
  nameWithType: MonoBehaviour.StartCoroutine(String)
  fullName: UnityEngine.MonoBehaviour.StartCoroutine(System.String)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    name: StartCoroutine
    nameWithType: MonoBehaviour.StartCoroutine
    fullName: UnityEngine.MonoBehaviour.StartCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String)
    name: StartCoroutine
    nameWithType: MonoBehaviour.StartCoroutine
    fullName: UnityEngine.MonoBehaviour.StartCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
  commentId: M:UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StartCoroutine(String, Object)
  nameWithType: MonoBehaviour.StartCoroutine(String, Object)
  fullName: UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    name: StartCoroutine
    nameWithType: MonoBehaviour.StartCoroutine
    fullName: UnityEngine.MonoBehaviour.StartCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.String,System.Object)
    name: StartCoroutine
    nameWithType: MonoBehaviour.StartCoroutine
    fullName: UnityEngine.MonoBehaviour.StartCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
  commentId: M:UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StartCoroutine(IEnumerator)
  nameWithType: MonoBehaviour.StartCoroutine(IEnumerator)
  fullName: UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: MonoBehaviour.StartCoroutine
    fullName: UnityEngine.MonoBehaviour.StartCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator)
    name: StartCoroutine
    nameWithType: MonoBehaviour.StartCoroutine
    fullName: UnityEngine.MonoBehaviour.StartCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
  commentId: M:UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StartCoroutine_Auto(IEnumerator)
  nameWithType: MonoBehaviour.StartCoroutine_Auto(IEnumerator)
  fullName: UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    name: StartCoroutine_Auto
    nameWithType: MonoBehaviour.StartCoroutine_Auto
    fullName: UnityEngine.MonoBehaviour.StartCoroutine_Auto
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator)
    name: StartCoroutine_Auto
    nameWithType: MonoBehaviour.StartCoroutine_Auto
    fullName: UnityEngine.MonoBehaviour.StartCoroutine_Auto
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
  commentId: M:UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StopCoroutine(IEnumerator)
  nameWithType: MonoBehaviour.StopCoroutine(IEnumerator)
  fullName: UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    name: StopCoroutine
    nameWithType: MonoBehaviour.StopCoroutine
    fullName: UnityEngine.MonoBehaviour.StopCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator)
    name: StopCoroutine
    nameWithType: MonoBehaviour.StopCoroutine
    fullName: UnityEngine.MonoBehaviour.StopCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.IEnumerator
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.IEnumerator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
  commentId: M:UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StopCoroutine(Coroutine)
  nameWithType: MonoBehaviour.StopCoroutine(Coroutine)
  fullName: UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    name: StopCoroutine
    nameWithType: MonoBehaviour.StopCoroutine
    fullName: UnityEngine.MonoBehaviour.StopCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Coroutine
    name: Coroutine
    nameWithType: Coroutine
    fullName: UnityEngine.Coroutine
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine)
    name: StopCoroutine
    nameWithType: MonoBehaviour.StopCoroutine
    fullName: UnityEngine.MonoBehaviour.StopCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Coroutine
    name: Coroutine
    nameWithType: Coroutine
    fullName: UnityEngine.Coroutine
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.StopCoroutine(System.String)
  commentId: M:UnityEngine.MonoBehaviour.StopCoroutine(System.String)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StopCoroutine(String)
  nameWithType: MonoBehaviour.StopCoroutine(String)
  fullName: UnityEngine.MonoBehaviour.StopCoroutine(System.String)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    name: StopCoroutine
    nameWithType: MonoBehaviour.StopCoroutine
    fullName: UnityEngine.MonoBehaviour.StopCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StopCoroutine(System.String)
    name: StopCoroutine
    nameWithType: MonoBehaviour.StopCoroutine
    fullName: UnityEngine.MonoBehaviour.StopCoroutine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.StopAllCoroutines
  commentId: M:UnityEngine.MonoBehaviour.StopAllCoroutines
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: StopAllCoroutines()
  nameWithType: MonoBehaviour.StopAllCoroutines()
  fullName: UnityEngine.MonoBehaviour.StopAllCoroutines()
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.StopAllCoroutines
    name: StopAllCoroutines
    nameWithType: MonoBehaviour.StopAllCoroutines
    fullName: UnityEngine.MonoBehaviour.StopAllCoroutines
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.StopAllCoroutines
    name: StopAllCoroutines
    nameWithType: MonoBehaviour.StopAllCoroutines
    fullName: UnityEngine.MonoBehaviour.StopAllCoroutines
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.print(System.Object)
  commentId: M:UnityEngine.MonoBehaviour.print(System.Object)
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: print(Object)
  nameWithType: MonoBehaviour.print(Object)
  fullName: UnityEngine.MonoBehaviour.print(System.Object)
  spec.csharp:
  - uid: UnityEngine.MonoBehaviour.print(System.Object)
    name: print
    nameWithType: MonoBehaviour.print
    fullName: UnityEngine.MonoBehaviour.print
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.MonoBehaviour.print(System.Object)
    name: print
    nameWithType: MonoBehaviour.print
    fullName: UnityEngine.MonoBehaviour.print
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.MonoBehaviour.useGUILayout
  commentId: P:UnityEngine.MonoBehaviour.useGUILayout
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: useGUILayout
  nameWithType: MonoBehaviour.useGUILayout
  fullName: UnityEngine.MonoBehaviour.useGUILayout
- uid: UnityEngine.MonoBehaviour.runInEditMode
  commentId: P:UnityEngine.MonoBehaviour.runInEditMode
  parent: UnityEngine.MonoBehaviour
  isExternal: true
  name: runInEditMode
  nameWithType: MonoBehaviour.runInEditMode
  fullName: UnityEngine.MonoBehaviour.runInEditMode
- uid: UnityEngine.Behaviour.enabled
  commentId: P:UnityEngine.Behaviour.enabled
  parent: UnityEngine.Behaviour
  isExternal: true
  name: enabled
  nameWithType: Behaviour.enabled
  fullName: UnityEngine.Behaviour.enabled
- uid: UnityEngine.Behaviour.isActiveAndEnabled
  commentId: P:UnityEngine.Behaviour.isActiveAndEnabled
  parent: UnityEngine.Behaviour
  isExternal: true
  name: isActiveAndEnabled
  nameWithType: Behaviour.isActiveAndEnabled
  fullName: UnityEngine.Behaviour.isActiveAndEnabled
- uid: UnityEngine.Component.GetComponent(System.Type)
  commentId: M:UnityEngine.Component.GetComponent(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponent(Type)
  nameWithType: Component.GetComponent(Type)
  fullName: UnityEngine.Component.GetComponent(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponent(System.Type)
    name: GetComponent
    nameWithType: Component.GetComponent
    fullName: UnityEngine.Component.GetComponent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponent(System.Type)
    name: GetComponent
    nameWithType: Component.GetComponent
    fullName: UnityEngine.Component.GetComponent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponent``1
  commentId: M:UnityEngine.Component.GetComponent``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponent<T>()
  nameWithType: Component.GetComponent<T>()
  fullName: UnityEngine.Component.GetComponent<T>()
  nameWithType.vb: Component.GetComponent(Of T)()
  fullName.vb: UnityEngine.Component.GetComponent(Of T)()
  name.vb: GetComponent(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponent``1
    name: GetComponent<T>
    nameWithType: Component.GetComponent<T>
    fullName: UnityEngine.Component.GetComponent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponent``1
    name: GetComponent(Of T)
    nameWithType: Component.GetComponent(Of T)
    fullName: UnityEngine.Component.GetComponent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
  commentId: M:UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
  parent: UnityEngine.Component
  isExternal: true
  name: TryGetComponent(Type, Component)
  nameWithType: Component.TryGetComponent(Type, Component)
  fullName: UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component)
  spec.csharp:
  - uid: UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    name: TryGetComponent
    nameWithType: Component.TryGetComponent
    fullName: UnityEngine.Component.TryGetComponent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Component
    name: Component
    nameWithType: Component
    fullName: UnityEngine.Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.TryGetComponent(System.Type,UnityEngine.Component@)
    name: TryGetComponent
    nameWithType: Component.TryGetComponent
    fullName: UnityEngine.Component.TryGetComponent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Component
    name: Component
    nameWithType: Component
    fullName: UnityEngine.Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.TryGetComponent``1({T}@)
  commentId: M:UnityEngine.Component.TryGetComponent``1(``0@)
  parent: UnityEngine.Component
  definition: UnityEngine.Component.TryGetComponent``1(``0@)
  name: TryGetComponent<T>(T)
  nameWithType: Component.TryGetComponent<T>(T)
  fullName: UnityEngine.Component.TryGetComponent<T>(T)
  nameWithType.vb: Component.TryGetComponent(Of T)(T)
  fullName.vb: UnityEngine.Component.TryGetComponent(Of T)(T)
  name.vb: TryGetComponent(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Component.TryGetComponent``1(``0@)
    name: TryGetComponent<T>
    nameWithType: Component.TryGetComponent<T>
    fullName: UnityEngine.Component.TryGetComponent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.TryGetComponent``1(``0@)
    name: TryGetComponent(Of T)
    nameWithType: Component.TryGetComponent(Of T)
    fullName: UnityEngine.Component.TryGetComponent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponent(System.String)
  commentId: M:UnityEngine.Component.GetComponent(System.String)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponent(String)
  nameWithType: Component.GetComponent(String)
  fullName: UnityEngine.Component.GetComponent(System.String)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponent(System.String)
    name: GetComponent
    nameWithType: Component.GetComponent
    fullName: UnityEngine.Component.GetComponent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponent(System.String)
    name: GetComponent
    nameWithType: Component.GetComponent
    fullName: UnityEngine.Component.GetComponent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentInChildren(Type, Boolean)
  nameWithType: Component.GetComponentInChildren(Type, Boolean)
  fullName: UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    name: GetComponentInChildren
    nameWithType: Component.GetComponentInChildren
    fullName: UnityEngine.Component.GetComponentInChildren
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInChildren(System.Type,System.Boolean)
    name: GetComponentInChildren
    nameWithType: Component.GetComponentInChildren
    fullName: UnityEngine.Component.GetComponentInChildren
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentInChildren(System.Type)
  commentId: M:UnityEngine.Component.GetComponentInChildren(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentInChildren(Type)
  nameWithType: Component.GetComponentInChildren(Type)
  fullName: UnityEngine.Component.GetComponentInChildren(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInChildren(System.Type)
    name: GetComponentInChildren
    nameWithType: Component.GetComponentInChildren
    fullName: UnityEngine.Component.GetComponentInChildren
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInChildren(System.Type)
    name: GetComponentInChildren
    nameWithType: Component.GetComponentInChildren
    fullName: UnityEngine.Component.GetComponentInChildren
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentInChildren<T>(Boolean)
  nameWithType: Component.GetComponentInChildren<T>(Boolean)
  fullName: UnityEngine.Component.GetComponentInChildren<T>(System.Boolean)
  nameWithType.vb: Component.GetComponentInChildren(Of T)(Boolean)
  fullName.vb: UnityEngine.Component.GetComponentInChildren(Of T)(System.Boolean)
  name.vb: GetComponentInChildren(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    name: GetComponentInChildren<T>
    nameWithType: Component.GetComponentInChildren<T>
    fullName: UnityEngine.Component.GetComponentInChildren<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInChildren``1(System.Boolean)
    name: GetComponentInChildren(Of T)
    nameWithType: Component.GetComponentInChildren(Of T)
    fullName: UnityEngine.Component.GetComponentInChildren(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentInChildren``1
  commentId: M:UnityEngine.Component.GetComponentInChildren``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentInChildren<T>()
  nameWithType: Component.GetComponentInChildren<T>()
  fullName: UnityEngine.Component.GetComponentInChildren<T>()
  nameWithType.vb: Component.GetComponentInChildren(Of T)()
  fullName.vb: UnityEngine.Component.GetComponentInChildren(Of T)()
  name.vb: GetComponentInChildren(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInChildren``1
    name: GetComponentInChildren<T>
    nameWithType: Component.GetComponentInChildren<T>
    fullName: UnityEngine.Component.GetComponentInChildren<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInChildren``1
    name: GetComponentInChildren(Of T)
    nameWithType: Component.GetComponentInChildren(Of T)
    fullName: UnityEngine.Component.GetComponentInChildren(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsInChildren(Type, Boolean)
  nameWithType: Component.GetComponentsInChildren(Type, Boolean)
  fullName: UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    name: GetComponentsInChildren
    nameWithType: Component.GetComponentsInChildren
    fullName: UnityEngine.Component.GetComponentsInChildren
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren(System.Type,System.Boolean)
    name: GetComponentsInChildren
    nameWithType: Component.GetComponentsInChildren
    fullName: UnityEngine.Component.GetComponentsInChildren
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInChildren(System.Type)
  commentId: M:UnityEngine.Component.GetComponentsInChildren(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsInChildren(Type)
  nameWithType: Component.GetComponentsInChildren(Type)
  fullName: UnityEngine.Component.GetComponentsInChildren(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren(System.Type)
    name: GetComponentsInChildren
    nameWithType: Component.GetComponentsInChildren
    fullName: UnityEngine.Component.GetComponentsInChildren
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren(System.Type)
    name: GetComponentsInChildren
    nameWithType: Component.GetComponentsInChildren
    fullName: UnityEngine.Component.GetComponentsInChildren
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsInChildren<T>(Boolean)
  nameWithType: Component.GetComponentsInChildren<T>(Boolean)
  fullName: UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean)
  nameWithType.vb: Component.GetComponentsInChildren(Of T)(Boolean)
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)(System.Boolean)
  name.vb: GetComponentsInChildren(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    name: GetComponentsInChildren<T>
    nameWithType: Component.GetComponentsInChildren<T>
    fullName: UnityEngine.Component.GetComponentsInChildren<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean)
    name: GetComponentsInChildren(Of T)
    nameWithType: Component.GetComponentsInChildren(Of T)
    fullName: UnityEngine.Component.GetComponentsInChildren(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{{T}})
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
  parent: UnityEngine.Component
  definition: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
  name: GetComponentsInChildren<T>(Boolean, List<T>)
  nameWithType: Component.GetComponentsInChildren<T>(Boolean, List<T>)
  fullName: UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInChildren(Of T)(Boolean, List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)(System.Boolean, System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInChildren(Of T)(Boolean, List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInChildren<T>
    nameWithType: Component.GetComponentsInChildren<T>
    fullName: UnityEngine.Component.GetComponentsInChildren<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInChildren(Of T)
    nameWithType: Component.GetComponentsInChildren(Of T)
    fullName: UnityEngine.Component.GetComponentsInChildren(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInChildren``1
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsInChildren<T>()
  nameWithType: Component.GetComponentsInChildren<T>()
  fullName: UnityEngine.Component.GetComponentsInChildren<T>()
  nameWithType.vb: Component.GetComponentsInChildren(Of T)()
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)()
  name.vb: GetComponentsInChildren(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1
    name: GetComponentsInChildren<T>
    nameWithType: Component.GetComponentsInChildren<T>
    fullName: UnityEngine.Component.GetComponentsInChildren<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1
    name: GetComponentsInChildren(Of T)
    nameWithType: Component.GetComponentsInChildren(Of T)
    fullName: UnityEngine.Component.GetComponentsInChildren(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{{T}})
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
  parent: UnityEngine.Component
  definition: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
  name: GetComponentsInChildren<T>(List<T>)
  nameWithType: Component.GetComponentsInChildren<T>(List<T>)
  fullName: UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInChildren(Of T)(List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)(System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInChildren(Of T)(List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
    name: GetComponentsInChildren<T>
    nameWithType: Component.GetComponentsInChildren<T>
    fullName: UnityEngine.Component.GetComponentsInChildren<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
    name: GetComponentsInChildren(Of T)
    nameWithType: Component.GetComponentsInChildren(Of T)
    fullName: UnityEngine.Component.GetComponentsInChildren(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentInParent(Type, Boolean)
  nameWithType: Component.GetComponentInParent(Type, Boolean)
  fullName: UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
    name: GetComponentInParent
    nameWithType: Component.GetComponentInParent
    fullName: UnityEngine.Component.GetComponentInParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInParent(System.Type,System.Boolean)
    name: GetComponentInParent
    nameWithType: Component.GetComponentInParent
    fullName: UnityEngine.Component.GetComponentInParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentInParent(System.Type)
  commentId: M:UnityEngine.Component.GetComponentInParent(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentInParent(Type)
  nameWithType: Component.GetComponentInParent(Type)
  fullName: UnityEngine.Component.GetComponentInParent(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInParent(System.Type)
    name: GetComponentInParent
    nameWithType: Component.GetComponentInParent
    fullName: UnityEngine.Component.GetComponentInParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInParent(System.Type)
    name: GetComponentInParent
    nameWithType: Component.GetComponentInParent
    fullName: UnityEngine.Component.GetComponentInParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentInParent``1(System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentInParent``1(System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentInParent<T>(Boolean)
  nameWithType: Component.GetComponentInParent<T>(Boolean)
  fullName: UnityEngine.Component.GetComponentInParent<T>(System.Boolean)
  nameWithType.vb: Component.GetComponentInParent(Of T)(Boolean)
  fullName.vb: UnityEngine.Component.GetComponentInParent(Of T)(System.Boolean)
  name.vb: GetComponentInParent(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInParent``1(System.Boolean)
    name: GetComponentInParent<T>
    nameWithType: Component.GetComponentInParent<T>
    fullName: UnityEngine.Component.GetComponentInParent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInParent``1(System.Boolean)
    name: GetComponentInParent(Of T)
    nameWithType: Component.GetComponentInParent(Of T)
    fullName: UnityEngine.Component.GetComponentInParent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentInParent``1
  commentId: M:UnityEngine.Component.GetComponentInParent``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentInParent<T>()
  nameWithType: Component.GetComponentInParent<T>()
  fullName: UnityEngine.Component.GetComponentInParent<T>()
  nameWithType.vb: Component.GetComponentInParent(Of T)()
  fullName.vb: UnityEngine.Component.GetComponentInParent(Of T)()
  name.vb: GetComponentInParent(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentInParent``1
    name: GetComponentInParent<T>
    nameWithType: Component.GetComponentInParent<T>
    fullName: UnityEngine.Component.GetComponentInParent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentInParent``1
    name: GetComponentInParent(Of T)
    nameWithType: Component.GetComponentInParent(Of T)
    fullName: UnityEngine.Component.GetComponentInParent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsInParent(Type, Boolean)
  nameWithType: Component.GetComponentsInParent(Type, Boolean)
  fullName: UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    name: GetComponentsInParent
    nameWithType: Component.GetComponentsInParent
    fullName: UnityEngine.Component.GetComponentsInParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent(System.Type,System.Boolean)
    name: GetComponentsInParent
    nameWithType: Component.GetComponentsInParent
    fullName: UnityEngine.Component.GetComponentsInParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInParent(System.Type)
  commentId: M:UnityEngine.Component.GetComponentsInParent(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsInParent(Type)
  nameWithType: Component.GetComponentsInParent(Type)
  fullName: UnityEngine.Component.GetComponentsInParent(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent(System.Type)
    name: GetComponentsInParent
    nameWithType: Component.GetComponentsInParent
    fullName: UnityEngine.Component.GetComponentsInParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent(System.Type)
    name: GetComponentsInParent
    nameWithType: Component.GetComponentsInParent
    fullName: UnityEngine.Component.GetComponentsInParent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
  commentId: M:UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsInParent<T>(Boolean)
  nameWithType: Component.GetComponentsInParent<T>(Boolean)
  fullName: UnityEngine.Component.GetComponentsInParent<T>(System.Boolean)
  nameWithType.vb: Component.GetComponentsInParent(Of T)(Boolean)
  fullName.vb: UnityEngine.Component.GetComponentsInParent(Of T)(System.Boolean)
  name.vb: GetComponentsInParent(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    name: GetComponentsInParent<T>
    nameWithType: Component.GetComponentsInParent<T>
    fullName: UnityEngine.Component.GetComponentsInParent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean)
    name: GetComponentsInParent(Of T)
    nameWithType: Component.GetComponentsInParent(Of T)
    fullName: UnityEngine.Component.GetComponentsInParent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{{T}})
  commentId: M:UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
  parent: UnityEngine.Component
  definition: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
  name: GetComponentsInParent<T>(Boolean, List<T>)
  nameWithType: Component.GetComponentsInParent<T>(Boolean, List<T>)
  fullName: UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInParent(Of T)(Boolean, List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInParent(Of T)(System.Boolean, System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInParent(Of T)(Boolean, List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInParent<T>
    nameWithType: Component.GetComponentsInParent<T>
    fullName: UnityEngine.Component.GetComponentsInParent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInParent(Of T)
    nameWithType: Component.GetComponentsInParent(Of T)
    fullName: UnityEngine.Component.GetComponentsInParent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInParent``1
  commentId: M:UnityEngine.Component.GetComponentsInParent``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponentsInParent<T>()
  nameWithType: Component.GetComponentsInParent<T>()
  fullName: UnityEngine.Component.GetComponentsInParent<T>()
  nameWithType.vb: Component.GetComponentsInParent(Of T)()
  fullName.vb: UnityEngine.Component.GetComponentsInParent(Of T)()
  name.vb: GetComponentsInParent(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent``1
    name: GetComponentsInParent<T>
    nameWithType: Component.GetComponentsInParent<T>
    fullName: UnityEngine.Component.GetComponentsInParent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent``1
    name: GetComponentsInParent(Of T)
    nameWithType: Component.GetComponentsInParent(Of T)
    fullName: UnityEngine.Component.GetComponentsInParent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponents(System.Type)
  commentId: M:UnityEngine.Component.GetComponents(System.Type)
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponents(Type)
  nameWithType: Component.GetComponents(Type)
  fullName: UnityEngine.Component.GetComponents(System.Type)
  spec.csharp:
  - uid: UnityEngine.Component.GetComponents(System.Type)
    name: GetComponents
    nameWithType: Component.GetComponents
    fullName: UnityEngine.Component.GetComponents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponents(System.Type)
    name: GetComponents
    nameWithType: Component.GetComponents
    fullName: UnityEngine.Component.GetComponents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
  commentId: M:UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponents(Type, List<Component>)
  nameWithType: Component.GetComponents(Type, List<Component>)
  fullName: UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>)
  nameWithType.vb: Component.GetComponents(Type, List(Of Component))
  fullName.vb: UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List(Of UnityEngine.Component))
  name.vb: GetComponents(Type, List(Of Component))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    name: GetComponents
    nameWithType: Component.GetComponents
    fullName: UnityEngine.Component.GetComponents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Component
    name: Component
    nameWithType: Component
    fullName: UnityEngine.Component
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponents(System.Type,System.Collections.Generic.List{UnityEngine.Component})
    name: GetComponents
    nameWithType: Component.GetComponents
    fullName: UnityEngine.Component.GetComponents
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Component
    name: Component
    nameWithType: Component
    fullName: UnityEngine.Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{{T}})
  commentId: M:UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
  parent: UnityEngine.Component
  definition: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
  name: GetComponents<T>(List<T>)
  nameWithType: Component.GetComponents<T>(List<T>)
  fullName: UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponents(Of T)(List(Of T))
  fullName.vb: UnityEngine.Component.GetComponents(Of T)(System.Collections.Generic.List(Of T))
  name.vb: GetComponents(Of T)(List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
    name: GetComponents<T>
    nameWithType: Component.GetComponents<T>
    fullName: UnityEngine.Component.GetComponents<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
    name: GetComponents(Of T)
    nameWithType: Component.GetComponents(Of T)
    fullName: UnityEngine.Component.GetComponents(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponents``1
  commentId: M:UnityEngine.Component.GetComponents``1
  parent: UnityEngine.Component
  isExternal: true
  name: GetComponents<T>()
  nameWithType: Component.GetComponents<T>()
  fullName: UnityEngine.Component.GetComponents<T>()
  nameWithType.vb: Component.GetComponents(Of T)()
  fullName.vb: UnityEngine.Component.GetComponents(Of T)()
  name.vb: GetComponents(Of T)()
  spec.csharp:
  - uid: UnityEngine.Component.GetComponents``1
    name: GetComponents<T>
    nameWithType: Component.GetComponents<T>
    fullName: UnityEngine.Component.GetComponents<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponents``1
    name: GetComponents(Of T)
    nameWithType: Component.GetComponents(Of T)
    fullName: UnityEngine.Component.GetComponents(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.CompareTag(System.String)
  commentId: M:UnityEngine.Component.CompareTag(System.String)
  parent: UnityEngine.Component
  isExternal: true
  name: CompareTag(String)
  nameWithType: Component.CompareTag(String)
  fullName: UnityEngine.Component.CompareTag(System.String)
  spec.csharp:
  - uid: UnityEngine.Component.CompareTag(System.String)
    name: CompareTag
    nameWithType: Component.CompareTag
    fullName: UnityEngine.Component.CompareTag
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.CompareTag(System.String)
    name: CompareTag
    nameWithType: Component.CompareTag
    fullName: UnityEngine.Component.CompareTag
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  name: SendMessageUpwards(String, Object, SendMessageOptions)
  nameWithType: Component.SendMessageUpwards(String, Object, SendMessageOptions)
  fullName: UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: SendMessageUpwards
    nameWithType: Component.SendMessageUpwards
    fullName: UnityEngine.Component.SendMessageUpwards
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: SendMessageUpwards
    nameWithType: Component.SendMessageUpwards
    fullName: UnityEngine.Component.SendMessageUpwards
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
  commentId: M:UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
  parent: UnityEngine.Component
  isExternal: true
  name: SendMessageUpwards(String, Object)
  nameWithType: Component.SendMessageUpwards(String, Object)
  fullName: UnityEngine.Component.SendMessageUpwards(System.String, System.Object)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    name: SendMessageUpwards
    nameWithType: Component.SendMessageUpwards
    fullName: UnityEngine.Component.SendMessageUpwards
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,System.Object)
    name: SendMessageUpwards
    nameWithType: Component.SendMessageUpwards
    fullName: UnityEngine.Component.SendMessageUpwards
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.SendMessageUpwards(System.String)
  commentId: M:UnityEngine.Component.SendMessageUpwards(System.String)
  parent: UnityEngine.Component
  isExternal: true
  name: SendMessageUpwards(String)
  nameWithType: Component.SendMessageUpwards(String)
  fullName: UnityEngine.Component.SendMessageUpwards(System.String)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String)
    name: SendMessageUpwards
    nameWithType: Component.SendMessageUpwards
    fullName: UnityEngine.Component.SendMessageUpwards
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String)
    name: SendMessageUpwards
    nameWithType: Component.SendMessageUpwards
    fullName: UnityEngine.Component.SendMessageUpwards
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  name: SendMessageUpwards(String, SendMessageOptions)
  nameWithType: Component.SendMessageUpwards(String, SendMessageOptions)
  fullName: UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    name: SendMessageUpwards
    nameWithType: Component.SendMessageUpwards
    fullName: UnityEngine.Component.SendMessageUpwards
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessageUpwards(System.String,UnityEngine.SendMessageOptions)
    name: SendMessageUpwards
    nameWithType: Component.SendMessageUpwards
    fullName: UnityEngine.Component.SendMessageUpwards
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.SendMessage(System.String,System.Object)
  commentId: M:UnityEngine.Component.SendMessage(System.String,System.Object)
  parent: UnityEngine.Component
  isExternal: true
  name: SendMessage(String, Object)
  nameWithType: Component.SendMessage(String, Object)
  fullName: UnityEngine.Component.SendMessage(System.String, System.Object)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessage(System.String,System.Object)
    name: SendMessage
    nameWithType: Component.SendMessage
    fullName: UnityEngine.Component.SendMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessage(System.String,System.Object)
    name: SendMessage
    nameWithType: Component.SendMessage
    fullName: UnityEngine.Component.SendMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.SendMessage(System.String)
  commentId: M:UnityEngine.Component.SendMessage(System.String)
  parent: UnityEngine.Component
  isExternal: true
  name: SendMessage(String)
  nameWithType: Component.SendMessage(String)
  fullName: UnityEngine.Component.SendMessage(System.String)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessage(System.String)
    name: SendMessage
    nameWithType: Component.SendMessage
    fullName: UnityEngine.Component.SendMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessage(System.String)
    name: SendMessage
    nameWithType: Component.SendMessage
    fullName: UnityEngine.Component.SendMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  name: SendMessage(String, Object, SendMessageOptions)
  nameWithType: Component.SendMessage(String, Object, SendMessageOptions)
  fullName: UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: SendMessage
    nameWithType: Component.SendMessage
    fullName: UnityEngine.Component.SendMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: SendMessage
    nameWithType: Component.SendMessage
    fullName: UnityEngine.Component.SendMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  name: SendMessage(String, SendMessageOptions)
  nameWithType: Component.SendMessage(String, SendMessageOptions)
  fullName: UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    name: SendMessage
    nameWithType: Component.SendMessage
    fullName: UnityEngine.Component.SendMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.SendMessage(System.String,UnityEngine.SendMessageOptions)
    name: SendMessage
    nameWithType: Component.SendMessage
    fullName: UnityEngine.Component.SendMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  name: BroadcastMessage(String, Object, SendMessageOptions)
  nameWithType: Component.BroadcastMessage(String, Object, SendMessageOptions)
  fullName: UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: BroadcastMessage
    nameWithType: Component.BroadcastMessage
    fullName: UnityEngine.Component.BroadcastMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object,UnityEngine.SendMessageOptions)
    name: BroadcastMessage
    nameWithType: Component.BroadcastMessage
    fullName: UnityEngine.Component.BroadcastMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object)
  commentId: M:UnityEngine.Component.BroadcastMessage(System.String,System.Object)
  parent: UnityEngine.Component
  isExternal: true
  name: BroadcastMessage(String, Object)
  nameWithType: Component.BroadcastMessage(String, Object)
  fullName: UnityEngine.Component.BroadcastMessage(System.String, System.Object)
  spec.csharp:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    name: BroadcastMessage
    nameWithType: Component.BroadcastMessage
    fullName: UnityEngine.Component.BroadcastMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,System.Object)
    name: BroadcastMessage
    nameWithType: Component.BroadcastMessage
    fullName: UnityEngine.Component.BroadcastMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.BroadcastMessage(System.String)
  commentId: M:UnityEngine.Component.BroadcastMessage(System.String)
  parent: UnityEngine.Component
  isExternal: true
  name: BroadcastMessage(String)
  nameWithType: Component.BroadcastMessage(String)
  fullName: UnityEngine.Component.BroadcastMessage(System.String)
  spec.csharp:
  - uid: UnityEngine.Component.BroadcastMessage(System.String)
    name: BroadcastMessage
    nameWithType: Component.BroadcastMessage
    fullName: UnityEngine.Component.BroadcastMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.BroadcastMessage(System.String)
    name: BroadcastMessage
    nameWithType: Component.BroadcastMessage
    fullName: UnityEngine.Component.BroadcastMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
  commentId: M:UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
  parent: UnityEngine.Component
  isExternal: true
  name: BroadcastMessage(String, SendMessageOptions)
  nameWithType: Component.BroadcastMessage(String, SendMessageOptions)
  fullName: UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions)
  spec.csharp:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    name: BroadcastMessage
    nameWithType: Component.BroadcastMessage
    fullName: UnityEngine.Component.BroadcastMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.BroadcastMessage(System.String,UnityEngine.SendMessageOptions)
    name: BroadcastMessage
    nameWithType: Component.BroadcastMessage
    fullName: UnityEngine.Component.BroadcastMessage
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.SendMessageOptions
    name: SendMessageOptions
    nameWithType: SendMessageOptions
    fullName: UnityEngine.SendMessageOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.transform
  commentId: P:UnityEngine.Component.transform
  parent: UnityEngine.Component
  isExternal: true
  name: transform
  nameWithType: Component.transform
  fullName: UnityEngine.Component.transform
- uid: UnityEngine.Component.gameObject
  commentId: P:UnityEngine.Component.gameObject
  parent: UnityEngine.Component
  isExternal: true
  name: gameObject
  nameWithType: Component.gameObject
  fullName: UnityEngine.Component.gameObject
- uid: UnityEngine.Component.tag
  commentId: P:UnityEngine.Component.tag
  parent: UnityEngine.Component
  isExternal: true
  name: tag
  nameWithType: Component.tag
  fullName: UnityEngine.Component.tag
- uid: UnityEngine.Object.GetInstanceID
  commentId: M:UnityEngine.Object.GetInstanceID
  parent: UnityEngine.Object
  isExternal: true
  name: GetInstanceID()
  nameWithType: Object.GetInstanceID()
  fullName: UnityEngine.Object.GetInstanceID()
  spec.csharp:
  - uid: UnityEngine.Object.GetInstanceID
    name: GetInstanceID
    nameWithType: Object.GetInstanceID
    fullName: UnityEngine.Object.GetInstanceID
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.GetInstanceID
    name: GetInstanceID
    nameWithType: Object.GetInstanceID
    fullName: UnityEngine.Object.GetInstanceID
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.GetHashCode
  commentId: M:UnityEngine.Object.GetHashCode
  parent: UnityEngine.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: UnityEngine.Object.GetHashCode()
  spec.csharp:
  - uid: UnityEngine.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: UnityEngine.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: UnityEngine.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Equals(System.Object)
  commentId: M:UnityEngine.Object.Equals(System.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: UnityEngine.Object.Equals(System.Object)
  spec.csharp:
  - uid: UnityEngine.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: UnityEngine.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: UnityEngine.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Vector3, Quaternion)
  nameWithType: Object.Instantiate(Object, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    nameWithType: Object.Instantiate
    fullName: UnityEngine.Object.Instantiate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate
    nameWithType: Object.Instantiate
    fullName: UnityEngine.Object.Instantiate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate(Object, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    nameWithType: Object.Instantiate
    fullName: UnityEngine.Object.Instantiate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate
    nameWithType: Object.Instantiate
    fullName: UnityEngine.Object.Instantiate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object)
  nameWithType: Object.Instantiate(Object)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
    name: Instantiate
    nameWithType: Object.Instantiate
    fullName: UnityEngine.Object.Instantiate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object)
    name: Instantiate
    nameWithType: Object.Instantiate
    fullName: UnityEngine.Object.Instantiate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Transform)
  nameWithType: Object.Instantiate(Object, Transform)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    name: Instantiate
    nameWithType: Object.Instantiate
    fullName: UnityEngine.Object.Instantiate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform)
    name: Instantiate
    nameWithType: Object.Instantiate
    fullName: UnityEngine.Object.Instantiate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  name: Instantiate(Object, Transform, Boolean)
  nameWithType: Object.Instantiate(Object, Transform, Boolean)
  fullName: UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    nameWithType: Object.Instantiate
    fullName: UnityEngine.Object.Instantiate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate(UnityEngine.Object,UnityEngine.Transform,System.Boolean)
    name: Instantiate
    nameWithType: Object.Instantiate
    fullName: UnityEngine.Object.Instantiate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate``1({T})
  commentId: M:UnityEngine.Object.Instantiate``1(``0)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0)
  name: Instantiate<T>(T)
  nameWithType: Object.Instantiate<T>(T)
  fullName: UnityEngine.Object.Instantiate<T>(T)
  nameWithType.vb: Object.Instantiate(Of T)(T)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T)
  name.vb: Instantiate(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate<T>
    nameWithType: Object.Instantiate<T>
    fullName: UnityEngine.Object.Instantiate<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate(Of T)
    nameWithType: Object.Instantiate(Of T)
    fullName: UnityEngine.Object.Instantiate(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  name: Instantiate<T>(T, Vector3, Quaternion)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate<T>
    nameWithType: Object.Instantiate<T>
    fullName: UnityEngine.Object.Instantiate<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate(Of T)
    nameWithType: Object.Instantiate(Of T)
    fullName: UnityEngine.Object.Instantiate(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  name: Instantiate<T>(T, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate<T>
    nameWithType: Object.Instantiate<T>
    fullName: UnityEngine.Object.Instantiate<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate(Of T)
    nameWithType: Object.Instantiate(Of T)
    fullName: UnityEngine.Object.Instantiate(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  name: Instantiate<T>(T, Transform)
  nameWithType: Object.Instantiate<T>(T, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate<T>
    nameWithType: Object.Instantiate<T>
    fullName: UnityEngine.Object.Instantiate<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate(Of T)
    nameWithType: Object.Instantiate(Of T)
    fullName: UnityEngine.Object.Instantiate(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate``1({T},UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  parent: UnityEngine.Object
  definition: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  name: Instantiate<T>(T, Transform, Boolean)
  nameWithType: Object.Instantiate<T>(T, Transform, Boolean)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform, System.Boolean)
  name.vb: Instantiate(Of T)(T, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate<T>
    nameWithType: Object.Instantiate<T>
    fullName: UnityEngine.Object.Instantiate<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate(Of T)
    nameWithType: Object.Instantiate(Of T)
    fullName: UnityEngine.Object.Instantiate(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  commentId: M:UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
  parent: UnityEngine.Object
  isExternal: true
  name: Destroy(Object, Single)
  nameWithType: Object.Destroy(Object, Single)
  fullName: UnityEngine.Object.Destroy(UnityEngine.Object, System.Single)
  spec.csharp:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    name: Destroy
    nameWithType: Object.Destroy
    fullName: UnityEngine.Object.Destroy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object,System.Single)
    name: Destroy
    nameWithType: Object.Destroy
    fullName: UnityEngine.Object.Destroy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Destroy(UnityEngine.Object)
  commentId: M:UnityEngine.Object.Destroy(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: Destroy(Object)
  nameWithType: Object.Destroy(Object)
  fullName: UnityEngine.Object.Destroy(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object)
    name: Destroy
    nameWithType: Object.Destroy
    fullName: UnityEngine.Object.Destroy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Destroy(UnityEngine.Object)
    name: Destroy
    nameWithType: Object.Destroy
    fullName: UnityEngine.Object.Destroy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  commentId: M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  name: DestroyImmediate(Object, Boolean)
  nameWithType: Object.DestroyImmediate(Object, Boolean)
  fullName: UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    name: DestroyImmediate
    nameWithType: Object.DestroyImmediate
    fullName: UnityEngine.Object.DestroyImmediate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object,System.Boolean)
    name: DestroyImmediate
    nameWithType: Object.DestroyImmediate
    fullName: UnityEngine.Object.DestroyImmediate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DestroyImmediate(Object)
  nameWithType: Object.DestroyImmediate(Object)
  fullName: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    name: DestroyImmediate
    nameWithType: Object.DestroyImmediate
    fullName: UnityEngine.Object.DestroyImmediate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyImmediate(UnityEngine.Object)
    name: DestroyImmediate
    nameWithType: Object.DestroyImmediate
    fullName: UnityEngine.Object.DestroyImmediate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectsOfType(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsOfType(Type)
  nameWithType: Object.FindObjectsOfType(Type)
  fullName: UnityEngine.Object.FindObjectsOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type)
    name: FindObjectsOfType
    nameWithType: Object.FindObjectsOfType
    fullName: UnityEngine.Object.FindObjectsOfType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type)
    name: FindObjectsOfType
    nameWithType: Object.FindObjectsOfType
    fullName: UnityEngine.Object.FindObjectsOfType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsOfType(Type, Boolean)
  nameWithType: Object.FindObjectsOfType(Type, Boolean)
  fullName: UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    name: FindObjectsOfType
    nameWithType: Object.FindObjectsOfType
    fullName: UnityEngine.Object.FindObjectsOfType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType(System.Type,System.Boolean)
    name: FindObjectsOfType
    nameWithType: Object.FindObjectsOfType
    fullName: UnityEngine.Object.FindObjectsOfType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsByType(Type, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType(Type, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    nameWithType: Object.FindObjectsByType
    fullName: UnityEngine.Object.FindObjectsByType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    nameWithType: FindObjectsSortMode
    fullName: UnityEngine.FindObjectsSortMode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    nameWithType: Object.FindObjectsByType
    fullName: UnityEngine.Object.FindObjectsByType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    nameWithType: FindObjectsSortMode
    fullName: UnityEngine.FindObjectsSortMode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    nameWithType: Object.FindObjectsByType
    fullName: UnityEngine.Object.FindObjectsByType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    nameWithType: FindObjectsInactive
    fullName: UnityEngine.FindObjectsInactive
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    nameWithType: FindObjectsSortMode
    fullName: UnityEngine.FindObjectsSortMode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType(System.Type,UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType
    nameWithType: Object.FindObjectsByType
    fullName: UnityEngine.Object.FindObjectsByType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    nameWithType: FindObjectsInactive
    fullName: UnityEngine.FindObjectsInactive
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    nameWithType: FindObjectsSortMode
    fullName: UnityEngine.FindObjectsSortMode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DontDestroyOnLoad(Object)
  nameWithType: Object.DontDestroyOnLoad(Object)
  fullName: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    name: DontDestroyOnLoad
    nameWithType: Object.DontDestroyOnLoad
    fullName: UnityEngine.Object.DontDestroyOnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object)
    name: DontDestroyOnLoad
    nameWithType: Object.DontDestroyOnLoad
    fullName: UnityEngine.Object.DontDestroyOnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  commentId: M:UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
  parent: UnityEngine.Object
  isExternal: true
  name: DestroyObject(Object, Single)
  nameWithType: Object.DestroyObject(Object, Single)
  fullName: UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    name: DestroyObject
    nameWithType: Object.DestroyObject
    fullName: UnityEngine.Object.DestroyObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object,System.Single)
    name: DestroyObject
    nameWithType: Object.DestroyObject
    fullName: UnityEngine.Object.DestroyObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
  commentId: M:UnityEngine.Object.DestroyObject(UnityEngine.Object)
  parent: UnityEngine.Object
  isExternal: true
  name: DestroyObject(Object)
  nameWithType: Object.DestroyObject(Object)
  fullName: UnityEngine.Object.DestroyObject(UnityEngine.Object)
  spec.csharp:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
    name: DestroyObject
    nameWithType: Object.DestroyObject
    fullName: UnityEngine.Object.DestroyObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.DestroyObject(UnityEngine.Object)
    name: DestroyObject
    nameWithType: Object.DestroyObject
    fullName: UnityEngine.Object.DestroyObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Object
    name: Object
    nameWithType: Object
    fullName: UnityEngine.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  commentId: M:UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  name: FindSceneObjectsOfType(Type)
  nameWithType: Object.FindSceneObjectsOfType(Type)
  fullName: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    name: FindSceneObjectsOfType
    nameWithType: Object.FindSceneObjectsOfType
    fullName: UnityEngine.Object.FindSceneObjectsOfType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindSceneObjectsOfType(System.Type)
    name: FindSceneObjectsOfType
    nameWithType: Object.FindSceneObjectsOfType
    fullName: UnityEngine.Object.FindSceneObjectsOfType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsOfTypeIncludingAssets(Type)
  nameWithType: Object.FindObjectsOfTypeIncludingAssets(Type)
  fullName: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    name: FindObjectsOfTypeIncludingAssets
    nameWithType: Object.FindObjectsOfTypeIncludingAssets
    fullName: UnityEngine.Object.FindObjectsOfTypeIncludingAssets
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type)
    name: FindObjectsOfTypeIncludingAssets
    nameWithType: Object.FindObjectsOfTypeIncludingAssets
    fullName: UnityEngine.Object.FindObjectsOfTypeIncludingAssets
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectsOfType``1
  commentId: M:UnityEngine.Object.FindObjectsOfType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsOfType<T>()
  nameWithType: Object.FindObjectsOfType<T>()
  fullName: UnityEngine.Object.FindObjectsOfType<T>()
  nameWithType.vb: Object.FindObjectsOfType(Of T)()
  fullName.vb: UnityEngine.Object.FindObjectsOfType(Of T)()
  name.vb: FindObjectsOfType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType``1
    name: FindObjectsOfType<T>
    nameWithType: Object.FindObjectsOfType<T>
    fullName: UnityEngine.Object.FindObjectsOfType<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType``1
    name: FindObjectsOfType(Of T)
    nameWithType: Object.FindObjectsOfType(Of T)
    fullName: UnityEngine.Object.FindObjectsOfType(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsByType<T>(FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType<T>(FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode)
  nameWithType.vb: Object.FindObjectsByType(Of T)(FindObjectsSortMode)
  fullName.vb: UnityEngine.Object.FindObjectsByType(Of T)(UnityEngine.FindObjectsSortMode)
  name.vb: FindObjectsByType(Of T)(FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType<T>
    nameWithType: Object.FindObjectsByType<T>
    fullName: UnityEngine.Object.FindObjectsByType<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    nameWithType: FindObjectsSortMode
    fullName: UnityEngine.FindObjectsSortMode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType(Of T)
    nameWithType: Object.FindObjectsByType(Of T)
    fullName: UnityEngine.Object.FindObjectsByType(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    nameWithType: FindObjectsSortMode
    fullName: UnityEngine.FindObjectsSortMode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsOfType<T>(Boolean)
  nameWithType: Object.FindObjectsOfType<T>(Boolean)
  fullName: UnityEngine.Object.FindObjectsOfType<T>(System.Boolean)
  nameWithType.vb: Object.FindObjectsOfType(Of T)(Boolean)
  fullName.vb: UnityEngine.Object.FindObjectsOfType(Of T)(System.Boolean)
  name.vb: FindObjectsOfType(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    name: FindObjectsOfType<T>
    nameWithType: Object.FindObjectsOfType<T>
    fullName: UnityEngine.Object.FindObjectsOfType<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfType``1(System.Boolean)
    name: FindObjectsOfType(Of T)
    nameWithType: Object.FindObjectsOfType(Of T)
    fullName: UnityEngine.Object.FindObjectsOfType(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  commentId: M:UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode)
  nameWithType: Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode)
  fullName: UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  nameWithType.vb: Object.FindObjectsByType(Of T)(FindObjectsInactive, FindObjectsSortMode)
  fullName.vb: UnityEngine.Object.FindObjectsByType(Of T)(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode)
  name.vb: FindObjectsByType(Of T)(FindObjectsInactive, FindObjectsSortMode)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType<T>
    nameWithType: Object.FindObjectsByType<T>
    fullName: UnityEngine.Object.FindObjectsByType<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    nameWithType: FindObjectsInactive
    fullName: UnityEngine.FindObjectsInactive
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    nameWithType: FindObjectsSortMode
    fullName: UnityEngine.FindObjectsSortMode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsByType``1(UnityEngine.FindObjectsInactive,UnityEngine.FindObjectsSortMode)
    name: FindObjectsByType(Of T)
    nameWithType: Object.FindObjectsByType(Of T)
    fullName: UnityEngine.Object.FindObjectsByType(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    nameWithType: FindObjectsInactive
    fullName: UnityEngine.FindObjectsInactive
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.FindObjectsSortMode
    name: FindObjectsSortMode
    nameWithType: FindObjectsSortMode
    fullName: UnityEngine.FindObjectsSortMode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectOfType``1
  commentId: M:UnityEngine.Object.FindObjectOfType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectOfType<T>()
  nameWithType: Object.FindObjectOfType<T>()
  fullName: UnityEngine.Object.FindObjectOfType<T>()
  nameWithType.vb: Object.FindObjectOfType(Of T)()
  fullName.vb: UnityEngine.Object.FindObjectOfType(Of T)()
  name.vb: FindObjectOfType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType``1
    name: FindObjectOfType<T>
    nameWithType: Object.FindObjectOfType<T>
    fullName: UnityEngine.Object.FindObjectOfType<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType``1
    name: FindObjectOfType(Of T)
    nameWithType: Object.FindObjectOfType(Of T)
    fullName: UnityEngine.Object.FindObjectOfType(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectOfType``1(System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectOfType<T>(Boolean)
  nameWithType: Object.FindObjectOfType<T>(Boolean)
  fullName: UnityEngine.Object.FindObjectOfType<T>(System.Boolean)
  nameWithType.vb: Object.FindObjectOfType(Of T)(Boolean)
  fullName.vb: UnityEngine.Object.FindObjectOfType(Of T)(System.Boolean)
  name.vb: FindObjectOfType(Of T)(Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    name: FindObjectOfType<T>
    nameWithType: Object.FindObjectOfType<T>
    fullName: UnityEngine.Object.FindObjectOfType<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType``1(System.Boolean)
    name: FindObjectOfType(Of T)
    nameWithType: Object.FindObjectOfType(Of T)
    fullName: UnityEngine.Object.FindObjectOfType(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindFirstObjectByType``1
  commentId: M:UnityEngine.Object.FindFirstObjectByType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindFirstObjectByType<T>()
  nameWithType: Object.FindFirstObjectByType<T>()
  fullName: UnityEngine.Object.FindFirstObjectByType<T>()
  nameWithType.vb: Object.FindFirstObjectByType(Of T)()
  fullName.vb: UnityEngine.Object.FindFirstObjectByType(Of T)()
  name.vb: FindFirstObjectByType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType``1
    name: FindFirstObjectByType<T>
    nameWithType: Object.FindFirstObjectByType<T>
    fullName: UnityEngine.Object.FindFirstObjectByType<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType``1
    name: FindFirstObjectByType(Of T)
    nameWithType: Object.FindFirstObjectByType(Of T)
    fullName: UnityEngine.Object.FindFirstObjectByType(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindAnyObjectByType``1
  commentId: M:UnityEngine.Object.FindAnyObjectByType``1
  parent: UnityEngine.Object
  isExternal: true
  name: FindAnyObjectByType<T>()
  nameWithType: Object.FindAnyObjectByType<T>()
  fullName: UnityEngine.Object.FindAnyObjectByType<T>()
  nameWithType.vb: Object.FindAnyObjectByType(Of T)()
  fullName.vb: UnityEngine.Object.FindAnyObjectByType(Of T)()
  name.vb: FindAnyObjectByType(Of T)()
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType``1
    name: FindAnyObjectByType<T>
    nameWithType: Object.FindAnyObjectByType<T>
    fullName: UnityEngine.Object.FindAnyObjectByType<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType``1
    name: FindAnyObjectByType(Of T)
    nameWithType: Object.FindAnyObjectByType(Of T)
    fullName: UnityEngine.Object.FindAnyObjectByType(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  name: FindFirstObjectByType<T>(FindObjectsInactive)
  nameWithType: Object.FindFirstObjectByType<T>(FindObjectsInactive)
  fullName: UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive)
  nameWithType.vb: Object.FindFirstObjectByType(Of T)(FindObjectsInactive)
  fullName.vb: UnityEngine.Object.FindFirstObjectByType(Of T)(UnityEngine.FindObjectsInactive)
  name.vb: FindFirstObjectByType(Of T)(FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType<T>
    nameWithType: Object.FindFirstObjectByType<T>
    fullName: UnityEngine.Object.FindFirstObjectByType<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    nameWithType: FindObjectsInactive
    fullName: UnityEngine.FindObjectsInactive
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType(Of T)
    nameWithType: Object.FindFirstObjectByType(Of T)
    fullName: UnityEngine.Object.FindFirstObjectByType(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    nameWithType: FindObjectsInactive
    fullName: UnityEngine.FindObjectsInactive
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  name: FindAnyObjectByType<T>(FindObjectsInactive)
  nameWithType: Object.FindAnyObjectByType<T>(FindObjectsInactive)
  fullName: UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive)
  nameWithType.vb: Object.FindAnyObjectByType(Of T)(FindObjectsInactive)
  fullName.vb: UnityEngine.Object.FindAnyObjectByType(Of T)(UnityEngine.FindObjectsInactive)
  name.vb: FindAnyObjectByType(Of T)(FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType<T>
    nameWithType: Object.FindAnyObjectByType<T>
    fullName: UnityEngine.Object.FindAnyObjectByType<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    nameWithType: FindObjectsInactive
    fullName: UnityEngine.FindObjectsInactive
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType``1(UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType(Of T)
    nameWithType: Object.FindAnyObjectByType(Of T)
    fullName: UnityEngine.Object.FindAnyObjectByType(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    nameWithType: FindObjectsInactive
    fullName: UnityEngine.FindObjectsInactive
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  commentId: M:UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectsOfTypeAll(Type)
  nameWithType: Object.FindObjectsOfTypeAll(Type)
  fullName: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    name: FindObjectsOfTypeAll
    nameWithType: Object.FindObjectsOfTypeAll
    fullName: UnityEngine.Object.FindObjectsOfTypeAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectsOfTypeAll(System.Type)
    name: FindObjectsOfTypeAll
    nameWithType: Object.FindObjectsOfTypeAll
    fullName: UnityEngine.Object.FindObjectsOfTypeAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectOfType(System.Type)
  commentId: M:UnityEngine.Object.FindObjectOfType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectOfType(Type)
  nameWithType: Object.FindObjectOfType(Type)
  fullName: UnityEngine.Object.FindObjectOfType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type)
    name: FindObjectOfType
    nameWithType: Object.FindObjectOfType
    fullName: UnityEngine.Object.FindObjectOfType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type)
    name: FindObjectOfType
    nameWithType: Object.FindObjectOfType
    fullName: UnityEngine.Object.FindObjectOfType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
  commentId: M:UnityEngine.Object.FindFirstObjectByType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  name: FindFirstObjectByType(Type)
  nameWithType: Object.FindFirstObjectByType(Type)
  fullName: UnityEngine.Object.FindFirstObjectByType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
    name: FindFirstObjectByType
    nameWithType: Object.FindFirstObjectByType
    fullName: UnityEngine.Object.FindFirstObjectByType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type)
    name: FindFirstObjectByType
    nameWithType: Object.FindFirstObjectByType
    fullName: UnityEngine.Object.FindFirstObjectByType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
  commentId: M:UnityEngine.Object.FindAnyObjectByType(System.Type)
  parent: UnityEngine.Object
  isExternal: true
  name: FindAnyObjectByType(Type)
  nameWithType: Object.FindAnyObjectByType(Type)
  fullName: UnityEngine.Object.FindAnyObjectByType(System.Type)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
    name: FindAnyObjectByType
    nameWithType: Object.FindAnyObjectByType
    fullName: UnityEngine.Object.FindAnyObjectByType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type)
    name: FindAnyObjectByType
    nameWithType: Object.FindAnyObjectByType
    fullName: UnityEngine.Object.FindAnyObjectByType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  commentId: M:UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
  parent: UnityEngine.Object
  isExternal: true
  name: FindObjectOfType(Type, Boolean)
  nameWithType: Object.FindObjectOfType(Type, Boolean)
  fullName: UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    name: FindObjectOfType
    nameWithType: Object.FindObjectOfType
    fullName: UnityEngine.Object.FindObjectOfType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindObjectOfType(System.Type,System.Boolean)
    name: FindObjectOfType
    nameWithType: Object.FindObjectOfType
    fullName: UnityEngine.Object.FindObjectOfType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  name: FindFirstObjectByType(Type, FindObjectsInactive)
  nameWithType: Object.FindFirstObjectByType(Type, FindObjectsInactive)
  fullName: UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    nameWithType: Object.FindFirstObjectByType
    fullName: UnityEngine.Object.FindFirstObjectByType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    nameWithType: FindObjectsInactive
    fullName: UnityEngine.FindObjectsInactive
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindFirstObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindFirstObjectByType
    nameWithType: Object.FindFirstObjectByType
    fullName: UnityEngine.Object.FindFirstObjectByType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    nameWithType: FindObjectsInactive
    fullName: UnityEngine.FindObjectsInactive
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  commentId: M:UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
  parent: UnityEngine.Object
  isExternal: true
  name: FindAnyObjectByType(Type, FindObjectsInactive)
  nameWithType: Object.FindAnyObjectByType(Type, FindObjectsInactive)
  fullName: UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive)
  spec.csharp:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    nameWithType: Object.FindAnyObjectByType
    fullName: UnityEngine.Object.FindAnyObjectByType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    nameWithType: FindObjectsInactive
    fullName: UnityEngine.FindObjectsInactive
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.FindAnyObjectByType(System.Type,UnityEngine.FindObjectsInactive)
    name: FindAnyObjectByType
    nameWithType: Object.FindAnyObjectByType
    fullName: UnityEngine.Object.FindAnyObjectByType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.FindObjectsInactive
    name: FindObjectsInactive
    nameWithType: FindObjectsInactive
    fullName: UnityEngine.FindObjectsInactive
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.ToString
  commentId: M:UnityEngine.Object.ToString
  parent: UnityEngine.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: UnityEngine.Object.ToString()
  spec.csharp:
  - uid: UnityEngine.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: UnityEngine.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: UnityEngine.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.name
  commentId: P:UnityEngine.Object.name
  parent: UnityEngine.Object
  isExternal: true
  name: name
  nameWithType: Object.name
  fullName: UnityEngine.Object.name
- uid: UnityEngine.Object.hideFlags
  commentId: P:UnityEngine.Object.hideFlags
  parent: UnityEngine.Object
  isExternal: true
  name: hideFlags
  nameWithType: Object.hideFlags
  fullName: UnityEngine.Object.hideFlags
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.Component.TryGetComponent``1(``0@)
  commentId: M:UnityEngine.Component.TryGetComponent``1(``0@)
  isExternal: true
  name: TryGetComponent<T>(T)
  nameWithType: Component.TryGetComponent<T>(T)
  fullName: UnityEngine.Component.TryGetComponent<T>(T)
  nameWithType.vb: Component.TryGetComponent(Of T)(T)
  fullName.vb: UnityEngine.Component.TryGetComponent(Of T)(T)
  name.vb: TryGetComponent(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Component.TryGetComponent``1(``0@)
    name: TryGetComponent<T>
    nameWithType: Component.TryGetComponent<T>
    fullName: UnityEngine.Component.TryGetComponent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.TryGetComponent``1(``0@)
    name: TryGetComponent(Of T)
    nameWithType: Component.TryGetComponent(Of T)
    fullName: UnityEngine.Component.TryGetComponent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
  isExternal: true
  name: GetComponentsInChildren<T>(Boolean, List<T>)
  nameWithType: Component.GetComponentsInChildren<T>(Boolean, List<T>)
  fullName: UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInChildren(Of T)(Boolean, List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)(System.Boolean, System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInChildren(Of T)(Boolean, List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInChildren<T>
    nameWithType: Component.GetComponentsInChildren<T>
    fullName: UnityEngine.Component.GetComponentsInChildren<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInChildren(Of T)
    nameWithType: Component.GetComponentsInChildren(Of T)
    fullName: UnityEngine.Component.GetComponentsInChildren(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
  commentId: M:UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
  isExternal: true
  name: GetComponentsInChildren<T>(List<T>)
  nameWithType: Component.GetComponentsInChildren<T>(List<T>)
  fullName: UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInChildren(Of T)(List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInChildren(Of T)(System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInChildren(Of T)(List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
    name: GetComponentsInChildren<T>
    nameWithType: Component.GetComponentsInChildren<T>
    fullName: UnityEngine.Component.GetComponentsInChildren<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInChildren``1(System.Collections.Generic.List{``0})
    name: GetComponentsInChildren(Of T)
    nameWithType: Component.GetComponentsInChildren(Of T)
    fullName: UnityEngine.Component.GetComponentsInChildren(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
  commentId: M:UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
  isExternal: true
  name: GetComponentsInParent<T>(Boolean, List<T>)
  nameWithType: Component.GetComponentsInParent<T>(Boolean, List<T>)
  fullName: UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponentsInParent(Of T)(Boolean, List(Of T))
  fullName.vb: UnityEngine.Component.GetComponentsInParent(Of T)(System.Boolean, System.Collections.Generic.List(Of T))
  name.vb: GetComponentsInParent(Of T)(Boolean, List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInParent<T>
    nameWithType: Component.GetComponentsInParent<T>
    fullName: UnityEngine.Component.GetComponentsInParent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponentsInParent``1(System.Boolean,System.Collections.Generic.List{``0})
    name: GetComponentsInParent(Of T)
    nameWithType: Component.GetComponentsInParent(Of T)
    fullName: UnityEngine.Component.GetComponentsInParent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
  commentId: M:UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
  isExternal: true
  name: GetComponents<T>(List<T>)
  nameWithType: Component.GetComponents<T>(List<T>)
  fullName: UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>)
  nameWithType.vb: Component.GetComponents(Of T)(List(Of T))
  fullName.vb: UnityEngine.Component.GetComponents(Of T)(System.Collections.Generic.List(Of T))
  name.vb: GetComponents(Of T)(List(Of T))
  spec.csharp:
  - uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
    name: GetComponents<T>
    nameWithType: Component.GetComponents<T>
    fullName: UnityEngine.Component.GetComponents<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Component.GetComponents``1(System.Collections.Generic.List{``0})
    name: GetComponents(Of T)
    nameWithType: Component.GetComponents(Of T)
    fullName: UnityEngine.Component.GetComponents(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate``1(``0)
  commentId: M:UnityEngine.Object.Instantiate``1(``0)
  isExternal: true
  name: Instantiate<T>(T)
  nameWithType: Object.Instantiate<T>(T)
  fullName: UnityEngine.Object.Instantiate<T>(T)
  nameWithType.vb: Object.Instantiate(Of T)(T)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T)
  name.vb: Instantiate(Of T)(T)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate<T>
    nameWithType: Object.Instantiate<T>
    fullName: UnityEngine.Object.Instantiate<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0)
    name: Instantiate(Of T)
    nameWithType: Object.Instantiate(Of T)
    fullName: UnityEngine.Object.Instantiate(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
  isExternal: true
  name: Instantiate<T>(T, Vector3, Quaternion)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate<T>
    nameWithType: Object.Instantiate<T>
    fullName: UnityEngine.Object.Instantiate<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: Instantiate(Of T)
    nameWithType: Object.Instantiate(Of T)
    fullName: UnityEngine.Object.Instantiate(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
  isExternal: true
  name: Instantiate<T>(T, Vector3, Quaternion, Transform)
  nameWithType: Object.Instantiate<T>(T, Vector3, Quaternion, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Vector3, Quaternion, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate<T>
    nameWithType: Object.Instantiate<T>
    fullName: UnityEngine.Object.Instantiate<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Transform)
    name: Instantiate(Of T)
    nameWithType: Object.Instantiate(Of T)
    fullName: UnityEngine.Object.Instantiate(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
  isExternal: true
  name: Instantiate<T>(T, Transform)
  nameWithType: Object.Instantiate<T>(T, Transform)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform)
  name.vb: Instantiate(Of T)(T, Transform)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate<T>
    nameWithType: Object.Instantiate<T>
    fullName: UnityEngine.Object.Instantiate<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform)
    name: Instantiate(Of T)
    nameWithType: Object.Instantiate(Of T)
    fullName: UnityEngine.Object.Instantiate(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  commentId: M:UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
  isExternal: true
  name: Instantiate<T>(T, Transform, Boolean)
  nameWithType: Object.Instantiate<T>(T, Transform, Boolean)
  fullName: UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean)
  nameWithType.vb: Object.Instantiate(Of T)(T, Transform, Boolean)
  fullName.vb: UnityEngine.Object.Instantiate(Of T)(T, UnityEngine.Transform, System.Boolean)
  name.vb: Instantiate(Of T)(T, Transform, Boolean)
  spec.csharp:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate<T>
    nameWithType: Object.Instantiate<T>
    fullName: UnityEngine.Object.Instantiate<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnityEngine.Object.Instantiate``1(``0,UnityEngine.Transform,System.Boolean)
    name: Instantiate(Of T)
    nameWithType: Object.Instantiate(Of T)
    fullName: UnityEngine.Object.Instantiate(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Transform
    name: Transform
    nameWithType: Transform
    fullName: UnityEngine.Transform
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.MoveSchemeType
  commentId: T:VRBuilder.XRInteraction.LocomotionSchemeManager.MoveSchemeType
  parent: VRBuilder.XRInteraction
  name: LocomotionSchemeManager.MoveSchemeType
  nameWithType: LocomotionSchemeManager.MoveSchemeType
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.MoveSchemeType
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.MoveScheme*
  commentId: Overload:VRBuilder.XRInteraction.LocomotionSchemeManager.MoveScheme
  name: MoveScheme
  nameWithType: LocomotionSchemeManager.MoveScheme
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.MoveScheme
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.TurnStyleType
  commentId: T:VRBuilder.XRInteraction.LocomotionSchemeManager.TurnStyleType
  parent: VRBuilder.XRInteraction
  name: LocomotionSchemeManager.TurnStyleType
  nameWithType: LocomotionSchemeManager.TurnStyleType
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.TurnStyleType
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.TurnStyle*
  commentId: Overload:VRBuilder.XRInteraction.LocomotionSchemeManager.TurnStyle
  name: TurnStyle
  nameWithType: LocomotionSchemeManager.TurnStyle
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.TurnStyle
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.MoveForwardSourceType
  commentId: T:VRBuilder.XRInteraction.LocomotionSchemeManager.MoveForwardSourceType
  parent: VRBuilder.XRInteraction
  name: LocomotionSchemeManager.MoveForwardSourceType
  nameWithType: LocomotionSchemeManager.MoveForwardSourceType
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.MoveForwardSourceType
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.MoveForwardSource*
  commentId: Overload:VRBuilder.XRInteraction.LocomotionSchemeManager.MoveForwardSource
  name: MoveForwardSource
  nameWithType: LocomotionSchemeManager.MoveForwardSource
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.MoveForwardSource
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.actionMaps
  commentId: F:VRBuilder.XRInteraction.LocomotionSchemeManager.actionMaps
  isExternal: true
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.ActionAssets*
  commentId: Overload:VRBuilder.XRInteraction.LocomotionSchemeManager.ActionAssets
  name: ActionAssets
  nameWithType: LocomotionSchemeManager.ActionAssets
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.ActionAssets
- uid: System.Collections.Generic.List{UnityEngine.InputSystem.InputActionAsset}
  commentId: T:System.Collections.Generic.List{UnityEngine.InputSystem.InputActionAsset}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<InputActionAsset>
  nameWithType: List<InputActionAsset>
  fullName: System.Collections.Generic.List<UnityEngine.InputSystem.InputActionAsset>
  nameWithType.vb: List(Of InputActionAsset)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.InputSystem.InputActionAsset)
  name.vb: List(Of InputActionAsset)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.InputSystem.InputActionAsset
    name: InputActionAsset
    nameWithType: InputActionAsset
    fullName: UnityEngine.InputSystem.InputActionAsset
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.InputSystem.InputActionAsset
    name: InputActionAsset
    nameWithType: InputActionAsset
    fullName: UnityEngine.InputSystem.InputActionAsset
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.actionAssets
  commentId: F:VRBuilder.XRInteraction.LocomotionSchemeManager.actionAssets
  isExternal: true
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.ActionMaps*
  commentId: Overload:VRBuilder.XRInteraction.LocomotionSchemeManager.ActionMaps
  name: ActionMaps
  nameWithType: LocomotionSchemeManager.ActionMaps
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.ActionMaps
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.Actions*
  commentId: Overload:VRBuilder.XRInteraction.LocomotionSchemeManager.Actions
  name: Actions
  nameWithType: LocomotionSchemeManager.Actions
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.Actions
- uid: System.Collections.Generic.List{UnityEngine.InputSystem.InputActionReference}
  commentId: T:System.Collections.Generic.List{UnityEngine.InputSystem.InputActionReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<InputActionReference>
  nameWithType: List<InputActionReference>
  fullName: System.Collections.Generic.List<UnityEngine.InputSystem.InputActionReference>
  nameWithType.vb: List(Of InputActionReference)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.InputSystem.InputActionReference)
  name.vb: List(Of InputActionReference)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.InputSystem.InputActionReference
    name: InputActionReference
    nameWithType: InputActionReference
    fullName: UnityEngine.InputSystem.InputActionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.InputSystem.InputActionReference
    name: InputActionReference
    nameWithType: InputActionReference
    fullName: UnityEngine.InputSystem.InputActionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.BaseControlScheme*
  commentId: Overload:VRBuilder.XRInteraction.LocomotionSchemeManager.BaseControlScheme
  name: BaseControlScheme
  nameWithType: LocomotionSchemeManager.BaseControlScheme
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.BaseControlScheme
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.NoncontinuousControlScheme*
  commentId: Overload:VRBuilder.XRInteraction.LocomotionSchemeManager.NoncontinuousControlScheme
  name: NoncontinuousControlScheme
  nameWithType: LocomotionSchemeManager.NoncontinuousControlScheme
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.NoncontinuousControlScheme
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousControlScheme*
  commentId: Overload:VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousControlScheme
  name: ContinuousControlScheme
  nameWithType: LocomotionSchemeManager.ContinuousControlScheme
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousControlScheme
- uid: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase
  commentId: T:UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase
  parent: UnityEngine.XR.Interaction.Toolkit
  name: ContinuousMoveProviderBase
  nameWithType: ContinuousMoveProviderBase
  fullName: UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousMoveProvider*
  commentId: Overload:VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousMoveProvider
  name: ContinuousMoveProvider
  nameWithType: LocomotionSchemeManager.ContinuousMoveProvider
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousMoveProvider
- uid: UnityEngine.XR.Interaction.Toolkit
  commentId: N:UnityEngine.XR.Interaction.Toolkit
  name: UnityEngine.XR.Interaction.Toolkit
  nameWithType: UnityEngine.XR.Interaction.Toolkit
  fullName: UnityEngine.XR.Interaction.Toolkit
- uid: UnityEngine.XR.Interaction.Toolkit.ContinuousTurnProviderBase
  commentId: T:UnityEngine.XR.Interaction.Toolkit.ContinuousTurnProviderBase
  parent: UnityEngine.XR.Interaction.Toolkit
  name: ContinuousTurnProviderBase
  nameWithType: ContinuousTurnProviderBase
  fullName: UnityEngine.XR.Interaction.Toolkit.ContinuousTurnProviderBase
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousTurnProvider*
  commentId: Overload:VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousTurnProvider
  name: ContinuousTurnProvider
  nameWithType: LocomotionSchemeManager.ContinuousTurnProvider
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.ContinuousTurnProvider
- uid: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase
  commentId: T:UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase
  parent: UnityEngine.XR.Interaction.Toolkit
  name: SnapTurnProviderBase
  nameWithType: SnapTurnProviderBase
  fullName: UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.SnapTurnProvider*
  commentId: Overload:VRBuilder.XRInteraction.LocomotionSchemeManager.SnapTurnProvider
  name: SnapTurnProvider
  nameWithType: LocomotionSchemeManager.SnapTurnProvider
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.SnapTurnProvider
- uid: UnityEngine.Transform
  commentId: T:UnityEngine.Transform
  parent: UnityEngine
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: UnityEngine.Transform
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.HeadForwardSource*
  commentId: Overload:VRBuilder.XRInteraction.LocomotionSchemeManager.HeadForwardSource
  name: HeadForwardSource
  nameWithType: LocomotionSchemeManager.HeadForwardSource
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.HeadForwardSource
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.LeftHandForwardSource*
  commentId: Overload:VRBuilder.XRInteraction.LocomotionSchemeManager.LeftHandForwardSource
  name: LeftHandForwardSource
  nameWithType: LocomotionSchemeManager.LeftHandForwardSource
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.LeftHandForwardSource
- uid: VRBuilder.XRInteraction.LocomotionSchemeManager.RightHandForwardSource*
  commentId: Overload:VRBuilder.XRInteraction.LocomotionSchemeManager.RightHandForwardSource
  name: RightHandForwardSource
  nameWithType: LocomotionSchemeManager.RightHandForwardSource
  fullName: VRBuilder.XRInteraction.LocomotionSchemeManager.RightHandForwardSource
