### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  id: IEntityCollectionData`1
  parent: VRBuilder.Core.EntityOwners
  children:
  - VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  langs:
  - csharp
  - vb
  name: IEntityCollectionData<TEntity>
  nameWithType: IEntityCollectionData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>
  type: Interface
  source:
    remote:
      path: Source/Core/Runtime/EntityOwners/Collection/IEntityCollectionData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IEntityCollectionData
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/EntityOwners/Collection/IEntityCollectionData.cs
    startLine: 11
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.EntityOwners
  summary: "\nA generic version of <xref href=\"VRBuilder.Core.EntityOwners.IEntityCollectionData\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: 'public interface IEntityCollectionData<out TEntity> : IEntityCollectionData, IData where TEntity : IEntity'
    typeParameters:
    - id: TEntity
    content.vb: >-
      Public Interface IEntityCollectionData(Of Out TEntity As IEntity)

          Inherits IEntityCollectionData
  inheritedMembers:
  - VRBuilder.Core.IData.Metadata
  nameWithType.vb: IEntityCollectionData(Of TEntity)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity)
  name.vb: IEntityCollectionData(Of TEntity)
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  id: GetChildren
  parent: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  langs:
  - csharp
  - vb
  name: GetChildren()
  nameWithType: IEntityCollectionData<TEntity>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/EntityOwners/Collection/IEntityCollectionData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetChildren
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/EntityOwners/Collection/IEntityCollectionData.cs
    startLine: 13
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.EntityOwners
  syntax:
    content: IEnumerable<TEntity> GetChildren()
    return:
      type: System.Collections.Generic.IEnumerable{{TEntity}}
    content.vb: Function GetChildren As IEnumerable(Of TEntity)
  overload: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren*
  nameWithType.vb: IEntityCollectionData(Of TEntity).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren()
references:
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData
  parent: VRBuilder.Core.EntityOwners
  name: IEntityCollectionData
  nameWithType: IEntityCollectionData
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
- uid: VRBuilder.Core.EntityOwners
  commentId: N:VRBuilder.Core.EntityOwners
  name: VRBuilder.Core.EntityOwners
  nameWithType: VRBuilder.Core.EntityOwners
  fullName: VRBuilder.Core.EntityOwners
- uid: VRBuilder.Core.IData.Metadata
  commentId: P:VRBuilder.Core.IData.Metadata
  parent: VRBuilder.Core.IData
  name: Metadata
  nameWithType: IData.Metadata
  fullName: VRBuilder.Core.IData.Metadata
- uid: VRBuilder.Core.IData
  commentId: T:VRBuilder.Core.IData
  parent: VRBuilder.Core
  name: IData
  nameWithType: IData
  fullName: VRBuilder.Core.IData
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren*
  commentId: Overload:VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  name: GetChildren
  nameWithType: IEntityCollectionData<TEntity>.GetChildren
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren
  nameWithType.vb: IEntityCollectionData(Of TEntity).GetChildren
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren
- uid: System.Collections.Generic.IEnumerable{{TEntity}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TEntity>
  nameWithType: IEnumerable<TEntity>
  fullName: System.Collections.Generic.IEnumerable<TEntity>
  nameWithType.vb: IEnumerable(Of TEntity)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TEntity)
  name.vb: IEnumerable(Of TEntity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
