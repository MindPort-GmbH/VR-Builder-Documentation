### YamlMime:ManagedReference
items:
- uid: VRBuilder.BasicInteraction.Validation.Validator
  commentId: T:VRBuilder.BasicInteraction.Validation.Validator
  id: Validator
  parent: VRBuilder.BasicInteraction.Validation
  children:
  - VRBuilder.BasicInteraction.Validation.Validator.Validate(GameObject)
  langs:
  - csharp
  - vb
  name: Validator
  nameWithType: Validator
  fullName: VRBuilder.BasicInteraction.Validation.Validator
  type: Class
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Validation/Validator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Validator
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Validation/Validator.cs
    startLine: 7
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Validation
  summary: "\nBase validator used to implement concrete validators.\n"
  example: []
  syntax:
    content: 'public abstract class Validator : MonoBehaviour'
    content.vb: >-
      Public MustInherit Class Validator

          Inherits MonoBehaviour
  inheritance:
  - System.Object
  derivedClasses:
  - VRBuilder.BasicInteraction.Validation.HasGuidValidation
  - VRBuilder.BasicInteraction.Validation.IsObjectWithTagValidation
  - VRBuilder.BasicInteraction.Validation.IsProcessSceneObjectValidation
  - VRBuilder.Netcode.Properties.SnapZoneNetworkValidator
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VRBuilder.BasicInteraction.Validation.Validator.Validate(GameObject)
  commentId: M:VRBuilder.BasicInteraction.Validation.Validator.Validate(GameObject)
  id: Validate(GameObject)
  parent: VRBuilder.BasicInteraction.Validation.Validator
  langs:
  - csharp
  - vb
  name: Validate(GameObject)
  nameWithType: Validator.Validate(GameObject)
  fullName: VRBuilder.BasicInteraction.Validation.Validator.Validate(GameObject)
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Validation/Validator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Validate
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Validation/Validator.cs
    startLine: 12
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Validation
  summary: "\nWhen this returns true, the given object is allowed to be snapped.\n"
  example: []
  syntax:
    content: public abstract bool Validate(GameObject obj)
    parameters:
    - id: obj
      type: GameObject
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function Validate(obj As GameObject) As Boolean
  overload: VRBuilder.BasicInteraction.Validation.Validator.Validate*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: VRBuilder.BasicInteraction.Validation
  commentId: N:VRBuilder.BasicInteraction.Validation
  name: VRBuilder.BasicInteraction.Validation
  nameWithType: VRBuilder.BasicInteraction.Validation
  fullName: VRBuilder.BasicInteraction.Validation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.BasicInteraction.Validation.Validator.Validate*
  commentId: Overload:VRBuilder.BasicInteraction.Validation.Validator.Validate
  name: Validate
  nameWithType: Validator.Validate
  fullName: VRBuilder.BasicInteraction.Validation.Validator.Validate
- uid: GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
