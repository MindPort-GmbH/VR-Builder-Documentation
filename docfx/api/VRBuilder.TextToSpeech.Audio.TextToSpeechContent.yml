### YamlMime:ManagedReference
items:
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechContent
  commentId: T:VRBuilder.TextToSpeech.Audio.TextToSpeechContent
  id: TextToSpeechContent
  parent: VRBuilder.TextToSpeech.Audio
  children:
  - VRBuilder.TextToSpeech.Audio.TextToSpeechContent.GetLocalizedContent
  - VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
  - VRBuilder.TextToSpeech.Audio.TextToSpeechContent.Text
  langs:
  - csharp
  - vb
  name: TextToSpeechContent
  nameWithType: TextToSpeechContent
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechContent
  type: Class
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/TextToSpeechContent.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: TextToSpeechContent
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/TextToSpeechContent.cs
    startLine: 11
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech.Audio
  summary: "\nUtility implementation of the <xref href=\"VRBuilder.TextToSpeech.Audio.ITextToSpeechContent\" data-throw-if-not-resolved=\"false\"></xref> interface that provides a default <xref href=\"VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached(UnityEngine.Localization.Locale)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: 'public abstract class TextToSpeechContent : ITextToSpeechContent, ILocalizedContent'
    content.vb: >-
      Public MustInherit Class TextToSpeechContent
          Implements ITextToSpeechContent, ILocalizedContent
  inheritance:
  - System.Object
  derivedClasses:
  - VRBuilder.TextToSpeech.Audio.TextToSpeechAudio
  implements:
  - VRBuilder.TextToSpeech.Audio.ITextToSpeechContent
  - VRBuilder.Core.Localization.ILocalizedContent
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.Text
  commentId: P:VRBuilder.TextToSpeech.Audio.TextToSpeechContent.Text
  id: Text
  parent: VRBuilder.TextToSpeech.Audio.TextToSpeechContent
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: TextToSpeechContent.Text
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.Text
  type: Property
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/TextToSpeechContent.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Text
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/TextToSpeechContent.cs
    startLine: 14
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech.Audio
  summary: "\nText content to be fed to the TTS provider.\n"
  example: []
  syntax:
    content: public abstract string Text { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride Property Text As String
  overload: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.Text*
  implements:
  - VRBuilder.TextToSpeech.Audio.ITextToSpeechContent.Text
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.GetLocalizedContent
  commentId: M:VRBuilder.TextToSpeech.Audio.TextToSpeechContent.GetLocalizedContent
  id: GetLocalizedContent
  parent: VRBuilder.TextToSpeech.Audio.TextToSpeechContent
  langs:
  - csharp
  - vb
  name: GetLocalizedContent()
  nameWithType: TextToSpeechContent.GetLocalizedContent()
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.GetLocalizedContent()
  type: Method
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/TextToSpeechContent.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetLocalizedContent
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/TextToSpeechContent.cs
    startLine: 17
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech.Audio
  summary: "\nReturns localized content according to the localization and process configuration.\n"
  example: []
  syntax:
    content: public abstract string GetLocalizedContent()
    return:
      type: System.String
    content.vb: Public MustOverride Function GetLocalizedContent As String
  overload: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.GetLocalizedContent*
  implements:
  - VRBuilder.Core.Localization.ILocalizedContent.GetLocalizedContent
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
  commentId: M:VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
  id: IsCached(UnityEngine.Localization.Locale)
  parent: VRBuilder.TextToSpeech.Audio.TextToSpeechContent
  langs:
  - csharp
  - vb
  name: IsCached(Locale)
  nameWithType: TextToSpeechContent.IsCached(Locale)
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
  type: Method
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/TextToSpeechContent.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsCached
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/TextToSpeechContent.cs
    startLine: 20
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech.Audio
  summary: "\nTrue if a generated file for this content exists in the project.\n"
  example: []
  syntax:
    content: public virtual bool IsCached(Locale locale)
    parameters:
    - id: locale
      type: UnityEngine.Localization.Locale
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsCached(locale As Locale) As Boolean
  overload: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached*
  implements:
  - VRBuilder.TextToSpeech.Audio.ITextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: VRBuilder.TextToSpeech.Audio.ITextToSpeechContent
  commentId: T:VRBuilder.TextToSpeech.Audio.ITextToSpeechContent
  parent: VRBuilder.TextToSpeech.Audio
  name: ITextToSpeechContent
  nameWithType: ITextToSpeechContent
  fullName: VRBuilder.TextToSpeech.Audio.ITextToSpeechContent
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
  commentId: M:VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
  parent: VRBuilder.TextToSpeech.Audio.TextToSpeechContent
  name: IsCached(Locale)
  nameWithType: TextToSpeechContent.IsCached(Locale)
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
  spec.csharp:
  - uid: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
    name: IsCached
    nameWithType: TextToSpeechContent.IsCached
    fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Localization.Locale
    name: Locale
    nameWithType: Locale
    fullName: UnityEngine.Localization.Locale
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
    name: IsCached
    nameWithType: TextToSpeechContent.IsCached
    fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Localization.Locale
    name: Locale
    nameWithType: Locale
    fullName: UnityEngine.Localization.Locale
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.TextToSpeech.Audio
  commentId: N:VRBuilder.TextToSpeech.Audio
  name: VRBuilder.TextToSpeech.Audio
  nameWithType: VRBuilder.TextToSpeech.Audio
  fullName: VRBuilder.TextToSpeech.Audio
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Localization.ILocalizedContent
  commentId: T:VRBuilder.Core.Localization.ILocalizedContent
  parent: VRBuilder.Core.Localization
  name: ILocalizedContent
  nameWithType: ILocalizedContent
  fullName: VRBuilder.Core.Localization.ILocalizedContent
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechContent
  commentId: T:VRBuilder.TextToSpeech.Audio.TextToSpeechContent
  parent: VRBuilder.TextToSpeech.Audio
  name: TextToSpeechContent
  nameWithType: TextToSpeechContent
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechContent
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Localization
  commentId: N:VRBuilder.Core.Localization
  name: VRBuilder.Core.Localization
  nameWithType: VRBuilder.Core.Localization
  fullName: VRBuilder.Core.Localization
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.Text*
  commentId: Overload:VRBuilder.TextToSpeech.Audio.TextToSpeechContent.Text
  name: Text
  nameWithType: TextToSpeechContent.Text
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.Text
- uid: VRBuilder.TextToSpeech.Audio.ITextToSpeechContent.Text
  commentId: P:VRBuilder.TextToSpeech.Audio.ITextToSpeechContent.Text
  parent: VRBuilder.TextToSpeech.Audio.ITextToSpeechContent
  name: Text
  nameWithType: ITextToSpeechContent.Text
  fullName: VRBuilder.TextToSpeech.Audio.ITextToSpeechContent.Text
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.GetLocalizedContent*
  commentId: Overload:VRBuilder.TextToSpeech.Audio.TextToSpeechContent.GetLocalizedContent
  name: GetLocalizedContent
  nameWithType: TextToSpeechContent.GetLocalizedContent
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.GetLocalizedContent
- uid: VRBuilder.Core.Localization.ILocalizedContent.GetLocalizedContent
  commentId: M:VRBuilder.Core.Localization.ILocalizedContent.GetLocalizedContent
  parent: VRBuilder.Core.Localization.ILocalizedContent
  name: GetLocalizedContent()
  nameWithType: ILocalizedContent.GetLocalizedContent()
  fullName: VRBuilder.Core.Localization.ILocalizedContent.GetLocalizedContent()
  spec.csharp:
  - uid: VRBuilder.Core.Localization.ILocalizedContent.GetLocalizedContent
    name: GetLocalizedContent
    nameWithType: ILocalizedContent.GetLocalizedContent
    fullName: VRBuilder.Core.Localization.ILocalizedContent.GetLocalizedContent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Localization.ILocalizedContent.GetLocalizedContent
    name: GetLocalizedContent
    nameWithType: ILocalizedContent.GetLocalizedContent
    fullName: VRBuilder.Core.Localization.ILocalizedContent.GetLocalizedContent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached*
  commentId: Overload:VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached
  name: IsCached
  nameWithType: TextToSpeechContent.IsCached
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached
- uid: VRBuilder.TextToSpeech.Audio.ITextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
  commentId: M:VRBuilder.TextToSpeech.Audio.ITextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
  parent: VRBuilder.TextToSpeech.Audio.ITextToSpeechContent
  name: IsCached(Locale)
  nameWithType: ITextToSpeechContent.IsCached(Locale)
  fullName: VRBuilder.TextToSpeech.Audio.ITextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
  spec.csharp:
  - uid: VRBuilder.TextToSpeech.Audio.ITextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
    name: IsCached
    nameWithType: ITextToSpeechContent.IsCached
    fullName: VRBuilder.TextToSpeech.Audio.ITextToSpeechContent.IsCached
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Localization.Locale
    name: Locale
    nameWithType: Locale
    fullName: UnityEngine.Localization.Locale
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.TextToSpeech.Audio.ITextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
    name: IsCached
    nameWithType: ITextToSpeechContent.IsCached
    fullName: VRBuilder.TextToSpeech.Audio.ITextToSpeechContent.IsCached
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Localization.Locale
    name: Locale
    nameWithType: Locale
    fullName: UnityEngine.Localization.Locale
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Localization.Locale
  commentId: T:UnityEngine.Localization.Locale
  parent: UnityEngine.Localization
  name: Locale
  nameWithType: Locale
  fullName: UnityEngine.Localization.Locale
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: UnityEngine.Localization
  commentId: N:UnityEngine.Localization
  name: UnityEngine.Localization
  nameWithType: UnityEngine.Localization
  fullName: UnityEngine.Localization
