### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode`1
  commentId: T:VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode`1
  id: IEntityNonLinearSequenceDataWithMode`1
  parent: VRBuilder.Core.EntityOwners
  children:
  - VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode`1.OverrideNext
  langs:
  - csharp
  - vb
  name: IEntityNonLinearSequenceDataWithMode<TEntity>
  nameWithType: IEntityNonLinearSequenceDataWithMode<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode<TEntity>
  type: Interface
  source:
    remote:
      path: Source/Core/Runtime/EntityOwners/Sequence/IEntityNonLinearSequenceDataWithMode.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IEntityNonLinearSequenceDataWithMode
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/EntityOwners/Sequence/IEntityNonLinearSequenceDataWithMode.cs
    startLine: 5
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.EntityOwners
  summary: "\nSequence data which allow specifying the next element in the sequence.\n"
  example: []
  syntax:
    content: 'public interface IEntityNonLinearSequenceDataWithMode<TEntity> : IEntitySequenceDataWithMode<TEntity>, IEntitySequenceData<TEntity>, IEntityCollectionData<TEntity>, IEntityCollectionData, IEntitySequenceData, IModeData, IData where TEntity : IEntity'
    typeParameters:
    - id: TEntity
    content.vb: >-
      Public Interface IEntityNonLinearSequenceDataWithMode(Of TEntity As IEntity)

          Inherits IEntitySequenceDataWithMode(Of TEntity)
  inheritedMembers:
  - VRBuilder.Core.EntityOwners.IEntitySequenceData{{TEntity}}.Current
  - VRBuilder.Core.EntityOwners.IEntityCollectionData{{TEntity}}.GetChildren
  - VRBuilder.Core.Configuration.Modes.IModeData.Mode
  - VRBuilder.Core.IData.Metadata
  nameWithType.vb: IEntityNonLinearSequenceDataWithMode(Of TEntity)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode(Of TEntity)
  name.vb: IEntityNonLinearSequenceDataWithMode(Of TEntity)
- uid: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode`1.OverrideNext
  commentId: P:VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode`1.OverrideNext
  id: OverrideNext
  parent: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode`1
  langs:
  - csharp
  - vb
  name: OverrideNext
  nameWithType: IEntityNonLinearSequenceDataWithMode<TEntity>.OverrideNext
  fullName: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode<TEntity>.OverrideNext
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/EntityOwners/Sequence/IEntityNonLinearSequenceDataWithMode.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OverrideNext
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/EntityOwners/Sequence/IEntityNonLinearSequenceDataWithMode.cs
    startLine: 10
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.EntityOwners
  summary: "\nIf not null, overrides the next entity in the sequence.\n"
  example: []
  syntax:
    content: TEntity OverrideNext { get; set; }
    parameters: []
    return:
      type: '{TEntity}'
    content.vb: Property OverrideNext As TEntity
  overload: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode`1.OverrideNext*
  nameWithType.vb: IEntityNonLinearSequenceDataWithMode(Of TEntity).OverrideNext
  modifiers.csharp:
  - get
  - set
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode(Of TEntity).OverrideNext
references:
- uid: VRBuilder.Core.EntityOwners
  commentId: N:VRBuilder.Core.EntityOwners
  name: VRBuilder.Core.EntityOwners
  nameWithType: VRBuilder.Core.EntityOwners
  fullName: VRBuilder.Core.EntityOwners
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData{{TEntity}}.Current
  commentId: P:VRBuilder.Core.EntityOwners.IEntitySequenceData{`0}.Current
  parent: VRBuilder.Core.EntityOwners.IEntitySequenceData{{TEntity}}
  definition: VRBuilder.Core.EntityOwners.IEntitySequenceData`1.Current
  name: Current
  nameWithType: IEntitySequenceData<TEntity>.Current
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>.Current
  nameWithType.vb: IEntitySequenceData(Of TEntity).Current
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData(Of TEntity).Current
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData{{TEntity}}.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.IEntityCollectionData{`0}.GetChildren
  parent: VRBuilder.Core.EntityOwners.IEntityCollectionData{{TEntity}}
  definition: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: IEntityCollectionData<TEntity>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren()
  nameWithType.vb: IEntityCollectionData(Of TEntity).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData<TEntity>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData(Of TEntity).GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes.IModeData.Mode
  commentId: P:VRBuilder.Core.Configuration.Modes.IModeData.Mode
  parent: VRBuilder.Core.Configuration.Modes.IModeData
  name: Mode
  nameWithType: IModeData.Mode
  fullName: VRBuilder.Core.Configuration.Modes.IModeData.Mode
- uid: VRBuilder.Core.IData.Metadata
  commentId: P:VRBuilder.Core.IData.Metadata
  parent: VRBuilder.Core.IData
  name: Metadata
  nameWithType: IData.Metadata
  fullName: VRBuilder.Core.IData.Metadata
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1.Current
  commentId: P:VRBuilder.Core.EntityOwners.IEntitySequenceData`1.Current
  name: Current
  nameWithType: IEntitySequenceData<TEntity>.Current
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>.Current
  nameWithType.vb: IEntitySequenceData(Of TEntity).Current
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData(Of TEntity).Current
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData{{TEntity}}
  commentId: T:VRBuilder.Core.EntityOwners.IEntitySequenceData{`0}
  parent: VRBuilder.Core.EntityOwners
  definition: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
  name: IEntitySequenceData<TEntity>
  nameWithType: IEntitySequenceData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>
  nameWithType.vb: IEntitySequenceData(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData(Of TEntity)
  name.vb: IEntitySequenceData(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
    name: IEntitySequenceData
    nameWithType: IEntitySequenceData
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
    name: IEntitySequenceData
    nameWithType: IEntitySequenceData
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: IEntityCollectionData<TEntity>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren()
  nameWithType.vb: IEntityCollectionData(Of TEntity).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData<TEntity>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData(Of TEntity).GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData{{TEntity}}
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData{`0}
  parent: VRBuilder.Core.EntityOwners
  definition: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  name: IEntityCollectionData<TEntity>
  nameWithType: IEntityCollectionData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>
  nameWithType.vb: IEntityCollectionData(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity)
  name.vb: IEntityCollectionData(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes.IModeData
  commentId: T:VRBuilder.Core.Configuration.Modes.IModeData
  parent: VRBuilder.Core.Configuration.Modes
  name: IModeData
  nameWithType: IModeData
  fullName: VRBuilder.Core.Configuration.Modes.IModeData
- uid: VRBuilder.Core.IData
  commentId: T:VRBuilder.Core.IData
  parent: VRBuilder.Core
  name: IData
  nameWithType: IData
  fullName: VRBuilder.Core.IData
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
  commentId: T:VRBuilder.Core.EntityOwners.IEntitySequenceData`1
  name: IEntitySequenceData<TEntity>
  nameWithType: IEntitySequenceData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>
  nameWithType.vb: IEntitySequenceData(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData(Of TEntity)
  name.vb: IEntitySequenceData(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
    name: IEntitySequenceData
    nameWithType: IEntitySequenceData
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
    name: IEntitySequenceData
    nameWithType: IEntitySequenceData
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  name: IEntityCollectionData<TEntity>
  nameWithType: IEntityCollectionData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>
  nameWithType.vb: IEntityCollectionData(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity)
  name.vb: IEntityCollectionData(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes
  commentId: N:VRBuilder.Core.Configuration.Modes
  name: VRBuilder.Core.Configuration.Modes
  nameWithType: VRBuilder.Core.Configuration.Modes
  fullName: VRBuilder.Core.Configuration.Modes
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode`1.OverrideNext*
  commentId: Overload:VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode`1.OverrideNext
  name: OverrideNext
  nameWithType: IEntityNonLinearSequenceDataWithMode<TEntity>.OverrideNext
  fullName: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode<TEntity>.OverrideNext
  nameWithType.vb: IEntityNonLinearSequenceDataWithMode(Of TEntity).OverrideNext
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode(Of TEntity).OverrideNext
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
