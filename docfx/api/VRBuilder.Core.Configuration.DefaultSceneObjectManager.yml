### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Configuration.DefaultSceneObjectManager
  commentId: T:VRBuilder.Core.Configuration.DefaultSceneObjectManager
  id: DefaultSceneObjectManager
  parent: VRBuilder.Core.Configuration
  children:
  - VRBuilder.Core.Configuration.DefaultSceneObjectManager.InstantiatePrefab(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  - VRBuilder.Core.Configuration.DefaultSceneObjectManager.RequestAuthority(VRBuilder.Core.SceneObjects.ISceneObject)
  - VRBuilder.Core.Configuration.DefaultSceneObjectManager.SetComponentActive(VRBuilder.Core.SceneObjects.ISceneObject,System.String,System.Boolean)
  - VRBuilder.Core.Configuration.DefaultSceneObjectManager.SetSceneObjectActive(VRBuilder.Core.SceneObjects.ISceneObject,System.Boolean)
  langs:
  - csharp
  - vb
  name: DefaultSceneObjectManager
  nameWithType: DefaultSceneObjectManager
  fullName: VRBuilder.Core.Configuration.DefaultSceneObjectManager
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Configuration/DefaultSceneObjectManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DefaultSceneObjectManager
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/DefaultSceneObjectManager.cs
    startLine: 11
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: "\nDefault single-user implementation of <xref href=\"VRBuilder.Core.Configuration.ISceneObjectManager\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class DefaultSceneObjectManager : ISceneObjectManager'
    content.vb: >-
      Public Class DefaultSceneObjectManager

          Implements ISceneObjectManager
  inheritance:
  - System.Object
  implements:
  - VRBuilder.Core.Configuration.ISceneObjectManager
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.Configuration.DefaultSceneObjectManager.SetSceneObjectActive(VRBuilder.Core.SceneObjects.ISceneObject,System.Boolean)
  commentId: M:VRBuilder.Core.Configuration.DefaultSceneObjectManager.SetSceneObjectActive(VRBuilder.Core.SceneObjects.ISceneObject,System.Boolean)
  id: SetSceneObjectActive(VRBuilder.Core.SceneObjects.ISceneObject,System.Boolean)
  parent: VRBuilder.Core.Configuration.DefaultSceneObjectManager
  langs:
  - csharp
  - vb
  name: SetSceneObjectActive(ISceneObject, Boolean)
  nameWithType: DefaultSceneObjectManager.SetSceneObjectActive(ISceneObject, Boolean)
  fullName: VRBuilder.Core.Configuration.DefaultSceneObjectManager.SetSceneObjectActive(VRBuilder.Core.SceneObjects.ISceneObject, System.Boolean)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/DefaultSceneObjectManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetSceneObjectActive
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/DefaultSceneObjectManager.cs
    startLine: 14
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  example: []
  syntax:
    content: public void SetSceneObjectActive(ISceneObject sceneObject, bool isActive)
    parameters:
    - id: sceneObject
      type: VRBuilder.Core.SceneObjects.ISceneObject
    - id: isActive
      type: System.Boolean
    content.vb: Public Sub SetSceneObjectActive(sceneObject As ISceneObject, isActive As Boolean)
  overload: VRBuilder.Core.Configuration.DefaultSceneObjectManager.SetSceneObjectActive*
  implements:
  - VRBuilder.Core.Configuration.ISceneObjectManager.SetSceneObjectActive(VRBuilder.Core.SceneObjects.ISceneObject,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Configuration.DefaultSceneObjectManager.SetComponentActive(VRBuilder.Core.SceneObjects.ISceneObject,System.String,System.Boolean)
  commentId: M:VRBuilder.Core.Configuration.DefaultSceneObjectManager.SetComponentActive(VRBuilder.Core.SceneObjects.ISceneObject,System.String,System.Boolean)
  id: SetComponentActive(VRBuilder.Core.SceneObjects.ISceneObject,System.String,System.Boolean)
  parent: VRBuilder.Core.Configuration.DefaultSceneObjectManager
  langs:
  - csharp
  - vb
  name: SetComponentActive(ISceneObject, String, Boolean)
  nameWithType: DefaultSceneObjectManager.SetComponentActive(ISceneObject, String, Boolean)
  fullName: VRBuilder.Core.Configuration.DefaultSceneObjectManager.SetComponentActive(VRBuilder.Core.SceneObjects.ISceneObject, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/DefaultSceneObjectManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetComponentActive
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/DefaultSceneObjectManager.cs
    startLine: 20
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  example: []
  syntax:
    content: public void SetComponentActive(ISceneObject sceneObject, string componentTypeName, bool isActive)
    parameters:
    - id: sceneObject
      type: VRBuilder.Core.SceneObjects.ISceneObject
    - id: componentTypeName
      type: System.String
    - id: isActive
      type: System.Boolean
    content.vb: Public Sub SetComponentActive(sceneObject As ISceneObject, componentTypeName As String, isActive As Boolean)
  overload: VRBuilder.Core.Configuration.DefaultSceneObjectManager.SetComponentActive*
  implements:
  - VRBuilder.Core.Configuration.ISceneObjectManager.SetComponentActive(VRBuilder.Core.SceneObjects.ISceneObject,System.String,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Configuration.DefaultSceneObjectManager.InstantiatePrefab(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:VRBuilder.Core.Configuration.DefaultSceneObjectManager.InstantiatePrefab(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  id: InstantiatePrefab(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: VRBuilder.Core.Configuration.DefaultSceneObjectManager
  langs:
  - csharp
  - vb
  name: InstantiatePrefab(GameObject, Vector3, Quaternion)
  nameWithType: DefaultSceneObjectManager.InstantiatePrefab(GameObject, Vector3, Quaternion)
  fullName: VRBuilder.Core.Configuration.DefaultSceneObjectManager.InstantiatePrefab(UnityEngine.GameObject, UnityEngine.Vector3, UnityEngine.Quaternion)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/DefaultSceneObjectManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: InstantiatePrefab
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/DefaultSceneObjectManager.cs
    startLine: 36
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  example: []
  syntax:
    content: public GameObject InstantiatePrefab(GameObject prefab, Vector3 position, Quaternion rotation)
    parameters:
    - id: prefab
      type: UnityEngine.GameObject
    - id: position
      type: UnityEngine.Vector3
    - id: rotation
      type: UnityEngine.Quaternion
    return:
      type: UnityEngine.GameObject
    content.vb: Public Function InstantiatePrefab(prefab As GameObject, position As Vector3, rotation As Quaternion) As GameObject
  overload: VRBuilder.Core.Configuration.DefaultSceneObjectManager.InstantiatePrefab*
  implements:
  - VRBuilder.Core.Configuration.ISceneObjectManager.InstantiatePrefab(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Configuration.DefaultSceneObjectManager.RequestAuthority(VRBuilder.Core.SceneObjects.ISceneObject)
  commentId: M:VRBuilder.Core.Configuration.DefaultSceneObjectManager.RequestAuthority(VRBuilder.Core.SceneObjects.ISceneObject)
  id: RequestAuthority(VRBuilder.Core.SceneObjects.ISceneObject)
  parent: VRBuilder.Core.Configuration.DefaultSceneObjectManager
  langs:
  - csharp
  - vb
  name: RequestAuthority(ISceneObject)
  nameWithType: DefaultSceneObjectManager.RequestAuthority(ISceneObject)
  fullName: VRBuilder.Core.Configuration.DefaultSceneObjectManager.RequestAuthority(VRBuilder.Core.SceneObjects.ISceneObject)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/DefaultSceneObjectManager.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RequestAuthority
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/DefaultSceneObjectManager.cs
    startLine: 42
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  example: []
  syntax:
    content: public void RequestAuthority(ISceneObject sceneObject)
    parameters:
    - id: sceneObject
      type: VRBuilder.Core.SceneObjects.ISceneObject
    content.vb: Public Sub RequestAuthority(sceneObject As ISceneObject)
  overload: VRBuilder.Core.Configuration.DefaultSceneObjectManager.RequestAuthority*
  implements:
  - VRBuilder.Core.Configuration.ISceneObjectManager.RequestAuthority(VRBuilder.Core.SceneObjects.ISceneObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Core.Configuration.ISceneObjectManager
  commentId: T:VRBuilder.Core.Configuration.ISceneObjectManager
  parent: VRBuilder.Core.Configuration
  name: ISceneObjectManager
  nameWithType: ISceneObjectManager
  fullName: VRBuilder.Core.Configuration.ISceneObjectManager
- uid: VRBuilder.Core.Configuration
  commentId: N:VRBuilder.Core.Configuration
  name: VRBuilder.Core.Configuration
  nameWithType: VRBuilder.Core.Configuration
  fullName: VRBuilder.Core.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Configuration.DefaultSceneObjectManager.SetSceneObjectActive*
  commentId: Overload:VRBuilder.Core.Configuration.DefaultSceneObjectManager.SetSceneObjectActive
  name: SetSceneObjectActive
  nameWithType: DefaultSceneObjectManager.SetSceneObjectActive
  fullName: VRBuilder.Core.Configuration.DefaultSceneObjectManager.SetSceneObjectActive
- uid: VRBuilder.Core.Configuration.ISceneObjectManager.SetSceneObjectActive(VRBuilder.Core.SceneObjects.ISceneObject,System.Boolean)
  commentId: M:VRBuilder.Core.Configuration.ISceneObjectManager.SetSceneObjectActive(VRBuilder.Core.SceneObjects.ISceneObject,System.Boolean)
  parent: VRBuilder.Core.Configuration.ISceneObjectManager
  isExternal: true
  name: SetSceneObjectActive(ISceneObject, Boolean)
  nameWithType: ISceneObjectManager.SetSceneObjectActive(ISceneObject, Boolean)
  fullName: VRBuilder.Core.Configuration.ISceneObjectManager.SetSceneObjectActive(VRBuilder.Core.SceneObjects.ISceneObject, System.Boolean)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.ISceneObjectManager.SetSceneObjectActive(VRBuilder.Core.SceneObjects.ISceneObject,System.Boolean)
    name: SetSceneObjectActive
    nameWithType: ISceneObjectManager.SetSceneObjectActive
    fullName: VRBuilder.Core.Configuration.ISceneObjectManager.SetSceneObjectActive
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.ISceneObjectManager.SetSceneObjectActive(VRBuilder.Core.SceneObjects.ISceneObject,System.Boolean)
    name: SetSceneObjectActive
    nameWithType: ISceneObjectManager.SetSceneObjectActive
    fullName: VRBuilder.Core.Configuration.ISceneObjectManager.SetSceneObjectActive
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ISceneObject
  commentId: T:VRBuilder.Core.SceneObjects.ISceneObject
  parent: VRBuilder.Core.SceneObjects
  name: ISceneObject
  nameWithType: ISceneObject
  fullName: VRBuilder.Core.SceneObjects.ISceneObject
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: VRBuilder.Core.Configuration.DefaultSceneObjectManager.SetComponentActive*
  commentId: Overload:VRBuilder.Core.Configuration.DefaultSceneObjectManager.SetComponentActive
  name: SetComponentActive
  nameWithType: DefaultSceneObjectManager.SetComponentActive
  fullName: VRBuilder.Core.Configuration.DefaultSceneObjectManager.SetComponentActive
- uid: VRBuilder.Core.Configuration.ISceneObjectManager.SetComponentActive(VRBuilder.Core.SceneObjects.ISceneObject,System.String,System.Boolean)
  commentId: M:VRBuilder.Core.Configuration.ISceneObjectManager.SetComponentActive(VRBuilder.Core.SceneObjects.ISceneObject,System.String,System.Boolean)
  parent: VRBuilder.Core.Configuration.ISceneObjectManager
  isExternal: true
  name: SetComponentActive(ISceneObject, String, Boolean)
  nameWithType: ISceneObjectManager.SetComponentActive(ISceneObject, String, Boolean)
  fullName: VRBuilder.Core.Configuration.ISceneObjectManager.SetComponentActive(VRBuilder.Core.SceneObjects.ISceneObject, System.String, System.Boolean)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.ISceneObjectManager.SetComponentActive(VRBuilder.Core.SceneObjects.ISceneObject,System.String,System.Boolean)
    name: SetComponentActive
    nameWithType: ISceneObjectManager.SetComponentActive
    fullName: VRBuilder.Core.Configuration.ISceneObjectManager.SetComponentActive
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.ISceneObjectManager.SetComponentActive(VRBuilder.Core.SceneObjects.ISceneObject,System.String,System.Boolean)
    name: SetComponentActive
    nameWithType: ISceneObjectManager.SetComponentActive
    fullName: VRBuilder.Core.Configuration.ISceneObjectManager.SetComponentActive
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Core.Configuration.DefaultSceneObjectManager.InstantiatePrefab*
  commentId: Overload:VRBuilder.Core.Configuration.DefaultSceneObjectManager.InstantiatePrefab
  name: InstantiatePrefab
  nameWithType: DefaultSceneObjectManager.InstantiatePrefab
  fullName: VRBuilder.Core.Configuration.DefaultSceneObjectManager.InstantiatePrefab
- uid: VRBuilder.Core.Configuration.ISceneObjectManager.InstantiatePrefab(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:VRBuilder.Core.Configuration.ISceneObjectManager.InstantiatePrefab(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: VRBuilder.Core.Configuration.ISceneObjectManager
  isExternal: true
  name: InstantiatePrefab(GameObject, Vector3, Quaternion)
  nameWithType: ISceneObjectManager.InstantiatePrefab(GameObject, Vector3, Quaternion)
  fullName: VRBuilder.Core.Configuration.ISceneObjectManager.InstantiatePrefab(UnityEngine.GameObject, UnityEngine.Vector3, UnityEngine.Quaternion)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.ISceneObjectManager.InstantiatePrefab(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: InstantiatePrefab
    nameWithType: ISceneObjectManager.InstantiatePrefab
    fullName: VRBuilder.Core.Configuration.ISceneObjectManager.InstantiatePrefab
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.ISceneObjectManager.InstantiatePrefab(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
    name: InstantiatePrefab
    nameWithType: ISceneObjectManager.InstantiatePrefab
    fullName: VRBuilder.Core.Configuration.ISceneObjectManager.InstantiatePrefab
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: UnityEngine.Quaternion
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: UnityEngine.Quaternion
  commentId: T:UnityEngine.Quaternion
  parent: UnityEngine
  isExternal: true
  name: Quaternion
  nameWithType: Quaternion
  fullName: UnityEngine.Quaternion
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: VRBuilder.Core.Configuration.DefaultSceneObjectManager.RequestAuthority*
  commentId: Overload:VRBuilder.Core.Configuration.DefaultSceneObjectManager.RequestAuthority
  name: RequestAuthority
  nameWithType: DefaultSceneObjectManager.RequestAuthority
  fullName: VRBuilder.Core.Configuration.DefaultSceneObjectManager.RequestAuthority
- uid: VRBuilder.Core.Configuration.ISceneObjectManager.RequestAuthority(VRBuilder.Core.SceneObjects.ISceneObject)
  commentId: M:VRBuilder.Core.Configuration.ISceneObjectManager.RequestAuthority(VRBuilder.Core.SceneObjects.ISceneObject)
  parent: VRBuilder.Core.Configuration.ISceneObjectManager
  name: RequestAuthority(ISceneObject)
  nameWithType: ISceneObjectManager.RequestAuthority(ISceneObject)
  fullName: VRBuilder.Core.Configuration.ISceneObjectManager.RequestAuthority(VRBuilder.Core.SceneObjects.ISceneObject)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.ISceneObjectManager.RequestAuthority(VRBuilder.Core.SceneObjects.ISceneObject)
    name: RequestAuthority
    nameWithType: ISceneObjectManager.RequestAuthority
    fullName: VRBuilder.Core.Configuration.ISceneObjectManager.RequestAuthority
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.ISceneObjectManager.RequestAuthority(VRBuilder.Core.SceneObjects.ISceneObject)
    name: RequestAuthority
    nameWithType: ISceneObjectManager.RequestAuthority
    fullName: VRBuilder.Core.Configuration.ISceneObjectManager.RequestAuthority
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: )
    nameWithType: )
    fullName: )
