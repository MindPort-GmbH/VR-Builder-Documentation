### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata
  commentId: T:VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata
  id: ReorderableElementMetadata
  parent: VRBuilder.Core.UI.Drawers.Metadata
  children:
  - VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.IsFirst
  - VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.IsLast
  - VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.MoveDown
  - VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.MoveUp
  langs:
  - csharp
  - vb
  name: ReorderableElementMetadata
  nameWithType: ReorderableElementMetadata
  fullName: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Metadata/ReorderableElementMetadata.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ReorderableElementMetadata
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Metadata/ReorderableElementMetadata.cs
    startLine: 9
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.UI.Drawers.Metadata
  summary: "\nMetadata to make <xref href=\"VRBuilder.Core.Attributes.ReorderableListOfAttribute\" data-throw-if-not-resolved=\"false\"></xref> reorderable.\n"
  example: []
  syntax:
    content: public class ReorderableElementMetadata
    content.vb: Public Class ReorderableElementMetadata
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.MoveUp
  commentId: P:VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.MoveUp
  id: MoveUp
  parent: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata
  langs:
  - csharp
  - vb
  name: MoveUp
  nameWithType: ReorderableElementMetadata.MoveUp
  fullName: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.MoveUp
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Metadata/ReorderableElementMetadata.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: MoveUp
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Metadata/ReorderableElementMetadata.cs
    startLine: 14
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.UI.Drawers.Metadata
  summary: "\nDetermines, whether the entity must be moved up in the list.\n"
  example: []
  syntax:
    content: public bool MoveUp { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property MoveUp As Boolean
  overload: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.MoveUp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.MoveDown
  commentId: P:VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.MoveDown
  id: MoveDown
  parent: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata
  langs:
  - csharp
  - vb
  name: MoveDown
  nameWithType: ReorderableElementMetadata.MoveDown
  fullName: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.MoveDown
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Metadata/ReorderableElementMetadata.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: MoveDown
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Metadata/ReorderableElementMetadata.cs
    startLine: 19
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.UI.Drawers.Metadata
  summary: "\nDetermines, whether the entity must be moved down in the list.\n"
  example: []
  syntax:
    content: public bool MoveDown { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property MoveDown As Boolean
  overload: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.MoveDown*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.IsFirst
  commentId: P:VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.IsFirst
  id: IsFirst
  parent: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata
  langs:
  - csharp
  - vb
  name: IsFirst
  nameWithType: ReorderableElementMetadata.IsFirst
  fullName: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.IsFirst
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Metadata/ReorderableElementMetadata.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsFirst
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Metadata/ReorderableElementMetadata.cs
    startLine: 24
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.UI.Drawers.Metadata
  summary: "\nDetermines, whether the entity is the first one in the list.\n"
  example: []
  syntax:
    content: public bool IsFirst { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsFirst As Boolean
  overload: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.IsFirst*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.IsLast
  commentId: P:VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.IsLast
  id: IsLast
  parent: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata
  langs:
  - csharp
  - vb
  name: IsLast
  nameWithType: ReorderableElementMetadata.IsLast
  fullName: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.IsLast
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Metadata/ReorderableElementMetadata.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsLast
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Metadata/ReorderableElementMetadata.cs
    startLine: 29
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.UI.Drawers.Metadata
  summary: "\nDetermines, whether the entity is the last one in the list.\n"
  example: []
  syntax:
    content: public bool IsLast { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsLast As Boolean
  overload: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.IsLast*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Core.Attributes.ReorderableListOfAttribute
  commentId: T:VRBuilder.Core.Attributes.ReorderableListOfAttribute
  parent: VRBuilder.Core.Attributes
  name: ReorderableListOfAttribute
  nameWithType: ReorderableListOfAttribute
  fullName: VRBuilder.Core.Attributes.ReorderableListOfAttribute
- uid: VRBuilder.Core.UI.Drawers.Metadata
  commentId: N:VRBuilder.Core.UI.Drawers.Metadata
  name: VRBuilder.Core.UI.Drawers.Metadata
  nameWithType: VRBuilder.Core.UI.Drawers.Metadata
  fullName: VRBuilder.Core.UI.Drawers.Metadata
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Attributes
  commentId: N:VRBuilder.Core.Attributes
  name: VRBuilder.Core.Attributes
  nameWithType: VRBuilder.Core.Attributes
  fullName: VRBuilder.Core.Attributes
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.MoveUp*
  commentId: Overload:VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.MoveUp
  name: MoveUp
  nameWithType: ReorderableElementMetadata.MoveUp
  fullName: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.MoveUp
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.MoveDown*
  commentId: Overload:VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.MoveDown
  name: MoveDown
  nameWithType: ReorderableElementMetadata.MoveDown
  fullName: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.MoveDown
- uid: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.IsFirst*
  commentId: Overload:VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.IsFirst
  name: IsFirst
  nameWithType: ReorderableElementMetadata.IsFirst
  fullName: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.IsFirst
- uid: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.IsLast*
  commentId: Overload:VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.IsLast
  name: IsLast
  nameWithType: ReorderableElementMetadata.IsLast
  fullName: VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.IsLast
