### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Settings.SceneObjectGroups
  commentId: T:VRBuilder.Core.Settings.SceneObjectGroups
  id: SceneObjectGroups
  parent: VRBuilder.Core.Settings
  children:
  - VRBuilder.Core.Settings.SceneObjectGroups.CanCreateGroup(System.String)
  - VRBuilder.Core.Settings.SceneObjectGroups.CreateGroup(System.String,System.Guid)
  - VRBuilder.Core.Settings.SceneObjectGroups.GetLabel(System.Guid)
  - VRBuilder.Core.Settings.SceneObjectGroups.GroupExists(System.Guid)
  - VRBuilder.Core.Settings.SceneObjectGroups.Groups
  - VRBuilder.Core.Settings.SceneObjectGroups.GuidNotRegisteredText
  - VRBuilder.Core.Settings.SceneObjectGroups.RemoveGroup(System.Guid)
  - VRBuilder.Core.Settings.SceneObjectGroups.RenameGroup(VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup,System.String)
  - VRBuilder.Core.Settings.SceneObjectGroups.TryGetGroup(System.Guid,VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup@)
  - VRBuilder.Core.Settings.SceneObjectGroups.TryGetGroup(System.String,VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup@)
  - VRBuilder.Core.Settings.SceneObjectGroups.UniqueGuidName
  - VRBuilder.Core.Settings.SceneObjectGroups.UniqueGuidNameItalic
  langs:
  - csharp
  - vb
  name: SceneObjectGroups
  nameWithType: SceneObjectGroups
  fullName: VRBuilder.Core.Settings.SceneObjectGroups
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Settings/SceneObjectGroups.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SceneObjectGroups
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Settings/SceneObjectGroups.cs
    startLine: 11
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Settings
  summary: "\nSettings for global list of scene object groups.\n"
  example: []
  syntax:
    content: 'public class SceneObjectGroups : SettingsObject<SceneObjectGroups>'
    content.vb: >-
      Public Class SceneObjectGroups

          Inherits SettingsObject(Of SceneObjectGroups)
  inheritance:
  - System.Object
  - VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Settings.SceneObjectGroups}
  inheritedMembers:
  - VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Settings.SceneObjectGroups}.Instance
  - VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Settings.SceneObjectGroups}.Save
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.Settings.SceneObjectGroups.UniqueGuidNameItalic
  commentId: F:VRBuilder.Core.Settings.SceneObjectGroups.UniqueGuidNameItalic
  id: UniqueGuidNameItalic
  parent: VRBuilder.Core.Settings.SceneObjectGroups
  langs:
  - csharp
  - vb
  name: UniqueGuidNameItalic
  nameWithType: SceneObjectGroups.UniqueGuidNameItalic
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.UniqueGuidNameItalic
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/Settings/SceneObjectGroups.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: UniqueGuidNameItalic
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Settings/SceneObjectGroups.cs
    startLine: 13
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Settings
  syntax:
    content: public const string UniqueGuidNameItalic = "[<i>Object ID</i>]"
    return:
      type: System.String
    content.vb: Public Const UniqueGuidNameItalic As String = "[<i>Object ID</i>]"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VRBuilder.Core.Settings.SceneObjectGroups.UniqueGuidName
  commentId: F:VRBuilder.Core.Settings.SceneObjectGroups.UniqueGuidName
  id: UniqueGuidName
  parent: VRBuilder.Core.Settings.SceneObjectGroups
  langs:
  - csharp
  - vb
  name: UniqueGuidName
  nameWithType: SceneObjectGroups.UniqueGuidName
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.UniqueGuidName
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/Settings/SceneObjectGroups.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: UniqueGuidName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Settings/SceneObjectGroups.cs
    startLine: 14
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Settings
  syntax:
    content: public const string UniqueGuidName = "[Object ID]"
    return:
      type: System.String
    content.vb: Public Const UniqueGuidName As String = "[Object ID]"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VRBuilder.Core.Settings.SceneObjectGroups.GuidNotRegisteredText
  commentId: F:VRBuilder.Core.Settings.SceneObjectGroups.GuidNotRegisteredText
  id: GuidNotRegisteredText
  parent: VRBuilder.Core.Settings.SceneObjectGroups
  langs:
  - csharp
  - vb
  name: GuidNotRegisteredText
  nameWithType: SceneObjectGroups.GuidNotRegisteredText
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.GuidNotRegisteredText
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/Settings/SceneObjectGroups.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GuidNotRegisteredText
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Settings/SceneObjectGroups.cs
    startLine: 15
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Settings
  syntax:
    content: public const string GuidNotRegisteredText = "[<i>Missing Group</i>]"
    return:
      type: System.String
    content.vb: Public Const GuidNotRegisteredText As String = "[<i>Missing Group</i>]"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VRBuilder.Core.Settings.SceneObjectGroups.Groups
  commentId: P:VRBuilder.Core.Settings.SceneObjectGroups.Groups
  id: Groups
  parent: VRBuilder.Core.Settings.SceneObjectGroups
  langs:
  - csharp
  - vb
  name: Groups
  nameWithType: SceneObjectGroups.Groups
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.Groups
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Settings/SceneObjectGroups.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Groups
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Settings/SceneObjectGroups.cs
    startLine: 80
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Settings
  summary: "\nAll groups in the list.\n"
  example: []
  syntax:
    content: public IEnumerable<SceneObjectGroups.SceneObjectGroup> Groups { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup}
    content.vb: Public ReadOnly Property Groups As IEnumerable(Of SceneObjectGroups.SceneObjectGroup)
  overload: VRBuilder.Core.Settings.SceneObjectGroups.Groups*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.Settings.SceneObjectGroups.CreateGroup(System.String,System.Guid)
  commentId: M:VRBuilder.Core.Settings.SceneObjectGroups.CreateGroup(System.String,System.Guid)
  id: CreateGroup(System.String,System.Guid)
  parent: VRBuilder.Core.Settings.SceneObjectGroups
  langs:
  - csharp
  - vb
  name: CreateGroup(String, Guid)
  nameWithType: SceneObjectGroups.CreateGroup(String, Guid)
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.CreateGroup(System.String, System.Guid)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Settings/SceneObjectGroups.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CreateGroup
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Settings/SceneObjectGroups.cs
    startLine: 85
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Settings
  summary: "\nCreate a new group and add it to the list.\n"
  example: []
  syntax:
    content: public SceneObjectGroups.SceneObjectGroup CreateGroup(string label, Guid guid)
    parameters:
    - id: label
      type: System.String
    - id: guid
      type: System.Guid
    return:
      type: VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup
    content.vb: Public Function CreateGroup(label As String, guid As Guid) As SceneObjectGroups.SceneObjectGroup
  overload: VRBuilder.Core.Settings.SceneObjectGroups.CreateGroup*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Settings.SceneObjectGroups.CanCreateGroup(System.String)
  commentId: M:VRBuilder.Core.Settings.SceneObjectGroups.CanCreateGroup(System.String)
  id: CanCreateGroup(System.String)
  parent: VRBuilder.Core.Settings.SceneObjectGroups
  langs:
  - csharp
  - vb
  name: CanCreateGroup(String)
  nameWithType: SceneObjectGroups.CanCreateGroup(String)
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.CanCreateGroup(System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Settings/SceneObjectGroups.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CanCreateGroup
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Settings/SceneObjectGroups.cs
    startLine: 110
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Settings
  summary: "\nDetermines whether a group with the specified label can be created.\n"
  example: []
  syntax:
    content: public bool CanCreateGroup(string label)
    parameters:
    - id: label
      type: System.String
      description: The label of the group.
    return:
      type: System.Boolean
      description: <code>true</code> if a group with the specified label can be created; otherwise, <code>false</code>.
    content.vb: Public Function CanCreateGroup(label As String) As Boolean
  overload: VRBuilder.Core.Settings.SceneObjectGroups.CanCreateGroup*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Settings.SceneObjectGroups.RemoveGroup(System.Guid)
  commentId: M:VRBuilder.Core.Settings.SceneObjectGroups.RemoveGroup(System.Guid)
  id: RemoveGroup(System.Guid)
  parent: VRBuilder.Core.Settings.SceneObjectGroups
  langs:
  - csharp
  - vb
  name: RemoveGroup(Guid)
  nameWithType: SceneObjectGroups.RemoveGroup(Guid)
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.RemoveGroup(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Settings/SceneObjectGroups.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RemoveGroup
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Settings/SceneObjectGroups.cs
    startLine: 121
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Settings
  summary: "\nRemoves a group from the list of groups based on the specified GUID.\n"
  example: []
  syntax:
    content: public bool RemoveGroup(Guid guid)
    parameters:
    - id: guid
      type: System.Guid
      description: The GUID of the group to remove.
    return:
      type: System.Boolean
      description: <code>true</code> if the group was successfully removed; otherwise, <code>false</code>.
    content.vb: Public Function RemoveGroup(guid As Guid) As Boolean
  overload: VRBuilder.Core.Settings.SceneObjectGroups.RemoveGroup*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Settings.SceneObjectGroups.GroupExists(System.Guid)
  commentId: M:VRBuilder.Core.Settings.SceneObjectGroups.GroupExists(System.Guid)
  id: GroupExists(System.Guid)
  parent: VRBuilder.Core.Settings.SceneObjectGroups
  langs:
  - csharp
  - vb
  name: GroupExists(Guid)
  nameWithType: SceneObjectGroups.GroupExists(Guid)
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.GroupExists(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Settings/SceneObjectGroups.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GroupExists
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Settings/SceneObjectGroups.cs
    startLine: 131
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Settings
  summary: "\nChecks if a group with the specified GUID exists.\n"
  example: []
  syntax:
    content: public bool GroupExists(Guid guid)
    parameters:
    - id: guid
      type: System.Guid
      description: The GUID of the group to check.
    return:
      type: System.Boolean
      description: <code>true</code> if a group with the specified GUID exists, otherwise <code>false</code>.
    content.vb: Public Function GroupExists(guid As Guid) As Boolean
  overload: VRBuilder.Core.Settings.SceneObjectGroups.GroupExists*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Settings.SceneObjectGroups.TryGetGroup(System.Guid,VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup@)
  commentId: M:VRBuilder.Core.Settings.SceneObjectGroups.TryGetGroup(System.Guid,VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup@)
  id: TryGetGroup(System.Guid,VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup@)
  parent: VRBuilder.Core.Settings.SceneObjectGroups
  langs:
  - csharp
  - vb
  name: TryGetGroup(Guid, out SceneObjectGroups.SceneObjectGroup)
  nameWithType: SceneObjectGroups.TryGetGroup(Guid, out SceneObjectGroups.SceneObjectGroup)
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.TryGetGroup(System.Guid, out VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Settings/SceneObjectGroups.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: TryGetGroup
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Settings/SceneObjectGroups.cs
    startLine: 142
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Settings
  summary: "\nTries to get the group associated with the specified GUID.\n"
  example: []
  syntax:
    content: public bool TryGetGroup(Guid guid, out SceneObjectGroups.SceneObjectGroup group)
    parameters:
    - id: guid
      type: System.Guid
      description: The GUID of the group to retrieve.
    - id: group
      type: VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup
      description: When this method returns, contains the group associated with the specified GUID, if found; otherwise, the default value.
    return:
      type: System.Boolean
      description: <code>true</code> if a group with the specified GUID is found; otherwise, <code>false</code>.
    content.vb: Public Function TryGetGroup(guid As Guid, ByRef group As SceneObjectGroups.SceneObjectGroup) As Boolean
  overload: VRBuilder.Core.Settings.SceneObjectGroups.TryGetGroup*
  nameWithType.vb: SceneObjectGroups.TryGetGroup(Guid, ByRef SceneObjectGroups.SceneObjectGroup)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.Settings.SceneObjectGroups.TryGetGroup(System.Guid, ByRef VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup)
  name.vb: TryGetGroup(Guid, ByRef SceneObjectGroups.SceneObjectGroup)
- uid: VRBuilder.Core.Settings.SceneObjectGroups.TryGetGroup(System.String,VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup@)
  commentId: M:VRBuilder.Core.Settings.SceneObjectGroups.TryGetGroup(System.String,VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup@)
  id: TryGetGroup(System.String,VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup@)
  parent: VRBuilder.Core.Settings.SceneObjectGroups
  langs:
  - csharp
  - vb
  name: TryGetGroup(String, out SceneObjectGroups.SceneObjectGroup)
  nameWithType: SceneObjectGroups.TryGetGroup(String, out SceneObjectGroups.SceneObjectGroup)
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.TryGetGroup(System.String, out VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Settings/SceneObjectGroups.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: TryGetGroup
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Settings/SceneObjectGroups.cs
    startLine: 154
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Settings
  summary: "\nTries to get a group associated with the specified label. Takes the first label found.\n"
  example: []
  syntax:
    content: public bool TryGetGroup(string label, out SceneObjectGroups.SceneObjectGroup group)
    parameters:
    - id: label
      type: System.String
      description: The label of the group to retrieve.
    - id: group
      type: VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup
      description: When this method returns, contains the first group found associated with the specified label, if found; otherwise, the default value.
    return:
      type: System.Boolean
      description: <code>true</code> if a group with the specified label is found; otherwise, <code>false</code>.
    content.vb: Public Function TryGetGroup(label As String, ByRef group As SceneObjectGroups.SceneObjectGroup) As Boolean
  overload: VRBuilder.Core.Settings.SceneObjectGroups.TryGetGroup*
  nameWithType.vb: SceneObjectGroups.TryGetGroup(String, ByRef SceneObjectGroups.SceneObjectGroup)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.Settings.SceneObjectGroups.TryGetGroup(System.String, ByRef VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup)
  name.vb: TryGetGroup(String, ByRef SceneObjectGroups.SceneObjectGroup)
- uid: VRBuilder.Core.Settings.SceneObjectGroups.GetLabel(System.Guid)
  commentId: M:VRBuilder.Core.Settings.SceneObjectGroups.GetLabel(System.Guid)
  id: GetLabel(System.Guid)
  parent: VRBuilder.Core.Settings.SceneObjectGroups
  langs:
  - csharp
  - vb
  name: GetLabel(Guid)
  nameWithType: SceneObjectGroups.GetLabel(Guid)
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.GetLabel(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Settings/SceneObjectGroups.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetLabel
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Settings/SceneObjectGroups.cs
    startLine: 165
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Settings
  summary: "\nRetrieves the label of a <xref href=\"VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup\" data-throw-if-not-resolved=\"false\"></xref> based on its GUID.\n"
  example: []
  syntax:
    content: public string GetLabel(Guid guid)
    parameters:
    - id: guid
      type: System.Guid
      description: The GUID of the <xref href="VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup" data-throw-if-not-resolved="false"></xref> .
    return:
      type: System.String
      description: The label of the <xref href="VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup" data-throw-if-not-resolved="false"></xref> if a group with the specified GUID is found; otherwise, <code>string.Empty</code>.
    content.vb: Public Function GetLabel(guid As Guid) As String
  overload: VRBuilder.Core.Settings.SceneObjectGroups.GetLabel*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Settings.SceneObjectGroups.RenameGroup(VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup,System.String)
  commentId: M:VRBuilder.Core.Settings.SceneObjectGroups.RenameGroup(VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup,System.String)
  id: RenameGroup(VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup,System.String)
  parent: VRBuilder.Core.Settings.SceneObjectGroups
  langs:
  - csharp
  - vb
  name: RenameGroup(SceneObjectGroups.SceneObjectGroup, String)
  nameWithType: SceneObjectGroups.RenameGroup(SceneObjectGroups.SceneObjectGroup, String)
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.RenameGroup(VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup, System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Settings/SceneObjectGroups.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RenameGroup
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Settings/SceneObjectGroups.cs
    startLine: 183
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Settings
  summary: "\nRenames the specified scene object group with the given label.\n"
  example: []
  syntax:
    content: public bool RenameGroup(SceneObjectGroups.SceneObjectGroup group, string label)
    parameters:
    - id: group
      type: VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup
      description: The scene object group to rename.
    - id: label
      type: System.String
      description: The new label for the group.
    return:
      type: System.Boolean
      description: <code>true</code> if the group was renamed successfully, <code>false</code> otherwise.
    content.vb: Public Function RenameGroup(group As SceneObjectGroups.SceneObjectGroup, label As String) As Boolean
  overload: VRBuilder.Core.Settings.SceneObjectGroups.RenameGroup*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Core.Settings
  commentId: N:VRBuilder.Core.Settings
  name: VRBuilder.Core.Settings
  nameWithType: VRBuilder.Core.Settings
  fullName: VRBuilder.Core.Settings
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Settings.SceneObjectGroups}
  commentId: T:VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Settings.SceneObjectGroups}
  parent: VRBuilder.Core.Runtime.Utils
  definition: VRBuilder.Core.Runtime.Utils.SettingsObject`1
  name: SettingsObject<SceneObjectGroups>
  nameWithType: SettingsObject<SceneObjectGroups>
  fullName: VRBuilder.Core.Runtime.Utils.SettingsObject<VRBuilder.Core.Settings.SceneObjectGroups>
  nameWithType.vb: SettingsObject(Of SceneObjectGroups)
  fullName.vb: VRBuilder.Core.Runtime.Utils.SettingsObject(Of VRBuilder.Core.Settings.SceneObjectGroups)
  name.vb: SettingsObject(Of SceneObjectGroups)
  spec.csharp:
  - uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1
    name: SettingsObject
    nameWithType: SettingsObject
    fullName: VRBuilder.Core.Runtime.Utils.SettingsObject
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Settings.SceneObjectGroups
    name: SceneObjectGroups
    nameWithType: SceneObjectGroups
    fullName: VRBuilder.Core.Settings.SceneObjectGroups
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1
    name: SettingsObject
    nameWithType: SettingsObject
    fullName: VRBuilder.Core.Runtime.Utils.SettingsObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Settings.SceneObjectGroups
    name: SceneObjectGroups
    nameWithType: SceneObjectGroups
    fullName: VRBuilder.Core.Settings.SceneObjectGroups
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Settings.SceneObjectGroups}.Instance
  commentId: P:VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Settings.SceneObjectGroups}.Instance
  parent: VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Settings.SceneObjectGroups}
  definition: VRBuilder.Core.Runtime.Utils.SettingsObject`1.Instance
  name: Instance
  nameWithType: SettingsObject<SceneObjectGroups>.Instance
  fullName: VRBuilder.Core.Runtime.Utils.SettingsObject<VRBuilder.Core.Settings.SceneObjectGroups>.Instance
  nameWithType.vb: SettingsObject(Of SceneObjectGroups).Instance
  fullName.vb: VRBuilder.Core.Runtime.Utils.SettingsObject(Of VRBuilder.Core.Settings.SceneObjectGroups).Instance
- uid: VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Settings.SceneObjectGroups}.Save
  commentId: M:VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Settings.SceneObjectGroups}.Save
  parent: VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Settings.SceneObjectGroups}
  definition: VRBuilder.Core.Runtime.Utils.SettingsObject`1.Save
  name: Save()
  nameWithType: SettingsObject<SceneObjectGroups>.Save()
  fullName: VRBuilder.Core.Runtime.Utils.SettingsObject<VRBuilder.Core.Settings.SceneObjectGroups>.Save()
  nameWithType.vb: SettingsObject(Of SceneObjectGroups).Save()
  fullName.vb: VRBuilder.Core.Runtime.Utils.SettingsObject(Of VRBuilder.Core.Settings.SceneObjectGroups).Save()
  spec.csharp:
  - uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1.Save
    name: Save
    nameWithType: SettingsObject<SceneObjectGroups>.Save
    fullName: VRBuilder.Core.Runtime.Utils.SettingsObject<VRBuilder.Core.Settings.SceneObjectGroups>.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1.Save
    name: Save
    nameWithType: SettingsObject(Of SceneObjectGroups).Save
    fullName: VRBuilder.Core.Runtime.Utils.SettingsObject(Of VRBuilder.Core.Settings.SceneObjectGroups).Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1
  commentId: T:VRBuilder.Core.Runtime.Utils.SettingsObject`1
  name: SettingsObject<T>
  nameWithType: SettingsObject<T>
  fullName: VRBuilder.Core.Runtime.Utils.SettingsObject<T>
  nameWithType.vb: SettingsObject(Of T)
  fullName.vb: VRBuilder.Core.Runtime.Utils.SettingsObject(Of T)
  name.vb: SettingsObject(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1
    name: SettingsObject
    nameWithType: SettingsObject
    fullName: VRBuilder.Core.Runtime.Utils.SettingsObject
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1
    name: SettingsObject
    nameWithType: SettingsObject
    fullName: VRBuilder.Core.Runtime.Utils.SettingsObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Runtime.Utils
  commentId: N:VRBuilder.Core.Runtime.Utils
  name: VRBuilder.Core.Runtime.Utils
  nameWithType: VRBuilder.Core.Runtime.Utils
  fullName: VRBuilder.Core.Runtime.Utils
- uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1.Instance
  commentId: P:VRBuilder.Core.Runtime.Utils.SettingsObject`1.Instance
  name: Instance
  nameWithType: SettingsObject<T>.Instance
  fullName: VRBuilder.Core.Runtime.Utils.SettingsObject<T>.Instance
  nameWithType.vb: SettingsObject(Of T).Instance
  fullName.vb: VRBuilder.Core.Runtime.Utils.SettingsObject(Of T).Instance
- uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1.Save
  commentId: M:VRBuilder.Core.Runtime.Utils.SettingsObject`1.Save
  name: Save()
  nameWithType: SettingsObject<T>.Save()
  fullName: VRBuilder.Core.Runtime.Utils.SettingsObject<T>.Save()
  nameWithType.vb: SettingsObject(Of T).Save()
  fullName.vb: VRBuilder.Core.Runtime.Utils.SettingsObject(Of T).Save()
  spec.csharp:
  - uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1.Save
    name: Save
    nameWithType: SettingsObject<T>.Save
    fullName: VRBuilder.Core.Runtime.Utils.SettingsObject<T>.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1.Save
    name: Save
    nameWithType: SettingsObject(Of T).Save
    fullName: VRBuilder.Core.Runtime.Utils.SettingsObject(Of T).Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Core.Settings.SceneObjectGroups.Groups*
  commentId: Overload:VRBuilder.Core.Settings.SceneObjectGroups.Groups
  name: Groups
  nameWithType: SceneObjectGroups.Groups
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.Groups
- uid: System.Collections.Generic.IEnumerable{VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup}
  commentId: T:System.Collections.Generic.IEnumerable{VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SceneObjectGroups.SceneObjectGroup>
  nameWithType: IEnumerable<SceneObjectGroups.SceneObjectGroup>
  fullName: System.Collections.Generic.IEnumerable<VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup>
  nameWithType.vb: IEnumerable(Of SceneObjectGroups.SceneObjectGroup)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup)
  name.vb: IEnumerable(Of SceneObjectGroups.SceneObjectGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup
    name: SceneObjectGroups.SceneObjectGroup
    nameWithType: SceneObjectGroups.SceneObjectGroup
    fullName: VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup
    name: SceneObjectGroups.SceneObjectGroup
    nameWithType: SceneObjectGroups.SceneObjectGroup
    fullName: VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Core.Settings.SceneObjectGroups.CreateGroup*
  commentId: Overload:VRBuilder.Core.Settings.SceneObjectGroups.CreateGroup
  name: CreateGroup
  nameWithType: SceneObjectGroups.CreateGroup
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.CreateGroup
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup
  commentId: T:VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup
  parent: VRBuilder.Core.Settings
  name: SceneObjectGroups.SceneObjectGroup
  nameWithType: SceneObjectGroups.SceneObjectGroup
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup
- uid: VRBuilder.Core.Settings.SceneObjectGroups.CanCreateGroup*
  commentId: Overload:VRBuilder.Core.Settings.SceneObjectGroups.CanCreateGroup
  name: CanCreateGroup
  nameWithType: SceneObjectGroups.CanCreateGroup
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.CanCreateGroup
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.Settings.SceneObjectGroups.RemoveGroup*
  commentId: Overload:VRBuilder.Core.Settings.SceneObjectGroups.RemoveGroup
  name: RemoveGroup
  nameWithType: SceneObjectGroups.RemoveGroup
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.RemoveGroup
- uid: VRBuilder.Core.Settings.SceneObjectGroups.GroupExists*
  commentId: Overload:VRBuilder.Core.Settings.SceneObjectGroups.GroupExists
  name: GroupExists
  nameWithType: SceneObjectGroups.GroupExists
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.GroupExists
- uid: VRBuilder.Core.Settings.SceneObjectGroups.TryGetGroup*
  commentId: Overload:VRBuilder.Core.Settings.SceneObjectGroups.TryGetGroup
  name: TryGetGroup
  nameWithType: SceneObjectGroups.TryGetGroup
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.TryGetGroup
- uid: VRBuilder.Core.Settings.SceneObjectGroups.GetLabel*
  commentId: Overload:VRBuilder.Core.Settings.SceneObjectGroups.GetLabel
  name: GetLabel
  nameWithType: SceneObjectGroups.GetLabel
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.GetLabel
- uid: VRBuilder.Core.Settings.SceneObjectGroups.RenameGroup*
  commentId: Overload:VRBuilder.Core.Settings.SceneObjectGroups.RenameGroup
  name: RenameGroup
  nameWithType: SceneObjectGroups.RenameGroup
  fullName: VRBuilder.Core.Settings.SceneObjectGroups.RenameGroup
