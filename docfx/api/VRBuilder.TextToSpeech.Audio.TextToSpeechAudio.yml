### YamlMime:ManagedReference
items:
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio
  commentId: T:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio
  id: TextToSpeechAudio
  parent: VRBuilder.TextToSpeech.Audio
  children:
  - VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.#ctor
  - VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.#ctor(System.String)
  - VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.AudioClip
  - VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.ClipData
  - VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.GetLocalizedContent
  - VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.HasAudioClip
  - VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.InitializeAudioClip
  - VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.IsEmpty
  - VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.IsLoading
  - VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.Text
  langs:
  - csharp
  - vb
  name: TextToSpeechAudio
  nameWithType: TextToSpeechAudio
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio
  type: Class
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: TextToSpeechAudio
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
    startLine: 15
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech.Audio
  summary: "\nThis class retrieves and stores AudioClips generated based in a provided localized text. \n"
  example: []
  syntax:
    content: >-
      [DataContract(IsReference = true)]

      [DisplayName("Play Text to Speech")]

      public class TextToSpeechAudio : TextToSpeechContent, ITextToSpeechContent, ILocalizedContent, IAudioData, ICanBeEmpty
    content.vb: >-
      <DataContract(IsReference:=True)>

      <DisplayName("Play Text to Speech")>

      Public Class TextToSpeechAudio
          Inherits TextToSpeechContent
          Implements ITextToSpeechContent, ILocalizedContent, IAudioData, ICanBeEmpty
  inheritance:
  - System.Object
  - VRBuilder.TextToSpeech.Audio.TextToSpeechContent
  implements:
  - VRBuilder.TextToSpeech.Audio.ITextToSpeechContent
  - VRBuilder.Core.Localization.ILocalizedContent
  - VRBuilder.Core.Audio.IAudioData
  - VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  inheritedMembers:
  - VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Play Text to Speech
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.Text
  commentId: P:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.Text
  id: Text
  parent: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: TextToSpeechAudio.Text
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.Text
  type: Property
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Text
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
    startLine: 23
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech.Audio
  summary: "\nText content to be fed to the TTS provider.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [UsesSpecificProcessDrawer("MultiLineStringDrawer")]

      [DisplayName("Text/Key")]

      public override string Text { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      <UsesSpecificProcessDrawer("MultiLineStringDrawer")>

      <DisplayName("Text/Key")>

      Public Overrides Property Text As String
  overridden: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.Text
  overload: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.Text*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: VRBuilder.Core.Attributes.UsesSpecificProcessDrawerAttribute
    ctor: VRBuilder.Core.Attributes.UsesSpecificProcessDrawerAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: MultiLineStringDrawer
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Text/Key
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.#ctor
  commentId: M:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.#ctor
  id: '#ctor'
  parent: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio
  langs:
  - csharp
  - vb
  name: TextToSpeechAudio()
  nameWithType: TextToSpeechAudio.TextToSpeechAudio()
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.TextToSpeechAudio()
  type: Constructor
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
    startLine: 42
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech.Audio
  syntax:
    content: protected TextToSpeechAudio()
    content.vb: Protected Sub New
  overload: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.#ctor(System.String)
  commentId: M:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio
  langs:
  - csharp
  - vb
  name: TextToSpeechAudio(String)
  nameWithType: TextToSpeechAudio.TextToSpeechAudio(String)
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.TextToSpeechAudio(System.String)
  type: Constructor
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
    startLine: 46
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech.Audio
  syntax:
    content: public TextToSpeechAudio(string text)
    parameters:
    - id: text
      type: System.String
    content.vb: Public Sub New(text As String)
  overload: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.HasAudioClip
  commentId: P:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.HasAudioClip
  id: HasAudioClip
  parent: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio
  langs:
  - csharp
  - vb
  name: HasAudioClip
  nameWithType: TextToSpeechAudio.HasAudioClip
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.HasAudioClip
  type: Property
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: HasAudioClip
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
    startLine: 59
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech.Audio
  summary: "\nTrue when there is an Audio Clip loaded.\n"
  example: []
  syntax:
    content: public bool HasAudioClip { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasAudioClip As Boolean
  overload: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.HasAudioClip*
  implements:
  - VRBuilder.Core.Audio.IAudioData.HasAudioClip
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.IsLoading
  commentId: P:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.IsLoading
  id: IsLoading
  parent: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio
  langs:
  - csharp
  - vb
  name: IsLoading
  nameWithType: TextToSpeechAudio.IsLoading
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.IsLoading
  type: Property
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsLoading
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
    startLine: 70
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech.Audio
  summary: "\nReturns true only when is busy loading an Audio Clip.\n"
  example: []
  syntax:
    content: public bool IsLoading { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLoading As Boolean
  overload: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.IsLoading*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.AudioClip
  commentId: P:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.AudioClip
  id: AudioClip
  parent: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio
  langs:
  - csharp
  - vb
  name: AudioClip
  nameWithType: TextToSpeechAudio.AudioClip
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.AudioClip
  type: Property
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AudioClip
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
    startLine: 75
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech.Audio
  syntax:
    content: public AudioClip AudioClip { get; }
    parameters: []
    return:
      type: AudioClip
    content.vb: Public ReadOnly Property AudioClip As AudioClip
  overload: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.AudioClip*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.ClipData
  commentId: P:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.ClipData
  id: ClipData
  parent: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio
  langs:
  - csharp
  - vb
  name: ClipData
  nameWithType: TextToSpeechAudio.ClipData
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.ClipData
  type: Property
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ClipData
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
    startLine: 78
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech.Audio
  summary: "\nData used to retrieve the audio clip.\n"
  example: []
  syntax:
    content: public string ClipData { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClipData As String
  overload: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.ClipData*
  implements:
  - VRBuilder.Core.Audio.IAudioData.ClipData
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.InitializeAudioClip
  commentId: M:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.InitializeAudioClip
  id: InitializeAudioClip
  parent: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio
  langs:
  - csharp
  - vb
  name: InitializeAudioClip()
  nameWithType: TextToSpeechAudio.InitializeAudioClip()
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.InitializeAudioClip()
  type: Method
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: InitializeAudioClip
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
    startLine: 93
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech.Audio
  summary: "\nCreates the audio clip based on the provided parameters.\n"
  example: []
  syntax:
    content: public async void InitializeAudioClip()
    content.vb: Public Sub InitializeAudioClip
  overload: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.InitializeAudioClip*
  implements:
  - VRBuilder.Core.Audio.IAudioData.InitializeAudioClip
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.IsEmpty
  commentId: M:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.IsEmpty
  id: IsEmpty
  parent: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio
  langs:
  - csharp
  - vb
  name: IsEmpty()
  nameWithType: TextToSpeechAudio.IsEmpty()
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.IsEmpty()
  type: Method
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsEmpty
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
    startLine: 128
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech.Audio
  summary: "\nReturns true when this object is not properly filled.\n"
  example: []
  syntax:
    content: public bool IsEmpty()
    return:
      type: System.Boolean
    content.vb: Public Function IsEmpty As Boolean
  overload: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.IsEmpty*
  implements:
  - VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.GetLocalizedContent
  commentId: M:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.GetLocalizedContent
  id: GetLocalizedContent
  parent: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio
  langs:
  - csharp
  - vb
  name: GetLocalizedContent()
  nameWithType: TextToSpeechAudio.GetLocalizedContent()
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.GetLocalizedContent()
  type: Method
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetLocalizedContent
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/TextToSpeechAudio.cs
    startLine: 133
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech.Audio
  syntax:
    content: public override string GetLocalizedContent()
    return:
      type: System.String
    content.vb: Public Overrides Function GetLocalizedContent As String
  overridden: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.GetLocalizedContent
  overload: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.GetLocalizedContent*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VRBuilder.TextToSpeech.Audio
  commentId: N:VRBuilder.TextToSpeech.Audio
  name: VRBuilder.TextToSpeech.Audio
  nameWithType: VRBuilder.TextToSpeech.Audio
  fullName: VRBuilder.TextToSpeech.Audio
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechContent
  commentId: T:VRBuilder.TextToSpeech.Audio.TextToSpeechContent
  parent: VRBuilder.TextToSpeech.Audio
  name: TextToSpeechContent
  nameWithType: TextToSpeechContent
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechContent
- uid: VRBuilder.TextToSpeech.Audio.ITextToSpeechContent
  commentId: T:VRBuilder.TextToSpeech.Audio.ITextToSpeechContent
  parent: VRBuilder.TextToSpeech.Audio
  name: ITextToSpeechContent
  nameWithType: ITextToSpeechContent
  fullName: VRBuilder.TextToSpeech.Audio.ITextToSpeechContent
- uid: VRBuilder.Core.Localization.ILocalizedContent
  commentId: T:VRBuilder.Core.Localization.ILocalizedContent
  parent: VRBuilder.Core.Localization
  name: ILocalizedContent
  nameWithType: ILocalizedContent
  fullName: VRBuilder.Core.Localization.ILocalizedContent
- uid: VRBuilder.Core.Audio.IAudioData
  commentId: T:VRBuilder.Core.Audio.IAudioData
  parent: VRBuilder.Core.Audio
  name: IAudioData
  nameWithType: IAudioData
  fullName: VRBuilder.Core.Audio.IAudioData
- uid: VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  commentId: T:VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  parent: VRBuilder.Core.Runtime.Properties
  name: ICanBeEmpty
  nameWithType: ICanBeEmpty
  fullName: VRBuilder.Core.Runtime.Properties.ICanBeEmpty
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
  commentId: M:VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
  parent: VRBuilder.TextToSpeech.Audio.TextToSpeechContent
  name: IsCached(Locale)
  nameWithType: TextToSpeechContent.IsCached(Locale)
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
  spec.csharp:
  - uid: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
    name: IsCached
    nameWithType: TextToSpeechContent.IsCached
    fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Localization.Locale
    name: Locale
    nameWithType: Locale
    fullName: UnityEngine.Localization.Locale
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached(UnityEngine.Localization.Locale)
    name: IsCached
    nameWithType: TextToSpeechContent.IsCached
    fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.IsCached
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.Localization.Locale
    name: Locale
    nameWithType: Locale
    fullName: UnityEngine.Localization.Locale
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Localization
  commentId: N:VRBuilder.Core.Localization
  name: VRBuilder.Core.Localization
  nameWithType: VRBuilder.Core.Localization
  fullName: VRBuilder.Core.Localization
- uid: VRBuilder.Core.Audio
  commentId: N:VRBuilder.Core.Audio
  name: VRBuilder.Core.Audio
  nameWithType: VRBuilder.Core.Audio
  fullName: VRBuilder.Core.Audio
- uid: VRBuilder.Core.Runtime.Properties
  commentId: N:VRBuilder.Core.Runtime.Properties
  name: VRBuilder.Core.Runtime.Properties
  nameWithType: VRBuilder.Core.Runtime.Properties
  fullName: VRBuilder.Core.Runtime.Properties
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.Text
  commentId: P:VRBuilder.TextToSpeech.Audio.TextToSpeechContent.Text
  parent: VRBuilder.TextToSpeech.Audio.TextToSpeechContent
  name: Text
  nameWithType: TextToSpeechContent.Text
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.Text
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.Text*
  commentId: Overload:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.Text
  name: Text
  nameWithType: TextToSpeechAudio.Text
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.Text
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.#ctor*
  commentId: Overload:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.#ctor
  name: TextToSpeechAudio
  nameWithType: TextToSpeechAudio.TextToSpeechAudio
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.TextToSpeechAudio
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.HasAudioClip*
  commentId: Overload:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.HasAudioClip
  name: HasAudioClip
  nameWithType: TextToSpeechAudio.HasAudioClip
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.HasAudioClip
- uid: VRBuilder.Core.Audio.IAudioData.HasAudioClip
  commentId: P:VRBuilder.Core.Audio.IAudioData.HasAudioClip
  parent: VRBuilder.Core.Audio.IAudioData
  name: HasAudioClip
  nameWithType: IAudioData.HasAudioClip
  fullName: VRBuilder.Core.Audio.IAudioData.HasAudioClip
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.IsLoading*
  commentId: Overload:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.IsLoading
  name: IsLoading
  nameWithType: TextToSpeechAudio.IsLoading
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.IsLoading
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.AudioClip*
  commentId: Overload:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.AudioClip
  name: AudioClip
  nameWithType: TextToSpeechAudio.AudioClip
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.AudioClip
- uid: AudioClip
  isExternal: true
  name: AudioClip
  nameWithType: AudioClip
  fullName: AudioClip
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.ClipData*
  commentId: Overload:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.ClipData
  name: ClipData
  nameWithType: TextToSpeechAudio.ClipData
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.ClipData
- uid: VRBuilder.Core.Audio.IAudioData.ClipData
  commentId: P:VRBuilder.Core.Audio.IAudioData.ClipData
  parent: VRBuilder.Core.Audio.IAudioData
  name: ClipData
  nameWithType: IAudioData.ClipData
  fullName: VRBuilder.Core.Audio.IAudioData.ClipData
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.InitializeAudioClip*
  commentId: Overload:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.InitializeAudioClip
  name: InitializeAudioClip
  nameWithType: TextToSpeechAudio.InitializeAudioClip
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.InitializeAudioClip
- uid: VRBuilder.Core.Audio.IAudioData.InitializeAudioClip
  commentId: M:VRBuilder.Core.Audio.IAudioData.InitializeAudioClip
  parent: VRBuilder.Core.Audio.IAudioData
  name: InitializeAudioClip()
  nameWithType: IAudioData.InitializeAudioClip()
  fullName: VRBuilder.Core.Audio.IAudioData.InitializeAudioClip()
  spec.csharp:
  - uid: VRBuilder.Core.Audio.IAudioData.InitializeAudioClip
    name: InitializeAudioClip
    nameWithType: IAudioData.InitializeAudioClip
    fullName: VRBuilder.Core.Audio.IAudioData.InitializeAudioClip
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Audio.IAudioData.InitializeAudioClip
    name: InitializeAudioClip
    nameWithType: IAudioData.InitializeAudioClip
    fullName: VRBuilder.Core.Audio.IAudioData.InitializeAudioClip
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.IsEmpty*
  commentId: Overload:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.IsEmpty
  name: IsEmpty
  nameWithType: TextToSpeechAudio.IsEmpty
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.IsEmpty
- uid: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
  commentId: M:VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
  parent: VRBuilder.Core.Runtime.Properties.ICanBeEmpty
  name: IsEmpty()
  nameWithType: ICanBeEmpty.IsEmpty()
  fullName: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty()
  spec.csharp:
  - uid: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
    name: IsEmpty
    nameWithType: ICanBeEmpty.IsEmpty
    fullName: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
    name: IsEmpty
    nameWithType: ICanBeEmpty.IsEmpty
    fullName: VRBuilder.Core.Runtime.Properties.ICanBeEmpty.IsEmpty
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.GetLocalizedContent
  commentId: M:VRBuilder.TextToSpeech.Audio.TextToSpeechContent.GetLocalizedContent
  parent: VRBuilder.TextToSpeech.Audio.TextToSpeechContent
  name: GetLocalizedContent()
  nameWithType: TextToSpeechContent.GetLocalizedContent()
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.GetLocalizedContent()
  spec.csharp:
  - uid: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.GetLocalizedContent
    name: GetLocalizedContent
    nameWithType: TextToSpeechContent.GetLocalizedContent
    fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.GetLocalizedContent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.GetLocalizedContent
    name: GetLocalizedContent
    nameWithType: TextToSpeechContent.GetLocalizedContent
    fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechContent.GetLocalizedContent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.GetLocalizedContent*
  commentId: Overload:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.GetLocalizedContent
  name: GetLocalizedContent
  nameWithType: TextToSpeechAudio.GetLocalizedContent
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.GetLocalizedContent
