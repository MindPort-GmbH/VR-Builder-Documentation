### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.ProcessMetadata
  commentId: T:VRBuilder.Core.ProcessMetadata
  id: ProcessMetadata
  parent: VRBuilder.Core
  children:
  - VRBuilder.Core.ProcessMetadata.#ctor
  - VRBuilder.Core.ProcessMetadata.Guid
  - VRBuilder.Core.ProcessMetadata.StringLocalizationTable
  langs:
  - csharp
  - vb
  name: ProcessMetadata
  nameWithType: ProcessMetadata
  fullName: VRBuilder.Core.ProcessMetadata
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/ProcessMetadata.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessMetadata
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessMetadata.cs
    startLine: 8
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nImplementation of <xref href=\"VRBuilder.Core.IMetadata\" data-throw-if-not-resolved=\"false\"></xref> adapted for <xref href=\"VRBuilder.Core.IProcess\" data-throw-if-not-resolved=\"false\"></xref> data.\n"
  example: []
  syntax:
    content: >-
      [DataContract(IsReference = true)]

      public class ProcessMetadata : IMetadata
    content.vb: >-
      <DataContract(IsReference:=True)>

      Public Class ProcessMetadata

          Implements IMetadata
  inheritance:
  - System.Object
  implements:
  - VRBuilder.Core.IMetadata
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.ProcessMetadata.StringLocalizationTable
  commentId: P:VRBuilder.Core.ProcessMetadata.StringLocalizationTable
  id: StringLocalizationTable
  parent: VRBuilder.Core.ProcessMetadata
  langs:
  - csharp
  - vb
  name: StringLocalizationTable
  nameWithType: ProcessMetadata.StringLocalizationTable
  fullName: VRBuilder.Core.ProcessMetadata.StringLocalizationTable
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/ProcessMetadata.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StringLocalizationTable
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessMetadata.cs
    startLine: 14
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nString localization table for this process.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public string StringLocalizationTable { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public Property StringLocalizationTable As String
  overload: VRBuilder.Core.ProcessMetadata.StringLocalizationTable*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.ProcessMetadata.Guid
  commentId: P:VRBuilder.Core.ProcessMetadata.Guid
  id: Guid
  parent: VRBuilder.Core.ProcessMetadata
  langs:
  - csharp
  - vb
  name: Guid
  nameWithType: ProcessMetadata.Guid
  fullName: VRBuilder.Core.ProcessMetadata.Guid
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/ProcessMetadata.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Guid
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessMetadata.cs
    startLine: 20
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nUnique identifier for process.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Guid Guid { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: >-
      <DataMember>

      Public Property Guid As Guid
  overload: VRBuilder.Core.ProcessMetadata.Guid*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.ProcessMetadata.#ctor
  commentId: M:VRBuilder.Core.ProcessMetadata.#ctor
  id: '#ctor'
  parent: VRBuilder.Core.ProcessMetadata
  langs:
  - csharp
  - vb
  name: ProcessMetadata()
  nameWithType: ProcessMetadata.ProcessMetadata()
  fullName: VRBuilder.Core.ProcessMetadata.ProcessMetadata()
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/ProcessMetadata.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessMetadata.cs
    startLine: 23
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  syntax:
    content: public ProcessMetadata()
    content.vb: Public Sub New
  overload: VRBuilder.Core.ProcessMetadata.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Core.IMetadata
  commentId: T:VRBuilder.Core.IMetadata
  parent: VRBuilder.Core
  name: IMetadata
  nameWithType: IMetadata
  fullName: VRBuilder.Core.IMetadata
- uid: VRBuilder.Core.IProcess
  commentId: T:VRBuilder.Core.IProcess
  parent: VRBuilder.Core
  name: IProcess
  nameWithType: IProcess
  fullName: VRBuilder.Core.IProcess
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.ProcessMetadata.StringLocalizationTable*
  commentId: Overload:VRBuilder.Core.ProcessMetadata.StringLocalizationTable
  name: StringLocalizationTable
  nameWithType: ProcessMetadata.StringLocalizationTable
  fullName: VRBuilder.Core.ProcessMetadata.StringLocalizationTable
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Core.ProcessMetadata.Guid*
  commentId: Overload:VRBuilder.Core.ProcessMetadata.Guid
  name: Guid
  nameWithType: ProcessMetadata.Guid
  fullName: VRBuilder.Core.ProcessMetadata.Guid
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: VRBuilder.Core.ProcessMetadata.#ctor*
  commentId: Overload:VRBuilder.Core.ProcessMetadata.#ctor
  name: ProcessMetadata
  nameWithType: ProcessMetadata.ProcessMetadata
  fullName: VRBuilder.Core.ProcessMetadata.ProcessMetadata
