### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.SceneObjects.ISceneObject
  commentId: T:VRBuilder.Core.SceneObjects.ISceneObject
  id: ISceneObject
  parent: VRBuilder.Core.SceneObjects
  children:
  - VRBuilder.Core.SceneObjects.ISceneObject.ChangeUniqueName(System.String)
  - VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty(System.Type)
  - VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty``1
  - VRBuilder.Core.SceneObjects.ISceneObject.GameObject
  - VRBuilder.Core.SceneObjects.ISceneObject.GetProperty``1
  - VRBuilder.Core.SceneObjects.ISceneObject.Guid
  - VRBuilder.Core.SceneObjects.ISceneObject.ObjectIdChanged
  - VRBuilder.Core.SceneObjects.ISceneObject.Properties
  - VRBuilder.Core.SceneObjects.ISceneObject.SetObjectId(System.Guid)
  - VRBuilder.Core.SceneObjects.ISceneObject.UniqueName
  - VRBuilder.Core.SceneObjects.ISceneObject.UniqueNameChanged
  - VRBuilder.Core.SceneObjects.ISceneObject.ValidateProperties(System.Collections.Generic.IEnumerable{System.Type})
  langs:
  - csharp
  - vb
  name: ISceneObject
  nameWithType: ISceneObject
  fullName: VRBuilder.Core.SceneObjects.ISceneObject
  type: Interface
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ISceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ISceneObject
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ISceneObject.cs
    startLine: 42
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nGives the possibility to easily identify targets for Conditions, Behaviors and so on.\n"
  example: []
  syntax:
    content: 'public interface ISceneObject : ILockable, IGuidContainer'
    content.vb: >-
      Public Interface ISceneObject
          Inherits ILockable, IGuidContainer
  inheritedMembers:
  - VRBuilder.Core.SceneObjects.ILockable.Locked
  - VRBuilder.Core.SceneObjects.ILockable.Unlocked
  - VRBuilder.Core.SceneObjects.ILockable.IsLocked
  - VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  - VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  - VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  - VRBuilder.Core.SceneObjects.IGuidContainer.GuidAdded
  - VRBuilder.Core.SceneObjects.IGuidContainer.GuidRemoved
  - VRBuilder.Core.SceneObjects.IGuidContainer.Guids
  - VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid(System.Guid)
  - VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid(System.Guid)
  - VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid(System.Guid)
  extensionMethods:
  - VRBuilder.Core.SceneObjects.ISceneObject.VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(System.String)
  - VRBuilder.Core.SceneObjects.ISceneObject.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1
  - VRBuilder.Core.SceneObjects.ISceneObject.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(System.Type)
  - VRBuilder.Core.SceneObjects.ISceneObject.VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  - VRBuilder.Core.SceneObjects.ISceneObject.VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VRBuilder.Core.SceneObjects.ISceneObject.UniqueNameChanged
  commentId: E:VRBuilder.Core.SceneObjects.ISceneObject.UniqueNameChanged
  id: UniqueNameChanged
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  langs:
  - csharp
  - vb
  name: UniqueNameChanged
  nameWithType: ISceneObject.UniqueNameChanged
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.UniqueNameChanged
  type: Event
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ISceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: UniqueNameChanged
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ISceneObject.cs
    startLine: 45
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: >-
      [Obsolete("This event is no longer used and will be removed in the next major release. Use UniqueIdChanged instead.")]

      event EventHandler<SceneObjectNameChanged> UniqueNameChanged
    return:
      type: System.EventHandler{VRBuilder.Core.SceneObjects.SceneObjectNameChanged}
    content.vb: >-
      <Obsolete("This event is no longer used and will be removed in the next major release. Use UniqueIdChanged instead.")>

      Event UniqueNameChanged As EventHandler(Of SceneObjectNameChanged)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This event is no longer used and will be removed in the next major release. Use UniqueIdChanged instead.
- uid: VRBuilder.Core.SceneObjects.ISceneObject.ObjectIdChanged
  commentId: E:VRBuilder.Core.SceneObjects.ISceneObject.ObjectIdChanged
  id: ObjectIdChanged
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  langs:
  - csharp
  - vb
  name: ObjectIdChanged
  nameWithType: ISceneObject.ObjectIdChanged
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.ObjectIdChanged
  type: Event
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ISceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ObjectIdChanged
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ISceneObject.cs
    startLine: 50
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nCalled when the object&apos;s object id has been changed.\n"
  example: []
  syntax:
    content: event EventHandler<UniqueIdChangedEventArgs> ObjectIdChanged
    return:
      type: System.EventHandler{VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs}
    content.vb: Event ObjectIdChanged As EventHandler(Of UniqueIdChangedEventArgs)
- uid: VRBuilder.Core.SceneObjects.ISceneObject.Guid
  commentId: P:VRBuilder.Core.SceneObjects.ISceneObject.Guid
  id: Guid
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  langs:
  - csharp
  - vb
  name: Guid
  nameWithType: ISceneObject.Guid
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.Guid
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ISceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Guid
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ISceneObject.cs
    startLine: 55
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nUnique Guid for each entity, which is required\n"
  example: []
  syntax:
    content: Guid Guid { get; }
    parameters: []
    return:
      type: System.Guid
    content.vb: ReadOnly Property Guid As Guid
  overload: VRBuilder.Core.SceneObjects.ISceneObject.Guid*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.Core.SceneObjects.ISceneObject.UniqueName
  commentId: P:VRBuilder.Core.SceneObjects.ISceneObject.UniqueName
  id: UniqueName
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  langs:
  - csharp
  - vb
  name: UniqueName
  nameWithType: ISceneObject.UniqueName
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.UniqueName
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ISceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: UniqueName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ISceneObject.cs
    startLine: 60
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nUnique name which is not required\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use Guid instead.")]

      string UniqueName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Obsolete("Use Guid instead.")>

      ReadOnly Property UniqueName As String
  overload: VRBuilder.Core.SceneObjects.ISceneObject.UniqueName*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use Guid instead.
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.Core.SceneObjects.ISceneObject.GameObject
  commentId: P:VRBuilder.Core.SceneObjects.ISceneObject.GameObject
  id: GameObject
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  langs:
  - csharp
  - vb
  name: GameObject
  nameWithType: ISceneObject.GameObject
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.GameObject
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ISceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GameObject
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ISceneObject.cs
    startLine: 66
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nTarget GameObject, used for applying stuff.\n"
  example: []
  syntax:
    content: GameObject GameObject { get; }
    parameters: []
    return:
      type: GameObject
    content.vb: ReadOnly Property GameObject As GameObject
  overload: VRBuilder.Core.SceneObjects.ISceneObject.GameObject*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.Core.SceneObjects.ISceneObject.Properties
  commentId: P:VRBuilder.Core.SceneObjects.ISceneObject.Properties
  id: Properties
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: ISceneObject.Properties
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.Properties
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ISceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Properties
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ISceneObject.cs
    startLine: 71
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nProperties on the scene object.\n"
  example: []
  syntax:
    content: ICollection<ISceneObjectProperty> Properties { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{VRBuilder.Core.Properties.ISceneObjectProperty}
    content.vb: ReadOnly Property Properties As ICollection(Of ISceneObjectProperty)
  overload: VRBuilder.Core.SceneObjects.ISceneObject.Properties*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty``1
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty``1
  id: CheckHasProperty``1
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  langs:
  - csharp
  - vb
  name: CheckHasProperty<T>()
  nameWithType: ISceneObject.CheckHasProperty<T>()
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty<T>()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ISceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CheckHasProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ISceneObject.cs
    startLine: 76
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nTrue if the scene object has a property of the specified type.\n"
  example: []
  syntax:
    content: >-
      bool CheckHasProperty<T>()
          where T : ISceneObjectProperty
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: Function CheckHasProperty(Of T As ISceneObjectProperty) As Boolean
  overload: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty*
  nameWithType.vb: ISceneObject.CheckHasProperty(Of T)()
  fullName.vb: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty(Of T)()
  name.vb: CheckHasProperty(Of T)()
- uid: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty(System.Type)
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty(System.Type)
  id: CheckHasProperty(System.Type)
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  langs:
  - csharp
  - vb
  name: CheckHasProperty(Type)
  nameWithType: ISceneObject.CheckHasProperty(Type)
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty(System.Type)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ISceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CheckHasProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ISceneObject.cs
    startLine: 81
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nTrue if the scene object has a property of the specified type.\n"
  example: []
  syntax:
    content: bool CheckHasProperty(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Function CheckHasProperty(type As Type) As Boolean
  overload: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty*
- uid: VRBuilder.Core.SceneObjects.ISceneObject.ValidateProperties(System.Collections.Generic.IEnumerable{System.Type})
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObject.ValidateProperties(System.Collections.Generic.IEnumerable{System.Type})
  id: ValidateProperties(System.Collections.Generic.IEnumerable{System.Type})
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  langs:
  - csharp
  - vb
  name: ValidateProperties(IEnumerable<Type>)
  nameWithType: ISceneObject.ValidateProperties(IEnumerable<Type>)
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.ValidateProperties(System.Collections.Generic.IEnumerable<System.Type>)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ISceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ValidateProperties
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ISceneObject.cs
    startLine: 86
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nValidates properties on the scene object.\n"
  example: []
  syntax:
    content: void ValidateProperties(IEnumerable<Type> properties)
    parameters:
    - id: properties
      type: System.Collections.Generic.IEnumerable{System.Type}
    content.vb: Sub ValidateProperties(properties As IEnumerable(Of Type))
  overload: VRBuilder.Core.SceneObjects.ISceneObject.ValidateProperties*
  nameWithType.vb: ISceneObject.ValidateProperties(IEnumerable(Of Type))
  fullName.vb: VRBuilder.Core.SceneObjects.ISceneObject.ValidateProperties(System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: ValidateProperties(IEnumerable(Of Type))
- uid: VRBuilder.Core.SceneObjects.ISceneObject.GetProperty``1
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObject.GetProperty``1
  id: GetProperty``1
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  langs:
  - csharp
  - vb
  name: GetProperty<T>()
  nameWithType: ISceneObject.GetProperty<T>()
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.GetProperty<T>()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ISceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ISceneObject.cs
    startLine: 91
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nReturns a property of the specified type.\n"
  example: []
  syntax:
    content: >-
      T GetProperty<T>()
          where T : ISceneObjectProperty
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Function GetProperty(Of T As ISceneObjectProperty) As T
  overload: VRBuilder.Core.SceneObjects.ISceneObject.GetProperty*
  nameWithType.vb: ISceneObject.GetProperty(Of T)()
  fullName.vb: VRBuilder.Core.SceneObjects.ISceneObject.GetProperty(Of T)()
  name.vb: GetProperty(Of T)()
- uid: VRBuilder.Core.SceneObjects.ISceneObject.ChangeUniqueName(System.String)
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObject.ChangeUniqueName(System.String)
  id: ChangeUniqueName(System.String)
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  langs:
  - csharp
  - vb
  name: ChangeUniqueName(String)
  nameWithType: ISceneObject.ChangeUniqueName(String)
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.ChangeUniqueName(System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ISceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ChangeUniqueName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ISceneObject.cs
    startLine: 96
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nAttempts to change the scene object&apos;s unique name to the specified name.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use ChangeUniqueId instead.")]

      void ChangeUniqueName(string newName)
    parameters:
    - id: newName
      type: System.String
    content.vb: >-
      <Obsolete("Use ChangeUniqueId instead.")>

      Sub ChangeUniqueName(newName As String)
  overload: VRBuilder.Core.SceneObjects.ISceneObject.ChangeUniqueName*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ChangeUniqueId instead.
- uid: VRBuilder.Core.SceneObjects.ISceneObject.SetObjectId(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.ISceneObject.SetObjectId(System.Guid)
  id: SetObjectId(System.Guid)
  parent: VRBuilder.Core.SceneObjects.ISceneObject
  langs:
  - csharp
  - vb
  name: SetObjectId(Guid)
  nameWithType: ISceneObject.SetObjectId(Guid)
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.SetObjectId(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ISceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetObjectId
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ISceneObject.cs
    startLine: 102
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nGives the object a new specified unique ID.\n"
  example: []
  syntax:
    content: void SetObjectId(Guid guid)
    parameters:
    - id: guid
      type: System.Guid
    content.vb: Sub SetObjectId(guid As Guid)
  overload: VRBuilder.Core.SceneObjects.ISceneObject.SetObjectId*
references:
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: VRBuilder.Core.SceneObjects.ILockable.Locked
  commentId: E:VRBuilder.Core.SceneObjects.ILockable.Locked
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: Locked
  nameWithType: ILockable.Locked
  fullName: VRBuilder.Core.SceneObjects.ILockable.Locked
- uid: VRBuilder.Core.SceneObjects.ILockable.Unlocked
  commentId: E:VRBuilder.Core.SceneObjects.ILockable.Unlocked
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: Unlocked
  nameWithType: ILockable.Unlocked
  fullName: VRBuilder.Core.SceneObjects.ILockable.Unlocked
- uid: VRBuilder.Core.SceneObjects.ILockable.IsLocked
  commentId: P:VRBuilder.Core.SceneObjects.ILockable.IsLocked
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: IsLocked
  nameWithType: ILockable.IsLocked
  fullName: VRBuilder.Core.SceneObjects.ILockable.IsLocked
- uid: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  commentId: M:VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  parent: VRBuilder.Core.SceneObjects.ILockable
  isExternal: true
  name: SetLocked(Boolean)
  nameWithType: ILockable.SetLocked(Boolean)
  fullName: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
    name: SetLocked
    nameWithType: ILockable.SetLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.SetLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
    name: SetLocked
    nameWithType: ILockable.SetLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.SetLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  commentId: M:VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  parent: VRBuilder.Core.SceneObjects.ILockable
  isExternal: true
  name: RequestLocked(Boolean, IStepData)
  nameWithType: ILockable.RequestLocked(Boolean, IStepData)
  fullName: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean, VRBuilder.Core.IStepData)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
    name: RequestLocked
    nameWithType: ILockable.RequestLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.RequestLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
    name: RequestLocked
    nameWithType: ILockable.RequestLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.RequestLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  commentId: M:VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: RemoveUnlocker(IStepData)
  nameWithType: ILockable.RemoveUnlocker(IStepData)
  fullName: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
    name: RemoveUnlocker
    nameWithType: ILockable.RemoveUnlocker
    fullName: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
    name: RemoveUnlocker
    nameWithType: ILockable.RemoveUnlocker
    fullName: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.IGuidContainer.GuidAdded
  commentId: E:VRBuilder.Core.SceneObjects.IGuidContainer.GuidAdded
  parent: VRBuilder.Core.SceneObjects.IGuidContainer
  name: GuidAdded
  nameWithType: IGuidContainer.GuidAdded
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer.GuidAdded
- uid: VRBuilder.Core.SceneObjects.IGuidContainer.GuidRemoved
  commentId: E:VRBuilder.Core.SceneObjects.IGuidContainer.GuidRemoved
  parent: VRBuilder.Core.SceneObjects.IGuidContainer
  name: GuidRemoved
  nameWithType: IGuidContainer.GuidRemoved
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer.GuidRemoved
- uid: VRBuilder.Core.SceneObjects.IGuidContainer.Guids
  commentId: P:VRBuilder.Core.SceneObjects.IGuidContainer.Guids
  parent: VRBuilder.Core.SceneObjects.IGuidContainer
  name: Guids
  nameWithType: IGuidContainer.Guids
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer.Guids
- uid: VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid(System.Guid)
  parent: VRBuilder.Core.SceneObjects.IGuidContainer
  isExternal: true
  name: HasGuid(Guid)
  nameWithType: IGuidContainer.HasGuid(Guid)
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid(System.Guid)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid(System.Guid)
    name: HasGuid
    nameWithType: IGuidContainer.HasGuid
    fullName: VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid(System.Guid)
    name: HasGuid
    nameWithType: IGuidContainer.HasGuid
    fullName: VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid(System.Guid)
  parent: VRBuilder.Core.SceneObjects.IGuidContainer
  isExternal: true
  name: AddGuid(Guid)
  nameWithType: IGuidContainer.AddGuid(Guid)
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid(System.Guid)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid(System.Guid)
    name: AddGuid
    nameWithType: IGuidContainer.AddGuid
    fullName: VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid(System.Guid)
    name: AddGuid
    nameWithType: IGuidContainer.AddGuid
    fullName: VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid(System.Guid)
  parent: VRBuilder.Core.SceneObjects.IGuidContainer
  isExternal: true
  name: RemoveGuid(Guid)
  nameWithType: IGuidContainer.RemoveGuid(Guid)
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid(System.Guid)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid(System.Guid)
    name: RemoveGuid
    nameWithType: IGuidContainer.RemoveGuid
    fullName: VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid(System.Guid)
    name: RemoveGuid
    nameWithType: IGuidContainer.RemoveGuid
    fullName: VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ISceneObject.VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(System.String)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(VRBuilder.Core.SceneObjects.ISceneObject,System.String)
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  definition: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(VRBuilder.Core.SceneObjects.ISceneObject,System.String)
  name: SetSuitableName(String)
  nameWithType: SceneObjectExtensions.SetSuitableName(String)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(System.String)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(System.String)
    name: SetSuitableName
    nameWithType: SceneObjectExtensions.SetSuitableName
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(System.String)
    name: SetSuitableName
    nameWithType: SceneObjectExtensions.SetSuitableName
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ISceneObject.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1(VRBuilder.Core.SceneObjects.ISceneObject)
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  definition: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1(VRBuilder.Core.SceneObjects.ISceneObject)
  name: AddProcessProperty<T>()
  nameWithType: SceneObjectExtensions.AddProcessProperty<T>()
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty<T>()
  nameWithType.vb: SceneObjectExtensions.AddProcessProperty(Of T)()
  fullName.vb: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(Of T)()
  name.vb: AddProcessProperty(Of T)()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1
    name: AddProcessProperty<T>
    nameWithType: SceneObjectExtensions.AddProcessProperty<T>
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1
    name: AddProcessProperty(Of T)
    nameWithType: SceneObjectExtensions.AddProcessProperty(Of T)
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ISceneObject.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(System.Type)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type)
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  definition: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type)
  name: AddProcessProperty(Type)
  nameWithType: SceneObjectExtensions.AddProcessProperty(Type)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(System.Type)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(System.Type)
    name: AddProcessProperty
    nameWithType: SceneObjectExtensions.AddProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(System.Type)
    name: AddProcessProperty
    nameWithType: SceneObjectExtensions.AddProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ISceneObject.VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  definition: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  name: RemoveProcessProperty(Component, Boolean, IEnumerable<Component>)
  nameWithType: SceneObjectExtensions.RemoveProcessProperty(Component, Boolean, IEnumerable<Component>)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(Component, System.Boolean, System.Collections.Generic.IEnumerable<Component>)
  nameWithType.vb: SceneObjectExtensions.RemoveProcessProperty(Component, Boolean, IEnumerable(Of Component))
  fullName.vb: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(Component, System.Boolean, System.Collections.Generic.IEnumerable(Of Component))
  name.vb: RemoveProcessProperty(Component, Boolean, IEnumerable(Of Component))
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
    name: RemoveProcessProperty
    nameWithType: SceneObjectExtensions.RemoveProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
    name: RemoveProcessProperty
    nameWithType: SceneObjectExtensions.RemoveProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ISceneObject.VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  definition: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  name: RemoveProcessProperty(Type, Boolean, IEnumerable<Component>)
  nameWithType: SceneObjectExtensions.RemoveProcessProperty(Type, Boolean, IEnumerable<Component>)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(System.Type, System.Boolean, System.Collections.Generic.IEnumerable<Component>)
  nameWithType.vb: SceneObjectExtensions.RemoveProcessProperty(Type, Boolean, IEnumerable(Of Component))
  fullName.vb: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(System.Type, System.Boolean, System.Collections.Generic.IEnumerable(Of Component))
  name.vb: RemoveProcessProperty(Type, Boolean, IEnumerable(Of Component))
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
    name: RemoveProcessProperty
    nameWithType: SceneObjectExtensions.RemoveProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
    name: RemoveProcessProperty
    nameWithType: SceneObjectExtensions.RemoveProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ILockable
  commentId: T:VRBuilder.Core.SceneObjects.ILockable
  parent: VRBuilder.Core.SceneObjects
  name: ILockable
  nameWithType: ILockable
  fullName: VRBuilder.Core.SceneObjects.ILockable
- uid: VRBuilder.Core.SceneObjects.IGuidContainer
  commentId: T:VRBuilder.Core.SceneObjects.IGuidContainer
  parent: VRBuilder.Core.SceneObjects
  name: IGuidContainer
  nameWithType: IGuidContainer
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(VRBuilder.Core.SceneObjects.ISceneObject,System.String)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(VRBuilder.Core.SceneObjects.ISceneObject,System.String)
  isExternal: true
  name: SetSuitableName(ISceneObject, String)
  nameWithType: SceneObjectExtensions.SetSuitableName(ISceneObject, String)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(VRBuilder.Core.SceneObjects.ISceneObject, System.String)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(VRBuilder.Core.SceneObjects.ISceneObject,System.String)
    name: SetSuitableName
    nameWithType: SceneObjectExtensions.SetSuitableName
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(VRBuilder.Core.SceneObjects.ISceneObject,System.String)
    name: SetSuitableName
    nameWithType: SceneObjectExtensions.SetSuitableName
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.SceneObjectExtensions
  commentId: T:VRBuilder.Core.Properties.SceneObjectExtensions
  parent: VRBuilder.Core.Properties
  name: SceneObjectExtensions
  nameWithType: SceneObjectExtensions
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1(VRBuilder.Core.SceneObjects.ISceneObject)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1(VRBuilder.Core.SceneObjects.ISceneObject)
  name: AddProcessProperty<T>(ISceneObject)
  nameWithType: SceneObjectExtensions.AddProcessProperty<T>(ISceneObject)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty<T>(VRBuilder.Core.SceneObjects.ISceneObject)
  nameWithType.vb: SceneObjectExtensions.AddProcessProperty(Of T)(ISceneObject)
  fullName.vb: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(Of T)(VRBuilder.Core.SceneObjects.ISceneObject)
  name.vb: AddProcessProperty(Of T)(ISceneObject)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1(VRBuilder.Core.SceneObjects.ISceneObject)
    name: AddProcessProperty<T>
    nameWithType: SceneObjectExtensions.AddProcessProperty<T>
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1(VRBuilder.Core.SceneObjects.ISceneObject)
    name: AddProcessProperty(Of T)
    nameWithType: SceneObjectExtensions.AddProcessProperty(Of T)
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type)
  isExternal: true
  name: AddProcessProperty(ISceneObject, Type)
  nameWithType: SceneObjectExtensions.AddProcessProperty(ISceneObject, Type)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject, System.Type)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type)
    name: AddProcessProperty
    nameWithType: SceneObjectExtensions.AddProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type)
    name: AddProcessProperty
    nameWithType: SceneObjectExtensions.AddProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  isExternal: true
  name: RemoveProcessProperty(ISceneObject, Component, Boolean, IEnumerable<Component>)
  nameWithType: SceneObjectExtensions.RemoveProcessProperty(ISceneObject, Component, Boolean, IEnumerable<Component>)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject, Component, System.Boolean, System.Collections.Generic.IEnumerable<Component>)
  nameWithType.vb: SceneObjectExtensions.RemoveProcessProperty(ISceneObject, Component, Boolean, IEnumerable(Of Component))
  fullName.vb: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject, Component, System.Boolean, System.Collections.Generic.IEnumerable(Of Component))
  name.vb: RemoveProcessProperty(ISceneObject, Component, Boolean, IEnumerable(Of Component))
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
    name: RemoveProcessProperty
    nameWithType: SceneObjectExtensions.RemoveProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
    name: RemoveProcessProperty
    nameWithType: SceneObjectExtensions.RemoveProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  isExternal: true
  name: RemoveProcessProperty(ISceneObject, Type, Boolean, IEnumerable<Component>)
  nameWithType: SceneObjectExtensions.RemoveProcessProperty(ISceneObject, Type, Boolean, IEnumerable<Component>)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject, System.Type, System.Boolean, System.Collections.Generic.IEnumerable<Component>)
  nameWithType.vb: SceneObjectExtensions.RemoveProcessProperty(ISceneObject, Type, Boolean, IEnumerable(Of Component))
  fullName.vb: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject, System.Type, System.Boolean, System.Collections.Generic.IEnumerable(Of Component))
  name.vb: RemoveProcessProperty(ISceneObject, Type, Boolean, IEnumerable(Of Component))
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
    name: RemoveProcessProperty
    nameWithType: SceneObjectExtensions.RemoveProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
    name: RemoveProcessProperty
    nameWithType: SceneObjectExtensions.RemoveProcessProperty
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.SceneObjects.ISceneObject
    name: ISceneObject
    nameWithType: ISceneObject
    fullName: VRBuilder.Core.SceneObjects.ISceneObject
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties
  commentId: N:VRBuilder.Core.Properties
  name: VRBuilder.Core.Properties
  nameWithType: VRBuilder.Core.Properties
  fullName: VRBuilder.Core.Properties
- uid: System.EventHandler{VRBuilder.Core.SceneObjects.SceneObjectNameChanged}
  commentId: T:System.EventHandler{VRBuilder.Core.SceneObjects.SceneObjectNameChanged}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<SceneObjectNameChanged>
  nameWithType: EventHandler<SceneObjectNameChanged>
  fullName: System.EventHandler<VRBuilder.Core.SceneObjects.SceneObjectNameChanged>
  nameWithType.vb: EventHandler(Of SceneObjectNameChanged)
  fullName.vb: System.EventHandler(Of VRBuilder.Core.SceneObjects.SceneObjectNameChanged)
  name.vb: EventHandler(Of SceneObjectNameChanged)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.SceneObjects.SceneObjectNameChanged
    name: SceneObjectNameChanged
    nameWithType: SceneObjectNameChanged
    fullName: VRBuilder.Core.SceneObjects.SceneObjectNameChanged
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.SceneObjects.SceneObjectNameChanged
    name: SceneObjectNameChanged
    nameWithType: SceneObjectNameChanged
    fullName: VRBuilder.Core.SceneObjects.SceneObjectNameChanged
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler{VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs}
  commentId: T:System.EventHandler{VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<UniqueIdChangedEventArgs>
  nameWithType: EventHandler<UniqueIdChangedEventArgs>
  fullName: System.EventHandler<VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs>
  nameWithType.vb: EventHandler(Of UniqueIdChangedEventArgs)
  fullName.vb: System.EventHandler(Of VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs)
  name.vb: EventHandler(Of UniqueIdChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs
    name: UniqueIdChangedEventArgs
    nameWithType: UniqueIdChangedEventArgs
    fullName: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs
    name: UniqueIdChangedEventArgs
    nameWithType: UniqueIdChangedEventArgs
    fullName: VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ISceneObject.Guid*
  commentId: Overload:VRBuilder.Core.SceneObjects.ISceneObject.Guid
  name: Guid
  nameWithType: ISceneObject.Guid
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.Guid
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: VRBuilder.Core.SceneObjects.ISceneObject.UniqueName*
  commentId: Overload:VRBuilder.Core.SceneObjects.ISceneObject.UniqueName
  name: UniqueName
  nameWithType: ISceneObject.UniqueName
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.UniqueName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Core.SceneObjects.ISceneObject.GameObject*
  commentId: Overload:VRBuilder.Core.SceneObjects.ISceneObject.GameObject
  name: GameObject
  nameWithType: ISceneObject.GameObject
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.GameObject
- uid: GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
- uid: VRBuilder.Core.SceneObjects.ISceneObject.Properties*
  commentId: Overload:VRBuilder.Core.SceneObjects.ISceneObject.Properties
  name: Properties
  nameWithType: ISceneObject.Properties
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.Properties
- uid: System.Collections.Generic.ICollection{VRBuilder.Core.Properties.ISceneObjectProperty}
  commentId: T:System.Collections.Generic.ICollection{VRBuilder.Core.Properties.ISceneObjectProperty}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ISceneObjectProperty>
  nameWithType: ICollection<ISceneObjectProperty>
  fullName: System.Collections.Generic.ICollection<VRBuilder.Core.Properties.ISceneObjectProperty>
  nameWithType.vb: ICollection(Of ISceneObjectProperty)
  fullName.vb: System.Collections.Generic.ICollection(Of VRBuilder.Core.Properties.ISceneObjectProperty)
  name.vb: ICollection(Of ISceneObjectProperty)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Properties.ISceneObjectProperty
    name: ISceneObjectProperty
    nameWithType: ISceneObjectProperty
    fullName: VRBuilder.Core.Properties.ISceneObjectProperty
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Properties.ISceneObjectProperty
    name: ISceneObjectProperty
    nameWithType: ISceneObjectProperty
    fullName: VRBuilder.Core.Properties.ISceneObjectProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty*
  commentId: Overload:VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty
  name: CheckHasProperty
  nameWithType: ISceneObject.CheckHasProperty
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.CheckHasProperty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: VRBuilder.Core.SceneObjects.ISceneObject.ValidateProperties*
  commentId: Overload:VRBuilder.Core.SceneObjects.ISceneObject.ValidateProperties
  name: ValidateProperties
  nameWithType: ISceneObject.ValidateProperties
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.ValidateProperties
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ISceneObject.GetProperty*
  commentId: Overload:VRBuilder.Core.SceneObjects.ISceneObject.GetProperty
  name: GetProperty
  nameWithType: ISceneObject.GetProperty
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.GetProperty
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: VRBuilder.Core.SceneObjects.ISceneObject.ChangeUniqueName*
  commentId: Overload:VRBuilder.Core.SceneObjects.ISceneObject.ChangeUniqueName
  name: ChangeUniqueName
  nameWithType: ISceneObject.ChangeUniqueName
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.ChangeUniqueName
- uid: VRBuilder.Core.SceneObjects.ISceneObject.SetObjectId*
  commentId: Overload:VRBuilder.Core.SceneObjects.ISceneObject.SetObjectId
  name: SetObjectId
  nameWithType: ISceneObject.SetObjectId
  fullName: VRBuilder.Core.SceneObjects.ISceneObject.SetObjectId
