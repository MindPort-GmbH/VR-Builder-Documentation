### YamlMime:ManagedReference
items:
- uid: VRBuilder.UX.BaseProcessController
  commentId: T:VRBuilder.UX.BaseProcessController
  id: BaseProcessController
  parent: VRBuilder.UX
  children:
  - VRBuilder.UX.BaseProcessController.GetProcessControllerPrefab
  - VRBuilder.UX.BaseProcessController.GetRequiredSetupComponents
  - VRBuilder.UX.BaseProcessController.HandlePostSetup(UnityEngine.GameObject)
  - VRBuilder.UX.BaseProcessController.Name
  - VRBuilder.UX.BaseProcessController.PrefabName
  - VRBuilder.UX.BaseProcessController.Priority
  langs:
  - csharp
  - vb
  name: BaseProcessController
  nameWithType: BaseProcessController
  fullName: VRBuilder.UX.BaseProcessController
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/Controllers/BaseProcessController.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: BaseProcessController
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/Controllers/BaseProcessController.cs
    startLine: 9
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nBase process controller which instantiates a defined prefab.\n"
  example: []
  syntax:
    content: 'public abstract class BaseProcessController : IProcessController'
    content.vb: >-
      Public MustInherit Class BaseProcessController

          Implements IProcessController
  inheritance:
  - System.Object
  derivedClasses:
  - VRBuilder.Netcode.UX.NetcodeProcessController
  - VRBuilder.UX.SpectatorProcessController
  - VRBuilder.UX.StandardProcessController
  implements:
  - VRBuilder.UX.IProcessController
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VRBuilder.UX.BaseProcessController.Name
  commentId: P:VRBuilder.UX.BaseProcessController.Name
  id: Name
  parent: VRBuilder.UX.BaseProcessController
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: BaseProcessController.Name
  fullName: VRBuilder.UX.BaseProcessController.Name
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/Controllers/BaseProcessController.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Name
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/Controllers/BaseProcessController.cs
    startLine: 12
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  example: []
  syntax:
    content: public abstract string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property Name As String
  overload: VRBuilder.UX.BaseProcessController.Name*
  implements:
  - VRBuilder.UX.IProcessController.Name
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: VRBuilder.UX.BaseProcessController.Priority
  commentId: P:VRBuilder.UX.BaseProcessController.Priority
  id: Priority
  parent: VRBuilder.UX.BaseProcessController
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: BaseProcessController.Priority
  fullName: VRBuilder.UX.BaseProcessController.Priority
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/Controllers/BaseProcessController.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Priority
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/Controllers/BaseProcessController.cs
    startLine: 15
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  example: []
  syntax:
    content: public abstract int Priority { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public MustOverride ReadOnly Property Priority As Integer
  overload: VRBuilder.UX.BaseProcessController.Priority*
  implements:
  - VRBuilder.UX.IProcessController.Priority
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: VRBuilder.UX.BaseProcessController.PrefabName
  commentId: P:VRBuilder.UX.BaseProcessController.PrefabName
  id: PrefabName
  parent: VRBuilder.UX.BaseProcessController
  langs:
  - csharp
  - vb
  name: PrefabName
  nameWithType: BaseProcessController.PrefabName
  fullName: VRBuilder.UX.BaseProcessController.PrefabName
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/Controllers/BaseProcessController.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: PrefabName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/Controllers/BaseProcessController.cs
    startLine: 20
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nName of the process controller prefab.\n"
  example: []
  syntax:
    content: protected abstract string PrefabName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected MustOverride ReadOnly Property PrefabName As String
  overload: VRBuilder.UX.BaseProcessController.PrefabName*
  modifiers.csharp:
  - protected
  - abstract
  - get
  modifiers.vb:
  - Protected
  - MustOverride
  - ReadOnly
- uid: VRBuilder.UX.BaseProcessController.GetProcessControllerPrefab
  commentId: M:VRBuilder.UX.BaseProcessController.GetProcessControllerPrefab
  id: GetProcessControllerPrefab
  parent: VRBuilder.UX.BaseProcessController
  langs:
  - csharp
  - vb
  name: GetProcessControllerPrefab()
  nameWithType: BaseProcessController.GetProcessControllerPrefab()
  fullName: VRBuilder.UX.BaseProcessController.GetProcessControllerPrefab()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/Controllers/BaseProcessController.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetProcessControllerPrefab
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/Controllers/BaseProcessController.cs
    startLine: 23
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  example: []
  syntax:
    content: public virtual GameObject GetProcessControllerPrefab()
    return:
      type: UnityEngine.GameObject
    content.vb: Public Overridable Function GetProcessControllerPrefab As GameObject
  overload: VRBuilder.UX.BaseProcessController.GetProcessControllerPrefab*
  implements:
  - VRBuilder.UX.IProcessController.GetProcessControllerPrefab
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VRBuilder.UX.BaseProcessController.GetRequiredSetupComponents
  commentId: M:VRBuilder.UX.BaseProcessController.GetRequiredSetupComponents
  id: GetRequiredSetupComponents
  parent: VRBuilder.UX.BaseProcessController
  langs:
  - csharp
  - vb
  name: GetRequiredSetupComponents()
  nameWithType: BaseProcessController.GetRequiredSetupComponents()
  fullName: VRBuilder.UX.BaseProcessController.GetRequiredSetupComponents()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/Controllers/BaseProcessController.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetRequiredSetupComponents
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/Controllers/BaseProcessController.cs
    startLine: 35
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  example: []
  syntax:
    content: public virtual List<Type> GetRequiredSetupComponents()
    return:
      type: System.Collections.Generic.List{System.Type}
    content.vb: Public Overridable Function GetRequiredSetupComponents As List(Of Type)
  overload: VRBuilder.UX.BaseProcessController.GetRequiredSetupComponents*
  implements:
  - VRBuilder.UX.IProcessController.GetRequiredSetupComponents
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VRBuilder.UX.BaseProcessController.HandlePostSetup(UnityEngine.GameObject)
  commentId: M:VRBuilder.UX.BaseProcessController.HandlePostSetup(UnityEngine.GameObject)
  id: HandlePostSetup(UnityEngine.GameObject)
  parent: VRBuilder.UX.BaseProcessController
  langs:
  - csharp
  - vb
  name: HandlePostSetup(GameObject)
  nameWithType: BaseProcessController.HandlePostSetup(GameObject)
  fullName: VRBuilder.UX.BaseProcessController.HandlePostSetup(UnityEngine.GameObject)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/Controllers/BaseProcessController.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: HandlePostSetup
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/Controllers/BaseProcessController.cs
    startLine: 41
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  example: []
  syntax:
    content: public virtual void HandlePostSetup(GameObject processControllerObject)
    parameters:
    - id: processControllerObject
      type: UnityEngine.GameObject
    content.vb: Public Overridable Sub HandlePostSetup(processControllerObject As GameObject)
  overload: VRBuilder.UX.BaseProcessController.HandlePostSetup*
  implements:
  - VRBuilder.UX.IProcessController.HandlePostSetup(UnityEngine.GameObject)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: VRBuilder.UX
  commentId: N:VRBuilder.UX
  name: VRBuilder.UX
  nameWithType: VRBuilder.UX
  fullName: VRBuilder.UX
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.UX.IProcessController
  commentId: T:VRBuilder.UX.IProcessController
  parent: VRBuilder.UX
  name: IProcessController
  nameWithType: IProcessController
  fullName: VRBuilder.UX.IProcessController
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.UX.BaseProcessController.Name*
  commentId: Overload:VRBuilder.UX.BaseProcessController.Name
  name: Name
  nameWithType: BaseProcessController.Name
  fullName: VRBuilder.UX.BaseProcessController.Name
- uid: VRBuilder.UX.IProcessController.Name
  commentId: P:VRBuilder.UX.IProcessController.Name
  parent: VRBuilder.UX.IProcessController
  name: Name
  nameWithType: IProcessController.Name
  fullName: VRBuilder.UX.IProcessController.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.UX.BaseProcessController.Priority*
  commentId: Overload:VRBuilder.UX.BaseProcessController.Priority
  name: Priority
  nameWithType: BaseProcessController.Priority
  fullName: VRBuilder.UX.BaseProcessController.Priority
- uid: VRBuilder.UX.IProcessController.Priority
  commentId: P:VRBuilder.UX.IProcessController.Priority
  parent: VRBuilder.UX.IProcessController
  name: Priority
  nameWithType: IProcessController.Priority
  fullName: VRBuilder.UX.IProcessController.Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VRBuilder.UX.BaseProcessController.PrefabName*
  commentId: Overload:VRBuilder.UX.BaseProcessController.PrefabName
  name: PrefabName
  nameWithType: BaseProcessController.PrefabName
  fullName: VRBuilder.UX.BaseProcessController.PrefabName
- uid: VRBuilder.UX.BaseProcessController.GetProcessControllerPrefab*
  commentId: Overload:VRBuilder.UX.BaseProcessController.GetProcessControllerPrefab
  name: GetProcessControllerPrefab
  nameWithType: BaseProcessController.GetProcessControllerPrefab
  fullName: VRBuilder.UX.BaseProcessController.GetProcessControllerPrefab
- uid: VRBuilder.UX.IProcessController.GetProcessControllerPrefab
  commentId: M:VRBuilder.UX.IProcessController.GetProcessControllerPrefab
  parent: VRBuilder.UX.IProcessController
  name: GetProcessControllerPrefab()
  nameWithType: IProcessController.GetProcessControllerPrefab()
  fullName: VRBuilder.UX.IProcessController.GetProcessControllerPrefab()
  spec.csharp:
  - uid: VRBuilder.UX.IProcessController.GetProcessControllerPrefab
    name: GetProcessControllerPrefab
    nameWithType: IProcessController.GetProcessControllerPrefab
    fullName: VRBuilder.UX.IProcessController.GetProcessControllerPrefab
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.UX.IProcessController.GetProcessControllerPrefab
    name: GetProcessControllerPrefab
    nameWithType: IProcessController.GetProcessControllerPrefab
    fullName: VRBuilder.UX.IProcessController.GetProcessControllerPrefab
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: VRBuilder.UX.BaseProcessController.GetRequiredSetupComponents*
  commentId: Overload:VRBuilder.UX.BaseProcessController.GetRequiredSetupComponents
  name: GetRequiredSetupComponents
  nameWithType: BaseProcessController.GetRequiredSetupComponents
  fullName: VRBuilder.UX.BaseProcessController.GetRequiredSetupComponents
- uid: VRBuilder.UX.IProcessController.GetRequiredSetupComponents
  commentId: M:VRBuilder.UX.IProcessController.GetRequiredSetupComponents
  parent: VRBuilder.UX.IProcessController
  name: GetRequiredSetupComponents()
  nameWithType: IProcessController.GetRequiredSetupComponents()
  fullName: VRBuilder.UX.IProcessController.GetRequiredSetupComponents()
  spec.csharp:
  - uid: VRBuilder.UX.IProcessController.GetRequiredSetupComponents
    name: GetRequiredSetupComponents
    nameWithType: IProcessController.GetRequiredSetupComponents
    fullName: VRBuilder.UX.IProcessController.GetRequiredSetupComponents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.UX.IProcessController.GetRequiredSetupComponents
    name: GetRequiredSetupComponents
    nameWithType: IProcessController.GetRequiredSetupComponents
    fullName: VRBuilder.UX.IProcessController.GetRequiredSetupComponents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.Type}
  commentId: T:System.Collections.Generic.List{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Type>
  nameWithType: List<Type>
  fullName: System.Collections.Generic.List<System.Type>
  nameWithType.vb: List(Of Type)
  fullName.vb: System.Collections.Generic.List(Of System.Type)
  name.vb: List(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.UX.BaseProcessController.HandlePostSetup*
  commentId: Overload:VRBuilder.UX.BaseProcessController.HandlePostSetup
  name: HandlePostSetup
  nameWithType: BaseProcessController.HandlePostSetup
  fullName: VRBuilder.UX.BaseProcessController.HandlePostSetup
- uid: VRBuilder.UX.IProcessController.HandlePostSetup(UnityEngine.GameObject)
  commentId: M:VRBuilder.UX.IProcessController.HandlePostSetup(UnityEngine.GameObject)
  parent: VRBuilder.UX.IProcessController
  isExternal: true
  name: HandlePostSetup(GameObject)
  nameWithType: IProcessController.HandlePostSetup(GameObject)
  fullName: VRBuilder.UX.IProcessController.HandlePostSetup(UnityEngine.GameObject)
  spec.csharp:
  - uid: VRBuilder.UX.IProcessController.HandlePostSetup(UnityEngine.GameObject)
    name: HandlePostSetup
    nameWithType: IProcessController.HandlePostSetup
    fullName: VRBuilder.UX.IProcessController.HandlePostSetup
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.UX.IProcessController.HandlePostSetup(UnityEngine.GameObject)
    name: HandlePostSetup
    nameWithType: IProcessController.HandlePostSetup
    fullName: VRBuilder.UX.IProcessController.HandlePostSetup
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
