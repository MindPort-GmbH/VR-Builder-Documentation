### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Properties.UserSceneObject
  commentId: T:VRBuilder.Core.Properties.UserSceneObject
  id: UserSceneObject
  parent: VRBuilder.Core.Properties
  children:
  - VRBuilder.Core.Properties.UserSceneObject.Head
  - VRBuilder.Core.Properties.UserSceneObject.LeftHand
  - VRBuilder.Core.Properties.UserSceneObject.RightHand
  langs:
  - csharp
  - vb
  name: UserSceneObject
  nameWithType: UserSceneObject
  fullName: VRBuilder.Core.Properties.UserSceneObject
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Properties/UserSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: UserSceneObject
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/UserSceneObject.cs
    startLine: 11
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nUsed to identify the user within the scene.\n"
  example: []
  syntax:
    content: 'public class UserSceneObject : MonoBehaviour'
    content.vb: >-
      Public Class UserSceneObject

          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.Properties.UserSceneObject.Head
  commentId: P:VRBuilder.Core.Properties.UserSceneObject.Head
  id: Head
  parent: VRBuilder.Core.Properties.UserSceneObject
  langs:
  - csharp
  - vb
  name: Head
  nameWithType: UserSceneObject.Head
  fullName: VRBuilder.Core.Properties.UserSceneObject.Head
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Properties/UserSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Head
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/UserSceneObject.cs
    startLine: 19
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nReturns the user&apos;s head transform.\n"
  example: []
  syntax:
    content: public Transform Head { get; }
    parameters: []
    return:
      type: Transform
    content.vb: Public ReadOnly Property Head As Transform
  overload: VRBuilder.Core.Properties.UserSceneObject.Head*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.Properties.UserSceneObject.LeftHand
  commentId: P:VRBuilder.Core.Properties.UserSceneObject.LeftHand
  id: LeftHand
  parent: VRBuilder.Core.Properties.UserSceneObject
  langs:
  - csharp
  - vb
  name: LeftHand
  nameWithType: UserSceneObject.LeftHand
  fullName: VRBuilder.Core.Properties.UserSceneObject.LeftHand
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Properties/UserSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LeftHand
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/UserSceneObject.cs
    startLine: 36
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nReturns the user&apos;s left hand transform.\n"
  example: []
  syntax:
    content: public Transform LeftHand { get; }
    parameters: []
    return:
      type: Transform
    content.vb: Public ReadOnly Property LeftHand As Transform
  overload: VRBuilder.Core.Properties.UserSceneObject.LeftHand*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.Properties.UserSceneObject.RightHand
  commentId: P:VRBuilder.Core.Properties.UserSceneObject.RightHand
  id: RightHand
  parent: VRBuilder.Core.Properties.UserSceneObject
  langs:
  - csharp
  - vb
  name: RightHand
  nameWithType: UserSceneObject.RightHand
  fullName: VRBuilder.Core.Properties.UserSceneObject.RightHand
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Properties/UserSceneObject.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RightHand
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/UserSceneObject.cs
    startLine: 41
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nReturns the user&apos;s right hand transform.\n"
  example: []
  syntax:
    content: public Transform RightHand { get; }
    parameters: []
    return:
      type: Transform
    content.vb: Public ReadOnly Property RightHand As Transform
  overload: VRBuilder.Core.Properties.UserSceneObject.RightHand*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: VRBuilder.Core.Properties
  commentId: N:VRBuilder.Core.Properties
  name: VRBuilder.Core.Properties
  nameWithType: VRBuilder.Core.Properties
  fullName: VRBuilder.Core.Properties
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Properties.UserSceneObject.Head*
  commentId: Overload:VRBuilder.Core.Properties.UserSceneObject.Head
  name: Head
  nameWithType: UserSceneObject.Head
  fullName: VRBuilder.Core.Properties.UserSceneObject.Head
- uid: Transform
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: Transform
- uid: VRBuilder.Core.Properties.UserSceneObject.LeftHand*
  commentId: Overload:VRBuilder.Core.Properties.UserSceneObject.LeftHand
  name: LeftHand
  nameWithType: UserSceneObject.LeftHand
  fullName: VRBuilder.Core.Properties.UserSceneObject.LeftHand
- uid: VRBuilder.Core.Properties.UserSceneObject.RightHand*
  commentId: Overload:VRBuilder.Core.Properties.UserSceneObject.RightHand
  name: RightHand
  nameWithType: UserSceneObject.RightHand
  fullName: VRBuilder.Core.Properties.UserSceneObject.RightHand
