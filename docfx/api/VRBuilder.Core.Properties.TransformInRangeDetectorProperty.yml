### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Properties.TransformInRangeDetectorProperty
  commentId: T:VRBuilder.Core.Properties.TransformInRangeDetectorProperty
  id: TransformInRangeDetectorProperty
  parent: VRBuilder.Core.Properties
  children:
  - VRBuilder.Core.Properties.TransformInRangeDetectorProperty.DestroySelf
  - VRBuilder.Core.Properties.TransformInRangeDetectorProperty.DetectionRange
  - VRBuilder.Core.Properties.TransformInRangeDetectorProperty.EmitEnteredArea
  - VRBuilder.Core.Properties.TransformInRangeDetectorProperty.EmitExitedArea
  - VRBuilder.Core.Properties.TransformInRangeDetectorProperty.EnteredRange
  - VRBuilder.Core.Properties.TransformInRangeDetectorProperty.ExitedRange
  - VRBuilder.Core.Properties.TransformInRangeDetectorProperty.IsTargetInsideRange
  - VRBuilder.Core.Properties.TransformInRangeDetectorProperty.Refresh
  - VRBuilder.Core.Properties.TransformInRangeDetectorProperty.SetTrackedTransform(Transform)
  langs:
  - csharp
  - vb
  name: TransformInRangeDetectorProperty
  nameWithType: TransformInRangeDetectorProperty
  fullName: VRBuilder.Core.Properties.TransformInRangeDetectorProperty
  type: Class
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/TransformInRangeDetectorProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: TransformInRangeDetectorProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/TransformInRangeDetectorProperty.cs
    startLine: 5
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  syntax:
    content: 'public class TransformInRangeDetectorProperty : ProcessSceneObjectProperty, ISceneObjectProperty'
    content.vb: >-
      Public Class TransformInRangeDetectorProperty
          Inherits ProcessSceneObjectProperty
          Implements ISceneObjectProperty
  inheritance:
  - System.Object
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty
  implements:
  - VRBuilder.Core.Properties.ISceneObjectProperty
  inheritedMembers:
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  extensionMethods:
  - VRBuilder.Core.Properties.ISceneObjectProperty.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.DetectionRange
  commentId: P:VRBuilder.Core.Properties.TransformInRangeDetectorProperty.DetectionRange
  id: DetectionRange
  parent: VRBuilder.Core.Properties.TransformInRangeDetectorProperty
  langs:
  - csharp
  - vb
  name: DetectionRange
  nameWithType: TransformInRangeDetectorProperty.DetectionRange
  fullName: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.DetectionRange
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/TransformInRangeDetectorProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DetectionRange
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/TransformInRangeDetectorProperty.cs
    startLine: 10
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  syntax:
    content: public float DetectionRange { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property DetectionRange As Single
  overload: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.DetectionRange*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.EnteredRange
  commentId: E:VRBuilder.Core.Properties.TransformInRangeDetectorProperty.EnteredRange
  id: EnteredRange
  parent: VRBuilder.Core.Properties.TransformInRangeDetectorProperty
  langs:
  - csharp
  - vb
  name: EnteredRange
  nameWithType: TransformInRangeDetectorProperty.EnteredRange
  fullName: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.EnteredRange
  type: Event
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/TransformInRangeDetectorProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EnteredRange
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/TransformInRangeDetectorProperty.cs
    startLine: 21
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  syntax:
    content: public event EventHandler<TransformInRangeDetectorProperty.RangeEventArgs> EnteredRange
    return:
      type: System.EventHandler{VRBuilder.Core.Properties.TransformInRangeDetectorProperty.RangeEventArgs}
    content.vb: Public Event EnteredRange As EventHandler(Of TransformInRangeDetectorProperty.RangeEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.ExitedRange
  commentId: E:VRBuilder.Core.Properties.TransformInRangeDetectorProperty.ExitedRange
  id: ExitedRange
  parent: VRBuilder.Core.Properties.TransformInRangeDetectorProperty
  langs:
  - csharp
  - vb
  name: ExitedRange
  nameWithType: TransformInRangeDetectorProperty.ExitedRange
  fullName: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.ExitedRange
  type: Event
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/TransformInRangeDetectorProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ExitedRange
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/TransformInRangeDetectorProperty.cs
    startLine: 22
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  syntax:
    content: public event EventHandler<TransformInRangeDetectorProperty.RangeEventArgs> ExitedRange
    return:
      type: System.EventHandler{VRBuilder.Core.Properties.TransformInRangeDetectorProperty.RangeEventArgs}
    content.vb: Public Event ExitedRange As EventHandler(Of TransformInRangeDetectorProperty.RangeEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.Refresh
  commentId: M:VRBuilder.Core.Properties.TransformInRangeDetectorProperty.Refresh
  id: Refresh
  parent: VRBuilder.Core.Properties.TransformInRangeDetectorProperty
  langs:
  - csharp
  - vb
  name: Refresh()
  nameWithType: TransformInRangeDetectorProperty.Refresh()
  fullName: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.Refresh()
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/TransformInRangeDetectorProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Refresh
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/TransformInRangeDetectorProperty.cs
    startLine: 32
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nCheck if there are transforms in range and fire the appropriate events.\n"
  example: []
  syntax:
    content: public void Refresh()
    content.vb: Public Sub Refresh
  overload: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.Refresh*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.IsTargetInsideRange
  commentId: M:VRBuilder.Core.Properties.TransformInRangeDetectorProperty.IsTargetInsideRange
  id: IsTargetInsideRange
  parent: VRBuilder.Core.Properties.TransformInRangeDetectorProperty
  langs:
  - csharp
  - vb
  name: IsTargetInsideRange()
  nameWithType: TransformInRangeDetectorProperty.IsTargetInsideRange()
  fullName: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.IsTargetInsideRange()
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/TransformInRangeDetectorProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsTargetInsideRange
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/TransformInRangeDetectorProperty.cs
    startLine: 53
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  syntax:
    content: public virtual bool IsTargetInsideRange()
    return:
      type: System.Boolean
    content.vb: Public Overridable Function IsTargetInsideRange As Boolean
  overload: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.IsTargetInsideRange*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.SetTrackedTransform(Transform)
  commentId: M:VRBuilder.Core.Properties.TransformInRangeDetectorProperty.SetTrackedTransform(Transform)
  id: SetTrackedTransform(Transform)
  parent: VRBuilder.Core.Properties.TransformInRangeDetectorProperty
  langs:
  - csharp
  - vb
  name: SetTrackedTransform(Transform)
  nameWithType: TransformInRangeDetectorProperty.SetTrackedTransform(Transform)
  fullName: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.SetTrackedTransform(Transform)
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/TransformInRangeDetectorProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetTrackedTransform
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/TransformInRangeDetectorProperty.cs
    startLine: 58
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  syntax:
    content: public void SetTrackedTransform(Transform transformToBeTracked)
    parameters:
    - id: transformToBeTracked
      type: Transform
    content.vb: Public Sub SetTrackedTransform(transformToBeTracked As Transform)
  overload: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.SetTrackedTransform*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.DestroySelf
  commentId: M:VRBuilder.Core.Properties.TransformInRangeDetectorProperty.DestroySelf
  id: DestroySelf
  parent: VRBuilder.Core.Properties.TransformInRangeDetectorProperty
  langs:
  - csharp
  - vb
  name: DestroySelf()
  nameWithType: TransformInRangeDetectorProperty.DestroySelf()
  fullName: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.DestroySelf()
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/TransformInRangeDetectorProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DestroySelf
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/TransformInRangeDetectorProperty.cs
    startLine: 63
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  syntax:
    content: public void DestroySelf()
    content.vb: Public Sub DestroySelf
  overload: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.DestroySelf*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.EmitEnteredArea
  commentId: M:VRBuilder.Core.Properties.TransformInRangeDetectorProperty.EmitEnteredArea
  id: EmitEnteredArea
  parent: VRBuilder.Core.Properties.TransformInRangeDetectorProperty
  langs:
  - csharp
  - vb
  name: EmitEnteredArea()
  nameWithType: TransformInRangeDetectorProperty.EmitEnteredArea()
  fullName: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.EmitEnteredArea()
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/TransformInRangeDetectorProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EmitEnteredArea
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/TransformInRangeDetectorProperty.cs
    startLine: 68
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  syntax:
    content: protected void EmitEnteredArea()
    content.vb: Protected Sub EmitEnteredArea
  overload: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.EmitEnteredArea*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.EmitExitedArea
  commentId: M:VRBuilder.Core.Properties.TransformInRangeDetectorProperty.EmitExitedArea
  id: EmitExitedArea
  parent: VRBuilder.Core.Properties.TransformInRangeDetectorProperty
  langs:
  - csharp
  - vb
  name: EmitExitedArea()
  nameWithType: TransformInRangeDetectorProperty.EmitExitedArea()
  fullName: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.EmitExitedArea()
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/TransformInRangeDetectorProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EmitExitedArea
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/TransformInRangeDetectorProperty.cs
    startLine: 76
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  syntax:
    content: protected void EmitExitedArea()
    content.vb: Protected Sub EmitExitedArea
  overload: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.EmitExitedArea*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: VRBuilder.Core.Properties
  commentId: N:VRBuilder.Core.Properties
  name: VRBuilder.Core.Properties
  nameWithType: VRBuilder.Core.Properties
  fullName: VRBuilder.Core.Properties
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ProcessSceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ProcessSceneObjectProperty
  nameWithType: ProcessSceneObjectProperty
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty
- uid: VRBuilder.Core.Properties.ISceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ISceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ISceneObjectProperty
  nameWithType: ISceneObjectProperty
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  commentId: P:VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: SceneObject
  nameWithType: ProcessSceneObjectProperty.SceneObject
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  commentId: M:VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: OnEnable()
  nameWithType: ProcessSceneObjectProperty.OnEnable()
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
    name: OnEnable
    nameWithType: ProcessSceneObjectProperty.OnEnable
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
    name: OnEnable
    nameWithType: ProcessSceneObjectProperty.OnEnable
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  commentId: M:VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: Reset()
  nameWithType: ProcessSceneObjectProperty.Reset()
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
    name: Reset
    nameWithType: ProcessSceneObjectProperty.Reset
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
    name: Reset
    nameWithType: ProcessSceneObjectProperty.Reset
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  commentId: M:VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: ToString()
  nameWithType: ProcessSceneObjectProperty.ToString()
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
    name: ToString
    nameWithType: ProcessSceneObjectProperty.ToString
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
    name: ToString
    nameWithType: ProcessSceneObjectProperty.ToString
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ISceneObjectProperty.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  definition: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  name: AddProcessPropertyExtensions()
  nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions()
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  name: AddProcessPropertyExtensions(ISceneObjectProperty)
  nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Properties.ISceneObjectProperty
    name: ISceneObjectProperty
    nameWithType: ISceneObjectProperty
    fullName: VRBuilder.Core.Properties.ISceneObjectProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Properties.ISceneObjectProperty
    name: ISceneObjectProperty
    nameWithType: ISceneObjectProperty
    fullName: VRBuilder.Core.Properties.ISceneObjectProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.SceneObjectExtensions
  commentId: T:VRBuilder.Core.Properties.SceneObjectExtensions
  parent: VRBuilder.Core.Properties
  name: SceneObjectExtensions
  nameWithType: SceneObjectExtensions
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions
- uid: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.DetectionRange*
  commentId: Overload:VRBuilder.Core.Properties.TransformInRangeDetectorProperty.DetectionRange
  name: DetectionRange
  nameWithType: TransformInRangeDetectorProperty.DetectionRange
  fullName: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.DetectionRange
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.EventHandler{VRBuilder.Core.Properties.TransformInRangeDetectorProperty.RangeEventArgs}
  commentId: T:System.EventHandler{VRBuilder.Core.Properties.TransformInRangeDetectorProperty.RangeEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<TransformInRangeDetectorProperty.RangeEventArgs>
  nameWithType: EventHandler<TransformInRangeDetectorProperty.RangeEventArgs>
  fullName: System.EventHandler<VRBuilder.Core.Properties.TransformInRangeDetectorProperty.RangeEventArgs>
  nameWithType.vb: EventHandler(Of TransformInRangeDetectorProperty.RangeEventArgs)
  fullName.vb: System.EventHandler(Of VRBuilder.Core.Properties.TransformInRangeDetectorProperty.RangeEventArgs)
  name.vb: EventHandler(Of TransformInRangeDetectorProperty.RangeEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.RangeEventArgs
    name: TransformInRangeDetectorProperty.RangeEventArgs
    nameWithType: TransformInRangeDetectorProperty.RangeEventArgs
    fullName: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.RangeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.RangeEventArgs
    name: TransformInRangeDetectorProperty.RangeEventArgs
    nameWithType: TransformInRangeDetectorProperty.RangeEventArgs
    fullName: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.RangeEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.Refresh*
  commentId: Overload:VRBuilder.Core.Properties.TransformInRangeDetectorProperty.Refresh
  name: Refresh
  nameWithType: TransformInRangeDetectorProperty.Refresh
  fullName: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.Refresh
- uid: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.IsTargetInsideRange*
  commentId: Overload:VRBuilder.Core.Properties.TransformInRangeDetectorProperty.IsTargetInsideRange
  name: IsTargetInsideRange
  nameWithType: TransformInRangeDetectorProperty.IsTargetInsideRange
  fullName: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.IsTargetInsideRange
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.SetTrackedTransform*
  commentId: Overload:VRBuilder.Core.Properties.TransformInRangeDetectorProperty.SetTrackedTransform
  name: SetTrackedTransform
  nameWithType: TransformInRangeDetectorProperty.SetTrackedTransform
  fullName: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.SetTrackedTransform
- uid: Transform
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: Transform
- uid: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.DestroySelf*
  commentId: Overload:VRBuilder.Core.Properties.TransformInRangeDetectorProperty.DestroySelf
  name: DestroySelf
  nameWithType: TransformInRangeDetectorProperty.DestroySelf
  fullName: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.DestroySelf
- uid: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.EmitEnteredArea*
  commentId: Overload:VRBuilder.Core.Properties.TransformInRangeDetectorProperty.EmitEnteredArea
  name: EmitEnteredArea
  nameWithType: TransformInRangeDetectorProperty.EmitEnteredArea
  fullName: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.EmitEnteredArea
- uid: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.EmitExitedArea*
  commentId: Overload:VRBuilder.Core.Properties.TransformInRangeDetectorProperty.EmitExitedArea
  name: EmitExitedArea
  nameWithType: TransformInRangeDetectorProperty.EmitExitedArea
  fullName: VRBuilder.Core.Properties.TransformInRangeDetectorProperty.EmitExitedArea
