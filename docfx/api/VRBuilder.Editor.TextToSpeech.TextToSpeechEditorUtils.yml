### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils
  commentId: T:VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils
  id: TextToSpeechEditorUtils
  parent: VRBuilder.Editor.TextToSpeech
  children:
  - VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.CacheAudioClip(System.String,UnityEngine.Localization.Locale,VRBuilder.TextToSpeech.TextToSpeechConfiguration)
  - VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.CacheTextToSpeechClips(System.Collections.Generic.IEnumerable{VRBuilder.TextToSpeech.Audio.ITextToSpeechContent},UnityEngine.Localization.Locale,System.String)
  - VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcesses
  - VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcesses(UnityEngine.Localization.Locale)
  - VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcessesAndActiveOrDefaultLocale
  langs:
  - csharp
  - vb
  name: TextToSpeechEditorUtils
  nameWithType: TextToSpeechEditorUtils
  fullName: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils
  type: Class
  source:
    remote:
      path: Source/TextToSpeech-Component/Editor/TextToSpeechEditorUtils.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: TextToSpeechEditorUtils
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Editor/TextToSpeechEditorUtils.cs
    startLine: 17
  assemblies:
  - VRBuilder.Editor.TextToSpeech
  namespace: VRBuilder.Editor.TextToSpeech
  syntax:
    content: public static class TextToSpeechEditorUtils
    content.vb: Public Module TextToSpeechEditorUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.CacheAudioClip(System.String,UnityEngine.Localization.Locale,VRBuilder.TextToSpeech.TextToSpeechConfiguration)
  commentId: M:VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.CacheAudioClip(System.String,UnityEngine.Localization.Locale,VRBuilder.TextToSpeech.TextToSpeechConfiguration)
  id: CacheAudioClip(System.String,UnityEngine.Localization.Locale,VRBuilder.TextToSpeech.TextToSpeechConfiguration)
  parent: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils
  langs:
  - csharp
  - vb
  name: CacheAudioClip(String, Locale, TextToSpeechConfiguration)
  nameWithType: TextToSpeechEditorUtils.CacheAudioClip(String, Locale, TextToSpeechConfiguration)
  fullName: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.CacheAudioClip(System.String, UnityEngine.Localization.Locale, VRBuilder.TextToSpeech.TextToSpeechConfiguration)
  type: Method
  source:
    remote:
      path: Source/TextToSpeech-Component/Editor/TextToSpeechEditorUtils.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CacheAudioClip
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Editor/TextToSpeechEditorUtils.cs
    startLine: 22
  assemblies:
  - VRBuilder.Editor.TextToSpeech
  namespace: VRBuilder.Editor.TextToSpeech
  summary: "\nGenerates TTS audio and creates a file.\n"
  example: []
  syntax:
    content: public static async Task CacheAudioClip(string text, Locale locale, TextToSpeechConfiguration configuration)
    parameters:
    - id: text
      type: System.String
    - id: locale
      type: UnityEngine.Localization.Locale
    - id: configuration
      type: VRBuilder.TextToSpeech.TextToSpeechConfiguration
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function CacheAudioClip(text As String, locale As Locale, configuration As TextToSpeechConfiguration) As Task
  overload: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.CacheAudioClip*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.CacheTextToSpeechClips(System.Collections.Generic.IEnumerable{VRBuilder.TextToSpeech.Audio.ITextToSpeechContent},UnityEngine.Localization.Locale,System.String)
  commentId: M:VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.CacheTextToSpeechClips(System.Collections.Generic.IEnumerable{VRBuilder.TextToSpeech.Audio.ITextToSpeechContent},UnityEngine.Localization.Locale,System.String)
  id: CacheTextToSpeechClips(System.Collections.Generic.IEnumerable{VRBuilder.TextToSpeech.Audio.ITextToSpeechContent},UnityEngine.Localization.Locale,System.String)
  parent: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils
  langs:
  - csharp
  - vb
  name: CacheTextToSpeechClips(IEnumerable<ITextToSpeechContent>, Locale, String)
  nameWithType: TextToSpeechEditorUtils.CacheTextToSpeechClips(IEnumerable<ITextToSpeechContent>, Locale, String)
  fullName: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.CacheTextToSpeechClips(System.Collections.Generic.IEnumerable<VRBuilder.TextToSpeech.Audio.ITextToSpeechContent>, UnityEngine.Localization.Locale, System.String)
  type: Method
  source:
    remote:
      path: Source/TextToSpeech-Component/Editor/TextToSpeechEditorUtils.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CacheTextToSpeechClips
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Editor/TextToSpeechEditorUtils.cs
    startLine: 63
  assemblies:
  - VRBuilder.Editor.TextToSpeech
  namespace: VRBuilder.Editor.TextToSpeech
  summary: "\nGenerates files for all <xref href=\"VRBuilder.TextToSpeech.Audio.TextToSpeechAudio\" data-throw-if-not-resolved=\"false\"></xref> passed.\n"
  example: []
  syntax:
    content: public static async Task<int> CacheTextToSpeechClips(IEnumerable<ITextToSpeechContent> clips, Locale locale, string localizationTable)
    parameters:
    - id: clips
      type: System.Collections.Generic.IEnumerable{VRBuilder.TextToSpeech.Audio.ITextToSpeechContent}
    - id: locale
      type: UnityEngine.Localization.Locale
    - id: localizationTable
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Shared Function CacheTextToSpeechClips(clips As IEnumerable(Of ITextToSpeechContent), locale As Locale, localizationTable As String) As Task(Of Integer)
  overload: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.CacheTextToSpeechClips*
  nameWithType.vb: TextToSpeechEditorUtils.CacheTextToSpeechClips(IEnumerable(Of ITextToSpeechContent), Locale, String)
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.CacheTextToSpeechClips(System.Collections.Generic.IEnumerable(Of VRBuilder.TextToSpeech.Audio.ITextToSpeechContent), UnityEngine.Localization.Locale, System.String)
  name.vb: CacheTextToSpeechClips(IEnumerable(Of ITextToSpeechContent), Locale, String)
- uid: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcesses(UnityEngine.Localization.Locale)
  commentId: M:VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcesses(UnityEngine.Localization.Locale)
  id: GenerateTextToSpeechForAllProcesses(UnityEngine.Localization.Locale)
  parent: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils
  langs:
  - csharp
  - vb
  name: GenerateTextToSpeechForAllProcesses(Locale)
  nameWithType: TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcesses(Locale)
  fullName: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcesses(UnityEngine.Localization.Locale)
  type: Method
  source:
    remote:
      path: Source/TextToSpeech-Component/Editor/TextToSpeechEditorUtils.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GenerateTextToSpeechForAllProcesses
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Editor/TextToSpeechEditorUtils.cs
    startLine: 94
  assemblies:
  - VRBuilder.Editor.TextToSpeech
  namespace: VRBuilder.Editor.TextToSpeech
  summary: "\nGenerates TTS audio files for all available processes for the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">locale</code>.\n"
  example: []
  syntax:
    content: public static async Task GenerateTextToSpeechForAllProcesses(Locale locale)
    parameters:
    - id: locale
      type: UnityEngine.Localization.Locale
      description: The locale for which audio files should be generated.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function GenerateTextToSpeechForAllProcesses(locale As Locale) As Task
  overload: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcesses*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcessesAndActiveOrDefaultLocale
  commentId: M:VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcessesAndActiveOrDefaultLocale
  id: GenerateTextToSpeechForAllProcessesAndActiveOrDefaultLocale
  parent: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils
  langs:
  - csharp
  - vb
  name: GenerateTextToSpeechForAllProcessesAndActiveOrDefaultLocale()
  nameWithType: TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcessesAndActiveOrDefaultLocale()
  fullName: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcessesAndActiveOrDefaultLocale()
  type: Method
  source:
    remote:
      path: Source/TextToSpeech-Component/Editor/TextToSpeechEditorUtils.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GenerateTextToSpeechForAllProcessesAndActiveOrDefaultLocale
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Editor/TextToSpeechEditorUtils.cs
    startLine: 128
  assemblies:
  - VRBuilder.Editor.TextToSpeech
  namespace: VRBuilder.Editor.TextToSpeech
  summary: "\nGenerates TTS audio files for the the active or default locale for all processes.\n"
  example: []
  syntax:
    content: public static async void GenerateTextToSpeechForAllProcessesAndActiveOrDefaultLocale()
    content.vb: Public Shared Sub GenerateTextToSpeechForAllProcessesAndActiveOrDefaultLocale
  overload: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcessesAndActiveOrDefaultLocale*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcesses
  commentId: M:VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcesses
  id: GenerateTextToSpeechForAllProcesses
  parent: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils
  langs:
  - csharp
  - vb
  name: GenerateTextToSpeechForAllProcesses()
  nameWithType: TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcesses()
  fullName: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcesses()
  type: Method
  source:
    remote:
      path: Source/TextToSpeech-Component/Editor/TextToSpeechEditorUtils.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GenerateTextToSpeechForAllProcesses
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Editor/TextToSpeechEditorUtils.cs
    startLine: 137
  assemblies:
  - VRBuilder.Editor.TextToSpeech
  namespace: VRBuilder.Editor.TextToSpeech
  summary: "\nGenerates TTS audio files for all project locales for all processes.\n"
  example: []
  syntax:
    content: public static async void GenerateTextToSpeechForAllProcesses()
    content.vb: Public Shared Sub GenerateTextToSpeechForAllProcesses
  overload: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcesses*
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VRBuilder.Editor.TextToSpeech
  commentId: N:VRBuilder.Editor.TextToSpeech
  name: VRBuilder.Editor.TextToSpeech
  nameWithType: VRBuilder.Editor.TextToSpeech
  fullName: VRBuilder.Editor.TextToSpeech
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.CacheAudioClip*
  commentId: Overload:VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.CacheAudioClip
  name: CacheAudioClip
  nameWithType: TextToSpeechEditorUtils.CacheAudioClip
  fullName: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.CacheAudioClip
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: UnityEngine.Localization.Locale
  commentId: T:UnityEngine.Localization.Locale
  parent: UnityEngine.Localization
  name: Locale
  nameWithType: Locale
  fullName: UnityEngine.Localization.Locale
- uid: VRBuilder.TextToSpeech.TextToSpeechConfiguration
  commentId: T:VRBuilder.TextToSpeech.TextToSpeechConfiguration
  parent: VRBuilder.TextToSpeech
  name: TextToSpeechConfiguration
  nameWithType: TextToSpeechConfiguration
  fullName: VRBuilder.TextToSpeech.TextToSpeechConfiguration
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: UnityEngine.Localization
  commentId: N:UnityEngine.Localization
  name: UnityEngine.Localization
  nameWithType: UnityEngine.Localization
  fullName: UnityEngine.Localization
- uid: VRBuilder.TextToSpeech
  commentId: N:VRBuilder.TextToSpeech
  name: VRBuilder.TextToSpeech
  nameWithType: VRBuilder.TextToSpeech
  fullName: VRBuilder.TextToSpeech
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio
  commentId: T:VRBuilder.TextToSpeech.Audio.TextToSpeechAudio
  name: TextToSpeechAudio
  nameWithType: TextToSpeechAudio
  fullName: VRBuilder.TextToSpeech.Audio.TextToSpeechAudio
- uid: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.CacheTextToSpeechClips*
  commentId: Overload:VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.CacheTextToSpeechClips
  name: CacheTextToSpeechClips
  nameWithType: TextToSpeechEditorUtils.CacheTextToSpeechClips
  fullName: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.CacheTextToSpeechClips
- uid: System.Collections.Generic.IEnumerable{VRBuilder.TextToSpeech.Audio.ITextToSpeechContent}
  commentId: T:System.Collections.Generic.IEnumerable{VRBuilder.TextToSpeech.Audio.ITextToSpeechContent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ITextToSpeechContent>
  nameWithType: IEnumerable<ITextToSpeechContent>
  fullName: System.Collections.Generic.IEnumerable<VRBuilder.TextToSpeech.Audio.ITextToSpeechContent>
  nameWithType.vb: IEnumerable(Of ITextToSpeechContent)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VRBuilder.TextToSpeech.Audio.ITextToSpeechContent)
  name.vb: IEnumerable(Of ITextToSpeechContent)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.TextToSpeech.Audio.ITextToSpeechContent
    name: ITextToSpeechContent
    nameWithType: ITextToSpeechContent
    fullName: VRBuilder.TextToSpeech.Audio.ITextToSpeechContent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.TextToSpeech.Audio.ITextToSpeechContent
    name: ITextToSpeechContent
    nameWithType: ITextToSpeechContent
    fullName: VRBuilder.TextToSpeech.Audio.ITextToSpeechContent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcesses*
  commentId: Overload:VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcesses
  name: GenerateTextToSpeechForAllProcesses
  nameWithType: TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcesses
  fullName: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcesses
- uid: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcessesAndActiveOrDefaultLocale*
  commentId: Overload:VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcessesAndActiveOrDefaultLocale
  name: GenerateTextToSpeechForAllProcessesAndActiveOrDefaultLocale
  nameWithType: TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcessesAndActiveOrDefaultLocale
  fullName: VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.GenerateTextToSpeechForAllProcessesAndActiveOrDefaultLocale
