### YamlMime:ManagedReference
items:
- uid: VRBuilder.TextToSpeech.FileTextToSpeechProvider
  commentId: T:VRBuilder.TextToSpeech.FileTextToSpeechProvider
  id: FileTextToSpeechProvider
  parent: VRBuilder.TextToSpeech
  children:
  - VRBuilder.TextToSpeech.FileTextToSpeechProvider.#ctor(VRBuilder.TextToSpeech.TextToSpeechConfiguration)
  - VRBuilder.TextToSpeech.FileTextToSpeechProvider.Configuration
  - VRBuilder.TextToSpeech.FileTextToSpeechProvider.ConvertTextToSpeech(System.String,UnityEngine.Localization.Locale)
  - VRBuilder.TextToSpeech.FileTextToSpeechProvider.GetCachedFile(System.String)
  - VRBuilder.TextToSpeech.FileTextToSpeechProvider.GetPathToFile(System.String)
  - VRBuilder.TextToSpeech.FileTextToSpeechProvider.IsFileCached(System.String)
  - VRBuilder.TextToSpeech.FileTextToSpeechProvider.SetConfig(VRBuilder.TextToSpeech.TextToSpeechConfiguration)
  langs:
  - csharp
  - vb
  name: FileTextToSpeechProvider
  nameWithType: FileTextToSpeechProvider
  fullName: VRBuilder.TextToSpeech.FileTextToSpeechProvider
  type: Class
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/Provider/FileTextToSpeechProvider.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: FileTextToSpeechProvider
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/Provider/FileTextToSpeechProvider.cs
    startLine: 15
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech
  summary: "\nThe disk based provider for text to speech, which is using the streaming assets folder.\nOn the first step we check if the application has files provided on delivery.\nIf there is no compatible file found, will download the file from the given\nfallback TextToSpeechProvider.\n"
  example: []
  syntax:
    content: 'public class FileTextToSpeechProvider : ITextToSpeechProvider'
    content.vb: >-
      Public Class FileTextToSpeechProvider

          Implements ITextToSpeechProvider
  inheritance:
  - System.Object
  implements:
  - VRBuilder.TextToSpeech.ITextToSpeechProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.TextToSpeech.FileTextToSpeechProvider.Configuration
  commentId: F:VRBuilder.TextToSpeech.FileTextToSpeechProvider.Configuration
  id: Configuration
  parent: VRBuilder.TextToSpeech.FileTextToSpeechProvider
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: FileTextToSpeechProvider.Configuration
  fullName: VRBuilder.TextToSpeech.FileTextToSpeechProvider.Configuration
  type: Field
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/Provider/FileTextToSpeechProvider.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Configuration
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/Provider/FileTextToSpeechProvider.cs
    startLine: 17
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech
  syntax:
    content: protected TextToSpeechConfiguration Configuration
    return:
      type: VRBuilder.TextToSpeech.TextToSpeechConfiguration
    content.vb: Protected Configuration As TextToSpeechConfiguration
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.TextToSpeech.FileTextToSpeechProvider.#ctor(VRBuilder.TextToSpeech.TextToSpeechConfiguration)
  commentId: M:VRBuilder.TextToSpeech.FileTextToSpeechProvider.#ctor(VRBuilder.TextToSpeech.TextToSpeechConfiguration)
  id: '#ctor(VRBuilder.TextToSpeech.TextToSpeechConfiguration)'
  parent: VRBuilder.TextToSpeech.FileTextToSpeechProvider
  langs:
  - csharp
  - vb
  name: FileTextToSpeechProvider(TextToSpeechConfiguration)
  nameWithType: FileTextToSpeechProvider.FileTextToSpeechProvider(TextToSpeechConfiguration)
  fullName: VRBuilder.TextToSpeech.FileTextToSpeechProvider.FileTextToSpeechProvider(VRBuilder.TextToSpeech.TextToSpeechConfiguration)
  type: Constructor
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/Provider/FileTextToSpeechProvider.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/Provider/FileTextToSpeechProvider.cs
    startLine: 19
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech
  syntax:
    content: public FileTextToSpeechProvider(TextToSpeechConfiguration configuration)
    parameters:
    - id: configuration
      type: VRBuilder.TextToSpeech.TextToSpeechConfiguration
    content.vb: Public Sub New(configuration As TextToSpeechConfiguration)
  overload: VRBuilder.TextToSpeech.FileTextToSpeechProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.TextToSpeech.FileTextToSpeechProvider.ConvertTextToSpeech(System.String,UnityEngine.Localization.Locale)
  commentId: M:VRBuilder.TextToSpeech.FileTextToSpeechProvider.ConvertTextToSpeech(System.String,UnityEngine.Localization.Locale)
  id: ConvertTextToSpeech(System.String,UnityEngine.Localization.Locale)
  parent: VRBuilder.TextToSpeech.FileTextToSpeechProvider
  langs:
  - csharp
  - vb
  name: ConvertTextToSpeech(String, Locale)
  nameWithType: FileTextToSpeechProvider.ConvertTextToSpeech(String, Locale)
  fullName: VRBuilder.TextToSpeech.FileTextToSpeechProvider.ConvertTextToSpeech(System.String, UnityEngine.Localization.Locale)
  type: Method
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/Provider/FileTextToSpeechProvider.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ConvertTextToSpeech
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/Provider/FileTextToSpeechProvider.cs
    startLine: 25
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech
  example: []
  syntax:
    content: public async Task<AudioClip> ConvertTextToSpeech(string text, Locale locale)
    parameters:
    - id: text
      type: System.String
    - id: locale
      type: UnityEngine.Localization.Locale
    return:
      type: System.Threading.Tasks.Task{UnityEngine.AudioClip}
    content.vb: Public Function ConvertTextToSpeech(text As String, locale As Locale) As Task(Of AudioClip)
  overload: VRBuilder.TextToSpeech.FileTextToSpeechProvider.ConvertTextToSpeech*
  implements:
  - VRBuilder.TextToSpeech.ITextToSpeechProvider.ConvertTextToSpeech(System.String,UnityEngine.Localization.Locale)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: VRBuilder.TextToSpeech.FileTextToSpeechProvider.SetConfig(VRBuilder.TextToSpeech.TextToSpeechConfiguration)
  commentId: M:VRBuilder.TextToSpeech.FileTextToSpeechProvider.SetConfig(VRBuilder.TextToSpeech.TextToSpeechConfiguration)
  id: SetConfig(VRBuilder.TextToSpeech.TextToSpeechConfiguration)
  parent: VRBuilder.TextToSpeech.FileTextToSpeechProvider
  langs:
  - csharp
  - vb
  name: SetConfig(TextToSpeechConfiguration)
  nameWithType: FileTextToSpeechProvider.SetConfig(TextToSpeechConfiguration)
  fullName: VRBuilder.TextToSpeech.FileTextToSpeechProvider.SetConfig(VRBuilder.TextToSpeech.TextToSpeechConfiguration)
  type: Method
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/Provider/FileTextToSpeechProvider.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetConfig
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/Provider/FileTextToSpeechProvider.cs
    startLine: 54
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech
  example: []
  syntax:
    content: public void SetConfig(TextToSpeechConfiguration configuration)
    parameters:
    - id: configuration
      type: VRBuilder.TextToSpeech.TextToSpeechConfiguration
    content.vb: Public Sub SetConfig(configuration As TextToSpeechConfiguration)
  overload: VRBuilder.TextToSpeech.FileTextToSpeechProvider.SetConfig*
  implements:
  - VRBuilder.TextToSpeech.ITextToSpeechProvider.SetConfig(VRBuilder.TextToSpeech.TextToSpeechConfiguration)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.TextToSpeech.FileTextToSpeechProvider.GetPathToFile(System.String)
  commentId: M:VRBuilder.TextToSpeech.FileTextToSpeechProvider.GetPathToFile(System.String)
  id: GetPathToFile(System.String)
  parent: VRBuilder.TextToSpeech.FileTextToSpeechProvider
  langs:
  - csharp
  - vb
  name: GetPathToFile(String)
  nameWithType: FileTextToSpeechProvider.GetPathToFile(String)
  fullName: VRBuilder.TextToSpeech.FileTextToSpeechProvider.GetPathToFile(System.String)
  type: Method
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/Provider/FileTextToSpeechProvider.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetPathToFile
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/Provider/FileTextToSpeechProvider.cs
    startLine: 62
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech
  summary: "\nReturns the relative location were the file is cached.\n"
  example: []
  syntax:
    content: protected virtual string GetPathToFile(string filename)
    parameters:
    - id: filename
      type: System.String
    return:
      type: System.String
    content.vb: Protected Overridable Function GetPathToFile(filename As String) As String
  overload: VRBuilder.TextToSpeech.FileTextToSpeechProvider.GetPathToFile*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VRBuilder.TextToSpeech.FileTextToSpeechProvider.GetCachedFile(System.String)
  commentId: M:VRBuilder.TextToSpeech.FileTextToSpeechProvider.GetCachedFile(System.String)
  id: GetCachedFile(System.String)
  parent: VRBuilder.TextToSpeech.FileTextToSpeechProvider
  langs:
  - csharp
  - vb
  name: GetCachedFile(String)
  nameWithType: FileTextToSpeechProvider.GetCachedFile(String)
  fullName: VRBuilder.TextToSpeech.FileTextToSpeechProvider.GetCachedFile(System.String)
  type: Method
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/Provider/FileTextToSpeechProvider.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetCachedFile
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/Provider/FileTextToSpeechProvider.cs
    startLine: 73
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech
  summary: "\nRetrieves a cached file.\n"
  example: []
  syntax:
    content: protected virtual async Task<byte[]> GetCachedFile(string filePath)
    parameters:
    - id: filePath
      type: System.String
      description: Relative path where the cached file is stored.
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: A byte array containing the contents of the file.
    content.vb: Protected Overridable Function GetCachedFile(filePath As String) As Task(Of Byte())
  overload: VRBuilder.TextToSpeech.FileTextToSpeechProvider.GetCachedFile*
  modifiers.csharp:
  - protected
  - virtual
  - async
  modifiers.vb:
  - Protected
  - Overridable
- uid: VRBuilder.TextToSpeech.FileTextToSpeechProvider.IsFileCached(System.String)
  commentId: M:VRBuilder.TextToSpeech.FileTextToSpeechProvider.IsFileCached(System.String)
  id: IsFileCached(System.String)
  parent: VRBuilder.TextToSpeech.FileTextToSpeechProvider
  langs:
  - csharp
  - vb
  name: IsFileCached(String)
  nameWithType: FileTextToSpeechProvider.IsFileCached(String)
  fullName: VRBuilder.TextToSpeech.FileTextToSpeechProvider.IsFileCached(System.String)
  type: Method
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/Provider/FileTextToSpeechProvider.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsFileCached
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/Provider/FileTextToSpeechProvider.cs
    startLine: 88
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech
  summary: "\nReturns true is a file is cached in given relative <code data-dev-comment-type=\"paramref\" class=\"paramref\">filePath</code>.\n"
  example: []
  syntax:
    content: protected virtual async Task<bool> IsFileCached(string filePath)
    parameters:
    - id: filePath
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Protected Overridable Function IsFileCached(filePath As String) As Task(Of Boolean)
  overload: VRBuilder.TextToSpeech.FileTextToSpeechProvider.IsFileCached*
  modifiers.csharp:
  - protected
  - virtual
  - async
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: VRBuilder.TextToSpeech
  commentId: N:VRBuilder.TextToSpeech
  name: VRBuilder.TextToSpeech
  nameWithType: VRBuilder.TextToSpeech
  fullName: VRBuilder.TextToSpeech
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.TextToSpeech.ITextToSpeechProvider
  commentId: T:VRBuilder.TextToSpeech.ITextToSpeechProvider
  parent: VRBuilder.TextToSpeech
  name: ITextToSpeechProvider
  nameWithType: ITextToSpeechProvider
  fullName: VRBuilder.TextToSpeech.ITextToSpeechProvider
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.TextToSpeech.TextToSpeechConfiguration
  commentId: T:VRBuilder.TextToSpeech.TextToSpeechConfiguration
  parent: VRBuilder.TextToSpeech
  name: TextToSpeechConfiguration
  nameWithType: TextToSpeechConfiguration
  fullName: VRBuilder.TextToSpeech.TextToSpeechConfiguration
- uid: VRBuilder.TextToSpeech.FileTextToSpeechProvider.#ctor*
  commentId: Overload:VRBuilder.TextToSpeech.FileTextToSpeechProvider.#ctor
  name: FileTextToSpeechProvider
  nameWithType: FileTextToSpeechProvider.FileTextToSpeechProvider
  fullName: VRBuilder.TextToSpeech.FileTextToSpeechProvider.FileTextToSpeechProvider
- uid: VRBuilder.TextToSpeech.FileTextToSpeechProvider.ConvertTextToSpeech*
  commentId: Overload:VRBuilder.TextToSpeech.FileTextToSpeechProvider.ConvertTextToSpeech
  name: ConvertTextToSpeech
  nameWithType: FileTextToSpeechProvider.ConvertTextToSpeech
  fullName: VRBuilder.TextToSpeech.FileTextToSpeechProvider.ConvertTextToSpeech
- uid: VRBuilder.TextToSpeech.ITextToSpeechProvider.ConvertTextToSpeech(System.String,UnityEngine.Localization.Locale)
  commentId: M:VRBuilder.TextToSpeech.ITextToSpeechProvider.ConvertTextToSpeech(System.String,UnityEngine.Localization.Locale)
  parent: VRBuilder.TextToSpeech.ITextToSpeechProvider
  isExternal: true
  name: ConvertTextToSpeech(String, Locale)
  nameWithType: ITextToSpeechProvider.ConvertTextToSpeech(String, Locale)
  fullName: VRBuilder.TextToSpeech.ITextToSpeechProvider.ConvertTextToSpeech(System.String, UnityEngine.Localization.Locale)
  spec.csharp:
  - uid: VRBuilder.TextToSpeech.ITextToSpeechProvider.ConvertTextToSpeech(System.String,UnityEngine.Localization.Locale)
    name: ConvertTextToSpeech
    nameWithType: ITextToSpeechProvider.ConvertTextToSpeech
    fullName: VRBuilder.TextToSpeech.ITextToSpeechProvider.ConvertTextToSpeech
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Localization.Locale
    name: Locale
    nameWithType: Locale
    fullName: UnityEngine.Localization.Locale
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.TextToSpeech.ITextToSpeechProvider.ConvertTextToSpeech(System.String,UnityEngine.Localization.Locale)
    name: ConvertTextToSpeech
    nameWithType: ITextToSpeechProvider.ConvertTextToSpeech
    fullName: VRBuilder.TextToSpeech.ITextToSpeechProvider.ConvertTextToSpeech
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Localization.Locale
    name: Locale
    nameWithType: Locale
    fullName: UnityEngine.Localization.Locale
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: UnityEngine.Localization.Locale
  commentId: T:UnityEngine.Localization.Locale
  parent: UnityEngine.Localization
  name: Locale
  nameWithType: Locale
  fullName: UnityEngine.Localization.Locale
- uid: System.Threading.Tasks.Task{UnityEngine.AudioClip}
  commentId: T:System.Threading.Tasks.Task{UnityEngine.AudioClip}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AudioClip>
  nameWithType: Task<AudioClip>
  fullName: System.Threading.Tasks.Task<UnityEngine.AudioClip>
  nameWithType.vb: Task(Of AudioClip)
  fullName.vb: System.Threading.Tasks.Task(Of UnityEngine.AudioClip)
  name.vb: Task(Of AudioClip)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.AudioClip
    name: AudioClip
    nameWithType: AudioClip
    fullName: UnityEngine.AudioClip
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.AudioClip
    name: AudioClip
    nameWithType: AudioClip
    fullName: UnityEngine.AudioClip
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Localization
  commentId: N:UnityEngine.Localization
  name: UnityEngine.Localization
  nameWithType: UnityEngine.Localization
  fullName: UnityEngine.Localization
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: VRBuilder.TextToSpeech.FileTextToSpeechProvider.SetConfig*
  commentId: Overload:VRBuilder.TextToSpeech.FileTextToSpeechProvider.SetConfig
  name: SetConfig
  nameWithType: FileTextToSpeechProvider.SetConfig
  fullName: VRBuilder.TextToSpeech.FileTextToSpeechProvider.SetConfig
- uid: VRBuilder.TextToSpeech.ITextToSpeechProvider.SetConfig(VRBuilder.TextToSpeech.TextToSpeechConfiguration)
  commentId: M:VRBuilder.TextToSpeech.ITextToSpeechProvider.SetConfig(VRBuilder.TextToSpeech.TextToSpeechConfiguration)
  parent: VRBuilder.TextToSpeech.ITextToSpeechProvider
  name: SetConfig(TextToSpeechConfiguration)
  nameWithType: ITextToSpeechProvider.SetConfig(TextToSpeechConfiguration)
  fullName: VRBuilder.TextToSpeech.ITextToSpeechProvider.SetConfig(VRBuilder.TextToSpeech.TextToSpeechConfiguration)
  spec.csharp:
  - uid: VRBuilder.TextToSpeech.ITextToSpeechProvider.SetConfig(VRBuilder.TextToSpeech.TextToSpeechConfiguration)
    name: SetConfig
    nameWithType: ITextToSpeechProvider.SetConfig
    fullName: VRBuilder.TextToSpeech.ITextToSpeechProvider.SetConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.TextToSpeech.TextToSpeechConfiguration
    name: TextToSpeechConfiguration
    nameWithType: TextToSpeechConfiguration
    fullName: VRBuilder.TextToSpeech.TextToSpeechConfiguration
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.TextToSpeech.ITextToSpeechProvider.SetConfig(VRBuilder.TextToSpeech.TextToSpeechConfiguration)
    name: SetConfig
    nameWithType: ITextToSpeechProvider.SetConfig
    fullName: VRBuilder.TextToSpeech.ITextToSpeechProvider.SetConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.TextToSpeech.TextToSpeechConfiguration
    name: TextToSpeechConfiguration
    nameWithType: TextToSpeechConfiguration
    fullName: VRBuilder.TextToSpeech.TextToSpeechConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.TextToSpeech.FileTextToSpeechProvider.GetPathToFile*
  commentId: Overload:VRBuilder.TextToSpeech.FileTextToSpeechProvider.GetPathToFile
  name: GetPathToFile
  nameWithType: FileTextToSpeechProvider.GetPathToFile
  fullName: VRBuilder.TextToSpeech.FileTextToSpeechProvider.GetPathToFile
- uid: VRBuilder.TextToSpeech.FileTextToSpeechProvider.GetCachedFile*
  commentId: Overload:VRBuilder.TextToSpeech.FileTextToSpeechProvider.GetCachedFile
  name: GetCachedFile
  nameWithType: FileTextToSpeechProvider.GetCachedFile
  fullName: VRBuilder.TextToSpeech.FileTextToSpeechProvider.GetCachedFile
- uid: System.Threading.Tasks.Task{System.Byte[]}
  commentId: T:System.Threading.Tasks.Task{System.Byte[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Byte[]>
  nameWithType: Task<Byte[]>
  fullName: System.Threading.Tasks.Task<System.Byte[]>
  nameWithType.vb: Task(Of Byte())
  fullName.vb: System.Threading.Tasks.Task(Of System.Byte())
  name.vb: Task(Of Byte())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.TextToSpeech.FileTextToSpeechProvider.IsFileCached*
  commentId: Overload:VRBuilder.TextToSpeech.FileTextToSpeechProvider.IsFileCached
  name: IsFileCached
  nameWithType: FileTextToSpeechProvider.IsFileCached
  fullName: VRBuilder.TextToSpeech.FileTextToSpeechProvider.IsFileCached
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
