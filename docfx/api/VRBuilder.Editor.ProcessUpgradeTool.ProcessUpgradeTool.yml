### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool
  commentId: T:VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool
  id: ProcessUpgradeTool
  parent: VRBuilder.Editor.ProcessUpgradeTool
  children:
  - VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.Converters
  - VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.GetUpdaterForType(System.Type)
  - VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.UpdateDataOwnerRecursively(VRBuilder.Core.IDataOwner)
  - VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.Updaters
  langs:
  - csharp
  - vb
  name: ProcessUpgradeTool
  nameWithType: ProcessUpgradeTool
  fullName: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool
  type: Class
  source:
    remote:
      path: Source/Core/Editor/ProcessUpgradeTool/ProcessUpgradeTool.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessUpgradeTool
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/ProcessUpgradeTool/ProcessUpgradeTool.cs
    startLine: 20
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.ProcessUpgradeTool
  summary: "\nTool for upgrading an old process loaded in a scene to be compatible with the latest version of VR Builder.\n"
  example: []
  syntax:
    content: public static class ProcessUpgradeTool
    content.vb: Public Module ProcessUpgradeTool
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.Updaters
  commentId: P:VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.Updaters
  id: Updaters
  parent: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool
  langs:
  - csharp
  - vb
  name: Updaters
  nameWithType: ProcessUpgradeTool.Updaters
  fullName: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.Updaters
  type: Property
  source:
    remote:
      path: Source/Core/Editor/ProcessUpgradeTool/ProcessUpgradeTool.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Updaters
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/ProcessUpgradeTool/ProcessUpgradeTool.cs
    startLine: 28
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.ProcessUpgradeTool
  summary: "\nUpdaters available to this tool.\n"
  example: []
  syntax:
    content: public static IEnumerable<IUpdater> Updaters { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VRBuilder.Editor.ProcessUpgradeTool.IUpdater}
    content.vb: Public Shared ReadOnly Property Updaters As IEnumerable(Of IUpdater)
  overload: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.Updaters*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.Converters
  commentId: P:VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.Converters
  id: Converters
  parent: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool
  langs:
  - csharp
  - vb
  name: Converters
  nameWithType: ProcessUpgradeTool.Converters
  fullName: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.Converters
  type: Property
  source:
    remote:
      path: Source/Core/Editor/ProcessUpgradeTool/ProcessUpgradeTool.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Converters
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/ProcessUpgradeTool/ProcessUpgradeTool.cs
    startLine: 46
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.ProcessUpgradeTool
  summary: "\nConverters available to this tool.\n"
  example: []
  syntax:
    content: public static IEnumerable<IConverter> Converters { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VRBuilder.Editor.ProcessUpgradeTool.IConverter}
    content.vb: Public Shared ReadOnly Property Converters As IEnumerable(Of IConverter)
  overload: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.Converters*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.UpdateDataOwnerRecursively(VRBuilder.Core.IDataOwner)
  commentId: M:VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.UpdateDataOwnerRecursively(VRBuilder.Core.IDataOwner)
  id: UpdateDataOwnerRecursively(VRBuilder.Core.IDataOwner)
  parent: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool
  langs:
  - csharp
  - vb
  name: UpdateDataOwnerRecursively(IDataOwner)
  nameWithType: ProcessUpgradeTool.UpdateDataOwnerRecursively(IDataOwner)
  fullName: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.UpdateDataOwnerRecursively(VRBuilder.Core.IDataOwner)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/ProcessUpgradeTool/ProcessUpgradeTool.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: UpdateDataOwnerRecursively
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/ProcessUpgradeTool/ProcessUpgradeTool.cs
    startLine: 144
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.ProcessUpgradeTool
  summary: "\nUpdates the provided data owner and all of its child data owners, if a suitable updater exists.\n"
  example: []
  syntax:
    content: public static void UpdateDataOwnerRecursively(IDataOwner dataOwner)
    parameters:
    - id: dataOwner
      type: VRBuilder.Core.IDataOwner
    content.vb: Public Shared Sub UpdateDataOwnerRecursively(dataOwner As IDataOwner)
  overload: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.UpdateDataOwnerRecursively*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.GetUpdaterForType(System.Type)
  commentId: M:VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.GetUpdaterForType(System.Type)
  id: GetUpdaterForType(System.Type)
  parent: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool
  langs:
  - csharp
  - vb
  name: GetUpdaterForType(Type)
  nameWithType: ProcessUpgradeTool.GetUpdaterForType(Type)
  fullName: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.GetUpdaterForType(System.Type)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/ProcessUpgradeTool/ProcessUpgradeTool.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetUpdaterForType
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/ProcessUpgradeTool/ProcessUpgradeTool.cs
    startLine: 172
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.ProcessUpgradeTool
  summary: "\nReturns a suitable updater for the provided type, or null if none is found.\n"
  example: []
  syntax:
    content: public static IUpdater GetUpdaterForType(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: VRBuilder.Editor.ProcessUpgradeTool.IUpdater
    content.vb: Public Shared Function GetUpdaterForType(type As Type) As IUpdater
  overload: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.GetUpdaterForType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VRBuilder.Editor.ProcessUpgradeTool
  commentId: N:VRBuilder.Editor.ProcessUpgradeTool
  name: VRBuilder.Editor.ProcessUpgradeTool
  nameWithType: VRBuilder.Editor.ProcessUpgradeTool
  fullName: VRBuilder.Editor.ProcessUpgradeTool
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.Updaters*
  commentId: Overload:VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.Updaters
  name: Updaters
  nameWithType: ProcessUpgradeTool.Updaters
  fullName: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.Updaters
- uid: System.Collections.Generic.IEnumerable{VRBuilder.Editor.ProcessUpgradeTool.IUpdater}
  commentId: T:System.Collections.Generic.IEnumerable{VRBuilder.Editor.ProcessUpgradeTool.IUpdater}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IUpdater>
  nameWithType: IEnumerable<IUpdater>
  fullName: System.Collections.Generic.IEnumerable<VRBuilder.Editor.ProcessUpgradeTool.IUpdater>
  nameWithType.vb: IEnumerable(Of IUpdater)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VRBuilder.Editor.ProcessUpgradeTool.IUpdater)
  name.vb: IEnumerable(Of IUpdater)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Editor.ProcessUpgradeTool.IUpdater
    name: IUpdater
    nameWithType: IUpdater
    fullName: VRBuilder.Editor.ProcessUpgradeTool.IUpdater
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Editor.ProcessUpgradeTool.IUpdater
    name: IUpdater
    nameWithType: IUpdater
    fullName: VRBuilder.Editor.ProcessUpgradeTool.IUpdater
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.Converters*
  commentId: Overload:VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.Converters
  name: Converters
  nameWithType: ProcessUpgradeTool.Converters
  fullName: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.Converters
- uid: System.Collections.Generic.IEnumerable{VRBuilder.Editor.ProcessUpgradeTool.IConverter}
  commentId: T:System.Collections.Generic.IEnumerable{VRBuilder.Editor.ProcessUpgradeTool.IConverter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IConverter>
  nameWithType: IEnumerable<IConverter>
  fullName: System.Collections.Generic.IEnumerable<VRBuilder.Editor.ProcessUpgradeTool.IConverter>
  nameWithType.vb: IEnumerable(Of IConverter)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VRBuilder.Editor.ProcessUpgradeTool.IConverter)
  name.vb: IEnumerable(Of IConverter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Editor.ProcessUpgradeTool.IConverter
    name: IConverter
    nameWithType: IConverter
    fullName: VRBuilder.Editor.ProcessUpgradeTool.IConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Editor.ProcessUpgradeTool.IConverter
    name: IConverter
    nameWithType: IConverter
    fullName: VRBuilder.Editor.ProcessUpgradeTool.IConverter
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.UpdateDataOwnerRecursively*
  commentId: Overload:VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.UpdateDataOwnerRecursively
  name: UpdateDataOwnerRecursively
  nameWithType: ProcessUpgradeTool.UpdateDataOwnerRecursively
  fullName: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.UpdateDataOwnerRecursively
- uid: VRBuilder.Core.IDataOwner
  commentId: T:VRBuilder.Core.IDataOwner
  parent: VRBuilder.Core
  name: IDataOwner
  nameWithType: IDataOwner
  fullName: VRBuilder.Core.IDataOwner
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.GetUpdaterForType*
  commentId: Overload:VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.GetUpdaterForType
  name: GetUpdaterForType
  nameWithType: ProcessUpgradeTool.GetUpdaterForType
  fullName: VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.GetUpdaterForType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: VRBuilder.Editor.ProcessUpgradeTool.IUpdater
  commentId: T:VRBuilder.Editor.ProcessUpgradeTool.IUpdater
  parent: VRBuilder.Editor.ProcessUpgradeTool
  name: IUpdater
  nameWithType: IUpdater
  fullName: VRBuilder.Editor.ProcessUpgradeTool.IUpdater
