### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.UndoRedo.CallbackCommand
  commentId: T:VRBuilder.Editor.UndoRedo.CallbackCommand
  id: CallbackCommand
  parent: VRBuilder.Editor.UndoRedo
  children:
  - VRBuilder.Editor.UndoRedo.CallbackCommand.#ctor(System.Action,System.Action)
  - VRBuilder.Editor.UndoRedo.CallbackCommand.Do
  - VRBuilder.Editor.UndoRedo.CallbackCommand.Undo
  langs:
  - csharp
  - vb
  name: CallbackCommand
  nameWithType: CallbackCommand
  fullName: VRBuilder.Editor.UndoRedo.CallbackCommand
  type: Class
  source:
    remote:
      path: Source/Core/Editor/UndoRedo/CallbackCommand.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CallbackCommand
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UndoRedo/CallbackCommand.cs
    startLine: 11
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UndoRedo
  summary: "\nA revertable command which defines Do/Undo logic through callbacks.\n"
  example: []
  syntax:
    content: 'public class CallbackCommand : IRevertableCommand'
    content.vb: >-
      Public Class CallbackCommand
          Implements IRevertableCommand
  inheritance:
  - System.Object
  derivedClasses:
  - VRBuilder.Editor.UndoRedo.ProcessCommand
  implements:
  - VRBuilder.Editor.UndoRedo.IRevertableCommand
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Editor.UndoRedo.CallbackCommand.#ctor(System.Action,System.Action)
  commentId: M:VRBuilder.Editor.UndoRedo.CallbackCommand.#ctor(System.Action,System.Action)
  id: '#ctor(System.Action,System.Action)'
  parent: VRBuilder.Editor.UndoRedo.CallbackCommand
  langs:
  - csharp
  - vb
  name: CallbackCommand(Action, Action)
  nameWithType: CallbackCommand.CallbackCommand(Action, Action)
  fullName: VRBuilder.Editor.UndoRedo.CallbackCommand.CallbackCommand(System.Action, System.Action)
  type: Constructor
  source:
    remote:
      path: Source/Core/Editor/UndoRedo/CallbackCommand.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UndoRedo/CallbackCommand.cs
    startLine: 16
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UndoRedo
  syntax:
    content: public CallbackCommand(Action doCallback, Action undoCallback)
    parameters:
    - id: doCallback
      type: System.Action
    - id: undoCallback
      type: System.Action
    content.vb: Public Sub New(doCallback As Action, undoCallback As Action)
  overload: VRBuilder.Editor.UndoRedo.CallbackCommand.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Editor.UndoRedo.CallbackCommand.Do
  commentId: M:VRBuilder.Editor.UndoRedo.CallbackCommand.Do
  id: Do
  parent: VRBuilder.Editor.UndoRedo.CallbackCommand
  langs:
  - csharp
  - vb
  name: Do()
  nameWithType: CallbackCommand.Do()
  fullName: VRBuilder.Editor.UndoRedo.CallbackCommand.Do()
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UndoRedo/CallbackCommand.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Do
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UndoRedo/CallbackCommand.cs
    startLine: 23
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UndoRedo
  summary: "\nPerform some revertable action.\n"
  example: []
  syntax:
    content: public virtual void Do()
    content.vb: Public Overridable Sub Do
  overload: VRBuilder.Editor.UndoRedo.CallbackCommand.Do*
  implements:
  - VRBuilder.Editor.UndoRedo.IRevertableCommand.Do
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VRBuilder.Editor.UndoRedo.CallbackCommand.Undo
  commentId: M:VRBuilder.Editor.UndoRedo.CallbackCommand.Undo
  id: Undo
  parent: VRBuilder.Editor.UndoRedo.CallbackCommand
  langs:
  - csharp
  - vb
  name: Undo()
  nameWithType: CallbackCommand.Undo()
  fullName: VRBuilder.Editor.UndoRedo.CallbackCommand.Undo()
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UndoRedo/CallbackCommand.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Undo
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UndoRedo/CallbackCommand.cs
    startLine: 29
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UndoRedo
  summary: "\nRevert the changes done during by <xref href=\"VRBuilder.Editor.UndoRedo.IRevertableCommand.Do\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  example: []
  syntax:
    content: public virtual void Undo()
    content.vb: Public Overridable Sub Undo
  overload: VRBuilder.Editor.UndoRedo.CallbackCommand.Undo*
  implements:
  - VRBuilder.Editor.UndoRedo.IRevertableCommand.Undo
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: VRBuilder.Editor.UndoRedo
  commentId: N:VRBuilder.Editor.UndoRedo
  name: VRBuilder.Editor.UndoRedo
  nameWithType: VRBuilder.Editor.UndoRedo
  fullName: VRBuilder.Editor.UndoRedo
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Editor.UndoRedo.IRevertableCommand
  commentId: T:VRBuilder.Editor.UndoRedo.IRevertableCommand
  parent: VRBuilder.Editor.UndoRedo
  name: IRevertableCommand
  nameWithType: IRevertableCommand
  fullName: VRBuilder.Editor.UndoRedo.IRevertableCommand
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Editor.UndoRedo.CallbackCommand.#ctor*
  commentId: Overload:VRBuilder.Editor.UndoRedo.CallbackCommand.#ctor
  name: CallbackCommand
  nameWithType: CallbackCommand.CallbackCommand
  fullName: VRBuilder.Editor.UndoRedo.CallbackCommand.CallbackCommand
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: VRBuilder.Editor.UndoRedo.CallbackCommand.Do*
  commentId: Overload:VRBuilder.Editor.UndoRedo.CallbackCommand.Do
  name: Do
  nameWithType: CallbackCommand.Do
  fullName: VRBuilder.Editor.UndoRedo.CallbackCommand.Do
- uid: VRBuilder.Editor.UndoRedo.IRevertableCommand.Do
  commentId: M:VRBuilder.Editor.UndoRedo.IRevertableCommand.Do
  parent: VRBuilder.Editor.UndoRedo.IRevertableCommand
  name: Do()
  nameWithType: IRevertableCommand.Do()
  fullName: VRBuilder.Editor.UndoRedo.IRevertableCommand.Do()
  spec.csharp:
  - uid: VRBuilder.Editor.UndoRedo.IRevertableCommand.Do
    name: Do
    nameWithType: IRevertableCommand.Do
    fullName: VRBuilder.Editor.UndoRedo.IRevertableCommand.Do
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UndoRedo.IRevertableCommand.Do
    name: Do
    nameWithType: IRevertableCommand.Do
    fullName: VRBuilder.Editor.UndoRedo.IRevertableCommand.Do
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UndoRedo.CallbackCommand.Undo*
  commentId: Overload:VRBuilder.Editor.UndoRedo.CallbackCommand.Undo
  name: Undo
  nameWithType: CallbackCommand.Undo
  fullName: VRBuilder.Editor.UndoRedo.CallbackCommand.Undo
- uid: VRBuilder.Editor.UndoRedo.IRevertableCommand.Undo
  commentId: M:VRBuilder.Editor.UndoRedo.IRevertableCommand.Undo
  parent: VRBuilder.Editor.UndoRedo.IRevertableCommand
  name: Undo()
  nameWithType: IRevertableCommand.Undo()
  fullName: VRBuilder.Editor.UndoRedo.IRevertableCommand.Undo()
  spec.csharp:
  - uid: VRBuilder.Editor.UndoRedo.IRevertableCommand.Undo
    name: Undo
    nameWithType: IRevertableCommand.Undo
    fullName: VRBuilder.Editor.UndoRedo.IRevertableCommand.Undo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UndoRedo.IRevertableCommand.Undo
    name: Undo
    nameWithType: IRevertableCommand.Undo
    fullName: VRBuilder.Editor.UndoRedo.IRevertableCommand.Undo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
