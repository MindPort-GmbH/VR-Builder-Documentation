### YamlMime:ManagedReference
items:
- uid: VRBuilder.UX.SpectatorController
  commentId: T:VRBuilder.UX.SpectatorController
  id: SpectatorController
  parent: VRBuilder.UX
  children:
  - VRBuilder.UX.SpectatorController.OnDisable
  - VRBuilder.UX.SpectatorController.OnEnable
  - VRBuilder.UX.SpectatorController.ToggleOverlay(VRBuilder.Core.Input.InputController.InputEventArgs)
  - VRBuilder.UX.SpectatorController.ToggleUIOverlayVisibility
  langs:
  - csharp
  - vb
  name: SpectatorController
  nameWithType: SpectatorController
  fullName: VRBuilder.UX.SpectatorController
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/UI/Spectator/SpectatorController.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SpectatorController
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/UI/Spectator/SpectatorController.cs
    startLine: 8
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nController for a spectator to toggle UI visibility.\n"
  example: []
  syntax:
    content: 'public class SpectatorController : InputActionListener, IInputActionListener'
    content.vb: >-
      Public Class SpectatorController
          Inherits InputActionListener
          Implements IInputActionListener
  inheritance:
  - System.Object
  - VRBuilder.Core.Input.InputActionListener
  implements:
  - VRBuilder.Core.Input.IInputActionListener
  inheritedMembers:
  - VRBuilder.Core.Input.InputActionListener.Priority
  - VRBuilder.Core.Input.InputActionListener.IgnoreFocus
  - VRBuilder.Core.Input.InputActionListener.RegisterInputEvent(System.Action{VRBuilder.Core.Input.InputController.InputEventArgs})
  - VRBuilder.Core.Input.InputActionListener.UnregisterInputEvent(System.Action{VRBuilder.Core.Input.InputController.InputEventArgs})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.UX.SpectatorController.ToggleUIOverlayVisibility
  commentId: E:VRBuilder.UX.SpectatorController.ToggleUIOverlayVisibility
  id: ToggleUIOverlayVisibility
  parent: VRBuilder.UX.SpectatorController
  langs:
  - csharp
  - vb
  name: ToggleUIOverlayVisibility
  nameWithType: SpectatorController.ToggleUIOverlayVisibility
  fullName: VRBuilder.UX.SpectatorController.ToggleUIOverlayVisibility
  type: Event
  source:
    remote:
      path: Source/Core/Runtime/UI/Spectator/SpectatorController.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ToggleUIOverlayVisibility
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/UI/Spectator/SpectatorController.cs
    startLine: 13
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nEvent fired when UI visibility is toggled.\n"
  example: []
  syntax:
    content: public event EventHandler ToggleUIOverlayVisibility
    return:
      type: System.EventHandler
    content.vb: Public Event ToggleUIOverlayVisibility As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.UX.SpectatorController.OnEnable
  commentId: M:VRBuilder.UX.SpectatorController.OnEnable
  id: OnEnable
  parent: VRBuilder.UX.SpectatorController
  langs:
  - csharp
  - vb
  name: OnEnable()
  nameWithType: SpectatorController.OnEnable()
  fullName: VRBuilder.UX.SpectatorController.OnEnable()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/UI/Spectator/SpectatorController.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnEnable
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/UI/Spectator/SpectatorController.cs
    startLine: 15
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  syntax:
    content: protected void OnEnable()
    content.vb: Protected Sub OnEnable
  overload: VRBuilder.UX.SpectatorController.OnEnable*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.UX.SpectatorController.OnDisable
  commentId: M:VRBuilder.UX.SpectatorController.OnDisable
  id: OnDisable
  parent: VRBuilder.UX.SpectatorController
  langs:
  - csharp
  - vb
  name: OnDisable()
  nameWithType: SpectatorController.OnDisable()
  fullName: VRBuilder.UX.SpectatorController.OnDisable()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/UI/Spectator/SpectatorController.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnDisable
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/UI/Spectator/SpectatorController.cs
    startLine: 20
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  syntax:
    content: protected void OnDisable()
    content.vb: Protected Sub OnDisable
  overload: VRBuilder.UX.SpectatorController.OnDisable*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.UX.SpectatorController.ToggleOverlay(VRBuilder.Core.Input.InputController.InputEventArgs)
  commentId: M:VRBuilder.UX.SpectatorController.ToggleOverlay(VRBuilder.Core.Input.InputController.InputEventArgs)
  id: ToggleOverlay(VRBuilder.Core.Input.InputController.InputEventArgs)
  parent: VRBuilder.UX.SpectatorController
  langs:
  - csharp
  - vb
  name: ToggleOverlay(InputController.InputEventArgs)
  nameWithType: SpectatorController.ToggleOverlay(InputController.InputEventArgs)
  fullName: VRBuilder.UX.SpectatorController.ToggleOverlay(VRBuilder.Core.Input.InputController.InputEventArgs)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/UI/Spectator/SpectatorController.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ToggleOverlay
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/UI/Spectator/SpectatorController.cs
    startLine: 25
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  syntax:
    content: protected void ToggleOverlay(InputController.InputEventArgs args)
    parameters:
    - id: args
      type: VRBuilder.Core.Input.InputController.InputEventArgs
    content.vb: Protected Sub ToggleOverlay(args As InputController.InputEventArgs)
  overload: VRBuilder.UX.SpectatorController.ToggleOverlay*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: VRBuilder.UX
  commentId: N:VRBuilder.UX
  name: VRBuilder.UX
  nameWithType: VRBuilder.UX
  fullName: VRBuilder.UX
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Input.InputActionListener
  commentId: T:VRBuilder.Core.Input.InputActionListener
  parent: VRBuilder.Core.Input
  name: InputActionListener
  nameWithType: InputActionListener
  fullName: VRBuilder.Core.Input.InputActionListener
- uid: VRBuilder.Core.Input.IInputActionListener
  commentId: T:VRBuilder.Core.Input.IInputActionListener
  parent: VRBuilder.Core.Input
  name: IInputActionListener
  nameWithType: IInputActionListener
  fullName: VRBuilder.Core.Input.IInputActionListener
- uid: VRBuilder.Core.Input.InputActionListener.Priority
  commentId: P:VRBuilder.Core.Input.InputActionListener.Priority
  parent: VRBuilder.Core.Input.InputActionListener
  name: Priority
  nameWithType: InputActionListener.Priority
  fullName: VRBuilder.Core.Input.InputActionListener.Priority
- uid: VRBuilder.Core.Input.InputActionListener.IgnoreFocus
  commentId: P:VRBuilder.Core.Input.InputActionListener.IgnoreFocus
  parent: VRBuilder.Core.Input.InputActionListener
  name: IgnoreFocus
  nameWithType: InputActionListener.IgnoreFocus
  fullName: VRBuilder.Core.Input.InputActionListener.IgnoreFocus
- uid: VRBuilder.Core.Input.InputActionListener.RegisterInputEvent(System.Action{VRBuilder.Core.Input.InputController.InputEventArgs})
  commentId: M:VRBuilder.Core.Input.InputActionListener.RegisterInputEvent(System.Action{VRBuilder.Core.Input.InputController.InputEventArgs})
  parent: VRBuilder.Core.Input.InputActionListener
  isExternal: true
  name: RegisterInputEvent(Action<InputController.InputEventArgs>)
  nameWithType: InputActionListener.RegisterInputEvent(Action<InputController.InputEventArgs>)
  fullName: VRBuilder.Core.Input.InputActionListener.RegisterInputEvent(System.Action<VRBuilder.Core.Input.InputController.InputEventArgs>)
  nameWithType.vb: InputActionListener.RegisterInputEvent(Action(Of InputController.InputEventArgs))
  fullName.vb: VRBuilder.Core.Input.InputActionListener.RegisterInputEvent(System.Action(Of VRBuilder.Core.Input.InputController.InputEventArgs))
  name.vb: RegisterInputEvent(Action(Of InputController.InputEventArgs))
  spec.csharp:
  - uid: VRBuilder.Core.Input.InputActionListener.RegisterInputEvent(System.Action{VRBuilder.Core.Input.InputController.InputEventArgs})
    name: RegisterInputEvent
    nameWithType: InputActionListener.RegisterInputEvent
    fullName: VRBuilder.Core.Input.InputActionListener.RegisterInputEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Input.InputController.InputEventArgs
    name: InputController.InputEventArgs
    nameWithType: InputController.InputEventArgs
    fullName: VRBuilder.Core.Input.InputController.InputEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Input.InputActionListener.RegisterInputEvent(System.Action{VRBuilder.Core.Input.InputController.InputEventArgs})
    name: RegisterInputEvent
    nameWithType: InputActionListener.RegisterInputEvent
    fullName: VRBuilder.Core.Input.InputActionListener.RegisterInputEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Input.InputController.InputEventArgs
    name: InputController.InputEventArgs
    nameWithType: InputController.InputEventArgs
    fullName: VRBuilder.Core.Input.InputController.InputEventArgs
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Input.InputActionListener.UnregisterInputEvent(System.Action{VRBuilder.Core.Input.InputController.InputEventArgs})
  commentId: M:VRBuilder.Core.Input.InputActionListener.UnregisterInputEvent(System.Action{VRBuilder.Core.Input.InputController.InputEventArgs})
  parent: VRBuilder.Core.Input.InputActionListener
  isExternal: true
  name: UnregisterInputEvent(Action<InputController.InputEventArgs>)
  nameWithType: InputActionListener.UnregisterInputEvent(Action<InputController.InputEventArgs>)
  fullName: VRBuilder.Core.Input.InputActionListener.UnregisterInputEvent(System.Action<VRBuilder.Core.Input.InputController.InputEventArgs>)
  nameWithType.vb: InputActionListener.UnregisterInputEvent(Action(Of InputController.InputEventArgs))
  fullName.vb: VRBuilder.Core.Input.InputActionListener.UnregisterInputEvent(System.Action(Of VRBuilder.Core.Input.InputController.InputEventArgs))
  name.vb: UnregisterInputEvent(Action(Of InputController.InputEventArgs))
  spec.csharp:
  - uid: VRBuilder.Core.Input.InputActionListener.UnregisterInputEvent(System.Action{VRBuilder.Core.Input.InputController.InputEventArgs})
    name: UnregisterInputEvent
    nameWithType: InputActionListener.UnregisterInputEvent
    fullName: VRBuilder.Core.Input.InputActionListener.UnregisterInputEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Input.InputController.InputEventArgs
    name: InputController.InputEventArgs
    nameWithType: InputController.InputEventArgs
    fullName: VRBuilder.Core.Input.InputController.InputEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Input.InputActionListener.UnregisterInputEvent(System.Action{VRBuilder.Core.Input.InputController.InputEventArgs})
    name: UnregisterInputEvent
    nameWithType: InputActionListener.UnregisterInputEvent
    fullName: VRBuilder.Core.Input.InputActionListener.UnregisterInputEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Input.InputController.InputEventArgs
    name: InputController.InputEventArgs
    nameWithType: InputController.InputEventArgs
    fullName: VRBuilder.Core.Input.InputController.InputEventArgs
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Input
  commentId: N:VRBuilder.Core.Input
  name: VRBuilder.Core.Input
  nameWithType: VRBuilder.Core.Input
  fullName: VRBuilder.Core.Input
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: VRBuilder.UX.SpectatorController.OnEnable*
  commentId: Overload:VRBuilder.UX.SpectatorController.OnEnable
  name: OnEnable
  nameWithType: SpectatorController.OnEnable
  fullName: VRBuilder.UX.SpectatorController.OnEnable
- uid: VRBuilder.UX.SpectatorController.OnDisable*
  commentId: Overload:VRBuilder.UX.SpectatorController.OnDisable
  name: OnDisable
  nameWithType: SpectatorController.OnDisable
  fullName: VRBuilder.UX.SpectatorController.OnDisable
- uid: VRBuilder.UX.SpectatorController.ToggleOverlay*
  commentId: Overload:VRBuilder.UX.SpectatorController.ToggleOverlay
  name: ToggleOverlay
  nameWithType: SpectatorController.ToggleOverlay
  fullName: VRBuilder.UX.SpectatorController.ToggleOverlay
- uid: VRBuilder.Core.Input.InputController.InputEventArgs
  commentId: T:VRBuilder.Core.Input.InputController.InputEventArgs
  parent: VRBuilder.Core.Input
  name: InputController.InputEventArgs
  nameWithType: InputController.InputEventArgs
  fullName: VRBuilder.Core.Input.InputController.InputEventArgs
