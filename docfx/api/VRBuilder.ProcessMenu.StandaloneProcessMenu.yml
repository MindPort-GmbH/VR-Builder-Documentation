### YamlMime:ManagedReference
items:
- uid: VRBuilder.ProcessMenu.StandaloneProcessMenu
  commentId: T:VRBuilder.ProcessMenu.StandaloneProcessMenu
  id: StandaloneProcessMenu
  parent: VRBuilder.ProcessMenu
  children:
  - VRBuilder.ProcessMenu.StandaloneProcessMenu.OnProcessFinished(System.Object,VRBuilder.Core.ProcessEventArgs)
  - VRBuilder.ProcessMenu.StandaloneProcessMenu.OnProcessStarted(System.Object,VRBuilder.Core.ProcessEventArgs)
  - VRBuilder.ProcessMenu.StandaloneProcessMenu.SubscribeToProcessEvents
  - VRBuilder.ProcessMenu.StandaloneProcessMenu.UnsubscribeFromProcessEvents
  langs:
  - csharp
  - vb
  name: StandaloneProcessMenu
  nameWithType: StandaloneProcessMenu
  fullName: VRBuilder.ProcessMenu.StandaloneProcessMenu
  type: Class
  source:
    remote:
      path: Source/Runtime/ProcessController/StandaloneProcessMenu.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Process-Menu-for-VR-Builder.git
    id: StandaloneProcessMenu
    path: ../../Assets/MindPort/VR Builder/Add-ons/ProcessMenu/Source/Runtime/ProcessController/StandaloneProcessMenu.cs
    startLine: 17
  assemblies:
  - VRBuilder.ProcessMenu
  namespace: VRBuilder.ProcessMenu
  summary: "\nStandalone controller class for an example of a custom overlay with audio.\n"
  example: []
  syntax:
    content: 'public class StandaloneProcessMenu : BaseProcessControllerMenu'
    content.vb: >-
      Public Class StandaloneProcessMenu
          Inherits BaseProcessControllerMenu
  inheritance:
  - System.Object
  - VRBuilder.ProcessMenu.BaseProcessControllerMenu
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.ProcessMenu.StandaloneProcessMenu.SubscribeToProcessEvents
  commentId: M:VRBuilder.ProcessMenu.StandaloneProcessMenu.SubscribeToProcessEvents
  id: SubscribeToProcessEvents
  parent: VRBuilder.ProcessMenu.StandaloneProcessMenu
  langs:
  - csharp
  - vb
  name: SubscribeToProcessEvents()
  nameWithType: StandaloneProcessMenu.SubscribeToProcessEvents()
  fullName: VRBuilder.ProcessMenu.StandaloneProcessMenu.SubscribeToProcessEvents()
  type: Method
  source:
    remote:
      path: Source/Runtime/ProcessController/StandaloneProcessMenu.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Process-Menu-for-VR-Builder.git
    id: SubscribeToProcessEvents
    path: ../../Assets/MindPort/VR Builder/Add-ons/ProcessMenu/Source/Runtime/ProcessController/StandaloneProcessMenu.cs
    startLine: 305
  assemblies:
  - VRBuilder.ProcessMenu
  namespace: VRBuilder.ProcessMenu
  summary: "\nSubscribes to process events.\n"
  example: []
  syntax:
    content: protected virtual void SubscribeToProcessEvents()
    content.vb: Protected Overridable Sub SubscribeToProcessEvents
  overload: VRBuilder.ProcessMenu.StandaloneProcessMenu.SubscribeToProcessEvents*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VRBuilder.ProcessMenu.StandaloneProcessMenu.UnsubscribeFromProcessEvents
  commentId: M:VRBuilder.ProcessMenu.StandaloneProcessMenu.UnsubscribeFromProcessEvents
  id: UnsubscribeFromProcessEvents
  parent: VRBuilder.ProcessMenu.StandaloneProcessMenu
  langs:
  - csharp
  - vb
  name: UnsubscribeFromProcessEvents()
  nameWithType: StandaloneProcessMenu.UnsubscribeFromProcessEvents()
  fullName: VRBuilder.ProcessMenu.StandaloneProcessMenu.UnsubscribeFromProcessEvents()
  type: Method
  source:
    remote:
      path: Source/Runtime/ProcessController/StandaloneProcessMenu.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Process-Menu-for-VR-Builder.git
    id: UnsubscribeFromProcessEvents
    path: ../../Assets/MindPort/VR Builder/Add-ons/ProcessMenu/Source/Runtime/ProcessController/StandaloneProcessMenu.cs
    startLine: 314
  assemblies:
  - VRBuilder.ProcessMenu
  namespace: VRBuilder.ProcessMenu
  summary: "\nUnsubscribes from process events.\n"
  example: []
  syntax:
    content: protected virtual void UnsubscribeFromProcessEvents()
    content.vb: Protected Overridable Sub UnsubscribeFromProcessEvents
  overload: VRBuilder.ProcessMenu.StandaloneProcessMenu.UnsubscribeFromProcessEvents*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VRBuilder.ProcessMenu.StandaloneProcessMenu.OnProcessStarted(System.Object,VRBuilder.Core.ProcessEventArgs)
  commentId: M:VRBuilder.ProcessMenu.StandaloneProcessMenu.OnProcessStarted(System.Object,VRBuilder.Core.ProcessEventArgs)
  id: OnProcessStarted(System.Object,VRBuilder.Core.ProcessEventArgs)
  parent: VRBuilder.ProcessMenu.StandaloneProcessMenu
  langs:
  - csharp
  - vb
  name: OnProcessStarted(Object, ProcessEventArgs)
  nameWithType: StandaloneProcessMenu.OnProcessStarted(Object, ProcessEventArgs)
  fullName: VRBuilder.ProcessMenu.StandaloneProcessMenu.OnProcessStarted(System.Object, VRBuilder.Core.ProcessEventArgs)
  type: Method
  source:
    remote:
      path: Source/Runtime/ProcessController/StandaloneProcessMenu.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Process-Menu-for-VR-Builder.git
    id: OnProcessStarted
    path: ../../Assets/MindPort/VR Builder/Add-ons/ProcessMenu/Source/Runtime/ProcessController/StandaloneProcessMenu.cs
    startLine: 325
  assemblies:
  - VRBuilder.ProcessMenu
  namespace: VRBuilder.ProcessMenu
  summary: "\nIs called when the process started event is triggered.\n"
  example: []
  syntax:
    content: protected virtual void OnProcessStarted(object sender, ProcessEventArgs eventArgs)
    parameters:
    - id: sender
      type: System.Object
      description: Sender of the event.
    - id: eventArgs
      type: VRBuilder.Core.ProcessEventArgs
      description: Event arguments.
    content.vb: Protected Overridable Sub OnProcessStarted(sender As Object, eventArgs As ProcessEventArgs)
  overload: VRBuilder.ProcessMenu.StandaloneProcessMenu.OnProcessStarted*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VRBuilder.ProcessMenu.StandaloneProcessMenu.OnProcessFinished(System.Object,VRBuilder.Core.ProcessEventArgs)
  commentId: M:VRBuilder.ProcessMenu.StandaloneProcessMenu.OnProcessFinished(System.Object,VRBuilder.Core.ProcessEventArgs)
  id: OnProcessFinished(System.Object,VRBuilder.Core.ProcessEventArgs)
  parent: VRBuilder.ProcessMenu.StandaloneProcessMenu
  langs:
  - csharp
  - vb
  name: OnProcessFinished(Object, ProcessEventArgs)
  nameWithType: StandaloneProcessMenu.OnProcessFinished(Object, ProcessEventArgs)
  fullName: VRBuilder.ProcessMenu.StandaloneProcessMenu.OnProcessFinished(System.Object, VRBuilder.Core.ProcessEventArgs)
  type: Method
  source:
    remote:
      path: Source/Runtime/ProcessController/StandaloneProcessMenu.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Process-Menu-for-VR-Builder.git
    id: OnProcessFinished
    path: ../../Assets/MindPort/VR Builder/Add-ons/ProcessMenu/Source/Runtime/ProcessController/StandaloneProcessMenu.cs
    startLine: 340
  assemblies:
  - VRBuilder.ProcessMenu
  namespace: VRBuilder.ProcessMenu
  summary: "\nIs called when the process finished event is triggered.\n"
  example: []
  syntax:
    content: protected virtual void OnProcessFinished(object sender, ProcessEventArgs eventArgs)
    parameters:
    - id: sender
      type: System.Object
      description: Sender of the event.
    - id: eventArgs
      type: VRBuilder.Core.ProcessEventArgs
      description: Event arguments.
    content.vb: Protected Overridable Sub OnProcessFinished(sender As Object, eventArgs As ProcessEventArgs)
  overload: VRBuilder.ProcessMenu.StandaloneProcessMenu.OnProcessFinished*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: VRBuilder.ProcessMenu
  commentId: N:VRBuilder.ProcessMenu
  name: VRBuilder.ProcessMenu
  nameWithType: VRBuilder.ProcessMenu
  fullName: VRBuilder.ProcessMenu
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.ProcessMenu.BaseProcessControllerMenu
  commentId: T:VRBuilder.ProcessMenu.BaseProcessControllerMenu
  parent: VRBuilder.ProcessMenu
  name: BaseProcessControllerMenu
  nameWithType: BaseProcessControllerMenu
  fullName: VRBuilder.ProcessMenu.BaseProcessControllerMenu
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.ProcessMenu.StandaloneProcessMenu.SubscribeToProcessEvents*
  commentId: Overload:VRBuilder.ProcessMenu.StandaloneProcessMenu.SubscribeToProcessEvents
  name: SubscribeToProcessEvents
  nameWithType: StandaloneProcessMenu.SubscribeToProcessEvents
  fullName: VRBuilder.ProcessMenu.StandaloneProcessMenu.SubscribeToProcessEvents
- uid: VRBuilder.ProcessMenu.StandaloneProcessMenu.UnsubscribeFromProcessEvents*
  commentId: Overload:VRBuilder.ProcessMenu.StandaloneProcessMenu.UnsubscribeFromProcessEvents
  name: UnsubscribeFromProcessEvents
  nameWithType: StandaloneProcessMenu.UnsubscribeFromProcessEvents
  fullName: VRBuilder.ProcessMenu.StandaloneProcessMenu.UnsubscribeFromProcessEvents
- uid: VRBuilder.ProcessMenu.StandaloneProcessMenu.OnProcessStarted*
  commentId: Overload:VRBuilder.ProcessMenu.StandaloneProcessMenu.OnProcessStarted
  name: OnProcessStarted
  nameWithType: StandaloneProcessMenu.OnProcessStarted
  fullName: VRBuilder.ProcessMenu.StandaloneProcessMenu.OnProcessStarted
- uid: VRBuilder.Core.ProcessEventArgs
  commentId: T:VRBuilder.Core.ProcessEventArgs
  parent: VRBuilder.Core
  name: ProcessEventArgs
  nameWithType: ProcessEventArgs
  fullName: VRBuilder.Core.ProcessEventArgs
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.ProcessMenu.StandaloneProcessMenu.OnProcessFinished*
  commentId: Overload:VRBuilder.ProcessMenu.StandaloneProcessMenu.OnProcessFinished
  name: OnProcessFinished
  nameWithType: StandaloneProcessMenu.OnProcessFinished
  fullName: VRBuilder.ProcessMenu.StandaloneProcessMenu.OnProcessFinished
