### YamlMime:ManagedReference
items:
- uid: VRBuilder.UX.ProcessControllerSetup
  commentId: T:VRBuilder.UX.ProcessControllerSetup
  id: ProcessControllerSetup
  parent: VRBuilder.UX
  children:
  - VRBuilder.UX.ProcessControllerSetup.CurrentProcessController
  - VRBuilder.UX.ProcessControllerSetup.enforcedProcessController
  - VRBuilder.UX.ProcessControllerSetup.OnEnable
  - VRBuilder.UX.ProcessControllerSetup.ResetToDefault
  - VRBuilder.UX.ProcessControllerSetup.SetEnforcedProcessController(VRBuilder.UX.IProcessController)
  - VRBuilder.UX.ProcessControllerSetup.SetProcessControllerQualifiedName(System.String)
  langs:
  - csharp
  - vb
  name: ProcessControllerSetup
  nameWithType: ProcessControllerSetup
  fullName: VRBuilder.UX.ProcessControllerSetup
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/ProcessControllerSetup.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessControllerSetup
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/ProcessControllerSetup.cs
    startLine: 12
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nManages the setup of the process controller and lets the developer choose the <xref href=\"VRBuilder.UX.IProcessController\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class ProcessControllerSetup : MonoBehaviour'
    content.vb: >-
      Public Class ProcessControllerSetup
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.UX.ProcessControllerSetup.CurrentProcessController
  commentId: P:VRBuilder.UX.ProcessControllerSetup.CurrentProcessController
  id: CurrentProcessController
  parent: VRBuilder.UX.ProcessControllerSetup
  langs:
  - csharp
  - vb
  name: CurrentProcessController
  nameWithType: ProcessControllerSetup.CurrentProcessController
  fullName: VRBuilder.UX.ProcessControllerSetup.CurrentProcessController
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/ProcessControllerSetup.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CurrentProcessController
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/ProcessControllerSetup.cs
    startLine: 32
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nCurrent used process controller.\n"
  example: []
  syntax:
    content: public IProcessController CurrentProcessController { get; protected set; }
    parameters: []
    return:
      type: VRBuilder.UX.IProcessController
    content.vb: Public Property CurrentProcessController As IProcessController
  overload: VRBuilder.UX.ProcessControllerSetup.CurrentProcessController*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: VRBuilder.UX.ProcessControllerSetup.enforcedProcessController
  commentId: F:VRBuilder.UX.ProcessControllerSetup.enforcedProcessController
  id: enforcedProcessController
  parent: VRBuilder.UX.ProcessControllerSetup
  langs:
  - csharp
  - vb
  name: enforcedProcessController
  nameWithType: ProcessControllerSetup.enforcedProcessController
  fullName: VRBuilder.UX.ProcessControllerSetup.enforcedProcessController
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/ProcessControllerSetup.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: enforcedProcessController
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/ProcessControllerSetup.cs
    startLine: 37
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nEnforced process controller will be use.\n"
  example: []
  syntax:
    content: protected static IProcessController enforcedProcessController
    return:
      type: VRBuilder.UX.IProcessController
    content.vb: Protected Shared enforcedProcessController As IProcessController
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: VRBuilder.UX.ProcessControllerSetup.OnEnable
  commentId: M:VRBuilder.UX.ProcessControllerSetup.OnEnable
  id: OnEnable
  parent: VRBuilder.UX.ProcessControllerSetup
  langs:
  - csharp
  - vb
  name: OnEnable()
  nameWithType: ProcessControllerSetup.OnEnable()
  fullName: VRBuilder.UX.ProcessControllerSetup.OnEnable()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/ProcessControllerSetup.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnEnable
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/ProcessControllerSetup.cs
    startLine: 39
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  syntax:
    content: protected virtual void OnEnable()
    content.vb: Protected Overridable Sub OnEnable
  overload: VRBuilder.UX.ProcessControllerSetup.OnEnable*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VRBuilder.UX.ProcessControllerSetup.SetEnforcedProcessController(VRBuilder.UX.IProcessController)
  commentId: M:VRBuilder.UX.ProcessControllerSetup.SetEnforcedProcessController(VRBuilder.UX.IProcessController)
  id: SetEnforcedProcessController(VRBuilder.UX.IProcessController)
  parent: VRBuilder.UX.ProcessControllerSetup
  langs:
  - csharp
  - vb
  name: SetEnforcedProcessController(IProcessController)
  nameWithType: ProcessControllerSetup.SetEnforcedProcessController(IProcessController)
  fullName: VRBuilder.UX.ProcessControllerSetup.SetEnforcedProcessController(VRBuilder.UX.IProcessController)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/ProcessControllerSetup.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetEnforcedProcessController
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/ProcessControllerSetup.cs
    startLine: 149
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nEnforces the given controller to be used, if possible.\n"
  remarks: Scene has to be reloaded to use enforced ProcessController.
  example: []
  syntax:
    content: public static void SetEnforcedProcessController(IProcessController processController)
    parameters:
    - id: processController
      type: VRBuilder.UX.IProcessController
      description: Controller to be used.
    content.vb: Public Shared Sub SetEnforcedProcessController(processController As IProcessController)
  overload: VRBuilder.UX.ProcessControllerSetup.SetEnforcedProcessController*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.UX.ProcessControllerSetup.SetProcessControllerQualifiedName(System.String)
  commentId: M:VRBuilder.UX.ProcessControllerSetup.SetProcessControllerQualifiedName(System.String)
  id: SetProcessControllerQualifiedName(System.String)
  parent: VRBuilder.UX.ProcessControllerSetup
  langs:
  - csharp
  - vb
  name: SetProcessControllerQualifiedName(String)
  nameWithType: ProcessControllerSetup.SetProcessControllerQualifiedName(String)
  fullName: VRBuilder.UX.ProcessControllerSetup.SetProcessControllerQualifiedName(System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/ProcessControllerSetup.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetProcessControllerQualifiedName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/ProcessControllerSetup.cs
    startLine: 154
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  syntax:
    content: public void SetProcessControllerQualifiedName(string processControllerQualifiedName)
    parameters:
    - id: processControllerQualifiedName
      type: System.String
    content.vb: Public Sub SetProcessControllerQualifiedName(processControllerQualifiedName As String)
  overload: VRBuilder.UX.ProcessControllerSetup.SetProcessControllerQualifiedName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.UX.ProcessControllerSetup.ResetToDefault
  commentId: M:VRBuilder.UX.ProcessControllerSetup.ResetToDefault
  id: ResetToDefault
  parent: VRBuilder.UX.ProcessControllerSetup
  langs:
  - csharp
  - vb
  name: ResetToDefault()
  nameWithType: ProcessControllerSetup.ResetToDefault()
  fullName: VRBuilder.UX.ProcessControllerSetup.ResetToDefault()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/ProcessControllerSetup.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ResetToDefault
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/ProcessControllerSetup.cs
    startLine: 163
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nResets the <cref name=\"processControllerQualifiedName\"></cref> to the name of the process controller with the highest priority.\n"
  remarks: This may be used when instantiating a process controller prefab to make sure the default process controller is used.
  example: []
  syntax:
    content: public void ResetToDefault()
    content.vb: Public Sub ResetToDefault
  overload: VRBuilder.UX.ProcessControllerSetup.ResetToDefault*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.UX.IProcessController
  commentId: T:VRBuilder.UX.IProcessController
  parent: VRBuilder.UX
  name: IProcessController
  nameWithType: IProcessController
  fullName: VRBuilder.UX.IProcessController
- uid: VRBuilder.UX
  commentId: N:VRBuilder.UX
  name: VRBuilder.UX
  nameWithType: VRBuilder.UX
  fullName: VRBuilder.UX
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.UX.ProcessControllerSetup.CurrentProcessController*
  commentId: Overload:VRBuilder.UX.ProcessControllerSetup.CurrentProcessController
  name: CurrentProcessController
  nameWithType: ProcessControllerSetup.CurrentProcessController
  fullName: VRBuilder.UX.ProcessControllerSetup.CurrentProcessController
- uid: VRBuilder.UX.ProcessControllerSetup.OnEnable*
  commentId: Overload:VRBuilder.UX.ProcessControllerSetup.OnEnable
  name: OnEnable
  nameWithType: ProcessControllerSetup.OnEnable
  fullName: VRBuilder.UX.ProcessControllerSetup.OnEnable
- uid: VRBuilder.UX.ProcessControllerSetup.SetEnforcedProcessController*
  commentId: Overload:VRBuilder.UX.ProcessControllerSetup.SetEnforcedProcessController
  name: SetEnforcedProcessController
  nameWithType: ProcessControllerSetup.SetEnforcedProcessController
  fullName: VRBuilder.UX.ProcessControllerSetup.SetEnforcedProcessController
- uid: VRBuilder.UX.ProcessControllerSetup.SetProcessControllerQualifiedName*
  commentId: Overload:VRBuilder.UX.ProcessControllerSetup.SetProcessControllerQualifiedName
  name: SetProcessControllerQualifiedName
  nameWithType: ProcessControllerSetup.SetProcessControllerQualifiedName
  fullName: VRBuilder.UX.ProcessControllerSetup.SetProcessControllerQualifiedName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.UX.ProcessControllerSetup.ResetToDefault*
  commentId: Overload:VRBuilder.UX.ProcessControllerSetup.ResetToDefault
  name: ResetToDefault
  nameWithType: ProcessControllerSetup.ResetToDefault
  fullName: VRBuilder.UX.ProcessControllerSetup.ResetToDefault
