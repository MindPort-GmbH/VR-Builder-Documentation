### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.ProcessUtils.IOperationCommand`2
  commentId: T:VRBuilder.Core.ProcessUtils.IOperationCommand`2
  id: IOperationCommand`2
  parent: VRBuilder.Core.ProcessUtils
  children:
  - VRBuilder.Core.ProcessUtils.IOperationCommand`2.Execute(`0,`0)
  langs:
  - csharp
  - vb
  name: IOperationCommand<TOperand, TResult>
  nameWithType: IOperationCommand<TOperand, TResult>
  fullName: VRBuilder.Core.ProcessUtils.IOperationCommand<TOperand, TResult>
  type: Interface
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/Operations/IOperationCommand.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IOperationCommand
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/Operations/IOperationCommand.cs
    startLine: 9
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.ProcessUtils
  summary: "\nA command that executes an operation between two values.\n"
  example: []
  syntax:
    content: 'public interface IOperationCommand<TOperand, TResult> : IFormattable'
    typeParameters:
    - id: TOperand
      description: Type of the operands.
    - id: TResult
      description: Type of the returned result.
    content.vb: >-
      Public Interface IOperationCommand(Of TOperand, TResult)

          Inherits IFormattable
  inheritedMembers:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: IOperationCommand(Of TOperand, TResult)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: VRBuilder.Core.ProcessUtils.IOperationCommand(Of TOperand, TResult)
  name.vb: IOperationCommand(Of TOperand, TResult)
- uid: VRBuilder.Core.ProcessUtils.IOperationCommand`2.Execute(`0,`0)
  commentId: M:VRBuilder.Core.ProcessUtils.IOperationCommand`2.Execute(`0,`0)
  id: Execute(`0,`0)
  parent: VRBuilder.Core.ProcessUtils.IOperationCommand`2
  langs:
  - csharp
  - vb
  name: Execute(TOperand, TOperand)
  nameWithType: IOperationCommand<TOperand, TResult>.Execute(TOperand, TOperand)
  fullName: VRBuilder.Core.ProcessUtils.IOperationCommand<TOperand, TResult>.Execute(TOperand, TOperand)
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/Operations/IOperationCommand.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Execute
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/DataProperties/Operations/IOperationCommand.cs
    startLine: 14
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.ProcessUtils
  summary: "\nExecutes the operation on the provided operands.\n"
  example: []
  syntax:
    content: TResult Execute(TOperand leftOperand, TOperand rightOperand)
    parameters:
    - id: leftOperand
      type: '{TOperand}'
    - id: rightOperand
      type: '{TOperand}'
    return:
      type: '{TResult}'
    content.vb: Function Execute(leftOperand As TOperand, rightOperand As TOperand) As TResult
  overload: VRBuilder.Core.ProcessUtils.IOperationCommand`2.Execute*
  nameWithType.vb: IOperationCommand(Of TOperand, TResult).Execute(TOperand, TOperand)
  fullName.vb: VRBuilder.Core.ProcessUtils.IOperationCommand(Of TOperand, TResult).Execute(TOperand, TOperand)
references:
- uid: VRBuilder.Core.ProcessUtils
  commentId: N:VRBuilder.Core.ProcessUtils
  name: VRBuilder.Core.ProcessUtils
  nameWithType: VRBuilder.Core.ProcessUtils
  fullName: VRBuilder.Core.ProcessUtils
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  name: ToString(String, IFormatProvider)
  nameWithType: IFormattable.ToString(String, IFormatProvider)
  fullName: System.IFormattable.ToString(System.String, System.IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    nameWithType: IFormattable.ToString
    fullName: System.IFormattable.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    nameWithType: IFormattable.ToString
    fullName: System.IFormattable.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IFormatProvider
    name: IFormatProvider
    nameWithType: IFormatProvider
    fullName: System.IFormatProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.ProcessUtils.IOperationCommand`2.Execute*
  commentId: Overload:VRBuilder.Core.ProcessUtils.IOperationCommand`2.Execute
  name: Execute
  nameWithType: IOperationCommand<TOperand, TResult>.Execute
  fullName: VRBuilder.Core.ProcessUtils.IOperationCommand<TOperand, TResult>.Execute
  nameWithType.vb: IOperationCommand(Of TOperand, TResult).Execute
  fullName.vb: VRBuilder.Core.ProcessUtils.IOperationCommand(Of TOperand, TResult).Execute
- uid: '{TOperand}'
  commentId: '!:TOperand'
  definition: TOperand
  name: TOperand
  nameWithType: TOperand
  fullName: TOperand
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: TOperand
  name: TOperand
  nameWithType: TOperand
  fullName: TOperand
- uid: TResult
  commentId: '!:TResult'
  name: TResult
  nameWithType: TResult
  fullName: TResult
