### YamlMime:ManagedReference
items:
- uid: VRBuilder.UX.SpectatorCameraDummy
  commentId: T:VRBuilder.UX.SpectatorCameraDummy
  id: SpectatorCameraDummy
  parent: VRBuilder.UX
  children:
  - VRBuilder.UX.SpectatorCameraDummy.Awake
  - VRBuilder.UX.SpectatorCameraDummy.CameraName
  langs:
  - csharp
  - vb
  name: SpectatorCameraDummy
  nameWithType: SpectatorCameraDummy
  fullName: VRBuilder.UX.SpectatorCameraDummy
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/UI/Spectator/SpectatorCameraDummy.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SpectatorCameraDummy
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/UI/Spectator/SpectatorCameraDummy.cs
    startLine: 8
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nDummy object which can be used to set viewpoints into the scene.\nWill remove its camera component on runtime and can be used in combination with <xref href=\"VRBuilder.UX.SpectatorCamera\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class SpectatorCameraDummy : MonoBehaviour'
    content.vb: >-
      Public Class SpectatorCameraDummy
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.UX.SpectatorCameraDummy.CameraName
  commentId: F:VRBuilder.UX.SpectatorCameraDummy.CameraName
  id: CameraName
  parent: VRBuilder.UX.SpectatorCameraDummy
  langs:
  - csharp
  - vb
  name: CameraName
  nameWithType: SpectatorCameraDummy.CameraName
  fullName: VRBuilder.UX.SpectatorCameraDummy.CameraName
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/UI/Spectator/SpectatorCameraDummy.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CameraName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/UI/Spectator/SpectatorCameraDummy.cs
    startLine: 12
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  syntax:
    content: public string CameraName
    return:
      type: System.String
    content.vb: Public CameraName As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.UX.SpectatorCameraDummy.Awake
  commentId: M:VRBuilder.UX.SpectatorCameraDummy.Awake
  id: Awake
  parent: VRBuilder.UX.SpectatorCameraDummy
  langs:
  - csharp
  - vb
  name: Awake()
  nameWithType: SpectatorCameraDummy.Awake()
  fullName: VRBuilder.UX.SpectatorCameraDummy.Awake()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/UI/Spectator/SpectatorCameraDummy.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Awake
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/UI/Spectator/SpectatorCameraDummy.cs
    startLine: 14
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  syntax:
    content: public void Awake()
    content.vb: Public Sub Awake
  overload: VRBuilder.UX.SpectatorCameraDummy.Awake*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.UX.SpectatorCamera
  commentId: T:VRBuilder.UX.SpectatorCamera
  name: SpectatorCamera
  nameWithType: SpectatorCamera
  fullName: VRBuilder.UX.SpectatorCamera
- uid: VRBuilder.UX
  commentId: N:VRBuilder.UX
  name: VRBuilder.UX
  nameWithType: VRBuilder.UX
  fullName: VRBuilder.UX
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.UX.SpectatorCameraDummy.Awake*
  commentId: Overload:VRBuilder.UX.SpectatorCameraDummy.Awake
  name: Awake
  nameWithType: SpectatorCameraDummy.Awake
  fullName: VRBuilder.UX.SpectatorCameraDummy.Awake
