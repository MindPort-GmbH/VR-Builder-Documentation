### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.IChapterData
  commentId: T:VRBuilder.Core.IChapterData
  id: IChapterData
  parent: VRBuilder.Core
  children:
  - VRBuilder.Core.IChapterData.FirstStep
  - VRBuilder.Core.IChapterData.Steps
  langs:
  - csharp
  - vb
  name: IChapterData
  nameWithType: IChapterData
  fullName: VRBuilder.Core.IChapterData
  type: Interface
  source:
    remote:
      path: Source/Core/Runtime/IChapterData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IChapterData
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IChapterData.cs
    startLine: 12
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nThe <xref href=\"VRBuilder.Core.IChapter\" data-throw-if-not-resolved=\"false\"></xref>&apos;s data interface.\n"
  example: []
  syntax:
    content: 'public interface IChapterData : IEntitySequenceDataWithMode<IStep>, IEntitySequenceData<IStep>, IEntityCollectionData<IStep>, IEntityCollectionData, IEntitySequenceData, IModeData, IRenameableData, INamedData, IData'
    content.vb: >-
      Public Interface IChapterData

          Inherits IEntitySequenceDataWithMode(Of IStep), IRenameableData
  inheritedMembers:
  - VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IStep}.Current
  - VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IStep}.GetChildren
  - VRBuilder.Core.Configuration.Modes.IModeData.Mode
  - VRBuilder.Core.IRenameableData.SetName(System.String)
  - VRBuilder.Core.INamedData.Name
  - VRBuilder.Core.IData.Metadata
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VRBuilder.Core.IChapterData.FirstStep
  commentId: P:VRBuilder.Core.IChapterData.FirstStep
  id: FirstStep
  parent: VRBuilder.Core.IChapterData
  langs:
  - csharp
  - vb
  name: FirstStep
  nameWithType: IChapterData.FirstStep
  fullName: VRBuilder.Core.IChapterData.FirstStep
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/IChapterData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: FirstStep
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IChapterData.cs
    startLine: 17
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nThe <xref href=\"VRBuilder.Core.IStep\" data-throw-if-not-resolved=\"false\"></xref> from which the chapter starts.\n"
  example: []
  syntax:
    content: IStep FirstStep { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.IStep
    content.vb: Property FirstStep As IStep
  overload: VRBuilder.Core.IChapterData.FirstStep*
  modifiers.csharp:
  - get
  - set
- uid: VRBuilder.Core.IChapterData.Steps
  commentId: P:VRBuilder.Core.IChapterData.Steps
  id: Steps
  parent: VRBuilder.Core.IChapterData
  langs:
  - csharp
  - vb
  name: Steps
  nameWithType: IChapterData.Steps
  fullName: VRBuilder.Core.IChapterData.Steps
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/IChapterData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Steps
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IChapterData.cs
    startLine: 22
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nThe list of all <xref href=\"VRBuilder.Core.IStep\" data-throw-if-not-resolved=\"false\"></xref>s in the chapter.\n"
  example: []
  syntax:
    content: IList<IStep> Steps { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{VRBuilder.Core.IStep}
    content.vb: Property Steps As IList(Of IStep)
  overload: VRBuilder.Core.IChapterData.Steps*
  modifiers.csharp:
  - get
  - set
references:
- uid: VRBuilder.Core.IChapter
  commentId: T:VRBuilder.Core.IChapter
  parent: VRBuilder.Core
  name: IChapter
  nameWithType: IChapter
  fullName: VRBuilder.Core.IChapter
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IStep}.Current
  commentId: P:VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IStep}.Current
  parent: VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IStep}
  definition: VRBuilder.Core.EntityOwners.IEntitySequenceData`1.Current
  name: Current
  nameWithType: IEntitySequenceData<IStep>.Current
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData<VRBuilder.Core.IStep>.Current
  nameWithType.vb: IEntitySequenceData(Of IStep).Current
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData(Of VRBuilder.Core.IStep).Current
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IStep}.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IStep}.GetChildren
  parent: VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IStep}
  definition: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: IEntityCollectionData<IStep>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<VRBuilder.Core.IStep>.GetChildren()
  nameWithType.vb: IEntityCollectionData(Of IStep).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of VRBuilder.Core.IStep).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData<IStep>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<VRBuilder.Core.IStep>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData(Of IStep).GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of VRBuilder.Core.IStep).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes.IModeData.Mode
  commentId: P:VRBuilder.Core.Configuration.Modes.IModeData.Mode
  parent: VRBuilder.Core.Configuration.Modes.IModeData
  name: Mode
  nameWithType: IModeData.Mode
  fullName: VRBuilder.Core.Configuration.Modes.IModeData.Mode
- uid: VRBuilder.Core.IRenameableData.SetName(System.String)
  commentId: M:VRBuilder.Core.IRenameableData.SetName(System.String)
  parent: VRBuilder.Core.IRenameableData
  isExternal: true
  name: SetName(String)
  nameWithType: IRenameableData.SetName(String)
  fullName: VRBuilder.Core.IRenameableData.SetName(System.String)
  spec.csharp:
  - uid: VRBuilder.Core.IRenameableData.SetName(System.String)
    name: SetName
    nameWithType: IRenameableData.SetName
    fullName: VRBuilder.Core.IRenameableData.SetName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IRenameableData.SetName(System.String)
    name: SetName
    nameWithType: IRenameableData.SetName
    fullName: VRBuilder.Core.IRenameableData.SetName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.INamedData.Name
  commentId: P:VRBuilder.Core.INamedData.Name
  parent: VRBuilder.Core.INamedData
  name: Name
  nameWithType: INamedData.Name
  fullName: VRBuilder.Core.INamedData.Name
- uid: VRBuilder.Core.IData.Metadata
  commentId: P:VRBuilder.Core.IData.Metadata
  parent: VRBuilder.Core.IData
  name: Metadata
  nameWithType: IData.Metadata
  fullName: VRBuilder.Core.IData.Metadata
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1.Current
  commentId: P:VRBuilder.Core.EntityOwners.IEntitySequenceData`1.Current
  name: Current
  nameWithType: IEntitySequenceData<TEntity>.Current
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>.Current
  nameWithType.vb: IEntitySequenceData(Of TEntity).Current
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData(Of TEntity).Current
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IStep}
  commentId: T:VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IStep}
  parent: VRBuilder.Core.EntityOwners
  definition: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
  name: IEntitySequenceData<IStep>
  nameWithType: IEntitySequenceData<IStep>
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData<VRBuilder.Core.IStep>
  nameWithType.vb: IEntitySequenceData(Of IStep)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData(Of VRBuilder.Core.IStep)
  name.vb: IEntitySequenceData(Of IStep)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
    name: IEntitySequenceData
    nameWithType: IEntitySequenceData
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
    name: IEntitySequenceData
    nameWithType: IEntitySequenceData
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: IEntityCollectionData<TEntity>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren()
  nameWithType.vb: IEntityCollectionData(Of TEntity).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData<TEntity>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData(Of TEntity).GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IStep}
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IStep}
  parent: VRBuilder.Core.EntityOwners
  definition: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  name: IEntityCollectionData<IStep>
  nameWithType: IEntityCollectionData<IStep>
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<VRBuilder.Core.IStep>
  nameWithType.vb: IEntityCollectionData(Of IStep)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of VRBuilder.Core.IStep)
  name.vb: IEntityCollectionData(Of IStep)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes.IModeData
  commentId: T:VRBuilder.Core.Configuration.Modes.IModeData
  parent: VRBuilder.Core.Configuration.Modes
  name: IModeData
  nameWithType: IModeData
  fullName: VRBuilder.Core.Configuration.Modes.IModeData
- uid: VRBuilder.Core.IRenameableData
  commentId: T:VRBuilder.Core.IRenameableData
  parent: VRBuilder.Core
  name: IRenameableData
  nameWithType: IRenameableData
  fullName: VRBuilder.Core.IRenameableData
- uid: VRBuilder.Core.INamedData
  commentId: T:VRBuilder.Core.INamedData
  parent: VRBuilder.Core
  name: INamedData
  nameWithType: INamedData
  fullName: VRBuilder.Core.INamedData
- uid: VRBuilder.Core.IData
  commentId: T:VRBuilder.Core.IData
  parent: VRBuilder.Core
  name: IData
  nameWithType: IData
  fullName: VRBuilder.Core.IData
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
  commentId: T:VRBuilder.Core.EntityOwners.IEntitySequenceData`1
  name: IEntitySequenceData<TEntity>
  nameWithType: IEntitySequenceData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>
  nameWithType.vb: IEntitySequenceData(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData(Of TEntity)
  name.vb: IEntitySequenceData(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
    name: IEntitySequenceData
    nameWithType: IEntitySequenceData
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
    name: IEntitySequenceData
    nameWithType: IEntitySequenceData
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners
  commentId: N:VRBuilder.Core.EntityOwners
  name: VRBuilder.Core.EntityOwners
  nameWithType: VRBuilder.Core.EntityOwners
  fullName: VRBuilder.Core.EntityOwners
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  name: IEntityCollectionData<TEntity>
  nameWithType: IEntityCollectionData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>
  nameWithType.vb: IEntityCollectionData(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity)
  name.vb: IEntityCollectionData(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes
  commentId: N:VRBuilder.Core.Configuration.Modes
  name: VRBuilder.Core.Configuration.Modes
  nameWithType: VRBuilder.Core.Configuration.Modes
  fullName: VRBuilder.Core.Configuration.Modes
- uid: VRBuilder.Core.IStep
  commentId: T:VRBuilder.Core.IStep
  parent: VRBuilder.Core
  name: IStep
  nameWithType: IStep
  fullName: VRBuilder.Core.IStep
- uid: VRBuilder.Core.IChapterData.FirstStep*
  commentId: Overload:VRBuilder.Core.IChapterData.FirstStep
  name: FirstStep
  nameWithType: IChapterData.FirstStep
  fullName: VRBuilder.Core.IChapterData.FirstStep
- uid: VRBuilder.Core.IChapterData.Steps*
  commentId: Overload:VRBuilder.Core.IChapterData.Steps
  name: Steps
  nameWithType: IChapterData.Steps
  fullName: VRBuilder.Core.IChapterData.Steps
- uid: System.Collections.Generic.IList{VRBuilder.Core.IStep}
  commentId: T:System.Collections.Generic.IList{VRBuilder.Core.IStep}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IStep>
  nameWithType: IList<IStep>
  fullName: System.Collections.Generic.IList<VRBuilder.Core.IStep>
  nameWithType.vb: IList(Of IStep)
  fullName.vb: System.Collections.Generic.IList(Of VRBuilder.Core.IStep)
  name.vb: IList(Of IStep)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
