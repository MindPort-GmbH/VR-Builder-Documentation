### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.StepMetadata
  commentId: T:VRBuilder.Core.StepMetadata
  id: StepMetadata
  parent: VRBuilder.Core
  children:
  - VRBuilder.Core.StepMetadata.Guid
  - VRBuilder.Core.StepMetadata.Position
  - VRBuilder.Core.StepMetadata.StepType
  langs:
  - csharp
  - vb
  name: StepMetadata
  nameWithType: StepMetadata
  fullName: VRBuilder.Core.StepMetadata
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/StepMetadata.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StepMetadata
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/StepMetadata.cs
    startLine: 13
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nImplementation of <xref href=\"VRBuilder.Core.IMetadata\" data-throw-if-not-resolved=\"false\"></xref> adapted for <xref href=\"VRBuilder.Core.IStep\" data-throw-if-not-resolved=\"false\"></xref> data.\n"
  example: []
  syntax:
    content: 'public class StepMetadata : IMetadata'
    content.vb: >-
      Public Class StepMetadata

          Implements IMetadata
  inheritance:
  - System.Object
  implements:
  - VRBuilder.Core.IMetadata
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.StepMetadata.Position
  commentId: P:VRBuilder.Core.StepMetadata.Position
  id: Position
  parent: VRBuilder.Core.StepMetadata
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: StepMetadata.Position
  fullName: VRBuilder.Core.StepMetadata.Position
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/StepMetadata.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Position
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/StepMetadata.cs
    startLine: 18
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nGraphical position of current <xref href=\"VRBuilder.Core.IStep\" data-throw-if-not-resolved=\"false\"></xref> on the &apos;Workflow&apos; window.\n"
  example: []
  syntax:
    content: public Vector2 Position { get; set; }
    parameters: []
    return:
      type: Vector2
    content.vb: Public Property Position As Vector2
  overload: VRBuilder.Core.StepMetadata.Position*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.StepMetadata.StepType
  commentId: P:VRBuilder.Core.StepMetadata.StepType
  id: StepType
  parent: VRBuilder.Core.StepMetadata
  langs:
  - csharp
  - vb
  name: StepType
  nameWithType: StepMetadata.StepType
  fullName: VRBuilder.Core.StepMetadata.StepType
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/StepMetadata.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StepType
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/StepMetadata.cs
    startLine: 23
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nGraphical representation of current <xref href=\"VRBuilder.Core.IStep\" data-throw-if-not-resolved=\"false\"></xref> on the &apos;Workflow&apos; window.\n"
  example: []
  syntax:
    content: public string StepType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property StepType As String
  overload: VRBuilder.Core.StepMetadata.StepType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.StepMetadata.Guid
  commentId: P:VRBuilder.Core.StepMetadata.Guid
  id: Guid
  parent: VRBuilder.Core.StepMetadata
  langs:
  - csharp
  - vb
  name: Guid
  nameWithType: StepMetadata.Guid
  fullName: VRBuilder.Core.StepMetadata.Guid
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/StepMetadata.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Guid
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/StepMetadata.cs
    startLine: 28
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nUnique identifier for step.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Guid Guid { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: >-
      <DataMember>

      Public Property Guid As Guid
  overload: VRBuilder.Core.StepMetadata.Guid*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Core.IMetadata
  commentId: T:VRBuilder.Core.IMetadata
  parent: VRBuilder.Core
  name: IMetadata
  nameWithType: IMetadata
  fullName: VRBuilder.Core.IMetadata
- uid: VRBuilder.Core.IStep
  commentId: T:VRBuilder.Core.IStep
  parent: VRBuilder.Core
  name: IStep
  nameWithType: IStep
  fullName: VRBuilder.Core.IStep
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.StepMetadata.Position*
  commentId: Overload:VRBuilder.Core.StepMetadata.Position
  name: Position
  nameWithType: StepMetadata.Position
  fullName: VRBuilder.Core.StepMetadata.Position
- uid: Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Vector2
- uid: VRBuilder.Core.StepMetadata.StepType*
  commentId: Overload:VRBuilder.Core.StepMetadata.StepType
  name: StepType
  nameWithType: StepMetadata.StepType
  fullName: VRBuilder.Core.StepMetadata.StepType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Core.StepMetadata.Guid*
  commentId: Overload:VRBuilder.Core.StepMetadata.Guid
  name: Guid
  nameWithType: StepMetadata.Guid
  fullName: VRBuilder.Core.StepMetadata.Guid
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
