### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Configurator`1
  commentId: T:VRBuilder.Core.Configurator`1
  id: Configurator`1
  parent: VRBuilder.Core
  children:
  - VRBuilder.Core.Configurator`1.#ctor(`0)
  - VRBuilder.Core.Configurator`1.Configure(VRBuilder.Core.Configuration.Modes.IMode,VRBuilder.Core.Stage)
  - VRBuilder.Core.Configurator`1.Data
  langs:
  - csharp
  - vb
  name: Configurator<TData>
  nameWithType: Configurator<TData>
  fullName: VRBuilder.Core.Configurator<TData>
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Configurator.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Configurator
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configurator.cs
    startLine: 11
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nA base class for entities&apos; configurators which have access to their entities&apos; data.\n"
  example: []
  syntax:
    content: 'public abstract class Configurator<TData> : IConfigurator where TData : IData'
    typeParameters:
    - id: TData
    content.vb: >-
      Public MustInherit Class Configurator(Of TData As IData)

          Implements IConfigurator
  inheritance:
  - System.Object
  derivedClasses:
  - VRBuilder.Core.EntityOwners.FoldedLifeCycleConfigurator`1
  - VRBuilder.Core.EntityOwners.ParallelConfigurator`1
  - VRBuilder.Core.EntityOwners.SequenceConfigurator`1
  implements:
  - VRBuilder.Core.Configuration.Modes.IConfigurator
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: Configurator(Of TData)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: VRBuilder.Core.Configurator(Of TData)
  name.vb: Configurator(Of TData)
- uid: VRBuilder.Core.Configurator`1.Data
  commentId: P:VRBuilder.Core.Configurator`1.Data
  id: Data
  parent: VRBuilder.Core.Configurator`1
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: Configurator<TData>.Data
  fullName: VRBuilder.Core.Configurator<TData>.Data
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Configurator.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Data
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configurator.cs
    startLine: 16
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nThe data to configure.\n"
  example: []
  syntax:
    content: protected TData Data { get; }
    parameters: []
    return:
      type: '{TData}'
    content.vb: Protected ReadOnly Property Data As TData
  overload: VRBuilder.Core.Configurator`1.Data*
  nameWithType.vb: Configurator(Of TData).Data
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: VRBuilder.Core.Configurator(Of TData).Data
- uid: VRBuilder.Core.Configurator`1.#ctor(`0)
  commentId: M:VRBuilder.Core.Configurator`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: VRBuilder.Core.Configurator`1
  langs:
  - csharp
  - vb
  name: Configurator(TData)
  nameWithType: Configurator<TData>.Configurator(TData)
  fullName: VRBuilder.Core.Configurator<TData>.Configurator(TData)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/Configurator.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configurator.cs
    startLine: 18
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  syntax:
    content: protected Configurator(TData data)
    parameters:
    - id: data
      type: '{TData}'
    content.vb: Protected Sub New(data As TData)
  overload: VRBuilder.Core.Configurator`1.#ctor*
  nameWithType.vb: Configurator(Of TData).Configurator(TData)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: VRBuilder.Core.Configurator(Of TData).Configurator(TData)
- uid: VRBuilder.Core.Configurator`1.Configure(VRBuilder.Core.Configuration.Modes.IMode,VRBuilder.Core.Stage)
  commentId: M:VRBuilder.Core.Configurator`1.Configure(VRBuilder.Core.Configuration.Modes.IMode,VRBuilder.Core.Stage)
  id: Configure(VRBuilder.Core.Configuration.Modes.IMode,VRBuilder.Core.Stage)
  parent: VRBuilder.Core.Configurator`1
  langs:
  - csharp
  - vb
  name: Configure(IMode, Stage)
  nameWithType: Configurator<TData>.Configure(IMode, Stage)
  fullName: VRBuilder.Core.Configurator<TData>.Configure(VRBuilder.Core.Configuration.Modes.IMode, VRBuilder.Core.Stage)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configurator.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Configure
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configurator.cs
    startLine: 24
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: public abstract void Configure(IMode mode, Stage stage)
    parameters:
    - id: mode
      type: VRBuilder.Core.Configuration.Modes.IMode
    - id: stage
      type: VRBuilder.Core.Stage
    content.vb: Public MustOverride Sub Configure(mode As IMode, stage As Stage)
  overload: VRBuilder.Core.Configurator`1.Configure*
  implements:
  - VRBuilder.Core.Configuration.Modes.IConfigurator.Configure(VRBuilder.Core.Configuration.Modes.IMode,VRBuilder.Core.Stage)
  nameWithType.vb: Configurator(Of TData).Configure(IMode, Stage)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: VRBuilder.Core.Configurator(Of TData).Configure(VRBuilder.Core.Configuration.Modes.IMode, VRBuilder.Core.Stage)
references:
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Configuration.Modes.IConfigurator
  commentId: T:VRBuilder.Core.Configuration.Modes.IConfigurator
  parent: VRBuilder.Core.Configuration.Modes
  name: IConfigurator
  nameWithType: IConfigurator
  fullName: VRBuilder.Core.Configuration.Modes.IConfigurator
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Configuration.Modes
  commentId: N:VRBuilder.Core.Configuration.Modes
  name: VRBuilder.Core.Configuration.Modes
  nameWithType: VRBuilder.Core.Configuration.Modes
  fullName: VRBuilder.Core.Configuration.Modes
- uid: VRBuilder.Core.Configurator`1.Data*
  commentId: Overload:VRBuilder.Core.Configurator`1.Data
  name: Data
  nameWithType: Configurator<TData>.Data
  fullName: VRBuilder.Core.Configurator<TData>.Data
  nameWithType.vb: Configurator(Of TData).Data
  fullName.vb: VRBuilder.Core.Configurator(Of TData).Data
- uid: '{TData}'
  commentId: '!:TData'
  definition: TData
  name: TData
  nameWithType: TData
  fullName: TData
- uid: TData
  name: TData
  nameWithType: TData
  fullName: TData
- uid: VRBuilder.Core.Configurator`1.#ctor*
  commentId: Overload:VRBuilder.Core.Configurator`1.#ctor
  name: Configurator
  nameWithType: Configurator<TData>.Configurator
  fullName: VRBuilder.Core.Configurator<TData>.Configurator
  nameWithType.vb: Configurator(Of TData).Configurator
  fullName.vb: VRBuilder.Core.Configurator(Of TData).Configurator
- uid: VRBuilder.Core.Configurator`1.Configure*
  commentId: Overload:VRBuilder.Core.Configurator`1.Configure
  name: Configure
  nameWithType: Configurator<TData>.Configure
  fullName: VRBuilder.Core.Configurator<TData>.Configure
  nameWithType.vb: Configurator(Of TData).Configure
  fullName.vb: VRBuilder.Core.Configurator(Of TData).Configure
- uid: VRBuilder.Core.Configuration.Modes.IConfigurator.Configure(VRBuilder.Core.Configuration.Modes.IMode,VRBuilder.Core.Stage)
  commentId: M:VRBuilder.Core.Configuration.Modes.IConfigurator.Configure(VRBuilder.Core.Configuration.Modes.IMode,VRBuilder.Core.Stage)
  parent: VRBuilder.Core.Configuration.Modes.IConfigurator
  name: Configure(IMode, Stage)
  nameWithType: IConfigurator.Configure(IMode, Stage)
  fullName: VRBuilder.Core.Configuration.Modes.IConfigurator.Configure(VRBuilder.Core.Configuration.Modes.IMode, VRBuilder.Core.Stage)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.IConfigurator.Configure(VRBuilder.Core.Configuration.Modes.IMode,VRBuilder.Core.Stage)
    name: Configure
    nameWithType: IConfigurator.Configure
    fullName: VRBuilder.Core.Configuration.Modes.IConfigurator.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.Stage
    name: Stage
    nameWithType: Stage
    fullName: VRBuilder.Core.Stage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.IConfigurator.Configure(VRBuilder.Core.Configuration.Modes.IMode,VRBuilder.Core.Stage)
    name: Configure
    nameWithType: IConfigurator.Configure
    fullName: VRBuilder.Core.Configuration.Modes.IConfigurator.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.Stage
    name: Stage
    nameWithType: Stage
    fullName: VRBuilder.Core.Stage
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes.IMode
  commentId: T:VRBuilder.Core.Configuration.Modes.IMode
  parent: VRBuilder.Core.Configuration.Modes
  name: IMode
  nameWithType: IMode
  fullName: VRBuilder.Core.Configuration.Modes.IMode
- uid: VRBuilder.Core.Stage
  commentId: T:VRBuilder.Core.Stage
  parent: VRBuilder.Core
  name: Stage
  nameWithType: Stage
  fullName: VRBuilder.Core.Stage
