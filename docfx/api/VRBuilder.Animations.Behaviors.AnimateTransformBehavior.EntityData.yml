### YamlMime:ManagedReference
items:
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData
  commentId: T:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData
  id: AnimateTransformBehavior.EntityData
  parent: VRBuilder.Animations.Behaviors
  children:
  - VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Duration
  - VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Metadata
  - VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Name
  - VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.PingPong
  - VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.PositionCurve
  - VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Repeats
  - VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.RotationCurve
  - VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.ScaleCurve
  - VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Target
  - VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetObject
  - VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetTransform
  - VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetTransformProvider
  langs:
  - csharp
  - vb
  name: AnimateTransformBehavior.EntityData
  nameWithType: AnimateTransformBehavior.EntityData
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData
  type: Class
  source:
    remote:
      path: Source/Runtime/Behaviors/AnimateTransformBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Animations-for-VR-Builder.git
    id: EntityData
    path: ../../Assets/MindPort/VR Builder/Add-ons/Animations/Source/Runtime/Behaviors/AnimateTransformBehavior.cs
    startLine: 26
  assemblies:
  - VRBuilder.Animations
  namespace: VRBuilder.Animations.Behaviors
  summary: "\nThe &quot;follow path&quot; behavior&apos;s data.\n"
  example: []
  syntax:
    content: >-
      [DisplayName("Animate Transform")]

      [DataContract(IsReference = true)]

      public class EntityData : IBehaviorData, INamedData, IData
    content.vb: >-
      <DisplayName("Animate Transform")>

      <DataContract(IsReference:=True)>

      Public Class EntityData
          Implements IBehaviorData, INamedData, IData
  inheritance:
  - System.Object
  implements:
  - VRBuilder.Core.Behaviors.IBehaviorData
  - VRBuilder.Core.INamedData
  - VRBuilder.Core.IData
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Animate Transform
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetObject
  commentId: P:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetObject
  id: TargetObject
  parent: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData
  langs:
  - csharp
  - vb
  name: TargetObject
  nameWithType: AnimateTransformBehavior.EntityData.TargetObject
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetObject
  type: Property
  source:
    remote:
      path: Source/Runtime/Behaviors/AnimateTransformBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Animations-for-VR-Builder.git
    id: TargetObject
    path: ../../Assets/MindPort/VR Builder/Add-ons/Animations/Source/Runtime/Behaviors/AnimateTransformBehavior.cs
    startLine: 33
  assemblies:
  - VRBuilder.Animations
  namespace: VRBuilder.Animations.Behaviors
  summary: "\nTarget scene object to be transformed.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DisplayName("Object")]

      public SingleSceneObjectReference TargetObject { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.SceneObjects.SingleSceneObjectReference
    content.vb: >-
      <DataMember>

      <DisplayName("Object")>

      Public Property TargetObject As SingleSceneObjectReference
  overload: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetObject*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Object
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Target
  commentId: P:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Target
  id: Target
  parent: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: AnimateTransformBehavior.EntityData.Target
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Target
  type: Property
  source:
    remote:
      path: Source/Runtime/Behaviors/AnimateTransformBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Animations-for-VR-Builder.git
    id: Target
    path: ../../Assets/MindPort/VR Builder/Add-ons/Animations/Source/Runtime/Behaviors/AnimateTransformBehavior.cs
    startLine: 37
  assemblies:
  - VRBuilder.Animations
  namespace: VRBuilder.Animations.Behaviors
  syntax:
    content: >-
      [DataMember]

      [Obsolete("Use TargetObject instead.")]

      [LegacyProperty("TargetObject")]

      public SceneObjectReference Target { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.SceneObjects.SceneObjectReference
    content.vb: >-
      <DataMember>

      <Obsolete("Use TargetObject instead.")>

      <LegacyProperty("TargetObject")>

      Public Property Target As SceneObjectReference
  overload: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Target*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use TargetObject instead.
  - type: VRBuilder.Core.Attributes.LegacyPropertyAttribute
    ctor: VRBuilder.Core.Attributes.LegacyPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TargetObject
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetTransformProvider
  commentId: P:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetTransformProvider
  id: TargetTransformProvider
  parent: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData
  langs:
  - csharp
  - vb
  name: TargetTransformProvider
  nameWithType: AnimateTransformBehavior.EntityData.TargetTransformProvider
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetTransformProvider
  type: Property
  source:
    remote:
      path: Source/Runtime/Behaviors/AnimateTransformBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Animations-for-VR-Builder.git
    id: TargetTransformProvider
    path: ../../Assets/MindPort/VR Builder/Add-ons/Animations/Source/Runtime/Behaviors/AnimateTransformBehavior.cs
    startLine: 46
  assemblies:
  - VRBuilder.Animations
  namespace: VRBuilder.Animations.Behaviors
  summary: "\nObject defining the target transform values.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DisplayName("Final transform provider")]

      public SingleSceneObjectReference TargetTransformProvider { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.SceneObjects.SingleSceneObjectReference
    content.vb: >-
      <DataMember>

      <DisplayName("Final transform provider")>

      Public Property TargetTransformProvider As SingleSceneObjectReference
  overload: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetTransformProvider*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Final transform provider
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetTransform
  commentId: P:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetTransform
  id: TargetTransform
  parent: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData
  langs:
  - csharp
  - vb
  name: TargetTransform
  nameWithType: AnimateTransformBehavior.EntityData.TargetTransform
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetTransform
  type: Property
  source:
    remote:
      path: Source/Runtime/Behaviors/AnimateTransformBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Animations-for-VR-Builder.git
    id: TargetTransform
    path: ../../Assets/MindPort/VR Builder/Add-ons/Animations/Source/Runtime/Behaviors/AnimateTransformBehavior.cs
    startLine: 50
  assemblies:
  - VRBuilder.Animations
  namespace: VRBuilder.Animations.Behaviors
  syntax:
    content: >-
      [DataMember]

      [Obsolete("Use TargetTransformProvider instead.")]

      [LegacyProperty("TargetTransformProvider")]

      public SceneObjectReference TargetTransform { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.SceneObjects.SceneObjectReference
    content.vb: >-
      <DataMember>

      <Obsolete("Use TargetTransformProvider instead.")>

      <LegacyProperty("TargetTransformProvider")>

      Public Property TargetTransform As SceneObjectReference
  overload: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetTransform*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use TargetTransformProvider instead.
  - type: VRBuilder.Core.Attributes.LegacyPropertyAttribute
    ctor: VRBuilder.Core.Attributes.LegacyPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: TargetTransformProvider
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Duration
  commentId: P:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Duration
  id: Duration
  parent: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: AnimateTransformBehavior.EntityData.Duration
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Duration
  type: Property
  source:
    remote:
      path: Source/Runtime/Behaviors/AnimateTransformBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Animations-for-VR-Builder.git
    id: Duration
    path: ../../Assets/MindPort/VR Builder/Add-ons/Animations/Source/Runtime/Behaviors/AnimateTransformBehavior.cs
    startLine: 59
  assemblies:
  - VRBuilder.Animations
  namespace: VRBuilder.Animations.Behaviors
  summary: "\nDuration of the transition. If duration is equal or less than zero, the new transform will be applied immediately.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DisplayName("Duration (in seconds)")]

      public float Duration { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      <DisplayName("Duration (in seconds)")>

      Public Property Duration As Single
  overload: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Duration*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Duration (in seconds)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.PositionCurve
  commentId: P:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.PositionCurve
  id: PositionCurve
  parent: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData
  langs:
  - csharp
  - vb
  name: PositionCurve
  nameWithType: AnimateTransformBehavior.EntityData.PositionCurve
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.PositionCurve
  type: Property
  source:
    remote:
      path: Source/Runtime/Behaviors/AnimateTransformBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Animations-for-VR-Builder.git
    id: PositionCurve
    path: ../../Assets/MindPort/VR Builder/Add-ons/Animations/Source/Runtime/Behaviors/AnimateTransformBehavior.cs
    startLine: 66
  assemblies:
  - VRBuilder.Animations
  namespace: VRBuilder.Animations.Behaviors
  summary: "\nDetermines the position of the object at a given time. The curve is normalized, the duration of the animation can be set in the <xref href=\"VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Duration\" data-throw-if-not-resolved=\"false\"></xref> field.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DisplayName("Position curve")]

      public AnimationCurve PositionCurve { get; set; }
    parameters: []
    return:
      type: AnimationCurve
    content.vb: >-
      <DataMember>

      <DisplayName("Position curve")>

      Public Property PositionCurve As AnimationCurve
  overload: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.PositionCurve*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Position curve
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.RotationCurve
  commentId: P:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.RotationCurve
  id: RotationCurve
  parent: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData
  langs:
  - csharp
  - vb
  name: RotationCurve
  nameWithType: AnimateTransformBehavior.EntityData.RotationCurve
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.RotationCurve
  type: Property
  source:
    remote:
      path: Source/Runtime/Behaviors/AnimateTransformBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Animations-for-VR-Builder.git
    id: RotationCurve
    path: ../../Assets/MindPort/VR Builder/Add-ons/Animations/Source/Runtime/Behaviors/AnimateTransformBehavior.cs
    startLine: 73
  assemblies:
  - VRBuilder.Animations
  namespace: VRBuilder.Animations.Behaviors
  summary: "\nDetermines the rotation of the object at a given time. The curve is normalized, the duration of the animation can be set in the <xref href=\"VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Duration\" data-throw-if-not-resolved=\"false\"></xref> field.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DisplayName("Rotation curve")]

      public AnimationCurve RotationCurve { get; set; }
    parameters: []
    return:
      type: AnimationCurve
    content.vb: >-
      <DataMember>

      <DisplayName("Rotation curve")>

      Public Property RotationCurve As AnimationCurve
  overload: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.RotationCurve*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Rotation curve
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.ScaleCurve
  commentId: P:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.ScaleCurve
  id: ScaleCurve
  parent: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData
  langs:
  - csharp
  - vb
  name: ScaleCurve
  nameWithType: AnimateTransformBehavior.EntityData.ScaleCurve
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.ScaleCurve
  type: Property
  source:
    remote:
      path: Source/Runtime/Behaviors/AnimateTransformBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Animations-for-VR-Builder.git
    id: ScaleCurve
    path: ../../Assets/MindPort/VR Builder/Add-ons/Animations/Source/Runtime/Behaviors/AnimateTransformBehavior.cs
    startLine: 80
  assemblies:
  - VRBuilder.Animations
  namespace: VRBuilder.Animations.Behaviors
  summary: "\nDetermines the scale of the object at a given time. The curve is normalized, the duration of the animation can be set in the <xref href=\"VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Duration\" data-throw-if-not-resolved=\"false\"></xref> field.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DisplayName("Scale curve")]

      public AnimationCurve ScaleCurve { get; set; }
    parameters: []
    return:
      type: AnimationCurve
    content.vb: >-
      <DataMember>

      <DisplayName("Scale curve")>

      Public Property ScaleCurve As AnimationCurve
  overload: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.ScaleCurve*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Scale curve
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.PingPong
  commentId: P:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.PingPong
  id: PingPong
  parent: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData
  langs:
  - csharp
  - vb
  name: PingPong
  nameWithType: AnimateTransformBehavior.EntityData.PingPong
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.PingPong
  type: Property
  source:
    remote:
      path: Source/Runtime/Behaviors/AnimateTransformBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Animations-for-VR-Builder.git
    id: PingPong
    path: ../../Assets/MindPort/VR Builder/Add-ons/Animations/Source/Runtime/Behaviors/AnimateTransformBehavior.cs
    startLine: 87
  assemblies:
  - VRBuilder.Animations
  namespace: VRBuilder.Animations.Behaviors
  summary: "\nIf enabled, the animation will repeat in reverse, returning the object to the starting position.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DisplayName("Ping pong")]

      public bool PingPong { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      <DisplayName("Ping pong")>

      Public Property PingPong As Boolean
  overload: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.PingPong*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Ping pong
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Repeats
  commentId: P:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Repeats
  id: Repeats
  parent: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData
  langs:
  - csharp
  - vb
  name: Repeats
  nameWithType: AnimateTransformBehavior.EntityData.Repeats
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Repeats
  type: Property
  source:
    remote:
      path: Source/Runtime/Behaviors/AnimateTransformBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Animations-for-VR-Builder.git
    id: Repeats
    path: ../../Assets/MindPort/VR Builder/Add-ons/Animations/Source/Runtime/Behaviors/AnimateTransformBehavior.cs
    startLine: 94
  assemblies:
  - VRBuilder.Animations
  namespace: VRBuilder.Animations.Behaviors
  summary: "\nNumber of times the animation should be repeated.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DisplayName("Repeats")]

      public int Repeats { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      <DisplayName("Repeats")>

      Public Property Repeats As Integer
  overload: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Repeats*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Repeats
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Metadata
  commentId: P:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Metadata
  id: Metadata
  parent: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: AnimateTransformBehavior.EntityData.Metadata
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Metadata
  type: Property
  source:
    remote:
      path: Source/Runtime/Behaviors/AnimateTransformBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Animations-for-VR-Builder.git
    id: Metadata
    path: ../../Assets/MindPort/VR Builder/Add-ons/Animations/Source/Runtime/Behaviors/AnimateTransformBehavior.cs
    startLine: 99
  assemblies:
  - VRBuilder.Animations
  namespace: VRBuilder.Animations.Behaviors
  summary: "\nReference to this object&apos;s <xref href=\"VRBuilder.Core.IMetadata\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Metadata Metadata { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.Metadata
    content.vb: Public Property Metadata As Metadata
  overload: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Metadata*
  implements:
  - VRBuilder.Core.IData.Metadata
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Name
  commentId: P:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Name
  id: Name
  parent: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: AnimateTransformBehavior.EntityData.Name
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Name
  type: Property
  source:
    remote:
      path: Source/Runtime/Behaviors/AnimateTransformBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/Animations-for-VR-Builder.git
    id: Name
    path: ../../Assets/MindPort/VR Builder/Add-ons/Animations/Source/Runtime/Behaviors/AnimateTransformBehavior.cs
    startLine: 102
  assemblies:
  - VRBuilder.Animations
  namespace: VRBuilder.Animations.Behaviors
  summary: "\nName of the entity.\n"
  example: []
  syntax:
    content: >-
      [IgnoreDataMember]

      public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <IgnoreDataMember>

      Public ReadOnly Property Name As String
  overload: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Name*
  implements:
  - VRBuilder.Core.INamedData.Name
  attributes:
  - type: System.Runtime.Serialization.IgnoreDataMemberAttribute
    ctor: System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: VRBuilder.Animations.Behaviors
  commentId: N:VRBuilder.Animations.Behaviors
  name: VRBuilder.Animations.Behaviors
  nameWithType: VRBuilder.Animations.Behaviors
  fullName: VRBuilder.Animations.Behaviors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Behaviors.IBehaviorData
  commentId: T:VRBuilder.Core.Behaviors.IBehaviorData
  parent: VRBuilder.Core.Behaviors
  name: IBehaviorData
  nameWithType: IBehaviorData
  fullName: VRBuilder.Core.Behaviors.IBehaviorData
- uid: VRBuilder.Core.INamedData
  commentId: T:VRBuilder.Core.INamedData
  parent: VRBuilder.Core
  name: INamedData
  nameWithType: INamedData
  fullName: VRBuilder.Core.INamedData
- uid: VRBuilder.Core.IData
  commentId: T:VRBuilder.Core.IData
  parent: VRBuilder.Core
  name: IData
  nameWithType: IData
  fullName: VRBuilder.Core.IData
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Behaviors
  commentId: N:VRBuilder.Core.Behaviors
  name: VRBuilder.Core.Behaviors
  nameWithType: VRBuilder.Core.Behaviors
  fullName: VRBuilder.Core.Behaviors
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetObject*
  commentId: Overload:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetObject
  name: TargetObject
  nameWithType: AnimateTransformBehavior.EntityData.TargetObject
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetObject
- uid: VRBuilder.Core.SceneObjects.SingleSceneObjectReference
  commentId: T:VRBuilder.Core.SceneObjects.SingleSceneObjectReference
  parent: VRBuilder.Core.SceneObjects
  name: SingleSceneObjectReference
  nameWithType: SingleSceneObjectReference
  fullName: VRBuilder.Core.SceneObjects.SingleSceneObjectReference
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Target*
  commentId: Overload:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Target
  name: Target
  nameWithType: AnimateTransformBehavior.EntityData.Target
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Target
- uid: VRBuilder.Core.SceneObjects.SceneObjectReference
  commentId: T:VRBuilder.Core.SceneObjects.SceneObjectReference
  parent: VRBuilder.Core.SceneObjects
  name: SceneObjectReference
  nameWithType: SceneObjectReference
  fullName: VRBuilder.Core.SceneObjects.SceneObjectReference
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetTransformProvider*
  commentId: Overload:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetTransformProvider
  name: TargetTransformProvider
  nameWithType: AnimateTransformBehavior.EntityData.TargetTransformProvider
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetTransformProvider
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetTransform*
  commentId: Overload:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetTransform
  name: TargetTransform
  nameWithType: AnimateTransformBehavior.EntityData.TargetTransform
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.TargetTransform
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Duration*
  commentId: Overload:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Duration
  name: Duration
  nameWithType: AnimateTransformBehavior.EntityData.Duration
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Duration
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Duration
  commentId: P:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Duration
  isExternal: true
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.PositionCurve*
  commentId: Overload:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.PositionCurve
  name: PositionCurve
  nameWithType: AnimateTransformBehavior.EntityData.PositionCurve
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.PositionCurve
- uid: AnimationCurve
  isExternal: true
  name: AnimationCurve
  nameWithType: AnimationCurve
  fullName: AnimationCurve
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.RotationCurve*
  commentId: Overload:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.RotationCurve
  name: RotationCurve
  nameWithType: AnimateTransformBehavior.EntityData.RotationCurve
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.RotationCurve
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.ScaleCurve*
  commentId: Overload:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.ScaleCurve
  name: ScaleCurve
  nameWithType: AnimateTransformBehavior.EntityData.ScaleCurve
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.ScaleCurve
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.PingPong*
  commentId: Overload:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.PingPong
  name: PingPong
  nameWithType: AnimateTransformBehavior.EntityData.PingPong
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.PingPong
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Repeats*
  commentId: Overload:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Repeats
  name: Repeats
  nameWithType: AnimateTransformBehavior.EntityData.Repeats
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Repeats
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Metadata*
  commentId: Overload:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Metadata
  name: Metadata
  nameWithType: AnimateTransformBehavior.EntityData.Metadata
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Metadata
- uid: VRBuilder.Core.IData.Metadata
  commentId: P:VRBuilder.Core.IData.Metadata
  parent: VRBuilder.Core.IData
  name: Metadata
  nameWithType: IData.Metadata
  fullName: VRBuilder.Core.IData.Metadata
- uid: VRBuilder.Core.Metadata
  commentId: T:VRBuilder.Core.Metadata
  parent: VRBuilder.Core
  name: Metadata
  nameWithType: Metadata
  fullName: VRBuilder.Core.Metadata
- uid: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Name*
  commentId: Overload:VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Name
  name: Name
  nameWithType: AnimateTransformBehavior.EntityData.Name
  fullName: VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.Name
- uid: VRBuilder.Core.INamedData.Name
  commentId: P:VRBuilder.Core.INamedData.Name
  parent: VRBuilder.Core.INamedData
  name: Name
  nameWithType: INamedData.Name
  fullName: VRBuilder.Core.INamedData.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
