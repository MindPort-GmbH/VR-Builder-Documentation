### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.TransitionCollection
  commentId: T:VRBuilder.Core.TransitionCollection
  id: TransitionCollection
  parent: VRBuilder.Core
  children:
  - VRBuilder.Core.TransitionCollection.#ctor
  - VRBuilder.Core.TransitionCollection.Clone
  - VRBuilder.Core.TransitionCollection.GetActivatingProcess
  - VRBuilder.Core.TransitionCollection.GetActiveProcess
  - VRBuilder.Core.TransitionCollection.GetConfigurator
  - VRBuilder.Core.TransitionCollection.GetDeactivatingProcess
  - VRBuilder.Core.TransitionCollection.VRBuilder#Core#IDataOwner{VRBuilder#Core#ITransitionCollectionData}#Data
  langs:
  - csharp
  - vb
  name: TransitionCollection
  nameWithType: TransitionCollection
  fullName: VRBuilder.Core.TransitionCollection
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/TransitionCollection.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: TransitionCollection
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/TransitionCollection.cs
    startLine: 18
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nA collection of <xref href=\"VRBuilder.Core.ITransition\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: >-
      [DataContract(IsReference = true)]

      public class TransitionCollection : Entity<TransitionCollection.EntityData>, IDataOwner<TransitionCollection.EntityData>, ITransitionCollection, IStepChild, IEntity, IDataOwner<ITransitionCollectionData>, IDataOwner, IClonable<ITransitionCollection>
    content.vb: >-
      <DataContract(IsReference:=True)>

      Public Class TransitionCollection
          Inherits Entity(Of TransitionCollection.EntityData)
          Implements IDataOwner(Of TransitionCollection.EntityData), ITransitionCollection, IStepChild, IEntity, IDataOwner(Of ITransitionCollectionData), IDataOwner, IClonable(Of ITransitionCollection)
  inheritance:
  - System.Object
  - VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}
  implements:
  - VRBuilder.Core.IDataOwner{VRBuilder.Core.TransitionCollection.EntityData}
  - VRBuilder.Core.ITransitionCollection
  - VRBuilder.Core.IStepChild
  - VRBuilder.Core.IEntity
  - VRBuilder.Core.IDataOwner{VRBuilder.Core.ITransitionCollectionData}
  - VRBuilder.Core.IDataOwner
  - VRBuilder.Core.IClonable{VRBuilder.Core.ITransitionCollection}
  inheritedMembers:
  - VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.Data
  - VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.VRBuilder#Core#IDataOwner#Data
  - VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.LifeCycle
  - VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.Parent
  - VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  - VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.Update
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.TransitionCollection.GetConfigurator
  commentId: M:VRBuilder.Core.TransitionCollection.GetConfigurator
  id: GetConfigurator
  parent: VRBuilder.Core.TransitionCollection
  langs:
  - csharp
  - vb
  name: GetConfigurator()
  nameWithType: TransitionCollection.GetConfigurator()
  fullName: VRBuilder.Core.TransitionCollection.GetConfigurator()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/TransitionCollection.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetConfigurator
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/TransitionCollection.cs
    startLine: 74
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nOverride this method if your behavior or condition supports changing between process modes (<xref href=\"VRBuilder.Core.Configuration.Modes.IMode\" data-throw-if-not-resolved=\"false\"></xref>).\nBy default returns an empty configurator that does nothing.\n"
  example: []
  syntax:
    content: protected override IConfigurator GetConfigurator()
    return:
      type: VRBuilder.Core.Configuration.Modes.IConfigurator
    content.vb: Protected Overrides Function GetConfigurator As IConfigurator
  overridden: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.GetConfigurator
  overload: VRBuilder.Core.TransitionCollection.GetConfigurator*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: VRBuilder.Core.TransitionCollection.VRBuilder#Core#IDataOwner{VRBuilder#Core#ITransitionCollectionData}#Data
  commentId: P:VRBuilder.Core.TransitionCollection.VRBuilder#Core#IDataOwner{VRBuilder#Core#ITransitionCollectionData}#Data
  id: VRBuilder#Core#IDataOwner{VRBuilder#Core#ITransitionCollectionData}#Data
  isEii: true
  parent: VRBuilder.Core.TransitionCollection
  langs:
  - csharp
  - vb
  name: IDataOwner<ITransitionCollectionData>.Data
  nameWithType: TransitionCollection.IDataOwner<ITransitionCollectionData>.Data
  fullName: VRBuilder.Core.TransitionCollection.VRBuilder.Core.IDataOwner<VRBuilder.Core.ITransitionCollectionData>.Data
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/TransitionCollection.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: VRBuilder.Core.IDataOwner<VRBuilder.Core.ITransitionCollectionData>.Data
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/TransitionCollection.cs
    startLine: 80
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nAbstract data.\n"
  example: []
  syntax:
    content: ITransitionCollectionData IDataOwner<ITransitionCollectionData>.Data { get; }
    parameters: []
    return:
      type: VRBuilder.Core.ITransitionCollectionData
    content.vb: ReadOnly WriteOnly Property VRBuilder.Core.IDataOwner<VRBuilder.Core.ITransitionCollectionData>.Data As ITransitionCollectionData Implements IDataOwner(Of ITransitionCollectionData).Data
  overload: VRBuilder.Core.TransitionCollection.VRBuilder#Core#IDataOwner{VRBuilder#Core#ITransitionCollectionData}#Data*
  implements:
  - VRBuilder.Core.IDataOwner{VRBuilder.Core.ITransitionCollectionData}.Data
  nameWithType.vb: TransitionCollection.VRBuilder.Core.IDataOwner<VRBuilder.Core.ITransitionCollectionData>.Data
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: VRBuilder.Core.IDataOwner<VRBuilder.Core.ITransitionCollectionData>.Data
- uid: VRBuilder.Core.TransitionCollection.#ctor
  commentId: M:VRBuilder.Core.TransitionCollection.#ctor
  id: '#ctor'
  parent: VRBuilder.Core.TransitionCollection
  langs:
  - csharp
  - vb
  name: TransitionCollection()
  nameWithType: TransitionCollection.TransitionCollection()
  fullName: VRBuilder.Core.TransitionCollection.TransitionCollection()
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/TransitionCollection.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/TransitionCollection.cs
    startLine: 85
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  syntax:
    content: public TransitionCollection()
    content.vb: Public Sub New
  overload: VRBuilder.Core.TransitionCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.TransitionCollection.GetActivatingProcess
  commentId: M:VRBuilder.Core.TransitionCollection.GetActivatingProcess
  id: GetActivatingProcess
  parent: VRBuilder.Core.TransitionCollection
  langs:
  - csharp
  - vb
  name: GetActivatingProcess()
  nameWithType: TransitionCollection.GetActivatingProcess()
  fullName: VRBuilder.Core.TransitionCollection.GetActivatingProcess()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/TransitionCollection.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetActivatingProcess
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/TransitionCollection.cs
    startLine: 91
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nReturns a new instance of a process for the Activating <xref href=\"VRBuilder.Core.Stage\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override IStageProcess GetActivatingProcess()
    return:
      type: VRBuilder.Core.IStageProcess
    content.vb: Public Overrides Function GetActivatingProcess As IStageProcess
  overridden: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.GetActivatingProcess
  overload: VRBuilder.Core.TransitionCollection.GetActivatingProcess*
  implements:
  - VRBuilder.Core.IEntity.GetActivatingProcess
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Core.TransitionCollection.GetActiveProcess
  commentId: M:VRBuilder.Core.TransitionCollection.GetActiveProcess
  id: GetActiveProcess
  parent: VRBuilder.Core.TransitionCollection
  langs:
  - csharp
  - vb
  name: GetActiveProcess()
  nameWithType: TransitionCollection.GetActiveProcess()
  fullName: VRBuilder.Core.TransitionCollection.GetActiveProcess()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/TransitionCollection.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetActiveProcess
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/TransitionCollection.cs
    startLine: 97
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nReturns a new instance of a process for the Active <xref href=\"VRBuilder.Core.Stage\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override IStageProcess GetActiveProcess()
    return:
      type: VRBuilder.Core.IStageProcess
    content.vb: Public Overrides Function GetActiveProcess As IStageProcess
  overridden: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.GetActiveProcess
  overload: VRBuilder.Core.TransitionCollection.GetActiveProcess*
  implements:
  - VRBuilder.Core.IEntity.GetActiveProcess
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Core.TransitionCollection.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.TransitionCollection.GetDeactivatingProcess
  id: GetDeactivatingProcess
  parent: VRBuilder.Core.TransitionCollection
  langs:
  - csharp
  - vb
  name: GetDeactivatingProcess()
  nameWithType: TransitionCollection.GetDeactivatingProcess()
  fullName: VRBuilder.Core.TransitionCollection.GetDeactivatingProcess()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/TransitionCollection.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetDeactivatingProcess
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/TransitionCollection.cs
    startLine: 103
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nReturns a new instance of a process for the Deactivating <xref href=\"VRBuilder.Core.Stage\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override IStageProcess GetDeactivatingProcess()
    return:
      type: VRBuilder.Core.IStageProcess
    content.vb: Public Overrides Function GetDeactivatingProcess As IStageProcess
  overridden: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.GetDeactivatingProcess
  overload: VRBuilder.Core.TransitionCollection.GetDeactivatingProcess*
  implements:
  - VRBuilder.Core.IEntity.GetDeactivatingProcess
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Core.TransitionCollection.Clone
  commentId: M:VRBuilder.Core.TransitionCollection.Clone
  id: Clone
  parent: VRBuilder.Core.TransitionCollection
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: TransitionCollection.Clone()
  fullName: VRBuilder.Core.TransitionCollection.Clone()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/TransitionCollection.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Clone
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/TransitionCollection.cs
    startLine: 109
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nReturns a deep copy of the object.\n"
  example: []
  syntax:
    content: public ITransitionCollection Clone()
    return:
      type: VRBuilder.Core.ITransitionCollection
    content.vb: Public Function Clone As ITransitionCollection
  overload: VRBuilder.Core.TransitionCollection.Clone*
  implements:
  - VRBuilder.Core.IClonable{VRBuilder.Core.ITransitionCollection}.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Core.ITransition
  commentId: T:VRBuilder.Core.ITransition
  parent: VRBuilder.Core
  name: ITransition
  nameWithType: ITransition
  fullName: VRBuilder.Core.ITransition
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}
  commentId: T:VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.Entity`1
  name: Entity<TransitionCollection.EntityData>
  nameWithType: Entity<TransitionCollection.EntityData>
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>
  nameWithType.vb: Entity(Of TransitionCollection.EntityData)
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.TransitionCollection.EntityData)
  name.vb: Entity(Of TransitionCollection.EntityData)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: VRBuilder.Core.Entity
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.TransitionCollection.EntityData
    name: TransitionCollection.EntityData
    nameWithType: TransitionCollection.EntityData
    fullName: VRBuilder.Core.TransitionCollection.EntityData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: VRBuilder.Core.Entity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.TransitionCollection.EntityData
    name: TransitionCollection.EntityData
    nameWithType: TransitionCollection.EntityData
    fullName: VRBuilder.Core.TransitionCollection.EntityData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IDataOwner{VRBuilder.Core.TransitionCollection.EntityData}
  commentId: T:VRBuilder.Core.IDataOwner{VRBuilder.Core.TransitionCollection.EntityData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IDataOwner`1
  name: IDataOwner<TransitionCollection.EntityData>
  nameWithType: IDataOwner<TransitionCollection.EntityData>
  fullName: VRBuilder.Core.IDataOwner<VRBuilder.Core.TransitionCollection.EntityData>
  nameWithType.vb: IDataOwner(Of TransitionCollection.EntityData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of VRBuilder.Core.TransitionCollection.EntityData)
  name.vb: IDataOwner(Of TransitionCollection.EntityData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.TransitionCollection.EntityData
    name: TransitionCollection.EntityData
    nameWithType: TransitionCollection.EntityData
    fullName: VRBuilder.Core.TransitionCollection.EntityData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.TransitionCollection.EntityData
    name: TransitionCollection.EntityData
    nameWithType: TransitionCollection.EntityData
    fullName: VRBuilder.Core.TransitionCollection.EntityData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.ITransitionCollection
  commentId: T:VRBuilder.Core.ITransitionCollection
  parent: VRBuilder.Core
  name: ITransitionCollection
  nameWithType: ITransitionCollection
  fullName: VRBuilder.Core.ITransitionCollection
- uid: VRBuilder.Core.IStepChild
  commentId: T:VRBuilder.Core.IStepChild
  parent: VRBuilder.Core
  name: IStepChild
  nameWithType: IStepChild
  fullName: VRBuilder.Core.IStepChild
- uid: VRBuilder.Core.IEntity
  commentId: T:VRBuilder.Core.IEntity
  parent: VRBuilder.Core
  name: IEntity
  nameWithType: IEntity
  fullName: VRBuilder.Core.IEntity
- uid: VRBuilder.Core.IDataOwner{VRBuilder.Core.ITransitionCollectionData}
  commentId: T:VRBuilder.Core.IDataOwner{VRBuilder.Core.ITransitionCollectionData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IDataOwner`1
  name: IDataOwner<ITransitionCollectionData>
  nameWithType: IDataOwner<ITransitionCollectionData>
  fullName: VRBuilder.Core.IDataOwner<VRBuilder.Core.ITransitionCollectionData>
  nameWithType.vb: IDataOwner(Of ITransitionCollectionData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of VRBuilder.Core.ITransitionCollectionData)
  name.vb: IDataOwner(Of ITransitionCollectionData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.ITransitionCollectionData
    name: ITransitionCollectionData
    nameWithType: ITransitionCollectionData
    fullName: VRBuilder.Core.ITransitionCollectionData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.ITransitionCollectionData
    name: ITransitionCollectionData
    nameWithType: ITransitionCollectionData
    fullName: VRBuilder.Core.ITransitionCollectionData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IDataOwner
  commentId: T:VRBuilder.Core.IDataOwner
  parent: VRBuilder.Core
  name: IDataOwner
  nameWithType: IDataOwner
  fullName: VRBuilder.Core.IDataOwner
- uid: VRBuilder.Core.IClonable{VRBuilder.Core.ITransitionCollection}
  commentId: T:VRBuilder.Core.IClonable{VRBuilder.Core.ITransitionCollection}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IClonable`1
  name: IClonable<ITransitionCollection>
  nameWithType: IClonable<ITransitionCollection>
  fullName: VRBuilder.Core.IClonable<VRBuilder.Core.ITransitionCollection>
  nameWithType.vb: IClonable(Of ITransitionCollection)
  fullName.vb: VRBuilder.Core.IClonable(Of VRBuilder.Core.ITransitionCollection)
  name.vb: IClonable(Of ITransitionCollection)
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.ITransitionCollection
    name: ITransitionCollection
    nameWithType: ITransitionCollection
    fullName: VRBuilder.Core.ITransitionCollection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.ITransitionCollection
    name: ITransitionCollection
    nameWithType: ITransitionCollection
    fullName: VRBuilder.Core.ITransitionCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.Data
  commentId: P:VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.Data
  parent: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}
  definition: VRBuilder.Core.Entity`1.Data
  name: Data
  nameWithType: Entity<TransitionCollection.EntityData>.Data
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.Data
  nameWithType.vb: Entity(Of TransitionCollection.EntityData).Data
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.TransitionCollection.EntityData).Data
- uid: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.VRBuilder#Core#IDataOwner#Data
  commentId: P:VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.VRBuilder#Core#IDataOwner#Data
  parent: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}
  definition: VRBuilder.Core.Entity`1.VRBuilder#Core#IDataOwner#Data
  name: IDataOwner.Data
  nameWithType: Entity<TransitionCollection.EntityData>.IDataOwner.Data
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.VRBuilder.Core.IDataOwner.Data
  nameWithType.vb: Entity(Of TransitionCollection.EntityData).VRBuilder.Core.IDataOwner.Data
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.TransitionCollection.EntityData).VRBuilder.Core.IDataOwner.Data
  name.vb: VRBuilder.Core.IDataOwner.Data
- uid: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.LifeCycle
  commentId: P:VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.LifeCycle
  parent: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}
  definition: VRBuilder.Core.Entity`1.LifeCycle
  name: LifeCycle
  nameWithType: Entity<TransitionCollection.EntityData>.LifeCycle
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.LifeCycle
  nameWithType.vb: Entity(Of TransitionCollection.EntityData).LifeCycle
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.TransitionCollection.EntityData).LifeCycle
- uid: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.Parent
  commentId: P:VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.Parent
  parent: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}
  definition: VRBuilder.Core.Entity`1.Parent
  name: Parent
  nameWithType: Entity<TransitionCollection.EntityData>.Parent
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.Parent
  nameWithType.vb: Entity(Of TransitionCollection.EntityData).Parent
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.TransitionCollection.EntityData).Parent
- uid: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  parent: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}
  definition: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  name: Configure(IMode)
  nameWithType: Entity<TransitionCollection.EntityData>.Configure(IMode)
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  nameWithType.vb: Entity(Of TransitionCollection.EntityData).Configure(IMode)
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.TransitionCollection.EntityData).Configure(VRBuilder.Core.Configuration.Modes.IMode)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: Entity<TransitionCollection.EntityData>.Configure
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: Entity(Of TransitionCollection.EntityData).Configure
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.TransitionCollection.EntityData).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.Update
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.Update
  parent: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}
  definition: VRBuilder.Core.Entity`1.Update
  name: Update()
  nameWithType: Entity<TransitionCollection.EntityData>.Update()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.Update()
  nameWithType.vb: Entity(Of TransitionCollection.EntityData).Update()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.TransitionCollection.EntityData).Update()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    nameWithType: Entity<TransitionCollection.EntityData>.Update
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    nameWithType: Entity(Of TransitionCollection.EntityData).Update
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.TransitionCollection.EntityData).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Entity`1
  commentId: T:VRBuilder.Core.Entity`1
  name: Entity<TData>
  nameWithType: Entity<TData>
  fullName: VRBuilder.Core.Entity<TData>
  nameWithType.vb: Entity(Of TData)
  fullName.vb: VRBuilder.Core.Entity(Of TData)
  name.vb: Entity(Of TData)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: VRBuilder.Core.Entity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: VRBuilder.Core.Entity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IDataOwner`1
  commentId: T:VRBuilder.Core.IDataOwner`1
  name: IDataOwner<TData>
  nameWithType: IDataOwner<TData>
  fullName: VRBuilder.Core.IDataOwner<TData>
  nameWithType.vb: IDataOwner(Of TData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of TData)
  name.vb: IDataOwner(Of TData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IClonable`1
  commentId: T:VRBuilder.Core.IClonable`1
  name: IClonable<T>
  nameWithType: IClonable<T>
  fullName: VRBuilder.Core.IClonable<T>
  nameWithType.vb: IClonable(Of T)
  fullName.vb: VRBuilder.Core.IClonable(Of T)
  name.vb: IClonable(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.Data
  commentId: P:VRBuilder.Core.Entity`1.Data
  name: Data
  nameWithType: Entity<TData>.Data
  fullName: VRBuilder.Core.Entity<TData>.Data
  nameWithType.vb: Entity(Of TData).Data
  fullName.vb: VRBuilder.Core.Entity(Of TData).Data
- uid: VRBuilder.Core.Entity`1.VRBuilder#Core#IDataOwner#Data
  commentId: P:VRBuilder.Core.Entity`1.VRBuilder#Core#IDataOwner#Data
  name: IDataOwner.Data
  nameWithType: Entity<TData>.IDataOwner.Data
  fullName: VRBuilder.Core.Entity<TData>.VRBuilder.Core.IDataOwner.Data
  nameWithType.vb: Entity(Of TData).VRBuilder.Core.IDataOwner.Data
  fullName.vb: VRBuilder.Core.Entity(Of TData).VRBuilder.Core.IDataOwner.Data
  name.vb: VRBuilder.Core.IDataOwner.Data
- uid: VRBuilder.Core.Entity`1.LifeCycle
  commentId: P:VRBuilder.Core.Entity`1.LifeCycle
  name: LifeCycle
  nameWithType: Entity<TData>.LifeCycle
  fullName: VRBuilder.Core.Entity<TData>.LifeCycle
  nameWithType.vb: Entity(Of TData).LifeCycle
  fullName.vb: VRBuilder.Core.Entity(Of TData).LifeCycle
- uid: VRBuilder.Core.Entity`1.Parent
  commentId: P:VRBuilder.Core.Entity`1.Parent
  name: Parent
  nameWithType: Entity<TData>.Parent
  fullName: VRBuilder.Core.Entity<TData>.Parent
  nameWithType.vb: Entity(Of TData).Parent
  fullName.vb: VRBuilder.Core.Entity(Of TData).Parent
- uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  name: Configure(IMode)
  nameWithType: Entity<TData>.Configure(IMode)
  fullName: VRBuilder.Core.Entity<TData>.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  nameWithType.vb: Entity(Of TData).Configure(IMode)
  fullName.vb: VRBuilder.Core.Entity(Of TData).Configure(VRBuilder.Core.Configuration.Modes.IMode)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: Entity<TData>.Configure
    fullName: VRBuilder.Core.Entity<TData>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: Entity(Of TData).Configure
    fullName: VRBuilder.Core.Entity(Of TData).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.Update
  commentId: M:VRBuilder.Core.Entity`1.Update
  name: Update()
  nameWithType: Entity<TData>.Update()
  fullName: VRBuilder.Core.Entity<TData>.Update()
  nameWithType.vb: Entity(Of TData).Update()
  fullName.vb: VRBuilder.Core.Entity(Of TData).Update()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    nameWithType: Entity<TData>.Update
    fullName: VRBuilder.Core.Entity<TData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    nameWithType: Entity(Of TData).Update
    fullName: VRBuilder.Core.Entity(Of TData).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.GetConfigurator
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.GetConfigurator
  parent: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}
  definition: VRBuilder.Core.Entity`1.GetConfigurator
  name: GetConfigurator()
  nameWithType: Entity<TransitionCollection.EntityData>.GetConfigurator()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.GetConfigurator()
  nameWithType.vb: Entity(Of TransitionCollection.EntityData).GetConfigurator()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.TransitionCollection.EntityData).GetConfigurator()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    nameWithType: Entity<TransitionCollection.EntityData>.GetConfigurator
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.GetConfigurator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    nameWithType: Entity(Of TransitionCollection.EntityData).GetConfigurator
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.TransitionCollection.EntityData).GetConfigurator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.TransitionCollection.GetConfigurator*
  commentId: Overload:VRBuilder.Core.TransitionCollection.GetConfigurator
  name: GetConfigurator
  nameWithType: TransitionCollection.GetConfigurator
  fullName: VRBuilder.Core.TransitionCollection.GetConfigurator
- uid: VRBuilder.Core.Configuration.Modes.IConfigurator
  commentId: T:VRBuilder.Core.Configuration.Modes.IConfigurator
  parent: VRBuilder.Core.Configuration.Modes
  name: IConfigurator
  nameWithType: IConfigurator
  fullName: VRBuilder.Core.Configuration.Modes.IConfigurator
- uid: VRBuilder.Core.Entity`1.GetConfigurator
  commentId: M:VRBuilder.Core.Entity`1.GetConfigurator
  name: GetConfigurator()
  nameWithType: Entity<TData>.GetConfigurator()
  fullName: VRBuilder.Core.Entity<TData>.GetConfigurator()
  nameWithType.vb: Entity(Of TData).GetConfigurator()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetConfigurator()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    nameWithType: Entity<TData>.GetConfigurator
    fullName: VRBuilder.Core.Entity<TData>.GetConfigurator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    nameWithType: Entity(Of TData).GetConfigurator
    fullName: VRBuilder.Core.Entity(Of TData).GetConfigurator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes
  commentId: N:VRBuilder.Core.Configuration.Modes
  name: VRBuilder.Core.Configuration.Modes
  nameWithType: VRBuilder.Core.Configuration.Modes
  fullName: VRBuilder.Core.Configuration.Modes
- uid: VRBuilder.Core.TransitionCollection.VRBuilder#Core#IDataOwner{VRBuilder#Core#ITransitionCollectionData}#Data*
  commentId: Overload:VRBuilder.Core.TransitionCollection.VRBuilder#Core#IDataOwner{VRBuilder#Core#ITransitionCollectionData}#Data
  name: IDataOwner<ITransitionCollectionData>.Data
  nameWithType: TransitionCollection.IDataOwner<ITransitionCollectionData>.Data
  fullName: VRBuilder.Core.TransitionCollection.VRBuilder.Core.IDataOwner<VRBuilder.Core.ITransitionCollectionData>.Data
  nameWithType.vb: TransitionCollection.VRBuilder.Core.IDataOwner<VRBuilder.Core.ITransitionCollectionData>.Data
  name.vb: VRBuilder.Core.IDataOwner<VRBuilder.Core.ITransitionCollectionData>.Data
- uid: VRBuilder.Core.IDataOwner{VRBuilder.Core.ITransitionCollectionData}.Data
  commentId: P:VRBuilder.Core.IDataOwner{VRBuilder.Core.ITransitionCollectionData}.Data
  parent: VRBuilder.Core.IDataOwner{VRBuilder.Core.ITransitionCollectionData}
  definition: VRBuilder.Core.IDataOwner`1.Data
  name: Data
  nameWithType: IDataOwner<ITransitionCollectionData>.Data
  fullName: VRBuilder.Core.IDataOwner<VRBuilder.Core.ITransitionCollectionData>.Data
  nameWithType.vb: IDataOwner(Of ITransitionCollectionData).Data
  fullName.vb: VRBuilder.Core.IDataOwner(Of VRBuilder.Core.ITransitionCollectionData).Data
- uid: VRBuilder.Core.ITransitionCollectionData
  commentId: T:VRBuilder.Core.ITransitionCollectionData
  parent: VRBuilder.Core
  name: ITransitionCollectionData
  nameWithType: ITransitionCollectionData
  fullName: VRBuilder.Core.ITransitionCollectionData
- uid: VRBuilder.Core.IDataOwner`1.Data
  commentId: P:VRBuilder.Core.IDataOwner`1.Data
  name: Data
  nameWithType: IDataOwner<TData>.Data
  fullName: VRBuilder.Core.IDataOwner<TData>.Data
  nameWithType.vb: IDataOwner(Of TData).Data
  fullName.vb: VRBuilder.Core.IDataOwner(Of TData).Data
- uid: VRBuilder.Core.TransitionCollection.#ctor*
  commentId: Overload:VRBuilder.Core.TransitionCollection.#ctor
  name: TransitionCollection
  nameWithType: TransitionCollection.TransitionCollection
  fullName: VRBuilder.Core.TransitionCollection.TransitionCollection
- uid: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.GetActivatingProcess
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.GetActivatingProcess
  parent: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}
  definition: VRBuilder.Core.Entity`1.GetActivatingProcess
  name: GetActivatingProcess()
  nameWithType: Entity<TransitionCollection.EntityData>.GetActivatingProcess()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.GetActivatingProcess()
  nameWithType.vb: Entity(Of TransitionCollection.EntityData).GetActivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.TransitionCollection.EntityData).GetActivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: Entity<TransitionCollection.EntityData>.GetActivatingProcess
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: Entity(Of TransitionCollection.EntityData).GetActivatingProcess
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.TransitionCollection.EntityData).GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.TransitionCollection.GetActivatingProcess*
  commentId: Overload:VRBuilder.Core.TransitionCollection.GetActivatingProcess
  name: GetActivatingProcess
  nameWithType: TransitionCollection.GetActivatingProcess
  fullName: VRBuilder.Core.TransitionCollection.GetActivatingProcess
- uid: VRBuilder.Core.IEntity.GetActivatingProcess
  commentId: M:VRBuilder.Core.IEntity.GetActivatingProcess
  parent: VRBuilder.Core.IEntity
  name: GetActivatingProcess()
  nameWithType: IEntity.GetActivatingProcess()
  fullName: VRBuilder.Core.IEntity.GetActivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.IEntity.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: IEntity.GetActivatingProcess
    fullName: VRBuilder.Core.IEntity.GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IEntity.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: IEntity.GetActivatingProcess
    fullName: VRBuilder.Core.IEntity.GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IStageProcess
  commentId: T:VRBuilder.Core.IStageProcess
  parent: VRBuilder.Core
  name: IStageProcess
  nameWithType: IStageProcess
  fullName: VRBuilder.Core.IStageProcess
- uid: VRBuilder.Core.Entity`1.GetActivatingProcess
  commentId: M:VRBuilder.Core.Entity`1.GetActivatingProcess
  name: GetActivatingProcess()
  nameWithType: Entity<TData>.GetActivatingProcess()
  fullName: VRBuilder.Core.Entity<TData>.GetActivatingProcess()
  nameWithType.vb: Entity(Of TData).GetActivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetActivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: Entity<TData>.GetActivatingProcess
    fullName: VRBuilder.Core.Entity<TData>.GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: Entity(Of TData).GetActivatingProcess
    fullName: VRBuilder.Core.Entity(Of TData).GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.GetActiveProcess
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.GetActiveProcess
  parent: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}
  definition: VRBuilder.Core.Entity`1.GetActiveProcess
  name: GetActiveProcess()
  nameWithType: Entity<TransitionCollection.EntityData>.GetActiveProcess()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.GetActiveProcess()
  nameWithType.vb: Entity(Of TransitionCollection.EntityData).GetActiveProcess()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.TransitionCollection.EntityData).GetActiveProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    nameWithType: Entity<TransitionCollection.EntityData>.GetActiveProcess
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    nameWithType: Entity(Of TransitionCollection.EntityData).GetActiveProcess
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.TransitionCollection.EntityData).GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.TransitionCollection.GetActiveProcess*
  commentId: Overload:VRBuilder.Core.TransitionCollection.GetActiveProcess
  name: GetActiveProcess
  nameWithType: TransitionCollection.GetActiveProcess
  fullName: VRBuilder.Core.TransitionCollection.GetActiveProcess
- uid: VRBuilder.Core.IEntity.GetActiveProcess
  commentId: M:VRBuilder.Core.IEntity.GetActiveProcess
  parent: VRBuilder.Core.IEntity
  name: GetActiveProcess()
  nameWithType: IEntity.GetActiveProcess()
  fullName: VRBuilder.Core.IEntity.GetActiveProcess()
  spec.csharp:
  - uid: VRBuilder.Core.IEntity.GetActiveProcess
    name: GetActiveProcess
    nameWithType: IEntity.GetActiveProcess
    fullName: VRBuilder.Core.IEntity.GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IEntity.GetActiveProcess
    name: GetActiveProcess
    nameWithType: IEntity.GetActiveProcess
    fullName: VRBuilder.Core.IEntity.GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.GetActiveProcess
  commentId: M:VRBuilder.Core.Entity`1.GetActiveProcess
  name: GetActiveProcess()
  nameWithType: Entity<TData>.GetActiveProcess()
  fullName: VRBuilder.Core.Entity<TData>.GetActiveProcess()
  nameWithType.vb: Entity(Of TData).GetActiveProcess()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetActiveProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    nameWithType: Entity<TData>.GetActiveProcess
    fullName: VRBuilder.Core.Entity<TData>.GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    nameWithType: Entity(Of TData).GetActiveProcess
    fullName: VRBuilder.Core.Entity(Of TData).GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}.GetDeactivatingProcess
  parent: VRBuilder.Core.Entity{VRBuilder.Core.TransitionCollection.EntityData}
  definition: VRBuilder.Core.Entity`1.GetDeactivatingProcess
  name: GetDeactivatingProcess()
  nameWithType: Entity<TransitionCollection.EntityData>.GetDeactivatingProcess()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.GetDeactivatingProcess()
  nameWithType.vb: Entity(Of TransitionCollection.EntityData).GetDeactivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.TransitionCollection.EntityData).GetDeactivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: Entity<TransitionCollection.EntityData>.GetDeactivatingProcess
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: Entity(Of TransitionCollection.EntityData).GetDeactivatingProcess
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.TransitionCollection.EntityData).GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.TransitionCollection.GetDeactivatingProcess*
  commentId: Overload:VRBuilder.Core.TransitionCollection.GetDeactivatingProcess
  name: GetDeactivatingProcess
  nameWithType: TransitionCollection.GetDeactivatingProcess
  fullName: VRBuilder.Core.TransitionCollection.GetDeactivatingProcess
- uid: VRBuilder.Core.IEntity.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.IEntity.GetDeactivatingProcess
  parent: VRBuilder.Core.IEntity
  name: GetDeactivatingProcess()
  nameWithType: IEntity.GetDeactivatingProcess()
  fullName: VRBuilder.Core.IEntity.GetDeactivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.IEntity.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: IEntity.GetDeactivatingProcess
    fullName: VRBuilder.Core.IEntity.GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IEntity.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: IEntity.GetDeactivatingProcess
    fullName: VRBuilder.Core.IEntity.GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.Entity`1.GetDeactivatingProcess
  name: GetDeactivatingProcess()
  nameWithType: Entity<TData>.GetDeactivatingProcess()
  fullName: VRBuilder.Core.Entity<TData>.GetDeactivatingProcess()
  nameWithType.vb: Entity(Of TData).GetDeactivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetDeactivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: Entity<TData>.GetDeactivatingProcess
    fullName: VRBuilder.Core.Entity<TData>.GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: Entity(Of TData).GetDeactivatingProcess
    fullName: VRBuilder.Core.Entity(Of TData).GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.TransitionCollection.Clone*
  commentId: Overload:VRBuilder.Core.TransitionCollection.Clone
  name: Clone
  nameWithType: TransitionCollection.Clone
  fullName: VRBuilder.Core.TransitionCollection.Clone
- uid: VRBuilder.Core.IClonable{VRBuilder.Core.ITransitionCollection}.Clone
  commentId: M:VRBuilder.Core.IClonable{VRBuilder.Core.ITransitionCollection}.Clone
  parent: VRBuilder.Core.IClonable{VRBuilder.Core.ITransitionCollection}
  definition: VRBuilder.Core.IClonable`1.Clone
  name: Clone()
  nameWithType: IClonable<ITransitionCollection>.Clone()
  fullName: VRBuilder.Core.IClonable<VRBuilder.Core.ITransitionCollection>.Clone()
  nameWithType.vb: IClonable(Of ITransitionCollection).Clone()
  fullName.vb: VRBuilder.Core.IClonable(Of VRBuilder.Core.ITransitionCollection).Clone()
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1.Clone
    name: Clone
    nameWithType: IClonable<ITransitionCollection>.Clone
    fullName: VRBuilder.Core.IClonable<VRBuilder.Core.ITransitionCollection>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1.Clone
    name: Clone
    nameWithType: IClonable(Of ITransitionCollection).Clone
    fullName: VRBuilder.Core.IClonable(Of VRBuilder.Core.ITransitionCollection).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IClonable`1.Clone
  commentId: M:VRBuilder.Core.IClonable`1.Clone
  name: Clone()
  nameWithType: IClonable<T>.Clone()
  fullName: VRBuilder.Core.IClonable<T>.Clone()
  nameWithType.vb: IClonable(Of T).Clone()
  fullName.vb: VRBuilder.Core.IClonable(Of T).Clone()
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1.Clone
    name: Clone
    nameWithType: IClonable<T>.Clone
    fullName: VRBuilder.Core.IClonable<T>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1.Clone
    name: Clone
    nameWithType: IClonable(Of T).Clone
    fullName: VRBuilder.Core.IClonable(Of T).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
