### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData
  commentId: T:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData
  id: ConfettiBehavior.EntityData
  parent: VRBuilder.Core.Behaviors
  children:
  - VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.AreaRadius
  - VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiMachine
  - VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiMachinePrefabPath
  - VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiPosition
  - VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Duration
  - VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ExecutionStages
  - VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.IsAboveUser
  - VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Metadata
  - VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Name
  - VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.PositionProvider
  langs:
  - csharp
  - vb
  name: ConfettiBehavior.EntityData
  nameWithType: ConfettiBehavior.EntityData
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData
  type: Class
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EntityData
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
    startLine: 23
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  syntax:
    content: >-
      [DisplayName("Spawn Confetti")]

      [DataContract(IsReference = true)]

      public class EntityData : IBehaviorData, INamedData, IData, IBehaviorExecutionStages
    content.vb: >-
      <DisplayName("Spawn Confetti")>

      <DataContract(IsReference:=True)>

      Public Class EntityData
          Implements IBehaviorData, INamedData, IData, IBehaviorExecutionStages
  inheritance:
  - System.Object
  implements:
  - VRBuilder.Core.Behaviors.IBehaviorData
  - VRBuilder.Core.INamedData
  - VRBuilder.Core.IData
  - VRBuilder.Core.Behaviors.IBehaviorExecutionStages
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Spawn Confetti
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.IsAboveUser
  commentId: P:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.IsAboveUser
  id: IsAboveUser
  parent: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData
  langs:
  - csharp
  - vb
  name: IsAboveUser
  nameWithType: ConfettiBehavior.EntityData.IsAboveUser
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.IsAboveUser
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsAboveUser
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
    startLine: 30
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  summary: "\nBool to check whether the confetti machine should spawn above the user or at the position of the position provider.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DisplayName("Spawn Above User")]

      public bool IsAboveUser { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      <DisplayName("Spawn Above User")>

      Public Property IsAboveUser As Boolean
  overload: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.IsAboveUser*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Spawn Above User
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiPosition
  commentId: P:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiPosition
  id: ConfettiPosition
  parent: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData
  langs:
  - csharp
  - vb
  name: ConfettiPosition
  nameWithType: ConfettiBehavior.EntityData.ConfettiPosition
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiPosition
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ConfettiPosition
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
    startLine: 38
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  summary: "\nName of the process object where to spawn the confetti machine.\nOnly needed if &quot;Spawn Above User&quot; is not checked.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DisplayName("Position Provider")]

      public SingleSceneObjectReference ConfettiPosition { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.SceneObjects.SingleSceneObjectReference
    content.vb: >-
      <DataMember>

      <DisplayName("Position Provider")>

      Public Property ConfettiPosition As SingleSceneObjectReference
  overload: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiPosition*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Position Provider
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.PositionProvider
  commentId: P:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.PositionProvider
  id: PositionProvider
  parent: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData
  langs:
  - csharp
  - vb
  name: PositionProvider
  nameWithType: ConfettiBehavior.EntityData.PositionProvider
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.PositionProvider
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: PositionProvider
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
    startLine: 42
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  syntax:
    content: >-
      [DataMember]

      [Obsolete("Use ConfettiPosition instead.")]

      [LegacyProperty("ConfettiPosition")]

      public SceneObjectReference PositionProvider { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.SceneObjects.SceneObjectReference
    content.vb: >-
      <DataMember>

      <Obsolete("Use ConfettiPosition instead.")>

      <LegacyProperty("ConfettiPosition")>

      Public Property PositionProvider As SceneObjectReference
  overload: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.PositionProvider*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ConfettiPosition instead.
  - type: VRBuilder.Core.Attributes.LegacyPropertyAttribute
    ctor: VRBuilder.Core.Attributes.LegacyPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ConfettiPosition
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiMachinePrefabPath
  commentId: P:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiMachinePrefabPath
  id: ConfettiMachinePrefabPath
  parent: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData
  langs:
  - csharp
  - vb
  name: ConfettiMachinePrefabPath
  nameWithType: ConfettiBehavior.EntityData.ConfettiMachinePrefabPath
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiMachinePrefabPath
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ConfettiMachinePrefabPath
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
    startLine: 51
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  summary: "\nPath to the desired confetti machine prefab.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DisplayName("Confetti Machine Path")]

      public string ConfettiMachinePrefabPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      <DisplayName("Confetti Machine Path")>

      Public Property ConfettiMachinePrefabPath As String
  overload: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiMachinePrefabPath*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Confetti Machine Path
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.AreaRadius
  commentId: P:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.AreaRadius
  id: AreaRadius
  parent: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData
  langs:
  - csharp
  - vb
  name: AreaRadius
  nameWithType: ConfettiBehavior.EntityData.AreaRadius
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.AreaRadius
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AreaRadius
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
    startLine: 58
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  summary: "\nRadius of the spawning area.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DisplayName("Area Radius")]

      public float AreaRadius { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      <DisplayName("Area Radius")>

      Public Property AreaRadius As Single
  overload: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.AreaRadius*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Area Radius
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Duration
  commentId: P:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Duration
  id: Duration
  parent: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: ConfettiBehavior.EntityData.Duration
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Duration
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Duration
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
    startLine: 65
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  summary: "\nDuration of the animation in seconds.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DisplayName("Duration")]

      public float Duration { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      <DisplayName("Duration")>

      Public Property Duration As Single
  overload: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Duration*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Duration
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ExecutionStages
  commentId: P:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ExecutionStages
  id: ExecutionStages
  parent: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData
  langs:
  - csharp
  - vb
  name: ExecutionStages
  nameWithType: ConfettiBehavior.EntityData.ExecutionStages
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ExecutionStages
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ExecutionStages
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
    startLine: 70
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  summary: "\nA property that determines if the Behavior should be run at activation or deactivation (or both).\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public BehaviorExecutionStages ExecutionStages { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.Behaviors.BehaviorExecutionStages
    content.vb: >-
      <DataMember>

      Public Property ExecutionStages As BehaviorExecutionStages
  overload: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ExecutionStages*
  implements:
  - VRBuilder.Core.Behaviors.IBehaviorExecutionStages.ExecutionStages
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiMachine
  commentId: P:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiMachine
  id: ConfettiMachine
  parent: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData
  langs:
  - csharp
  - vb
  name: ConfettiMachine
  nameWithType: ConfettiBehavior.EntityData.ConfettiMachine
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiMachine
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ConfettiMachine
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
    startLine: 73
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  syntax:
    content: public GameObject ConfettiMachine { get; set; }
    parameters: []
    return:
      type: GameObject
    content.vb: Public Property ConfettiMachine As GameObject
  overload: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiMachine*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Metadata
  commentId: P:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Metadata
  id: Metadata
  parent: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: ConfettiBehavior.EntityData.Metadata
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Metadata
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Metadata
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
    startLine: 75
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  syntax:
    content: public Metadata Metadata { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.Metadata
    content.vb: Public Property Metadata As Metadata
  overload: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Metadata*
  implements:
  - VRBuilder.Core.IData.Metadata
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Name
  commentId: P:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Name
  id: Name
  parent: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ConfettiBehavior.EntityData.Name
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Name
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Name
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ConfettiBehavior.cs
    startLine: 77
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  syntax:
    content: >-
      [IgnoreDataMember]

      public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <IgnoreDataMember>

      Public ReadOnly Property Name As String
  overload: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Name*
  implements:
  - VRBuilder.Core.INamedData.Name
  attributes:
  - type: System.Runtime.Serialization.IgnoreDataMemberAttribute
    ctor: System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: VRBuilder.Core.Behaviors
  commentId: N:VRBuilder.Core.Behaviors
  name: VRBuilder.Core.Behaviors
  nameWithType: VRBuilder.Core.Behaviors
  fullName: VRBuilder.Core.Behaviors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Behaviors.IBehaviorData
  commentId: T:VRBuilder.Core.Behaviors.IBehaviorData
  parent: VRBuilder.Core.Behaviors
  name: IBehaviorData
  nameWithType: IBehaviorData
  fullName: VRBuilder.Core.Behaviors.IBehaviorData
- uid: VRBuilder.Core.INamedData
  commentId: T:VRBuilder.Core.INamedData
  parent: VRBuilder.Core
  name: INamedData
  nameWithType: INamedData
  fullName: VRBuilder.Core.INamedData
- uid: VRBuilder.Core.IData
  commentId: T:VRBuilder.Core.IData
  parent: VRBuilder.Core
  name: IData
  nameWithType: IData
  fullName: VRBuilder.Core.IData
- uid: VRBuilder.Core.Behaviors.IBehaviorExecutionStages
  commentId: T:VRBuilder.Core.Behaviors.IBehaviorExecutionStages
  parent: VRBuilder.Core.Behaviors
  name: IBehaviorExecutionStages
  nameWithType: IBehaviorExecutionStages
  fullName: VRBuilder.Core.Behaviors.IBehaviorExecutionStages
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.IsAboveUser*
  commentId: Overload:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.IsAboveUser
  name: IsAboveUser
  nameWithType: ConfettiBehavior.EntityData.IsAboveUser
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.IsAboveUser
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiPosition*
  commentId: Overload:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiPosition
  name: ConfettiPosition
  nameWithType: ConfettiBehavior.EntityData.ConfettiPosition
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiPosition
- uid: VRBuilder.Core.SceneObjects.SingleSceneObjectReference
  commentId: T:VRBuilder.Core.SceneObjects.SingleSceneObjectReference
  parent: VRBuilder.Core.SceneObjects
  name: SingleSceneObjectReference
  nameWithType: SingleSceneObjectReference
  fullName: VRBuilder.Core.SceneObjects.SingleSceneObjectReference
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.PositionProvider*
  commentId: Overload:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.PositionProvider
  name: PositionProvider
  nameWithType: ConfettiBehavior.EntityData.PositionProvider
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.PositionProvider
- uid: VRBuilder.Core.SceneObjects.SceneObjectReference
  commentId: T:VRBuilder.Core.SceneObjects.SceneObjectReference
  parent: VRBuilder.Core.SceneObjects
  name: SceneObjectReference
  nameWithType: SceneObjectReference
  fullName: VRBuilder.Core.SceneObjects.SceneObjectReference
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiMachinePrefabPath*
  commentId: Overload:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiMachinePrefabPath
  name: ConfettiMachinePrefabPath
  nameWithType: ConfettiBehavior.EntityData.ConfettiMachinePrefabPath
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiMachinePrefabPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.AreaRadius*
  commentId: Overload:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.AreaRadius
  name: AreaRadius
  nameWithType: ConfettiBehavior.EntityData.AreaRadius
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.AreaRadius
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Duration*
  commentId: Overload:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Duration
  name: Duration
  nameWithType: ConfettiBehavior.EntityData.Duration
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Duration
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ExecutionStages*
  commentId: Overload:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ExecutionStages
  name: ExecutionStages
  nameWithType: ConfettiBehavior.EntityData.ExecutionStages
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ExecutionStages
- uid: VRBuilder.Core.Behaviors.IBehaviorExecutionStages.ExecutionStages
  commentId: P:VRBuilder.Core.Behaviors.IBehaviorExecutionStages.ExecutionStages
  parent: VRBuilder.Core.Behaviors.IBehaviorExecutionStages
  name: ExecutionStages
  nameWithType: IBehaviorExecutionStages.ExecutionStages
  fullName: VRBuilder.Core.Behaviors.IBehaviorExecutionStages.ExecutionStages
- uid: VRBuilder.Core.Behaviors.BehaviorExecutionStages
  commentId: T:VRBuilder.Core.Behaviors.BehaviorExecutionStages
  parent: VRBuilder.Core.Behaviors
  name: BehaviorExecutionStages
  nameWithType: BehaviorExecutionStages
  fullName: VRBuilder.Core.Behaviors.BehaviorExecutionStages
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiMachine*
  commentId: Overload:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiMachine
  name: ConfettiMachine
  nameWithType: ConfettiBehavior.EntityData.ConfettiMachine
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.ConfettiMachine
- uid: GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Metadata*
  commentId: Overload:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Metadata
  name: Metadata
  nameWithType: ConfettiBehavior.EntityData.Metadata
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Metadata
- uid: VRBuilder.Core.IData.Metadata
  commentId: P:VRBuilder.Core.IData.Metadata
  parent: VRBuilder.Core.IData
  name: Metadata
  nameWithType: IData.Metadata
  fullName: VRBuilder.Core.IData.Metadata
- uid: VRBuilder.Core.Metadata
  commentId: T:VRBuilder.Core.Metadata
  parent: VRBuilder.Core
  name: Metadata
  nameWithType: Metadata
  fullName: VRBuilder.Core.Metadata
- uid: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Name*
  commentId: Overload:VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Name
  name: Name
  nameWithType: ConfettiBehavior.EntityData.Name
  fullName: VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.Name
- uid: VRBuilder.Core.INamedData.Name
  commentId: P:VRBuilder.Core.INamedData.Name
  parent: VRBuilder.Core.INamedData
  name: Name
  nameWithType: INamedData.Name
  fullName: VRBuilder.Core.INamedData.Name
