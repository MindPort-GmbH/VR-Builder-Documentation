### YamlMime:ManagedReference
items:
- uid: VRBuilder.BasicInteraction.Properties.ISnappableProperty
  commentId: T:VRBuilder.BasicInteraction.Properties.ISnappableProperty
  id: ISnappableProperty
  parent: VRBuilder.BasicInteraction.Properties
  children:
  - VRBuilder.BasicInteraction.Properties.ISnappableProperty.AttachedToSnapZone
  - VRBuilder.BasicInteraction.Properties.ISnappableProperty.DetachedFromSnapZone
  - VRBuilder.BasicInteraction.Properties.ISnappableProperty.FastForwardSnapInto(VRBuilder.BasicInteraction.Properties.ISnapZoneProperty)
  - VRBuilder.BasicInteraction.Properties.ISnappableProperty.IsSnapped
  - VRBuilder.BasicInteraction.Properties.ISnappableProperty.LockObjectOnSnap
  - VRBuilder.BasicInteraction.Properties.ISnappableProperty.SnappedZone
  langs:
  - csharp
  - vb
  name: ISnappableProperty
  nameWithType: ISnappableProperty
  fullName: VRBuilder.BasicInteraction.Properties.ISnappableProperty
  type: Interface
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ISnappableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ISnappableProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ISnappableProperty.cs
    startLine: 7
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  syntax:
    content: 'public interface ISnappableProperty : ISceneObjectProperty, ILockable'
    content.vb: >-
      Public Interface ISnappableProperty
          Inherits ISceneObjectProperty, ILockable
  inheritedMembers:
  - VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
  - VRBuilder.Core.SceneObjects.ILockable.Locked
  - VRBuilder.Core.SceneObjects.ILockable.Unlocked
  - VRBuilder.Core.SceneObjects.ILockable.IsLocked
  - VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  - VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  - VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VRBuilder.BasicInteraction.Properties.ISnappableProperty.AttachedToSnapZone
  commentId: P:VRBuilder.BasicInteraction.Properties.ISnappableProperty.AttachedToSnapZone
  id: AttachedToSnapZone
  parent: VRBuilder.BasicInteraction.Properties.ISnappableProperty
  langs:
  - csharp
  - vb
  name: AttachedToSnapZone
  nameWithType: ISnappableProperty.AttachedToSnapZone
  fullName: VRBuilder.BasicInteraction.Properties.ISnappableProperty.AttachedToSnapZone
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ISnappableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AttachedToSnapZone
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ISnappableProperty.cs
    startLine: 12
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  summary: "\nCalled when the object is snapped to a snap zone.\n"
  example: []
  syntax:
    content: UnityEvent<SnappablePropertyEventArgs> AttachedToSnapZone { get; }
    parameters: []
    return:
      type: UnityEvent{VRBuilder.BasicInteraction.Properties.SnappablePropertyEventArgs}
    content.vb: ReadOnly Property AttachedToSnapZone As UnityEvent(Of SnappablePropertyEventArgs)
  overload: VRBuilder.BasicInteraction.Properties.ISnappableProperty.AttachedToSnapZone*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.BasicInteraction.Properties.ISnappableProperty.DetachedFromSnapZone
  commentId: P:VRBuilder.BasicInteraction.Properties.ISnappableProperty.DetachedFromSnapZone
  id: DetachedFromSnapZone
  parent: VRBuilder.BasicInteraction.Properties.ISnappableProperty
  langs:
  - csharp
  - vb
  name: DetachedFromSnapZone
  nameWithType: ISnappableProperty.DetachedFromSnapZone
  fullName: VRBuilder.BasicInteraction.Properties.ISnappableProperty.DetachedFromSnapZone
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ISnappableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DetachedFromSnapZone
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ISnappableProperty.cs
    startLine: 17
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  summary: "\nCalled when the object is unsnapped from a snap zone.\n"
  example: []
  syntax:
    content: UnityEvent<SnappablePropertyEventArgs> DetachedFromSnapZone { get; }
    parameters: []
    return:
      type: UnityEvent{VRBuilder.BasicInteraction.Properties.SnappablePropertyEventArgs}
    content.vb: ReadOnly Property DetachedFromSnapZone As UnityEvent(Of SnappablePropertyEventArgs)
  overload: VRBuilder.BasicInteraction.Properties.ISnappableProperty.DetachedFromSnapZone*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.BasicInteraction.Properties.ISnappableProperty.IsSnapped
  commentId: P:VRBuilder.BasicInteraction.Properties.ISnappableProperty.IsSnapped
  id: IsSnapped
  parent: VRBuilder.BasicInteraction.Properties.ISnappableProperty
  langs:
  - csharp
  - vb
  name: IsSnapped
  nameWithType: ISnappableProperty.IsSnapped
  fullName: VRBuilder.BasicInteraction.Properties.ISnappableProperty.IsSnapped
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ISnappableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsSnapped
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ISnappableProperty.cs
    startLine: 22
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  summary: "\nIs object currently snapped.\n"
  example: []
  syntax:
    content: bool IsSnapped { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsSnapped As Boolean
  overload: VRBuilder.BasicInteraction.Properties.ISnappableProperty.IsSnapped*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.BasicInteraction.Properties.ISnappableProperty.LockObjectOnSnap
  commentId: P:VRBuilder.BasicInteraction.Properties.ISnappableProperty.LockObjectOnSnap
  id: LockObjectOnSnap
  parent: VRBuilder.BasicInteraction.Properties.ISnappableProperty
  langs:
  - csharp
  - vb
  name: LockObjectOnSnap
  nameWithType: ISnappableProperty.LockObjectOnSnap
  fullName: VRBuilder.BasicInteraction.Properties.ISnappableProperty.LockObjectOnSnap
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ISnappableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LockObjectOnSnap
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ISnappableProperty.cs
    startLine: 27
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  summary: "\nWill object be locked when it has been snapped.\n"
  example: []
  syntax:
    content: bool LockObjectOnSnap { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property LockObjectOnSnap As Boolean
  overload: VRBuilder.BasicInteraction.Properties.ISnappableProperty.LockObjectOnSnap*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.BasicInteraction.Properties.ISnappableProperty.SnappedZone
  commentId: P:VRBuilder.BasicInteraction.Properties.ISnappableProperty.SnappedZone
  id: SnappedZone
  parent: VRBuilder.BasicInteraction.Properties.ISnappableProperty
  langs:
  - csharp
  - vb
  name: SnappedZone
  nameWithType: ISnappableProperty.SnappedZone
  fullName: VRBuilder.BasicInteraction.Properties.ISnappableProperty.SnappedZone
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ISnappableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SnappedZone
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ISnappableProperty.cs
    startLine: 32
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  summary: "\nZone to snap into.\n"
  example: []
  syntax:
    content: ISnapZoneProperty SnappedZone { get; set; }
    parameters: []
    return:
      type: VRBuilder.BasicInteraction.Properties.ISnapZoneProperty
    content.vb: Property SnappedZone As ISnapZoneProperty
  overload: VRBuilder.BasicInteraction.Properties.ISnappableProperty.SnappedZone*
  modifiers.csharp:
  - get
  - set
- uid: VRBuilder.BasicInteraction.Properties.ISnappableProperty.FastForwardSnapInto(VRBuilder.BasicInteraction.Properties.ISnapZoneProperty)
  commentId: M:VRBuilder.BasicInteraction.Properties.ISnappableProperty.FastForwardSnapInto(VRBuilder.BasicInteraction.Properties.ISnapZoneProperty)
  id: FastForwardSnapInto(VRBuilder.BasicInteraction.Properties.ISnapZoneProperty)
  parent: VRBuilder.BasicInteraction.Properties.ISnappableProperty
  langs:
  - csharp
  - vb
  name: FastForwardSnapInto(ISnapZoneProperty)
  nameWithType: ISnappableProperty.FastForwardSnapInto(ISnapZoneProperty)
  fullName: VRBuilder.BasicInteraction.Properties.ISnappableProperty.FastForwardSnapInto(VRBuilder.BasicInteraction.Properties.ISnapZoneProperty)
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ISnappableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: FastForwardSnapInto
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ISnappableProperty.cs
    startLine: 38
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  summary: "\nInstantaneously simulate that the object was snapped into given <code data-dev-comment-type=\"paramref\" class=\"paramref\">snapZone</code>.\n"
  example: []
  syntax:
    content: void FastForwardSnapInto(ISnapZoneProperty snapZone)
    parameters:
    - id: snapZone
      type: VRBuilder.BasicInteraction.Properties.ISnapZoneProperty
      description: Snap zone to snap into.
    content.vb: Sub FastForwardSnapInto(snapZone As ISnapZoneProperty)
  overload: VRBuilder.BasicInteraction.Properties.ISnappableProperty.FastForwardSnapInto*
references:
- uid: VRBuilder.BasicInteraction.Properties
  commentId: N:VRBuilder.BasicInteraction.Properties
  name: VRBuilder.BasicInteraction.Properties
  nameWithType: VRBuilder.BasicInteraction.Properties
  fullName: VRBuilder.BasicInteraction.Properties
- uid: VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
  commentId: P:VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
  parent: VRBuilder.Core.Properties.ISceneObjectProperty
  name: SceneObject
  nameWithType: ISceneObjectProperty.SceneObject
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
- uid: VRBuilder.Core.SceneObjects.ILockable.Locked
  commentId: E:VRBuilder.Core.SceneObjects.ILockable.Locked
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: Locked
  nameWithType: ILockable.Locked
  fullName: VRBuilder.Core.SceneObjects.ILockable.Locked
- uid: VRBuilder.Core.SceneObjects.ILockable.Unlocked
  commentId: E:VRBuilder.Core.SceneObjects.ILockable.Unlocked
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: Unlocked
  nameWithType: ILockable.Unlocked
  fullName: VRBuilder.Core.SceneObjects.ILockable.Unlocked
- uid: VRBuilder.Core.SceneObjects.ILockable.IsLocked
  commentId: P:VRBuilder.Core.SceneObjects.ILockable.IsLocked
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: IsLocked
  nameWithType: ILockable.IsLocked
  fullName: VRBuilder.Core.SceneObjects.ILockable.IsLocked
- uid: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  commentId: M:VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  parent: VRBuilder.Core.SceneObjects.ILockable
  isExternal: true
  name: SetLocked(Boolean)
  nameWithType: ILockable.SetLocked(Boolean)
  fullName: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
    name: SetLocked
    nameWithType: ILockable.SetLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.SetLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
    name: SetLocked
    nameWithType: ILockable.SetLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.SetLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  commentId: M:VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  parent: VRBuilder.Core.SceneObjects.ILockable
  isExternal: true
  name: RequestLocked(Boolean, IStepData)
  nameWithType: ILockable.RequestLocked(Boolean, IStepData)
  fullName: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean, VRBuilder.Core.IStepData)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
    name: RequestLocked
    nameWithType: ILockable.RequestLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.RequestLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
    name: RequestLocked
    nameWithType: ILockable.RequestLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.RequestLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  commentId: M:VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: RemoveUnlocker(IStepData)
  nameWithType: ILockable.RemoveUnlocker(IStepData)
  fullName: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
    name: RemoveUnlocker
    nameWithType: ILockable.RemoveUnlocker
    fullName: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
    name: RemoveUnlocker
    nameWithType: ILockable.RemoveUnlocker
    fullName: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ISceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ISceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ISceneObjectProperty
  nameWithType: ISceneObjectProperty
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty
- uid: VRBuilder.Core.SceneObjects.ILockable
  commentId: T:VRBuilder.Core.SceneObjects.ILockable
  parent: VRBuilder.Core.SceneObjects
  name: ILockable
  nameWithType: ILockable
  fullName: VRBuilder.Core.SceneObjects.ILockable
- uid: VRBuilder.Core.Properties
  commentId: N:VRBuilder.Core.Properties
  name: VRBuilder.Core.Properties
  nameWithType: VRBuilder.Core.Properties
  fullName: VRBuilder.Core.Properties
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: VRBuilder.BasicInteraction.Properties.ISnappableProperty.AttachedToSnapZone*
  commentId: Overload:VRBuilder.BasicInteraction.Properties.ISnappableProperty.AttachedToSnapZone
  name: AttachedToSnapZone
  nameWithType: ISnappableProperty.AttachedToSnapZone
  fullName: VRBuilder.BasicInteraction.Properties.ISnappableProperty.AttachedToSnapZone
- uid: UnityEvent{VRBuilder.BasicInteraction.Properties.SnappablePropertyEventArgs}
  commentId: '!:UnityEvent{VRBuilder.BasicInteraction.Properties.SnappablePropertyEventArgs}'
  definition: UnityEvent`1
  name: UnityEvent<SnappablePropertyEventArgs>
  nameWithType: UnityEvent<SnappablePropertyEventArgs>
  fullName: UnityEvent<VRBuilder.BasicInteraction.Properties.SnappablePropertyEventArgs>
  nameWithType.vb: UnityEvent(Of SnappablePropertyEventArgs)
  fullName.vb: UnityEvent(Of VRBuilder.BasicInteraction.Properties.SnappablePropertyEventArgs)
  name.vb: UnityEvent(Of SnappablePropertyEventArgs)
  spec.csharp:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.BasicInteraction.Properties.SnappablePropertyEventArgs
    name: SnappablePropertyEventArgs
    nameWithType: SnappablePropertyEventArgs
    fullName: VRBuilder.BasicInteraction.Properties.SnappablePropertyEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.BasicInteraction.Properties.SnappablePropertyEventArgs
    name: SnappablePropertyEventArgs
    nameWithType: SnappablePropertyEventArgs
    fullName: VRBuilder.BasicInteraction.Properties.SnappablePropertyEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEvent`1
  isExternal: true
  name: UnityEvent<>
  nameWithType: UnityEvent<>
  fullName: UnityEvent<>
  nameWithType.vb: UnityEvent(Of )
  fullName.vb: UnityEvent(Of )
  name.vb: UnityEvent(Of )
  spec.csharp:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.BasicInteraction.Properties.ISnappableProperty.DetachedFromSnapZone*
  commentId: Overload:VRBuilder.BasicInteraction.Properties.ISnappableProperty.DetachedFromSnapZone
  name: DetachedFromSnapZone
  nameWithType: ISnappableProperty.DetachedFromSnapZone
  fullName: VRBuilder.BasicInteraction.Properties.ISnappableProperty.DetachedFromSnapZone
- uid: VRBuilder.BasicInteraction.Properties.ISnappableProperty.IsSnapped*
  commentId: Overload:VRBuilder.BasicInteraction.Properties.ISnappableProperty.IsSnapped
  name: IsSnapped
  nameWithType: ISnappableProperty.IsSnapped
  fullName: VRBuilder.BasicInteraction.Properties.ISnappableProperty.IsSnapped
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.BasicInteraction.Properties.ISnappableProperty.LockObjectOnSnap*
  commentId: Overload:VRBuilder.BasicInteraction.Properties.ISnappableProperty.LockObjectOnSnap
  name: LockObjectOnSnap
  nameWithType: ISnappableProperty.LockObjectOnSnap
  fullName: VRBuilder.BasicInteraction.Properties.ISnappableProperty.LockObjectOnSnap
- uid: VRBuilder.BasicInteraction.Properties.ISnappableProperty.SnappedZone*
  commentId: Overload:VRBuilder.BasicInteraction.Properties.ISnappableProperty.SnappedZone
  name: SnappedZone
  nameWithType: ISnappableProperty.SnappedZone
  fullName: VRBuilder.BasicInteraction.Properties.ISnappableProperty.SnappedZone
- uid: VRBuilder.BasicInteraction.Properties.ISnapZoneProperty
  commentId: T:VRBuilder.BasicInteraction.Properties.ISnapZoneProperty
  parent: VRBuilder.BasicInteraction.Properties
  name: ISnapZoneProperty
  nameWithType: ISnapZoneProperty
  fullName: VRBuilder.BasicInteraction.Properties.ISnapZoneProperty
- uid: VRBuilder.BasicInteraction.Properties.ISnappableProperty.FastForwardSnapInto*
  commentId: Overload:VRBuilder.BasicInteraction.Properties.ISnappableProperty.FastForwardSnapInto
  name: FastForwardSnapInto
  nameWithType: ISnappableProperty.FastForwardSnapInto
  fullName: VRBuilder.BasicInteraction.Properties.ISnappableProperty.FastForwardSnapInto
