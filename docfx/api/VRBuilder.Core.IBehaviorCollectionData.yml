### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.IBehaviorCollectionData
  commentId: T:VRBuilder.Core.IBehaviorCollectionData
  id: IBehaviorCollectionData
  parent: VRBuilder.Core
  children:
  - VRBuilder.Core.IBehaviorCollectionData.Behaviors
  langs:
  - csharp
  - vb
  name: IBehaviorCollectionData
  nameWithType: IBehaviorCollectionData
  fullName: VRBuilder.Core.IBehaviorCollectionData
  type: Interface
  source:
    remote:
      path: Source/Core/Runtime/IBehaviorCollectionData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IBehaviorCollectionData
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IBehaviorCollectionData.cs
    startLine: 13
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nA data that contains a list of <xref href=\"VRBuilder.Core.Behaviors.IBehavior\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: 'public interface IBehaviorCollectionData : IEntityCollectionDataWithMode<IBehavior>, IEntityCollectionData<IBehavior>, IEntityCollectionDataWithMode, IEntityCollectionData, IModeData, IData'
    content.vb: >-
      Public Interface IBehaviorCollectionData
          Inherits IEntityCollectionDataWithMode(Of IBehavior)
  inheritedMembers:
  - VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.Behaviors.IBehavior}.GetChildren
  - VRBuilder.Core.Configuration.Modes.IModeData.Mode
  - VRBuilder.Core.IData.Metadata
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VRBuilder.Core.IBehaviorCollectionData.Behaviors
  commentId: P:VRBuilder.Core.IBehaviorCollectionData.Behaviors
  id: Behaviors
  parent: VRBuilder.Core.IBehaviorCollectionData
  langs:
  - csharp
  - vb
  name: Behaviors
  nameWithType: IBehaviorCollectionData.Behaviors
  fullName: VRBuilder.Core.IBehaviorCollectionData.Behaviors
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/IBehaviorCollectionData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Behaviors
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IBehaviorCollectionData.cs
    startLine: 18
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nA list of <xref href=\"VRBuilder.Core.Behaviors.IBehavior\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: IList<IBehavior> Behaviors { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{VRBuilder.Core.Behaviors.IBehavior}
    content.vb: Property Behaviors As IList(Of IBehavior)
  overload: VRBuilder.Core.IBehaviorCollectionData.Behaviors*
  modifiers.csharp:
  - get
  - set
references:
- uid: VRBuilder.Core.Behaviors.IBehavior
  commentId: T:VRBuilder.Core.Behaviors.IBehavior
  parent: VRBuilder.Core.Behaviors
  name: IBehavior
  nameWithType: IBehavior
  fullName: VRBuilder.Core.Behaviors.IBehavior
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.Behaviors.IBehavior}.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.Behaviors.IBehavior}.GetChildren
  parent: VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.Behaviors.IBehavior}
  definition: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: IEntityCollectionData<IBehavior>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<VRBuilder.Core.Behaviors.IBehavior>.GetChildren()
  nameWithType.vb: IEntityCollectionData(Of IBehavior).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of VRBuilder.Core.Behaviors.IBehavior).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData<IBehavior>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<VRBuilder.Core.Behaviors.IBehavior>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData(Of IBehavior).GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of VRBuilder.Core.Behaviors.IBehavior).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes.IModeData.Mode
  commentId: P:VRBuilder.Core.Configuration.Modes.IModeData.Mode
  parent: VRBuilder.Core.Configuration.Modes.IModeData
  name: Mode
  nameWithType: IModeData.Mode
  fullName: VRBuilder.Core.Configuration.Modes.IModeData.Mode
- uid: VRBuilder.Core.IData.Metadata
  commentId: P:VRBuilder.Core.IData.Metadata
  parent: VRBuilder.Core.IData
  name: Metadata
  nameWithType: IData.Metadata
  fullName: VRBuilder.Core.IData.Metadata
- uid: VRBuilder.Core.Behaviors
  commentId: N:VRBuilder.Core.Behaviors
  name: VRBuilder.Core.Behaviors
  nameWithType: VRBuilder.Core.Behaviors
  fullName: VRBuilder.Core.Behaviors
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: IEntityCollectionData<TEntity>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren()
  nameWithType.vb: IEntityCollectionData(Of TEntity).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData<TEntity>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData(Of TEntity).GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.Behaviors.IBehavior}
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.Behaviors.IBehavior}
  parent: VRBuilder.Core.EntityOwners
  definition: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  name: IEntityCollectionData<IBehavior>
  nameWithType: IEntityCollectionData<IBehavior>
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<VRBuilder.Core.Behaviors.IBehavior>
  nameWithType.vb: IEntityCollectionData(Of IBehavior)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of VRBuilder.Core.Behaviors.IBehavior)
  name.vb: IEntityCollectionData(Of IBehavior)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Behaviors.IBehavior
    name: IBehavior
    nameWithType: IBehavior
    fullName: VRBuilder.Core.Behaviors.IBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Behaviors.IBehavior
    name: IBehavior
    nameWithType: IBehavior
    fullName: VRBuilder.Core.Behaviors.IBehavior
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes.IModeData
  commentId: T:VRBuilder.Core.Configuration.Modes.IModeData
  parent: VRBuilder.Core.Configuration.Modes
  name: IModeData
  nameWithType: IModeData
  fullName: VRBuilder.Core.Configuration.Modes.IModeData
- uid: VRBuilder.Core.IData
  commentId: T:VRBuilder.Core.IData
  parent: VRBuilder.Core
  name: IData
  nameWithType: IData
  fullName: VRBuilder.Core.IData
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  name: IEntityCollectionData<TEntity>
  nameWithType: IEntityCollectionData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>
  nameWithType.vb: IEntityCollectionData(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity)
  name.vb: IEntityCollectionData(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners
  commentId: N:VRBuilder.Core.EntityOwners
  name: VRBuilder.Core.EntityOwners
  nameWithType: VRBuilder.Core.EntityOwners
  fullName: VRBuilder.Core.EntityOwners
- uid: VRBuilder.Core.Configuration.Modes
  commentId: N:VRBuilder.Core.Configuration.Modes
  name: VRBuilder.Core.Configuration.Modes
  nameWithType: VRBuilder.Core.Configuration.Modes
  fullName: VRBuilder.Core.Configuration.Modes
- uid: VRBuilder.Core.IBehaviorCollectionData.Behaviors*
  commentId: Overload:VRBuilder.Core.IBehaviorCollectionData.Behaviors
  name: Behaviors
  nameWithType: IBehaviorCollectionData.Behaviors
  fullName: VRBuilder.Core.IBehaviorCollectionData.Behaviors
- uid: System.Collections.Generic.IList{VRBuilder.Core.Behaviors.IBehavior}
  commentId: T:System.Collections.Generic.IList{VRBuilder.Core.Behaviors.IBehavior}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IBehavior>
  nameWithType: IList<IBehavior>
  fullName: System.Collections.Generic.IList<VRBuilder.Core.Behaviors.IBehavior>
  nameWithType.vb: IList(Of IBehavior)
  fullName.vb: System.Collections.Generic.IList(Of VRBuilder.Core.Behaviors.IBehavior)
  name.vb: IList(Of IBehavior)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Behaviors.IBehavior
    name: IBehavior
    nameWithType: IBehavior
    fullName: VRBuilder.Core.Behaviors.IBehavior
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Behaviors.IBehavior
    name: IBehavior
    nameWithType: IBehavior
    fullName: VRBuilder.Core.Behaviors.IBehavior
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
