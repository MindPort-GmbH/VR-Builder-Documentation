### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Step.EntityData
  commentId: T:VRBuilder.Core.Step.EntityData
  id: Step.EntityData
  parent: VRBuilder.Core
  children:
  - VRBuilder.Core.Step.EntityData.#ctor
  - VRBuilder.Core.Step.EntityData.Behaviors
  - VRBuilder.Core.Step.EntityData.Current
  - VRBuilder.Core.Step.EntityData.Description
  - VRBuilder.Core.Step.EntityData.GetChildren
  - VRBuilder.Core.Step.EntityData.GroupsToUnlock
  - VRBuilder.Core.Step.EntityData.Mode
  - VRBuilder.Core.Step.EntityData.Name
  - VRBuilder.Core.Step.EntityData.SetName(System.String)
  - VRBuilder.Core.Step.EntityData.TagsToUnlock
  - VRBuilder.Core.Step.EntityData.ToUnlock
  - VRBuilder.Core.Step.EntityData.Transitions
  - VRBuilder.Core.Step.EntityData.VRBuilder#Core#EntityOwners#IEntitySequenceData#Current
  langs:
  - csharp
  - vb
  name: Step.EntityData
  nameWithType: Step.EntityData
  fullName: VRBuilder.Core.Step.EntityData
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EntityData
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 30
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  syntax:
    content: 'public class EntityData : EntityCollectionData<IStepChild>, IStepData, IRenameableData, INamedData, IDescribedData, IEntitySequenceDataWithMode<IStepChild>, IEntitySequenceData<IStepChild>, IEntityCollectionData<IStepChild>, IEntityCollectionData, IEntitySequenceData, IModeData, IData'
    content.vb: >-
      Public Class EntityData
          Inherits EntityCollectionData(Of IStepChild)
          Implements IStepData, IRenameableData, INamedData, IDescribedData, IEntitySequenceDataWithMode(Of IStepChild), IEntitySequenceData(Of IStepChild), IEntityCollectionData(Of IStepChild), IEntityCollectionData, IEntitySequenceData, IModeData, IData
  inheritance:
  - System.Object
  - VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStepChild}
  implements:
  - VRBuilder.Core.IStepData
  - VRBuilder.Core.IRenameableData
  - VRBuilder.Core.INamedData
  - VRBuilder.Core.IDescribedData
  - VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode{VRBuilder.Core.IStepChild}
  - VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IStepChild}
  - VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IStepChild}
  - VRBuilder.Core.EntityOwners.IEntityCollectionData
  - VRBuilder.Core.EntityOwners.IEntitySequenceData
  - VRBuilder.Core.Configuration.Modes.IModeData
  - VRBuilder.Core.IData
  inheritedMembers:
  - VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStepChild}.Metadata
  - VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStepChild}.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.Step.EntityData.Name
  commentId: P:VRBuilder.Core.Step.EntityData.Name
  id: Name
  parent: VRBuilder.Core.Step.EntityData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Step.EntityData.Name
  fullName: VRBuilder.Core.Step.EntityData.Name
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Name
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 33
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nName of the entity.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DrawingPriority(0)]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      <DrawingPriority(0)>

      Public Property Name As String
  overload: VRBuilder.Core.Step.EntityData.Name*
  implements:
  - VRBuilder.Core.INamedData.Name
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: VRBuilder.Core.Attributes.DrawingPriorityAttribute
    ctor: VRBuilder.Core.Attributes.DrawingPriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 0
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Step.EntityData.Description
  commentId: P:VRBuilder.Core.Step.EntityData.Description
  id: Description
  parent: VRBuilder.Core.Step.EntityData
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Step.EntityData.Description
  fullName: VRBuilder.Core.Step.EntityData.Description
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Description
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 39
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\n<xref href=\"VRBuilder.Core.IStep\" data-throw-if-not-resolved=\"false\"></xref>&apos;s description.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DrawingPriority(1)]

      public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      <DrawingPriority(1)>

      Public Property Description As String
  overload: VRBuilder.Core.Step.EntityData.Description*
  implements:
  - VRBuilder.Core.IDescribedData.Description
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: VRBuilder.Core.Attributes.DrawingPriorityAttribute
    ctor: VRBuilder.Core.Attributes.DrawingPriorityAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Step.EntityData.Behaviors
  commentId: P:VRBuilder.Core.Step.EntityData.Behaviors
  id: Behaviors
  parent: VRBuilder.Core.Step.EntityData
  langs:
  - csharp
  - vb
  name: Behaviors
  nameWithType: Step.EntityData.Behaviors
  fullName: VRBuilder.Core.Step.EntityData.Behaviors
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Behaviors
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 44
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nThe list of the step&apos;s behaviors.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public IBehaviorCollection Behaviors { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.IBehaviorCollection
    content.vb: >-
      <DataMember>

      Public Property Behaviors As IBehaviorCollection
  overload: VRBuilder.Core.Step.EntityData.Behaviors*
  implements:
  - VRBuilder.Core.IStepData.Behaviors
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Step.EntityData.Transitions
  commentId: P:VRBuilder.Core.Step.EntityData.Transitions
  id: Transitions
  parent: VRBuilder.Core.Step.EntityData
  langs:
  - csharp
  - vb
  name: Transitions
  nameWithType: Step.EntityData.Transitions
  fullName: VRBuilder.Core.Step.EntityData.Transitions
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Transitions
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 49
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nThe list of the step&apos;s transitions.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public ITransitionCollection Transitions { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.ITransitionCollection
    content.vb: >-
      <DataMember>

      Public Property Transitions As ITransitionCollection
  overload: VRBuilder.Core.Step.EntityData.Transitions*
  implements:
  - VRBuilder.Core.IStepData.Transitions
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Step.EntityData.GetChildren
  commentId: M:VRBuilder.Core.Step.EntityData.GetChildren
  id: GetChildren
  parent: VRBuilder.Core.Step.EntityData
  langs:
  - csharp
  - vb
  name: GetChildren()
  nameWithType: Step.EntityData.GetChildren()
  fullName: VRBuilder.Core.Step.EntityData.GetChildren()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetChildren
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 54
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: public override IEnumerable<IStepChild> GetChildren()
    return:
      type: System.Collections.Generic.IEnumerable{VRBuilder.Core.IStepChild}
    content.vb: Public Overrides Function GetChildren As IEnumerable(Of IStepChild)
  overridden: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStepChild}.GetChildren
  overload: VRBuilder.Core.Step.EntityData.GetChildren*
  implements:
  - VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IStepChild}.GetChildren
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Core.Step.EntityData.SetName(System.String)
  commentId: M:VRBuilder.Core.Step.EntityData.SetName(System.String)
  id: SetName(System.String)
  parent: VRBuilder.Core.Step.EntityData
  langs:
  - csharp
  - vb
  name: SetName(String)
  nameWithType: Step.EntityData.SetName(String)
  fullName: VRBuilder.Core.Step.EntityData.SetName(System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 64
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nSet the new name.\n"
  example: []
  syntax:
    content: public void SetName(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub SetName(name As String)
  overload: VRBuilder.Core.Step.EntityData.SetName*
  implements:
  - VRBuilder.Core.IRenameableData.SetName(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Step.EntityData.Current
  commentId: P:VRBuilder.Core.Step.EntityData.Current
  id: Current
  parent: VRBuilder.Core.Step.EntityData
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: Step.EntityData.Current
  fullName: VRBuilder.Core.Step.EntityData.Current
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Current
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 70
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nCurrent entity in the sequence.\n"
  example: []
  syntax:
    content: >-
      [IgnoreDataMember]

      public IStepChild Current { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.IStepChild
    content.vb: >-
      <IgnoreDataMember>

      Public Property Current As IStepChild
  overload: VRBuilder.Core.Step.EntityData.Current*
  implements:
  - VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IStepChild}.Current
  attributes:
  - type: System.Runtime.Serialization.IgnoreDataMemberAttribute
    ctor: System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Step.EntityData.Mode
  commentId: P:VRBuilder.Core.Step.EntityData.Mode
  id: Mode
  parent: VRBuilder.Core.Step.EntityData
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: Step.EntityData.Mode
  fullName: VRBuilder.Core.Step.EntityData.Mode
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Mode
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 74
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: public IMode Mode { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.Configuration.Modes.IMode
    content.vb: Public Property Mode As IMode
  overload: VRBuilder.Core.Step.EntityData.Mode*
  implements:
  - VRBuilder.Core.Configuration.Modes.IModeData.Mode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Step.EntityData.ToUnlock
  commentId: P:VRBuilder.Core.Step.EntityData.ToUnlock
  id: ToUnlock
  parent: VRBuilder.Core.Step.EntityData
  langs:
  - csharp
  - vb
  name: ToUnlock
  nameWithType: Step.EntityData.ToUnlock
  fullName: VRBuilder.Core.Step.EntityData.ToUnlock
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ToUnlock
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 77
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: >-
      [DataMember]

      public IEnumerable<LockablePropertyReference> ToUnlock { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VRBuilder.Core.Behaviors.LockablePropertyReference}
    content.vb: >-
      <DataMember>

      Public Property ToUnlock As IEnumerable(Of LockablePropertyReference)
  overload: VRBuilder.Core.Step.EntityData.ToUnlock*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Step.EntityData.TagsToUnlock
  commentId: P:VRBuilder.Core.Step.EntityData.TagsToUnlock
  id: TagsToUnlock
  parent: VRBuilder.Core.Step.EntityData
  langs:
  - csharp
  - vb
  name: TagsToUnlock
  nameWithType: Step.EntityData.TagsToUnlock
  fullName: VRBuilder.Core.Step.EntityData.TagsToUnlock
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: TagsToUnlock
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 82
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: >-
      [Obsolete("Use GroupsToUnlock instead.")]

      public IDictionary<Guid, IEnumerable<Type>> TagsToUnlock { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IEnumerable{System.Type}}
    content.vb: >-
      <Obsolete("Use GroupsToUnlock instead.")>

      Public Property TagsToUnlock As IDictionary(Of Guid, IEnumerable(Of Type))
  overload: VRBuilder.Core.Step.EntityData.TagsToUnlock*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use GroupsToUnlock instead.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Step.EntityData.GroupsToUnlock
  commentId: P:VRBuilder.Core.Step.EntityData.GroupsToUnlock
  id: GroupsToUnlock
  parent: VRBuilder.Core.Step.EntityData
  langs:
  - csharp
  - vb
  name: GroupsToUnlock
  nameWithType: Step.EntityData.GroupsToUnlock
  fullName: VRBuilder.Core.Step.EntityData.GroupsToUnlock
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GroupsToUnlock
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 90
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  syntax:
    content: public IDictionary<Guid, IEnumerable<Type>> GroupsToUnlock { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IEnumerable{System.Type}}
    content.vb: Public Property GroupsToUnlock As IDictionary(Of Guid, IEnumerable(Of Type))
  overload: VRBuilder.Core.Step.EntityData.GroupsToUnlock*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Step.EntityData.VRBuilder#Core#EntityOwners#IEntitySequenceData#Current
  commentId: P:VRBuilder.Core.Step.EntityData.VRBuilder#Core#EntityOwners#IEntitySequenceData#Current
  id: VRBuilder#Core#EntityOwners#IEntitySequenceData#Current
  isEii: true
  parent: VRBuilder.Core.Step.EntityData
  langs:
  - csharp
  - vb
  name: IEntitySequenceData.Current
  nameWithType: Step.EntityData.IEntitySequenceData.Current
  fullName: VRBuilder.Core.Step.EntityData.VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 94
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nCurrent entity in the sequence.\n"
  example: []
  syntax:
    content: IEntity IEntitySequenceData.Current { get; }
    parameters: []
    return:
      type: VRBuilder.Core.IEntity
    content.vb: ReadOnly WriteOnly Property VRBuilder.Core.EntityOwners.IEntitySequenceData.Current As IEntity Implements IEntitySequenceData.Current
  overload: VRBuilder.Core.Step.EntityData.VRBuilder#Core#EntityOwners#IEntitySequenceData#Current*
  implements:
  - VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
  nameWithType.vb: Step.EntityData.VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
- uid: VRBuilder.Core.Step.EntityData.#ctor
  commentId: M:VRBuilder.Core.Step.EntityData.#ctor
  id: '#ctor'
  parent: VRBuilder.Core.Step.EntityData
  langs:
  - csharp
  - vb
  name: EntityData()
  nameWithType: Step.EntityData.EntityData()
  fullName: VRBuilder.Core.Step.EntityData.EntityData()
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/Step.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Step.cs
    startLine: 96
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  syntax:
    content: public EntityData()
    content.vb: Public Sub New
  overload: VRBuilder.Core.Step.EntityData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStepChild}
  commentId: T:VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStepChild}
  parent: VRBuilder.Core.EntityOwners
  definition: VRBuilder.Core.EntityOwners.EntityCollectionData`1
  name: EntityCollectionData<IStepChild>
  nameWithType: EntityCollectionData<IStepChild>
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IStepChild>
  nameWithType.vb: EntityCollectionData(Of IStepChild)
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of VRBuilder.Core.IStepChild)
  name.vb: EntityCollectionData(Of IStepChild)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1
    name: EntityCollectionData
    nameWithType: EntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IStepChild
    name: IStepChild
    nameWithType: IStepChild
    fullName: VRBuilder.Core.IStepChild
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1
    name: EntityCollectionData
    nameWithType: EntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IStepChild
    name: IStepChild
    nameWithType: IStepChild
    fullName: VRBuilder.Core.IStepChild
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IStepData
  commentId: T:VRBuilder.Core.IStepData
  parent: VRBuilder.Core
  name: IStepData
  nameWithType: IStepData
  fullName: VRBuilder.Core.IStepData
- uid: VRBuilder.Core.IRenameableData
  commentId: T:VRBuilder.Core.IRenameableData
  parent: VRBuilder.Core
  name: IRenameableData
  nameWithType: IRenameableData
  fullName: VRBuilder.Core.IRenameableData
- uid: VRBuilder.Core.INamedData
  commentId: T:VRBuilder.Core.INamedData
  parent: VRBuilder.Core
  name: INamedData
  nameWithType: INamedData
  fullName: VRBuilder.Core.INamedData
- uid: VRBuilder.Core.IDescribedData
  commentId: T:VRBuilder.Core.IDescribedData
  parent: VRBuilder.Core
  name: IDescribedData
  nameWithType: IDescribedData
  fullName: VRBuilder.Core.IDescribedData
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode{VRBuilder.Core.IStepChild}
  commentId: T:VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode{VRBuilder.Core.IStepChild}
  parent: VRBuilder.Core.EntityOwners
  definition: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode`1
  name: IEntitySequenceDataWithMode<IStepChild>
  nameWithType: IEntitySequenceDataWithMode<IStepChild>
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode<VRBuilder.Core.IStepChild>
  nameWithType.vb: IEntitySequenceDataWithMode(Of IStepChild)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode(Of VRBuilder.Core.IStepChild)
  name.vb: IEntitySequenceDataWithMode(Of IStepChild)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode`1
    name: IEntitySequenceDataWithMode
    nameWithType: IEntitySequenceDataWithMode
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IStepChild
    name: IStepChild
    nameWithType: IStepChild
    fullName: VRBuilder.Core.IStepChild
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode`1
    name: IEntitySequenceDataWithMode
    nameWithType: IEntitySequenceDataWithMode
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IStepChild
    name: IStepChild
    nameWithType: IStepChild
    fullName: VRBuilder.Core.IStepChild
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IStepChild}
  commentId: T:VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IStepChild}
  parent: VRBuilder.Core.EntityOwners
  definition: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
  name: IEntitySequenceData<IStepChild>
  nameWithType: IEntitySequenceData<IStepChild>
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData<VRBuilder.Core.IStepChild>
  nameWithType.vb: IEntitySequenceData(Of IStepChild)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData(Of VRBuilder.Core.IStepChild)
  name.vb: IEntitySequenceData(Of IStepChild)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
    name: IEntitySequenceData
    nameWithType: IEntitySequenceData
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IStepChild
    name: IStepChild
    nameWithType: IStepChild
    fullName: VRBuilder.Core.IStepChild
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
    name: IEntitySequenceData
    nameWithType: IEntitySequenceData
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IStepChild
    name: IStepChild
    nameWithType: IStepChild
    fullName: VRBuilder.Core.IStepChild
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IStepChild}
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IStepChild}
  parent: VRBuilder.Core.EntityOwners
  definition: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  name: IEntityCollectionData<IStepChild>
  nameWithType: IEntityCollectionData<IStepChild>
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<VRBuilder.Core.IStepChild>
  nameWithType.vb: IEntityCollectionData(Of IStepChild)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of VRBuilder.Core.IStepChild)
  name.vb: IEntityCollectionData(Of IStepChild)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IStepChild
    name: IStepChild
    nameWithType: IStepChild
    fullName: VRBuilder.Core.IStepChild
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IStepChild
    name: IStepChild
    nameWithType: IStepChild
    fullName: VRBuilder.Core.IStepChild
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData
  parent: VRBuilder.Core.EntityOwners
  name: IEntityCollectionData
  nameWithType: IEntityCollectionData
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData
  commentId: T:VRBuilder.Core.EntityOwners.IEntitySequenceData
  parent: VRBuilder.Core.EntityOwners
  name: IEntitySequenceData
  nameWithType: IEntitySequenceData
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
- uid: VRBuilder.Core.Configuration.Modes.IModeData
  commentId: T:VRBuilder.Core.Configuration.Modes.IModeData
  parent: VRBuilder.Core.Configuration.Modes
  name: IModeData
  nameWithType: IModeData
  fullName: VRBuilder.Core.Configuration.Modes.IModeData
- uid: VRBuilder.Core.IData
  commentId: T:VRBuilder.Core.IData
  parent: VRBuilder.Core
  name: IData
  nameWithType: IData
  fullName: VRBuilder.Core.IData
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStepChild}.Metadata
  commentId: P:VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStepChild}.Metadata
  parent: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStepChild}
  definition: VRBuilder.Core.EntityOwners.EntityCollectionData`1.Metadata
  name: Metadata
  nameWithType: EntityCollectionData<IStepChild>.Metadata
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IStepChild>.Metadata
  nameWithType.vb: EntityCollectionData(Of IStepChild).Metadata
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of VRBuilder.Core.IStepChild).Metadata
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStepChild}.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStepChild}.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  parent: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStepChild}
  definition: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  name: IEntityCollectionData.GetChildren()
  nameWithType: EntityCollectionData<IStepChild>.IEntityCollectionData.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IStepChild>.VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  nameWithType.vb: EntityCollectionData(Of IStepChild).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of VRBuilder.Core.IStepChild).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  name.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
    name: IEntityCollectionData.GetChildren
    nameWithType: EntityCollectionData<IStepChild>.IEntityCollectionData.GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IStepChild>.VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
    name: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
    nameWithType: EntityCollectionData(Of IStepChild).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData(Of VRBuilder.Core.IStepChild).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1
  commentId: T:VRBuilder.Core.EntityOwners.EntityCollectionData`1
  name: EntityCollectionData<TEntity>
  nameWithType: EntityCollectionData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>
  nameWithType.vb: EntityCollectionData(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity)
  name.vb: EntityCollectionData(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1
    name: EntityCollectionData
    nameWithType: EntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1
    name: EntityCollectionData
    nameWithType: EntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners
  commentId: N:VRBuilder.Core.EntityOwners
  name: VRBuilder.Core.EntityOwners
  nameWithType: VRBuilder.Core.EntityOwners
  fullName: VRBuilder.Core.EntityOwners
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode`1
  commentId: T:VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode`1
  name: IEntitySequenceDataWithMode<TEntity>
  nameWithType: IEntitySequenceDataWithMode<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode<TEntity>
  nameWithType.vb: IEntitySequenceDataWithMode(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode(Of TEntity)
  name.vb: IEntitySequenceDataWithMode(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode`1
    name: IEntitySequenceDataWithMode
    nameWithType: IEntitySequenceDataWithMode
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode`1
    name: IEntitySequenceDataWithMode
    nameWithType: IEntitySequenceDataWithMode
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
  commentId: T:VRBuilder.Core.EntityOwners.IEntitySequenceData`1
  name: IEntitySequenceData<TEntity>
  nameWithType: IEntitySequenceData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>
  nameWithType.vb: IEntitySequenceData(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData(Of TEntity)
  name.vb: IEntitySequenceData(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
    name: IEntitySequenceData
    nameWithType: IEntitySequenceData
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
    name: IEntitySequenceData
    nameWithType: IEntitySequenceData
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  name: IEntityCollectionData<TEntity>
  nameWithType: IEntityCollectionData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>
  nameWithType.vb: IEntityCollectionData(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity)
  name.vb: IEntityCollectionData(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes
  commentId: N:VRBuilder.Core.Configuration.Modes
  name: VRBuilder.Core.Configuration.Modes
  nameWithType: VRBuilder.Core.Configuration.Modes
  fullName: VRBuilder.Core.Configuration.Modes
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.Metadata
  commentId: P:VRBuilder.Core.EntityOwners.EntityCollectionData`1.Metadata
  name: Metadata
  nameWithType: EntityCollectionData<TEntity>.Metadata
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.Metadata
  nameWithType.vb: EntityCollectionData(Of TEntity).Metadata
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).Metadata
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  name: IEntityCollectionData.GetChildren()
  nameWithType: EntityCollectionData<TEntity>.IEntityCollectionData.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  nameWithType.vb: EntityCollectionData(Of TEntity).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  name.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
    name: IEntityCollectionData.GetChildren
    nameWithType: EntityCollectionData<TEntity>.IEntityCollectionData.GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
    name: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
    nameWithType: EntityCollectionData(Of TEntity).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Step.EntityData.Name*
  commentId: Overload:VRBuilder.Core.Step.EntityData.Name
  name: Name
  nameWithType: Step.EntityData.Name
  fullName: VRBuilder.Core.Step.EntityData.Name
- uid: VRBuilder.Core.INamedData.Name
  commentId: P:VRBuilder.Core.INamedData.Name
  parent: VRBuilder.Core.INamedData
  name: Name
  nameWithType: INamedData.Name
  fullName: VRBuilder.Core.INamedData.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Core.Step.EntityData.Description*
  commentId: Overload:VRBuilder.Core.Step.EntityData.Description
  name: Description
  nameWithType: Step.EntityData.Description
  fullName: VRBuilder.Core.Step.EntityData.Description
- uid: VRBuilder.Core.IDescribedData.Description
  commentId: P:VRBuilder.Core.IDescribedData.Description
  parent: VRBuilder.Core.IDescribedData
  name: Description
  nameWithType: IDescribedData.Description
  fullName: VRBuilder.Core.IDescribedData.Description
- uid: VRBuilder.Core.Step.EntityData.Behaviors*
  commentId: Overload:VRBuilder.Core.Step.EntityData.Behaviors
  name: Behaviors
  nameWithType: Step.EntityData.Behaviors
  fullName: VRBuilder.Core.Step.EntityData.Behaviors
- uid: VRBuilder.Core.IStepData.Behaviors
  commentId: P:VRBuilder.Core.IStepData.Behaviors
  parent: VRBuilder.Core.IStepData
  name: Behaviors
  nameWithType: IStepData.Behaviors
  fullName: VRBuilder.Core.IStepData.Behaviors
- uid: VRBuilder.Core.IBehaviorCollection
  commentId: T:VRBuilder.Core.IBehaviorCollection
  parent: VRBuilder.Core
  name: IBehaviorCollection
  nameWithType: IBehaviorCollection
  fullName: VRBuilder.Core.IBehaviorCollection
- uid: VRBuilder.Core.Step.EntityData.Transitions*
  commentId: Overload:VRBuilder.Core.Step.EntityData.Transitions
  name: Transitions
  nameWithType: Step.EntityData.Transitions
  fullName: VRBuilder.Core.Step.EntityData.Transitions
- uid: VRBuilder.Core.IStepData.Transitions
  commentId: P:VRBuilder.Core.IStepData.Transitions
  parent: VRBuilder.Core.IStepData
  name: Transitions
  nameWithType: IStepData.Transitions
  fullName: VRBuilder.Core.IStepData.Transitions
- uid: VRBuilder.Core.ITransitionCollection
  commentId: T:VRBuilder.Core.ITransitionCollection
  parent: VRBuilder.Core
  name: ITransitionCollection
  nameWithType: ITransitionCollection
  fullName: VRBuilder.Core.ITransitionCollection
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStepChild}.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStepChild}.GetChildren
  parent: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStepChild}
  definition: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: EntityCollectionData<IStepChild>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IStepChild>.GetChildren()
  nameWithType.vb: EntityCollectionData(Of IStepChild).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of VRBuilder.Core.IStepChild).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: EntityCollectionData<IStepChild>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IStepChild>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: EntityCollectionData(Of IStepChild).GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData(Of VRBuilder.Core.IStepChild).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Step.EntityData.GetChildren*
  commentId: Overload:VRBuilder.Core.Step.EntityData.GetChildren
  name: GetChildren
  nameWithType: Step.EntityData.GetChildren
  fullName: VRBuilder.Core.Step.EntityData.GetChildren
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IStepChild}.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IStepChild}.GetChildren
  parent: VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IStepChild}
  definition: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: IEntityCollectionData<IStepChild>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<VRBuilder.Core.IStepChild>.GetChildren()
  nameWithType.vb: IEntityCollectionData(Of IStepChild).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of VRBuilder.Core.IStepChild).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData<IStepChild>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<VRBuilder.Core.IStepChild>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData(Of IStepChild).GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of VRBuilder.Core.IStepChild).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VRBuilder.Core.IStepChild}
  commentId: T:System.Collections.Generic.IEnumerable{VRBuilder.Core.IStepChild}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IStepChild>
  nameWithType: IEnumerable<IStepChild>
  fullName: System.Collections.Generic.IEnumerable<VRBuilder.Core.IStepChild>
  nameWithType.vb: IEnumerable(Of IStepChild)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VRBuilder.Core.IStepChild)
  name.vb: IEnumerable(Of IStepChild)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IStepChild
    name: IStepChild
    nameWithType: IStepChild
    fullName: VRBuilder.Core.IStepChild
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IStepChild
    name: IStepChild
    nameWithType: IStepChild
    fullName: VRBuilder.Core.IStepChild
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: EntityCollectionData<TEntity>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.GetChildren()
  nameWithType.vb: EntityCollectionData(Of TEntity).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: EntityCollectionData<TEntity>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: EntityCollectionData(Of TEntity).GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: IEntityCollectionData<TEntity>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren()
  nameWithType.vb: IEntityCollectionData(Of TEntity).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData<TEntity>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData(Of TEntity).GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Core.Step.EntityData.SetName*
  commentId: Overload:VRBuilder.Core.Step.EntityData.SetName
  name: SetName
  nameWithType: Step.EntityData.SetName
  fullName: VRBuilder.Core.Step.EntityData.SetName
- uid: VRBuilder.Core.IRenameableData.SetName(System.String)
  commentId: M:VRBuilder.Core.IRenameableData.SetName(System.String)
  parent: VRBuilder.Core.IRenameableData
  isExternal: true
  name: SetName(String)
  nameWithType: IRenameableData.SetName(String)
  fullName: VRBuilder.Core.IRenameableData.SetName(System.String)
  spec.csharp:
  - uid: VRBuilder.Core.IRenameableData.SetName(System.String)
    name: SetName
    nameWithType: IRenameableData.SetName
    fullName: VRBuilder.Core.IRenameableData.SetName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IRenameableData.SetName(System.String)
    name: SetName
    nameWithType: IRenameableData.SetName
    fullName: VRBuilder.Core.IRenameableData.SetName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Step.EntityData.Current*
  commentId: Overload:VRBuilder.Core.Step.EntityData.Current
  name: Current
  nameWithType: Step.EntityData.Current
  fullName: VRBuilder.Core.Step.EntityData.Current
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IStepChild}.Current
  commentId: P:VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IStepChild}.Current
  parent: VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IStepChild}
  definition: VRBuilder.Core.EntityOwners.IEntitySequenceData`1.Current
  name: Current
  nameWithType: IEntitySequenceData<IStepChild>.Current
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData<VRBuilder.Core.IStepChild>.Current
  nameWithType.vb: IEntitySequenceData(Of IStepChild).Current
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData(Of VRBuilder.Core.IStepChild).Current
- uid: VRBuilder.Core.IStepChild
  commentId: T:VRBuilder.Core.IStepChild
  parent: VRBuilder.Core
  name: IStepChild
  nameWithType: IStepChild
  fullName: VRBuilder.Core.IStepChild
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1.Current
  commentId: P:VRBuilder.Core.EntityOwners.IEntitySequenceData`1.Current
  name: Current
  nameWithType: IEntitySequenceData<TEntity>.Current
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>.Current
  nameWithType.vb: IEntitySequenceData(Of TEntity).Current
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData(Of TEntity).Current
- uid: VRBuilder.Core.Step.EntityData.Mode*
  commentId: Overload:VRBuilder.Core.Step.EntityData.Mode
  name: Mode
  nameWithType: Step.EntityData.Mode
  fullName: VRBuilder.Core.Step.EntityData.Mode
- uid: VRBuilder.Core.Configuration.Modes.IModeData.Mode
  commentId: P:VRBuilder.Core.Configuration.Modes.IModeData.Mode
  parent: VRBuilder.Core.Configuration.Modes.IModeData
  name: Mode
  nameWithType: IModeData.Mode
  fullName: VRBuilder.Core.Configuration.Modes.IModeData.Mode
- uid: VRBuilder.Core.Configuration.Modes.IMode
  commentId: T:VRBuilder.Core.Configuration.Modes.IMode
  parent: VRBuilder.Core.Configuration.Modes
  name: IMode
  nameWithType: IMode
  fullName: VRBuilder.Core.Configuration.Modes.IMode
- uid: VRBuilder.Core.Step.EntityData.ToUnlock*
  commentId: Overload:VRBuilder.Core.Step.EntityData.ToUnlock
  name: ToUnlock
  nameWithType: Step.EntityData.ToUnlock
  fullName: VRBuilder.Core.Step.EntityData.ToUnlock
- uid: System.Collections.Generic.IEnumerable{VRBuilder.Core.Behaviors.LockablePropertyReference}
  commentId: T:System.Collections.Generic.IEnumerable{VRBuilder.Core.Behaviors.LockablePropertyReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<LockablePropertyReference>
  nameWithType: IEnumerable<LockablePropertyReference>
  fullName: System.Collections.Generic.IEnumerable<VRBuilder.Core.Behaviors.LockablePropertyReference>
  nameWithType.vb: IEnumerable(Of LockablePropertyReference)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VRBuilder.Core.Behaviors.LockablePropertyReference)
  name.vb: IEnumerable(Of LockablePropertyReference)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Behaviors.LockablePropertyReference
    name: LockablePropertyReference
    nameWithType: LockablePropertyReference
    fullName: VRBuilder.Core.Behaviors.LockablePropertyReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Behaviors.LockablePropertyReference
    name: LockablePropertyReference
    nameWithType: LockablePropertyReference
    fullName: VRBuilder.Core.Behaviors.LockablePropertyReference
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Step.EntityData.TagsToUnlock*
  commentId: Overload:VRBuilder.Core.Step.EntityData.TagsToUnlock
  name: TagsToUnlock
  nameWithType: Step.EntityData.TagsToUnlock
  fullName: VRBuilder.Core.Step.EntityData.TagsToUnlock
- uid: System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IEnumerable{System.Type}}
  commentId: T:System.Collections.Generic.IDictionary{System.Guid,System.Collections.Generic.IEnumerable{System.Type}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Guid, IEnumerable<Type>>
  nameWithType: IDictionary<Guid, IEnumerable<Type>>
  fullName: System.Collections.Generic.IDictionary<System.Guid, System.Collections.Generic.IEnumerable<System.Type>>
  nameWithType.vb: IDictionary(Of Guid, IEnumerable(Of Type))
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Guid, System.Collections.Generic.IEnumerable(Of System.Type))
  name.vb: IDictionary(Of Guid, IEnumerable(Of Type))
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Step.EntityData.GroupsToUnlock*
  commentId: Overload:VRBuilder.Core.Step.EntityData.GroupsToUnlock
  name: GroupsToUnlock
  nameWithType: Step.EntityData.GroupsToUnlock
  fullName: VRBuilder.Core.Step.EntityData.GroupsToUnlock
- uid: VRBuilder.Core.Step.EntityData.VRBuilder#Core#EntityOwners#IEntitySequenceData#Current*
  commentId: Overload:VRBuilder.Core.Step.EntityData.VRBuilder#Core#EntityOwners#IEntitySequenceData#Current
  name: IEntitySequenceData.Current
  nameWithType: Step.EntityData.IEntitySequenceData.Current
  fullName: VRBuilder.Core.Step.EntityData.VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
  nameWithType.vb: Step.EntityData.VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
  name.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
  commentId: P:VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
  parent: VRBuilder.Core.EntityOwners.IEntitySequenceData
  name: Current
  nameWithType: IEntitySequenceData.Current
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
- uid: VRBuilder.Core.IEntity
  commentId: T:VRBuilder.Core.IEntity
  parent: VRBuilder.Core
  name: IEntity
  nameWithType: IEntity
  fullName: VRBuilder.Core.IEntity
- uid: VRBuilder.Core.Step.EntityData.#ctor*
  commentId: Overload:VRBuilder.Core.Step.EntityData.#ctor
  name: EntityData
  nameWithType: Step.EntityData.EntityData
  fullName: VRBuilder.Core.Step.EntityData.EntityData
