### YamlMime:ManagedReference
items:
- uid: VRBuilder.UX.StandardProcessController
  commentId: T:VRBuilder.UX.StandardProcessController
  id: StandardProcessController
  parent: VRBuilder.UX
  children:
  - VRBuilder.UX.StandardProcessController.GetRequiredSetupComponents
  - VRBuilder.UX.StandardProcessController.Name
  - VRBuilder.UX.StandardProcessController.PrefabName
  - VRBuilder.UX.StandardProcessController.Priority
  langs:
  - csharp
  - vb
  name: StandardProcessController
  nameWithType: StandardProcessController
  fullName: VRBuilder.UX.StandardProcessController
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/Controllers/StandardProcessController.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StandardProcessController
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/Controllers/StandardProcessController.cs
    startLine: 8
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nProcess controller for standalone devices like the Oculus Quest.\n"
  example: []
  syntax:
    content: 'public class StandardProcessController : BaseProcessController, IProcessController'
    content.vb: >-
      Public Class StandardProcessController
          Inherits BaseProcessController
          Implements IProcessController
  inheritance:
  - System.Object
  - VRBuilder.UX.BaseProcessController
  implements:
  - VRBuilder.UX.IProcessController
  inheritedMembers:
  - VRBuilder.UX.BaseProcessController.GetProcessControllerPrefab
  - VRBuilder.UX.BaseProcessController.HandlePostSetup(GameObject)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.UX.StandardProcessController.Name
  commentId: P:VRBuilder.UX.StandardProcessController.Name
  id: Name
  parent: VRBuilder.UX.StandardProcessController
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: StandardProcessController.Name
  fullName: VRBuilder.UX.StandardProcessController.Name
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/Controllers/StandardProcessController.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Name
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/Controllers/StandardProcessController.cs
    startLine: 11
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nPrettified name.\n"
  example: []
  syntax:
    content: public override string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Name As String
  overridden: VRBuilder.UX.BaseProcessController.Name
  overload: VRBuilder.UX.StandardProcessController.Name*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VRBuilder.UX.StandardProcessController.Priority
  commentId: P:VRBuilder.UX.StandardProcessController.Priority
  id: Priority
  parent: VRBuilder.UX.StandardProcessController
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: StandardProcessController.Priority
  fullName: VRBuilder.UX.StandardProcessController.Priority
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/Controllers/StandardProcessController.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Priority
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/Controllers/StandardProcessController.cs
    startLine: 14
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nPriority of the controller.\n"
  example: []
  syntax:
    content: public override int Priority { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property Priority As Integer
  overridden: VRBuilder.UX.BaseProcessController.Priority
  overload: VRBuilder.UX.StandardProcessController.Priority*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VRBuilder.UX.StandardProcessController.PrefabName
  commentId: P:VRBuilder.UX.StandardProcessController.PrefabName
  id: PrefabName
  parent: VRBuilder.UX.StandardProcessController
  langs:
  - csharp
  - vb
  name: PrefabName
  nameWithType: StandardProcessController.PrefabName
  fullName: VRBuilder.UX.StandardProcessController.PrefabName
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/Controllers/StandardProcessController.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: PrefabName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/Controllers/StandardProcessController.cs
    startLine: 17
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nName of the process controller prefab.\n"
  example: []
  syntax:
    content: protected override string PrefabName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected Overrides ReadOnly Property PrefabName As String
  overridden: VRBuilder.UX.BaseProcessController.PrefabName
  overload: VRBuilder.UX.StandardProcessController.PrefabName*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: VRBuilder.UX.StandardProcessController.GetRequiredSetupComponents
  commentId: M:VRBuilder.UX.StandardProcessController.GetRequiredSetupComponents
  id: GetRequiredSetupComponents
  parent: VRBuilder.UX.StandardProcessController
  langs:
  - csharp
  - vb
  name: GetRequiredSetupComponents()
  nameWithType: StandardProcessController.GetRequiredSetupComponents()
  fullName: VRBuilder.UX.StandardProcessController.GetRequiredSetupComponents()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/ProcessController/Controllers/StandardProcessController.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetRequiredSetupComponents
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessController/Controllers/StandardProcessController.cs
    startLine: 20
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.UX
  summary: "\nList of component types which are required on the setup object.\n"
  example: []
  syntax:
    content: public override List<Type> GetRequiredSetupComponents()
    return:
      type: System.Collections.Generic.List{System.Type}
      description: List of component types.
    content.vb: Public Overrides Function GetRequiredSetupComponents As List(Of Type)
  overridden: VRBuilder.UX.BaseProcessController.GetRequiredSetupComponents
  overload: VRBuilder.UX.StandardProcessController.GetRequiredSetupComponents*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VRBuilder.UX
  commentId: N:VRBuilder.UX
  name: VRBuilder.UX
  nameWithType: VRBuilder.UX
  fullName: VRBuilder.UX
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.UX.BaseProcessController
  commentId: T:VRBuilder.UX.BaseProcessController
  parent: VRBuilder.UX
  name: BaseProcessController
  nameWithType: BaseProcessController
  fullName: VRBuilder.UX.BaseProcessController
- uid: VRBuilder.UX.IProcessController
  commentId: T:VRBuilder.UX.IProcessController
  parent: VRBuilder.UX
  name: IProcessController
  nameWithType: IProcessController
  fullName: VRBuilder.UX.IProcessController
- uid: VRBuilder.UX.BaseProcessController.GetProcessControllerPrefab
  commentId: M:VRBuilder.UX.BaseProcessController.GetProcessControllerPrefab
  parent: VRBuilder.UX.BaseProcessController
  name: GetProcessControllerPrefab()
  nameWithType: BaseProcessController.GetProcessControllerPrefab()
  fullName: VRBuilder.UX.BaseProcessController.GetProcessControllerPrefab()
  spec.csharp:
  - uid: VRBuilder.UX.BaseProcessController.GetProcessControllerPrefab
    name: GetProcessControllerPrefab
    nameWithType: BaseProcessController.GetProcessControllerPrefab
    fullName: VRBuilder.UX.BaseProcessController.GetProcessControllerPrefab
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.UX.BaseProcessController.GetProcessControllerPrefab
    name: GetProcessControllerPrefab
    nameWithType: BaseProcessController.GetProcessControllerPrefab
    fullName: VRBuilder.UX.BaseProcessController.GetProcessControllerPrefab
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.UX.BaseProcessController.HandlePostSetup(GameObject)
  commentId: M:VRBuilder.UX.BaseProcessController.HandlePostSetup(GameObject)
  parent: VRBuilder.UX.BaseProcessController
  isExternal: true
  name: HandlePostSetup(GameObject)
  nameWithType: BaseProcessController.HandlePostSetup(GameObject)
  fullName: VRBuilder.UX.BaseProcessController.HandlePostSetup(GameObject)
  spec.csharp:
  - uid: VRBuilder.UX.BaseProcessController.HandlePostSetup(GameObject)
    name: HandlePostSetup
    nameWithType: BaseProcessController.HandlePostSetup
    fullName: VRBuilder.UX.BaseProcessController.HandlePostSetup
  - name: (
    nameWithType: (
    fullName: (
  - uid: GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.UX.BaseProcessController.HandlePostSetup(GameObject)
    name: HandlePostSetup
    nameWithType: BaseProcessController.HandlePostSetup
    fullName: VRBuilder.UX.BaseProcessController.HandlePostSetup
  - name: (
    nameWithType: (
    fullName: (
  - uid: GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.UX.BaseProcessController.Name
  commentId: P:VRBuilder.UX.BaseProcessController.Name
  parent: VRBuilder.UX.BaseProcessController
  name: Name
  nameWithType: BaseProcessController.Name
  fullName: VRBuilder.UX.BaseProcessController.Name
- uid: VRBuilder.UX.StandardProcessController.Name*
  commentId: Overload:VRBuilder.UX.StandardProcessController.Name
  name: Name
  nameWithType: StandardProcessController.Name
  fullName: VRBuilder.UX.StandardProcessController.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.UX.BaseProcessController.Priority
  commentId: P:VRBuilder.UX.BaseProcessController.Priority
  parent: VRBuilder.UX.BaseProcessController
  name: Priority
  nameWithType: BaseProcessController.Priority
  fullName: VRBuilder.UX.BaseProcessController.Priority
- uid: VRBuilder.UX.StandardProcessController.Priority*
  commentId: Overload:VRBuilder.UX.StandardProcessController.Priority
  name: Priority
  nameWithType: StandardProcessController.Priority
  fullName: VRBuilder.UX.StandardProcessController.Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VRBuilder.UX.BaseProcessController.PrefabName
  commentId: P:VRBuilder.UX.BaseProcessController.PrefabName
  parent: VRBuilder.UX.BaseProcessController
  name: PrefabName
  nameWithType: BaseProcessController.PrefabName
  fullName: VRBuilder.UX.BaseProcessController.PrefabName
- uid: VRBuilder.UX.StandardProcessController.PrefabName*
  commentId: Overload:VRBuilder.UX.StandardProcessController.PrefabName
  name: PrefabName
  nameWithType: StandardProcessController.PrefabName
  fullName: VRBuilder.UX.StandardProcessController.PrefabName
- uid: VRBuilder.UX.BaseProcessController.GetRequiredSetupComponents
  commentId: M:VRBuilder.UX.BaseProcessController.GetRequiredSetupComponents
  parent: VRBuilder.UX.BaseProcessController
  name: GetRequiredSetupComponents()
  nameWithType: BaseProcessController.GetRequiredSetupComponents()
  fullName: VRBuilder.UX.BaseProcessController.GetRequiredSetupComponents()
  spec.csharp:
  - uid: VRBuilder.UX.BaseProcessController.GetRequiredSetupComponents
    name: GetRequiredSetupComponents
    nameWithType: BaseProcessController.GetRequiredSetupComponents
    fullName: VRBuilder.UX.BaseProcessController.GetRequiredSetupComponents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.UX.BaseProcessController.GetRequiredSetupComponents
    name: GetRequiredSetupComponents
    nameWithType: BaseProcessController.GetRequiredSetupComponents
    fullName: VRBuilder.UX.BaseProcessController.GetRequiredSetupComponents
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.UX.StandardProcessController.GetRequiredSetupComponents*
  commentId: Overload:VRBuilder.UX.StandardProcessController.GetRequiredSetupComponents
  name: GetRequiredSetupComponents
  nameWithType: StandardProcessController.GetRequiredSetupComponents
  fullName: VRBuilder.UX.StandardProcessController.GetRequiredSetupComponents
- uid: System.Collections.Generic.List{System.Type}
  commentId: T:System.Collections.Generic.List{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Type>
  nameWithType: List<Type>
  fullName: System.Collections.Generic.List<System.Type>
  nameWithType.vb: List(Of Type)
  fullName.vb: System.Collections.Generic.List(Of System.Type)
  name.vb: List(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
