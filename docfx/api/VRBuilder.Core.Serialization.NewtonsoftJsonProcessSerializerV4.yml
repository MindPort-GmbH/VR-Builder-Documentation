### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4
  commentId: T:VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4
  id: NewtonsoftJsonProcessSerializerV4
  parent: VRBuilder.Core.Serialization
  children:
  - VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ChapterFromByteArray(System.Byte[])
  - VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ChapterToByteArray(VRBuilder.Core.IChapter)
  - VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.Name
  - VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ProcessFromByteArray(System.Byte[])
  - VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ProcessToByteArray(VRBuilder.Core.IProcess)
  - VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.Version
  langs:
  - csharp
  - vb
  name: NewtonsoftJsonProcessSerializerV4
  nameWithType: NewtonsoftJsonProcessSerializerV4
  fullName: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Serialization/NewtonsoftJsonSerializer/NewtonsoftJsonProcessSerializerV4.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: NewtonsoftJsonProcessSerializerV4
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Serialization/NewtonsoftJsonSerializer/NewtonsoftJsonProcessSerializerV4.cs
    startLine: 22
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Serialization
  summary: "\nImproved version of the NewtonsoftJsonProcessSerializer, which now flattens nested subchapters.\n"
  example: []
  syntax:
    content: 'public class NewtonsoftJsonProcessSerializerV4 : NewtonsoftJsonProcessSerializer, IProcessSerializer'
    content.vb: >-
      Public Class NewtonsoftJsonProcessSerializerV4
          Inherits NewtonsoftJsonProcessSerializer
          Implements IProcessSerializer
  inheritance:
  - System.Object
  - VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer
  implements:
  - VRBuilder.Core.Serialization.IProcessSerializer
  inheritedMembers:
  - VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessSerializerSettings
  - VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.FileFormat
  - VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Serialize(VRBuilder.Core.IEntity,Newtonsoft.Json.JsonSerializerSettings)
  - VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Deserialize``1(System.Byte[],Newtonsoft.Json.JsonSerializerSettings)
  - VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.StepToByteArray(VRBuilder.Core.IStep)
  - VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.StepFromByteArray(System.Byte[])
  - VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ManifestToByteArray(VRBuilder.Core.IO.IProcessAssetManifest)
  - VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ManifestFromByteArray(System.Byte[])
  - VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.EntityToByteArray(VRBuilder.Core.IEntity)
  - VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.EntityFromByteArray(System.Byte[])
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.Name
  commentId: P:VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.Name
  id: Name
  parent: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: NewtonsoftJsonProcessSerializerV4.Name
  fullName: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.Name
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Serialization/NewtonsoftJsonSerializer/NewtonsoftJsonProcessSerializerV4.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Name
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Serialization/NewtonsoftJsonSerializer/NewtonsoftJsonProcessSerializerV4.cs
    startLine: 25
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Serialization
  summary: "\nDisplay name.\n"
  example: []
  syntax:
    content: public override string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Name As String
  overridden: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Name
  overload: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.Name*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.Version
  commentId: P:VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.Version
  id: Version
  parent: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: NewtonsoftJsonProcessSerializerV4.Version
  fullName: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.Version
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Serialization/NewtonsoftJsonSerializer/NewtonsoftJsonProcessSerializerV4.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Version
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Serialization/NewtonsoftJsonSerializer/NewtonsoftJsonProcessSerializerV4.cs
    startLine: 27
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Serialization
  syntax:
    content: protected override int Version { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Protected Overrides ReadOnly Property Version As Integer
  overridden: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Version
  overload: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.Version*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ProcessFromByteArray(System.Byte[])
  commentId: M:VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ProcessFromByteArray(System.Byte[])
  id: ProcessFromByteArray(System.Byte[])
  parent: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4
  langs:
  - csharp
  - vb
  name: ProcessFromByteArray(Byte[])
  nameWithType: NewtonsoftJsonProcessSerializerV4.ProcessFromByteArray(Byte[])
  fullName: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ProcessFromByteArray(System.Byte[])
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Serialization/NewtonsoftJsonSerializer/NewtonsoftJsonProcessSerializerV4.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessFromByteArray
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Serialization/NewtonsoftJsonSerializer/NewtonsoftJsonProcessSerializerV4.cs
    startLine: 30
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Serialization
  summary: "\nDeserializes a given process to a usable object.\n"
  example: []
  syntax:
    content: public override IProcess ProcessFromByteArray(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    return:
      type: VRBuilder.Core.IProcess
    content.vb: Public Overrides Function ProcessFromByteArray(data As Byte()) As IProcess
  overridden: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessFromByteArray(System.Byte[])
  overload: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ProcessFromByteArray*
  nameWithType.vb: NewtonsoftJsonProcessSerializerV4.ProcessFromByteArray(Byte())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ProcessFromByteArray(System.Byte())
  name.vb: ProcessFromByteArray(Byte())
- uid: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ProcessToByteArray(VRBuilder.Core.IProcess)
  commentId: M:VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ProcessToByteArray(VRBuilder.Core.IProcess)
  id: ProcessToByteArray(VRBuilder.Core.IProcess)
  parent: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4
  langs:
  - csharp
  - vb
  name: ProcessToByteArray(IProcess)
  nameWithType: NewtonsoftJsonProcessSerializerV4.ProcessToByteArray(IProcess)
  fullName: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ProcessToByteArray(VRBuilder.Core.IProcess)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Serialization/NewtonsoftJsonSerializer/NewtonsoftJsonProcessSerializerV4.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessToByteArray
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Serialization/NewtonsoftJsonSerializer/NewtonsoftJsonProcessSerializerV4.cs
    startLine: 55
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Serialization
  summary: "\nSerializes a given process into a byte array.\n"
  example: []
  syntax:
    content: public override byte[] ProcessToByteArray(IProcess process)
    parameters:
    - id: process
      type: VRBuilder.Core.IProcess
    return:
      type: System.Byte[]
    content.vb: Public Overrides Function ProcessToByteArray(process As IProcess) As Byte()
  overridden: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessToByteArray(VRBuilder.Core.IProcess)
  overload: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ProcessToByteArray*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ChapterFromByteArray(System.Byte[])
  commentId: M:VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ChapterFromByteArray(System.Byte[])
  id: ChapterFromByteArray(System.Byte[])
  parent: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4
  langs:
  - csharp
  - vb
  name: ChapterFromByteArray(Byte[])
  nameWithType: NewtonsoftJsonProcessSerializerV4.ChapterFromByteArray(Byte[])
  fullName: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ChapterFromByteArray(System.Byte[])
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Serialization/NewtonsoftJsonSerializer/NewtonsoftJsonProcessSerializerV4.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ChapterFromByteArray
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Serialization/NewtonsoftJsonSerializer/NewtonsoftJsonProcessSerializerV4.cs
    startLine: 78
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Serialization
  summary: "\nDeserializes a given chapter to a usable object.\n"
  example: []
  syntax:
    content: public override IChapter ChapterFromByteArray(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    return:
      type: VRBuilder.Core.IChapter
    content.vb: Public Overrides Function ChapterFromByteArray(data As Byte()) As IChapter
  overridden: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ChapterFromByteArray(System.Byte[])
  overload: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ChapterFromByteArray*
  nameWithType.vb: NewtonsoftJsonProcessSerializerV4.ChapterFromByteArray(Byte())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ChapterFromByteArray(System.Byte())
  name.vb: ChapterFromByteArray(Byte())
- uid: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ChapterToByteArray(VRBuilder.Core.IChapter)
  commentId: M:VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ChapterToByteArray(VRBuilder.Core.IChapter)
  id: ChapterToByteArray(VRBuilder.Core.IChapter)
  parent: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4
  langs:
  - csharp
  - vb
  name: ChapterToByteArray(IChapter)
  nameWithType: NewtonsoftJsonProcessSerializerV4.ChapterToByteArray(IChapter)
  fullName: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ChapterToByteArray(VRBuilder.Core.IChapter)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Serialization/NewtonsoftJsonSerializer/NewtonsoftJsonProcessSerializerV4.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ChapterToByteArray
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Serialization/NewtonsoftJsonSerializer/NewtonsoftJsonProcessSerializerV4.cs
    startLine: 103
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Serialization
  summary: "\nSerializes a given chapter into a byte array.\n"
  example: []
  syntax:
    content: public override byte[] ChapterToByteArray(IChapter chapter)
    parameters:
    - id: chapter
      type: VRBuilder.Core.IChapter
    return:
      type: System.Byte[]
    content.vb: Public Overrides Function ChapterToByteArray(chapter As IChapter) As Byte()
  overridden: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ChapterToByteArray(VRBuilder.Core.IChapter)
  overload: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ChapterToByteArray*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VRBuilder.Core.Serialization
  commentId: N:VRBuilder.Core.Serialization
  name: VRBuilder.Core.Serialization
  nameWithType: VRBuilder.Core.Serialization
  fullName: VRBuilder.Core.Serialization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer
  commentId: T:VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer
  parent: VRBuilder.Core.Serialization.NewtonsoftJson
  name: NewtonsoftJsonProcessSerializer
  nameWithType: NewtonsoftJsonProcessSerializer
  fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer
- uid: VRBuilder.Core.Serialization.IProcessSerializer
  commentId: T:VRBuilder.Core.Serialization.IProcessSerializer
  parent: VRBuilder.Core.Serialization
  name: IProcessSerializer
  nameWithType: IProcessSerializer
  fullName: VRBuilder.Core.Serialization.IProcessSerializer
- uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessSerializerSettings
  commentId: P:VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessSerializerSettings
  parent: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer
  name: ProcessSerializerSettings
  nameWithType: NewtonsoftJsonProcessSerializer.ProcessSerializerSettings
  fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessSerializerSettings
- uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.FileFormat
  commentId: P:VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.FileFormat
  parent: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer
  name: FileFormat
  nameWithType: NewtonsoftJsonProcessSerializer.FileFormat
  fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.FileFormat
- uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Serialize(VRBuilder.Core.IEntity,Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Serialize(VRBuilder.Core.IEntity,Newtonsoft.Json.JsonSerializerSettings)
  parent: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer
  isExternal: true
  name: Serialize(IEntity, JsonSerializerSettings)
  nameWithType: NewtonsoftJsonProcessSerializer.Serialize(IEntity, JsonSerializerSettings)
  fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Serialize(VRBuilder.Core.IEntity, Newtonsoft.Json.JsonSerializerSettings)
  spec.csharp:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Serialize(VRBuilder.Core.IEntity,Newtonsoft.Json.JsonSerializerSettings)
    name: Serialize
    nameWithType: NewtonsoftJsonProcessSerializer.Serialize
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IEntity
    name: IEntity
    nameWithType: IEntity
    fullName: VRBuilder.Core.IEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Serialize(VRBuilder.Core.IEntity,Newtonsoft.Json.JsonSerializerSettings)
    name: Serialize
    nameWithType: NewtonsoftJsonProcessSerializer.Serialize
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Serialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IEntity
    name: IEntity
    nameWithType: IEntity
    fullName: VRBuilder.Core.IEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Deserialize``1(System.Byte[],Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Deserialize``1(System.Byte[],Newtonsoft.Json.JsonSerializerSettings)
  parent: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer
  isExternal: true
  name: Deserialize<T>(Byte[], JsonSerializerSettings)
  nameWithType: NewtonsoftJsonProcessSerializer.Deserialize<T>(Byte[], JsonSerializerSettings)
  fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Deserialize<T>(System.Byte[], Newtonsoft.Json.JsonSerializerSettings)
  nameWithType.vb: NewtonsoftJsonProcessSerializer.Deserialize(Of T)(Byte(), JsonSerializerSettings)
  fullName.vb: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Deserialize(Of T)(System.Byte(), Newtonsoft.Json.JsonSerializerSettings)
  name.vb: Deserialize(Of T)(Byte(), JsonSerializerSettings)
  spec.csharp:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Deserialize``1(System.Byte[],Newtonsoft.Json.JsonSerializerSettings)
    name: Deserialize<T>
    nameWithType: NewtonsoftJsonProcessSerializer.Deserialize<T>
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Deserialize<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Deserialize``1(System.Byte[],Newtonsoft.Json.JsonSerializerSettings)
    name: Deserialize(Of T)
    nameWithType: NewtonsoftJsonProcessSerializer.Deserialize(Of T)
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Deserialize(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Newtonsoft.Json.JsonSerializerSettings
    name: JsonSerializerSettings
    nameWithType: JsonSerializerSettings
    fullName: Newtonsoft.Json.JsonSerializerSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.StepToByteArray(VRBuilder.Core.IStep)
  commentId: M:VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.StepToByteArray(VRBuilder.Core.IStep)
  parent: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer
  name: StepToByteArray(IStep)
  nameWithType: NewtonsoftJsonProcessSerializer.StepToByteArray(IStep)
  fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.StepToByteArray(VRBuilder.Core.IStep)
  spec.csharp:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.StepToByteArray(VRBuilder.Core.IStep)
    name: StepToByteArray
    nameWithType: NewtonsoftJsonProcessSerializer.StepToByteArray
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.StepToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.StepToByteArray(VRBuilder.Core.IStep)
    name: StepToByteArray
    nameWithType: NewtonsoftJsonProcessSerializer.StepToByteArray
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.StepToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.StepFromByteArray(System.Byte[])
  commentId: M:VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.StepFromByteArray(System.Byte[])
  parent: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer
  isExternal: true
  name: StepFromByteArray(Byte[])
  nameWithType: NewtonsoftJsonProcessSerializer.StepFromByteArray(Byte[])
  fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.StepFromByteArray(System.Byte[])
  nameWithType.vb: NewtonsoftJsonProcessSerializer.StepFromByteArray(Byte())
  fullName.vb: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.StepFromByteArray(System.Byte())
  name.vb: StepFromByteArray(Byte())
  spec.csharp:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.StepFromByteArray(System.Byte[])
    name: StepFromByteArray
    nameWithType: NewtonsoftJsonProcessSerializer.StepFromByteArray
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.StepFromByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.StepFromByteArray(System.Byte[])
    name: StepFromByteArray
    nameWithType: NewtonsoftJsonProcessSerializer.StepFromByteArray
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.StepFromByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ManifestToByteArray(VRBuilder.Core.IO.IProcessAssetManifest)
  commentId: M:VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ManifestToByteArray(VRBuilder.Core.IO.IProcessAssetManifest)
  parent: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer
  name: ManifestToByteArray(IProcessAssetManifest)
  nameWithType: NewtonsoftJsonProcessSerializer.ManifestToByteArray(IProcessAssetManifest)
  fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ManifestToByteArray(VRBuilder.Core.IO.IProcessAssetManifest)
  spec.csharp:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ManifestToByteArray(VRBuilder.Core.IO.IProcessAssetManifest)
    name: ManifestToByteArray
    nameWithType: NewtonsoftJsonProcessSerializer.ManifestToByteArray
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ManifestToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IO.IProcessAssetManifest
    name: IProcessAssetManifest
    nameWithType: IProcessAssetManifest
    fullName: VRBuilder.Core.IO.IProcessAssetManifest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ManifestToByteArray(VRBuilder.Core.IO.IProcessAssetManifest)
    name: ManifestToByteArray
    nameWithType: NewtonsoftJsonProcessSerializer.ManifestToByteArray
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ManifestToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IO.IProcessAssetManifest
    name: IProcessAssetManifest
    nameWithType: IProcessAssetManifest
    fullName: VRBuilder.Core.IO.IProcessAssetManifest
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ManifestFromByteArray(System.Byte[])
  commentId: M:VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ManifestFromByteArray(System.Byte[])
  parent: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer
  isExternal: true
  name: ManifestFromByteArray(Byte[])
  nameWithType: NewtonsoftJsonProcessSerializer.ManifestFromByteArray(Byte[])
  fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ManifestFromByteArray(System.Byte[])
  nameWithType.vb: NewtonsoftJsonProcessSerializer.ManifestFromByteArray(Byte())
  fullName.vb: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ManifestFromByteArray(System.Byte())
  name.vb: ManifestFromByteArray(Byte())
  spec.csharp:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ManifestFromByteArray(System.Byte[])
    name: ManifestFromByteArray
    nameWithType: NewtonsoftJsonProcessSerializer.ManifestFromByteArray
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ManifestFromByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ManifestFromByteArray(System.Byte[])
    name: ManifestFromByteArray
    nameWithType: NewtonsoftJsonProcessSerializer.ManifestFromByteArray
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ManifestFromByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.EntityToByteArray(VRBuilder.Core.IEntity)
  commentId: M:VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.EntityToByteArray(VRBuilder.Core.IEntity)
  parent: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer
  name: EntityToByteArray(IEntity)
  nameWithType: NewtonsoftJsonProcessSerializer.EntityToByteArray(IEntity)
  fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.EntityToByteArray(VRBuilder.Core.IEntity)
  spec.csharp:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.EntityToByteArray(VRBuilder.Core.IEntity)
    name: EntityToByteArray
    nameWithType: NewtonsoftJsonProcessSerializer.EntityToByteArray
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.EntityToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IEntity
    name: IEntity
    nameWithType: IEntity
    fullName: VRBuilder.Core.IEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.EntityToByteArray(VRBuilder.Core.IEntity)
    name: EntityToByteArray
    nameWithType: NewtonsoftJsonProcessSerializer.EntityToByteArray
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.EntityToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IEntity
    name: IEntity
    nameWithType: IEntity
    fullName: VRBuilder.Core.IEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.EntityFromByteArray(System.Byte[])
  commentId: M:VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.EntityFromByteArray(System.Byte[])
  parent: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer
  isExternal: true
  name: EntityFromByteArray(Byte[])
  nameWithType: NewtonsoftJsonProcessSerializer.EntityFromByteArray(Byte[])
  fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.EntityFromByteArray(System.Byte[])
  nameWithType.vb: NewtonsoftJsonProcessSerializer.EntityFromByteArray(Byte())
  fullName.vb: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.EntityFromByteArray(System.Byte())
  name.vb: EntityFromByteArray(Byte())
  spec.csharp:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.EntityFromByteArray(System.Byte[])
    name: EntityFromByteArray
    nameWithType: NewtonsoftJsonProcessSerializer.EntityFromByteArray
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.EntityFromByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.EntityFromByteArray(System.Byte[])
    name: EntityFromByteArray
    nameWithType: NewtonsoftJsonProcessSerializer.EntityFromByteArray
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.EntityFromByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Serialization.NewtonsoftJson
  commentId: N:VRBuilder.Core.Serialization.NewtonsoftJson
  name: VRBuilder.Core.Serialization.NewtonsoftJson
  nameWithType: VRBuilder.Core.Serialization.NewtonsoftJson
  fullName: VRBuilder.Core.Serialization.NewtonsoftJson
- uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Name
  commentId: P:VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Name
  parent: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer
  name: Name
  nameWithType: NewtonsoftJsonProcessSerializer.Name
  fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Name
- uid: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.Name*
  commentId: Overload:VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.Name
  name: Name
  nameWithType: NewtonsoftJsonProcessSerializerV4.Name
  fullName: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Version
  commentId: P:VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Version
  parent: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer
  name: Version
  nameWithType: NewtonsoftJsonProcessSerializer.Version
  fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.Version
- uid: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.Version*
  commentId: Overload:VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.Version
  name: Version
  nameWithType: NewtonsoftJsonProcessSerializerV4.Version
  fullName: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.Version
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessFromByteArray(System.Byte[])
  commentId: M:VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessFromByteArray(System.Byte[])
  parent: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer
  isExternal: true
  name: ProcessFromByteArray(Byte[])
  nameWithType: NewtonsoftJsonProcessSerializer.ProcessFromByteArray(Byte[])
  fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessFromByteArray(System.Byte[])
  nameWithType.vb: NewtonsoftJsonProcessSerializer.ProcessFromByteArray(Byte())
  fullName.vb: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessFromByteArray(System.Byte())
  name.vb: ProcessFromByteArray(Byte())
  spec.csharp:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessFromByteArray(System.Byte[])
    name: ProcessFromByteArray
    nameWithType: NewtonsoftJsonProcessSerializer.ProcessFromByteArray
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessFromByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessFromByteArray(System.Byte[])
    name: ProcessFromByteArray
    nameWithType: NewtonsoftJsonProcessSerializer.ProcessFromByteArray
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessFromByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ProcessFromByteArray*
  commentId: Overload:VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ProcessFromByteArray
  name: ProcessFromByteArray
  nameWithType: NewtonsoftJsonProcessSerializerV4.ProcessFromByteArray
  fullName: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ProcessFromByteArray
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: VRBuilder.Core.IProcess
  commentId: T:VRBuilder.Core.IProcess
  parent: VRBuilder.Core
  name: IProcess
  nameWithType: IProcess
  fullName: VRBuilder.Core.IProcess
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessToByteArray(VRBuilder.Core.IProcess)
  commentId: M:VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessToByteArray(VRBuilder.Core.IProcess)
  parent: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer
  name: ProcessToByteArray(IProcess)
  nameWithType: NewtonsoftJsonProcessSerializer.ProcessToByteArray(IProcess)
  fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessToByteArray(VRBuilder.Core.IProcess)
  spec.csharp:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessToByteArray(VRBuilder.Core.IProcess)
    name: ProcessToByteArray
    nameWithType: NewtonsoftJsonProcessSerializer.ProcessToByteArray
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IProcess
    name: IProcess
    nameWithType: IProcess
    fullName: VRBuilder.Core.IProcess
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessToByteArray(VRBuilder.Core.IProcess)
    name: ProcessToByteArray
    nameWithType: NewtonsoftJsonProcessSerializer.ProcessToByteArray
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ProcessToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IProcess
    name: IProcess
    nameWithType: IProcess
    fullName: VRBuilder.Core.IProcess
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ProcessToByteArray*
  commentId: Overload:VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ProcessToByteArray
  name: ProcessToByteArray
  nameWithType: NewtonsoftJsonProcessSerializerV4.ProcessToByteArray
  fullName: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ProcessToByteArray
- uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ChapterFromByteArray(System.Byte[])
  commentId: M:VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ChapterFromByteArray(System.Byte[])
  parent: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer
  isExternal: true
  name: ChapterFromByteArray(Byte[])
  nameWithType: NewtonsoftJsonProcessSerializer.ChapterFromByteArray(Byte[])
  fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ChapterFromByteArray(System.Byte[])
  nameWithType.vb: NewtonsoftJsonProcessSerializer.ChapterFromByteArray(Byte())
  fullName.vb: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ChapterFromByteArray(System.Byte())
  name.vb: ChapterFromByteArray(Byte())
  spec.csharp:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ChapterFromByteArray(System.Byte[])
    name: ChapterFromByteArray
    nameWithType: NewtonsoftJsonProcessSerializer.ChapterFromByteArray
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ChapterFromByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ChapterFromByteArray(System.Byte[])
    name: ChapterFromByteArray
    nameWithType: NewtonsoftJsonProcessSerializer.ChapterFromByteArray
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ChapterFromByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ChapterFromByteArray*
  commentId: Overload:VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ChapterFromByteArray
  name: ChapterFromByteArray
  nameWithType: NewtonsoftJsonProcessSerializerV4.ChapterFromByteArray
  fullName: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ChapterFromByteArray
- uid: VRBuilder.Core.IChapter
  commentId: T:VRBuilder.Core.IChapter
  parent: VRBuilder.Core
  name: IChapter
  nameWithType: IChapter
  fullName: VRBuilder.Core.IChapter
- uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ChapterToByteArray(VRBuilder.Core.IChapter)
  commentId: M:VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ChapterToByteArray(VRBuilder.Core.IChapter)
  parent: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer
  name: ChapterToByteArray(IChapter)
  nameWithType: NewtonsoftJsonProcessSerializer.ChapterToByteArray(IChapter)
  fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ChapterToByteArray(VRBuilder.Core.IChapter)
  spec.csharp:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ChapterToByteArray(VRBuilder.Core.IChapter)
    name: ChapterToByteArray
    nameWithType: NewtonsoftJsonProcessSerializer.ChapterToByteArray
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ChapterToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ChapterToByteArray(VRBuilder.Core.IChapter)
    name: ChapterToByteArray
    nameWithType: NewtonsoftJsonProcessSerializer.ChapterToByteArray
    fullName: VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.ChapterToByteArray
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ChapterToByteArray*
  commentId: Overload:VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ChapterToByteArray
  name: ChapterToByteArray
  nameWithType: NewtonsoftJsonProcessSerializerV4.ChapterToByteArray
  fullName: VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.ChapterToByteArray
