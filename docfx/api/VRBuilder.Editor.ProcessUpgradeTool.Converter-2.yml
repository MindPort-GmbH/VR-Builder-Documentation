### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.ProcessUpgradeTool.Converter`2
  commentId: T:VRBuilder.Editor.ProcessUpgradeTool.Converter`2
  id: Converter`2
  parent: VRBuilder.Editor.ProcessUpgradeTool
  children:
  - VRBuilder.Editor.ProcessUpgradeTool.Converter`2.Convert(System.Object)
  - VRBuilder.Editor.ProcessUpgradeTool.Converter`2.ConvertedType
  - VRBuilder.Editor.ProcessUpgradeTool.Converter`2.PerformConversion(`0)
  langs:
  - csharp
  - vb
  name: Converter<TIn, TOut>
  nameWithType: Converter<TIn, TOut>
  fullName: VRBuilder.Editor.ProcessUpgradeTool.Converter<TIn, TOut>
  type: Class
  source:
    remote:
      path: Source/Core/Editor/ProcessUpgradeTool/Converters/Converter.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Converter
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/ProcessUpgradeTool/Converters/Converter.cs
    startLine: 9
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.ProcessUpgradeTool
  summary: "\nGeneric implementation of <xref href=\"VRBuilder.Editor.ProcessUpgradeTool.IConverter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public abstract class Converter<TIn, TOut> : IConverter where TIn : class where TOut : class'
    typeParameters:
    - id: TIn
    - id: TOut
    content.vb: >-
      Public MustInherit Class Converter(Of TIn As Class, TOut As Class)
          Implements IConverter
  inheritance:
  - System.Object
  derivedClasses:
  - VRBuilder.Editor.ProcessUpgradeTool.DisableGameObjectBehaviorConverter
  - VRBuilder.Editor.ProcessUpgradeTool.EnableGameObjectBehaviorConverter
  - VRBuilder.Editor.ProcessUpgradeTool.GrabbedObjectWithTagConditionConverter
  - VRBuilder.Editor.ProcessUpgradeTool.SetComponentEnabledByTagBehaviorConverter
  - VRBuilder.Editor.ProcessUpgradeTool.SetObjectsWithTagEnabledBehaviorConverter
  - VRBuilder.Editor.ProcessUpgradeTool.SnappedObjectWithTagConditionConverter
  - VRBuilder.Editor.ProcessUpgradeTool.TriggerEventByRefBehaviorConverter
  - VRBuilder.Editor.ProcessUpgradeTool.TriggerEventByTagBehaviorConverter
  - VRBuilder.Editor.ProcessUpgradeTool.TriggerGenericEventByRefBehaviorConverter`1
  - VRBuilder.Editor.ProcessUpgradeTool.TriggerGenericEventByTagBehaviorConverter`1
  implements:
  - VRBuilder.Editor.ProcessUpgradeTool.IConverter
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: Converter(Of TIn, TOut)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: VRBuilder.Editor.ProcessUpgradeTool.Converter(Of TIn, TOut)
  name.vb: Converter(Of TIn, TOut)
- uid: VRBuilder.Editor.ProcessUpgradeTool.Converter`2.ConvertedType
  commentId: P:VRBuilder.Editor.ProcessUpgradeTool.Converter`2.ConvertedType
  id: ConvertedType
  parent: VRBuilder.Editor.ProcessUpgradeTool.Converter`2
  langs:
  - csharp
  - vb
  name: ConvertedType
  nameWithType: Converter<TIn, TOut>.ConvertedType
  fullName: VRBuilder.Editor.ProcessUpgradeTool.Converter<TIn, TOut>.ConvertedType
  type: Property
  source:
    remote:
      path: Source/Core/Editor/ProcessUpgradeTool/Converters/Converter.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ConvertedType
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/ProcessUpgradeTool/Converters/Converter.cs
    startLine: 12
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.ProcessUpgradeTool
  summary: "\nType supported by this converter.\n"
  example: []
  syntax:
    content: public Type ConvertedType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property ConvertedType As Type
  overload: VRBuilder.Editor.ProcessUpgradeTool.Converter`2.ConvertedType*
  implements:
  - VRBuilder.Editor.ProcessUpgradeTool.IConverter.ConvertedType
  nameWithType.vb: Converter(Of TIn, TOut).ConvertedType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: VRBuilder.Editor.ProcessUpgradeTool.Converter(Of TIn, TOut).ConvertedType
- uid: VRBuilder.Editor.ProcessUpgradeTool.Converter`2.PerformConversion(`0)
  commentId: M:VRBuilder.Editor.ProcessUpgradeTool.Converter`2.PerformConversion(`0)
  id: PerformConversion(`0)
  parent: VRBuilder.Editor.ProcessUpgradeTool.Converter`2
  langs:
  - csharp
  - vb
  name: PerformConversion(TIn)
  nameWithType: Converter<TIn, TOut>.PerformConversion(TIn)
  fullName: VRBuilder.Editor.ProcessUpgradeTool.Converter<TIn, TOut>.PerformConversion(TIn)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/ProcessUpgradeTool/Converters/Converter.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: PerformConversion
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/ProcessUpgradeTool/Converters/Converter.cs
    startLine: 17
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.ProcessUpgradeTool
  summary: "\nReturns an object which can replace the provided object.\n"
  example: []
  syntax:
    content: protected abstract TOut PerformConversion(TIn oldObject)
    parameters:
    - id: oldObject
      type: '{TIn}'
    return:
      type: '{TOut}'
    content.vb: Protected MustOverride Function PerformConversion(oldObject As TIn) As TOut
  overload: VRBuilder.Editor.ProcessUpgradeTool.Converter`2.PerformConversion*
  nameWithType.vb: Converter(Of TIn, TOut).PerformConversion(TIn)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: VRBuilder.Editor.ProcessUpgradeTool.Converter(Of TIn, TOut).PerformConversion(TIn)
- uid: VRBuilder.Editor.ProcessUpgradeTool.Converter`2.Convert(System.Object)
  commentId: M:VRBuilder.Editor.ProcessUpgradeTool.Converter`2.Convert(System.Object)
  id: Convert(System.Object)
  parent: VRBuilder.Editor.ProcessUpgradeTool.Converter`2
  langs:
  - csharp
  - vb
  name: Convert(Object)
  nameWithType: Converter<TIn, TOut>.Convert(Object)
  fullName: VRBuilder.Editor.ProcessUpgradeTool.Converter<TIn, TOut>.Convert(System.Object)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/ProcessUpgradeTool/Converters/Converter.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Convert
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/ProcessUpgradeTool/Converters/Converter.cs
    startLine: 20
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.ProcessUpgradeTool
  summary: "\nReturns an object which is an up to date version of the provided object.\n"
  example: []
  syntax:
    content: public object Convert(object oldObject)
    parameters:
    - id: oldObject
      type: System.Object
    return:
      type: System.Object
    content.vb: Public Function Convert(oldObject As Object) As Object
  overload: VRBuilder.Editor.ProcessUpgradeTool.Converter`2.Convert*
  implements:
  - VRBuilder.Editor.ProcessUpgradeTool.IConverter.Convert(System.Object)
  nameWithType.vb: Converter(Of TIn, TOut).Convert(Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Editor.ProcessUpgradeTool.Converter(Of TIn, TOut).Convert(System.Object)
references:
- uid: VRBuilder.Editor.ProcessUpgradeTool.IConverter
  commentId: T:VRBuilder.Editor.ProcessUpgradeTool.IConverter
  parent: VRBuilder.Editor.ProcessUpgradeTool
  name: IConverter
  nameWithType: IConverter
  fullName: VRBuilder.Editor.ProcessUpgradeTool.IConverter
- uid: VRBuilder.Editor.ProcessUpgradeTool
  commentId: N:VRBuilder.Editor.ProcessUpgradeTool
  name: VRBuilder.Editor.ProcessUpgradeTool
  nameWithType: VRBuilder.Editor.ProcessUpgradeTool
  fullName: VRBuilder.Editor.ProcessUpgradeTool
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Editor.ProcessUpgradeTool.Converter`2.ConvertedType*
  commentId: Overload:VRBuilder.Editor.ProcessUpgradeTool.Converter`2.ConvertedType
  name: ConvertedType
  nameWithType: Converter<TIn, TOut>.ConvertedType
  fullName: VRBuilder.Editor.ProcessUpgradeTool.Converter<TIn, TOut>.ConvertedType
  nameWithType.vb: Converter(Of TIn, TOut).ConvertedType
  fullName.vb: VRBuilder.Editor.ProcessUpgradeTool.Converter(Of TIn, TOut).ConvertedType
- uid: VRBuilder.Editor.ProcessUpgradeTool.IConverter.ConvertedType
  commentId: P:VRBuilder.Editor.ProcessUpgradeTool.IConverter.ConvertedType
  parent: VRBuilder.Editor.ProcessUpgradeTool.IConverter
  name: ConvertedType
  nameWithType: IConverter.ConvertedType
  fullName: VRBuilder.Editor.ProcessUpgradeTool.IConverter.ConvertedType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: VRBuilder.Editor.ProcessUpgradeTool.Converter`2.PerformConversion*
  commentId: Overload:VRBuilder.Editor.ProcessUpgradeTool.Converter`2.PerformConversion
  name: PerformConversion
  nameWithType: Converter<TIn, TOut>.PerformConversion
  fullName: VRBuilder.Editor.ProcessUpgradeTool.Converter<TIn, TOut>.PerformConversion
  nameWithType.vb: Converter(Of TIn, TOut).PerformConversion
  fullName.vb: VRBuilder.Editor.ProcessUpgradeTool.Converter(Of TIn, TOut).PerformConversion
- uid: '{TIn}'
  commentId: '!:TIn'
  definition: TIn
  name: TIn
  nameWithType: TIn
  fullName: TIn
- uid: '{TOut}'
  commentId: '!:TOut'
  definition: TOut
  name: TOut
  nameWithType: TOut
  fullName: TOut
- uid: TIn
  commentId: '!:TIn'
  name: TIn
  nameWithType: TIn
  fullName: TIn
- uid: TOut
  commentId: '!:TOut'
  name: TOut
  nameWithType: TOut
  fullName: TOut
- uid: VRBuilder.Editor.ProcessUpgradeTool.Converter`2.Convert*
  commentId: Overload:VRBuilder.Editor.ProcessUpgradeTool.Converter`2.Convert
  name: Convert
  nameWithType: Converter<TIn, TOut>.Convert
  fullName: VRBuilder.Editor.ProcessUpgradeTool.Converter<TIn, TOut>.Convert
  nameWithType.vb: Converter(Of TIn, TOut).Convert
  fullName.vb: VRBuilder.Editor.ProcessUpgradeTool.Converter(Of TIn, TOut).Convert
- uid: VRBuilder.Editor.ProcessUpgradeTool.IConverter.Convert(System.Object)
  commentId: M:VRBuilder.Editor.ProcessUpgradeTool.IConverter.Convert(System.Object)
  parent: VRBuilder.Editor.ProcessUpgradeTool.IConverter
  isExternal: true
  name: Convert(Object)
  nameWithType: IConverter.Convert(Object)
  fullName: VRBuilder.Editor.ProcessUpgradeTool.IConverter.Convert(System.Object)
  spec.csharp:
  - uid: VRBuilder.Editor.ProcessUpgradeTool.IConverter.Convert(System.Object)
    name: Convert
    nameWithType: IConverter.Convert
    fullName: VRBuilder.Editor.ProcessUpgradeTool.IConverter.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.ProcessUpgradeTool.IConverter.Convert(System.Object)
    name: Convert
    nameWithType: IConverter.Convert
    fullName: VRBuilder.Editor.ProcessUpgradeTool.IConverter.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
