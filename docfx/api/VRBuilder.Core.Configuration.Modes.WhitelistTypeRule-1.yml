### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1
  commentId: T:VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1
  id: WhitelistTypeRule`1
  parent: VRBuilder.Core.Configuration.Modes
  children:
  - VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1.IsQualifiedByPredicate(System.Type)
  langs:
  - csharp
  - vb
  name: WhitelistTypeRule<TBase>
  nameWithType: WhitelistTypeRule<TBase>
  fullName: VRBuilder.Core.Configuration.Modes.WhitelistTypeRule<TBase>
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/WhitelistTypeRule.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: WhitelistTypeRule
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/WhitelistTypeRule.cs
    startLine: 12
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: All listed types will be valid.
  example: []
  syntax:
    content: 'public class WhitelistTypeRule<TBase> : ListTypeRule<WhitelistTypeRule<TBase>, TBase>, IRule<Type>'
    typeParameters:
    - id: TBase
      description: Type which can be filtered.
    content.vb: Public Class WhitelistTypeRule(Of TBase) Inherits ListTypeRule(Of WhitelistTypeRule(Of TBase), TBase) Implements IRule(Of Type)
  inheritance:
  - System.Object
  - VRBuilder.Core.Configuration.Modes.TypeRule{{TBase}}
  - VRBuilder.Core.Configuration.Modes.ListTypeRule{VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1,{TBase}}
  implements:
  - VRBuilder.Core.Configuration.Modes.IRule{System.Type}
  inheritedMembers:
  - VRBuilder.Core.Configuration.Modes.ListTypeRule{VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1,{TBase}}.StoredTypes
  - VRBuilder.Core.Configuration.Modes.ListTypeRule{VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1,{TBase}}.Add``1
  - VRBuilder.Core.Configuration.Modes.ListTypeRule{VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1,{TBase}}.Clone
  - VRBuilder.Core.Configuration.Modes.TypeRule{{TBase}}.IsQualifiedBy``1
  - VRBuilder.Core.Configuration.Modes.TypeRule{{TBase}}.IsQualifiedBy(System.Type)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: WhitelistTypeRule(Of TBase)
  fullName.vb: VRBuilder.Core.Configuration.Modes.WhitelistTypeRule(Of TBase)
  name.vb: WhitelistTypeRule(Of TBase)
- uid: VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1.IsQualifiedByPredicate(System.Type)
  commentId: M:VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1.IsQualifiedByPredicate(System.Type)
  id: IsQualifiedByPredicate(System.Type)
  parent: VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1
  langs:
  - csharp
  - vb
  name: IsQualifiedByPredicate(Type)
  nameWithType: WhitelistTypeRule<TBase>.IsQualifiedByPredicate(Type)
  fullName: VRBuilder.Core.Configuration.Modes.WhitelistTypeRule<TBase>.IsQualifiedByPredicate(System.Type)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/Modes/WhitelistTypeRule.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsQualifiedByPredicate
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/Modes/WhitelistTypeRule.cs
    startLine: 15
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration.Modes
  summary: Actual check of a given type. It is guaranteed that <code class="paramref">type</code> inherits the <typeparam name="TValueBase"></typeparam>
  example: []
  syntax:
    content: protected override bool IsQualifiedByPredicate(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function IsQualifiedByPredicate(type As Type) As Boolean
  overridden: VRBuilder.Core.Configuration.Modes.TypeRule{{TBase}}.IsQualifiedByPredicate(System.Type)
  overload: VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1.IsQualifiedByPredicate*
  nameWithType.vb: WhitelistTypeRule(Of TBase).IsQualifiedByPredicate(Type)
  fullName.vb: VRBuilder.Core.Configuration.Modes.WhitelistTypeRule(Of TBase).IsQualifiedByPredicate(System.Type)
references:
- uid: VRBuilder.Core.Configuration.Modes
  commentId: N:VRBuilder.Core.Configuration.Modes
  href: VRBuilder.html
  name: VRBuilder.Core.Configuration.Modes
  nameWithType: VRBuilder.Core.Configuration.Modes
  fullName: VRBuilder.Core.Configuration.Modes
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Configuration
    name: Configuration
    href: VRBuilder.Core.Configuration.html
  - name: .
  - uid: VRBuilder.Core.Configuration.Modes
    name: Modes
    href: VRBuilder.Core.Configuration.Modes.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Configuration
    name: Configuration
    href: VRBuilder.Core.Configuration.html
  - name: .
  - uid: VRBuilder.Core.Configuration.Modes
    name: Modes
    href: VRBuilder.Core.Configuration.Modes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: VRBuilder.Core.Configuration.Modes.TypeRule{{TBase}}
  commentId: T:VRBuilder.Core.Configuration.Modes.TypeRule{`0}
  parent: VRBuilder.Core.Configuration.Modes
  definition: VRBuilder.Core.Configuration.Modes.TypeRule`1
  href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html
  name: TypeRule<TBase>
  nameWithType: TypeRule<TBase>
  fullName: VRBuilder.Core.Configuration.Modes.TypeRule<TBase>
  nameWithType.vb: TypeRule(Of TBase)
  fullName.vb: VRBuilder.Core.Configuration.Modes.TypeRule(Of TBase)
  name.vb: TypeRule(Of TBase)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1
    name: TypeRule
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html
  - name: <
  - name: TBase
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1
    name: TypeRule
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TBase
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.ListTypeRule{VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1,{TBase}}
  commentId: T:VRBuilder.Core.Configuration.Modes.ListTypeRule{VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1,`0}
  parent: VRBuilder.Core.Configuration.Modes
  definition: VRBuilder.Core.Configuration.Modes.ListTypeRule`2
  href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html
  name: ListTypeRule<WhitelistTypeRule<TBase>, TBase>
  nameWithType: ListTypeRule<WhitelistTypeRule<TBase>, TBase>
  fullName: VRBuilder.Core.Configuration.Modes.ListTypeRule<VRBuilder.Core.Configuration.Modes.WhitelistTypeRule<TBase>, TBase>
  nameWithType.vb: ListTypeRule(Of WhitelistTypeRule(Of TBase), TBase)
  fullName.vb: VRBuilder.Core.Configuration.Modes.ListTypeRule(Of VRBuilder.Core.Configuration.Modes.WhitelistTypeRule(Of TBase), TBase)
  name.vb: ListTypeRule(Of WhitelistTypeRule(Of TBase), TBase)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.ListTypeRule`2
    name: ListTypeRule
    href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html
  - name: <
  - uid: VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1
    name: WhitelistTypeRule
    href: VRBuilder.Core.Configuration.Modes.WhitelistTypeRule-1.html
  - name: <
  - name: TBase
  - name: '>'
  - name: ','
  - name: " "
  - name: TBase
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.ListTypeRule`2
    name: ListTypeRule
    href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1
    name: WhitelistTypeRule
    href: VRBuilder.Core.Configuration.Modes.WhitelistTypeRule-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TBase
  - name: )
  - name: ','
  - name: " "
  - name: TBase
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.IRule{System.Type}
  commentId: T:VRBuilder.Core.Configuration.Modes.IRule{System.Type}
  parent: VRBuilder.Core.Configuration.Modes
  definition: VRBuilder.Core.Configuration.Modes.IRule`1
  href: VRBuilder.Core.Configuration.Modes.IRule-1.html
  name: IRule<Type>
  nameWithType: IRule<Type>
  fullName: VRBuilder.Core.Configuration.Modes.IRule<System.Type>
  nameWithType.vb: IRule(Of Type)
  fullName.vb: VRBuilder.Core.Configuration.Modes.IRule(Of System.Type)
  name.vb: IRule(Of Type)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.IRule`1
    name: IRule
    href: VRBuilder.Core.Configuration.Modes.IRule-1.html
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.IRule`1
    name: IRule
    href: VRBuilder.Core.Configuration.Modes.IRule-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.ListTypeRule{VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1,{TBase}}.StoredTypes
  commentId: P:VRBuilder.Core.Configuration.Modes.ListTypeRule{VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1,`0}.StoredTypes
  parent: VRBuilder.Core.Configuration.Modes.ListTypeRule{VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1,{TBase}}
  definition: VRBuilder.Core.Configuration.Modes.ListTypeRule`2.StoredTypes
  href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html#VRBuilder_Core_Configuration_Modes_ListTypeRule_2_StoredTypes
  name: StoredTypes
  nameWithType: ListTypeRule<WhitelistTypeRule<TBase>, TBase>.StoredTypes
  fullName: VRBuilder.Core.Configuration.Modes.ListTypeRule<VRBuilder.Core.Configuration.Modes.WhitelistTypeRule<TBase>, TBase>.StoredTypes
  nameWithType.vb: ListTypeRule(Of WhitelistTypeRule(Of TBase), TBase).StoredTypes
  fullName.vb: VRBuilder.Core.Configuration.Modes.ListTypeRule(Of VRBuilder.Core.Configuration.Modes.WhitelistTypeRule(Of TBase), TBase).StoredTypes
- uid: VRBuilder.Core.Configuration.Modes.ListTypeRule{VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1,{TBase}}.Add``1
  commentId: M:VRBuilder.Core.Configuration.Modes.ListTypeRule{VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1,`0}.Add``1
  parent: VRBuilder.Core.Configuration.Modes.ListTypeRule{VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1,{TBase}}
  definition: VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Add``1
  href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html#VRBuilder_Core_Configuration_Modes_ListTypeRule_2_Add__1
  name: Add<T>()
  nameWithType: ListTypeRule<WhitelistTypeRule<TBase>, TBase>.Add<T>()
  fullName: VRBuilder.Core.Configuration.Modes.ListTypeRule<VRBuilder.Core.Configuration.Modes.WhitelistTypeRule<TBase>, TBase>.Add<T>()
  nameWithType.vb: ListTypeRule(Of WhitelistTypeRule(Of TBase), TBase).Add(Of T)()
  fullName.vb: VRBuilder.Core.Configuration.Modes.ListTypeRule(Of VRBuilder.Core.Configuration.Modes.WhitelistTypeRule(Of TBase), TBase).Add(Of T)()
  name.vb: Add(Of T)()
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.ListTypeRule{VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1,`0}.Add``1
    name: Add
    href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html#VRBuilder_Core_Configuration_Modes_ListTypeRule_2_Add__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.ListTypeRule{VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1,`0}.Add``1
    name: Add
    href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html#VRBuilder_Core_Configuration_Modes_ListTypeRule_2_Add__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.ListTypeRule{VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1,{TBase}}.Clone
  commentId: M:VRBuilder.Core.Configuration.Modes.ListTypeRule{VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1,`0}.Clone
  parent: VRBuilder.Core.Configuration.Modes.ListTypeRule{VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1,{TBase}}
  definition: VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Clone
  href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html#VRBuilder_Core_Configuration_Modes_ListTypeRule_2_Clone
  name: Clone()
  nameWithType: ListTypeRule<WhitelistTypeRule<TBase>, TBase>.Clone()
  fullName: VRBuilder.Core.Configuration.Modes.ListTypeRule<VRBuilder.Core.Configuration.Modes.WhitelistTypeRule<TBase>, TBase>.Clone()
  nameWithType.vb: ListTypeRule(Of WhitelistTypeRule(Of TBase), TBase).Clone()
  fullName.vb: VRBuilder.Core.Configuration.Modes.ListTypeRule(Of VRBuilder.Core.Configuration.Modes.WhitelistTypeRule(Of TBase), TBase).Clone()
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.ListTypeRule{VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1,`0}.Clone
    name: Clone
    href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html#VRBuilder_Core_Configuration_Modes_ListTypeRule_2_Clone
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.ListTypeRule{VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1,`0}.Clone
    name: Clone
    href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html#VRBuilder_Core_Configuration_Modes_ListTypeRule_2_Clone
  - name: (
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.TypeRule{{TBase}}.IsQualifiedBy``1
  commentId: M:VRBuilder.Core.Configuration.Modes.TypeRule{`0}.IsQualifiedBy``1
  parent: VRBuilder.Core.Configuration.Modes.TypeRule{{TBase}}
  definition: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedBy``1
  href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy__1
  name: IsQualifiedBy<T>()
  nameWithType: TypeRule<TBase>.IsQualifiedBy<T>()
  fullName: VRBuilder.Core.Configuration.Modes.TypeRule<TBase>.IsQualifiedBy<T>()
  nameWithType.vb: TypeRule(Of TBase).IsQualifiedBy(Of T)()
  fullName.vb: VRBuilder.Core.Configuration.Modes.TypeRule(Of TBase).IsQualifiedBy(Of T)()
  name.vb: IsQualifiedBy(Of T)()
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule{`0}.IsQualifiedBy``1
    name: IsQualifiedBy
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule{`0}.IsQualifiedBy``1
    name: IsQualifiedBy
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.TypeRule{{TBase}}.IsQualifiedBy(System.Type)
  commentId: M:VRBuilder.Core.Configuration.Modes.TypeRule{`0}.IsQualifiedBy(System.Type)
  parent: VRBuilder.Core.Configuration.Modes.TypeRule{{TBase}}
  definition: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedBy(System.Type)
  href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy_System_Type_
  name: IsQualifiedBy(Type)
  nameWithType: TypeRule<TBase>.IsQualifiedBy(Type)
  fullName: VRBuilder.Core.Configuration.Modes.TypeRule<TBase>.IsQualifiedBy(System.Type)
  nameWithType.vb: TypeRule(Of TBase).IsQualifiedBy(Type)
  fullName.vb: VRBuilder.Core.Configuration.Modes.TypeRule(Of TBase).IsQualifiedBy(System.Type)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule{`0}.IsQualifiedBy(System.Type)
    name: IsQualifiedBy
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule{`0}.IsQualifiedBy(System.Type)
    name: IsQualifiedBy
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Configuration.Modes.TypeRule`1
  commentId: T:VRBuilder.Core.Configuration.Modes.TypeRule`1
  href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html
  name: TypeRule<TValueBase>
  nameWithType: TypeRule<TValueBase>
  fullName: VRBuilder.Core.Configuration.Modes.TypeRule<TValueBase>
  nameWithType.vb: TypeRule(Of TValueBase)
  fullName.vb: VRBuilder.Core.Configuration.Modes.TypeRule(Of TValueBase)
  name.vb: TypeRule(Of TValueBase)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1
    name: TypeRule
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html
  - name: <
  - name: TValueBase
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1
    name: TypeRule
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TValueBase
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.ListTypeRule`2
  commentId: T:VRBuilder.Core.Configuration.Modes.ListTypeRule`2
  href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html
  name: ListTypeRule<TRecursive, TValueBase>
  nameWithType: ListTypeRule<TRecursive, TValueBase>
  fullName: VRBuilder.Core.Configuration.Modes.ListTypeRule<TRecursive, TValueBase>
  nameWithType.vb: ListTypeRule(Of TRecursive, TValueBase)
  fullName.vb: VRBuilder.Core.Configuration.Modes.ListTypeRule(Of TRecursive, TValueBase)
  name.vb: ListTypeRule(Of TRecursive, TValueBase)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.ListTypeRule`2
    name: ListTypeRule
    href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html
  - name: <
  - name: TRecursive
  - name: ','
  - name: " "
  - name: TValueBase
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.ListTypeRule`2
    name: ListTypeRule
    href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TRecursive
  - name: ','
  - name: " "
  - name: TValueBase
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.IRule`1
  commentId: T:VRBuilder.Core.Configuration.Modes.IRule`1
  href: VRBuilder.Core.Configuration.Modes.IRule-1.html
  name: IRule<T>
  nameWithType: IRule<T>
  fullName: VRBuilder.Core.Configuration.Modes.IRule<T>
  nameWithType.vb: IRule(Of T)
  fullName.vb: VRBuilder.Core.Configuration.Modes.IRule(Of T)
  name.vb: IRule(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.IRule`1
    name: IRule
    href: VRBuilder.Core.Configuration.Modes.IRule-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.IRule`1
    name: IRule
    href: VRBuilder.Core.Configuration.Modes.IRule-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.ListTypeRule`2.StoredTypes
  commentId: P:VRBuilder.Core.Configuration.Modes.ListTypeRule`2.StoredTypes
  href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html#VRBuilder_Core_Configuration_Modes_ListTypeRule_2_StoredTypes
  name: StoredTypes
  nameWithType: ListTypeRule<TRecursive, TValueBase>.StoredTypes
  fullName: VRBuilder.Core.Configuration.Modes.ListTypeRule<TRecursive, TValueBase>.StoredTypes
  nameWithType.vb: ListTypeRule(Of TRecursive, TValueBase).StoredTypes
  fullName.vb: VRBuilder.Core.Configuration.Modes.ListTypeRule(Of TRecursive, TValueBase).StoredTypes
- uid: VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Add``1
  commentId: M:VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Add``1
  href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html#VRBuilder_Core_Configuration_Modes_ListTypeRule_2_Add__1
  name: Add<T>()
  nameWithType: ListTypeRule<TRecursive, TValueBase>.Add<T>()
  fullName: VRBuilder.Core.Configuration.Modes.ListTypeRule<TRecursive, TValueBase>.Add<T>()
  nameWithType.vb: ListTypeRule(Of TRecursive, TValueBase).Add(Of T)()
  fullName.vb: VRBuilder.Core.Configuration.Modes.ListTypeRule(Of TRecursive, TValueBase).Add(Of T)()
  name.vb: Add(Of T)()
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Add``1
    name: Add
    href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html#VRBuilder_Core_Configuration_Modes_ListTypeRule_2_Add__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Add``1
    name: Add
    href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html#VRBuilder_Core_Configuration_Modes_ListTypeRule_2_Add__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Clone
  commentId: M:VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Clone
  href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html#VRBuilder_Core_Configuration_Modes_ListTypeRule_2_Clone
  name: Clone()
  nameWithType: ListTypeRule<TRecursive, TValueBase>.Clone()
  fullName: VRBuilder.Core.Configuration.Modes.ListTypeRule<TRecursive, TValueBase>.Clone()
  nameWithType.vb: ListTypeRule(Of TRecursive, TValueBase).Clone()
  fullName.vb: VRBuilder.Core.Configuration.Modes.ListTypeRule(Of TRecursive, TValueBase).Clone()
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Clone
    name: Clone
    href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html#VRBuilder_Core_Configuration_Modes_ListTypeRule_2_Clone
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.ListTypeRule`2.Clone
    name: Clone
    href: VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html#VRBuilder_Core_Configuration_Modes_ListTypeRule_2_Clone
  - name: (
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedBy``1
  commentId: M:VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedBy``1
  href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy__1
  name: IsQualifiedBy<T>()
  nameWithType: TypeRule<TValueBase>.IsQualifiedBy<T>()
  fullName: VRBuilder.Core.Configuration.Modes.TypeRule<TValueBase>.IsQualifiedBy<T>()
  nameWithType.vb: TypeRule(Of TValueBase).IsQualifiedBy(Of T)()
  fullName.vb: VRBuilder.Core.Configuration.Modes.TypeRule(Of TValueBase).IsQualifiedBy(Of T)()
  name.vb: IsQualifiedBy(Of T)()
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedBy``1
    name: IsQualifiedBy
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedBy``1
    name: IsQualifiedBy
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedBy(System.Type)
  commentId: M:VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedBy(System.Type)
  isExternal: true
  href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy_System_Type_
  name: IsQualifiedBy(Type)
  nameWithType: TypeRule<TValueBase>.IsQualifiedBy(Type)
  fullName: VRBuilder.Core.Configuration.Modes.TypeRule<TValueBase>.IsQualifiedBy(System.Type)
  nameWithType.vb: TypeRule(Of TValueBase).IsQualifiedBy(Type)
  fullName.vb: VRBuilder.Core.Configuration.Modes.TypeRule(Of TValueBase).IsQualifiedBy(System.Type)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedBy(System.Type)
    name: IsQualifiedBy
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedBy(System.Type)
    name: IsQualifiedBy
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedBy_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.TypeRule{{TBase}}.IsQualifiedByPredicate(System.Type)
  commentId: M:VRBuilder.Core.Configuration.Modes.TypeRule{`0}.IsQualifiedByPredicate(System.Type)
  parent: VRBuilder.Core.Configuration.Modes.TypeRule{{TBase}}
  definition: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedByPredicate(System.Type)
  href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedByPredicate_System_Type_
  name: IsQualifiedByPredicate(Type)
  nameWithType: TypeRule<TBase>.IsQualifiedByPredicate(Type)
  fullName: VRBuilder.Core.Configuration.Modes.TypeRule<TBase>.IsQualifiedByPredicate(System.Type)
  nameWithType.vb: TypeRule(Of TBase).IsQualifiedByPredicate(Type)
  fullName.vb: VRBuilder.Core.Configuration.Modes.TypeRule(Of TBase).IsQualifiedByPredicate(System.Type)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule{`0}.IsQualifiedByPredicate(System.Type)
    name: IsQualifiedByPredicate
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedByPredicate_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule{`0}.IsQualifiedByPredicate(System.Type)
    name: IsQualifiedByPredicate
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedByPredicate_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1.IsQualifiedByPredicate*
  commentId: Overload:VRBuilder.Core.Configuration.Modes.WhitelistTypeRule`1.IsQualifiedByPredicate
  href: VRBuilder.Core.Configuration.Modes.WhitelistTypeRule-1.html#VRBuilder_Core_Configuration_Modes_WhitelistTypeRule_1_IsQualifiedByPredicate_System_Type_
  name: IsQualifiedByPredicate
  nameWithType: WhitelistTypeRule<TBase>.IsQualifiedByPredicate
  fullName: VRBuilder.Core.Configuration.Modes.WhitelistTypeRule<TBase>.IsQualifiedByPredicate
  nameWithType.vb: WhitelistTypeRule(Of TBase).IsQualifiedByPredicate
  fullName.vb: VRBuilder.Core.Configuration.Modes.WhitelistTypeRule(Of TBase).IsQualifiedByPredicate
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedByPredicate(System.Type)
  commentId: M:VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedByPredicate(System.Type)
  isExternal: true
  href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedByPredicate_System_Type_
  name: IsQualifiedByPredicate(Type)
  nameWithType: TypeRule<TValueBase>.IsQualifiedByPredicate(Type)
  fullName: VRBuilder.Core.Configuration.Modes.TypeRule<TValueBase>.IsQualifiedByPredicate(System.Type)
  nameWithType.vb: TypeRule(Of TValueBase).IsQualifiedByPredicate(Type)
  fullName.vb: VRBuilder.Core.Configuration.Modes.TypeRule(Of TValueBase).IsQualifiedByPredicate(System.Type)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedByPredicate(System.Type)
    name: IsQualifiedByPredicate
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedByPredicate_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.TypeRule`1.IsQualifiedByPredicate(System.Type)
    name: IsQualifiedByPredicate
    href: VRBuilder.Core.Configuration.Modes.TypeRule-1.html#VRBuilder_Core_Configuration_Modes_TypeRule_1_IsQualifiedByPredicate_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
