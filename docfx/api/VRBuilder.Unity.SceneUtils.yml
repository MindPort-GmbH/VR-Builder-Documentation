### YamlMime:ManagedReference
items:
- uid: VRBuilder.Unity.SceneUtils
  commentId: T:VRBuilder.Unity.SceneUtils
  id: SceneUtils
  parent: VRBuilder.Unity
  children:
  - VRBuilder.Unity.SceneUtils.ContainsMissingScripts(UnityEngine.GameObject)
  - VRBuilder.Unity.SceneUtils.GetActiveAndInactiveComponents``1
  - VRBuilder.Unity.SceneUtils.GetActiveAndInactiveGameObjects
  - VRBuilder.Unity.SceneUtils.GetComponentInParentIncludingInactive``1(UnityEngine.GameObject)
  - VRBuilder.Unity.SceneUtils.GetOrAddComponent``1(UnityEngine.GameObject)
  langs:
  - csharp
  - vb
  name: SceneUtils
  nameWithType: SceneUtils
  fullName: VRBuilder.Unity.SceneUtils
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Unity/SceneUtils.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SceneUtils
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Unity/SceneUtils.cs
    startLine: 11
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Unity
  syntax:
    content: public static class SceneUtils
    content.vb: Public Module SceneUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VRBuilder.Unity.SceneUtils.GetActiveAndInactiveComponents``1
  commentId: M:VRBuilder.Unity.SceneUtils.GetActiveAndInactiveComponents``1
  id: GetActiveAndInactiveComponents``1
  parent: VRBuilder.Unity.SceneUtils
  langs:
  - csharp
  - vb
  name: GetActiveAndInactiveComponents<T>()
  nameWithType: SceneUtils.GetActiveAndInactiveComponents<T>()
  fullName: VRBuilder.Unity.SceneUtils.GetActiveAndInactiveComponents<T>()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Unity/SceneUtils.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetActiveAndInactiveComponents
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Unity/SceneUtils.cs
    startLine: 16
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Unity
  summary: "\nGet all loaded components, both active and inactive.\n"
  example: []
  syntax:
    content: >-
      public static IEnumerable<T> GetActiveAndInactiveComponents<T>()

          where T : Component
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Shared Function GetActiveAndInactiveComponents(Of T As Component) As IEnumerable(Of T)
  overload: VRBuilder.Unity.SceneUtils.GetActiveAndInactiveComponents*
  nameWithType.vb: SceneUtils.GetActiveAndInactiveComponents(Of T)()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.Unity.SceneUtils.GetActiveAndInactiveComponents(Of T)()
  name.vb: GetActiveAndInactiveComponents(Of T)()
- uid: VRBuilder.Unity.SceneUtils.GetActiveAndInactiveGameObjects
  commentId: M:VRBuilder.Unity.SceneUtils.GetActiveAndInactiveGameObjects
  id: GetActiveAndInactiveGameObjects
  parent: VRBuilder.Unity.SceneUtils
  langs:
  - csharp
  - vb
  name: GetActiveAndInactiveGameObjects()
  nameWithType: SceneUtils.GetActiveAndInactiveGameObjects()
  fullName: VRBuilder.Unity.SceneUtils.GetActiveAndInactiveGameObjects()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Unity/SceneUtils.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetActiveAndInactiveGameObjects
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Unity/SceneUtils.cs
    startLine: 39
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Unity
  summary: "\nGet all loaded game objects, both active and inactive.\n"
  example: []
  syntax:
    content: public static IEnumerable<GameObject> GetActiveAndInactiveGameObjects()
    return:
      type: System.Collections.Generic.IEnumerable{UnityEngine.GameObject}
    content.vb: Public Shared Function GetActiveAndInactiveGameObjects As IEnumerable(Of GameObject)
  overload: VRBuilder.Unity.SceneUtils.GetActiveAndInactiveGameObjects*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Unity.SceneUtils.GetComponentInParentIncludingInactive``1(UnityEngine.GameObject)
  commentId: M:VRBuilder.Unity.SceneUtils.GetComponentInParentIncludingInactive``1(UnityEngine.GameObject)
  id: GetComponentInParentIncludingInactive``1(UnityEngine.GameObject)
  isExtensionMethod: true
  parent: VRBuilder.Unity.SceneUtils
  langs:
  - csharp
  - vb
  name: GetComponentInParentIncludingInactive<T>(GameObject)
  nameWithType: SceneUtils.GetComponentInParentIncludingInactive<T>(GameObject)
  fullName: VRBuilder.Unity.SceneUtils.GetComponentInParentIncludingInactive<T>(UnityEngine.GameObject)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Unity/SceneUtils.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetComponentInParentIncludingInactive
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Unity/SceneUtils.cs
    startLine: 48
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Unity
  summary: "\nReturns the component of Type <code data-dev-comment-type=\"paramref\" class=\"paramref\">T</code> in the <code data-dev-comment-type=\"paramref\" class=\"paramref\">gameObject</code> or any of its parents, null if there isn&apos;t one.\nIn contrast to <xref href=\"UnityEngine.GameObject.GetComponentInParent(System.Type%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> this method also includes inactive components.\n"
  example: []
  syntax:
    content: >-
      public static T GetComponentInParentIncludingInactive<T>(this GameObject gameObject)

          where T : Component
    parameters:
    - id: gameObject
      type: UnityEngine.GameObject
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetComponentInParentIncludingInactive(Of T As Component)(gameObject As GameObject) As T
  overload: VRBuilder.Unity.SceneUtils.GetComponentInParentIncludingInactive*
  nameWithType.vb: SceneUtils.GetComponentInParentIncludingInactive(Of T)(GameObject)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.Unity.SceneUtils.GetComponentInParentIncludingInactive(Of T)(UnityEngine.GameObject)
  name.vb: GetComponentInParentIncludingInactive(Of T)(GameObject)
- uid: VRBuilder.Unity.SceneUtils.GetOrAddComponent``1(UnityEngine.GameObject)
  commentId: M:VRBuilder.Unity.SceneUtils.GetOrAddComponent``1(UnityEngine.GameObject)
  id: GetOrAddComponent``1(UnityEngine.GameObject)
  isExtensionMethod: true
  parent: VRBuilder.Unity.SceneUtils
  langs:
  - csharp
  - vb
  name: GetOrAddComponent<T>(GameObject)
  nameWithType: SceneUtils.GetOrAddComponent<T>(GameObject)
  fullName: VRBuilder.Unity.SceneUtils.GetOrAddComponent<T>(UnityEngine.GameObject)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Unity/SceneUtils.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetOrAddComponent
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Unity/SceneUtils.cs
    startLine: 71
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Unity
  summary: "\nReturns an instance of the component of type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code>.\nIf no instance of the component exists on the <code data-dev-comment-type=\"paramref\" class=\"paramref\">gameObject</code> yet, a new instance will be created.\nOtherwise, the behaviour is identical to that of `GameObject.GetComponent&lt;T>`.\n"
  example: []
  syntax:
    content: >-
      public static T GetOrAddComponent<T>(this GameObject gameObject)

          where T : Component
    parameters:
    - id: gameObject
      type: UnityEngine.GameObject
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetOrAddComponent(Of T As Component)(gameObject As GameObject) As T
  overload: VRBuilder.Unity.SceneUtils.GetOrAddComponent*
  nameWithType.vb: SceneUtils.GetOrAddComponent(Of T)(GameObject)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.Unity.SceneUtils.GetOrAddComponent(Of T)(UnityEngine.GameObject)
  name.vb: GetOrAddComponent(Of T)(GameObject)
- uid: VRBuilder.Unity.SceneUtils.ContainsMissingScripts(UnityEngine.GameObject)
  commentId: M:VRBuilder.Unity.SceneUtils.ContainsMissingScripts(UnityEngine.GameObject)
  id: ContainsMissingScripts(UnityEngine.GameObject)
  parent: VRBuilder.Unity.SceneUtils
  langs:
  - csharp
  - vb
  name: ContainsMissingScripts(GameObject)
  nameWithType: SceneUtils.ContainsMissingScripts(GameObject)
  fullName: VRBuilder.Unity.SceneUtils.ContainsMissingScripts(UnityEngine.GameObject)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Unity/SceneUtils.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ContainsMissingScripts
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Unity/SceneUtils.cs
    startLine: 82
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Unity
  summary: "\nChecks whether a <code data-dev-comment-type=\"paramref\" class=\"paramref\">gameObject</code> contains missing scripts.\n"
  example: []
  syntax:
    content: public static bool ContainsMissingScripts(GameObject gameObject)
    parameters:
    - id: gameObject
      type: UnityEngine.GameObject
      description: GameObject to check.
    return:
      type: System.Boolean
      description: True, if scripts are missing.
    content.vb: Public Shared Function ContainsMissingScripts(gameObject As GameObject) As Boolean
  overload: VRBuilder.Unity.SceneUtils.ContainsMissingScripts*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VRBuilder.Unity
  commentId: N:VRBuilder.Unity
  name: VRBuilder.Unity
  nameWithType: VRBuilder.Unity
  fullName: VRBuilder.Unity
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Unity.SceneUtils.GetActiveAndInactiveComponents*
  commentId: Overload:VRBuilder.Unity.SceneUtils.GetActiveAndInactiveComponents
  name: GetActiveAndInactiveComponents
  nameWithType: SceneUtils.GetActiveAndInactiveComponents
  fullName: VRBuilder.Unity.SceneUtils.GetActiveAndInactiveComponents
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Unity.SceneUtils.GetActiveAndInactiveGameObjects*
  commentId: Overload:VRBuilder.Unity.SceneUtils.GetActiveAndInactiveGameObjects
  name: GetActiveAndInactiveGameObjects
  nameWithType: SceneUtils.GetActiveAndInactiveGameObjects
  fullName: VRBuilder.Unity.SceneUtils.GetActiveAndInactiveGameObjects
- uid: System.Collections.Generic.IEnumerable{UnityEngine.GameObject}
  commentId: T:System.Collections.Generic.IEnumerable{UnityEngine.GameObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<GameObject>
  nameWithType: IEnumerable<GameObject>
  fullName: System.Collections.Generic.IEnumerable<UnityEngine.GameObject>
  nameWithType.vb: IEnumerable(Of GameObject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of UnityEngine.GameObject)
  name.vb: IEnumerable(Of GameObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.GameObject.GetComponentInParent(System.Type,System.Boolean)
  commentId: M:UnityEngine.GameObject.GetComponentInParent(System.Type,System.Boolean)
  isExternal: true
- uid: VRBuilder.Unity.SceneUtils.GetComponentInParentIncludingInactive*
  commentId: Overload:VRBuilder.Unity.SceneUtils.GetComponentInParentIncludingInactive
  name: GetComponentInParentIncludingInactive
  nameWithType: SceneUtils.GetComponentInParentIncludingInactive
  fullName: VRBuilder.Unity.SceneUtils.GetComponentInParentIncludingInactive
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: VRBuilder.Unity.SceneUtils.GetOrAddComponent*
  commentId: Overload:VRBuilder.Unity.SceneUtils.GetOrAddComponent
  name: GetOrAddComponent
  nameWithType: SceneUtils.GetOrAddComponent
  fullName: VRBuilder.Unity.SceneUtils.GetOrAddComponent
- uid: VRBuilder.Unity.SceneUtils.ContainsMissingScripts*
  commentId: Overload:VRBuilder.Unity.SceneUtils.ContainsMissingScripts
  name: ContainsMissingScripts
  nameWithType: SceneUtils.ContainsMissingScripts
  fullName: VRBuilder.Unity.SceneUtils.ContainsMissingScripts
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
