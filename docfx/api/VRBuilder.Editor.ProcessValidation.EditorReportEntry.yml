### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.ProcessValidation.EditorReportEntry
  commentId: T:VRBuilder.Editor.ProcessValidation.EditorReportEntry
  id: EditorReportEntry
  parent: VRBuilder.Editor.ProcessValidation
  children:
  - VRBuilder.Editor.ProcessValidation.EditorReportEntry.#ctor(VRBuilder.Editor.ProcessValidation.IContext,VRBuilder.Editor.ProcessValidation.IValidator,VRBuilder.Core.Validation.ReportEntry)
  - VRBuilder.Editor.ProcessValidation.EditorReportEntry.Context
  - VRBuilder.Editor.ProcessValidation.EditorReportEntry.ToString
  - VRBuilder.Editor.ProcessValidation.EditorReportEntry.Validator
  langs:
  - csharp
  - vb
  name: EditorReportEntry
  nameWithType: EditorReportEntry
  fullName: VRBuilder.Editor.ProcessValidation.EditorReportEntry
  type: Class
  source:
    remote:
      path: Source/Core/Editor/ProcessValidation/EditorReportEntry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EditorReportEntry
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/ProcessValidation/EditorReportEntry.cs
    startLine: 11
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.ProcessValidation
  summary: "\nReport generated from validations of <xref href=\"VRBuilder.Editor.ProcessValidation.IValidator\" data-throw-if-not-resolved=\"false\"></xref> objects.\n"
  example: []
  syntax:
    content: 'public class EditorReportEntry : ReportEntry'
    content.vb: >-
      Public Class EditorReportEntry
          Inherits ReportEntry
  inheritance:
  - System.Object
  - VRBuilder.Core.Validation.ReportEntry
  inheritedMembers:
  - VRBuilder.Core.Validation.ReportEntry.ErrorLevel
  - VRBuilder.Core.Validation.ReportEntry.Code
  - VRBuilder.Core.Validation.ReportEntry.Message
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Editor.ProcessValidation.EditorReportEntry.Context
  commentId: F:VRBuilder.Editor.ProcessValidation.EditorReportEntry.Context
  id: Context
  parent: VRBuilder.Editor.ProcessValidation.EditorReportEntry
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: EditorReportEntry.Context
  fullName: VRBuilder.Editor.ProcessValidation.EditorReportEntry.Context
  type: Field
  source:
    remote:
      path: Source/Core/Editor/ProcessValidation/EditorReportEntry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Context
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/ProcessValidation/EditorReportEntry.cs
    startLine: 16
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.ProcessValidation
  summary: "\n<xref href=\"VRBuilder.Editor.ProcessValidation.IContext\" data-throw-if-not-resolved=\"false\"></xref> where the issue is present.\n"
  example: []
  syntax:
    content: public readonly IContext Context
    return:
      type: VRBuilder.Editor.ProcessValidation.IContext
    content.vb: Public ReadOnly Context As IContext
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Editor.ProcessValidation.EditorReportEntry.Validator
  commentId: F:VRBuilder.Editor.ProcessValidation.EditorReportEntry.Validator
  id: Validator
  parent: VRBuilder.Editor.ProcessValidation.EditorReportEntry
  langs:
  - csharp
  - vb
  name: Validator
  nameWithType: EditorReportEntry.Validator
  fullName: VRBuilder.Editor.ProcessValidation.EditorReportEntry.Validator
  type: Field
  source:
    remote:
      path: Source/Core/Editor/ProcessValidation/EditorReportEntry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Validator
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/ProcessValidation/EditorReportEntry.cs
    startLine: 21
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.ProcessValidation
  summary: "\n<xref href=\"VRBuilder.Editor.ProcessValidation.IValidator\" data-throw-if-not-resolved=\"false\"></xref> used to generate this <xref href=\"VRBuilder.Editor.ProcessValidation.EditorReportEntry\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public readonly IValidator Validator
    return:
      type: VRBuilder.Editor.ProcessValidation.IValidator
    content.vb: Public ReadOnly Validator As IValidator
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Editor.ProcessValidation.EditorReportEntry.ToString
  commentId: M:VRBuilder.Editor.ProcessValidation.EditorReportEntry.ToString
  id: ToString
  parent: VRBuilder.Editor.ProcessValidation.EditorReportEntry
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: EditorReportEntry.ToString()
  fullName: VRBuilder.Editor.ProcessValidation.EditorReportEntry.ToString()
  type: Method
  source:
    remote:
      path: Source/Core/Editor/ProcessValidation/EditorReportEntry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ToString
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/ProcessValidation/EditorReportEntry.cs
    startLine: 26
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.ProcessValidation
  summary: "\nReturns a string that represents the current object.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: VRBuilder.Editor.ProcessValidation.EditorReportEntry.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Editor.ProcessValidation.EditorReportEntry.#ctor(VRBuilder.Editor.ProcessValidation.IContext,VRBuilder.Editor.ProcessValidation.IValidator,VRBuilder.Core.Validation.ReportEntry)
  commentId: M:VRBuilder.Editor.ProcessValidation.EditorReportEntry.#ctor(VRBuilder.Editor.ProcessValidation.IContext,VRBuilder.Editor.ProcessValidation.IValidator,VRBuilder.Core.Validation.ReportEntry)
  id: '#ctor(VRBuilder.Editor.ProcessValidation.IContext,VRBuilder.Editor.ProcessValidation.IValidator,VRBuilder.Core.Validation.ReportEntry)'
  parent: VRBuilder.Editor.ProcessValidation.EditorReportEntry
  langs:
  - csharp
  - vb
  name: EditorReportEntry(IContext, IValidator, ReportEntry)
  nameWithType: EditorReportEntry.EditorReportEntry(IContext, IValidator, ReportEntry)
  fullName: VRBuilder.Editor.ProcessValidation.EditorReportEntry.EditorReportEntry(VRBuilder.Editor.ProcessValidation.IContext, VRBuilder.Editor.ProcessValidation.IValidator, VRBuilder.Core.Validation.ReportEntry)
  type: Constructor
  source:
    remote:
      path: Source/Core/Editor/ProcessValidation/EditorReportEntry.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/ProcessValidation/EditorReportEntry.cs
    startLine: 31
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.ProcessValidation
  syntax:
    content: public EditorReportEntry(IContext context, IValidator validator, ReportEntry entry)
    parameters:
    - id: context
      type: VRBuilder.Editor.ProcessValidation.IContext
    - id: validator
      type: VRBuilder.Editor.ProcessValidation.IValidator
    - id: entry
      type: VRBuilder.Core.Validation.ReportEntry
    content.vb: Public Sub New(context As IContext, validator As IValidator, entry As ReportEntry)
  overload: VRBuilder.Editor.ProcessValidation.EditorReportEntry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Editor.ProcessValidation.IValidator
  commentId: T:VRBuilder.Editor.ProcessValidation.IValidator
  parent: VRBuilder.Editor.ProcessValidation
  name: IValidator
  nameWithType: IValidator
  fullName: VRBuilder.Editor.ProcessValidation.IValidator
- uid: VRBuilder.Editor.ProcessValidation
  commentId: N:VRBuilder.Editor.ProcessValidation
  name: VRBuilder.Editor.ProcessValidation
  nameWithType: VRBuilder.Editor.ProcessValidation
  fullName: VRBuilder.Editor.ProcessValidation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Validation.ReportEntry
  commentId: T:VRBuilder.Core.Validation.ReportEntry
  parent: VRBuilder.Core.Validation
  name: ReportEntry
  nameWithType: ReportEntry
  fullName: VRBuilder.Core.Validation.ReportEntry
- uid: VRBuilder.Core.Validation.ReportEntry.ErrorLevel
  commentId: F:VRBuilder.Core.Validation.ReportEntry.ErrorLevel
  parent: VRBuilder.Core.Validation.ReportEntry
  name: ErrorLevel
  nameWithType: ReportEntry.ErrorLevel
  fullName: VRBuilder.Core.Validation.ReportEntry.ErrorLevel
- uid: VRBuilder.Core.Validation.ReportEntry.Code
  commentId: F:VRBuilder.Core.Validation.ReportEntry.Code
  parent: VRBuilder.Core.Validation.ReportEntry
  name: Code
  nameWithType: ReportEntry.Code
  fullName: VRBuilder.Core.Validation.ReportEntry.Code
- uid: VRBuilder.Core.Validation.ReportEntry.Message
  commentId: F:VRBuilder.Core.Validation.ReportEntry.Message
  parent: VRBuilder.Core.Validation.ReportEntry
  name: Message
  nameWithType: ReportEntry.Message
  fullName: VRBuilder.Core.Validation.ReportEntry.Message
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Validation
  commentId: N:VRBuilder.Core.Validation
  name: VRBuilder.Core.Validation
  nameWithType: VRBuilder.Core.Validation
  fullName: VRBuilder.Core.Validation
- uid: VRBuilder.Editor.ProcessValidation.IContext
  commentId: T:VRBuilder.Editor.ProcessValidation.IContext
  parent: VRBuilder.Editor.ProcessValidation
  name: IContext
  nameWithType: IContext
  fullName: VRBuilder.Editor.ProcessValidation.IContext
- uid: VRBuilder.Editor.ProcessValidation.EditorReportEntry
  commentId: T:VRBuilder.Editor.ProcessValidation.EditorReportEntry
  name: EditorReportEntry
  nameWithType: EditorReportEntry
  fullName: VRBuilder.Editor.ProcessValidation.EditorReportEntry
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.ProcessValidation.EditorReportEntry.ToString*
  commentId: Overload:VRBuilder.Editor.ProcessValidation.EditorReportEntry.ToString
  name: ToString
  nameWithType: EditorReportEntry.ToString
  fullName: VRBuilder.Editor.ProcessValidation.EditorReportEntry.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Editor.ProcessValidation.EditorReportEntry.#ctor*
  commentId: Overload:VRBuilder.Editor.ProcessValidation.EditorReportEntry.#ctor
  name: EditorReportEntry
  nameWithType: EditorReportEntry.EditorReportEntry
  fullName: VRBuilder.Editor.ProcessValidation.EditorReportEntry.EditorReportEntry
