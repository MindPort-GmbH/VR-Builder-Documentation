### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.UI.Views.ViewDictionary
  commentId: T:VRBuilder.Editor.UI.Views.ViewDictionary
  id: ViewDictionary
  parent: VRBuilder.Editor.UI.Views
  children:
  - VRBuilder.Editor.UI.Views.ViewDictionary.GetPath(VRBuilder.Editor.UI.Views.ViewDictionary.EnumType)
  - VRBuilder.Editor.UI.Views.ViewDictionary.LoadAsset(VRBuilder.Editor.UI.Views.ViewDictionary.EnumType)
  langs:
  - csharp
  - vb
  name: ViewDictionary
  nameWithType: ViewDictionary
  fullName: VRBuilder.Editor.UI.Views.ViewDictionary
  type: Class
  source:
    remote:
      path: Source/Core/Editor/UI/Views/ViewDictionary.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ViewDictionary
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Views/ViewDictionary.cs
    startLine: 10
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Views
  summary: "\nA static class that holds the path to UXML files mapped by an enum containing the UXML file names \n"
  example: []
  syntax:
    content: public class ViewDictionary
    content.vb: Public Class ViewDictionary
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Editor.UI.Views.ViewDictionary.GetPath(VRBuilder.Editor.UI.Views.ViewDictionary.EnumType)
  commentId: M:VRBuilder.Editor.UI.Views.ViewDictionary.GetPath(VRBuilder.Editor.UI.Views.ViewDictionary.EnumType)
  id: GetPath(VRBuilder.Editor.UI.Views.ViewDictionary.EnumType)
  parent: VRBuilder.Editor.UI.Views.ViewDictionary
  langs:
  - csharp
  - vb
  name: GetPath(ViewDictionary.EnumType)
  nameWithType: ViewDictionary.GetPath(ViewDictionary.EnumType)
  fullName: VRBuilder.Editor.UI.Views.ViewDictionary.GetPath(VRBuilder.Editor.UI.Views.ViewDictionary.EnumType)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/Views/ViewDictionary.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetPath
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Views/ViewDictionary.cs
    startLine: 37
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Views
  summary: "\nRetrieves the path associated with the specified enum value.\n"
  example: []
  syntax:
    content: public static string GetPath(ViewDictionary.EnumType enumValue)
    parameters:
    - id: enumValue
      type: VRBuilder.Editor.UI.Views.ViewDictionary.EnumType
      description: The enum value to retrieve the path for.
    return:
      type: System.String
      description: The path associated with the enum value, or null if the path is not found.
    content.vb: Public Shared Function GetPath(enumValue As ViewDictionary.EnumType) As String
  overload: VRBuilder.Editor.UI.Views.ViewDictionary.GetPath*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.UI.Views.ViewDictionary.LoadAsset(VRBuilder.Editor.UI.Views.ViewDictionary.EnumType)
  commentId: M:VRBuilder.Editor.UI.Views.ViewDictionary.LoadAsset(VRBuilder.Editor.UI.Views.ViewDictionary.EnumType)
  id: LoadAsset(VRBuilder.Editor.UI.Views.ViewDictionary.EnumType)
  parent: VRBuilder.Editor.UI.Views.ViewDictionary
  langs:
  - csharp
  - vb
  name: LoadAsset(ViewDictionary.EnumType)
  nameWithType: ViewDictionary.LoadAsset(ViewDictionary.EnumType)
  fullName: VRBuilder.Editor.UI.Views.ViewDictionary.LoadAsset(VRBuilder.Editor.UI.Views.ViewDictionary.EnumType)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/Views/ViewDictionary.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LoadAsset
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Views/ViewDictionary.cs
    startLine: 55
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Views
  summary: "\nLoads a VisualTreeAsset based on the provided enum value.\n"
  example: []
  syntax:
    content: public static VisualTreeAsset LoadAsset(ViewDictionary.EnumType enumValue)
    parameters:
    - id: enumValue
      type: VRBuilder.Editor.UI.Views.ViewDictionary.EnumType
      description: The enum value representing the desired asset.
    return:
      type: UnityEngine.UIElements.VisualTreeAsset
      description: The loaded VisualTreeAsset, or null if the asset could not be found.
    content.vb: Public Shared Function LoadAsset(enumValue As ViewDictionary.EnumType) As VisualTreeAsset
  overload: VRBuilder.Editor.UI.Views.ViewDictionary.LoadAsset*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VRBuilder.Editor.UI.Views
  commentId: N:VRBuilder.Editor.UI.Views
  name: VRBuilder.Editor.UI.Views
  nameWithType: VRBuilder.Editor.UI.Views
  fullName: VRBuilder.Editor.UI.Views
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Editor.UI.Views.ViewDictionary.GetPath*
  commentId: Overload:VRBuilder.Editor.UI.Views.ViewDictionary.GetPath
  name: GetPath
  nameWithType: ViewDictionary.GetPath
  fullName: VRBuilder.Editor.UI.Views.ViewDictionary.GetPath
- uid: VRBuilder.Editor.UI.Views.ViewDictionary.EnumType
  commentId: T:VRBuilder.Editor.UI.Views.ViewDictionary.EnumType
  parent: VRBuilder.Editor.UI.Views
  name: ViewDictionary.EnumType
  nameWithType: ViewDictionary.EnumType
  fullName: VRBuilder.Editor.UI.Views.ViewDictionary.EnumType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Editor.UI.Views.ViewDictionary.LoadAsset*
  commentId: Overload:VRBuilder.Editor.UI.Views.ViewDictionary.LoadAsset
  name: LoadAsset
  nameWithType: ViewDictionary.LoadAsset
  fullName: VRBuilder.Editor.UI.Views.ViewDictionary.LoadAsset
- uid: UnityEngine.UIElements.VisualTreeAsset
  commentId: T:UnityEngine.UIElements.VisualTreeAsset
  parent: UnityEngine.UIElements
  isExternal: true
  name: VisualTreeAsset
  nameWithType: VisualTreeAsset
  fullName: UnityEngine.UIElements.VisualTreeAsset
- uid: UnityEngine.UIElements
  commentId: N:UnityEngine.UIElements
  isExternal: true
  name: UnityEngine.UIElements
  nameWithType: UnityEngine.UIElements
  fullName: UnityEngine.UIElements
