### YamlMime:ManagedReference
items:
- uid: VRBuilder.BasicInteraction.Validation.HasGuidValidation
  commentId: T:VRBuilder.BasicInteraction.Validation.HasGuidValidation
  id: HasGuidValidation
  parent: VRBuilder.BasicInteraction.Validation
  children:
  - VRBuilder.BasicInteraction.Validation.HasGuidValidation.AddGuid(System.Guid)
  - VRBuilder.BasicInteraction.Validation.HasGuidValidation.GuidAdded
  - VRBuilder.BasicInteraction.Validation.HasGuidValidation.GuidRemoved
  - VRBuilder.BasicInteraction.Validation.HasGuidValidation.Guids
  - VRBuilder.BasicInteraction.Validation.HasGuidValidation.HasGuid(System.Guid)
  - VRBuilder.BasicInteraction.Validation.HasGuidValidation.RemoveGuid(System.Guid)
  - VRBuilder.BasicInteraction.Validation.HasGuidValidation.Validate(GameObject)
  langs:
  - csharp
  - vb
  name: HasGuidValidation
  nameWithType: HasGuidValidation
  fullName: VRBuilder.BasicInteraction.Validation.HasGuidValidation
  type: Class
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Validation/HasGuidValidation.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: HasGuidValidation
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Validation/HasGuidValidation.cs
    startLine: 12
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Validation
  summary: "\nValidator that checks if the object has one of the required guids either as\nits object ID or as a group.\n"
  example: []
  syntax:
    content: 'public class HasGuidValidation : Validator, IGuidContainer'
    content.vb: >-
      Public Class HasGuidValidation

          Inherits Validator

          Implements IGuidContainer
  inheritance:
  - System.Object
  - VRBuilder.BasicInteraction.Validation.Validator
  implements:
  - VRBuilder.Core.SceneObjects.IGuidContainer
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.BasicInteraction.Validation.HasGuidValidation.Guids
  commentId: P:VRBuilder.BasicInteraction.Validation.HasGuidValidation.Guids
  id: Guids
  parent: VRBuilder.BasicInteraction.Validation.HasGuidValidation
  langs:
  - csharp
  - vb
  name: Guids
  nameWithType: HasGuidValidation.Guids
  fullName: VRBuilder.BasicInteraction.Validation.HasGuidValidation.Guids
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Validation/HasGuidValidation.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Guids
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Validation/HasGuidValidation.cs
    startLine: 18
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Validation
  example: []
  syntax:
    content: public IEnumerable<Guid> Guids { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Guid}
    content.vb: Public ReadOnly Property Guids As IEnumerable(Of Guid)
  overload: VRBuilder.BasicInteraction.Validation.HasGuidValidation.Guids*
  implements:
  - VRBuilder.Core.SceneObjects.IGuidContainer.Guids
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.BasicInteraction.Validation.HasGuidValidation.GuidAdded
  commentId: E:VRBuilder.BasicInteraction.Validation.HasGuidValidation.GuidAdded
  id: GuidAdded
  parent: VRBuilder.BasicInteraction.Validation.HasGuidValidation
  langs:
  - csharp
  - vb
  name: GuidAdded
  nameWithType: HasGuidValidation.GuidAdded
  fullName: VRBuilder.BasicInteraction.Validation.HasGuidValidation.GuidAdded
  type: Event
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Validation/HasGuidValidation.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GuidAdded
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Validation/HasGuidValidation.cs
    startLine: 20
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Validation
  syntax:
    content: public event EventHandler<GuidContainerEventArgs> GuidAdded
    return:
      type: System.EventHandler{VRBuilder.Core.SceneObjects.GuidContainerEventArgs}
    content.vb: Public Event GuidAdded As EventHandler(Of GuidContainerEventArgs)
  implements:
  - VRBuilder.Core.SceneObjects.IGuidContainer.GuidAdded
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.BasicInteraction.Validation.HasGuidValidation.GuidRemoved
  commentId: E:VRBuilder.BasicInteraction.Validation.HasGuidValidation.GuidRemoved
  id: GuidRemoved
  parent: VRBuilder.BasicInteraction.Validation.HasGuidValidation
  langs:
  - csharp
  - vb
  name: GuidRemoved
  nameWithType: HasGuidValidation.GuidRemoved
  fullName: VRBuilder.BasicInteraction.Validation.HasGuidValidation.GuidRemoved
  type: Event
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Validation/HasGuidValidation.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GuidRemoved
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Validation/HasGuidValidation.cs
    startLine: 21
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Validation
  syntax:
    content: public event EventHandler<GuidContainerEventArgs> GuidRemoved
    return:
      type: System.EventHandler{VRBuilder.Core.SceneObjects.GuidContainerEventArgs}
    content.vb: Public Event GuidRemoved As EventHandler(Of GuidContainerEventArgs)
  implements:
  - VRBuilder.Core.SceneObjects.IGuidContainer.GuidRemoved
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.BasicInteraction.Validation.HasGuidValidation.AddGuid(System.Guid)
  commentId: M:VRBuilder.BasicInteraction.Validation.HasGuidValidation.AddGuid(System.Guid)
  id: AddGuid(System.Guid)
  parent: VRBuilder.BasicInteraction.Validation.HasGuidValidation
  langs:
  - csharp
  - vb
  name: AddGuid(Guid)
  nameWithType: HasGuidValidation.AddGuid(Guid)
  fullName: VRBuilder.BasicInteraction.Validation.HasGuidValidation.AddGuid(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Validation/HasGuidValidation.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AddGuid
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Validation/HasGuidValidation.cs
    startLine: 24
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Validation
  example: []
  syntax:
    content: public void AddGuid(Guid guid)
    parameters:
    - id: guid
      type: System.Guid
    content.vb: Public Sub AddGuid(guid As Guid)
  overload: VRBuilder.BasicInteraction.Validation.HasGuidValidation.AddGuid*
  implements:
  - VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.BasicInteraction.Validation.HasGuidValidation.HasGuid(System.Guid)
  commentId: M:VRBuilder.BasicInteraction.Validation.HasGuidValidation.HasGuid(System.Guid)
  id: HasGuid(System.Guid)
  parent: VRBuilder.BasicInteraction.Validation.HasGuidValidation
  langs:
  - csharp
  - vb
  name: HasGuid(Guid)
  nameWithType: HasGuidValidation.HasGuid(Guid)
  fullName: VRBuilder.BasicInteraction.Validation.HasGuidValidation.HasGuid(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Validation/HasGuidValidation.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: HasGuid
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Validation/HasGuidValidation.cs
    startLine: 34
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Validation
  example: []
  syntax:
    content: public bool HasGuid(Guid guid)
    parameters:
    - id: guid
      type: System.Guid
    return:
      type: System.Boolean
    content.vb: Public Function HasGuid(guid As Guid) As Boolean
  overload: VRBuilder.BasicInteraction.Validation.HasGuidValidation.HasGuid*
  implements:
  - VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.BasicInteraction.Validation.HasGuidValidation.RemoveGuid(System.Guid)
  commentId: M:VRBuilder.BasicInteraction.Validation.HasGuidValidation.RemoveGuid(System.Guid)
  id: RemoveGuid(System.Guid)
  parent: VRBuilder.BasicInteraction.Validation.HasGuidValidation
  langs:
  - csharp
  - vb
  name: RemoveGuid(Guid)
  nameWithType: HasGuidValidation.RemoveGuid(Guid)
  fullName: VRBuilder.BasicInteraction.Validation.HasGuidValidation.RemoveGuid(System.Guid)
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Validation/HasGuidValidation.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RemoveGuid
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Validation/HasGuidValidation.cs
    startLine: 40
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Validation
  example: []
  syntax:
    content: public bool RemoveGuid(Guid guid)
    parameters:
    - id: guid
      type: System.Guid
    return:
      type: System.Boolean
    content.vb: Public Function RemoveGuid(guid As Guid) As Boolean
  overload: VRBuilder.BasicInteraction.Validation.HasGuidValidation.RemoveGuid*
  implements:
  - VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid(System.Guid)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.BasicInteraction.Validation.HasGuidValidation.Validate(GameObject)
  commentId: M:VRBuilder.BasicInteraction.Validation.HasGuidValidation.Validate(GameObject)
  id: Validate(GameObject)
  parent: VRBuilder.BasicInteraction.Validation.HasGuidValidation
  langs:
  - csharp
  - vb
  name: Validate(GameObject)
  nameWithType: HasGuidValidation.Validate(GameObject)
  fullName: VRBuilder.BasicInteraction.Validation.HasGuidValidation.Validate(GameObject)
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Validation/HasGuidValidation.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Validate
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Validation/HasGuidValidation.cs
    startLine: 54
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Validation
  example: []
  syntax:
    content: public override bool Validate(GameObject obj)
    parameters:
    - id: obj
      type: GameObject
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Validate(obj As GameObject) As Boolean
  overridden: VRBuilder.BasicInteraction.Validation.Validator.Validate(GameObject)
  overload: VRBuilder.BasicInteraction.Validation.HasGuidValidation.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VRBuilder.BasicInteraction.Validation
  commentId: N:VRBuilder.BasicInteraction.Validation
  name: VRBuilder.BasicInteraction.Validation
  nameWithType: VRBuilder.BasicInteraction.Validation
  fullName: VRBuilder.BasicInteraction.Validation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.BasicInteraction.Validation.Validator
  commentId: T:VRBuilder.BasicInteraction.Validation.Validator
  parent: VRBuilder.BasicInteraction.Validation
  name: Validator
  nameWithType: Validator
  fullName: VRBuilder.BasicInteraction.Validation.Validator
- uid: VRBuilder.Core.SceneObjects.IGuidContainer
  commentId: T:VRBuilder.Core.SceneObjects.IGuidContainer
  parent: VRBuilder.Core.SceneObjects
  name: IGuidContainer
  nameWithType: IGuidContainer
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: VRBuilder.BasicInteraction.Validation.HasGuidValidation.Guids*
  commentId: Overload:VRBuilder.BasicInteraction.Validation.HasGuidValidation.Guids
  name: Guids
  nameWithType: HasGuidValidation.Guids
  fullName: VRBuilder.BasicInteraction.Validation.HasGuidValidation.Guids
- uid: VRBuilder.Core.SceneObjects.IGuidContainer.Guids
  commentId: P:VRBuilder.Core.SceneObjects.IGuidContainer.Guids
  parent: VRBuilder.Core.SceneObjects.IGuidContainer
  name: Guids
  nameWithType: IGuidContainer.Guids
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer.Guids
- uid: System.Collections.Generic.IEnumerable{System.Guid}
  commentId: T:System.Collections.Generic.IEnumerable{System.Guid}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Guid>
  nameWithType: IEnumerable<Guid>
  fullName: System.Collections.Generic.IEnumerable<System.Guid>
  nameWithType.vb: IEnumerable(Of Guid)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Guid)
  name.vb: IEnumerable(Of Guid)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Core.SceneObjects.IGuidContainer.GuidAdded
  commentId: E:VRBuilder.Core.SceneObjects.IGuidContainer.GuidAdded
  parent: VRBuilder.Core.SceneObjects.IGuidContainer
  name: GuidAdded
  nameWithType: IGuidContainer.GuidAdded
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer.GuidAdded
- uid: System.EventHandler{VRBuilder.Core.SceneObjects.GuidContainerEventArgs}
  commentId: T:System.EventHandler{VRBuilder.Core.SceneObjects.GuidContainerEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<GuidContainerEventArgs>
  nameWithType: EventHandler<GuidContainerEventArgs>
  fullName: System.EventHandler<VRBuilder.Core.SceneObjects.GuidContainerEventArgs>
  nameWithType.vb: EventHandler(Of GuidContainerEventArgs)
  fullName.vb: System.EventHandler(Of VRBuilder.Core.SceneObjects.GuidContainerEventArgs)
  name.vb: EventHandler(Of GuidContainerEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.SceneObjects.GuidContainerEventArgs
    name: GuidContainerEventArgs
    nameWithType: GuidContainerEventArgs
    fullName: VRBuilder.Core.SceneObjects.GuidContainerEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.SceneObjects.GuidContainerEventArgs
    name: GuidContainerEventArgs
    nameWithType: GuidContainerEventArgs
    fullName: VRBuilder.Core.SceneObjects.GuidContainerEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.IGuidContainer.GuidRemoved
  commentId: E:VRBuilder.Core.SceneObjects.IGuidContainer.GuidRemoved
  parent: VRBuilder.Core.SceneObjects.IGuidContainer
  name: GuidRemoved
  nameWithType: IGuidContainer.GuidRemoved
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer.GuidRemoved
- uid: VRBuilder.BasicInteraction.Validation.HasGuidValidation.AddGuid*
  commentId: Overload:VRBuilder.BasicInteraction.Validation.HasGuidValidation.AddGuid
  name: AddGuid
  nameWithType: HasGuidValidation.AddGuid
  fullName: VRBuilder.BasicInteraction.Validation.HasGuidValidation.AddGuid
- uid: VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid(System.Guid)
  parent: VRBuilder.Core.SceneObjects.IGuidContainer
  isExternal: true
  name: AddGuid(Guid)
  nameWithType: IGuidContainer.AddGuid(Guid)
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid(System.Guid)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid(System.Guid)
    name: AddGuid
    nameWithType: IGuidContainer.AddGuid
    fullName: VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid(System.Guid)
    name: AddGuid
    nameWithType: IGuidContainer.AddGuid
    fullName: VRBuilder.Core.SceneObjects.IGuidContainer.AddGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: VRBuilder.BasicInteraction.Validation.HasGuidValidation.HasGuid*
  commentId: Overload:VRBuilder.BasicInteraction.Validation.HasGuidValidation.HasGuid
  name: HasGuid
  nameWithType: HasGuidValidation.HasGuid
  fullName: VRBuilder.BasicInteraction.Validation.HasGuidValidation.HasGuid
- uid: VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid(System.Guid)
  parent: VRBuilder.Core.SceneObjects.IGuidContainer
  isExternal: true
  name: HasGuid(Guid)
  nameWithType: IGuidContainer.HasGuid(Guid)
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid(System.Guid)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid(System.Guid)
    name: HasGuid
    nameWithType: IGuidContainer.HasGuid
    fullName: VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid(System.Guid)
    name: HasGuid
    nameWithType: IGuidContainer.HasGuid
    fullName: VRBuilder.Core.SceneObjects.IGuidContainer.HasGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.BasicInteraction.Validation.HasGuidValidation.RemoveGuid*
  commentId: Overload:VRBuilder.BasicInteraction.Validation.HasGuidValidation.RemoveGuid
  name: RemoveGuid
  nameWithType: HasGuidValidation.RemoveGuid
  fullName: VRBuilder.BasicInteraction.Validation.HasGuidValidation.RemoveGuid
- uid: VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid(System.Guid)
  commentId: M:VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid(System.Guid)
  parent: VRBuilder.Core.SceneObjects.IGuidContainer
  isExternal: true
  name: RemoveGuid(Guid)
  nameWithType: IGuidContainer.RemoveGuid(Guid)
  fullName: VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid(System.Guid)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid(System.Guid)
    name: RemoveGuid
    nameWithType: IGuidContainer.RemoveGuid
    fullName: VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid(System.Guid)
    name: RemoveGuid
    nameWithType: IGuidContainer.RemoveGuid
    fullName: VRBuilder.Core.SceneObjects.IGuidContainer.RemoveGuid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.BasicInteraction.Validation.Validator.Validate(GameObject)
  commentId: M:VRBuilder.BasicInteraction.Validation.Validator.Validate(GameObject)
  parent: VRBuilder.BasicInteraction.Validation.Validator
  isExternal: true
  name: Validate(GameObject)
  nameWithType: Validator.Validate(GameObject)
  fullName: VRBuilder.BasicInteraction.Validation.Validator.Validate(GameObject)
  spec.csharp:
  - uid: VRBuilder.BasicInteraction.Validation.Validator.Validate(GameObject)
    name: Validate
    nameWithType: Validator.Validate
    fullName: VRBuilder.BasicInteraction.Validation.Validator.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.BasicInteraction.Validation.Validator.Validate(GameObject)
    name: Validate
    nameWithType: Validator.Validate
    fullName: VRBuilder.BasicInteraction.Validation.Validator.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.BasicInteraction.Validation.HasGuidValidation.Validate*
  commentId: Overload:VRBuilder.BasicInteraction.Validation.HasGuidValidation.Validate
  name: Validate
  nameWithType: HasGuidValidation.Validate
  fullName: VRBuilder.BasicInteraction.Validation.HasGuidValidation.Validate
- uid: GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
