### YamlMime:ManagedReference
items:
- uid: VRBuilder.TextToSpeech.TextToSpeechUtils
  commentId: T:VRBuilder.TextToSpeech.TextToSpeechUtils
  id: TextToSpeechUtils
  parent: VRBuilder.TextToSpeech
  children:
  - VRBuilder.TextToSpeech.TextToSpeechUtils.GetUniqueTextToSpeechFilename(VRBuilder.TextToSpeech.TextToSpeechConfiguration,System.String,UnityEngine.Localization.Locale,System.String)
  - VRBuilder.TextToSpeech.TextToSpeechUtils.ShortsInByteArrayToFloats(System.Byte[])
  langs:
  - csharp
  - vb
  name: TextToSpeechUtils
  nameWithType: TextToSpeechUtils
  fullName: VRBuilder.TextToSpeech.TextToSpeechUtils
  type: Class
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/TextToSpeechUtils.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: TextToSpeechUtils
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/TextToSpeechUtils.cs
    startLine: 6
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech
  syntax:
    content: public static class TextToSpeechUtils
    content.vb: Public Module TextToSpeechUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VRBuilder.TextToSpeech.TextToSpeechUtils.GetUniqueTextToSpeechFilename(VRBuilder.TextToSpeech.TextToSpeechConfiguration,System.String,UnityEngine.Localization.Locale,System.String)
  commentId: M:VRBuilder.TextToSpeech.TextToSpeechUtils.GetUniqueTextToSpeechFilename(VRBuilder.TextToSpeech.TextToSpeechConfiguration,System.String,UnityEngine.Localization.Locale,System.String)
  id: GetUniqueTextToSpeechFilename(VRBuilder.TextToSpeech.TextToSpeechConfiguration,System.String,UnityEngine.Localization.Locale,System.String)
  isExtensionMethod: true
  parent: VRBuilder.TextToSpeech.TextToSpeechUtils
  langs:
  - csharp
  - vb
  name: GetUniqueTextToSpeechFilename(TextToSpeechConfiguration, String, Locale, String)
  nameWithType: TextToSpeechUtils.GetUniqueTextToSpeechFilename(TextToSpeechConfiguration, String, Locale, String)
  fullName: VRBuilder.TextToSpeech.TextToSpeechUtils.GetUniqueTextToSpeechFilename(VRBuilder.TextToSpeech.TextToSpeechConfiguration, System.String, UnityEngine.Localization.Locale, System.String)
  type: Method
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/TextToSpeechUtils.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetUniqueTextToSpeechFilename
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/TextToSpeechUtils.cs
    startLine: 11
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech
  summary: "\nReturns filename which uniquly identifies the audio by Backend, Language, Voice and also the text.\n"
  example: []
  syntax:
    content: public static string GetUniqueTextToSpeechFilename(this TextToSpeechConfiguration configuration, string text, Locale locale, string format = "wav")
    parameters:
    - id: configuration
      type: VRBuilder.TextToSpeech.TextToSpeechConfiguration
    - id: text
      type: System.String
    - id: locale
      type: UnityEngine.Localization.Locale
    - id: format
      type: System.String
    return:
      type: System.String
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetUniqueTextToSpeechFilename(configuration As TextToSpeechConfiguration, text As String, locale As Locale, format As String = "wav") As String
  overload: VRBuilder.TextToSpeech.TextToSpeechUtils.GetUniqueTextToSpeechFilename*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.TextToSpeech.TextToSpeechUtils.ShortsInByteArrayToFloats(System.Byte[])
  commentId: M:VRBuilder.TextToSpeech.TextToSpeechUtils.ShortsInByteArrayToFloats(System.Byte[])
  id: ShortsInByteArrayToFloats(System.Byte[])
  parent: VRBuilder.TextToSpeech.TextToSpeechUtils
  langs:
  - csharp
  - vb
  name: ShortsInByteArrayToFloats(Byte[])
  nameWithType: TextToSpeechUtils.ShortsInByteArrayToFloats(Byte[])
  fullName: VRBuilder.TextToSpeech.TextToSpeechUtils.ShortsInByteArrayToFloats(System.Byte[])
  type: Method
  source:
    remote:
      path: Source/TextToSpeech-Component/Runtime/TextToSpeechUtils.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ShortsInByteArrayToFloats
    path: ../../Assets/MindPort/VR Builder/Core/Source/TextToSpeech-Component/Runtime/TextToSpeechUtils.cs
    startLine: 20
  assemblies:
  - VRBuilder.TextToSpeech
  namespace: VRBuilder.TextToSpeech
  summary: "\nThe result comes in byte array, but there are actually short values inside (ranged from short.Min to short.Max).\n"
  example: []
  syntax:
    content: public static float[] ShortsInByteArrayToFloats(byte[] shorts)
    parameters:
    - id: shorts
      type: System.Byte[]
    return:
      type: System.Single[]
    content.vb: Public Shared Function ShortsInByteArrayToFloats(shorts As Byte()) As Single()
  overload: VRBuilder.TextToSpeech.TextToSpeechUtils.ShortsInByteArrayToFloats*
  nameWithType.vb: TextToSpeechUtils.ShortsInByteArrayToFloats(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.TextToSpeech.TextToSpeechUtils.ShortsInByteArrayToFloats(System.Byte())
  name.vb: ShortsInByteArrayToFloats(Byte())
references:
- uid: VRBuilder.TextToSpeech
  commentId: N:VRBuilder.TextToSpeech
  name: VRBuilder.TextToSpeech
  nameWithType: VRBuilder.TextToSpeech
  fullName: VRBuilder.TextToSpeech
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.TextToSpeech.TextToSpeechUtils.GetUniqueTextToSpeechFilename*
  commentId: Overload:VRBuilder.TextToSpeech.TextToSpeechUtils.GetUniqueTextToSpeechFilename
  name: GetUniqueTextToSpeechFilename
  nameWithType: TextToSpeechUtils.GetUniqueTextToSpeechFilename
  fullName: VRBuilder.TextToSpeech.TextToSpeechUtils.GetUniqueTextToSpeechFilename
- uid: VRBuilder.TextToSpeech.TextToSpeechConfiguration
  commentId: T:VRBuilder.TextToSpeech.TextToSpeechConfiguration
  parent: VRBuilder.TextToSpeech
  name: TextToSpeechConfiguration
  nameWithType: TextToSpeechConfiguration
  fullName: VRBuilder.TextToSpeech.TextToSpeechConfiguration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: UnityEngine.Localization.Locale
  commentId: T:UnityEngine.Localization.Locale
  parent: UnityEngine.Localization
  name: Locale
  nameWithType: Locale
  fullName: UnityEngine.Localization.Locale
- uid: UnityEngine.Localization
  commentId: N:UnityEngine.Localization
  name: UnityEngine.Localization
  nameWithType: UnityEngine.Localization
  fullName: UnityEngine.Localization
- uid: VRBuilder.TextToSpeech.TextToSpeechUtils.ShortsInByteArrayToFloats*
  commentId: Overload:VRBuilder.TextToSpeech.TextToSpeechUtils.ShortsInByteArrayToFloats
  name: ShortsInByteArrayToFloats
  nameWithType: TextToSpeechUtils.ShortsInByteArrayToFloats
  fullName: VRBuilder.TextToSpeech.TextToSpeechUtils.ShortsInByteArrayToFloats
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
