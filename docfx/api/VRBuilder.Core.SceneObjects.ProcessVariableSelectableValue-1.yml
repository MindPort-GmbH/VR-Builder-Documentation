### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1
  commentId: T:VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1
  id: ProcessVariableSelectableValue`1
  parent: VRBuilder.Core.SceneObjects
  children:
  - VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1.#ctor(`0,VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{`0}},System.Boolean)
  - VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1.FirstValueLabel
  - VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1.SecondValueLabel
  langs:
  - csharp
  - vb
  name: ProcessVariableSelectableValue<T>
  nameWithType: ProcessVariableSelectableValue<T>
  fullName: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue<T>
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessVariableSelectableValue.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessVariableSelectableValue
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessVariableSelectableValue.cs
    startLine: 8
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: "\nSelectable value implementation for process variables.\n"
  example: []
  syntax:
    content: >-
      [DataContract(IsReference = true)]

      public class ProcessVariableSelectableValue<T> : SelectableValue<T, SingleScenePropertyReference<IDataProperty<T>>>
    typeParameters:
    - id: T
    content.vb: >-
      <DataContract(IsReference:=True)>

      Public Class ProcessVariableSelectableValue(Of T)

          Inherits SelectableValue(Of T, SingleScenePropertyReference(Of IDataProperty(Of T)))
  inheritance:
  - System.Object
  - VRBuilder.Core.SceneObjects.SelectableValue{{T},VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}}
  inheritedMembers:
  - VRBuilder.Core.SceneObjects.SelectableValue{{T},VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}}.FirstValueLabel
  - VRBuilder.Core.SceneObjects.SelectableValue{{T},VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}}.SecondValueLabel
  - VRBuilder.Core.SceneObjects.SelectableValue{{T},VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}}.FirstValue
  - VRBuilder.Core.SceneObjects.SelectableValue{{T},VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}}.SecondValue
  - VRBuilder.Core.SceneObjects.SelectableValue{{T},VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}}.IsFirstValueSelected
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  nameWithType.vb: ProcessVariableSelectableValue(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue(Of T)
  name.vb: ProcessVariableSelectableValue(Of T)
- uid: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1.FirstValueLabel
  commentId: P:VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1.FirstValueLabel
  id: FirstValueLabel
  parent: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1
  langs:
  - csharp
  - vb
  name: FirstValueLabel
  nameWithType: ProcessVariableSelectableValue<T>.FirstValueLabel
  fullName: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue<T>.FirstValueLabel
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessVariableSelectableValue.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: FirstValueLabel
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessVariableSelectableValue.cs
    startLine: 11
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public override string FirstValueLabel { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property FirstValueLabel As String
  overridden: VRBuilder.Core.SceneObjects.SelectableValue{{T},VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}}.FirstValueLabel
  overload: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1.FirstValueLabel*
  nameWithType.vb: ProcessVariableSelectableValue(Of T).FirstValueLabel
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue(Of T).FirstValueLabel
- uid: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1.SecondValueLabel
  commentId: P:VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1.SecondValueLabel
  id: SecondValueLabel
  parent: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1
  langs:
  - csharp
  - vb
  name: SecondValueLabel
  nameWithType: ProcessVariableSelectableValue<T>.SecondValueLabel
  fullName: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue<T>.SecondValueLabel
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessVariableSelectableValue.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SecondValueLabel
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessVariableSelectableValue.cs
    startLine: 13
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public override string SecondValueLabel { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property SecondValueLabel As String
  overridden: VRBuilder.Core.SceneObjects.SelectableValue{{T},VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}}.SecondValueLabel
  overload: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1.SecondValueLabel*
  nameWithType.vb: ProcessVariableSelectableValue(Of T).SecondValueLabel
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue(Of T).SecondValueLabel
- uid: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1.#ctor(`0,VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{`0}},System.Boolean)
  commentId: M:VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1.#ctor(`0,VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{`0}},System.Boolean)
  id: '#ctor(`0,VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{`0}},System.Boolean)'
  parent: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1
  langs:
  - csharp
  - vb
  name: ProcessVariableSelectableValue(T, SingleScenePropertyReference<IDataProperty<T>>, Boolean)
  nameWithType: ProcessVariableSelectableValue<T>.ProcessVariableSelectableValue(T, SingleScenePropertyReference<IDataProperty<T>>, Boolean)
  fullName: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue<T>.ProcessVariableSelectableValue(T, VRBuilder.Core.SceneObjects.SingleScenePropertyReference<VRBuilder.Core.Properties.IDataProperty<T>>, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/ProcessVariableSelectableValue.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/ProcessVariableSelectableValue.cs
    startLine: 15
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  syntax:
    content: public ProcessVariableSelectableValue(T firstValue, SingleScenePropertyReference<IDataProperty<T>> secondValue, bool isFirstValueSelected)
    parameters:
    - id: firstValue
      type: '{T}'
    - id: secondValue
      type: VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}
    - id: isFirstValueSelected
      type: System.Boolean
    content.vb: Public Sub New(firstValue As T, secondValue As SingleScenePropertyReference(Of IDataProperty(Of T)), isFirstValueSelected As Boolean)
  overload: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1.#ctor*
  nameWithType.vb: ProcessVariableSelectableValue(Of T).ProcessVariableSelectableValue(T, SingleScenePropertyReference(Of IDataProperty(Of T)), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue(Of T).ProcessVariableSelectableValue(T, VRBuilder.Core.SceneObjects.SingleScenePropertyReference(Of VRBuilder.Core.Properties.IDataProperty(Of T)), System.Boolean)
  name.vb: ProcessVariableSelectableValue(T, SingleScenePropertyReference(Of IDataProperty(Of T)), Boolean)
references:
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.SceneObjects.SelectableValue{{T},VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}}
  commentId: T:VRBuilder.Core.SceneObjects.SelectableValue{`0,VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{`0}}}
  parent: VRBuilder.Core.SceneObjects
  definition: VRBuilder.Core.SceneObjects.SelectableValue`2
  name: SelectableValue<T, SingleScenePropertyReference<IDataProperty<T>>>
  nameWithType: SelectableValue<T, SingleScenePropertyReference<IDataProperty<T>>>
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<T, VRBuilder.Core.SceneObjects.SingleScenePropertyReference<VRBuilder.Core.Properties.IDataProperty<T>>>
  nameWithType.vb: SelectableValue(Of T, SingleScenePropertyReference(Of IDataProperty(Of T)))
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of T, VRBuilder.Core.SceneObjects.SingleScenePropertyReference(Of VRBuilder.Core.Properties.IDataProperty(Of T)))
  name.vb: SelectableValue(Of T, SingleScenePropertyReference(Of IDataProperty(Of T)))
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.SelectableValue`2
    name: SelectableValue
    nameWithType: SelectableValue
    fullName: VRBuilder.Core.SceneObjects.SelectableValue
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.SceneObjects.SingleScenePropertyReference`1
    name: SingleScenePropertyReference
    nameWithType: SingleScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.SingleScenePropertyReference
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Properties.IDataProperty`1
    name: IDataProperty
    nameWithType: IDataProperty
    fullName: VRBuilder.Core.Properties.IDataProperty
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.SelectableValue`2
    name: SelectableValue
    nameWithType: SelectableValue
    fullName: VRBuilder.Core.SceneObjects.SelectableValue
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.SceneObjects.SingleScenePropertyReference`1
    name: SingleScenePropertyReference
    nameWithType: SingleScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.SingleScenePropertyReference
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Properties.IDataProperty`1
    name: IDataProperty
    nameWithType: IDataProperty
    fullName: VRBuilder.Core.Properties.IDataProperty
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.SelectableValue{{T},VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}}.FirstValueLabel
  commentId: P:VRBuilder.Core.SceneObjects.SelectableValue{`0,VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{`0}}}.FirstValueLabel
  parent: VRBuilder.Core.SceneObjects.SelectableValue{{T},VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}}
  definition: VRBuilder.Core.SceneObjects.SelectableValue`2.FirstValueLabel
  name: FirstValueLabel
  nameWithType: SelectableValue<T, SingleScenePropertyReference<IDataProperty<T>>>.FirstValueLabel
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<T, VRBuilder.Core.SceneObjects.SingleScenePropertyReference<VRBuilder.Core.Properties.IDataProperty<T>>>.FirstValueLabel
  nameWithType.vb: SelectableValue(Of T, SingleScenePropertyReference(Of IDataProperty(Of T))).FirstValueLabel
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of T, VRBuilder.Core.SceneObjects.SingleScenePropertyReference(Of VRBuilder.Core.Properties.IDataProperty(Of T))).FirstValueLabel
- uid: VRBuilder.Core.SceneObjects.SelectableValue{{T},VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}}.SecondValueLabel
  commentId: P:VRBuilder.Core.SceneObjects.SelectableValue{`0,VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{`0}}}.SecondValueLabel
  parent: VRBuilder.Core.SceneObjects.SelectableValue{{T},VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}}
  definition: VRBuilder.Core.SceneObjects.SelectableValue`2.SecondValueLabel
  name: SecondValueLabel
  nameWithType: SelectableValue<T, SingleScenePropertyReference<IDataProperty<T>>>.SecondValueLabel
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<T, VRBuilder.Core.SceneObjects.SingleScenePropertyReference<VRBuilder.Core.Properties.IDataProperty<T>>>.SecondValueLabel
  nameWithType.vb: SelectableValue(Of T, SingleScenePropertyReference(Of IDataProperty(Of T))).SecondValueLabel
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of T, VRBuilder.Core.SceneObjects.SingleScenePropertyReference(Of VRBuilder.Core.Properties.IDataProperty(Of T))).SecondValueLabel
- uid: VRBuilder.Core.SceneObjects.SelectableValue{{T},VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}}.FirstValue
  commentId: P:VRBuilder.Core.SceneObjects.SelectableValue{`0,VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{`0}}}.FirstValue
  parent: VRBuilder.Core.SceneObjects.SelectableValue{{T},VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}}
  definition: VRBuilder.Core.SceneObjects.SelectableValue`2.FirstValue
  name: FirstValue
  nameWithType: SelectableValue<T, SingleScenePropertyReference<IDataProperty<T>>>.FirstValue
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<T, VRBuilder.Core.SceneObjects.SingleScenePropertyReference<VRBuilder.Core.Properties.IDataProperty<T>>>.FirstValue
  nameWithType.vb: SelectableValue(Of T, SingleScenePropertyReference(Of IDataProperty(Of T))).FirstValue
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of T, VRBuilder.Core.SceneObjects.SingleScenePropertyReference(Of VRBuilder.Core.Properties.IDataProperty(Of T))).FirstValue
- uid: VRBuilder.Core.SceneObjects.SelectableValue{{T},VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}}.SecondValue
  commentId: P:VRBuilder.Core.SceneObjects.SelectableValue{`0,VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{`0}}}.SecondValue
  parent: VRBuilder.Core.SceneObjects.SelectableValue{{T},VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}}
  definition: VRBuilder.Core.SceneObjects.SelectableValue`2.SecondValue
  name: SecondValue
  nameWithType: SelectableValue<T, SingleScenePropertyReference<IDataProperty<T>>>.SecondValue
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<T, VRBuilder.Core.SceneObjects.SingleScenePropertyReference<VRBuilder.Core.Properties.IDataProperty<T>>>.SecondValue
  nameWithType.vb: SelectableValue(Of T, SingleScenePropertyReference(Of IDataProperty(Of T))).SecondValue
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of T, VRBuilder.Core.SceneObjects.SingleScenePropertyReference(Of VRBuilder.Core.Properties.IDataProperty(Of T))).SecondValue
- uid: VRBuilder.Core.SceneObjects.SelectableValue{{T},VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}}.IsFirstValueSelected
  commentId: P:VRBuilder.Core.SceneObjects.SelectableValue{`0,VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{`0}}}.IsFirstValueSelected
  parent: VRBuilder.Core.SceneObjects.SelectableValue{{T},VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}}
  definition: VRBuilder.Core.SceneObjects.SelectableValue`2.IsFirstValueSelected
  name: IsFirstValueSelected
  nameWithType: SelectableValue<T, SingleScenePropertyReference<IDataProperty<T>>>.IsFirstValueSelected
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<T, VRBuilder.Core.SceneObjects.SingleScenePropertyReference<VRBuilder.Core.Properties.IDataProperty<T>>>.IsFirstValueSelected
  nameWithType.vb: SelectableValue(Of T, SingleScenePropertyReference(Of IDataProperty(Of T))).IsFirstValueSelected
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of T, VRBuilder.Core.SceneObjects.SingleScenePropertyReference(Of VRBuilder.Core.Properties.IDataProperty(Of T))).IsFirstValueSelected
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.SceneObjects.SelectableValue`2
  commentId: T:VRBuilder.Core.SceneObjects.SelectableValue`2
  name: SelectableValue<TFirst, TSecond>
  nameWithType: SelectableValue<TFirst, TSecond>
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<TFirst, TSecond>
  nameWithType.vb: SelectableValue(Of TFirst, TSecond)
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of TFirst, TSecond)
  name.vb: SelectableValue(Of TFirst, TSecond)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.SelectableValue`2
    name: SelectableValue
    nameWithType: SelectableValue
    fullName: VRBuilder.Core.SceneObjects.SelectableValue
  - name: <
    nameWithType: <
    fullName: <
  - name: TFirst
    nameWithType: TFirst
    fullName: TFirst
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSecond
    nameWithType: TSecond
    fullName: TSecond
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.SelectableValue`2
    name: SelectableValue
    nameWithType: SelectableValue
    fullName: VRBuilder.Core.SceneObjects.SelectableValue
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TFirst
    nameWithType: TFirst
    fullName: TFirst
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TSecond
    nameWithType: TSecond
    fullName: TSecond
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.SelectableValue`2.FirstValueLabel
  commentId: P:VRBuilder.Core.SceneObjects.SelectableValue`2.FirstValueLabel
  name: FirstValueLabel
  nameWithType: SelectableValue<TFirst, TSecond>.FirstValueLabel
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<TFirst, TSecond>.FirstValueLabel
  nameWithType.vb: SelectableValue(Of TFirst, TSecond).FirstValueLabel
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of TFirst, TSecond).FirstValueLabel
- uid: VRBuilder.Core.SceneObjects.SelectableValue`2.SecondValueLabel
  commentId: P:VRBuilder.Core.SceneObjects.SelectableValue`2.SecondValueLabel
  name: SecondValueLabel
  nameWithType: SelectableValue<TFirst, TSecond>.SecondValueLabel
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<TFirst, TSecond>.SecondValueLabel
  nameWithType.vb: SelectableValue(Of TFirst, TSecond).SecondValueLabel
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of TFirst, TSecond).SecondValueLabel
- uid: VRBuilder.Core.SceneObjects.SelectableValue`2.FirstValue
  commentId: P:VRBuilder.Core.SceneObjects.SelectableValue`2.FirstValue
  name: FirstValue
  nameWithType: SelectableValue<TFirst, TSecond>.FirstValue
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<TFirst, TSecond>.FirstValue
  nameWithType.vb: SelectableValue(Of TFirst, TSecond).FirstValue
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of TFirst, TSecond).FirstValue
- uid: VRBuilder.Core.SceneObjects.SelectableValue`2.SecondValue
  commentId: P:VRBuilder.Core.SceneObjects.SelectableValue`2.SecondValue
  name: SecondValue
  nameWithType: SelectableValue<TFirst, TSecond>.SecondValue
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<TFirst, TSecond>.SecondValue
  nameWithType.vb: SelectableValue(Of TFirst, TSecond).SecondValue
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of TFirst, TSecond).SecondValue
- uid: VRBuilder.Core.SceneObjects.SelectableValue`2.IsFirstValueSelected
  commentId: P:VRBuilder.Core.SceneObjects.SelectableValue`2.IsFirstValueSelected
  name: IsFirstValueSelected
  nameWithType: SelectableValue<TFirst, TSecond>.IsFirstValueSelected
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<TFirst, TSecond>.IsFirstValueSelected
  nameWithType.vb: SelectableValue(Of TFirst, TSecond).IsFirstValueSelected
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of TFirst, TSecond).IsFirstValueSelected
- uid: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1.FirstValueLabel*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1.FirstValueLabel
  name: FirstValueLabel
  nameWithType: ProcessVariableSelectableValue<T>.FirstValueLabel
  fullName: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue<T>.FirstValueLabel
  nameWithType.vb: ProcessVariableSelectableValue(Of T).FirstValueLabel
  fullName.vb: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue(Of T).FirstValueLabel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1.SecondValueLabel*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1.SecondValueLabel
  name: SecondValueLabel
  nameWithType: ProcessVariableSelectableValue<T>.SecondValueLabel
  fullName: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue<T>.SecondValueLabel
  nameWithType.vb: ProcessVariableSelectableValue(Of T).SecondValueLabel
  fullName.vb: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue(Of T).SecondValueLabel
- uid: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1.#ctor*
  commentId: Overload:VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1.#ctor
  name: ProcessVariableSelectableValue
  nameWithType: ProcessVariableSelectableValue<T>.ProcessVariableSelectableValue
  fullName: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue<T>.ProcessVariableSelectableValue
  nameWithType.vb: ProcessVariableSelectableValue(Of T).ProcessVariableSelectableValue
  fullName.vb: VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue(Of T).ProcessVariableSelectableValue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{{T}}}
  commentId: T:VRBuilder.Core.SceneObjects.SingleScenePropertyReference{VRBuilder.Core.Properties.IDataProperty{`0}}
  parent: VRBuilder.Core.SceneObjects
  definition: VRBuilder.Core.SceneObjects.SingleScenePropertyReference`1
  name: SingleScenePropertyReference<IDataProperty<T>>
  nameWithType: SingleScenePropertyReference<IDataProperty<T>>
  fullName: VRBuilder.Core.SceneObjects.SingleScenePropertyReference<VRBuilder.Core.Properties.IDataProperty<T>>
  nameWithType.vb: SingleScenePropertyReference(Of IDataProperty(Of T))
  fullName.vb: VRBuilder.Core.SceneObjects.SingleScenePropertyReference(Of VRBuilder.Core.Properties.IDataProperty(Of T))
  name.vb: SingleScenePropertyReference(Of IDataProperty(Of T))
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.SingleScenePropertyReference`1
    name: SingleScenePropertyReference
    nameWithType: SingleScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.SingleScenePropertyReference
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Properties.IDataProperty`1
    name: IDataProperty
    nameWithType: IDataProperty
    fullName: VRBuilder.Core.Properties.IDataProperty
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.SingleScenePropertyReference`1
    name: SingleScenePropertyReference
    nameWithType: SingleScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.SingleScenePropertyReference
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Properties.IDataProperty`1
    name: IDataProperty
    nameWithType: IDataProperty
    fullName: VRBuilder.Core.Properties.IDataProperty
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: VRBuilder.Core.SceneObjects.SingleScenePropertyReference`1
  commentId: T:VRBuilder.Core.SceneObjects.SingleScenePropertyReference`1
  name: SingleScenePropertyReference<T>
  nameWithType: SingleScenePropertyReference<T>
  fullName: VRBuilder.Core.SceneObjects.SingleScenePropertyReference<T>
  nameWithType.vb: SingleScenePropertyReference(Of T)
  fullName.vb: VRBuilder.Core.SceneObjects.SingleScenePropertyReference(Of T)
  name.vb: SingleScenePropertyReference(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.SingleScenePropertyReference`1
    name: SingleScenePropertyReference
    nameWithType: SingleScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.SingleScenePropertyReference
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.SingleScenePropertyReference`1
    name: SingleScenePropertyReference
    nameWithType: SingleScenePropertyReference
    fullName: VRBuilder.Core.SceneObjects.SingleScenePropertyReference
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
