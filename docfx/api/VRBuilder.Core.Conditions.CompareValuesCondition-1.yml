### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Conditions.CompareValuesCondition`1
  commentId: T:VRBuilder.Core.Conditions.CompareValuesCondition`1
  id: CompareValuesCondition`1
  parent: VRBuilder.Core.Conditions
  children:
  - VRBuilder.Core.Conditions.CompareValuesCondition`1.#ctor
  - VRBuilder.Core.Conditions.CompareValuesCondition`1.#ctor(System.Guid,System.Guid,`0,`0,System.Boolean,System.Boolean,VRBuilder.Core.ProcessUtils.IOperationCommand{`0,System.Boolean})
  - VRBuilder.Core.Conditions.CompareValuesCondition`1.#ctor(VRBuilder.Core.Properties.IDataProperty{`0},VRBuilder.Core.Properties.IDataProperty{`0},`0,`0,System.Boolean,System.Boolean,VRBuilder.Core.ProcessUtils.IOperationCommand{`0,System.Boolean})
  - VRBuilder.Core.Conditions.CompareValuesCondition`1.GetActiveProcess
  langs:
  - csharp
  - vb
  name: CompareValuesCondition<T>
  nameWithType: CompareValuesCondition<T>
  fullName: VRBuilder.Core.Conditions.CompareValuesCondition<T>
  type: Class
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Conditions/CompareValuesCondition.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CompareValuesCondition
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Conditions/CompareValuesCondition.cs
    startLine: 15
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Conditions
  summary: "\nA condition that compares two <xref href=\"VRBuilder.Core.Properties.IDataProperty%601\" data-throw-if-not-resolved=\"false\"></xref>s and completes when the comparison returns true.\n"
  example: []
  syntax:
    content: >-
      [DataContract(IsReference = true)]

      [HelpLink("https://www.mindport.co/vr-builder-tutorials/states-data-add-on")]

      public class CompareValuesCondition<T> : Condition<CompareValuesCondition<T>.EntityData>, IDataOwner<CompareValuesCondition<T>.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider where T : IEquatable<T>, IComparable<T>
    typeParameters:
    - id: T
    content.vb: >-
      <DataContract(IsReference:=True)>

      <HelpLink("https://www.mindport.co/vr-builder-tutorials/states-data-add-on")>

      Public Class CompareValuesCondition(Of T As {IEquatable(Of T), IComparable(Of T)})

          Inherits Condition(Of CompareValuesCondition(Of T).EntityData)

          Implements IDataOwner(Of CompareValuesCondition(Of T).EntityData), ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner(Of IConditionData), IDataOwner, IClonable(Of ICondition), ILockablePropertiesProvider
  inheritance:
  - System.Object
  - VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  - VRBuilder.Core.CompletableEntity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  - VRBuilder.Core.Conditions.Condition{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  implements:
  - VRBuilder.Core.IDataOwner{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  - VRBuilder.Core.Conditions.ICondition
  - VRBuilder.Core.ICompletableEntity
  - VRBuilder.Core.ICompletable
  - VRBuilder.Core.IEntity
  - VRBuilder.Core.IDataOwner{VRBuilder.Core.Conditions.IConditionData}
  - VRBuilder.Core.IDataOwner
  - VRBuilder.Core.IClonable{VRBuilder.Core.Conditions.ICondition}
  - VRBuilder.Core.ILockablePropertiesProvider
  inheritedMembers:
  - VRBuilder.Core.Conditions.Condition{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.VRBuilder#Core#IDataOwner{VRBuilder#Core#Conditions#IConditionData}#Data
  - VRBuilder.Core.Conditions.Condition{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.Clone
  - VRBuilder.Core.Conditions.Condition{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.GetLockableProperties
  - VRBuilder.Core.CompletableEntity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.GetAutocompleter
  - VRBuilder.Core.CompletableEntity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.IsCompleted
  - VRBuilder.Core.CompletableEntity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.Autocomplete
  - VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.Data
  - VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.VRBuilder#Core#IDataOwner#Data
  - VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.LifeCycle
  - VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.Parent
  - VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.GetActivatingProcess
  - VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.GetDeactivatingProcess
  - VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.GetConfigurator
  - VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  - VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.Update
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  - type: VRBuilder.Core.Attributes.HelpLinkAttribute
    ctor: VRBuilder.Core.Attributes.HelpLinkAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: https://www.mindport.co/vr-builder-tutorials/states-data-add-on
  nameWithType.vb: CompareValuesCondition(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: VRBuilder.Core.Conditions.CompareValuesCondition(Of T)
  name.vb: CompareValuesCondition(Of T)
- uid: VRBuilder.Core.Conditions.CompareValuesCondition`1.#ctor
  commentId: M:VRBuilder.Core.Conditions.CompareValuesCondition`1.#ctor
  id: '#ctor'
  parent: VRBuilder.Core.Conditions.CompareValuesCondition`1
  langs:
  - csharp
  - vb
  name: CompareValuesCondition()
  nameWithType: CompareValuesCondition<T>.CompareValuesCondition()
  fullName: VRBuilder.Core.Conditions.CompareValuesCondition<T>.CompareValuesCondition()
  type: Constructor
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Conditions/CompareValuesCondition.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Conditions/CompareValuesCondition.cs
    startLine: 102
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Conditions
  syntax:
    content: >-
      [JsonConstructor]

      [Preserve]

      public CompareValuesCondition()
    content.vb: >-
      <JsonConstructor>

      <Preserve>

      Public Sub New
  overload: VRBuilder.Core.Conditions.CompareValuesCondition`1.#ctor*
  attributes:
  - type: Newtonsoft.Json.JsonConstructorAttribute
    ctor: Newtonsoft.Json.JsonConstructorAttribute.#ctor
    arguments: []
  - type: UnityEngine.Scripting.PreserveAttribute
    ctor: UnityEngine.Scripting.PreserveAttribute.#ctor
    arguments: []
  nameWithType.vb: CompareValuesCondition(Of T).CompareValuesCondition()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.Conditions.CompareValuesCondition(Of T).CompareValuesCondition()
- uid: VRBuilder.Core.Conditions.CompareValuesCondition`1.#ctor(VRBuilder.Core.Properties.IDataProperty{`0},VRBuilder.Core.Properties.IDataProperty{`0},`0,`0,System.Boolean,System.Boolean,VRBuilder.Core.ProcessUtils.IOperationCommand{`0,System.Boolean})
  commentId: M:VRBuilder.Core.Conditions.CompareValuesCondition`1.#ctor(VRBuilder.Core.Properties.IDataProperty{`0},VRBuilder.Core.Properties.IDataProperty{`0},`0,`0,System.Boolean,System.Boolean,VRBuilder.Core.ProcessUtils.IOperationCommand{`0,System.Boolean})
  id: '#ctor(VRBuilder.Core.Properties.IDataProperty{`0},VRBuilder.Core.Properties.IDataProperty{`0},`0,`0,System.Boolean,System.Boolean,VRBuilder.Core.ProcessUtils.IOperationCommand{`0,System.Boolean})'
  parent: VRBuilder.Core.Conditions.CompareValuesCondition`1
  langs:
  - csharp
  - vb
  name: CompareValuesCondition(IDataProperty<T>, IDataProperty<T>, T, T, Boolean, Boolean, IOperationCommand<T, Boolean>)
  nameWithType: CompareValuesCondition<T>.CompareValuesCondition(IDataProperty<T>, IDataProperty<T>, T, T, Boolean, Boolean, IOperationCommand<T, Boolean>)
  fullName: VRBuilder.Core.Conditions.CompareValuesCondition<T>.CompareValuesCondition(VRBuilder.Core.Properties.IDataProperty<T>, VRBuilder.Core.Properties.IDataProperty<T>, T, T, System.Boolean, System.Boolean, VRBuilder.Core.ProcessUtils.IOperationCommand<T, System.Boolean>)
  type: Constructor
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Conditions/CompareValuesCondition.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Conditions/CompareValuesCondition.cs
    startLine: 107
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Conditions
  syntax:
    content: public CompareValuesCondition(IDataProperty<T> leftProperty, IDataProperty<T> rightProperty, T leftValue, T rightValue, bool isLeftConst, bool isRightConst, IOperationCommand<T, bool> operation)
    parameters:
    - id: leftProperty
      type: VRBuilder.Core.Properties.IDataProperty{{T}}
    - id: rightProperty
      type: VRBuilder.Core.Properties.IDataProperty{{T}}
    - id: leftValue
      type: '{T}'
    - id: rightValue
      type: '{T}'
    - id: isLeftConst
      type: System.Boolean
    - id: isRightConst
      type: System.Boolean
    - id: operation
      type: VRBuilder.Core.ProcessUtils.IOperationCommand{{T},System.Boolean}
    content.vb: Public Sub New(leftProperty As IDataProperty(Of T), rightProperty As IDataProperty(Of T), leftValue As T, rightValue As T, isLeftConst As Boolean, isRightConst As Boolean, operation As IOperationCommand(Of T, Boolean))
  overload: VRBuilder.Core.Conditions.CompareValuesCondition`1.#ctor*
  nameWithType.vb: CompareValuesCondition(Of T).CompareValuesCondition(IDataProperty(Of T), IDataProperty(Of T), T, T, Boolean, Boolean, IOperationCommand(Of T, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.Conditions.CompareValuesCondition(Of T).CompareValuesCondition(VRBuilder.Core.Properties.IDataProperty(Of T), VRBuilder.Core.Properties.IDataProperty(Of T), T, T, System.Boolean, System.Boolean, VRBuilder.Core.ProcessUtils.IOperationCommand(Of T, System.Boolean))
  name.vb: CompareValuesCondition(IDataProperty(Of T), IDataProperty(Of T), T, T, Boolean, Boolean, IOperationCommand(Of T, Boolean))
- uid: VRBuilder.Core.Conditions.CompareValuesCondition`1.#ctor(System.Guid,System.Guid,`0,`0,System.Boolean,System.Boolean,VRBuilder.Core.ProcessUtils.IOperationCommand{`0,System.Boolean})
  commentId: M:VRBuilder.Core.Conditions.CompareValuesCondition`1.#ctor(System.Guid,System.Guid,`0,`0,System.Boolean,System.Boolean,VRBuilder.Core.ProcessUtils.IOperationCommand{`0,System.Boolean})
  id: '#ctor(System.Guid,System.Guid,`0,`0,System.Boolean,System.Boolean,VRBuilder.Core.ProcessUtils.IOperationCommand{`0,System.Boolean})'
  parent: VRBuilder.Core.Conditions.CompareValuesCondition`1
  langs:
  - csharp
  - vb
  name: CompareValuesCondition(Guid, Guid, T, T, Boolean, Boolean, IOperationCommand<T, Boolean>)
  nameWithType: CompareValuesCondition<T>.CompareValuesCondition(Guid, Guid, T, T, Boolean, Boolean, IOperationCommand<T, Boolean>)
  fullName: VRBuilder.Core.Conditions.CompareValuesCondition<T>.CompareValuesCondition(System.Guid, System.Guid, T, T, System.Boolean, System.Boolean, VRBuilder.Core.ProcessUtils.IOperationCommand<T, System.Boolean>)
  type: Constructor
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Conditions/CompareValuesCondition.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Conditions/CompareValuesCondition.cs
    startLine: 112
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Conditions
  syntax:
    content: public CompareValuesCondition(Guid leftPropertyId, Guid rightPropertyId, T leftValue, T rightValue, bool isLeftConst, bool isRightConst, IOperationCommand<T, bool> operation)
    parameters:
    - id: leftPropertyId
      type: System.Guid
    - id: rightPropertyId
      type: System.Guid
    - id: leftValue
      type: '{T}'
    - id: rightValue
      type: '{T}'
    - id: isLeftConst
      type: System.Boolean
    - id: isRightConst
      type: System.Boolean
    - id: operation
      type: VRBuilder.Core.ProcessUtils.IOperationCommand{{T},System.Boolean}
    content.vb: Public Sub New(leftPropertyId As Guid, rightPropertyId As Guid, leftValue As T, rightValue As T, isLeftConst As Boolean, isRightConst As Boolean, operation As IOperationCommand(Of T, Boolean))
  overload: VRBuilder.Core.Conditions.CompareValuesCondition`1.#ctor*
  nameWithType.vb: CompareValuesCondition(Of T).CompareValuesCondition(Guid, Guid, T, T, Boolean, Boolean, IOperationCommand(Of T, Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.Conditions.CompareValuesCondition(Of T).CompareValuesCondition(System.Guid, System.Guid, T, T, System.Boolean, System.Boolean, VRBuilder.Core.ProcessUtils.IOperationCommand(Of T, System.Boolean))
  name.vb: CompareValuesCondition(Guid, Guid, T, T, Boolean, Boolean, IOperationCommand(Of T, Boolean))
- uid: VRBuilder.Core.Conditions.CompareValuesCondition`1.GetActiveProcess
  commentId: M:VRBuilder.Core.Conditions.CompareValuesCondition`1.GetActiveProcess
  id: GetActiveProcess
  parent: VRBuilder.Core.Conditions.CompareValuesCondition`1
  langs:
  - csharp
  - vb
  name: GetActiveProcess()
  nameWithType: CompareValuesCondition<T>.GetActiveProcess()
  fullName: VRBuilder.Core.Conditions.CompareValuesCondition<T>.GetActiveProcess()
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Conditions/CompareValuesCondition.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetActiveProcess
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Conditions/CompareValuesCondition.cs
    startLine: 124
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Conditions
  example: []
  syntax:
    content: public override IStageProcess GetActiveProcess()
    return:
      type: VRBuilder.Core.IStageProcess
    content.vb: Public Overrides Function GetActiveProcess As IStageProcess
  overridden: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.GetActiveProcess
  overload: VRBuilder.Core.Conditions.CompareValuesCondition`1.GetActiveProcess*
  nameWithType.vb: CompareValuesCondition(Of T).GetActiveProcess()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: VRBuilder.Core.Conditions.CompareValuesCondition(Of T).GetActiveProcess()
references:
- uid: VRBuilder.Core.Properties.IDataProperty`1
  commentId: T:VRBuilder.Core.Properties.IDataProperty`1
  name: IDataProperty<T>
  nameWithType: IDataProperty<T>
  fullName: VRBuilder.Core.Properties.IDataProperty<T>
  nameWithType.vb: IDataProperty(Of T)
  fullName.vb: VRBuilder.Core.Properties.IDataProperty(Of T)
  name.vb: IDataProperty(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.IDataProperty`1
    name: IDataProperty
    nameWithType: IDataProperty
    fullName: VRBuilder.Core.Properties.IDataProperty
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Properties.IDataProperty`1
    name: IDataProperty
    nameWithType: IDataProperty
    fullName: VRBuilder.Core.Properties.IDataProperty
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Conditions
  commentId: N:VRBuilder.Core.Conditions
  name: VRBuilder.Core.Conditions
  nameWithType: VRBuilder.Core.Conditions
  fullName: VRBuilder.Core.Conditions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  commentId: T:VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.Entity`1
  name: Entity<CompareValuesCondition.EntityData<>>
  nameWithType: Entity<CompareValuesCondition.EntityData<>>
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Conditions.CompareValuesCondition.EntityData<>>
  nameWithType.vb: Entity(Of CompareValuesCondition.EntityData(Of ))
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Conditions.CompareValuesCondition.EntityData(Of ))
  name.vb: Entity(Of CompareValuesCondition.EntityData(Of ))
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: VRBuilder.Core.Entity
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData
    name: CompareValuesCondition.EntityData
    nameWithType: CompareValuesCondition.EntityData
    fullName: VRBuilder.Core.Conditions.CompareValuesCondition.EntityData
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: VRBuilder.Core.Entity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData
    name: CompareValuesCondition.EntityData
    nameWithType: CompareValuesCondition.EntityData
    fullName: VRBuilder.Core.Conditions.CompareValuesCondition.EntityData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.CompletableEntity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  commentId: T:VRBuilder.Core.CompletableEntity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.CompletableEntity`1
  name: CompletableEntity<CompareValuesCondition.EntityData<>>
  nameWithType: CompletableEntity<CompareValuesCondition.EntityData<>>
  fullName: VRBuilder.Core.CompletableEntity<VRBuilder.Core.Conditions.CompareValuesCondition.EntityData<>>
  nameWithType.vb: CompletableEntity(Of CompareValuesCondition.EntityData(Of ))
  fullName.vb: VRBuilder.Core.CompletableEntity(Of VRBuilder.Core.Conditions.CompareValuesCondition.EntityData(Of ))
  name.vb: CompletableEntity(Of CompareValuesCondition.EntityData(Of ))
  spec.csharp:
  - uid: VRBuilder.Core.CompletableEntity`1
    name: CompletableEntity
    nameWithType: CompletableEntity
    fullName: VRBuilder.Core.CompletableEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData
    name: CompareValuesCondition.EntityData
    nameWithType: CompareValuesCondition.EntityData
    fullName: VRBuilder.Core.Conditions.CompareValuesCondition.EntityData
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.CompletableEntity`1
    name: CompletableEntity
    nameWithType: CompletableEntity
    fullName: VRBuilder.Core.CompletableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData
    name: CompareValuesCondition.EntityData
    nameWithType: CompareValuesCondition.EntityData
    fullName: VRBuilder.Core.Conditions.CompareValuesCondition.EntityData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Conditions.Condition{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  commentId: T:VRBuilder.Core.Conditions.Condition{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  parent: VRBuilder.Core.Conditions
  definition: VRBuilder.Core.Conditions.Condition`1
  name: Condition<CompareValuesCondition.EntityData<>>
  nameWithType: Condition<CompareValuesCondition.EntityData<>>
  fullName: VRBuilder.Core.Conditions.Condition<VRBuilder.Core.Conditions.CompareValuesCondition.EntityData<>>
  nameWithType.vb: Condition(Of CompareValuesCondition.EntityData(Of ))
  fullName.vb: VRBuilder.Core.Conditions.Condition(Of VRBuilder.Core.Conditions.CompareValuesCondition.EntityData(Of ))
  name.vb: Condition(Of CompareValuesCondition.EntityData(Of ))
  spec.csharp:
  - uid: VRBuilder.Core.Conditions.Condition`1
    name: Condition
    nameWithType: Condition
    fullName: VRBuilder.Core.Conditions.Condition
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData
    name: CompareValuesCondition.EntityData
    nameWithType: CompareValuesCondition.EntityData
    fullName: VRBuilder.Core.Conditions.CompareValuesCondition.EntityData
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Conditions.Condition`1
    name: Condition
    nameWithType: Condition
    fullName: VRBuilder.Core.Conditions.Condition
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData
    name: CompareValuesCondition.EntityData
    nameWithType: CompareValuesCondition.EntityData
    fullName: VRBuilder.Core.Conditions.CompareValuesCondition.EntityData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IDataOwner{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  commentId: T:VRBuilder.Core.IDataOwner{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IDataOwner`1
  name: IDataOwner<CompareValuesCondition.EntityData<>>
  nameWithType: IDataOwner<CompareValuesCondition.EntityData<>>
  fullName: VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.CompareValuesCondition.EntityData<>>
  nameWithType.vb: IDataOwner(Of CompareValuesCondition.EntityData(Of ))
  fullName.vb: VRBuilder.Core.IDataOwner(Of VRBuilder.Core.Conditions.CompareValuesCondition.EntityData(Of ))
  name.vb: IDataOwner(Of CompareValuesCondition.EntityData(Of ))
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData
    name: CompareValuesCondition.EntityData
    nameWithType: CompareValuesCondition.EntityData
    fullName: VRBuilder.Core.Conditions.CompareValuesCondition.EntityData
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData
    name: CompareValuesCondition.EntityData
    nameWithType: CompareValuesCondition.EntityData
    fullName: VRBuilder.Core.Conditions.CompareValuesCondition.EntityData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Conditions.ICondition
  commentId: T:VRBuilder.Core.Conditions.ICondition
  parent: VRBuilder.Core.Conditions
  name: ICondition
  nameWithType: ICondition
  fullName: VRBuilder.Core.Conditions.ICondition
- uid: VRBuilder.Core.ICompletableEntity
  commentId: T:VRBuilder.Core.ICompletableEntity
  parent: VRBuilder.Core
  name: ICompletableEntity
  nameWithType: ICompletableEntity
  fullName: VRBuilder.Core.ICompletableEntity
- uid: VRBuilder.Core.ICompletable
  commentId: T:VRBuilder.Core.ICompletable
  parent: VRBuilder.Core
  name: ICompletable
  nameWithType: ICompletable
  fullName: VRBuilder.Core.ICompletable
- uid: VRBuilder.Core.IEntity
  commentId: T:VRBuilder.Core.IEntity
  parent: VRBuilder.Core
  name: IEntity
  nameWithType: IEntity
  fullName: VRBuilder.Core.IEntity
- uid: VRBuilder.Core.IDataOwner{VRBuilder.Core.Conditions.IConditionData}
  commentId: T:VRBuilder.Core.IDataOwner{VRBuilder.Core.Conditions.IConditionData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IDataOwner`1
  name: IDataOwner<IConditionData>
  nameWithType: IDataOwner<IConditionData>
  fullName: VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.IConditionData>
  nameWithType.vb: IDataOwner(Of IConditionData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of VRBuilder.Core.Conditions.IConditionData)
  name.vb: IDataOwner(Of IConditionData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Conditions.IConditionData
    name: IConditionData
    nameWithType: IConditionData
    fullName: VRBuilder.Core.Conditions.IConditionData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Conditions.IConditionData
    name: IConditionData
    nameWithType: IConditionData
    fullName: VRBuilder.Core.Conditions.IConditionData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IDataOwner
  commentId: T:VRBuilder.Core.IDataOwner
  parent: VRBuilder.Core
  name: IDataOwner
  nameWithType: IDataOwner
  fullName: VRBuilder.Core.IDataOwner
- uid: VRBuilder.Core.IClonable{VRBuilder.Core.Conditions.ICondition}
  commentId: T:VRBuilder.Core.IClonable{VRBuilder.Core.Conditions.ICondition}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IClonable`1
  name: IClonable<ICondition>
  nameWithType: IClonable<ICondition>
  fullName: VRBuilder.Core.IClonable<VRBuilder.Core.Conditions.ICondition>
  nameWithType.vb: IClonable(Of ICondition)
  fullName.vb: VRBuilder.Core.IClonable(Of VRBuilder.Core.Conditions.ICondition)
  name.vb: IClonable(Of ICondition)
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Conditions.ICondition
    name: ICondition
    nameWithType: ICondition
    fullName: VRBuilder.Core.Conditions.ICondition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Conditions.ICondition
    name: ICondition
    nameWithType: ICondition
    fullName: VRBuilder.Core.Conditions.ICondition
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.ILockablePropertiesProvider
  commentId: T:VRBuilder.Core.ILockablePropertiesProvider
  parent: VRBuilder.Core
  name: ILockablePropertiesProvider
  nameWithType: ILockablePropertiesProvider
  fullName: VRBuilder.Core.ILockablePropertiesProvider
- uid: VRBuilder.Core.Conditions.Condition{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.VRBuilder#Core#IDataOwner{VRBuilder#Core#Conditions#IConditionData}#Data
  commentId: P:VRBuilder.Core.Conditions.Condition{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.VRBuilder#Core#IDataOwner{VRBuilder#Core#Conditions#IConditionData}#Data
  parent: VRBuilder.Core.Conditions.Condition{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  definition: VRBuilder.Core.Conditions.Condition`1.VRBuilder#Core#IDataOwner{VRBuilder#Core#Conditions#IConditionData}#Data
  name: IDataOwner<IConditionData>.Data
  nameWithType: Condition<CompareValuesCondition<T>.EntityData>.IDataOwner<IConditionData>.Data
  fullName: VRBuilder.Core.Conditions.Condition<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.IConditionData>.Data
  nameWithType.vb: Condition(Of CompareValuesCondition(Of T).EntityData).VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.IConditionData>.Data
  fullName.vb: VRBuilder.Core.Conditions.Condition(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.IConditionData>.Data
  name.vb: VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.IConditionData>.Data
- uid: VRBuilder.Core.Conditions.Condition{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.Clone
  commentId: M:VRBuilder.Core.Conditions.Condition{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.Clone
  parent: VRBuilder.Core.Conditions.Condition{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  definition: VRBuilder.Core.Conditions.Condition`1.Clone
  name: Clone()
  nameWithType: Condition<CompareValuesCondition<T>.EntityData>.Clone()
  fullName: VRBuilder.Core.Conditions.Condition<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.Clone()
  nameWithType.vb: Condition(Of CompareValuesCondition(Of T).EntityData).Clone()
  fullName.vb: VRBuilder.Core.Conditions.Condition(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).Clone()
  spec.csharp:
  - uid: VRBuilder.Core.Conditions.Condition`1.Clone
    name: Clone
    nameWithType: Condition<CompareValuesCondition<T>.EntityData>.Clone
    fullName: VRBuilder.Core.Conditions.Condition<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Conditions.Condition`1.Clone
    name: Clone
    nameWithType: Condition(Of CompareValuesCondition(Of T).EntityData).Clone
    fullName: VRBuilder.Core.Conditions.Condition(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Conditions.Condition{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.GetLockableProperties
  commentId: M:VRBuilder.Core.Conditions.Condition{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.GetLockableProperties
  parent: VRBuilder.Core.Conditions.Condition{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  definition: VRBuilder.Core.Conditions.Condition`1.GetLockableProperties
  name: GetLockableProperties()
  nameWithType: Condition<CompareValuesCondition<T>.EntityData>.GetLockableProperties()
  fullName: VRBuilder.Core.Conditions.Condition<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.GetLockableProperties()
  nameWithType.vb: Condition(Of CompareValuesCondition(Of T).EntityData).GetLockableProperties()
  fullName.vb: VRBuilder.Core.Conditions.Condition(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).GetLockableProperties()
  spec.csharp:
  - uid: VRBuilder.Core.Conditions.Condition`1.GetLockableProperties
    name: GetLockableProperties
    nameWithType: Condition<CompareValuesCondition<T>.EntityData>.GetLockableProperties
    fullName: VRBuilder.Core.Conditions.Condition<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.GetLockableProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Conditions.Condition`1.GetLockableProperties
    name: GetLockableProperties
    nameWithType: Condition(Of CompareValuesCondition(Of T).EntityData).GetLockableProperties
    fullName: VRBuilder.Core.Conditions.Condition(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).GetLockableProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.CompletableEntity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.GetAutocompleter
  commentId: M:VRBuilder.Core.CompletableEntity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.GetAutocompleter
  parent: VRBuilder.Core.CompletableEntity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  definition: VRBuilder.Core.CompletableEntity`1.GetAutocompleter
  name: GetAutocompleter()
  nameWithType: CompletableEntity<CompareValuesCondition<T>.EntityData>.GetAutocompleter()
  fullName: VRBuilder.Core.CompletableEntity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.GetAutocompleter()
  nameWithType.vb: CompletableEntity(Of CompareValuesCondition(Of T).EntityData).GetAutocompleter()
  fullName.vb: VRBuilder.Core.CompletableEntity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).GetAutocompleter()
  spec.csharp:
  - uid: VRBuilder.Core.CompletableEntity`1.GetAutocompleter
    name: GetAutocompleter
    nameWithType: CompletableEntity<CompareValuesCondition<T>.EntityData>.GetAutocompleter
    fullName: VRBuilder.Core.CompletableEntity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.GetAutocompleter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.CompletableEntity`1.GetAutocompleter
    name: GetAutocompleter
    nameWithType: CompletableEntity(Of CompareValuesCondition(Of T).EntityData).GetAutocompleter
    fullName: VRBuilder.Core.CompletableEntity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).GetAutocompleter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.CompletableEntity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.IsCompleted
  commentId: P:VRBuilder.Core.CompletableEntity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.IsCompleted
  parent: VRBuilder.Core.CompletableEntity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  definition: VRBuilder.Core.CompletableEntity`1.IsCompleted
  name: IsCompleted
  nameWithType: CompletableEntity<CompareValuesCondition<T>.EntityData>.IsCompleted
  fullName: VRBuilder.Core.CompletableEntity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.IsCompleted
  nameWithType.vb: CompletableEntity(Of CompareValuesCondition(Of T).EntityData).IsCompleted
  fullName.vb: VRBuilder.Core.CompletableEntity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).IsCompleted
- uid: VRBuilder.Core.CompletableEntity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.Autocomplete
  commentId: M:VRBuilder.Core.CompletableEntity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.Autocomplete
  parent: VRBuilder.Core.CompletableEntity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  definition: VRBuilder.Core.CompletableEntity`1.Autocomplete
  name: Autocomplete()
  nameWithType: CompletableEntity<CompareValuesCondition<T>.EntityData>.Autocomplete()
  fullName: VRBuilder.Core.CompletableEntity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.Autocomplete()
  nameWithType.vb: CompletableEntity(Of CompareValuesCondition(Of T).EntityData).Autocomplete()
  fullName.vb: VRBuilder.Core.CompletableEntity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).Autocomplete()
  spec.csharp:
  - uid: VRBuilder.Core.CompletableEntity`1.Autocomplete
    name: Autocomplete
    nameWithType: CompletableEntity<CompareValuesCondition<T>.EntityData>.Autocomplete
    fullName: VRBuilder.Core.CompletableEntity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.Autocomplete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.CompletableEntity`1.Autocomplete
    name: Autocomplete
    nameWithType: CompletableEntity(Of CompareValuesCondition(Of T).EntityData).Autocomplete
    fullName: VRBuilder.Core.CompletableEntity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).Autocomplete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.Data
  commentId: P:VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.Data
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  definition: VRBuilder.Core.Entity`1.Data
  name: Data
  nameWithType: Entity<CompareValuesCondition<T>.EntityData>.Data
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.Data
  nameWithType.vb: Entity(Of CompareValuesCondition(Of T).EntityData).Data
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).Data
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.VRBuilder#Core#IDataOwner#Data
  commentId: P:VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.VRBuilder#Core#IDataOwner#Data
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  definition: VRBuilder.Core.Entity`1.VRBuilder#Core#IDataOwner#Data
  name: IDataOwner.Data
  nameWithType: Entity<CompareValuesCondition<T>.EntityData>.IDataOwner.Data
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.VRBuilder.Core.IDataOwner.Data
  nameWithType.vb: Entity(Of CompareValuesCondition(Of T).EntityData).VRBuilder.Core.IDataOwner.Data
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).VRBuilder.Core.IDataOwner.Data
  name.vb: VRBuilder.Core.IDataOwner.Data
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.LifeCycle
  commentId: P:VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.LifeCycle
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  definition: VRBuilder.Core.Entity`1.LifeCycle
  name: LifeCycle
  nameWithType: Entity<CompareValuesCondition<T>.EntityData>.LifeCycle
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.LifeCycle
  nameWithType.vb: Entity(Of CompareValuesCondition(Of T).EntityData).LifeCycle
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).LifeCycle
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.Parent
  commentId: P:VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.Parent
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  definition: VRBuilder.Core.Entity`1.Parent
  name: Parent
  nameWithType: Entity<CompareValuesCondition<T>.EntityData>.Parent
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.Parent
  nameWithType.vb: Entity(Of CompareValuesCondition(Of T).EntityData).Parent
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).Parent
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.GetActivatingProcess
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.GetActivatingProcess
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  definition: VRBuilder.Core.Entity`1.GetActivatingProcess
  name: GetActivatingProcess()
  nameWithType: Entity<CompareValuesCondition<T>.EntityData>.GetActivatingProcess()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.GetActivatingProcess()
  nameWithType.vb: Entity(Of CompareValuesCondition(Of T).EntityData).GetActivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).GetActivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: Entity<CompareValuesCondition<T>.EntityData>.GetActivatingProcess
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: Entity(Of CompareValuesCondition(Of T).EntityData).GetActivatingProcess
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.GetDeactivatingProcess
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  definition: VRBuilder.Core.Entity`1.GetDeactivatingProcess
  name: GetDeactivatingProcess()
  nameWithType: Entity<CompareValuesCondition<T>.EntityData>.GetDeactivatingProcess()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.GetDeactivatingProcess()
  nameWithType.vb: Entity(Of CompareValuesCondition(Of T).EntityData).GetDeactivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).GetDeactivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: Entity<CompareValuesCondition<T>.EntityData>.GetDeactivatingProcess
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: Entity(Of CompareValuesCondition(Of T).EntityData).GetDeactivatingProcess
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.GetConfigurator
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.GetConfigurator
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  definition: VRBuilder.Core.Entity`1.GetConfigurator
  name: GetConfigurator()
  nameWithType: Entity<CompareValuesCondition<T>.EntityData>.GetConfigurator()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.GetConfigurator()
  nameWithType.vb: Entity(Of CompareValuesCondition(Of T).EntityData).GetConfigurator()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).GetConfigurator()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    nameWithType: Entity<CompareValuesCondition<T>.EntityData>.GetConfigurator
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.GetConfigurator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    nameWithType: Entity(Of CompareValuesCondition(Of T).EntityData).GetConfigurator
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).GetConfigurator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  definition: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  name: Configure(IMode)
  nameWithType: Entity<CompareValuesCondition<T>.EntityData>.Configure(IMode)
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  nameWithType.vb: Entity(Of CompareValuesCondition(Of T).EntityData).Configure(IMode)
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).Configure(VRBuilder.Core.Configuration.Modes.IMode)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: Entity<CompareValuesCondition<T>.EntityData>.Configure
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: Entity(Of CompareValuesCondition(Of T).EntityData).Configure
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.Update
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.Update
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  definition: VRBuilder.Core.Entity`1.Update
  name: Update()
  nameWithType: Entity<CompareValuesCondition<T>.EntityData>.Update()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.Update()
  nameWithType.vb: Entity(Of CompareValuesCondition(Of T).EntityData).Update()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).Update()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    nameWithType: Entity<CompareValuesCondition<T>.EntityData>.Update
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    nameWithType: Entity(Of CompareValuesCondition(Of T).EntityData).Update
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Entity`1
  commentId: T:VRBuilder.Core.Entity`1
  name: Entity<TData>
  nameWithType: Entity<TData>
  fullName: VRBuilder.Core.Entity<TData>
  nameWithType.vb: Entity(Of TData)
  fullName.vb: VRBuilder.Core.Entity(Of TData)
  name.vb: Entity(Of TData)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: VRBuilder.Core.Entity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: VRBuilder.Core.Entity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Core.CompletableEntity`1
  commentId: T:VRBuilder.Core.CompletableEntity`1
  name: CompletableEntity<TData>
  nameWithType: CompletableEntity<TData>
  fullName: VRBuilder.Core.CompletableEntity<TData>
  nameWithType.vb: CompletableEntity(Of TData)
  fullName.vb: VRBuilder.Core.CompletableEntity(Of TData)
  name.vb: CompletableEntity(Of TData)
  spec.csharp:
  - uid: VRBuilder.Core.CompletableEntity`1
    name: CompletableEntity
    nameWithType: CompletableEntity
    fullName: VRBuilder.Core.CompletableEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.CompletableEntity`1
    name: CompletableEntity
    nameWithType: CompletableEntity
    fullName: VRBuilder.Core.CompletableEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Conditions.Condition`1
  commentId: T:VRBuilder.Core.Conditions.Condition`1
  name: Condition<TData>
  nameWithType: Condition<TData>
  fullName: VRBuilder.Core.Conditions.Condition<TData>
  nameWithType.vb: Condition(Of TData)
  fullName.vb: VRBuilder.Core.Conditions.Condition(Of TData)
  name.vb: Condition(Of TData)
  spec.csharp:
  - uid: VRBuilder.Core.Conditions.Condition`1
    name: Condition
    nameWithType: Condition
    fullName: VRBuilder.Core.Conditions.Condition
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Conditions.Condition`1
    name: Condition
    nameWithType: Condition
    fullName: VRBuilder.Core.Conditions.Condition
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IDataOwner`1
  commentId: T:VRBuilder.Core.IDataOwner`1
  name: IDataOwner<TData>
  nameWithType: IDataOwner<TData>
  fullName: VRBuilder.Core.IDataOwner<TData>
  nameWithType.vb: IDataOwner(Of TData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of TData)
  name.vb: IDataOwner(Of TData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: <
    nameWithType: <
    fullName: <
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    nameWithType: IDataOwner
    fullName: VRBuilder.Core.IDataOwner
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TData
    nameWithType: TData
    fullName: TData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IClonable`1
  commentId: T:VRBuilder.Core.IClonable`1
  name: IClonable<T>
  nameWithType: IClonable<T>
  fullName: VRBuilder.Core.IClonable<T>
  nameWithType.vb: IClonable(Of T)
  fullName.vb: VRBuilder.Core.IClonable(Of T)
  name.vb: IClonable(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    nameWithType: IClonable
    fullName: VRBuilder.Core.IClonable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Conditions.Condition`1.VRBuilder#Core#IDataOwner{VRBuilder#Core#Conditions#IConditionData}#Data
  commentId: P:VRBuilder.Core.Conditions.Condition`1.VRBuilder#Core#IDataOwner{VRBuilder#Core#Conditions#IConditionData}#Data
  name: IDataOwner<IConditionData>.Data
  nameWithType: Condition<TData>.IDataOwner<IConditionData>.Data
  fullName: VRBuilder.Core.Conditions.Condition<TData>.VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.IConditionData>.Data
  nameWithType.vb: Condition(Of TData).VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.IConditionData>.Data
  fullName.vb: VRBuilder.Core.Conditions.Condition(Of TData).VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.IConditionData>.Data
  name.vb: VRBuilder.Core.IDataOwner<VRBuilder.Core.Conditions.IConditionData>.Data
- uid: VRBuilder.Core.Conditions.Condition`1.Clone
  commentId: M:VRBuilder.Core.Conditions.Condition`1.Clone
  name: Clone()
  nameWithType: Condition<TData>.Clone()
  fullName: VRBuilder.Core.Conditions.Condition<TData>.Clone()
  nameWithType.vb: Condition(Of TData).Clone()
  fullName.vb: VRBuilder.Core.Conditions.Condition(Of TData).Clone()
  spec.csharp:
  - uid: VRBuilder.Core.Conditions.Condition`1.Clone
    name: Clone
    nameWithType: Condition<TData>.Clone
    fullName: VRBuilder.Core.Conditions.Condition<TData>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Conditions.Condition`1.Clone
    name: Clone
    nameWithType: Condition(Of TData).Clone
    fullName: VRBuilder.Core.Conditions.Condition(Of TData).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Conditions.Condition`1.GetLockableProperties
  commentId: M:VRBuilder.Core.Conditions.Condition`1.GetLockableProperties
  name: GetLockableProperties()
  nameWithType: Condition<TData>.GetLockableProperties()
  fullName: VRBuilder.Core.Conditions.Condition<TData>.GetLockableProperties()
  nameWithType.vb: Condition(Of TData).GetLockableProperties()
  fullName.vb: VRBuilder.Core.Conditions.Condition(Of TData).GetLockableProperties()
  spec.csharp:
  - uid: VRBuilder.Core.Conditions.Condition`1.GetLockableProperties
    name: GetLockableProperties
    nameWithType: Condition<TData>.GetLockableProperties
    fullName: VRBuilder.Core.Conditions.Condition<TData>.GetLockableProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Conditions.Condition`1.GetLockableProperties
    name: GetLockableProperties
    nameWithType: Condition(Of TData).GetLockableProperties
    fullName: VRBuilder.Core.Conditions.Condition(Of TData).GetLockableProperties
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.CompletableEntity`1.GetAutocompleter
  commentId: M:VRBuilder.Core.CompletableEntity`1.GetAutocompleter
  name: GetAutocompleter()
  nameWithType: CompletableEntity<TData>.GetAutocompleter()
  fullName: VRBuilder.Core.CompletableEntity<TData>.GetAutocompleter()
  nameWithType.vb: CompletableEntity(Of TData).GetAutocompleter()
  fullName.vb: VRBuilder.Core.CompletableEntity(Of TData).GetAutocompleter()
  spec.csharp:
  - uid: VRBuilder.Core.CompletableEntity`1.GetAutocompleter
    name: GetAutocompleter
    nameWithType: CompletableEntity<TData>.GetAutocompleter
    fullName: VRBuilder.Core.CompletableEntity<TData>.GetAutocompleter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.CompletableEntity`1.GetAutocompleter
    name: GetAutocompleter
    nameWithType: CompletableEntity(Of TData).GetAutocompleter
    fullName: VRBuilder.Core.CompletableEntity(Of TData).GetAutocompleter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.CompletableEntity`1.IsCompleted
  commentId: P:VRBuilder.Core.CompletableEntity`1.IsCompleted
  name: IsCompleted
  nameWithType: CompletableEntity<TData>.IsCompleted
  fullName: VRBuilder.Core.CompletableEntity<TData>.IsCompleted
  nameWithType.vb: CompletableEntity(Of TData).IsCompleted
  fullName.vb: VRBuilder.Core.CompletableEntity(Of TData).IsCompleted
- uid: VRBuilder.Core.CompletableEntity`1.Autocomplete
  commentId: M:VRBuilder.Core.CompletableEntity`1.Autocomplete
  name: Autocomplete()
  nameWithType: CompletableEntity<TData>.Autocomplete()
  fullName: VRBuilder.Core.CompletableEntity<TData>.Autocomplete()
  nameWithType.vb: CompletableEntity(Of TData).Autocomplete()
  fullName.vb: VRBuilder.Core.CompletableEntity(Of TData).Autocomplete()
  spec.csharp:
  - uid: VRBuilder.Core.CompletableEntity`1.Autocomplete
    name: Autocomplete
    nameWithType: CompletableEntity<TData>.Autocomplete
    fullName: VRBuilder.Core.CompletableEntity<TData>.Autocomplete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.CompletableEntity`1.Autocomplete
    name: Autocomplete
    nameWithType: CompletableEntity(Of TData).Autocomplete
    fullName: VRBuilder.Core.CompletableEntity(Of TData).Autocomplete
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.Data
  commentId: P:VRBuilder.Core.Entity`1.Data
  name: Data
  nameWithType: Entity<TData>.Data
  fullName: VRBuilder.Core.Entity<TData>.Data
  nameWithType.vb: Entity(Of TData).Data
  fullName.vb: VRBuilder.Core.Entity(Of TData).Data
- uid: VRBuilder.Core.Entity`1.VRBuilder#Core#IDataOwner#Data
  commentId: P:VRBuilder.Core.Entity`1.VRBuilder#Core#IDataOwner#Data
  name: IDataOwner.Data
  nameWithType: Entity<TData>.IDataOwner.Data
  fullName: VRBuilder.Core.Entity<TData>.VRBuilder.Core.IDataOwner.Data
  nameWithType.vb: Entity(Of TData).VRBuilder.Core.IDataOwner.Data
  fullName.vb: VRBuilder.Core.Entity(Of TData).VRBuilder.Core.IDataOwner.Data
  name.vb: VRBuilder.Core.IDataOwner.Data
- uid: VRBuilder.Core.Entity`1.LifeCycle
  commentId: P:VRBuilder.Core.Entity`1.LifeCycle
  name: LifeCycle
  nameWithType: Entity<TData>.LifeCycle
  fullName: VRBuilder.Core.Entity<TData>.LifeCycle
  nameWithType.vb: Entity(Of TData).LifeCycle
  fullName.vb: VRBuilder.Core.Entity(Of TData).LifeCycle
- uid: VRBuilder.Core.Entity`1.Parent
  commentId: P:VRBuilder.Core.Entity`1.Parent
  name: Parent
  nameWithType: Entity<TData>.Parent
  fullName: VRBuilder.Core.Entity<TData>.Parent
  nameWithType.vb: Entity(Of TData).Parent
  fullName.vb: VRBuilder.Core.Entity(Of TData).Parent
- uid: VRBuilder.Core.Entity`1.GetActivatingProcess
  commentId: M:VRBuilder.Core.Entity`1.GetActivatingProcess
  name: GetActivatingProcess()
  nameWithType: Entity<TData>.GetActivatingProcess()
  fullName: VRBuilder.Core.Entity<TData>.GetActivatingProcess()
  nameWithType.vb: Entity(Of TData).GetActivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetActivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: Entity<TData>.GetActivatingProcess
    fullName: VRBuilder.Core.Entity<TData>.GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    nameWithType: Entity(Of TData).GetActivatingProcess
    fullName: VRBuilder.Core.Entity(Of TData).GetActivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.Entity`1.GetDeactivatingProcess
  name: GetDeactivatingProcess()
  nameWithType: Entity<TData>.GetDeactivatingProcess()
  fullName: VRBuilder.Core.Entity<TData>.GetDeactivatingProcess()
  nameWithType.vb: Entity(Of TData).GetDeactivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetDeactivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: Entity<TData>.GetDeactivatingProcess
    fullName: VRBuilder.Core.Entity<TData>.GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    nameWithType: Entity(Of TData).GetDeactivatingProcess
    fullName: VRBuilder.Core.Entity(Of TData).GetDeactivatingProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.GetConfigurator
  commentId: M:VRBuilder.Core.Entity`1.GetConfigurator
  name: GetConfigurator()
  nameWithType: Entity<TData>.GetConfigurator()
  fullName: VRBuilder.Core.Entity<TData>.GetConfigurator()
  nameWithType.vb: Entity(Of TData).GetConfigurator()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetConfigurator()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    nameWithType: Entity<TData>.GetConfigurator
    fullName: VRBuilder.Core.Entity<TData>.GetConfigurator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    nameWithType: Entity(Of TData).GetConfigurator
    fullName: VRBuilder.Core.Entity(Of TData).GetConfigurator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  name: Configure(IMode)
  nameWithType: Entity<TData>.Configure(IMode)
  fullName: VRBuilder.Core.Entity<TData>.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  nameWithType.vb: Entity(Of TData).Configure(IMode)
  fullName.vb: VRBuilder.Core.Entity(Of TData).Configure(VRBuilder.Core.Configuration.Modes.IMode)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: Entity<TData>.Configure
    fullName: VRBuilder.Core.Entity<TData>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: Entity(Of TData).Configure
    fullName: VRBuilder.Core.Entity(Of TData).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Entity`1.Update
  commentId: M:VRBuilder.Core.Entity`1.Update
  name: Update()
  nameWithType: Entity<TData>.Update()
  fullName: VRBuilder.Core.Entity<TData>.Update()
  nameWithType.vb: Entity(Of TData).Update()
  fullName.vb: VRBuilder.Core.Entity(Of TData).Update()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    nameWithType: Entity<TData>.Update
    fullName: VRBuilder.Core.Entity<TData>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    nameWithType: Entity(Of TData).Update
    fullName: VRBuilder.Core.Entity(Of TData).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Conditions.CompareValuesCondition`1.#ctor*
  commentId: Overload:VRBuilder.Core.Conditions.CompareValuesCondition`1.#ctor
  name: CompareValuesCondition
  nameWithType: CompareValuesCondition<T>.CompareValuesCondition
  fullName: VRBuilder.Core.Conditions.CompareValuesCondition<T>.CompareValuesCondition
  nameWithType.vb: CompareValuesCondition(Of T).CompareValuesCondition
  fullName.vb: VRBuilder.Core.Conditions.CompareValuesCondition(Of T).CompareValuesCondition
- uid: VRBuilder.Core.Properties.IDataProperty{{T}}
  commentId: T:VRBuilder.Core.Properties.IDataProperty{`0}
  parent: VRBuilder.Core.Properties
  definition: VRBuilder.Core.Properties.IDataProperty`1
  name: IDataProperty<T>
  nameWithType: IDataProperty<T>
  fullName: VRBuilder.Core.Properties.IDataProperty<T>
  nameWithType.vb: IDataProperty(Of T)
  fullName.vb: VRBuilder.Core.Properties.IDataProperty(Of T)
  name.vb: IDataProperty(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.IDataProperty`1
    name: IDataProperty
    nameWithType: IDataProperty
    fullName: VRBuilder.Core.Properties.IDataProperty
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Properties.IDataProperty`1
    name: IDataProperty
    nameWithType: IDataProperty
    fullName: VRBuilder.Core.Properties.IDataProperty
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.ProcessUtils.IOperationCommand{{T},System.Boolean}
  commentId: T:VRBuilder.Core.ProcessUtils.IOperationCommand{`0,System.Boolean}
  parent: VRBuilder.Core.ProcessUtils
  definition: VRBuilder.Core.ProcessUtils.IOperationCommand`2
  name: IOperationCommand<T, Boolean>
  nameWithType: IOperationCommand<T, Boolean>
  fullName: VRBuilder.Core.ProcessUtils.IOperationCommand<T, System.Boolean>
  nameWithType.vb: IOperationCommand(Of T, Boolean)
  fullName.vb: VRBuilder.Core.ProcessUtils.IOperationCommand(Of T, System.Boolean)
  name.vb: IOperationCommand(Of T, Boolean)
  spec.csharp:
  - uid: VRBuilder.Core.ProcessUtils.IOperationCommand`2
    name: IOperationCommand
    nameWithType: IOperationCommand
    fullName: VRBuilder.Core.ProcessUtils.IOperationCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.ProcessUtils.IOperationCommand`2
    name: IOperationCommand
    nameWithType: IOperationCommand
    fullName: VRBuilder.Core.ProcessUtils.IOperationCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties
  commentId: N:VRBuilder.Core.Properties
  name: VRBuilder.Core.Properties
  nameWithType: VRBuilder.Core.Properties
  fullName: VRBuilder.Core.Properties
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: VRBuilder.Core.ProcessUtils.IOperationCommand`2
  commentId: T:VRBuilder.Core.ProcessUtils.IOperationCommand`2
  name: IOperationCommand<TOperand, TResult>
  nameWithType: IOperationCommand<TOperand, TResult>
  fullName: VRBuilder.Core.ProcessUtils.IOperationCommand<TOperand, TResult>
  nameWithType.vb: IOperationCommand(Of TOperand, TResult)
  fullName.vb: VRBuilder.Core.ProcessUtils.IOperationCommand(Of TOperand, TResult)
  name.vb: IOperationCommand(Of TOperand, TResult)
  spec.csharp:
  - uid: VRBuilder.Core.ProcessUtils.IOperationCommand`2
    name: IOperationCommand
    nameWithType: IOperationCommand
    fullName: VRBuilder.Core.ProcessUtils.IOperationCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TOperand
    nameWithType: TOperand
    fullName: TOperand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.ProcessUtils.IOperationCommand`2
    name: IOperationCommand
    nameWithType: IOperationCommand
    fullName: VRBuilder.Core.ProcessUtils.IOperationCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOperand
    nameWithType: TOperand
    fullName: TOperand
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.ProcessUtils
  commentId: N:VRBuilder.Core.ProcessUtils
  name: VRBuilder.Core.ProcessUtils
  nameWithType: VRBuilder.Core.ProcessUtils
  fullName: VRBuilder.Core.ProcessUtils
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.GetActiveProcess
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}.GetActiveProcess
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Conditions.CompareValuesCondition`1.EntityData}
  definition: VRBuilder.Core.Entity`1.GetActiveProcess
  name: GetActiveProcess()
  nameWithType: Entity<CompareValuesCondition<T>.EntityData>.GetActiveProcess()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.GetActiveProcess()
  nameWithType.vb: Entity(Of CompareValuesCondition(Of T).EntityData).GetActiveProcess()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).GetActiveProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    nameWithType: Entity<CompareValuesCondition<T>.EntityData>.GetActiveProcess
    fullName: VRBuilder.Core.Entity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    nameWithType: Entity(Of CompareValuesCondition(Of T).EntityData).GetActiveProcess
    fullName: VRBuilder.Core.Entity(Of VRBuilder.Core.Conditions.CompareValuesCondition(Of T).EntityData).GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Conditions.CompareValuesCondition`1.GetActiveProcess*
  commentId: Overload:VRBuilder.Core.Conditions.CompareValuesCondition`1.GetActiveProcess
  name: GetActiveProcess
  nameWithType: CompareValuesCondition<T>.GetActiveProcess
  fullName: VRBuilder.Core.Conditions.CompareValuesCondition<T>.GetActiveProcess
  nameWithType.vb: CompareValuesCondition(Of T).GetActiveProcess
  fullName.vb: VRBuilder.Core.Conditions.CompareValuesCondition(Of T).GetActiveProcess
- uid: VRBuilder.Core.IStageProcess
  commentId: T:VRBuilder.Core.IStageProcess
  parent: VRBuilder.Core
  name: IStageProcess
  nameWithType: IStageProcess
  fullName: VRBuilder.Core.IStageProcess
- uid: VRBuilder.Core.Entity`1.GetActiveProcess
  commentId: M:VRBuilder.Core.Entity`1.GetActiveProcess
  name: GetActiveProcess()
  nameWithType: Entity<TData>.GetActiveProcess()
  fullName: VRBuilder.Core.Entity<TData>.GetActiveProcess()
  nameWithType.vb: Entity(Of TData).GetActiveProcess()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetActiveProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    nameWithType: Entity<TData>.GetActiveProcess
    fullName: VRBuilder.Core.Entity<TData>.GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    nameWithType: Entity(Of TData).GetActiveProcess
    fullName: VRBuilder.Core.Entity(Of TData).GetActiveProcess
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
