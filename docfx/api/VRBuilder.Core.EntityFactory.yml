### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.EntityFactory
  commentId: T:VRBuilder.Core.EntityFactory
  id: EntityFactory
  parent: VRBuilder.Core
  children:
  - VRBuilder.Core.EntityFactory.CreateChapter(System.String)
  - VRBuilder.Core.EntityFactory.CreateProcess(System.String)
  - VRBuilder.Core.EntityFactory.CreateStep(System.String,Vector2,System.String)
  - VRBuilder.Core.EntityFactory.CreateTransition
  langs:
  - csharp
  - vb
  name: EntityFactory
  nameWithType: EntityFactory
  fullName: VRBuilder.Core.EntityFactory
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Entities/EntityFactory.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EntityFactory
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Entities/EntityFactory.cs
    startLine: 13
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nBase factory interface for <xref href=\"VRBuilder.Core.IEntity\" data-throw-if-not-resolved=\"false\"></xref> objects.\n"
  example: []
  syntax:
    content: public static class EntityFactory
    content.vb: Public Module EntityFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VRBuilder.Core.EntityFactory.CreateStep(System.String,Vector2,System.String)
  commentId: M:VRBuilder.Core.EntityFactory.CreateStep(System.String,Vector2,System.String)
  id: CreateStep(System.String,Vector2,System.String)
  parent: VRBuilder.Core.EntityFactory
  langs:
  - csharp
  - vb
  name: CreateStep(String, Vector2, String)
  nameWithType: EntityFactory.CreateStep(String, Vector2, String)
  fullName: VRBuilder.Core.EntityFactory.CreateStep(System.String, Vector2, System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Entities/EntityFactory.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CreateStep
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Entities/EntityFactory.cs
    startLine: 18
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nCreates a new <xref href=\"VRBuilder.Core.IStep\" data-throw-if-not-resolved=\"false\"></xref> with given <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code>, <code data-dev-comment-type=\"paramref\" class=\"paramref\">position</code> and, if there is any valid <xref href=\"VRBuilder.Core.EntityFactory.PostProcessEntity%60%601(VRBuilder.Core.IEntity)\" data-throw-if-not-resolved=\"false\"></xref>, executes corresponding post processing.\n"
  example: []
  syntax:
    content: public static IStep CreateStep(string name, Vector2 position = null, string stepType = "default")
    parameters:
    - id: name
      type: System.String
    - id: position
      type: Vector2
    - id: stepType
      type: System.String
    return:
      type: VRBuilder.Core.IStep
    content.vb: Public Shared Function CreateStep(name As String, position As Vector2 = Nothing, stepType As String = "default") As IStep
  overload: VRBuilder.Core.EntityFactory.CreateStep*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Core.EntityFactory.CreateTransition
  commentId: M:VRBuilder.Core.EntityFactory.CreateTransition
  id: CreateTransition
  parent: VRBuilder.Core.EntityFactory
  langs:
  - csharp
  - vb
  name: CreateTransition()
  nameWithType: EntityFactory.CreateTransition()
  fullName: VRBuilder.Core.EntityFactory.CreateTransition()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Entities/EntityFactory.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CreateTransition
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Entities/EntityFactory.cs
    startLine: 31
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nCreates a new <xref href=\"VRBuilder.Core.ITransition\" data-throw-if-not-resolved=\"false\"></xref> and, if there is any valid <xref href=\"VRBuilder.Core.EntityFactory.PostProcessEntity%60%601(VRBuilder.Core.IEntity)\" data-throw-if-not-resolved=\"false\"></xref>, executes corresponding post processing.\n"
  example: []
  syntax:
    content: public static ITransition CreateTransition()
    return:
      type: VRBuilder.Core.ITransition
    content.vb: Public Shared Function CreateTransition As ITransition
  overload: VRBuilder.Core.EntityFactory.CreateTransition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Core.EntityFactory.CreateChapter(System.String)
  commentId: M:VRBuilder.Core.EntityFactory.CreateChapter(System.String)
  id: CreateChapter(System.String)
  parent: VRBuilder.Core.EntityFactory
  langs:
  - csharp
  - vb
  name: CreateChapter(String)
  nameWithType: EntityFactory.CreateChapter(String)
  fullName: VRBuilder.Core.EntityFactory.CreateChapter(System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Entities/EntityFactory.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CreateChapter
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Entities/EntityFactory.cs
    startLine: 42
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nCreates a new <xref href=\"VRBuilder.Core.IChapter\" data-throw-if-not-resolved=\"false\"></xref> with given <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code> and, if there is any valid <xref href=\"VRBuilder.Core.EntityFactory.PostProcessEntity%60%601(VRBuilder.Core.IEntity)\" data-throw-if-not-resolved=\"false\"></xref>, executes corresponding post processing.\n"
  example: []
  syntax:
    content: public static IChapter CreateChapter(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: VRBuilder.Core.IChapter
    content.vb: Public Shared Function CreateChapter(name As String) As IChapter
  overload: VRBuilder.Core.EntityFactory.CreateChapter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Core.EntityFactory.CreateProcess(System.String)
  commentId: M:VRBuilder.Core.EntityFactory.CreateProcess(System.String)
  id: CreateProcess(System.String)
  parent: VRBuilder.Core.EntityFactory
  langs:
  - csharp
  - vb
  name: CreateProcess(String)
  nameWithType: EntityFactory.CreateProcess(String)
  fullName: VRBuilder.Core.EntityFactory.CreateProcess(System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Entities/EntityFactory.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CreateProcess
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Entities/EntityFactory.cs
    startLine: 53
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nCreates a new <xref href=\"VRBuilder.Core.IProcess\" data-throw-if-not-resolved=\"false\"></xref> with given <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code> and, if there is any valid <xref href=\"VRBuilder.Core.EntityFactory.PostProcessEntity%60%601(VRBuilder.Core.IEntity)\" data-throw-if-not-resolved=\"false\"></xref>, executes corresponding post processing.\n"
  example: []
  syntax:
    content: public static IProcess CreateProcess(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: VRBuilder.Core.IProcess
    content.vb: Public Shared Function CreateProcess(name As String) As IProcess
  overload: VRBuilder.Core.EntityFactory.CreateProcess*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VRBuilder.Core.IEntity
  commentId: T:VRBuilder.Core.IEntity
  parent: VRBuilder.Core
  name: IEntity
  nameWithType: IEntity
  fullName: VRBuilder.Core.IEntity
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.IStep
  commentId: T:VRBuilder.Core.IStep
  parent: VRBuilder.Core
  name: IStep
  nameWithType: IStep
  fullName: VRBuilder.Core.IStep
- uid: VRBuilder.Core.EntityFactory.PostProcessEntity``1(VRBuilder.Core.IEntity)
  commentId: M:VRBuilder.Core.EntityFactory.PostProcessEntity``1(VRBuilder.Core.IEntity)
  isExternal: true
- uid: VRBuilder.Core.EntityFactory.CreateStep*
  commentId: Overload:VRBuilder.Core.EntityFactory.CreateStep
  name: CreateStep
  nameWithType: EntityFactory.CreateStep
  fullName: VRBuilder.Core.EntityFactory.CreateStep
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Vector2
- uid: VRBuilder.Core.ITransition
  commentId: T:VRBuilder.Core.ITransition
  parent: VRBuilder.Core
  name: ITransition
  nameWithType: ITransition
  fullName: VRBuilder.Core.ITransition
- uid: VRBuilder.Core.EntityFactory.CreateTransition*
  commentId: Overload:VRBuilder.Core.EntityFactory.CreateTransition
  name: CreateTransition
  nameWithType: EntityFactory.CreateTransition
  fullName: VRBuilder.Core.EntityFactory.CreateTransition
- uid: VRBuilder.Core.IChapter
  commentId: T:VRBuilder.Core.IChapter
  parent: VRBuilder.Core
  name: IChapter
  nameWithType: IChapter
  fullName: VRBuilder.Core.IChapter
- uid: VRBuilder.Core.EntityFactory.CreateChapter*
  commentId: Overload:VRBuilder.Core.EntityFactory.CreateChapter
  name: CreateChapter
  nameWithType: EntityFactory.CreateChapter
  fullName: VRBuilder.Core.EntityFactory.CreateChapter
- uid: VRBuilder.Core.IProcess
  commentId: T:VRBuilder.Core.IProcess
  parent: VRBuilder.Core
  name: IProcess
  nameWithType: IProcess
  fullName: VRBuilder.Core.IProcess
- uid: VRBuilder.Core.EntityFactory.CreateProcess*
  commentId: Overload:VRBuilder.Core.EntityFactory.CreateProcess
  name: CreateProcess
  nameWithType: EntityFactory.CreateProcess
  fullName: VRBuilder.Core.EntityFactory.CreateProcess
