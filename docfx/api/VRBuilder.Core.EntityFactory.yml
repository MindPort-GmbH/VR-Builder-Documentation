### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.EntityFactory
  commentId: T:VRBuilder.Core.EntityFactory
  id: EntityFactory
  parent: VRBuilder.Core
  children:
  - VRBuilder.Core.EntityFactory.CreateChapter(System.String)
  - VRBuilder.Core.EntityFactory.CreateProcess(System.String)
  - VRBuilder.Core.EntityFactory.CreateStep(System.String,UnityEngine.Vector2,System.String)
  - VRBuilder.Core.EntityFactory.CreateTransition
  langs:
  - csharp
  - vb
  name: EntityFactory
  nameWithType: EntityFactory
  fullName: VRBuilder.Core.EntityFactory
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Entities/EntityFactory.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EntityFactory
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Entities/EntityFactory.cs
    startLine: 13
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: Base factory interface for <xref href="VRBuilder.Core.IEntity" data-throw-if-not-resolved="false"></xref> objects.
  example: []
  syntax:
    content: public static class EntityFactory
    content.vb: Public Module EntityFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: VRBuilder.Core.EntityFactory.CreateStep(System.String,UnityEngine.Vector2,System.String)
  commentId: M:VRBuilder.Core.EntityFactory.CreateStep(System.String,UnityEngine.Vector2,System.String)
  id: CreateStep(System.String,UnityEngine.Vector2,System.String)
  parent: VRBuilder.Core.EntityFactory
  langs:
  - csharp
  - vb
  name: CreateStep(string, Vector2, string)
  nameWithType: EntityFactory.CreateStep(string, Vector2, string)
  fullName: VRBuilder.Core.EntityFactory.CreateStep(string, UnityEngine.Vector2, string)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Entities/EntityFactory.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CreateStep
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Entities/EntityFactory.cs
    startLine: 18
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: Creates a new <xref href="VRBuilder.Core.IStep" data-throw-if-not-resolved="false"></xref> with given <code class="paramref">name</code>, <code class="paramref">position</code> and, if there is any valid <xref href="VRBuilder.Core.EntityFactory.PostProcessEntity%60%601(VRBuilder.Core.IEntity)" data-throw-if-not-resolved="false"></xref>, executes corresponding post processing.
  example: []
  syntax:
    content: public static IStep CreateStep(string name, Vector2 position = default, string stepType = "default")
    parameters:
    - id: name
      type: System.String
    - id: position
      type: UnityEngine.Vector2
    - id: stepType
      type: System.String
    return:
      type: VRBuilder.Core.IStep
    content.vb: Public Shared Function CreateStep(name As String, position As Vector2 = Nothing, stepType As String = "default") As IStep
  overload: VRBuilder.Core.EntityFactory.CreateStep*
  nameWithType.vb: EntityFactory.CreateStep(String, Vector2, String)
  fullName.vb: VRBuilder.Core.EntityFactory.CreateStep(String, UnityEngine.Vector2, String)
  name.vb: CreateStep(String, Vector2, String)
- uid: VRBuilder.Core.EntityFactory.CreateTransition
  commentId: M:VRBuilder.Core.EntityFactory.CreateTransition
  id: CreateTransition
  parent: VRBuilder.Core.EntityFactory
  langs:
  - csharp
  - vb
  name: CreateTransition()
  nameWithType: EntityFactory.CreateTransition()
  fullName: VRBuilder.Core.EntityFactory.CreateTransition()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Entities/EntityFactory.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CreateTransition
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Entities/EntityFactory.cs
    startLine: 31
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: Creates a new <xref href="VRBuilder.Core.ITransition" data-throw-if-not-resolved="false"></xref> and, if there is any valid <xref href="VRBuilder.Core.EntityFactory.PostProcessEntity%60%601(VRBuilder.Core.IEntity)" data-throw-if-not-resolved="false"></xref>, executes corresponding post processing.
  example: []
  syntax:
    content: public static ITransition CreateTransition()
    return:
      type: VRBuilder.Core.ITransition
    content.vb: Public Shared Function CreateTransition() As ITransition
  overload: VRBuilder.Core.EntityFactory.CreateTransition*
- uid: VRBuilder.Core.EntityFactory.CreateChapter(System.String)
  commentId: M:VRBuilder.Core.EntityFactory.CreateChapter(System.String)
  id: CreateChapter(System.String)
  parent: VRBuilder.Core.EntityFactory
  langs:
  - csharp
  - vb
  name: CreateChapter(string)
  nameWithType: EntityFactory.CreateChapter(string)
  fullName: VRBuilder.Core.EntityFactory.CreateChapter(string)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Entities/EntityFactory.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CreateChapter
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Entities/EntityFactory.cs
    startLine: 42
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: Creates a new <xref href="VRBuilder.Core.IChapter" data-throw-if-not-resolved="false"></xref> with given <code class="paramref">name</code> and, if there is any valid <xref href="VRBuilder.Core.EntityFactory.PostProcessEntity%60%601(VRBuilder.Core.IEntity)" data-throw-if-not-resolved="false"></xref>, executes corresponding post processing.
  example: []
  syntax:
    content: public static IChapter CreateChapter(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: VRBuilder.Core.IChapter
    content.vb: Public Shared Function CreateChapter(name As String) As IChapter
  overload: VRBuilder.Core.EntityFactory.CreateChapter*
  nameWithType.vb: EntityFactory.CreateChapter(String)
  fullName.vb: VRBuilder.Core.EntityFactory.CreateChapter(String)
  name.vb: CreateChapter(String)
- uid: VRBuilder.Core.EntityFactory.CreateProcess(System.String)
  commentId: M:VRBuilder.Core.EntityFactory.CreateProcess(System.String)
  id: CreateProcess(System.String)
  parent: VRBuilder.Core.EntityFactory
  langs:
  - csharp
  - vb
  name: CreateProcess(string)
  nameWithType: EntityFactory.CreateProcess(string)
  fullName: VRBuilder.Core.EntityFactory.CreateProcess(string)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Entities/EntityFactory.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CreateProcess
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Entities/EntityFactory.cs
    startLine: 53
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: Creates a new <xref href="VRBuilder.Core.IProcess" data-throw-if-not-resolved="false"></xref> with given <code class="paramref">name</code> and, if there is any valid <xref href="VRBuilder.Core.EntityFactory.PostProcessEntity%60%601(VRBuilder.Core.IEntity)" data-throw-if-not-resolved="false"></xref>, executes corresponding post processing.
  example: []
  syntax:
    content: public static IProcess CreateProcess(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: VRBuilder.Core.IProcess
    content.vb: Public Shared Function CreateProcess(name As String) As IProcess
  overload: VRBuilder.Core.EntityFactory.CreateProcess*
  nameWithType.vb: EntityFactory.CreateProcess(String)
  fullName.vb: VRBuilder.Core.EntityFactory.CreateProcess(String)
  name.vb: CreateProcess(String)
references:
- uid: VRBuilder.Core.IEntity
  commentId: T:VRBuilder.Core.IEntity
  parent: VRBuilder.Core
  href: VRBuilder.Core.IEntity.html
  name: IEntity
  nameWithType: IEntity
  fullName: VRBuilder.Core.IEntity
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  href: VRBuilder.html
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.IStep
  commentId: T:VRBuilder.Core.IStep
  parent: VRBuilder.Core
  href: VRBuilder.Core.IStep.html
  name: IStep
  nameWithType: IStep
  fullName: VRBuilder.Core.IStep
- uid: VRBuilder.Core.EntityFactory.PostProcessEntity``1(VRBuilder.Core.IEntity)
  commentId: M:VRBuilder.Core.EntityFactory.PostProcessEntity``1(VRBuilder.Core.IEntity)
  href: VRBuilder.Core.EntityFactory.html#VRBuilder_Core_EntityFactory_PostProcessEntity__1_VRBuilder_Core_IEntity_
  name: PostProcessEntity<T>(IEntity)
  nameWithType: EntityFactory.PostProcessEntity<T>(IEntity)
  fullName: VRBuilder.Core.EntityFactory.PostProcessEntity<T>(VRBuilder.Core.IEntity)
  nameWithType.vb: EntityFactory.PostProcessEntity(Of T)(IEntity)
  fullName.vb: VRBuilder.Core.EntityFactory.PostProcessEntity(Of T)(VRBuilder.Core.IEntity)
  name.vb: PostProcessEntity(Of T)(IEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityFactory.PostProcessEntity``1(VRBuilder.Core.IEntity)
    name: PostProcessEntity
    href: VRBuilder.Core.EntityFactory.html#VRBuilder_Core_EntityFactory_PostProcessEntity__1_VRBuilder_Core_IEntity_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: VRBuilder.Core.IEntity
    name: IEntity
    href: VRBuilder.Core.IEntity.html
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.EntityFactory.PostProcessEntity``1(VRBuilder.Core.IEntity)
    name: PostProcessEntity
    href: VRBuilder.Core.EntityFactory.html#VRBuilder_Core_EntityFactory_PostProcessEntity__1_VRBuilder_Core_IEntity_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: VRBuilder.Core.IEntity
    name: IEntity
    href: VRBuilder.Core.IEntity.html
  - name: )
- uid: VRBuilder.Core.EntityFactory.CreateStep*
  commentId: Overload:VRBuilder.Core.EntityFactory.CreateStep
  href: VRBuilder.Core.EntityFactory.html#VRBuilder_Core_EntityFactory_CreateStep_System_String_UnityEngine_Vector2_System_String_
  name: CreateStep
  nameWithType: EntityFactory.CreateStep
  fullName: VRBuilder.Core.EntityFactory.CreateStep
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: VRBuilder.Core.ITransition
  commentId: T:VRBuilder.Core.ITransition
  parent: VRBuilder.Core
  href: VRBuilder.Core.ITransition.html
  name: ITransition
  nameWithType: ITransition
  fullName: VRBuilder.Core.ITransition
- uid: VRBuilder.Core.EntityFactory.CreateTransition*
  commentId: Overload:VRBuilder.Core.EntityFactory.CreateTransition
  href: VRBuilder.Core.EntityFactory.html#VRBuilder_Core_EntityFactory_CreateTransition
  name: CreateTransition
  nameWithType: EntityFactory.CreateTransition
  fullName: VRBuilder.Core.EntityFactory.CreateTransition
- uid: VRBuilder.Core.IChapter
  commentId: T:VRBuilder.Core.IChapter
  parent: VRBuilder.Core
  href: VRBuilder.Core.IChapter.html
  name: IChapter
  nameWithType: IChapter
  fullName: VRBuilder.Core.IChapter
- uid: VRBuilder.Core.EntityFactory.CreateChapter*
  commentId: Overload:VRBuilder.Core.EntityFactory.CreateChapter
  href: VRBuilder.Core.EntityFactory.html#VRBuilder_Core_EntityFactory_CreateChapter_System_String_
  name: CreateChapter
  nameWithType: EntityFactory.CreateChapter
  fullName: VRBuilder.Core.EntityFactory.CreateChapter
- uid: VRBuilder.Core.IProcess
  commentId: T:VRBuilder.Core.IProcess
  parent: VRBuilder.Core
  href: VRBuilder.Core.IProcess.html
  name: IProcess
  nameWithType: IProcess
  fullName: VRBuilder.Core.IProcess
- uid: VRBuilder.Core.EntityFactory.CreateProcess*
  commentId: Overload:VRBuilder.Core.EntityFactory.CreateProcess
  href: VRBuilder.Core.EntityFactory.html#VRBuilder_Core_EntityFactory_CreateProcess_System_String_
  name: CreateProcess
  nameWithType: EntityFactory.CreateProcess
  fullName: VRBuilder.Core.EntityFactory.CreateProcess
