### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.IO.IProcessAssetStrategy
  commentId: T:VRBuilder.Core.IO.IProcessAssetStrategy
  id: IProcessAssetStrategy
  parent: VRBuilder.Core.IO
  children:
  - VRBuilder.Core.IO.IProcessAssetStrategy.CreateManifest
  - VRBuilder.Core.IO.IProcessAssetStrategy.CreateSerializedProcessAssets(VRBuilder.Core.IProcess,VRBuilder.Core.Serialization.IProcessSerializer)
  - VRBuilder.Core.IO.IProcessAssetStrategy.GetProcessFromSerializedData(System.Byte[],System.Collections.Generic.IEnumerable{System.Byte[]},VRBuilder.Core.Serialization.IProcessSerializer)
  langs:
  - csharp
  - vb
  name: IProcessAssetStrategy
  nameWithType: IProcessAssetStrategy
  fullName: VRBuilder.Core.IO.IProcessAssetStrategy
  type: Interface
  source:
    remote:
      path: Source/Core/Runtime/IO/IProcessAssetStrategy.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IProcessAssetStrategy
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IO/IProcessAssetStrategy.cs
    startLine: 8
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.IO
  summary: Defines how a process asset should be saved or loaded.
  example: []
  syntax:
    content: public interface IProcessAssetStrategy
    content.vb: Public Interface IProcessAssetStrategy
- uid: VRBuilder.Core.IO.IProcessAssetStrategy.CreateManifest
  commentId: P:VRBuilder.Core.IO.IProcessAssetStrategy.CreateManifest
  id: CreateManifest
  parent: VRBuilder.Core.IO.IProcessAssetStrategy
  langs:
  - csharp
  - vb
  name: CreateManifest
  nameWithType: IProcessAssetStrategy.CreateManifest
  fullName: VRBuilder.Core.IO.IProcessAssetStrategy.CreateManifest
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/IO/IProcessAssetStrategy.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CreateManifest
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IO/IProcessAssetStrategy.cs
    startLine: 13
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.IO
  summary: If true, a manifest file will be created. The file will be read first when loading the process.
  example: []
  syntax:
    content: bool CreateManifest { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property CreateManifest As Boolean
  overload: VRBuilder.Core.IO.IProcessAssetStrategy.CreateManifest*
- uid: VRBuilder.Core.IO.IProcessAssetStrategy.CreateSerializedProcessAssets(VRBuilder.Core.IProcess,VRBuilder.Core.Serialization.IProcessSerializer)
  commentId: M:VRBuilder.Core.IO.IProcessAssetStrategy.CreateSerializedProcessAssets(VRBuilder.Core.IProcess,VRBuilder.Core.Serialization.IProcessSerializer)
  id: CreateSerializedProcessAssets(VRBuilder.Core.IProcess,VRBuilder.Core.Serialization.IProcessSerializer)
  parent: VRBuilder.Core.IO.IProcessAssetStrategy
  langs:
  - csharp
  - vb
  name: CreateSerializedProcessAssets(IProcess, IProcessSerializer)
  nameWithType: IProcessAssetStrategy.CreateSerializedProcessAssets(IProcess, IProcessSerializer)
  fullName: VRBuilder.Core.IO.IProcessAssetStrategy.CreateSerializedProcessAssets(VRBuilder.Core.IProcess, VRBuilder.Core.Serialization.IProcessSerializer)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/IO/IProcessAssetStrategy.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CreateSerializedProcessAssets
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IO/IProcessAssetStrategy.cs
    startLine: 19
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.IO
  summary: >-
    Returns a number of named byte arrays containing the process data. The first key is the process file,

    subsequent ones are additional data.
  example: []
  syntax:
    content: IDictionary<string, byte[]> CreateSerializedProcessAssets(IProcess process, IProcessSerializer serializer)
    parameters:
    - id: process
      type: VRBuilder.Core.IProcess
    - id: serializer
      type: VRBuilder.Core.Serialization.IProcessSerializer
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Byte[]}
    content.vb: Function CreateSerializedProcessAssets(process As IProcess, serializer As IProcessSerializer) As IDictionary(Of String, Byte())
  overload: VRBuilder.Core.IO.IProcessAssetStrategy.CreateSerializedProcessAssets*
- uid: VRBuilder.Core.IO.IProcessAssetStrategy.GetProcessFromSerializedData(System.Byte[],System.Collections.Generic.IEnumerable{System.Byte[]},VRBuilder.Core.Serialization.IProcessSerializer)
  commentId: M:VRBuilder.Core.IO.IProcessAssetStrategy.GetProcessFromSerializedData(System.Byte[],System.Collections.Generic.IEnumerable{System.Byte[]},VRBuilder.Core.Serialization.IProcessSerializer)
  id: GetProcessFromSerializedData(System.Byte[],System.Collections.Generic.IEnumerable{System.Byte[]},VRBuilder.Core.Serialization.IProcessSerializer)
  parent: VRBuilder.Core.IO.IProcessAssetStrategy
  langs:
  - csharp
  - vb
  name: GetProcessFromSerializedData(byte[], IEnumerable<byte[]>, IProcessSerializer)
  nameWithType: IProcessAssetStrategy.GetProcessFromSerializedData(byte[], IEnumerable<byte[]>, IProcessSerializer)
  fullName: VRBuilder.Core.IO.IProcessAssetStrategy.GetProcessFromSerializedData(byte[], System.Collections.Generic.IEnumerable<byte[]>, VRBuilder.Core.Serialization.IProcessSerializer)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/IO/IProcessAssetStrategy.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetProcessFromSerializedData
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IO/IProcessAssetStrategy.cs
    startLine: 24
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.IO
  summary: Attempts to build a process from the provided serialized data.
  example: []
  syntax:
    content: IProcess GetProcessFromSerializedData(byte[] processData, IEnumerable<byte[]> additionalData, IProcessSerializer serializer)
    parameters:
    - id: processData
      type: System.Byte[]
    - id: additionalData
      type: System.Collections.Generic.IEnumerable{System.Byte[]}
    - id: serializer
      type: VRBuilder.Core.Serialization.IProcessSerializer
    return:
      type: VRBuilder.Core.IProcess
    content.vb: Function GetProcessFromSerializedData(processData As Byte(), additionalData As IEnumerable(Of Byte()), serializer As IProcessSerializer) As IProcess
  overload: VRBuilder.Core.IO.IProcessAssetStrategy.GetProcessFromSerializedData*
  nameWithType.vb: IProcessAssetStrategy.GetProcessFromSerializedData(Byte(), IEnumerable(Of Byte()), IProcessSerializer)
  fullName.vb: VRBuilder.Core.IO.IProcessAssetStrategy.GetProcessFromSerializedData(Byte(), System.Collections.Generic.IEnumerable(Of Byte()), VRBuilder.Core.Serialization.IProcessSerializer)
  name.vb: GetProcessFromSerializedData(Byte(), IEnumerable(Of Byte()), IProcessSerializer)
references:
- uid: VRBuilder.Core.IO
  commentId: N:VRBuilder.Core.IO
  href: VRBuilder.html
  name: VRBuilder.Core.IO
  nameWithType: VRBuilder.Core.IO
  fullName: VRBuilder.Core.IO
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.IO
    name: IO
    href: VRBuilder.Core.IO.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.IO
    name: IO
    href: VRBuilder.Core.IO.html
- uid: VRBuilder.Core.IO.IProcessAssetStrategy.CreateManifest*
  commentId: Overload:VRBuilder.Core.IO.IProcessAssetStrategy.CreateManifest
  href: VRBuilder.Core.IO.IProcessAssetStrategy.html#VRBuilder_Core_IO_IProcessAssetStrategy_CreateManifest
  name: CreateManifest
  nameWithType: IProcessAssetStrategy.CreateManifest
  fullName: VRBuilder.Core.IO.IProcessAssetStrategy.CreateManifest
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.IO.IProcessAssetStrategy.CreateSerializedProcessAssets*
  commentId: Overload:VRBuilder.Core.IO.IProcessAssetStrategy.CreateSerializedProcessAssets
  href: VRBuilder.Core.IO.IProcessAssetStrategy.html#VRBuilder_Core_IO_IProcessAssetStrategy_CreateSerializedProcessAssets_VRBuilder_Core_IProcess_VRBuilder_Core_Serialization_IProcessSerializer_
  name: CreateSerializedProcessAssets
  nameWithType: IProcessAssetStrategy.CreateSerializedProcessAssets
  fullName: VRBuilder.Core.IO.IProcessAssetStrategy.CreateSerializedProcessAssets
- uid: VRBuilder.Core.IProcess
  commentId: T:VRBuilder.Core.IProcess
  parent: VRBuilder.Core
  href: VRBuilder.Core.IProcess.html
  name: IProcess
  nameWithType: IProcess
  fullName: VRBuilder.Core.IProcess
- uid: VRBuilder.Core.Serialization.IProcessSerializer
  commentId: T:VRBuilder.Core.Serialization.IProcessSerializer
  parent: VRBuilder.Core.Serialization
  href: VRBuilder.Core.Serialization.IProcessSerializer.html
  name: IProcessSerializer
  nameWithType: IProcessSerializer
  fullName: VRBuilder.Core.Serialization.IProcessSerializer
- uid: System.Collections.Generic.IDictionary{System.String,System.Byte[]}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Byte[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, byte[]>
  nameWithType: IDictionary<string, byte[]>
  fullName: System.Collections.Generic.IDictionary<string, byte[]>
  nameWithType.vb: IDictionary(Of String, Byte())
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Byte())
  name.vb: IDictionary(Of String, Byte())
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: )
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  href: VRBuilder.html
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
- uid: VRBuilder.Core.Serialization
  commentId: N:VRBuilder.Core.Serialization
  href: VRBuilder.html
  name: VRBuilder.Core.Serialization
  nameWithType: VRBuilder.Core.Serialization
  fullName: VRBuilder.Core.Serialization
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Serialization
    name: Serialization
    href: VRBuilder.Core.Serialization.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.Serialization
    name: Serialization
    href: VRBuilder.Core.Serialization.html
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: VRBuilder.Core.IO.IProcessAssetStrategy.GetProcessFromSerializedData*
  commentId: Overload:VRBuilder.Core.IO.IProcessAssetStrategy.GetProcessFromSerializedData
  href: VRBuilder.Core.IO.IProcessAssetStrategy.html#VRBuilder_Core_IO_IProcessAssetStrategy_GetProcessFromSerializedData_System_Byte___System_Collections_Generic_IEnumerable_System_Byte____VRBuilder_Core_Serialization_IProcessSerializer_
  name: GetProcessFromSerializedData
  nameWithType: IProcessAssetStrategy.GetProcessFromSerializedData
  fullName: VRBuilder.Core.IO.IProcessAssetStrategy.GetProcessFromSerializedData
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Byte[]}
  commentId: T:System.Collections.Generic.IEnumerable{System.Byte[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<byte[]>
  nameWithType: IEnumerable<byte[]>
  fullName: System.Collections.Generic.IEnumerable<byte[]>
  nameWithType.vb: IEnumerable(Of Byte())
  fullName.vb: System.Collections.Generic.IEnumerable(Of Byte())
  name.vb: IEnumerable(Of Byte())
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
