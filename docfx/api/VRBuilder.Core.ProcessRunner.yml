### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.ProcessRunner
  commentId: T:VRBuilder.Core.ProcessRunner
  id: ProcessRunner
  parent: VRBuilder.Core
  children:
  - VRBuilder.Core.ProcessRunner.Current
  - VRBuilder.Core.ProcessRunner.Events
  - VRBuilder.Core.ProcessRunner.Initialize(VRBuilder.Core.IProcess)
  - VRBuilder.Core.ProcessRunner.IsRunning
  - VRBuilder.Core.ProcessRunner.Run
  - VRBuilder.Core.ProcessRunner.SetNextChapter(VRBuilder.Core.IChapter)
  - VRBuilder.Core.ProcessRunner.SkipChapters(System.Int32)
  - VRBuilder.Core.ProcessRunner.SkipCurrentChapter
  - VRBuilder.Core.ProcessRunner.SkipStep(VRBuilder.Core.ITransition)
  langs:
  - csharp
  - vb
  name: ProcessRunner
  nameWithType: ProcessRunner
  fullName: VRBuilder.Core.ProcessRunner
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/ProcessRunner.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessRunner
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessRunner.cs
    startLine: 17
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nRuns a <xref href=\"VRBuilder.Core.IProcess\" data-throw-if-not-resolved=\"false\"></xref>, expects to be run only once.\n"
  example: []
  syntax:
    content: public static class ProcessRunner
    content.vb: Public Module ProcessRunner
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VRBuilder.Core.ProcessRunner.Events
  commentId: P:VRBuilder.Core.ProcessRunner.Events
  id: Events
  parent: VRBuilder.Core.ProcessRunner
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: ProcessRunner.Events
  fullName: VRBuilder.Core.ProcessRunner.Events
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/ProcessRunner.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Events
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessRunner.cs
    startLine: 144
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nReturns all process events for the current scene.\n"
  example: []
  syntax:
    content: public static ProcessRunner.ProcessEvents Events { get; }
    parameters: []
    return:
      type: VRBuilder.Core.ProcessRunner.ProcessEvents
    content.vb: Public Shared ReadOnly Property Events As ProcessRunner.ProcessEvents
  overload: VRBuilder.Core.ProcessRunner.Events*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VRBuilder.Core.ProcessRunner.Current
  commentId: P:VRBuilder.Core.ProcessRunner.Current
  id: Current
  parent: VRBuilder.Core.ProcessRunner
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: ProcessRunner.Current
  fullName: VRBuilder.Core.ProcessRunner.Current
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/ProcessRunner.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Current
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessRunner.cs
    startLine: 166
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nCurrently running <xref href=\"VRBuilder.Core.IProcess\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static IProcess Current { get; }
    parameters: []
    return:
      type: VRBuilder.Core.IProcess
    content.vb: Public Shared ReadOnly Property Current As IProcess
  overload: VRBuilder.Core.ProcessRunner.Current*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VRBuilder.Core.ProcessRunner.IsRunning
  commentId: P:VRBuilder.Core.ProcessRunner.IsRunning
  id: IsRunning
  parent: VRBuilder.Core.ProcessRunner
  langs:
  - csharp
  - vb
  name: IsRunning
  nameWithType: ProcessRunner.IsRunning
  fullName: VRBuilder.Core.ProcessRunner.IsRunning
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/ProcessRunner.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsRunning
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessRunner.cs
    startLine: 177
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nReturns true if the current <xref href=\"VRBuilder.Core.IProcess\" data-throw-if-not-resolved=\"false\"></xref> is running.\n"
  example: []
  syntax:
    content: public static bool IsRunning { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsRunning As Boolean
  overload: VRBuilder.Core.ProcessRunner.IsRunning*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VRBuilder.Core.ProcessRunner.Initialize(VRBuilder.Core.IProcess)
  commentId: M:VRBuilder.Core.ProcessRunner.Initialize(VRBuilder.Core.IProcess)
  id: Initialize(VRBuilder.Core.IProcess)
  parent: VRBuilder.Core.ProcessRunner
  langs:
  - csharp
  - vb
  name: Initialize(IProcess)
  nameWithType: ProcessRunner.Initialize(IProcess)
  fullName: VRBuilder.Core.ProcessRunner.Initialize(VRBuilder.Core.IProcess)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/ProcessRunner.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Initialize
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessRunner.cs
    startLine: 189
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nInitializes the process runner by creating all required component in scene.\n"
  example: []
  syntax:
    content: public static void Initialize(IProcess process)
    parameters:
    - id: process
      type: VRBuilder.Core.IProcess
      description: The process which should be run.
    content.vb: Public Shared Sub Initialize(process As IProcess)
  overload: VRBuilder.Core.ProcessRunner.Initialize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Core.ProcessRunner.SkipChapters(System.Int32)
  commentId: M:VRBuilder.Core.ProcessRunner.SkipChapters(System.Int32)
  id: SkipChapters(System.Int32)
  parent: VRBuilder.Core.ProcessRunner
  langs:
  - csharp
  - vb
  name: SkipChapters(Int32)
  nameWithType: ProcessRunner.SkipChapters(Int32)
  fullName: VRBuilder.Core.ProcessRunner.SkipChapters(System.Int32)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/ProcessRunner.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SkipChapters
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessRunner.cs
    startLine: 200
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nSkips the given amount of chapters.\n"
  example: []
  syntax:
    content: public static void SkipChapters(int numberOfChapters)
    parameters:
    - id: numberOfChapters
      type: System.Int32
      description: Number of chapters.
    content.vb: Public Shared Sub SkipChapters(numberOfChapters As Integer)
  overload: VRBuilder.Core.ProcessRunner.SkipChapters*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Core.ProcessRunner.SkipCurrentChapter
  commentId: M:VRBuilder.Core.ProcessRunner.SkipCurrentChapter
  id: SkipCurrentChapter
  parent: VRBuilder.Core.ProcessRunner
  langs:
  - csharp
  - vb
  name: SkipCurrentChapter()
  nameWithType: ProcessRunner.SkipCurrentChapter()
  fullName: VRBuilder.Core.ProcessRunner.SkipCurrentChapter()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/ProcessRunner.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SkipCurrentChapter
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessRunner.cs
    startLine: 213
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nSkips the current chapters.\n"
  example: []
  syntax:
    content: public static void SkipCurrentChapter()
    content.vb: Public Shared Sub SkipCurrentChapter
  overload: VRBuilder.Core.ProcessRunner.SkipCurrentChapter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Core.ProcessRunner.SetNextChapter(VRBuilder.Core.IChapter)
  commentId: M:VRBuilder.Core.ProcessRunner.SetNextChapter(VRBuilder.Core.IChapter)
  id: SetNextChapter(VRBuilder.Core.IChapter)
  parent: VRBuilder.Core.ProcessRunner
  langs:
  - csharp
  - vb
  name: SetNextChapter(IChapter)
  nameWithType: ProcessRunner.SetNextChapter(IChapter)
  fullName: VRBuilder.Core.ProcessRunner.SetNextChapter(VRBuilder.Core.IChapter)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/ProcessRunner.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetNextChapter
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessRunner.cs
    startLine: 233
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nSets the specified chapter as the next chapter in the process.\n"
  example: []
  syntax:
    content: public static void SetNextChapter(IChapter chapter)
    parameters:
    - id: chapter
      type: VRBuilder.Core.IChapter
    content.vb: Public Shared Sub SetNextChapter(chapter As IChapter)
  overload: VRBuilder.Core.ProcessRunner.SetNextChapter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Core.ProcessRunner.SkipStep(VRBuilder.Core.ITransition)
  commentId: M:VRBuilder.Core.ProcessRunner.SkipStep(VRBuilder.Core.ITransition)
  id: SkipStep(VRBuilder.Core.ITransition)
  parent: VRBuilder.Core.ProcessRunner
  langs:
  - csharp
  - vb
  name: SkipStep(ITransition)
  nameWithType: ProcessRunner.SkipStep(ITransition)
  fullName: VRBuilder.Core.ProcessRunner.SkipStep(VRBuilder.Core.ITransition)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/ProcessRunner.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SkipStep
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessRunner.cs
    startLine: 242
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nSkips the current step and uses given transition.\n"
  example: []
  syntax:
    content: public static void SkipStep(ITransition transition)
    parameters:
    - id: transition
      type: VRBuilder.Core.ITransition
      description: Transition which should be used.
    content.vb: Public Shared Sub SkipStep(transition As ITransition)
  overload: VRBuilder.Core.ProcessRunner.SkipStep*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Core.ProcessRunner.Run
  commentId: M:VRBuilder.Core.ProcessRunner.Run
  id: Run
  parent: VRBuilder.Core.ProcessRunner
  langs:
  - csharp
  - vb
  name: Run()
  nameWithType: ProcessRunner.Run()
  fullName: VRBuilder.Core.ProcessRunner.Run()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/ProcessRunner.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Run
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessRunner.cs
    startLine: 258
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nStarts the <xref href=\"VRBuilder.Core.IProcess\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void Run()
    content.vb: Public Shared Sub Run
  overload: VRBuilder.Core.ProcessRunner.Run*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VRBuilder.Core.IProcess
  commentId: T:VRBuilder.Core.IProcess
  parent: VRBuilder.Core
  name: IProcess
  nameWithType: IProcess
  fullName: VRBuilder.Core.IProcess
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.ProcessRunner.Events*
  commentId: Overload:VRBuilder.Core.ProcessRunner.Events
  name: Events
  nameWithType: ProcessRunner.Events
  fullName: VRBuilder.Core.ProcessRunner.Events
- uid: VRBuilder.Core.ProcessRunner.ProcessEvents
  commentId: T:VRBuilder.Core.ProcessRunner.ProcessEvents
  parent: VRBuilder.Core
  name: ProcessRunner.ProcessEvents
  nameWithType: ProcessRunner.ProcessEvents
  fullName: VRBuilder.Core.ProcessRunner.ProcessEvents
- uid: VRBuilder.Core.ProcessRunner.Current*
  commentId: Overload:VRBuilder.Core.ProcessRunner.Current
  name: Current
  nameWithType: ProcessRunner.Current
  fullName: VRBuilder.Core.ProcessRunner.Current
- uid: VRBuilder.Core.ProcessRunner.IsRunning*
  commentId: Overload:VRBuilder.Core.ProcessRunner.IsRunning
  name: IsRunning
  nameWithType: ProcessRunner.IsRunning
  fullName: VRBuilder.Core.ProcessRunner.IsRunning
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.ProcessRunner.Initialize*
  commentId: Overload:VRBuilder.Core.ProcessRunner.Initialize
  name: Initialize
  nameWithType: ProcessRunner.Initialize
  fullName: VRBuilder.Core.ProcessRunner.Initialize
- uid: VRBuilder.Core.ProcessRunner.SkipChapters*
  commentId: Overload:VRBuilder.Core.ProcessRunner.SkipChapters
  name: SkipChapters
  nameWithType: ProcessRunner.SkipChapters
  fullName: VRBuilder.Core.ProcessRunner.SkipChapters
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VRBuilder.Core.ProcessRunner.SkipCurrentChapter*
  commentId: Overload:VRBuilder.Core.ProcessRunner.SkipCurrentChapter
  name: SkipCurrentChapter
  nameWithType: ProcessRunner.SkipCurrentChapter
  fullName: VRBuilder.Core.ProcessRunner.SkipCurrentChapter
- uid: VRBuilder.Core.ProcessRunner.SetNextChapter*
  commentId: Overload:VRBuilder.Core.ProcessRunner.SetNextChapter
  name: SetNextChapter
  nameWithType: ProcessRunner.SetNextChapter
  fullName: VRBuilder.Core.ProcessRunner.SetNextChapter
- uid: VRBuilder.Core.IChapter
  commentId: T:VRBuilder.Core.IChapter
  parent: VRBuilder.Core
  name: IChapter
  nameWithType: IChapter
  fullName: VRBuilder.Core.IChapter
- uid: VRBuilder.Core.ProcessRunner.SkipStep*
  commentId: Overload:VRBuilder.Core.ProcessRunner.SkipStep
  name: SkipStep
  nameWithType: ProcessRunner.SkipStep
  fullName: VRBuilder.Core.ProcessRunner.SkipStep
- uid: VRBuilder.Core.ITransition
  commentId: T:VRBuilder.Core.ITransition
  parent: VRBuilder.Core
  name: ITransition
  nameWithType: ITransition
  fullName: VRBuilder.Core.ITransition
- uid: VRBuilder.Core.ProcessRunner.Run*
  commentId: Overload:VRBuilder.Core.ProcessRunner.Run
  name: Run
  nameWithType: ProcessRunner.Run
  fullName: VRBuilder.Core.ProcessRunner.Run
