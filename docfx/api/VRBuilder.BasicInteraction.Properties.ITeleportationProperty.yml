### YamlMime:ManagedReference
items:
- uid: VRBuilder.BasicInteraction.Properties.ITeleportationProperty
  commentId: T:VRBuilder.BasicInteraction.Properties.ITeleportationProperty
  id: ITeleportationProperty
  parent: VRBuilder.BasicInteraction.Properties
  children:
  - VRBuilder.BasicInteraction.Properties.ITeleportationProperty.FastForwardTeleport
  - VRBuilder.BasicInteraction.Properties.ITeleportationProperty.ForceSetTeleported
  - VRBuilder.BasicInteraction.Properties.ITeleportationProperty.Initialize
  - VRBuilder.BasicInteraction.Properties.ITeleportationProperty.IsActive
  - VRBuilder.BasicInteraction.Properties.ITeleportationProperty.OnInitialized
  - VRBuilder.BasicInteraction.Properties.ITeleportationProperty.TeleportEnded
  - VRBuilder.BasicInteraction.Properties.ITeleportationProperty.WasUsedToTeleport
  langs:
  - csharp
  - vb
  name: ITeleportationProperty
  nameWithType: ITeleportationProperty
  fullName: VRBuilder.BasicInteraction.Properties.ITeleportationProperty
  type: Interface
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ITeleportationProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ITeleportationProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ITeleportationProperty.cs
    startLine: 10
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  summary: "\nInterface for <xref href=\"VRBuilder.Core.Properties.ISceneObjectProperty\" data-throw-if-not-resolved=\"false\"></xref>s that can be used for teleport into.\n"
  example: []
  syntax:
    content: 'public interface ITeleportationProperty : ISceneObjectProperty, ILockable'
    content.vb: >-
      Public Interface ITeleportationProperty

          Inherits ISceneObjectProperty, ILockable
  inheritedMembers:
  - VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
  - VRBuilder.Core.SceneObjects.ILockable.Locked
  - VRBuilder.Core.SceneObjects.ILockable.Unlocked
  - VRBuilder.Core.SceneObjects.ILockable.IsLocked
  - VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  - VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  - VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.TeleportEnded
  commentId: P:VRBuilder.BasicInteraction.Properties.ITeleportationProperty.TeleportEnded
  id: TeleportEnded
  parent: VRBuilder.BasicInteraction.Properties.ITeleportationProperty
  langs:
  - csharp
  - vb
  name: TeleportEnded
  nameWithType: ITeleportationProperty.TeleportEnded
  fullName: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.TeleportEnded
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ITeleportationProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: TeleportEnded
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ITeleportationProperty.cs
    startLine: 15
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  summary: "\nEmitted when a teleportation action into this <xref href=\"VRBuilder.Core.SceneObjects.ISceneObject\" data-throw-if-not-resolved=\"false\"></xref> was done.\n"
  example: []
  syntax:
    content: UnityEvent<TeleportationPropertyEventArgs> TeleportEnded { get; }
    parameters: []
    return:
      type: UnityEvent{VRBuilder.BasicInteraction.Properties.TeleportationPropertyEventArgs}
    content.vb: ReadOnly Property TeleportEnded As UnityEvent(Of TeleportationPropertyEventArgs)
  overload: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.TeleportEnded*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.OnInitialized
  commentId: P:VRBuilder.BasicInteraction.Properties.ITeleportationProperty.OnInitialized
  id: OnInitialized
  parent: VRBuilder.BasicInteraction.Properties.ITeleportationProperty
  langs:
  - csharp
  - vb
  name: OnInitialized
  nameWithType: ITeleportationProperty.OnInitialized
  fullName: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.OnInitialized
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ITeleportationProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnInitialized
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ITeleportationProperty.cs
    startLine: 20
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  summary: "\nEmitted when the teleportation property is initialized.\n"
  example: []
  syntax:
    content: UnityEvent OnInitialized { get; }
    parameters: []
    return:
      type: UnityEvent
    content.vb: ReadOnly Property OnInitialized As UnityEvent
  overload: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.OnInitialized*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.IsActive
  commentId: P:VRBuilder.BasicInteraction.Properties.ITeleportationProperty.IsActive
  id: IsActive
  parent: VRBuilder.BasicInteraction.Properties.ITeleportationProperty
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: ITeleportationProperty.IsActive
  fullName: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.IsActive
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ITeleportationProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsActive
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ITeleportationProperty.cs
    startLine: 25
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  summary: "\nTrue if the teleportation property is ready to be teleported to.\n"
  example: []
  syntax:
    content: bool IsActive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsActive As Boolean
  overload: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.IsActive*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.WasUsedToTeleport
  commentId: P:VRBuilder.BasicInteraction.Properties.ITeleportationProperty.WasUsedToTeleport
  id: WasUsedToTeleport
  parent: VRBuilder.BasicInteraction.Properties.ITeleportationProperty
  langs:
  - csharp
  - vb
  name: WasUsedToTeleport
  nameWithType: ITeleportationProperty.WasUsedToTeleport
  fullName: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.WasUsedToTeleport
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ITeleportationProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: WasUsedToTeleport
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ITeleportationProperty.cs
    startLine: 30
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  summary: "\nTrue if a teleportation action into this <xref href=\"VRBuilder.BasicInteraction.Properties.ITeleportationProperty\" data-throw-if-not-resolved=\"false\"></xref> was done.\n"
  example: []
  syntax:
    content: bool WasUsedToTeleport { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property WasUsedToTeleport As Boolean
  overload: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.WasUsedToTeleport*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.Initialize
  commentId: M:VRBuilder.BasicInteraction.Properties.ITeleportationProperty.Initialize
  id: Initialize
  parent: VRBuilder.BasicInteraction.Properties.ITeleportationProperty
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: ITeleportationProperty.Initialize()
  fullName: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.Initialize()
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ITeleportationProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Initialize
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ITeleportationProperty.cs
    startLine: 38
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  summary: "\nSets <xref href=\"VRBuilder.BasicInteraction.Properties.ITeleportationProperty.WasUsedToTeleport\" data-throw-if-not-resolved=\"false\"></xref> to true.\n"
  remarks: "\nThis method is called every time a <xref href=\"VRBuilder.BasicInteraction.Conditions.TeleportCondition\" data-throw-if-not-resolved=\"false\"></xref> is activate.\n"
  example: []
  syntax:
    content: void Initialize()
    content.vb: Sub Initialize
  overload: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.Initialize*
- uid: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.FastForwardTeleport
  commentId: M:VRBuilder.BasicInteraction.Properties.ITeleportationProperty.FastForwardTeleport
  id: FastForwardTeleport
  parent: VRBuilder.BasicInteraction.Properties.ITeleportationProperty
  langs:
  - csharp
  - vb
  name: FastForwardTeleport()
  nameWithType: ITeleportationProperty.FastForwardTeleport()
  fullName: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.FastForwardTeleport()
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ITeleportationProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: FastForwardTeleport
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ITeleportationProperty.cs
    startLine: 43
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  summary: "\nInstantaneously simulate that the object was used.\n"
  example: []
  syntax:
    content: void FastForwardTeleport()
    content.vb: Sub FastForwardTeleport
  overload: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.FastForwardTeleport*
- uid: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.ForceSetTeleported
  commentId: M:VRBuilder.BasicInteraction.Properties.ITeleportationProperty.ForceSetTeleported
  id: ForceSetTeleported
  parent: VRBuilder.BasicInteraction.Properties.ITeleportationProperty
  langs:
  - csharp
  - vb
  name: ForceSetTeleported()
  nameWithType: ITeleportationProperty.ForceSetTeleported()
  fullName: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.ForceSetTeleported()
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ITeleportationProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ForceSetTeleported
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ITeleportationProperty.cs
    startLine: 48
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  summary: "\nForces the property to the teleported state.\n"
  example: []
  syntax:
    content: void ForceSetTeleported()
    content.vb: Sub ForceSetTeleported
  overload: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.ForceSetTeleported*
references:
- uid: VRBuilder.Core.Properties.ISceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ISceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ISceneObjectProperty
  nameWithType: ISceneObjectProperty
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty
- uid: VRBuilder.BasicInteraction.Properties
  commentId: N:VRBuilder.BasicInteraction.Properties
  name: VRBuilder.BasicInteraction.Properties
  nameWithType: VRBuilder.BasicInteraction.Properties
  fullName: VRBuilder.BasicInteraction.Properties
- uid: VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
  commentId: P:VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
  parent: VRBuilder.Core.Properties.ISceneObjectProperty
  name: SceneObject
  nameWithType: ISceneObjectProperty.SceneObject
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
- uid: VRBuilder.Core.SceneObjects.ILockable.Locked
  commentId: E:VRBuilder.Core.SceneObjects.ILockable.Locked
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: Locked
  nameWithType: ILockable.Locked
  fullName: VRBuilder.Core.SceneObjects.ILockable.Locked
- uid: VRBuilder.Core.SceneObjects.ILockable.Unlocked
  commentId: E:VRBuilder.Core.SceneObjects.ILockable.Unlocked
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: Unlocked
  nameWithType: ILockable.Unlocked
  fullName: VRBuilder.Core.SceneObjects.ILockable.Unlocked
- uid: VRBuilder.Core.SceneObjects.ILockable.IsLocked
  commentId: P:VRBuilder.Core.SceneObjects.ILockable.IsLocked
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: IsLocked
  nameWithType: ILockable.IsLocked
  fullName: VRBuilder.Core.SceneObjects.ILockable.IsLocked
- uid: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  commentId: M:VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  parent: VRBuilder.Core.SceneObjects.ILockable
  isExternal: true
  name: SetLocked(Boolean)
  nameWithType: ILockable.SetLocked(Boolean)
  fullName: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
    name: SetLocked
    nameWithType: ILockable.SetLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.SetLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
    name: SetLocked
    nameWithType: ILockable.SetLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.SetLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  commentId: M:VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  parent: VRBuilder.Core.SceneObjects.ILockable
  isExternal: true
  name: RequestLocked(Boolean, IStepData)
  nameWithType: ILockable.RequestLocked(Boolean, IStepData)
  fullName: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean, VRBuilder.Core.IStepData)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
    name: RequestLocked
    nameWithType: ILockable.RequestLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.RequestLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
    name: RequestLocked
    nameWithType: ILockable.RequestLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.RequestLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  commentId: M:VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: RemoveUnlocker(IStepData)
  nameWithType: ILockable.RemoveUnlocker(IStepData)
  fullName: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
    name: RemoveUnlocker
    nameWithType: ILockable.RemoveUnlocker
    fullName: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
    name: RemoveUnlocker
    nameWithType: ILockable.RemoveUnlocker
    fullName: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties
  commentId: N:VRBuilder.Core.Properties
  name: VRBuilder.Core.Properties
  nameWithType: VRBuilder.Core.Properties
  fullName: VRBuilder.Core.Properties
- uid: VRBuilder.Core.SceneObjects.ILockable
  commentId: T:VRBuilder.Core.SceneObjects.ILockable
  parent: VRBuilder.Core.SceneObjects
  name: ILockable
  nameWithType: ILockable
  fullName: VRBuilder.Core.SceneObjects.ILockable
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: VRBuilder.Core.SceneObjects.ISceneObject
  commentId: T:VRBuilder.Core.SceneObjects.ISceneObject
  parent: VRBuilder.Core.SceneObjects
  name: ISceneObject
  nameWithType: ISceneObject
  fullName: VRBuilder.Core.SceneObjects.ISceneObject
- uid: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.TeleportEnded*
  commentId: Overload:VRBuilder.BasicInteraction.Properties.ITeleportationProperty.TeleportEnded
  name: TeleportEnded
  nameWithType: ITeleportationProperty.TeleportEnded
  fullName: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.TeleportEnded
- uid: UnityEvent{VRBuilder.BasicInteraction.Properties.TeleportationPropertyEventArgs}
  commentId: '!:UnityEvent{VRBuilder.BasicInteraction.Properties.TeleportationPropertyEventArgs}'
  definition: UnityEvent`1
  name: UnityEvent<TeleportationPropertyEventArgs>
  nameWithType: UnityEvent<TeleportationPropertyEventArgs>
  fullName: UnityEvent<VRBuilder.BasicInteraction.Properties.TeleportationPropertyEventArgs>
  nameWithType.vb: UnityEvent(Of TeleportationPropertyEventArgs)
  fullName.vb: UnityEvent(Of VRBuilder.BasicInteraction.Properties.TeleportationPropertyEventArgs)
  name.vb: UnityEvent(Of TeleportationPropertyEventArgs)
  spec.csharp:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.BasicInteraction.Properties.TeleportationPropertyEventArgs
    name: TeleportationPropertyEventArgs
    nameWithType: TeleportationPropertyEventArgs
    fullName: VRBuilder.BasicInteraction.Properties.TeleportationPropertyEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.BasicInteraction.Properties.TeleportationPropertyEventArgs
    name: TeleportationPropertyEventArgs
    nameWithType: TeleportationPropertyEventArgs
    fullName: VRBuilder.BasicInteraction.Properties.TeleportationPropertyEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEvent`1
  isExternal: true
  name: UnityEvent<>
  nameWithType: UnityEvent<>
  fullName: UnityEvent<>
  nameWithType.vb: UnityEvent(Of )
  fullName.vb: UnityEvent(Of )
  name.vb: UnityEvent(Of )
  spec.csharp:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.OnInitialized*
  commentId: Overload:VRBuilder.BasicInteraction.Properties.ITeleportationProperty.OnInitialized
  name: OnInitialized
  nameWithType: ITeleportationProperty.OnInitialized
  fullName: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.OnInitialized
- uid: UnityEvent
  isExternal: true
  name: UnityEvent
  nameWithType: UnityEvent
  fullName: UnityEvent
- uid: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.IsActive*
  commentId: Overload:VRBuilder.BasicInteraction.Properties.ITeleportationProperty.IsActive
  name: IsActive
  nameWithType: ITeleportationProperty.IsActive
  fullName: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.IsActive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.BasicInteraction.Properties.ITeleportationProperty
  commentId: T:VRBuilder.BasicInteraction.Properties.ITeleportationProperty
  parent: VRBuilder.BasicInteraction.Properties
  name: ITeleportationProperty
  nameWithType: ITeleportationProperty
  fullName: VRBuilder.BasicInteraction.Properties.ITeleportationProperty
- uid: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.WasUsedToTeleport*
  commentId: Overload:VRBuilder.BasicInteraction.Properties.ITeleportationProperty.WasUsedToTeleport
  name: WasUsedToTeleport
  nameWithType: ITeleportationProperty.WasUsedToTeleport
  fullName: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.WasUsedToTeleport
- uid: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.WasUsedToTeleport
  commentId: P:VRBuilder.BasicInteraction.Properties.ITeleportationProperty.WasUsedToTeleport
  parent: VRBuilder.BasicInteraction.Properties.ITeleportationProperty
  name: WasUsedToTeleport
  nameWithType: ITeleportationProperty.WasUsedToTeleport
  fullName: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.WasUsedToTeleport
- uid: VRBuilder.BasicInteraction.Conditions.TeleportCondition
  commentId: T:VRBuilder.BasicInteraction.Conditions.TeleportCondition
  name: TeleportCondition
  nameWithType: TeleportCondition
  fullName: VRBuilder.BasicInteraction.Conditions.TeleportCondition
- uid: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.Initialize*
  commentId: Overload:VRBuilder.BasicInteraction.Properties.ITeleportationProperty.Initialize
  name: Initialize
  nameWithType: ITeleportationProperty.Initialize
  fullName: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.Initialize
- uid: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.FastForwardTeleport*
  commentId: Overload:VRBuilder.BasicInteraction.Properties.ITeleportationProperty.FastForwardTeleport
  name: FastForwardTeleport
  nameWithType: ITeleportationProperty.FastForwardTeleport
  fullName: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.FastForwardTeleport
- uid: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.ForceSetTeleported*
  commentId: Overload:VRBuilder.BasicInteraction.Properties.ITeleportationProperty.ForceSetTeleported
  name: ForceSetTeleported
  nameWithType: ITeleportationProperty.ForceSetTeleported
  fullName: VRBuilder.BasicInteraction.Properties.ITeleportationProperty.ForceSetTeleported
