### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.IProcessData
  commentId: T:VRBuilder.Core.IProcessData
  id: IProcessData
  parent: VRBuilder.Core
  children:
  - VRBuilder.Core.IProcessData.Chapters
  - VRBuilder.Core.IProcessData.FirstChapter
  langs:
  - csharp
  - vb
  name: IProcessData
  nameWithType: IProcessData
  fullName: VRBuilder.Core.IProcessData
  type: Interface
  source:
    remote:
      path: Source/Core/Runtime/IProcessData.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IProcessData
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IProcessData.cs
    startLine: 12
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nThe data class for a <xref href=\"VRBuilder.Core.IProcess\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public interface IProcessData : IEntityNonLinearSequenceDataWithMode<IChapter>, IEntitySequenceDataWithMode<IChapter>, IEntitySequenceData<IChapter>, IEntityCollectionData<IChapter>, IEntityCollectionData, IEntitySequenceData, IModeData, IRenameableData, INamedData, IData'
    content.vb: >-
      Public Interface IProcessData

          Inherits IEntityNonLinearSequenceDataWithMode(Of IChapter), IRenameableData
  inheritedMembers:
  - VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode{VRBuilder.Core.IChapter}.OverrideNext
  - VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IChapter}.Current
  - VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IChapter}.GetChildren
  - VRBuilder.Core.Configuration.Modes.IModeData.Mode
  - VRBuilder.Core.IRenameableData.SetName(System.String)
  - VRBuilder.Core.INamedData.Name
  - VRBuilder.Core.IData.Metadata
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VRBuilder.Core.IProcessData.Chapters
  commentId: P:VRBuilder.Core.IProcessData.Chapters
  id: Chapters
  parent: VRBuilder.Core.IProcessData
  langs:
  - csharp
  - vb
  name: Chapters
  nameWithType: IProcessData.Chapters
  fullName: VRBuilder.Core.IProcessData.Chapters
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/IProcessData.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Chapters
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IProcessData.cs
    startLine: 17
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nThe list of the <xref href=\"VRBuilder.Core.IChapter\" data-throw-if-not-resolved=\"false\"></xref>s.\n"
  example: []
  syntax:
    content: IList<IChapter> Chapters { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{VRBuilder.Core.IChapter}
    content.vb: Property Chapters As IList(Of IChapter)
  overload: VRBuilder.Core.IProcessData.Chapters*
  modifiers.csharp:
  - get
  - set
- uid: VRBuilder.Core.IProcessData.FirstChapter
  commentId: P:VRBuilder.Core.IProcessData.FirstChapter
  id: FirstChapter
  parent: VRBuilder.Core.IProcessData
  langs:
  - csharp
  - vb
  name: FirstChapter
  nameWithType: IProcessData.FirstChapter
  fullName: VRBuilder.Core.IProcessData.FirstChapter
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/IProcessData.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: FirstChapter
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IProcessData.cs
    startLine: 22
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nThe <xref href=\"VRBuilder.Core.IChapter\" data-throw-if-not-resolved=\"false\"></xref> to start execution from.\n"
  example: []
  syntax:
    content: IChapter FirstChapter { get; }
    parameters: []
    return:
      type: VRBuilder.Core.IChapter
    content.vb: ReadOnly Property FirstChapter As IChapter
  overload: VRBuilder.Core.IProcessData.FirstChapter*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: VRBuilder.Core.IProcess
  commentId: T:VRBuilder.Core.IProcess
  parent: VRBuilder.Core
  name: IProcess
  nameWithType: IProcess
  fullName: VRBuilder.Core.IProcess
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode{VRBuilder.Core.IChapter}.OverrideNext
  commentId: P:VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode{VRBuilder.Core.IChapter}.OverrideNext
  parent: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode{VRBuilder.Core.IChapter}
  definition: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode`1.OverrideNext
  name: OverrideNext
  nameWithType: IEntityNonLinearSequenceDataWithMode<IChapter>.OverrideNext
  fullName: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode<VRBuilder.Core.IChapter>.OverrideNext
  nameWithType.vb: IEntityNonLinearSequenceDataWithMode(Of IChapter).OverrideNext
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode(Of VRBuilder.Core.IChapter).OverrideNext
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IChapter}.Current
  commentId: P:VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IChapter}.Current
  parent: VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IChapter}
  definition: VRBuilder.Core.EntityOwners.IEntitySequenceData`1.Current
  name: Current
  nameWithType: IEntitySequenceData<IChapter>.Current
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData<VRBuilder.Core.IChapter>.Current
  nameWithType.vb: IEntitySequenceData(Of IChapter).Current
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData(Of VRBuilder.Core.IChapter).Current
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IChapter}.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IChapter}.GetChildren
  parent: VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IChapter}
  definition: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: IEntityCollectionData<IChapter>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<VRBuilder.Core.IChapter>.GetChildren()
  nameWithType.vb: IEntityCollectionData(Of IChapter).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of VRBuilder.Core.IChapter).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData<IChapter>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<VRBuilder.Core.IChapter>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData(Of IChapter).GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of VRBuilder.Core.IChapter).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes.IModeData.Mode
  commentId: P:VRBuilder.Core.Configuration.Modes.IModeData.Mode
  parent: VRBuilder.Core.Configuration.Modes.IModeData
  name: Mode
  nameWithType: IModeData.Mode
  fullName: VRBuilder.Core.Configuration.Modes.IModeData.Mode
- uid: VRBuilder.Core.IRenameableData.SetName(System.String)
  commentId: M:VRBuilder.Core.IRenameableData.SetName(System.String)
  parent: VRBuilder.Core.IRenameableData
  isExternal: true
  name: SetName(String)
  nameWithType: IRenameableData.SetName(String)
  fullName: VRBuilder.Core.IRenameableData.SetName(System.String)
  spec.csharp:
  - uid: VRBuilder.Core.IRenameableData.SetName(System.String)
    name: SetName
    nameWithType: IRenameableData.SetName
    fullName: VRBuilder.Core.IRenameableData.SetName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IRenameableData.SetName(System.String)
    name: SetName
    nameWithType: IRenameableData.SetName
    fullName: VRBuilder.Core.IRenameableData.SetName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.INamedData.Name
  commentId: P:VRBuilder.Core.INamedData.Name
  parent: VRBuilder.Core.INamedData
  name: Name
  nameWithType: INamedData.Name
  fullName: VRBuilder.Core.INamedData.Name
- uid: VRBuilder.Core.IData.Metadata
  commentId: P:VRBuilder.Core.IData.Metadata
  parent: VRBuilder.Core.IData
  name: Metadata
  nameWithType: IData.Metadata
  fullName: VRBuilder.Core.IData.Metadata
- uid: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode`1.OverrideNext
  commentId: P:VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode`1.OverrideNext
  name: OverrideNext
  nameWithType: IEntityNonLinearSequenceDataWithMode<TEntity>.OverrideNext
  fullName: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode<TEntity>.OverrideNext
  nameWithType.vb: IEntityNonLinearSequenceDataWithMode(Of TEntity).OverrideNext
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode(Of TEntity).OverrideNext
- uid: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode{VRBuilder.Core.IChapter}
  commentId: T:VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode{VRBuilder.Core.IChapter}
  parent: VRBuilder.Core.EntityOwners
  definition: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode`1
  name: IEntityNonLinearSequenceDataWithMode<IChapter>
  nameWithType: IEntityNonLinearSequenceDataWithMode<IChapter>
  fullName: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode<VRBuilder.Core.IChapter>
  nameWithType.vb: IEntityNonLinearSequenceDataWithMode(Of IChapter)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode(Of VRBuilder.Core.IChapter)
  name.vb: IEntityNonLinearSequenceDataWithMode(Of IChapter)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode`1
    name: IEntityNonLinearSequenceDataWithMode
    nameWithType: IEntityNonLinearSequenceDataWithMode
    fullName: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode`1
    name: IEntityNonLinearSequenceDataWithMode
    nameWithType: IEntityNonLinearSequenceDataWithMode
    fullName: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1.Current
  commentId: P:VRBuilder.Core.EntityOwners.IEntitySequenceData`1.Current
  name: Current
  nameWithType: IEntitySequenceData<TEntity>.Current
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>.Current
  nameWithType.vb: IEntitySequenceData(Of TEntity).Current
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData(Of TEntity).Current
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IChapter}
  commentId: T:VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IChapter}
  parent: VRBuilder.Core.EntityOwners
  definition: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
  name: IEntitySequenceData<IChapter>
  nameWithType: IEntitySequenceData<IChapter>
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData<VRBuilder.Core.IChapter>
  nameWithType.vb: IEntitySequenceData(Of IChapter)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData(Of VRBuilder.Core.IChapter)
  name.vb: IEntitySequenceData(Of IChapter)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
    name: IEntitySequenceData
    nameWithType: IEntitySequenceData
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
    name: IEntitySequenceData
    nameWithType: IEntitySequenceData
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: IEntityCollectionData<TEntity>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren()
  nameWithType.vb: IEntityCollectionData(Of TEntity).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData<TEntity>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData(Of TEntity).GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IChapter}
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IChapter}
  parent: VRBuilder.Core.EntityOwners
  definition: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  name: IEntityCollectionData<IChapter>
  nameWithType: IEntityCollectionData<IChapter>
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<VRBuilder.Core.IChapter>
  nameWithType.vb: IEntityCollectionData(Of IChapter)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of VRBuilder.Core.IChapter)
  name.vb: IEntityCollectionData(Of IChapter)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes.IModeData
  commentId: T:VRBuilder.Core.Configuration.Modes.IModeData
  parent: VRBuilder.Core.Configuration.Modes
  name: IModeData
  nameWithType: IModeData
  fullName: VRBuilder.Core.Configuration.Modes.IModeData
- uid: VRBuilder.Core.IRenameableData
  commentId: T:VRBuilder.Core.IRenameableData
  parent: VRBuilder.Core
  name: IRenameableData
  nameWithType: IRenameableData
  fullName: VRBuilder.Core.IRenameableData
- uid: VRBuilder.Core.INamedData
  commentId: T:VRBuilder.Core.INamedData
  parent: VRBuilder.Core
  name: INamedData
  nameWithType: INamedData
  fullName: VRBuilder.Core.INamedData
- uid: VRBuilder.Core.IData
  commentId: T:VRBuilder.Core.IData
  parent: VRBuilder.Core
  name: IData
  nameWithType: IData
  fullName: VRBuilder.Core.IData
- uid: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode`1
  commentId: T:VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode`1
  name: IEntityNonLinearSequenceDataWithMode<TEntity>
  nameWithType: IEntityNonLinearSequenceDataWithMode<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode<TEntity>
  nameWithType.vb: IEntityNonLinearSequenceDataWithMode(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode(Of TEntity)
  name.vb: IEntityNonLinearSequenceDataWithMode(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode`1
    name: IEntityNonLinearSequenceDataWithMode
    nameWithType: IEntityNonLinearSequenceDataWithMode
    fullName: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode`1
    name: IEntityNonLinearSequenceDataWithMode
    nameWithType: IEntityNonLinearSequenceDataWithMode
    fullName: VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners
  commentId: N:VRBuilder.Core.EntityOwners
  name: VRBuilder.Core.EntityOwners
  nameWithType: VRBuilder.Core.EntityOwners
  fullName: VRBuilder.Core.EntityOwners
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
  commentId: T:VRBuilder.Core.EntityOwners.IEntitySequenceData`1
  name: IEntitySequenceData<TEntity>
  nameWithType: IEntitySequenceData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>
  nameWithType.vb: IEntitySequenceData(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData(Of TEntity)
  name.vb: IEntitySequenceData(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
    name: IEntitySequenceData
    nameWithType: IEntitySequenceData
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
    name: IEntitySequenceData
    nameWithType: IEntitySequenceData
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  name: IEntityCollectionData<TEntity>
  nameWithType: IEntityCollectionData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>
  nameWithType.vb: IEntityCollectionData(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity)
  name.vb: IEntityCollectionData(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes
  commentId: N:VRBuilder.Core.Configuration.Modes
  name: VRBuilder.Core.Configuration.Modes
  nameWithType: VRBuilder.Core.Configuration.Modes
  fullName: VRBuilder.Core.Configuration.Modes
- uid: VRBuilder.Core.IChapter
  commentId: T:VRBuilder.Core.IChapter
  parent: VRBuilder.Core
  name: IChapter
  nameWithType: IChapter
  fullName: VRBuilder.Core.IChapter
- uid: VRBuilder.Core.IProcessData.Chapters*
  commentId: Overload:VRBuilder.Core.IProcessData.Chapters
  name: Chapters
  nameWithType: IProcessData.Chapters
  fullName: VRBuilder.Core.IProcessData.Chapters
- uid: System.Collections.Generic.IList{VRBuilder.Core.IChapter}
  commentId: T:System.Collections.Generic.IList{VRBuilder.Core.IChapter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IChapter>
  nameWithType: IList<IChapter>
  fullName: System.Collections.Generic.IList<VRBuilder.Core.IChapter>
  nameWithType.vb: IList(Of IChapter)
  fullName.vb: System.Collections.Generic.IList(Of VRBuilder.Core.IChapter)
  name.vb: IList(Of IChapter)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Core.IProcessData.FirstChapter*
  commentId: Overload:VRBuilder.Core.IProcessData.FirstChapter
  name: FirstChapter
  nameWithType: IProcessData.FirstChapter
  fullName: VRBuilder.Core.IProcessData.FirstChapter
