### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Properties.ParticleSystemProperty
  commentId: T:VRBuilder.Core.Properties.ParticleSystemProperty
  id: ParticleSystemProperty
  parent: VRBuilder.Core.Properties
  children:
  - VRBuilder.Core.Properties.ParticleSystemProperty.IsEmitting
  - VRBuilder.Core.Properties.ParticleSystemProperty.ParticleSystem
  - VRBuilder.Core.Properties.ParticleSystemProperty.StartedEmission
  - VRBuilder.Core.Properties.ParticleSystemProperty.StartEmission
  - VRBuilder.Core.Properties.ParticleSystemProperty.StopEmission
  - VRBuilder.Core.Properties.ParticleSystemProperty.StoppedEmission
  langs:
  - csharp
  - vb
  name: ParticleSystemProperty
  nameWithType: ParticleSystemProperty
  fullName: VRBuilder.Core.Properties.ParticleSystemProperty
  type: Class
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/ParticleSystemProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ParticleSystemProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/ParticleSystemProperty.cs
    startLine: 5
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  syntax:
    content: 'public class ParticleSystemProperty : ProcessSceneObjectProperty, IParticleSystemProperty, ISceneObjectProperty'
    content.vb: >-
      Public Class ParticleSystemProperty
          Inherits ProcessSceneObjectProperty
          Implements IParticleSystemProperty, ISceneObjectProperty
  inheritance:
  - System.Object
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty
  implements:
  - VRBuilder.Core.Properties.IParticleSystemProperty
  - VRBuilder.Core.Properties.ISceneObjectProperty
  inheritedMembers:
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  extensionMethods:
  - VRBuilder.Core.Properties.ISceneObjectProperty.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.Properties.ParticleSystemProperty.StartedEmission
  commentId: P:VRBuilder.Core.Properties.ParticleSystemProperty.StartedEmission
  id: StartedEmission
  parent: VRBuilder.Core.Properties.ParticleSystemProperty
  langs:
  - csharp
  - vb
  name: StartedEmission
  nameWithType: ParticleSystemProperty.StartedEmission
  fullName: VRBuilder.Core.Properties.ParticleSystemProperty.StartedEmission
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/ParticleSystemProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StartedEmission
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/ParticleSystemProperty.cs
    startLine: 16
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nCalled when the system starts emitting particles.\n"
  example: []
  syntax:
    content: public UnityEvent<ParticleSystemPropertyEventArgs> StartedEmission { get; }
    parameters: []
    return:
      type: UnityEvent{VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs}
    content.vb: Public ReadOnly Property StartedEmission As UnityEvent(Of ParticleSystemPropertyEventArgs)
  overload: VRBuilder.Core.Properties.ParticleSystemProperty.StartedEmission*
  implements:
  - VRBuilder.Core.Properties.IParticleSystemProperty.StartedEmission
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.Properties.ParticleSystemProperty.StoppedEmission
  commentId: P:VRBuilder.Core.Properties.ParticleSystemProperty.StoppedEmission
  id: StoppedEmission
  parent: VRBuilder.Core.Properties.ParticleSystemProperty
  langs:
  - csharp
  - vb
  name: StoppedEmission
  nameWithType: ParticleSystemProperty.StoppedEmission
  fullName: VRBuilder.Core.Properties.ParticleSystemProperty.StoppedEmission
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/ParticleSystemProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StoppedEmission
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/ParticleSystemProperty.cs
    startLine: 19
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nCalled when the system stops emitting particles.\n"
  example: []
  syntax:
    content: public UnityEvent<ParticleSystemPropertyEventArgs> StoppedEmission { get; }
    parameters: []
    return:
      type: UnityEvent{VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs}
    content.vb: Public ReadOnly Property StoppedEmission As UnityEvent(Of ParticleSystemPropertyEventArgs)
  overload: VRBuilder.Core.Properties.ParticleSystemProperty.StoppedEmission*
  implements:
  - VRBuilder.Core.Properties.IParticleSystemProperty.StoppedEmission
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.Properties.ParticleSystemProperty.ParticleSystem
  commentId: P:VRBuilder.Core.Properties.ParticleSystemProperty.ParticleSystem
  id: ParticleSystem
  parent: VRBuilder.Core.Properties.ParticleSystemProperty
  langs:
  - csharp
  - vb
  name: ParticleSystem
  nameWithType: ParticleSystemProperty.ParticleSystem
  fullName: VRBuilder.Core.Properties.ParticleSystemProperty.ParticleSystem
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/ParticleSystemProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ParticleSystem
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/ParticleSystemProperty.cs
    startLine: 26
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nThe particle system associated with this property.\n"
  example: []
  syntax:
    content: public ParticleSystem ParticleSystem { get; }
    parameters: []
    return:
      type: ParticleSystem
    content.vb: Public ReadOnly Property ParticleSystem As ParticleSystem
  overload: VRBuilder.Core.Properties.ParticleSystemProperty.ParticleSystem*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.Properties.ParticleSystemProperty.IsEmitting
  commentId: P:VRBuilder.Core.Properties.ParticleSystemProperty.IsEmitting
  id: IsEmitting
  parent: VRBuilder.Core.Properties.ParticleSystemProperty
  langs:
  - csharp
  - vb
  name: IsEmitting
  nameWithType: ParticleSystemProperty.IsEmitting
  fullName: VRBuilder.Core.Properties.ParticleSystemProperty.IsEmitting
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/ParticleSystemProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsEmitting
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/ParticleSystemProperty.cs
    startLine: 40
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nTrue if the system is emitting particles.\n"
  example: []
  syntax:
    content: public bool IsEmitting { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmitting As Boolean
  overload: VRBuilder.Core.Properties.ParticleSystemProperty.IsEmitting*
  implements:
  - VRBuilder.Core.Properties.IParticleSystemProperty.IsEmitting
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.Properties.ParticleSystemProperty.StartEmission
  commentId: M:VRBuilder.Core.Properties.ParticleSystemProperty.StartEmission
  id: StartEmission
  parent: VRBuilder.Core.Properties.ParticleSystemProperty
  langs:
  - csharp
  - vb
  name: StartEmission()
  nameWithType: ParticleSystemProperty.StartEmission()
  fullName: VRBuilder.Core.Properties.ParticleSystemProperty.StartEmission()
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/ParticleSystemProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StartEmission
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/ParticleSystemProperty.cs
    startLine: 43
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nStart emitting particles.\n"
  example: []
  syntax:
    content: public void StartEmission()
    content.vb: Public Sub StartEmission
  overload: VRBuilder.Core.Properties.ParticleSystemProperty.StartEmission*
  implements:
  - VRBuilder.Core.Properties.IParticleSystemProperty.StartEmission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Properties.ParticleSystemProperty.StopEmission
  commentId: M:VRBuilder.Core.Properties.ParticleSystemProperty.StopEmission
  id: StopEmission
  parent: VRBuilder.Core.Properties.ParticleSystemProperty
  langs:
  - csharp
  - vb
  name: StopEmission()
  nameWithType: ParticleSystemProperty.StopEmission()
  fullName: VRBuilder.Core.Properties.ParticleSystemProperty.StopEmission()
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/ParticleSystemProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StopEmission
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Particles/ParticleSystemProperty.cs
    startLine: 50
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nStop emitting particles.\n"
  example: []
  syntax:
    content: public void StopEmission()
    content.vb: Public Sub StopEmission
  overload: VRBuilder.Core.Properties.ParticleSystemProperty.StopEmission*
  implements:
  - VRBuilder.Core.Properties.IParticleSystemProperty.StopEmission
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Core.Properties
  commentId: N:VRBuilder.Core.Properties
  name: VRBuilder.Core.Properties
  nameWithType: VRBuilder.Core.Properties
  fullName: VRBuilder.Core.Properties
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ProcessSceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ProcessSceneObjectProperty
  nameWithType: ProcessSceneObjectProperty
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty
- uid: VRBuilder.Core.Properties.IParticleSystemProperty
  commentId: T:VRBuilder.Core.Properties.IParticleSystemProperty
  parent: VRBuilder.Core.Properties
  name: IParticleSystemProperty
  nameWithType: IParticleSystemProperty
  fullName: VRBuilder.Core.Properties.IParticleSystemProperty
- uid: VRBuilder.Core.Properties.ISceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ISceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ISceneObjectProperty
  nameWithType: ISceneObjectProperty
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  commentId: P:VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: SceneObject
  nameWithType: ProcessSceneObjectProperty.SceneObject
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  commentId: M:VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: OnEnable()
  nameWithType: ProcessSceneObjectProperty.OnEnable()
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
    name: OnEnable
    nameWithType: ProcessSceneObjectProperty.OnEnable
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
    name: OnEnable
    nameWithType: ProcessSceneObjectProperty.OnEnable
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  commentId: M:VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: Reset()
  nameWithType: ProcessSceneObjectProperty.Reset()
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
    name: Reset
    nameWithType: ProcessSceneObjectProperty.Reset
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
    name: Reset
    nameWithType: ProcessSceneObjectProperty.Reset
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  commentId: M:VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: ToString()
  nameWithType: ProcessSceneObjectProperty.ToString()
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
    name: ToString
    nameWithType: ProcessSceneObjectProperty.ToString
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
    name: ToString
    nameWithType: ProcessSceneObjectProperty.ToString
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ISceneObjectProperty.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  definition: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  name: AddProcessPropertyExtensions()
  nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions()
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  name: AddProcessPropertyExtensions(ISceneObjectProperty)
  nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Properties.ISceneObjectProperty
    name: ISceneObjectProperty
    nameWithType: ISceneObjectProperty
    fullName: VRBuilder.Core.Properties.ISceneObjectProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Properties.ISceneObjectProperty
    name: ISceneObjectProperty
    nameWithType: ISceneObjectProperty
    fullName: VRBuilder.Core.Properties.ISceneObjectProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.SceneObjectExtensions
  commentId: T:VRBuilder.Core.Properties.SceneObjectExtensions
  parent: VRBuilder.Core.Properties
  name: SceneObjectExtensions
  nameWithType: SceneObjectExtensions
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions
- uid: VRBuilder.Core.Properties.ParticleSystemProperty.StartedEmission*
  commentId: Overload:VRBuilder.Core.Properties.ParticleSystemProperty.StartedEmission
  name: StartedEmission
  nameWithType: ParticleSystemProperty.StartedEmission
  fullName: VRBuilder.Core.Properties.ParticleSystemProperty.StartedEmission
- uid: VRBuilder.Core.Properties.IParticleSystemProperty.StartedEmission
  commentId: P:VRBuilder.Core.Properties.IParticleSystemProperty.StartedEmission
  parent: VRBuilder.Core.Properties.IParticleSystemProperty
  name: StartedEmission
  nameWithType: IParticleSystemProperty.StartedEmission
  fullName: VRBuilder.Core.Properties.IParticleSystemProperty.StartedEmission
- uid: UnityEvent{VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs}
  commentId: '!:UnityEvent{VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs}'
  definition: UnityEvent`1
  name: UnityEvent<ParticleSystemPropertyEventArgs>
  nameWithType: UnityEvent<ParticleSystemPropertyEventArgs>
  fullName: UnityEvent<VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs>
  nameWithType.vb: UnityEvent(Of ParticleSystemPropertyEventArgs)
  fullName.vb: UnityEvent(Of VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs)
  name.vb: UnityEvent(Of ParticleSystemPropertyEventArgs)
  spec.csharp:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs
    name: ParticleSystemPropertyEventArgs
    nameWithType: ParticleSystemPropertyEventArgs
    fullName: VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs
    name: ParticleSystemPropertyEventArgs
    nameWithType: ParticleSystemPropertyEventArgs
    fullName: VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEvent`1
  isExternal: true
  name: UnityEvent<>
  nameWithType: UnityEvent<>
  fullName: UnityEvent<>
  nameWithType.vb: UnityEvent(Of )
  fullName.vb: UnityEvent(Of )
  name.vb: UnityEvent(Of )
  spec.csharp:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ParticleSystemProperty.StoppedEmission*
  commentId: Overload:VRBuilder.Core.Properties.ParticleSystemProperty.StoppedEmission
  name: StoppedEmission
  nameWithType: ParticleSystemProperty.StoppedEmission
  fullName: VRBuilder.Core.Properties.ParticleSystemProperty.StoppedEmission
- uid: VRBuilder.Core.Properties.IParticleSystemProperty.StoppedEmission
  commentId: P:VRBuilder.Core.Properties.IParticleSystemProperty.StoppedEmission
  parent: VRBuilder.Core.Properties.IParticleSystemProperty
  name: StoppedEmission
  nameWithType: IParticleSystemProperty.StoppedEmission
  fullName: VRBuilder.Core.Properties.IParticleSystemProperty.StoppedEmission
- uid: VRBuilder.Core.Properties.ParticleSystemProperty.ParticleSystem*
  commentId: Overload:VRBuilder.Core.Properties.ParticleSystemProperty.ParticleSystem
  name: ParticleSystem
  nameWithType: ParticleSystemProperty.ParticleSystem
  fullName: VRBuilder.Core.Properties.ParticleSystemProperty.ParticleSystem
- uid: ParticleSystem
  commentId: '!:ParticleSystem'
  isExternal: true
  name: ParticleSystem
  nameWithType: ParticleSystem
  fullName: ParticleSystem
- uid: VRBuilder.Core.Properties.ParticleSystemProperty.IsEmitting*
  commentId: Overload:VRBuilder.Core.Properties.ParticleSystemProperty.IsEmitting
  name: IsEmitting
  nameWithType: ParticleSystemProperty.IsEmitting
  fullName: VRBuilder.Core.Properties.ParticleSystemProperty.IsEmitting
- uid: VRBuilder.Core.Properties.IParticleSystemProperty.IsEmitting
  commentId: P:VRBuilder.Core.Properties.IParticleSystemProperty.IsEmitting
  parent: VRBuilder.Core.Properties.IParticleSystemProperty
  name: IsEmitting
  nameWithType: IParticleSystemProperty.IsEmitting
  fullName: VRBuilder.Core.Properties.IParticleSystemProperty.IsEmitting
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.Properties.ParticleSystemProperty.StartEmission*
  commentId: Overload:VRBuilder.Core.Properties.ParticleSystemProperty.StartEmission
  name: StartEmission
  nameWithType: ParticleSystemProperty.StartEmission
  fullName: VRBuilder.Core.Properties.ParticleSystemProperty.StartEmission
- uid: VRBuilder.Core.Properties.IParticleSystemProperty.StartEmission
  commentId: M:VRBuilder.Core.Properties.IParticleSystemProperty.StartEmission
  parent: VRBuilder.Core.Properties.IParticleSystemProperty
  name: StartEmission()
  nameWithType: IParticleSystemProperty.StartEmission()
  fullName: VRBuilder.Core.Properties.IParticleSystemProperty.StartEmission()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.IParticleSystemProperty.StartEmission
    name: StartEmission
    nameWithType: IParticleSystemProperty.StartEmission
    fullName: VRBuilder.Core.Properties.IParticleSystemProperty.StartEmission
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.IParticleSystemProperty.StartEmission
    name: StartEmission
    nameWithType: IParticleSystemProperty.StartEmission
    fullName: VRBuilder.Core.Properties.IParticleSystemProperty.StartEmission
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ParticleSystemProperty.StopEmission*
  commentId: Overload:VRBuilder.Core.Properties.ParticleSystemProperty.StopEmission
  name: StopEmission
  nameWithType: ParticleSystemProperty.StopEmission
  fullName: VRBuilder.Core.Properties.ParticleSystemProperty.StopEmission
- uid: VRBuilder.Core.Properties.IParticleSystemProperty.StopEmission
  commentId: M:VRBuilder.Core.Properties.IParticleSystemProperty.StopEmission
  parent: VRBuilder.Core.Properties.IParticleSystemProperty
  name: StopEmission()
  nameWithType: IParticleSystemProperty.StopEmission()
  fullName: VRBuilder.Core.Properties.IParticleSystemProperty.StopEmission()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.IParticleSystemProperty.StopEmission
    name: StopEmission
    nameWithType: IParticleSystemProperty.StopEmission
    fullName: VRBuilder.Core.Properties.IParticleSystemProperty.StopEmission
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.IParticleSystemProperty.StopEmission
    name: StopEmission
    nameWithType: IParticleSystemProperty.StopEmission
    fullName: VRBuilder.Core.Properties.IParticleSystemProperty.StopEmission
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
