### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Input.InputController.ListenerInfo
  commentId: T:VRBuilder.Core.Input.InputController.ListenerInfo
  id: InputController.ListenerInfo
  parent: VRBuilder.Core.Input
  children:
  - VRBuilder.Core.Input.InputController.ListenerInfo.#ctor(VRBuilder.Core.Input.IInputActionListener,System.Action{VRBuilder.Core.Input.InputController.InputEventArgs})
  - VRBuilder.Core.Input.InputController.ListenerInfo.Action
  - VRBuilder.Core.Input.InputController.ListenerInfo.ActionListener
  langs:
  - csharp
  - vb
  name: InputController.ListenerInfo
  nameWithType: InputController.ListenerInfo
  fullName: VRBuilder.Core.Input.InputController.ListenerInfo
  type: Struct
  source:
    remote:
      path: Source/Core/Runtime/Input/InputController.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ListenerInfo
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Input/InputController.cs
    startLine: 38
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Input
  summary: "\nInformation of the listener registered.\n"
  example: []
  syntax:
    content: protected struct ListenerInfo
    content.vb: Protected Structure ListenerInfo
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  modifiers.csharp:
  - protected
  - struct
  modifiers.vb:
  - Protected
  - Structure
- uid: VRBuilder.Core.Input.InputController.ListenerInfo.ActionListener
  commentId: F:VRBuilder.Core.Input.InputController.ListenerInfo.ActionListener
  id: ActionListener
  parent: VRBuilder.Core.Input.InputController.ListenerInfo
  langs:
  - csharp
  - vb
  name: ActionListener
  nameWithType: InputController.ListenerInfo.ActionListener
  fullName: VRBuilder.Core.Input.InputController.ListenerInfo.ActionListener
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/Input/InputController.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ActionListener
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Input/InputController.cs
    startLine: 40
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Input
  syntax:
    content: public readonly IInputActionListener ActionListener
    return:
      type: VRBuilder.Core.Input.IInputActionListener
    content.vb: Public ReadOnly ActionListener As IInputActionListener
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.Input.InputController.ListenerInfo.Action
  commentId: F:VRBuilder.Core.Input.InputController.ListenerInfo.Action
  id: Action
  parent: VRBuilder.Core.Input.InputController.ListenerInfo
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: InputController.ListenerInfo.Action
  fullName: VRBuilder.Core.Input.InputController.ListenerInfo.Action
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/Input/InputController.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Action
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Input/InputController.cs
    startLine: 41
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Input
  syntax:
    content: public readonly Action<InputController.InputEventArgs> Action
    return:
      type: System.Action{VRBuilder.Core.Input.InputController.InputEventArgs}
    content.vb: Public ReadOnly Action As Action(Of InputController.InputEventArgs)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.Input.InputController.ListenerInfo.#ctor(VRBuilder.Core.Input.IInputActionListener,System.Action{VRBuilder.Core.Input.InputController.InputEventArgs})
  commentId: M:VRBuilder.Core.Input.InputController.ListenerInfo.#ctor(VRBuilder.Core.Input.IInputActionListener,System.Action{VRBuilder.Core.Input.InputController.InputEventArgs})
  id: '#ctor(VRBuilder.Core.Input.IInputActionListener,System.Action{VRBuilder.Core.Input.InputController.InputEventArgs})'
  parent: VRBuilder.Core.Input.InputController.ListenerInfo
  langs:
  - csharp
  - vb
  name: ListenerInfo(IInputActionListener, Action<InputController.InputEventArgs>)
  nameWithType: InputController.ListenerInfo.ListenerInfo(IInputActionListener, Action<InputController.InputEventArgs>)
  fullName: VRBuilder.Core.Input.InputController.ListenerInfo.ListenerInfo(VRBuilder.Core.Input.IInputActionListener, System.Action<VRBuilder.Core.Input.InputController.InputEventArgs>)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/Input/InputController.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Input/InputController.cs
    startLine: 43
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Input
  syntax:
    content: public ListenerInfo(IInputActionListener actionListener, Action<InputController.InputEventArgs> action)
    parameters:
    - id: actionListener
      type: VRBuilder.Core.Input.IInputActionListener
    - id: action
      type: System.Action{VRBuilder.Core.Input.InputController.InputEventArgs}
    content.vb: Public Sub New(actionListener As IInputActionListener, action As Action(Of InputController.InputEventArgs))
  overload: VRBuilder.Core.Input.InputController.ListenerInfo.#ctor*
  nameWithType.vb: InputController.ListenerInfo.ListenerInfo(IInputActionListener, Action(Of InputController.InputEventArgs))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Core.Input.InputController.ListenerInfo.ListenerInfo(VRBuilder.Core.Input.IInputActionListener, System.Action(Of VRBuilder.Core.Input.InputController.InputEventArgs))
  name.vb: ListenerInfo(IInputActionListener, Action(Of InputController.InputEventArgs))
references:
- uid: VRBuilder.Core.Input
  commentId: N:VRBuilder.Core.Input
  name: VRBuilder.Core.Input
  nameWithType: VRBuilder.Core.Input
  fullName: VRBuilder.Core.Input
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Input.IInputActionListener
  commentId: T:VRBuilder.Core.Input.IInputActionListener
  parent: VRBuilder.Core.Input
  name: IInputActionListener
  nameWithType: IInputActionListener
  fullName: VRBuilder.Core.Input.IInputActionListener
- uid: System.Action{VRBuilder.Core.Input.InputController.InputEventArgs}
  commentId: T:System.Action{VRBuilder.Core.Input.InputController.InputEventArgs}
  parent: System
  definition: System.Action`1
  name: Action<InputController.InputEventArgs>
  nameWithType: Action<InputController.InputEventArgs>
  fullName: System.Action<VRBuilder.Core.Input.InputController.InputEventArgs>
  nameWithType.vb: Action(Of InputController.InputEventArgs)
  fullName.vb: System.Action(Of VRBuilder.Core.Input.InputController.InputEventArgs)
  name.vb: Action(Of InputController.InputEventArgs)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Input.InputController.InputEventArgs
    name: InputController.InputEventArgs
    nameWithType: InputController.InputEventArgs
    fullName: VRBuilder.Core.Input.InputController.InputEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Input.InputController.InputEventArgs
    name: InputController.InputEventArgs
    nameWithType: InputController.InputEventArgs
    fullName: VRBuilder.Core.Input.InputController.InputEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Input.InputController.ListenerInfo.#ctor*
  commentId: Overload:VRBuilder.Core.Input.InputController.ListenerInfo.#ctor
  name: ListenerInfo
  nameWithType: InputController.ListenerInfo.ListenerInfo
  fullName: VRBuilder.Core.Input.InputController.ListenerInfo.ListenerInfo
