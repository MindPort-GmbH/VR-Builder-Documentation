### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator
  commentId: T:VRBuilder.Core.Configuration.RuntimeConfigurator
  id: RuntimeConfigurator
  parent: VRBuilder.Core.Configuration
  children:
  - VRBuilder.Core.Configuration.RuntimeConfigurator.Configuration
  - VRBuilder.Core.Configuration.RuntimeConfigurator.Exists
  - VRBuilder.Core.Configuration.RuntimeConfigurator.GetProcessStringLocalizationTable
  - VRBuilder.Core.Configuration.RuntimeConfigurator.GetRuntimeConfigurationName
  - VRBuilder.Core.Configuration.RuntimeConfigurator.GetSelectedProcess
  - VRBuilder.Core.Configuration.RuntimeConfigurator.Instance
  - VRBuilder.Core.Configuration.RuntimeConfigurator.IsExisting(System.Boolean)
  - VRBuilder.Core.Configuration.RuntimeConfigurator.ModeChanged
  - VRBuilder.Core.Configuration.RuntimeConfigurator.RuntimeConfigurationChanged
  - VRBuilder.Core.Configuration.RuntimeConfigurator.SetRuntimeConfigurationName(System.String)
  - VRBuilder.Core.Configuration.RuntimeConfigurator.SetSelectedProcess(System.String)
  langs:
  - csharp
  - vb
  name: RuntimeConfigurator
  nameWithType: RuntimeConfigurator
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RuntimeConfigurator
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
    startLine: 15
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: "\nConfigurator to set the process runtime configuration which is used by a process during its execution.\nThere has to be one and only one process runtime configurator game object per scene.\n"
  example: []
  syntax:
    content: 'public sealed class RuntimeConfigurator : MonoBehaviour'
    content.vb: >-
      Public NotInheritable Class RuntimeConfigurator
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.ModeChanged
  commentId: E:VRBuilder.Core.Configuration.RuntimeConfigurator.ModeChanged
  id: ModeChanged
  parent: VRBuilder.Core.Configuration.RuntimeConfigurator
  langs:
  - csharp
  - vb
  name: ModeChanged
  nameWithType: RuntimeConfigurator.ModeChanged
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator.ModeChanged
  type: Event
  source:
    remote:
      path: Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ModeChanged
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
    startLine: 20
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: "\nThe event that fires when a process mode or runtime configuration changes.\n"
  example: []
  syntax:
    content: public static event EventHandler<ModeChangedEventArgs> ModeChanged
    return:
      type: System.EventHandler{VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs}
    content.vb: Public Shared Event ModeChanged As EventHandler(Of ModeChangedEventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.RuntimeConfigurationChanged
  commentId: E:VRBuilder.Core.Configuration.RuntimeConfigurator.RuntimeConfigurationChanged
  id: RuntimeConfigurationChanged
  parent: VRBuilder.Core.Configuration.RuntimeConfigurator
  langs:
  - csharp
  - vb
  name: RuntimeConfigurationChanged
  nameWithType: RuntimeConfigurator.RuntimeConfigurationChanged
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator.RuntimeConfigurationChanged
  type: Event
  source:
    remote:
      path: Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RuntimeConfigurationChanged
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
    startLine: 25
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: "\nThe event that fires when a process runtime configuration changes.\n"
  example: []
  syntax:
    content: public static event EventHandler<EventArgs> RuntimeConfigurationChanged
    return:
      type: System.EventHandler{System.EventArgs}
    content.vb: Public Shared Event RuntimeConfigurationChanged As EventHandler(Of EventArgs)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.Exists
  commentId: P:VRBuilder.Core.Configuration.RuntimeConfigurator.Exists
  id: Exists
  parent: VRBuilder.Core.Configuration.RuntimeConfigurator
  langs:
  - csharp
  - vb
  name: Exists
  nameWithType: RuntimeConfigurator.Exists
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator.Exists
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Exists
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
    startLine: 104
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: "\nChecks if a process runtime configurator exists in the scene.\n"
  example: []
  syntax:
    content: public static bool Exists { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if an instance of the runtime configurator exists; otherwise, <code>false</code>.
    content.vb: Public Shared ReadOnly Property Exists As Boolean
  overload: VRBuilder.Core.Configuration.RuntimeConfigurator.Exists*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.IsExisting(System.Boolean)
  commentId: M:VRBuilder.Core.Configuration.RuntimeConfigurator.IsExisting(System.Boolean)
  id: IsExisting(System.Boolean)
  parent: VRBuilder.Core.Configuration.RuntimeConfigurator
  langs:
  - csharp
  - vb
  name: IsExisting(Boolean)
  nameWithType: RuntimeConfigurator.IsExisting(Boolean)
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator.IsExisting(System.Boolean)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsExisting
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
    startLine: 118
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: "\nChecks if an instance of the runtime configurator exists.\nIf <xref href=\"VRBuilder.Core.Configuration.RuntimeConfigurator.instance\" data-throw-if-not-resolved=\"false\"></xref> is not set it tries to set it by calling <see cref=\"!:LookUpRuntimeConfiguratorGameObject\"></see>.\n"
  example: []
  syntax:
    content: public static bool IsExisting(bool forceNewLookup = false)
    parameters:
    - id: forceNewLookup
      type: System.Boolean
      description: If set to <code>true</code>, forces a new lookup for the instance.
    return:
      type: System.Boolean
      description: <code>true</code> if an instance of the runtime configurator exists; otherwise, <code>false</code>.
    content.vb: Public Shared Function IsExisting(forceNewLookup As Boolean = False) As Boolean
  overload: VRBuilder.Core.Configuration.RuntimeConfigurator.IsExisting*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.Configuration
  commentId: P:VRBuilder.Core.Configuration.RuntimeConfigurator.Configuration
  id: Configuration
  parent: VRBuilder.Core.Configuration.RuntimeConfigurator
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: RuntimeConfigurator.Configuration
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator.Configuration
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Configuration
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
    startLine: 131
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: "\nShortcut to get the <see cref=\"!:IRuntimeConfiguration\"></see> of the instance.\n"
  example: []
  syntax:
    content: public static BaseRuntimeConfiguration Configuration { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.Configuration.BaseRuntimeConfiguration
    content.vb: Public Shared Property Configuration As BaseRuntimeConfiguration
  overload: VRBuilder.Core.Configuration.RuntimeConfigurator.Configuration*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.Instance
  commentId: P:VRBuilder.Core.Configuration.RuntimeConfigurator.Instance
  id: Instance
  parent: VRBuilder.Core.Configuration.RuntimeConfigurator
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: RuntimeConfigurator.Instance
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator.Instance
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Instance
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
    startLine: 183
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: "\nGets the current instance of the RuntimeConfigurator.\n"
  example: []
  syntax:
    content: public static RuntimeConfigurator Instance { get; }
    parameters: []
    return:
      type: VRBuilder.Core.Configuration.RuntimeConfigurator
    content.vb: Public Shared ReadOnly Property Instance As RuntimeConfigurator
  overload: VRBuilder.Core.Configuration.RuntimeConfigurator.Instance*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: Thrown if there is no RuntimeConfigurator added to the scene.
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.GetRuntimeConfigurationName
  commentId: M:VRBuilder.Core.Configuration.RuntimeConfigurator.GetRuntimeConfigurationName
  id: GetRuntimeConfigurationName
  parent: VRBuilder.Core.Configuration.RuntimeConfigurator
  langs:
  - csharp
  - vb
  name: GetRuntimeConfigurationName()
  nameWithType: RuntimeConfigurator.GetRuntimeConfigurationName()
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator.GetRuntimeConfigurationName()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetRuntimeConfigurationName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
    startLine: 200
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: "\nReturns the assembly qualified name of the runtime configuration.\n"
  example: []
  syntax:
    content: public string GetRuntimeConfigurationName()
    return:
      type: System.String
      description: The assembly qualified name of the runtime configuration.
    content.vb: Public Function GetRuntimeConfigurationName As String
  overload: VRBuilder.Core.Configuration.RuntimeConfigurator.GetRuntimeConfigurationName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.SetRuntimeConfigurationName(System.String)
  commentId: M:VRBuilder.Core.Configuration.RuntimeConfigurator.SetRuntimeConfigurationName(System.String)
  id: SetRuntimeConfigurationName(System.String)
  parent: VRBuilder.Core.Configuration.RuntimeConfigurator
  langs:
  - csharp
  - vb
  name: SetRuntimeConfigurationName(String)
  nameWithType: RuntimeConfigurator.SetRuntimeConfigurationName(String)
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator.SetRuntimeConfigurationName(System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetRuntimeConfigurationName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
    startLine: 209
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: "\nSets the runtime configuration name, expects an assembly qualified name.\n"
  example: []
  syntax:
    content: public void SetRuntimeConfigurationName(string configurationName)
    parameters:
    - id: configurationName
      type: System.String
      description: The assembly qualified name of the runtime configuration.
    content.vb: Public Sub SetRuntimeConfigurationName(configurationName As String)
  overload: VRBuilder.Core.Configuration.RuntimeConfigurator.SetRuntimeConfigurationName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.GetSelectedProcess
  commentId: M:VRBuilder.Core.Configuration.RuntimeConfigurator.GetSelectedProcess
  id: GetSelectedProcess
  parent: VRBuilder.Core.Configuration.RuntimeConfigurator
  langs:
  - csharp
  - vb
  name: GetSelectedProcess()
  nameWithType: RuntimeConfigurator.GetSelectedProcess()
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator.GetSelectedProcess()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetSelectedProcess
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
    startLine: 218
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: "\nReturns the path to the selected process.\n"
  example: []
  syntax:
    content: public string GetSelectedProcess()
    return:
      type: System.String
      description: The path to the selected process.
    content.vb: Public Function GetSelectedProcess As String
  overload: VRBuilder.Core.Configuration.RuntimeConfigurator.GetSelectedProcess*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.SetSelectedProcess(System.String)
  commentId: M:VRBuilder.Core.Configuration.RuntimeConfigurator.SetSelectedProcess(System.String)
  id: SetSelectedProcess(System.String)
  parent: VRBuilder.Core.Configuration.RuntimeConfigurator
  langs:
  - csharp
  - vb
  name: SetSelectedProcess(String)
  nameWithType: RuntimeConfigurator.SetSelectedProcess(String)
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator.SetSelectedProcess(System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetSelectedProcess
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
    startLine: 227
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: "\nSets the path to the selected process.\n"
  example: []
  syntax:
    content: public void SetSelectedProcess(string path)
    parameters:
    - id: path
      type: System.String
      description: The path to the selected process.
    content.vb: Public Sub SetSelectedProcess(path As String)
  overload: VRBuilder.Core.Configuration.RuntimeConfigurator.SetSelectedProcess*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.GetProcessStringLocalizationTable
  commentId: M:VRBuilder.Core.Configuration.RuntimeConfigurator.GetProcessStringLocalizationTable
  id: GetProcessStringLocalizationTable
  parent: VRBuilder.Core.Configuration.RuntimeConfigurator
  langs:
  - csharp
  - vb
  name: GetProcessStringLocalizationTable()
  nameWithType: RuntimeConfigurator.GetProcessStringLocalizationTable()
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator.GetProcessStringLocalizationTable()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetProcessStringLocalizationTable
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/RuntimeConfigurator.cs
    startLine: 236
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: "\nReturns the string localization table for the selected process.\n"
  example: []
  syntax:
    content: public string GetProcessStringLocalizationTable()
    return:
      type: System.String
      description: The string localization table for the selected process.
    content.vb: Public Function GetProcessStringLocalizationTable As String
  overload: VRBuilder.Core.Configuration.RuntimeConfigurator.GetProcessStringLocalizationTable*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Core.Configuration
  commentId: N:VRBuilder.Core.Configuration
  name: VRBuilder.Core.Configuration
  nameWithType: VRBuilder.Core.Configuration
  fullName: VRBuilder.Core.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler{VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs}
  commentId: T:System.EventHandler{VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ModeChangedEventArgs>
  nameWithType: EventHandler<ModeChangedEventArgs>
  fullName: System.EventHandler<VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs>
  nameWithType.vb: EventHandler(Of ModeChangedEventArgs)
  fullName.vb: System.EventHandler(Of VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs)
  name.vb: EventHandler(Of ModeChangedEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs
    name: ModeChangedEventArgs
    nameWithType: ModeChangedEventArgs
    fullName: VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs
    name: ModeChangedEventArgs
    nameWithType: ModeChangedEventArgs
    fullName: VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{System.EventArgs}
  commentId: T:System.EventHandler{System.EventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<EventArgs>
  nameWithType: EventHandler<EventArgs>
  fullName: System.EventHandler<System.EventArgs>
  nameWithType.vb: EventHandler(Of EventArgs)
  fullName.vb: System.EventHandler(Of System.EventArgs)
  name.vb: EventHandler(Of EventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.Exists*
  commentId: Overload:VRBuilder.Core.Configuration.RuntimeConfigurator.Exists
  name: Exists
  nameWithType: RuntimeConfigurator.Exists
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator.Exists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.instance
  commentId: F:VRBuilder.Core.Configuration.RuntimeConfigurator.instance
  isExternal: true
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.IsExisting*
  commentId: Overload:VRBuilder.Core.Configuration.RuntimeConfigurator.IsExisting
  name: IsExisting
  nameWithType: RuntimeConfigurator.IsExisting
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator.IsExisting
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.Configuration*
  commentId: Overload:VRBuilder.Core.Configuration.RuntimeConfigurator.Configuration
  name: Configuration
  nameWithType: RuntimeConfigurator.Configuration
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator.Configuration
- uid: VRBuilder.Core.Configuration.BaseRuntimeConfiguration
  commentId: T:VRBuilder.Core.Configuration.BaseRuntimeConfiguration
  parent: VRBuilder.Core.Configuration
  name: BaseRuntimeConfiguration
  nameWithType: BaseRuntimeConfiguration
  fullName: VRBuilder.Core.Configuration.BaseRuntimeConfiguration
- uid: System.NullReferenceException
  commentId: T:System.NullReferenceException
  isExternal: true
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.Instance*
  commentId: Overload:VRBuilder.Core.Configuration.RuntimeConfigurator.Instance
  name: Instance
  nameWithType: RuntimeConfigurator.Instance
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator.Instance
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator
  commentId: T:VRBuilder.Core.Configuration.RuntimeConfigurator
  parent: VRBuilder.Core.Configuration
  name: RuntimeConfigurator
  nameWithType: RuntimeConfigurator
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.GetRuntimeConfigurationName*
  commentId: Overload:VRBuilder.Core.Configuration.RuntimeConfigurator.GetRuntimeConfigurationName
  name: GetRuntimeConfigurationName
  nameWithType: RuntimeConfigurator.GetRuntimeConfigurationName
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator.GetRuntimeConfigurationName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.SetRuntimeConfigurationName*
  commentId: Overload:VRBuilder.Core.Configuration.RuntimeConfigurator.SetRuntimeConfigurationName
  name: SetRuntimeConfigurationName
  nameWithType: RuntimeConfigurator.SetRuntimeConfigurationName
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator.SetRuntimeConfigurationName
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.GetSelectedProcess*
  commentId: Overload:VRBuilder.Core.Configuration.RuntimeConfigurator.GetSelectedProcess
  name: GetSelectedProcess
  nameWithType: RuntimeConfigurator.GetSelectedProcess
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator.GetSelectedProcess
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.SetSelectedProcess*
  commentId: Overload:VRBuilder.Core.Configuration.RuntimeConfigurator.SetSelectedProcess
  name: SetSelectedProcess
  nameWithType: RuntimeConfigurator.SetSelectedProcess
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator.SetSelectedProcess
- uid: VRBuilder.Core.Configuration.RuntimeConfigurator.GetProcessStringLocalizationTable*
  commentId: Overload:VRBuilder.Core.Configuration.RuntimeConfigurator.GetProcessStringLocalizationTable
  name: GetProcessStringLocalizationTable
  nameWithType: RuntimeConfigurator.GetProcessStringLocalizationTable
  fullName: VRBuilder.Core.Configuration.RuntimeConfigurator.GetProcessStringLocalizationTable
