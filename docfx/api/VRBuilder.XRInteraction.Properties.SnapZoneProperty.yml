### YamlMime:ManagedReference
items:
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty
  commentId: T:VRBuilder.XRInteraction.Properties.SnapZoneProperty
  id: SnapZoneProperty
  parent: VRBuilder.XRInteraction.Properties
  children:
  - VRBuilder.XRInteraction.Properties.SnapZoneProperty.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  - VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitSnapped
  - VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitUnsnapped
  - VRBuilder.XRInteraction.Properties.SnapZoneProperty.HighlightMaterial
  - VRBuilder.XRInteraction.Properties.SnapZoneProperty.InternalSetLocked(System.Boolean)
  - VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsObjectSnapped
  - VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsShowingHighlightObject
  - VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsShowingHoverMeshes
  - VRBuilder.XRInteraction.Properties.SnapZoneProperty.LockOnUnsnap
  - VRBuilder.XRInteraction.Properties.SnapZoneProperty.ObjectAttached
  - VRBuilder.XRInteraction.Properties.SnapZoneProperty.ObjectDetached
  - VRBuilder.XRInteraction.Properties.SnapZoneProperty.OnDisable
  - VRBuilder.XRInteraction.Properties.SnapZoneProperty.OnEnable
  - VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnappedObject
  - VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnapZone
  - VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnapZoneObject
  langs:
  - csharp
  - vb
  name: SnapZoneProperty
  nameWithType: SnapZoneProperty
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty
  type: Class
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SnapZoneProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
    startLine: 12
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction.Properties
  summary: "\nXR implementation of <xref href=\"VRBuilder.BasicInteraction.Properties.ISnapZoneProperty\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class SnapZoneProperty : LockableProperty, ISnapZoneProperty, ISceneObjectProperty, ILockable'
    content.vb: >-
      Public Class SnapZoneProperty

          Inherits LockableProperty

          Implements ISnapZoneProperty, ISceneObjectProperty, ILockable
  inheritance:
  - System.Object
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty
  - VRBuilder.Core.Properties.LockableProperty
  implements:
  - VRBuilder.BasicInteraction.Properties.ISnapZoneProperty
  - VRBuilder.Core.Properties.ISceneObjectProperty
  - VRBuilder.Core.SceneObjects.ILockable
  inheritedMembers:
  - VRBuilder.Core.Properties.LockableProperty.Locked
  - VRBuilder.Core.Properties.LockableProperty.Unlocked
  - VRBuilder.Core.Properties.LockableProperty.LockOnParentObjectLock
  - VRBuilder.Core.Properties.LockableProperty.IsLocked
  - VRBuilder.Core.Properties.LockableProperty.EndStepLocked
  - VRBuilder.Core.Properties.LockableProperty.SetLocked(System.Boolean)
  - VRBuilder.Core.Properties.LockableProperty.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  - VRBuilder.Core.Properties.LockableProperty.RemoveUnlocker(VRBuilder.Core.IStepData)
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsShowingHoverMeshes
  commentId: P:VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsShowingHoverMeshes
  id: IsShowingHoverMeshes
  parent: VRBuilder.XRInteraction.Properties.SnapZoneProperty
  langs:
  - csharp
  - vb
  name: IsShowingHoverMeshes
  nameWithType: SnapZoneProperty.IsShowingHoverMeshes
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsShowingHoverMeshes
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsShowingHoverMeshes
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
    startLine: 22
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction.Properties
  syntax:
    content: public ModeParameter<bool> IsShowingHoverMeshes { get; }
    parameters: []
    return:
      type: VRBuilder.Core.Configuration.Modes.ModeParameter{System.Boolean}
    content.vb: Public ReadOnly Property IsShowingHoverMeshes As ModeParameter(Of Boolean)
  overload: VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsShowingHoverMeshes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsShowingHighlightObject
  commentId: P:VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsShowingHighlightObject
  id: IsShowingHighlightObject
  parent: VRBuilder.XRInteraction.Properties.SnapZoneProperty
  langs:
  - csharp
  - vb
  name: IsShowingHighlightObject
  nameWithType: SnapZoneProperty.IsShowingHighlightObject
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsShowingHighlightObject
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsShowingHighlightObject
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
    startLine: 23
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction.Properties
  syntax:
    content: public ModeParameter<bool> IsShowingHighlightObject { get; }
    parameters: []
    return:
      type: VRBuilder.Core.Configuration.Modes.ModeParameter{System.Boolean}
    content.vb: Public ReadOnly Property IsShowingHighlightObject As ModeParameter(Of Boolean)
  overload: VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsShowingHighlightObject*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.HighlightMaterial
  commentId: P:VRBuilder.XRInteraction.Properties.SnapZoneProperty.HighlightMaterial
  id: HighlightMaterial
  parent: VRBuilder.XRInteraction.Properties.SnapZoneProperty
  langs:
  - csharp
  - vb
  name: HighlightMaterial
  nameWithType: SnapZoneProperty.HighlightMaterial
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.HighlightMaterial
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: HighlightMaterial
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
    startLine: 24
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction.Properties
  syntax:
    content: public ModeParameter<Material> HighlightMaterial { get; }
    parameters: []
    return:
      type: VRBuilder.Core.Configuration.Modes.ModeParameter{Material}
    content.vb: Public ReadOnly Property HighlightMaterial As ModeParameter(Of Material)
  overload: VRBuilder.XRInteraction.Properties.SnapZoneProperty.HighlightMaterial*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.LockOnUnsnap
  commentId: P:VRBuilder.XRInteraction.Properties.SnapZoneProperty.LockOnUnsnap
  id: LockOnUnsnap
  parent: VRBuilder.XRInteraction.Properties.SnapZoneProperty
  langs:
  - csharp
  - vb
  name: LockOnUnsnap
  nameWithType: SnapZoneProperty.LockOnUnsnap
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.LockOnUnsnap
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LockOnUnsnap
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
    startLine: 32
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction.Properties
  summary: "\nIf true, the snap zone locks as soon as an object is unsnapped.\n"
  example: []
  syntax:
    content: public bool LockOnUnsnap { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LockOnUnsnap As Boolean
  overload: VRBuilder.XRInteraction.Properties.SnapZoneProperty.LockOnUnsnap*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsObjectSnapped
  commentId: P:VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsObjectSnapped
  id: IsObjectSnapped
  parent: VRBuilder.XRInteraction.Properties.SnapZoneProperty
  langs:
  - csharp
  - vb
  name: IsObjectSnapped
  nameWithType: SnapZoneProperty.IsObjectSnapped
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsObjectSnapped
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsObjectSnapped
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
    startLine: 35
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction.Properties
  example: []
  syntax:
    content: public bool IsObjectSnapped { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsObjectSnapped As Boolean
  overload: VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsObjectSnapped*
  implements:
  - VRBuilder.BasicInteraction.Properties.ISnapZoneProperty.IsObjectSnapped
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnappedObject
  commentId: P:VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnappedObject
  id: SnappedObject
  parent: VRBuilder.XRInteraction.Properties.SnapZoneProperty
  langs:
  - csharp
  - vb
  name: SnappedObject
  nameWithType: SnapZoneProperty.SnappedObject
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnappedObject
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SnappedObject
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
    startLine: 38
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction.Properties
  example: []
  syntax:
    content: public ISnappableProperty SnappedObject { get; set; }
    parameters: []
    return:
      type: VRBuilder.BasicInteraction.Properties.ISnappableProperty
    content.vb: Public Property SnappedObject As ISnappableProperty
  overload: VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnappedObject*
  implements:
  - VRBuilder.BasicInteraction.Properties.ISnapZoneProperty.SnappedObject
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnapZoneObject
  commentId: P:VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnapZoneObject
  id: SnapZoneObject
  parent: VRBuilder.XRInteraction.Properties.SnapZoneProperty
  langs:
  - csharp
  - vb
  name: SnapZoneObject
  nameWithType: SnapZoneProperty.SnapZoneObject
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnapZoneObject
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SnapZoneObject
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
    startLine: 41
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction.Properties
  example: []
  syntax:
    content: public GameObject SnapZoneObject { get; }
    parameters: []
    return:
      type: GameObject
    content.vb: Public ReadOnly Property SnapZoneObject As GameObject
  overload: VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnapZoneObject*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnapZone
  commentId: P:VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnapZone
  id: SnapZone
  parent: VRBuilder.XRInteraction.Properties.SnapZoneProperty
  langs:
  - csharp
  - vb
  name: SnapZone
  nameWithType: SnapZoneProperty.SnapZone
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnapZone
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SnapZone
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
    startLine: 46
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction.Properties
  summary: "\nReturns the SnapZone component.\n"
  example: []
  syntax:
    content: public SnapZone SnapZone { get; }
    parameters: []
    return:
      type: VRBuilder.XRInteraction.SnapZone
    content.vb: Public ReadOnly Property SnapZone As SnapZone
  overload: VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnapZone*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.ObjectAttached
  commentId: P:VRBuilder.XRInteraction.Properties.SnapZoneProperty.ObjectAttached
  id: ObjectAttached
  parent: VRBuilder.XRInteraction.Properties.SnapZoneProperty
  langs:
  - csharp
  - vb
  name: ObjectAttached
  nameWithType: SnapZoneProperty.ObjectAttached
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.ObjectAttached
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ObjectAttached
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
    startLine: 59
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction.Properties
  syntax:
    content: public UnityEvent<SnapZonePropertyEventArgs> ObjectAttached { get; }
    parameters: []
    return:
      type: UnityEvent{VRBuilder.BasicInteraction.Properties.SnapZonePropertyEventArgs}
    content.vb: Public ReadOnly Property ObjectAttached As UnityEvent(Of SnapZonePropertyEventArgs)
  overload: VRBuilder.XRInteraction.Properties.SnapZoneProperty.ObjectAttached*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.ObjectDetached
  commentId: P:VRBuilder.XRInteraction.Properties.SnapZoneProperty.ObjectDetached
  id: ObjectDetached
  parent: VRBuilder.XRInteraction.Properties.SnapZoneProperty
  langs:
  - csharp
  - vb
  name: ObjectDetached
  nameWithType: SnapZoneProperty.ObjectDetached
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.ObjectDetached
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ObjectDetached
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
    startLine: 61
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction.Properties
  syntax:
    content: public UnityEvent<SnapZonePropertyEventArgs> ObjectDetached { get; }
    parameters: []
    return:
      type: UnityEvent{VRBuilder.BasicInteraction.Properties.SnapZonePropertyEventArgs}
    content.vb: Public ReadOnly Property ObjectDetached As UnityEvent(Of SnapZonePropertyEventArgs)
  overload: VRBuilder.XRInteraction.Properties.SnapZoneProperty.ObjectDetached*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.OnEnable
  commentId: M:VRBuilder.XRInteraction.Properties.SnapZoneProperty.OnEnable
  id: OnEnable
  parent: VRBuilder.XRInteraction.Properties.SnapZoneProperty
  langs:
  - csharp
  - vb
  name: OnEnable()
  nameWithType: SnapZoneProperty.OnEnable()
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.OnEnable()
  type: Method
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnEnable
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
    startLine: 65
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction.Properties
  syntax:
    content: protected override void OnEnable()
    content.vb: Protected Overrides Sub OnEnable
  overridden: VRBuilder.Core.Properties.LockableProperty.OnEnable
  overload: VRBuilder.XRInteraction.Properties.SnapZoneProperty.OnEnable*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.OnDisable
  commentId: M:VRBuilder.XRInteraction.Properties.SnapZoneProperty.OnDisable
  id: OnDisable
  parent: VRBuilder.XRInteraction.Properties.SnapZoneProperty
  langs:
  - csharp
  - vb
  name: OnDisable()
  nameWithType: SnapZoneProperty.OnDisable()
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.OnDisable()
  type: Method
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnDisable
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
    startLine: 73
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction.Properties
  syntax:
    content: protected override void OnDisable()
    content.vb: Protected Overrides Sub OnDisable
  overridden: VRBuilder.Core.Properties.LockableProperty.OnDisable
  overload: VRBuilder.XRInteraction.Properties.SnapZoneProperty.OnDisable*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.XRInteraction.Properties.SnapZoneProperty.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  id: Configure(VRBuilder.Core.Configuration.Modes.IMode)
  parent: VRBuilder.XRInteraction.Properties.SnapZoneProperty
  langs:
  - csharp
  - vb
  name: Configure(IMode)
  nameWithType: SnapZoneProperty.Configure(IMode)
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  type: Method
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Configure
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
    startLine: 144
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction.Properties
  summary: "\nConfigure snap zone properties according to the provided mode.\n"
  example: []
  syntax:
    content: public void Configure(IMode mode)
    parameters:
    - id: mode
      type: VRBuilder.Core.Configuration.Modes.IMode
      description: The current mode with the parameters to be changed.
    content.vb: Public Sub Configure(mode As IMode)
  overload: VRBuilder.XRInteraction.Properties.SnapZoneProperty.Configure*
  implements:
  - VRBuilder.BasicInteraction.Properties.ISnapZoneProperty.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitSnapped
  commentId: M:VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitSnapped
  id: EmitSnapped
  parent: VRBuilder.XRInteraction.Properties.SnapZoneProperty
  langs:
  - csharp
  - vb
  name: EmitSnapped()
  nameWithType: SnapZoneProperty.EmitSnapped()
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitSnapped()
  type: Method
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EmitSnapped
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
    startLine: 156
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction.Properties
  summary: "\nInvokes the <xref href=\"VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitSnapped\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected void EmitSnapped()
    content.vb: Protected Sub EmitSnapped
  overload: VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitSnapped*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitUnsnapped
  commentId: M:VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitUnsnapped
  id: EmitUnsnapped
  parent: VRBuilder.XRInteraction.Properties.SnapZoneProperty
  langs:
  - csharp
  - vb
  name: EmitUnsnapped()
  nameWithType: SnapZoneProperty.EmitUnsnapped()
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitUnsnapped()
  type: Method
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EmitUnsnapped
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
    startLine: 164
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction.Properties
  summary: "\nInvokes the <xref href=\"VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitUnsnapped\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected void EmitUnsnapped()
    content.vb: Protected Sub EmitUnsnapped
  overload: VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitUnsnapped*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.InternalSetLocked(System.Boolean)
  commentId: M:VRBuilder.XRInteraction.Properties.SnapZoneProperty.InternalSetLocked(System.Boolean)
  id: InternalSetLocked(System.Boolean)
  parent: VRBuilder.XRInteraction.Properties.SnapZoneProperty
  langs:
  - csharp
  - vb
  name: InternalSetLocked(Boolean)
  nameWithType: SnapZoneProperty.InternalSetLocked(Boolean)
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.InternalSetLocked(System.Boolean)
  type: Method
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: InternalSetLocked
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Properties/SnapZoneProperty.cs
    startLine: 172
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction.Properties
  summary: "\nLocks or unlocks the snap zone according to the provided <code data-dev-comment-type=\"paramref\" class=\"paramref\">lockState</code>.\n"
  example: []
  syntax:
    content: protected override void InternalSetLocked(bool lockState)
    parameters:
    - id: lockState
      type: System.Boolean
    content.vb: Protected Overrides Sub InternalSetLocked(lockState As Boolean)
  overridden: VRBuilder.Core.Properties.LockableProperty.InternalSetLocked(System.Boolean)
  overload: VRBuilder.XRInteraction.Properties.SnapZoneProperty.InternalSetLocked*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: VRBuilder.BasicInteraction.Properties.ISnapZoneProperty
  commentId: T:VRBuilder.BasicInteraction.Properties.ISnapZoneProperty
  parent: VRBuilder.BasicInteraction.Properties
  name: ISnapZoneProperty
  nameWithType: ISnapZoneProperty
  fullName: VRBuilder.BasicInteraction.Properties.ISnapZoneProperty
- uid: VRBuilder.XRInteraction.Properties
  commentId: N:VRBuilder.XRInteraction.Properties
  name: VRBuilder.XRInteraction.Properties
  nameWithType: VRBuilder.XRInteraction.Properties
  fullName: VRBuilder.XRInteraction.Properties
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ProcessSceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ProcessSceneObjectProperty
  nameWithType: ProcessSceneObjectProperty
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty
- uid: VRBuilder.Core.Properties.LockableProperty
  commentId: T:VRBuilder.Core.Properties.LockableProperty
  parent: VRBuilder.Core.Properties
  name: LockableProperty
  nameWithType: LockableProperty
  fullName: VRBuilder.Core.Properties.LockableProperty
- uid: VRBuilder.Core.Properties.ISceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ISceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ISceneObjectProperty
  nameWithType: ISceneObjectProperty
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty
- uid: VRBuilder.Core.SceneObjects.ILockable
  commentId: T:VRBuilder.Core.SceneObjects.ILockable
  parent: VRBuilder.Core.SceneObjects
  name: ILockable
  nameWithType: ILockable
  fullName: VRBuilder.Core.SceneObjects.ILockable
- uid: VRBuilder.Core.Properties.LockableProperty.Locked
  commentId: E:VRBuilder.Core.Properties.LockableProperty.Locked
  parent: VRBuilder.Core.Properties.LockableProperty
  name: Locked
  nameWithType: LockableProperty.Locked
  fullName: VRBuilder.Core.Properties.LockableProperty.Locked
- uid: VRBuilder.Core.Properties.LockableProperty.Unlocked
  commentId: E:VRBuilder.Core.Properties.LockableProperty.Unlocked
  parent: VRBuilder.Core.Properties.LockableProperty
  name: Unlocked
  nameWithType: LockableProperty.Unlocked
  fullName: VRBuilder.Core.Properties.LockableProperty.Unlocked
- uid: VRBuilder.Core.Properties.LockableProperty.LockOnParentObjectLock
  commentId: P:VRBuilder.Core.Properties.LockableProperty.LockOnParentObjectLock
  parent: VRBuilder.Core.Properties.LockableProperty
  name: LockOnParentObjectLock
  nameWithType: LockableProperty.LockOnParentObjectLock
  fullName: VRBuilder.Core.Properties.LockableProperty.LockOnParentObjectLock
- uid: VRBuilder.Core.Properties.LockableProperty.IsLocked
  commentId: P:VRBuilder.Core.Properties.LockableProperty.IsLocked
  parent: VRBuilder.Core.Properties.LockableProperty
  name: IsLocked
  nameWithType: LockableProperty.IsLocked
  fullName: VRBuilder.Core.Properties.LockableProperty.IsLocked
- uid: VRBuilder.Core.Properties.LockableProperty.EndStepLocked
  commentId: P:VRBuilder.Core.Properties.LockableProperty.EndStepLocked
  parent: VRBuilder.Core.Properties.LockableProperty
  name: EndStepLocked
  nameWithType: LockableProperty.EndStepLocked
  fullName: VRBuilder.Core.Properties.LockableProperty.EndStepLocked
- uid: VRBuilder.Core.Properties.LockableProperty.SetLocked(System.Boolean)
  commentId: M:VRBuilder.Core.Properties.LockableProperty.SetLocked(System.Boolean)
  parent: VRBuilder.Core.Properties.LockableProperty
  isExternal: true
  name: SetLocked(Boolean)
  nameWithType: LockableProperty.SetLocked(Boolean)
  fullName: VRBuilder.Core.Properties.LockableProperty.SetLocked(System.Boolean)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.LockableProperty.SetLocked(System.Boolean)
    name: SetLocked
    nameWithType: LockableProperty.SetLocked
    fullName: VRBuilder.Core.Properties.LockableProperty.SetLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.LockableProperty.SetLocked(System.Boolean)
    name: SetLocked
    nameWithType: LockableProperty.SetLocked
    fullName: VRBuilder.Core.Properties.LockableProperty.SetLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.LockableProperty.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  commentId: M:VRBuilder.Core.Properties.LockableProperty.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  parent: VRBuilder.Core.Properties.LockableProperty
  isExternal: true
  name: RequestLocked(Boolean, IStepData)
  nameWithType: LockableProperty.RequestLocked(Boolean, IStepData)
  fullName: VRBuilder.Core.Properties.LockableProperty.RequestLocked(System.Boolean, VRBuilder.Core.IStepData)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.LockableProperty.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
    name: RequestLocked
    nameWithType: LockableProperty.RequestLocked
    fullName: VRBuilder.Core.Properties.LockableProperty.RequestLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.LockableProperty.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
    name: RequestLocked
    nameWithType: LockableProperty.RequestLocked
    fullName: VRBuilder.Core.Properties.LockableProperty.RequestLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.LockableProperty.RemoveUnlocker(VRBuilder.Core.IStepData)
  commentId: M:VRBuilder.Core.Properties.LockableProperty.RemoveUnlocker(VRBuilder.Core.IStepData)
  parent: VRBuilder.Core.Properties.LockableProperty
  name: RemoveUnlocker(IStepData)
  nameWithType: LockableProperty.RemoveUnlocker(IStepData)
  fullName: VRBuilder.Core.Properties.LockableProperty.RemoveUnlocker(VRBuilder.Core.IStepData)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.LockableProperty.RemoveUnlocker(VRBuilder.Core.IStepData)
    name: RemoveUnlocker
    nameWithType: LockableProperty.RemoveUnlocker
    fullName: VRBuilder.Core.Properties.LockableProperty.RemoveUnlocker
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.LockableProperty.RemoveUnlocker(VRBuilder.Core.IStepData)
    name: RemoveUnlocker
    nameWithType: LockableProperty.RemoveUnlocker
    fullName: VRBuilder.Core.Properties.LockableProperty.RemoveUnlocker
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  commentId: P:VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: SceneObject
  nameWithType: ProcessSceneObjectProperty.SceneObject
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  commentId: M:VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: Reset()
  nameWithType: ProcessSceneObjectProperty.Reset()
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
    name: Reset
    nameWithType: ProcessSceneObjectProperty.Reset
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
    name: Reset
    nameWithType: ProcessSceneObjectProperty.Reset
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  commentId: M:VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: ToString()
  nameWithType: ProcessSceneObjectProperty.ToString()
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
    name: ToString
    nameWithType: ProcessSceneObjectProperty.ToString
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
    name: ToString
    nameWithType: ProcessSceneObjectProperty.ToString
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.BasicInteraction.Properties
  commentId: N:VRBuilder.BasicInteraction.Properties
  name: VRBuilder.BasicInteraction.Properties
  nameWithType: VRBuilder.BasicInteraction.Properties
  fullName: VRBuilder.BasicInteraction.Properties
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Properties
  commentId: N:VRBuilder.Core.Properties
  name: VRBuilder.Core.Properties
  nameWithType: VRBuilder.Core.Properties
  fullName: VRBuilder.Core.Properties
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsShowingHoverMeshes*
  commentId: Overload:VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsShowingHoverMeshes
  name: IsShowingHoverMeshes
  nameWithType: SnapZoneProperty.IsShowingHoverMeshes
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsShowingHoverMeshes
- uid: VRBuilder.Core.Configuration.Modes.ModeParameter{System.Boolean}
  commentId: T:VRBuilder.Core.Configuration.Modes.ModeParameter{System.Boolean}
  parent: VRBuilder.Core.Configuration.Modes
  definition: VRBuilder.Core.Configuration.Modes.ModeParameter`1
  name: ModeParameter<Boolean>
  nameWithType: ModeParameter<Boolean>
  fullName: VRBuilder.Core.Configuration.Modes.ModeParameter<System.Boolean>
  nameWithType.vb: ModeParameter(Of Boolean)
  fullName.vb: VRBuilder.Core.Configuration.Modes.ModeParameter(Of System.Boolean)
  name.vb: ModeParameter(Of Boolean)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.ModeParameter`1
    name: ModeParameter
    nameWithType: ModeParameter
    fullName: VRBuilder.Core.Configuration.Modes.ModeParameter
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.ModeParameter`1
    name: ModeParameter
    nameWithType: ModeParameter
    fullName: VRBuilder.Core.Configuration.Modes.ModeParameter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes.ModeParameter`1
  commentId: T:VRBuilder.Core.Configuration.Modes.ModeParameter`1
  name: ModeParameter<T>
  nameWithType: ModeParameter<T>
  fullName: VRBuilder.Core.Configuration.Modes.ModeParameter<T>
  nameWithType.vb: ModeParameter(Of T)
  fullName.vb: VRBuilder.Core.Configuration.Modes.ModeParameter(Of T)
  name.vb: ModeParameter(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.ModeParameter`1
    name: ModeParameter
    nameWithType: ModeParameter
    fullName: VRBuilder.Core.Configuration.Modes.ModeParameter
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.ModeParameter`1
    name: ModeParameter
    nameWithType: ModeParameter
    fullName: VRBuilder.Core.Configuration.Modes.ModeParameter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes
  commentId: N:VRBuilder.Core.Configuration.Modes
  name: VRBuilder.Core.Configuration.Modes
  nameWithType: VRBuilder.Core.Configuration.Modes
  fullName: VRBuilder.Core.Configuration.Modes
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsShowingHighlightObject*
  commentId: Overload:VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsShowingHighlightObject
  name: IsShowingHighlightObject
  nameWithType: SnapZoneProperty.IsShowingHighlightObject
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsShowingHighlightObject
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.HighlightMaterial*
  commentId: Overload:VRBuilder.XRInteraction.Properties.SnapZoneProperty.HighlightMaterial
  name: HighlightMaterial
  nameWithType: SnapZoneProperty.HighlightMaterial
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.HighlightMaterial
- uid: VRBuilder.Core.Configuration.Modes.ModeParameter{Material}
  commentId: T:VRBuilder.Core.Configuration.Modes.ModeParameter{Material}
  parent: VRBuilder.Core.Configuration.Modes
  definition: VRBuilder.Core.Configuration.Modes.ModeParameter`1
  name: ModeParameter<Material>
  nameWithType: ModeParameter<Material>
  fullName: VRBuilder.Core.Configuration.Modes.ModeParameter<Material>
  nameWithType.vb: ModeParameter(Of Material)
  fullName.vb: VRBuilder.Core.Configuration.Modes.ModeParameter(Of Material)
  name.vb: ModeParameter(Of Material)
  spec.csharp:
  - uid: VRBuilder.Core.Configuration.Modes.ModeParameter`1
    name: ModeParameter
    nameWithType: ModeParameter
    fullName: VRBuilder.Core.Configuration.Modes.ModeParameter
  - name: <
    nameWithType: <
    fullName: <
  - uid: Material
    name: Material
    nameWithType: Material
    fullName: Material
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Configuration.Modes.ModeParameter`1
    name: ModeParameter
    nameWithType: ModeParameter
    fullName: VRBuilder.Core.Configuration.Modes.ModeParameter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Material
    name: Material
    nameWithType: Material
    fullName: Material
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.LockOnUnsnap*
  commentId: Overload:VRBuilder.XRInteraction.Properties.SnapZoneProperty.LockOnUnsnap
  name: LockOnUnsnap
  nameWithType: SnapZoneProperty.LockOnUnsnap
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.LockOnUnsnap
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsObjectSnapped*
  commentId: Overload:VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsObjectSnapped
  name: IsObjectSnapped
  nameWithType: SnapZoneProperty.IsObjectSnapped
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.IsObjectSnapped
- uid: VRBuilder.BasicInteraction.Properties.ISnapZoneProperty.IsObjectSnapped
  commentId: P:VRBuilder.BasicInteraction.Properties.ISnapZoneProperty.IsObjectSnapped
  parent: VRBuilder.BasicInteraction.Properties.ISnapZoneProperty
  name: IsObjectSnapped
  nameWithType: ISnapZoneProperty.IsObjectSnapped
  fullName: VRBuilder.BasicInteraction.Properties.ISnapZoneProperty.IsObjectSnapped
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnappedObject*
  commentId: Overload:VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnappedObject
  name: SnappedObject
  nameWithType: SnapZoneProperty.SnappedObject
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnappedObject
- uid: VRBuilder.BasicInteraction.Properties.ISnapZoneProperty.SnappedObject
  commentId: P:VRBuilder.BasicInteraction.Properties.ISnapZoneProperty.SnappedObject
  parent: VRBuilder.BasicInteraction.Properties.ISnapZoneProperty
  name: SnappedObject
  nameWithType: ISnapZoneProperty.SnappedObject
  fullName: VRBuilder.BasicInteraction.Properties.ISnapZoneProperty.SnappedObject
- uid: VRBuilder.BasicInteraction.Properties.ISnappableProperty
  commentId: T:VRBuilder.BasicInteraction.Properties.ISnappableProperty
  parent: VRBuilder.BasicInteraction.Properties
  name: ISnappableProperty
  nameWithType: ISnappableProperty
  fullName: VRBuilder.BasicInteraction.Properties.ISnappableProperty
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnapZoneObject*
  commentId: Overload:VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnapZoneObject
  name: SnapZoneObject
  nameWithType: SnapZoneProperty.SnapZoneObject
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnapZoneObject
- uid: GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnapZone*
  commentId: Overload:VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnapZone
  name: SnapZone
  nameWithType: SnapZoneProperty.SnapZone
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.SnapZone
- uid: VRBuilder.XRInteraction.SnapZone
  commentId: T:VRBuilder.XRInteraction.SnapZone
  parent: VRBuilder.XRInteraction
  name: SnapZone
  nameWithType: SnapZone
  fullName: VRBuilder.XRInteraction.SnapZone
- uid: VRBuilder.XRInteraction
  commentId: N:VRBuilder.XRInteraction
  name: VRBuilder.XRInteraction
  nameWithType: VRBuilder.XRInteraction
  fullName: VRBuilder.XRInteraction
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.ObjectAttached*
  commentId: Overload:VRBuilder.XRInteraction.Properties.SnapZoneProperty.ObjectAttached
  name: ObjectAttached
  nameWithType: SnapZoneProperty.ObjectAttached
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.ObjectAttached
- uid: UnityEvent{VRBuilder.BasicInteraction.Properties.SnapZonePropertyEventArgs}
  commentId: '!:UnityEvent{VRBuilder.BasicInteraction.Properties.SnapZonePropertyEventArgs}'
  definition: UnityEvent`1
  name: UnityEvent<SnapZonePropertyEventArgs>
  nameWithType: UnityEvent<SnapZonePropertyEventArgs>
  fullName: UnityEvent<VRBuilder.BasicInteraction.Properties.SnapZonePropertyEventArgs>
  nameWithType.vb: UnityEvent(Of SnapZonePropertyEventArgs)
  fullName.vb: UnityEvent(Of VRBuilder.BasicInteraction.Properties.SnapZonePropertyEventArgs)
  name.vb: UnityEvent(Of SnapZonePropertyEventArgs)
  spec.csharp:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.BasicInteraction.Properties.SnapZonePropertyEventArgs
    name: SnapZonePropertyEventArgs
    nameWithType: SnapZonePropertyEventArgs
    fullName: VRBuilder.BasicInteraction.Properties.SnapZonePropertyEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.BasicInteraction.Properties.SnapZonePropertyEventArgs
    name: SnapZonePropertyEventArgs
    nameWithType: SnapZonePropertyEventArgs
    fullName: VRBuilder.BasicInteraction.Properties.SnapZonePropertyEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEvent`1
  isExternal: true
  name: UnityEvent<>
  nameWithType: UnityEvent<>
  fullName: UnityEvent<>
  nameWithType.vb: UnityEvent(Of )
  fullName.vb: UnityEvent(Of )
  name.vb: UnityEvent(Of )
  spec.csharp:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.ObjectDetached*
  commentId: Overload:VRBuilder.XRInteraction.Properties.SnapZoneProperty.ObjectDetached
  name: ObjectDetached
  nameWithType: SnapZoneProperty.ObjectDetached
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.ObjectDetached
- uid: VRBuilder.Core.Properties.LockableProperty.OnEnable
  commentId: M:VRBuilder.Core.Properties.LockableProperty.OnEnable
  parent: VRBuilder.Core.Properties.LockableProperty
  name: OnEnable()
  nameWithType: LockableProperty.OnEnable()
  fullName: VRBuilder.Core.Properties.LockableProperty.OnEnable()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.LockableProperty.OnEnable
    name: OnEnable
    nameWithType: LockableProperty.OnEnable
    fullName: VRBuilder.Core.Properties.LockableProperty.OnEnable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.LockableProperty.OnEnable
    name: OnEnable
    nameWithType: LockableProperty.OnEnable
    fullName: VRBuilder.Core.Properties.LockableProperty.OnEnable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.OnEnable*
  commentId: Overload:VRBuilder.XRInteraction.Properties.SnapZoneProperty.OnEnable
  name: OnEnable
  nameWithType: SnapZoneProperty.OnEnable
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.OnEnable
- uid: VRBuilder.Core.Properties.LockableProperty.OnDisable
  commentId: M:VRBuilder.Core.Properties.LockableProperty.OnDisable
  parent: VRBuilder.Core.Properties.LockableProperty
  name: OnDisable()
  nameWithType: LockableProperty.OnDisable()
  fullName: VRBuilder.Core.Properties.LockableProperty.OnDisable()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.LockableProperty.OnDisable
    name: OnDisable
    nameWithType: LockableProperty.OnDisable
    fullName: VRBuilder.Core.Properties.LockableProperty.OnDisable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.LockableProperty.OnDisable
    name: OnDisable
    nameWithType: LockableProperty.OnDisable
    fullName: VRBuilder.Core.Properties.LockableProperty.OnDisable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.OnDisable*
  commentId: Overload:VRBuilder.XRInteraction.Properties.SnapZoneProperty.OnDisable
  name: OnDisable
  nameWithType: SnapZoneProperty.OnDisable
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.OnDisable
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.Configure*
  commentId: Overload:VRBuilder.XRInteraction.Properties.SnapZoneProperty.Configure
  name: Configure
  nameWithType: SnapZoneProperty.Configure
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.Configure
- uid: VRBuilder.BasicInteraction.Properties.ISnapZoneProperty.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.BasicInteraction.Properties.ISnapZoneProperty.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  parent: VRBuilder.BasicInteraction.Properties.ISnapZoneProperty
  name: Configure(IMode)
  nameWithType: ISnapZoneProperty.Configure(IMode)
  fullName: VRBuilder.BasicInteraction.Properties.ISnapZoneProperty.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  spec.csharp:
  - uid: VRBuilder.BasicInteraction.Properties.ISnapZoneProperty.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: ISnapZoneProperty.Configure
    fullName: VRBuilder.BasicInteraction.Properties.ISnapZoneProperty.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.BasicInteraction.Properties.ISnapZoneProperty.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    nameWithType: ISnapZoneProperty.Configure
    fullName: VRBuilder.BasicInteraction.Properties.ISnapZoneProperty.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    nameWithType: IMode
    fullName: VRBuilder.Core.Configuration.Modes.IMode
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes.IMode
  commentId: T:VRBuilder.Core.Configuration.Modes.IMode
  parent: VRBuilder.Core.Configuration.Modes
  name: IMode
  nameWithType: IMode
  fullName: VRBuilder.Core.Configuration.Modes.IMode
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitSnapped
  commentId: M:VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitSnapped
  isExternal: true
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitSnapped*
  commentId: Overload:VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitSnapped
  name: EmitSnapped
  nameWithType: SnapZoneProperty.EmitSnapped
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitSnapped
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitUnsnapped
  commentId: M:VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitUnsnapped
  isExternal: true
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitUnsnapped*
  commentId: Overload:VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitUnsnapped
  name: EmitUnsnapped
  nameWithType: SnapZoneProperty.EmitUnsnapped
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.EmitUnsnapped
- uid: VRBuilder.Core.Properties.LockableProperty.InternalSetLocked(System.Boolean)
  commentId: M:VRBuilder.Core.Properties.LockableProperty.InternalSetLocked(System.Boolean)
  parent: VRBuilder.Core.Properties.LockableProperty
  isExternal: true
  name: InternalSetLocked(Boolean)
  nameWithType: LockableProperty.InternalSetLocked(Boolean)
  fullName: VRBuilder.Core.Properties.LockableProperty.InternalSetLocked(System.Boolean)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.LockableProperty.InternalSetLocked(System.Boolean)
    name: InternalSetLocked
    nameWithType: LockableProperty.InternalSetLocked
    fullName: VRBuilder.Core.Properties.LockableProperty.InternalSetLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.LockableProperty.InternalSetLocked(System.Boolean)
    name: InternalSetLocked
    nameWithType: LockableProperty.InternalSetLocked
    fullName: VRBuilder.Core.Properties.LockableProperty.InternalSetLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.XRInteraction.Properties.SnapZoneProperty.InternalSetLocked*
  commentId: Overload:VRBuilder.XRInteraction.Properties.SnapZoneProperty.InternalSetLocked
  name: InternalSetLocked
  nameWithType: SnapZoneProperty.InternalSetLocked
  fullName: VRBuilder.XRInteraction.Properties.SnapZoneProperty.InternalSetLocked
