### YamlMime:ManagedReference
items:
- uid: VRBuilder.StatesAndData.Properties.GenericEventProperty`1
  commentId: T:VRBuilder.StatesAndData.Properties.GenericEventProperty`1
  id: GenericEventProperty`1
  parent: VRBuilder.StatesAndData.Properties
  children:
  - VRBuilder.StatesAndData.Properties.GenericEventProperty`1.TriggerEvent(`0)
  langs:
  - csharp
  - vb
  name: GenericEventProperty<T>
  nameWithType: GenericEventProperty<T>
  fullName: VRBuilder.StatesAndData.Properties.GenericEventProperty<T>
  type: Class
  source:
    remote:
      path: Source/Runtime/Properties/GenericEventProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/States-and-Data-for-VR-Builder.git
    id: GenericEventProperty
    path: ../../Assets/MindPort/VR Builder/Add-ons/StatesAndData/Source/Runtime/Properties/GenericEventProperty.cs
    startLine: 9
  assemblies:
  - VRBuilder.StatesAndData
  namespace: VRBuilder.StatesAndData.Properties
  summary: "\nAbstract implementation of the generic event property.\n"
  example: []
  syntax:
    content: 'public abstract class GenericEventProperty<T> : ProcessSceneObjectProperty, IGenericEventProperty<T>, ISceneObjectProperty'
    typeParameters:
    - id: T
    content.vb: >-
      Public MustInherit Class GenericEventProperty(Of T)
          Inherits ProcessSceneObjectProperty
          Implements IGenericEventProperty(Of T), ISceneObjectProperty
  inheritance:
  - System.Object
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty
  derivedClasses:
  - VRBuilder.StatesAndData.Properties.BooleanEventProperty
  - VRBuilder.StatesAndData.Properties.NumberEventProperty
  - VRBuilder.StatesAndData.Properties.TextEventProperty
  implements:
  - VRBuilder.StatesAndData.Properties.IGenericEventProperty{{T}}
  - VRBuilder.Core.Properties.ISceneObjectProperty
  inheritedMembers:
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  nameWithType.vb: GenericEventProperty(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: VRBuilder.StatesAndData.Properties.GenericEventProperty(Of T)
  name.vb: GenericEventProperty(Of T)
- uid: VRBuilder.StatesAndData.Properties.GenericEventProperty`1.TriggerEvent(`0)
  commentId: M:VRBuilder.StatesAndData.Properties.GenericEventProperty`1.TriggerEvent(`0)
  id: TriggerEvent(`0)
  parent: VRBuilder.StatesAndData.Properties.GenericEventProperty`1
  langs:
  - csharp
  - vb
  name: TriggerEvent(T)
  nameWithType: GenericEventProperty<T>.TriggerEvent(T)
  fullName: VRBuilder.StatesAndData.Properties.GenericEventProperty<T>.TriggerEvent(T)
  type: Method
  source:
    remote:
      path: Source/Runtime/Properties/GenericEventProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/States-and-Data-for-VR-Builder.git
    id: TriggerEvent
    path: ../../Assets/MindPort/VR Builder/Add-ons/StatesAndData/Source/Runtime/Properties/GenericEventProperty.cs
    startLine: 18
  assemblies:
  - VRBuilder.StatesAndData
  namespace: VRBuilder.StatesAndData.Properties
  summary: "\nTriggers the associated event.\n"
  example: []
  syntax:
    content: public void TriggerEvent(T arg)
    parameters:
    - id: arg
      type: '{T}'
    content.vb: Public Sub TriggerEvent(arg As T)
  overload: VRBuilder.StatesAndData.Properties.GenericEventProperty`1.TriggerEvent*
  implements:
  - VRBuilder.StatesAndData.Properties.IGenericEventProperty{{T}}.TriggerEvent({T})
  nameWithType.vb: GenericEventProperty(Of T).TriggerEvent(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.StatesAndData.Properties.GenericEventProperty(Of T).TriggerEvent(T)
references:
- uid: VRBuilder.StatesAndData.Properties
  commentId: N:VRBuilder.StatesAndData.Properties
  name: VRBuilder.StatesAndData.Properties
  nameWithType: VRBuilder.StatesAndData.Properties
  fullName: VRBuilder.StatesAndData.Properties
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ProcessSceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ProcessSceneObjectProperty
  nameWithType: ProcessSceneObjectProperty
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty
- uid: VRBuilder.StatesAndData.Properties.IGenericEventProperty{{T}}
  commentId: T:VRBuilder.StatesAndData.Properties.IGenericEventProperty{`0}
  parent: VRBuilder.StatesAndData.Properties
  definition: VRBuilder.StatesAndData.Properties.IGenericEventProperty`1
  name: IGenericEventProperty<T>
  nameWithType: IGenericEventProperty<T>
  fullName: VRBuilder.StatesAndData.Properties.IGenericEventProperty<T>
  nameWithType.vb: IGenericEventProperty(Of T)
  fullName.vb: VRBuilder.StatesAndData.Properties.IGenericEventProperty(Of T)
  name.vb: IGenericEventProperty(Of T)
  spec.csharp:
  - uid: VRBuilder.StatesAndData.Properties.IGenericEventProperty`1
    name: IGenericEventProperty
    nameWithType: IGenericEventProperty
    fullName: VRBuilder.StatesAndData.Properties.IGenericEventProperty
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.StatesAndData.Properties.IGenericEventProperty`1
    name: IGenericEventProperty
    nameWithType: IGenericEventProperty
    fullName: VRBuilder.StatesAndData.Properties.IGenericEventProperty
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ISceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ISceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ISceneObjectProperty
  nameWithType: ISceneObjectProperty
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  commentId: P:VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: SceneObject
  nameWithType: ProcessSceneObjectProperty.SceneObject
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.SceneObject
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  commentId: M:VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: OnEnable()
  nameWithType: ProcessSceneObjectProperty.OnEnable()
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
    name: OnEnable
    nameWithType: ProcessSceneObjectProperty.OnEnable
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
    name: OnEnable
    nameWithType: ProcessSceneObjectProperty.OnEnable
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.OnEnable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  commentId: M:VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: Reset()
  nameWithType: ProcessSceneObjectProperty.Reset()
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
    name: Reset
    nameWithType: ProcessSceneObjectProperty.Reset
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
    name: Reset
    nameWithType: ProcessSceneObjectProperty.Reset
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  commentId: M:VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  parent: VRBuilder.Core.Properties.ProcessSceneObjectProperty
  name: ToString()
  nameWithType: ProcessSceneObjectProperty.ToString()
  fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
    name: ToString
    nameWithType: ProcessSceneObjectProperty.ToString
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
    name: ToString
    nameWithType: ProcessSceneObjectProperty.ToString
    fullName: VRBuilder.Core.Properties.ProcessSceneObjectProperty.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Properties
  commentId: N:VRBuilder.Core.Properties
  name: VRBuilder.Core.Properties
  nameWithType: VRBuilder.Core.Properties
  fullName: VRBuilder.Core.Properties
- uid: VRBuilder.StatesAndData.Properties.IGenericEventProperty`1
  commentId: T:VRBuilder.StatesAndData.Properties.IGenericEventProperty`1
  name: IGenericEventProperty<T>
  nameWithType: IGenericEventProperty<T>
  fullName: VRBuilder.StatesAndData.Properties.IGenericEventProperty<T>
  nameWithType.vb: IGenericEventProperty(Of T)
  fullName.vb: VRBuilder.StatesAndData.Properties.IGenericEventProperty(Of T)
  name.vb: IGenericEventProperty(Of T)
  spec.csharp:
  - uid: VRBuilder.StatesAndData.Properties.IGenericEventProperty`1
    name: IGenericEventProperty
    nameWithType: IGenericEventProperty
    fullName: VRBuilder.StatesAndData.Properties.IGenericEventProperty
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.StatesAndData.Properties.IGenericEventProperty`1
    name: IGenericEventProperty
    nameWithType: IGenericEventProperty
    fullName: VRBuilder.StatesAndData.Properties.IGenericEventProperty
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.StatesAndData.Properties.GenericEventProperty`1.TriggerEvent*
  commentId: Overload:VRBuilder.StatesAndData.Properties.GenericEventProperty`1.TriggerEvent
  name: TriggerEvent
  nameWithType: GenericEventProperty<T>.TriggerEvent
  fullName: VRBuilder.StatesAndData.Properties.GenericEventProperty<T>.TriggerEvent
  nameWithType.vb: GenericEventProperty(Of T).TriggerEvent
  fullName.vb: VRBuilder.StatesAndData.Properties.GenericEventProperty(Of T).TriggerEvent
- uid: VRBuilder.StatesAndData.Properties.IGenericEventProperty{{T}}.TriggerEvent({T})
  commentId: M:VRBuilder.StatesAndData.Properties.IGenericEventProperty{`0}.TriggerEvent(`0)
  parent: VRBuilder.StatesAndData.Properties.IGenericEventProperty{{T}}
  definition: VRBuilder.StatesAndData.Properties.IGenericEventProperty`1.TriggerEvent(`0)
  name: TriggerEvent(T)
  nameWithType: IGenericEventProperty<T>.TriggerEvent(T)
  fullName: VRBuilder.StatesAndData.Properties.IGenericEventProperty<T>.TriggerEvent(T)
  nameWithType.vb: IGenericEventProperty(Of T).TriggerEvent(T)
  fullName.vb: VRBuilder.StatesAndData.Properties.IGenericEventProperty(Of T).TriggerEvent(T)
  spec.csharp:
  - uid: VRBuilder.StatesAndData.Properties.IGenericEventProperty`1.TriggerEvent(`0)
    name: TriggerEvent
    nameWithType: IGenericEventProperty<T>.TriggerEvent
    fullName: VRBuilder.StatesAndData.Properties.IGenericEventProperty<T>.TriggerEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.StatesAndData.Properties.IGenericEventProperty`1.TriggerEvent(`0)
    name: TriggerEvent
    nameWithType: IGenericEventProperty(Of T).TriggerEvent
    fullName: VRBuilder.StatesAndData.Properties.IGenericEventProperty(Of T).TriggerEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: VRBuilder.StatesAndData.Properties.IGenericEventProperty`1.TriggerEvent(`0)
  commentId: M:VRBuilder.StatesAndData.Properties.IGenericEventProperty`1.TriggerEvent(`0)
  name: TriggerEvent(T)
  nameWithType: IGenericEventProperty<T>.TriggerEvent(T)
  fullName: VRBuilder.StatesAndData.Properties.IGenericEventProperty<T>.TriggerEvent(T)
  nameWithType.vb: IGenericEventProperty(Of T).TriggerEvent(T)
  fullName.vb: VRBuilder.StatesAndData.Properties.IGenericEventProperty(Of T).TriggerEvent(T)
  spec.csharp:
  - uid: VRBuilder.StatesAndData.Properties.IGenericEventProperty`1.TriggerEvent(`0)
    name: TriggerEvent
    nameWithType: IGenericEventProperty<T>.TriggerEvent
    fullName: VRBuilder.StatesAndData.Properties.IGenericEventProperty<T>.TriggerEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.StatesAndData.Properties.IGenericEventProperty`1.TriggerEvent(`0)
    name: TriggerEvent
    nameWithType: IGenericEventProperty(Of T).TriggerEvent
    fullName: VRBuilder.StatesAndData.Properties.IGenericEventProperty(Of T).TriggerEvent
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
