### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.ProcessUtils.ConfettiMachine
  commentId: T:VRBuilder.Core.ProcessUtils.ConfettiMachine
  id: ConfettiMachine
  parent: VRBuilder.Core.ProcessUtils
  children:
  - VRBuilder.Core.ProcessUtils.ConfettiMachine.Activate
  - VRBuilder.Core.ProcessUtils.ConfettiMachine.Activate(System.Single,System.Single)
  - VRBuilder.Core.ProcessUtils.ConfettiMachine.ChangeAreaRadius(System.Single)
  - VRBuilder.Core.ProcessUtils.ConfettiMachine.ChangeEmissionDuration(System.Single)
  - VRBuilder.Core.ProcessUtils.ConfettiMachine.Deactivate
  - VRBuilder.Core.ProcessUtils.ConfettiMachine.EmissionDuration
  - VRBuilder.Core.ProcessUtils.ConfettiMachine.IsActive
  langs:
  - csharp
  - vb
  name: ConfettiMachine
  nameWithType: ConfettiMachine
  fullName: VRBuilder.Core.ProcessUtils.ConfettiMachine
  type: Class
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/ProcessUtilities/ParticleMachines/ConfettiMachine.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ConfettiMachine
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/ProcessUtilities/ParticleMachines/ConfettiMachine.cs
    startLine: 9
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.ProcessUtils
  summary: "\nManager of all listed particle systems using confetti as particles.\nManages activation, deactivation, and some particle system configurations.\n"
  example: []
  syntax:
    content: 'public class ConfettiMachine : MonoBehaviour, IParticleMachine'
    content.vb: >-
      Public Class ConfettiMachine
          Inherits MonoBehaviour
          Implements IParticleMachine
  inheritance:
  - System.Object
  implements:
  - VRBuilder.Core.ProcessUtils.IParticleMachine
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.ProcessUtils.ConfettiMachine.EmissionDuration
  commentId: P:VRBuilder.Core.ProcessUtils.ConfettiMachine.EmissionDuration
  id: EmissionDuration
  parent: VRBuilder.Core.ProcessUtils.ConfettiMachine
  langs:
  - csharp
  - vb
  name: EmissionDuration
  nameWithType: ConfettiMachine.EmissionDuration
  fullName: VRBuilder.Core.ProcessUtils.ConfettiMachine.EmissionDuration
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/ProcessUtilities/ParticleMachines/ConfettiMachine.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EmissionDuration
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/ProcessUtilities/ParticleMachines/ConfettiMachine.cs
    startLine: 36
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.ProcessUtils
  summary: "\nDuration in seconds after the machine finishes to emit confetti.\n"
  example: []
  syntax:
    content: public float EmissionDuration { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property EmissionDuration As Single
  overload: VRBuilder.Core.ProcessUtils.ConfettiMachine.EmissionDuration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.ProcessUtils.ConfettiMachine.IsActive
  commentId: P:VRBuilder.Core.ProcessUtils.ConfettiMachine.IsActive
  id: IsActive
  parent: VRBuilder.Core.ProcessUtils.ConfettiMachine
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: ConfettiMachine.IsActive
  fullName: VRBuilder.Core.ProcessUtils.ConfettiMachine.IsActive
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/ProcessUtilities/ParticleMachines/ConfettiMachine.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsActive
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/ProcessUtilities/ParticleMachines/ConfettiMachine.cs
    startLine: 45
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.ProcessUtils
  summary: "\nTrue if particle machine is currently active and emitting particles.\n"
  example: []
  syntax:
    content: public bool IsActive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsActive As Boolean
  overload: VRBuilder.Core.ProcessUtils.ConfettiMachine.IsActive*
  implements:
  - VRBuilder.Core.ProcessUtils.IParticleMachine.IsActive
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.ProcessUtils.ConfettiMachine.Activate
  commentId: M:VRBuilder.Core.ProcessUtils.ConfettiMachine.Activate
  id: Activate
  parent: VRBuilder.Core.ProcessUtils.ConfettiMachine
  langs:
  - csharp
  - vb
  name: Activate()
  nameWithType: ConfettiMachine.Activate()
  fullName: VRBuilder.Core.ProcessUtils.ConfettiMachine.Activate()
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/ProcessUtilities/ParticleMachines/ConfettiMachine.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Activate
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/ProcessUtilities/ParticleMachines/ConfettiMachine.cs
    startLine: 48
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.ProcessUtils
  summary: "\nActivates the particle machine.\n"
  example: []
  syntax:
    content: public void Activate()
    content.vb: Public Sub Activate
  overload: VRBuilder.Core.ProcessUtils.ConfettiMachine.Activate*
  implements:
  - VRBuilder.Core.ProcessUtils.IParticleMachine.Activate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.ProcessUtils.ConfettiMachine.Activate(System.Single,System.Single)
  commentId: M:VRBuilder.Core.ProcessUtils.ConfettiMachine.Activate(System.Single,System.Single)
  id: Activate(System.Single,System.Single)
  parent: VRBuilder.Core.ProcessUtils.ConfettiMachine
  langs:
  - csharp
  - vb
  name: Activate(Single, Single)
  nameWithType: ConfettiMachine.Activate(Single, Single)
  fullName: VRBuilder.Core.ProcessUtils.ConfettiMachine.Activate(System.Single, System.Single)
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/ProcessUtilities/ParticleMachines/ConfettiMachine.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Activate
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/ProcessUtilities/ParticleMachines/ConfettiMachine.cs
    startLine: 70
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.ProcessUtils
  summary: "\nActivates the particle machine.\n"
  example: []
  syntax:
    content: public void Activate(float newRadius, float newDuration)
    parameters:
    - id: newRadius
      type: System.Single
    - id: newDuration
      type: System.Single
    content.vb: Public Sub Activate(newRadius As Single, newDuration As Single)
  overload: VRBuilder.Core.ProcessUtils.ConfettiMachine.Activate*
  implements:
  - VRBuilder.Core.ProcessUtils.IParticleMachine.Activate(System.Single,System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.ProcessUtils.ConfettiMachine.Deactivate
  commentId: M:VRBuilder.Core.ProcessUtils.ConfettiMachine.Deactivate
  id: Deactivate
  parent: VRBuilder.Core.ProcessUtils.ConfettiMachine
  langs:
  - csharp
  - vb
  name: Deactivate()
  nameWithType: ConfettiMachine.Deactivate()
  fullName: VRBuilder.Core.ProcessUtils.ConfettiMachine.Deactivate()
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/ProcessUtilities/ParticleMachines/ConfettiMachine.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Deactivate
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/ProcessUtilities/ParticleMachines/ConfettiMachine.cs
    startLine: 83
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.ProcessUtils
  summary: "\nDeactivates the particle machine.\n"
  example: []
  syntax:
    content: public void Deactivate()
    content.vb: Public Sub Deactivate
  overload: VRBuilder.Core.ProcessUtils.ConfettiMachine.Deactivate*
  implements:
  - VRBuilder.Core.ProcessUtils.IParticleMachine.Deactivate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.ProcessUtils.ConfettiMachine.ChangeAreaRadius(System.Single)
  commentId: M:VRBuilder.Core.ProcessUtils.ConfettiMachine.ChangeAreaRadius(System.Single)
  id: ChangeAreaRadius(System.Single)
  parent: VRBuilder.Core.ProcessUtils.ConfettiMachine
  langs:
  - csharp
  - vb
  name: ChangeAreaRadius(Single)
  nameWithType: ConfettiMachine.ChangeAreaRadius(Single)
  fullName: VRBuilder.Core.ProcessUtils.ConfettiMachine.ChangeAreaRadius(System.Single)
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/ProcessUtilities/ParticleMachines/ConfettiMachine.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ChangeAreaRadius
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/ProcessUtilities/ParticleMachines/ConfettiMachine.cs
    startLine: 106
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.ProcessUtils
  summary: "\nChanges the radius of the emission area.\n"
  example: []
  syntax:
    content: public void ChangeAreaRadius(float newRadius)
    parameters:
    - id: newRadius
      type: System.Single
    content.vb: Public Sub ChangeAreaRadius(newRadius As Single)
  overload: VRBuilder.Core.ProcessUtils.ConfettiMachine.ChangeAreaRadius*
  implements:
  - VRBuilder.Core.ProcessUtils.IParticleMachine.ChangeAreaRadius(System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.ProcessUtils.ConfettiMachine.ChangeEmissionDuration(System.Single)
  commentId: M:VRBuilder.Core.ProcessUtils.ConfettiMachine.ChangeEmissionDuration(System.Single)
  id: ChangeEmissionDuration(System.Single)
  parent: VRBuilder.Core.ProcessUtils.ConfettiMachine
  langs:
  - csharp
  - vb
  name: ChangeEmissionDuration(Single)
  nameWithType: ConfettiMachine.ChangeEmissionDuration(Single)
  fullName: VRBuilder.Core.ProcessUtils.ConfettiMachine.ChangeEmissionDuration(System.Single)
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/ProcessUtilities/ParticleMachines/ConfettiMachine.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ChangeEmissionDuration
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/ProcessUtilities/ParticleMachines/ConfettiMachine.cs
    startLine: 129
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.ProcessUtils
  summary: "\nChanges the duration of the emission of the particle systems.\n"
  example: []
  syntax:
    content: public void ChangeEmissionDuration(float newDuration)
    parameters:
    - id: newDuration
      type: System.Single
    content.vb: Public Sub ChangeEmissionDuration(newDuration As Single)
  overload: VRBuilder.Core.ProcessUtils.ConfettiMachine.ChangeEmissionDuration*
  implements:
  - VRBuilder.Core.ProcessUtils.IParticleMachine.ChangeEmissionDuration(System.Single)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Core.ProcessUtils
  commentId: N:VRBuilder.Core.ProcessUtils
  name: VRBuilder.Core.ProcessUtils
  nameWithType: VRBuilder.Core.ProcessUtils
  fullName: VRBuilder.Core.ProcessUtils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.ProcessUtils.IParticleMachine
  commentId: T:VRBuilder.Core.ProcessUtils.IParticleMachine
  parent: VRBuilder.Core.ProcessUtils
  name: IParticleMachine
  nameWithType: IParticleMachine
  fullName: VRBuilder.Core.ProcessUtils.IParticleMachine
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.ProcessUtils.ConfettiMachine.EmissionDuration*
  commentId: Overload:VRBuilder.Core.ProcessUtils.ConfettiMachine.EmissionDuration
  name: EmissionDuration
  nameWithType: ConfettiMachine.EmissionDuration
  fullName: VRBuilder.Core.ProcessUtils.ConfettiMachine.EmissionDuration
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: VRBuilder.Core.ProcessUtils.ConfettiMachine.IsActive*
  commentId: Overload:VRBuilder.Core.ProcessUtils.ConfettiMachine.IsActive
  name: IsActive
  nameWithType: ConfettiMachine.IsActive
  fullName: VRBuilder.Core.ProcessUtils.ConfettiMachine.IsActive
- uid: VRBuilder.Core.ProcessUtils.IParticleMachine.IsActive
  commentId: P:VRBuilder.Core.ProcessUtils.IParticleMachine.IsActive
  parent: VRBuilder.Core.ProcessUtils.IParticleMachine
  name: IsActive
  nameWithType: IParticleMachine.IsActive
  fullName: VRBuilder.Core.ProcessUtils.IParticleMachine.IsActive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.ProcessUtils.ConfettiMachine.Activate*
  commentId: Overload:VRBuilder.Core.ProcessUtils.ConfettiMachine.Activate
  name: Activate
  nameWithType: ConfettiMachine.Activate
  fullName: VRBuilder.Core.ProcessUtils.ConfettiMachine.Activate
- uid: VRBuilder.Core.ProcessUtils.IParticleMachine.Activate
  commentId: M:VRBuilder.Core.ProcessUtils.IParticleMachine.Activate
  parent: VRBuilder.Core.ProcessUtils.IParticleMachine
  name: Activate()
  nameWithType: IParticleMachine.Activate()
  fullName: VRBuilder.Core.ProcessUtils.IParticleMachine.Activate()
  spec.csharp:
  - uid: VRBuilder.Core.ProcessUtils.IParticleMachine.Activate
    name: Activate
    nameWithType: IParticleMachine.Activate
    fullName: VRBuilder.Core.ProcessUtils.IParticleMachine.Activate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.ProcessUtils.IParticleMachine.Activate
    name: Activate
    nameWithType: IParticleMachine.Activate
    fullName: VRBuilder.Core.ProcessUtils.IParticleMachine.Activate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.ProcessUtils.IParticleMachine.Activate(System.Single,System.Single)
  commentId: M:VRBuilder.Core.ProcessUtils.IParticleMachine.Activate(System.Single,System.Single)
  parent: VRBuilder.Core.ProcessUtils.IParticleMachine
  isExternal: true
  name: Activate(Single, Single)
  nameWithType: IParticleMachine.Activate(Single, Single)
  fullName: VRBuilder.Core.ProcessUtils.IParticleMachine.Activate(System.Single, System.Single)
  spec.csharp:
  - uid: VRBuilder.Core.ProcessUtils.IParticleMachine.Activate(System.Single,System.Single)
    name: Activate
    nameWithType: IParticleMachine.Activate
    fullName: VRBuilder.Core.ProcessUtils.IParticleMachine.Activate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.ProcessUtils.IParticleMachine.Activate(System.Single,System.Single)
    name: Activate
    nameWithType: IParticleMachine.Activate
    fullName: VRBuilder.Core.ProcessUtils.IParticleMachine.Activate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.ProcessUtils.ConfettiMachine.Deactivate*
  commentId: Overload:VRBuilder.Core.ProcessUtils.ConfettiMachine.Deactivate
  name: Deactivate
  nameWithType: ConfettiMachine.Deactivate
  fullName: VRBuilder.Core.ProcessUtils.ConfettiMachine.Deactivate
- uid: VRBuilder.Core.ProcessUtils.IParticleMachine.Deactivate
  commentId: M:VRBuilder.Core.ProcessUtils.IParticleMachine.Deactivate
  parent: VRBuilder.Core.ProcessUtils.IParticleMachine
  name: Deactivate()
  nameWithType: IParticleMachine.Deactivate()
  fullName: VRBuilder.Core.ProcessUtils.IParticleMachine.Deactivate()
  spec.csharp:
  - uid: VRBuilder.Core.ProcessUtils.IParticleMachine.Deactivate
    name: Deactivate
    nameWithType: IParticleMachine.Deactivate
    fullName: VRBuilder.Core.ProcessUtils.IParticleMachine.Deactivate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.ProcessUtils.IParticleMachine.Deactivate
    name: Deactivate
    nameWithType: IParticleMachine.Deactivate
    fullName: VRBuilder.Core.ProcessUtils.IParticleMachine.Deactivate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.ProcessUtils.ConfettiMachine.ChangeAreaRadius*
  commentId: Overload:VRBuilder.Core.ProcessUtils.ConfettiMachine.ChangeAreaRadius
  name: ChangeAreaRadius
  nameWithType: ConfettiMachine.ChangeAreaRadius
  fullName: VRBuilder.Core.ProcessUtils.ConfettiMachine.ChangeAreaRadius
- uid: VRBuilder.Core.ProcessUtils.IParticleMachine.ChangeAreaRadius(System.Single)
  commentId: M:VRBuilder.Core.ProcessUtils.IParticleMachine.ChangeAreaRadius(System.Single)
  parent: VRBuilder.Core.ProcessUtils.IParticleMachine
  isExternal: true
  name: ChangeAreaRadius(Single)
  nameWithType: IParticleMachine.ChangeAreaRadius(Single)
  fullName: VRBuilder.Core.ProcessUtils.IParticleMachine.ChangeAreaRadius(System.Single)
  spec.csharp:
  - uid: VRBuilder.Core.ProcessUtils.IParticleMachine.ChangeAreaRadius(System.Single)
    name: ChangeAreaRadius
    nameWithType: IParticleMachine.ChangeAreaRadius
    fullName: VRBuilder.Core.ProcessUtils.IParticleMachine.ChangeAreaRadius
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.ProcessUtils.IParticleMachine.ChangeAreaRadius(System.Single)
    name: ChangeAreaRadius
    nameWithType: IParticleMachine.ChangeAreaRadius
    fullName: VRBuilder.Core.ProcessUtils.IParticleMachine.ChangeAreaRadius
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.ProcessUtils.ConfettiMachine.ChangeEmissionDuration*
  commentId: Overload:VRBuilder.Core.ProcessUtils.ConfettiMachine.ChangeEmissionDuration
  name: ChangeEmissionDuration
  nameWithType: ConfettiMachine.ChangeEmissionDuration
  fullName: VRBuilder.Core.ProcessUtils.ConfettiMachine.ChangeEmissionDuration
- uid: VRBuilder.Core.ProcessUtils.IParticleMachine.ChangeEmissionDuration(System.Single)
  commentId: M:VRBuilder.Core.ProcessUtils.IParticleMachine.ChangeEmissionDuration(System.Single)
  parent: VRBuilder.Core.ProcessUtils.IParticleMachine
  isExternal: true
  name: ChangeEmissionDuration(Single)
  nameWithType: IParticleMachine.ChangeEmissionDuration(Single)
  fullName: VRBuilder.Core.ProcessUtils.IParticleMachine.ChangeEmissionDuration(System.Single)
  spec.csharp:
  - uid: VRBuilder.Core.ProcessUtils.IParticleMachine.ChangeEmissionDuration(System.Single)
    name: ChangeEmissionDuration
    nameWithType: IParticleMachine.ChangeEmissionDuration
    fullName: VRBuilder.Core.ProcessUtils.IParticleMachine.ChangeEmissionDuration
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.ProcessUtils.IParticleMachine.ChangeEmissionDuration(System.Single)
    name: ChangeEmissionDuration
    nameWithType: IParticleMachine.ChangeEmissionDuration
    fullName: VRBuilder.Core.ProcessUtils.IParticleMachine.ChangeEmissionDuration
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
