### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData
  commentId: T:VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData
  id: LockablePropertyData
  parent: VRBuilder.Core.RestrictiveEnvironment
  children:
  - VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.#ctor(VRBuilder.Core.Properties.LockableProperty)
  - VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.#ctor(VRBuilder.Core.Properties.LockableProperty,System.Boolean)
  - VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.EndStepLocked
  - VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.Equals(System.Object)
  - VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.Equals(VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData)
  - VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.GetHashCode
  - VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.Property
  langs:
  - csharp
  - vb
  name: LockablePropertyData
  nameWithType: LockablePropertyData
  fullName: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Properties/LockablePropertyData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LockablePropertyData
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/LockablePropertyData.cs
    startLine: 11
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.RestrictiveEnvironment
  summary: "\nContains a target <xref href=\"VRBuilder.Core.Properties.LockableProperty\" data-throw-if-not-resolved=\"false\"></xref> and additional information which define how the property is handled.\n"
  example: []
  syntax:
    content: public class LockablePropertyData
    content.vb: Public Class LockablePropertyData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.Property
  commentId: F:VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.Property
  id: Property
  parent: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData
  langs:
  - csharp
  - vb
  name: Property
  nameWithType: LockablePropertyData.Property
  fullName: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.Property
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/Properties/LockablePropertyData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Property
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/LockablePropertyData.cs
    startLine: 16
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.RestrictiveEnvironment
  summary: "\nTarget lockable property.\n"
  example: []
  syntax:
    content: public readonly LockableProperty Property
    return:
      type: VRBuilder.Core.Properties.LockableProperty
    content.vb: Public ReadOnly Property As LockableProperty
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.EndStepLocked
  commentId: F:VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.EndStepLocked
  id: EndStepLocked
  parent: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData
  langs:
  - csharp
  - vb
  name: EndStepLocked
  nameWithType: LockablePropertyData.EndStepLocked
  fullName: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.EndStepLocked
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/Properties/LockablePropertyData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EndStepLocked
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/LockablePropertyData.cs
    startLine: 21
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.RestrictiveEnvironment
  summary: "\nIf true the property is locked in the end of a step.\n"
  example: []
  syntax:
    content: public bool EndStepLocked
    return:
      type: System.Boolean
    content.vb: Public EndStepLocked As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.#ctor(VRBuilder.Core.Properties.LockableProperty)
  commentId: M:VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.#ctor(VRBuilder.Core.Properties.LockableProperty)
  id: '#ctor(VRBuilder.Core.Properties.LockableProperty)'
  parent: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData
  langs:
  - csharp
  - vb
  name: LockablePropertyData(LockableProperty)
  nameWithType: LockablePropertyData.LockablePropertyData(LockableProperty)
  fullName: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.LockablePropertyData(VRBuilder.Core.Properties.LockableProperty)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/Properties/LockablePropertyData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/LockablePropertyData.cs
    startLine: 23
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.RestrictiveEnvironment
  syntax:
    content: public LockablePropertyData(LockableProperty property)
    parameters:
    - id: property
      type: VRBuilder.Core.Properties.LockableProperty
    content.vb: Public Sub New(property As LockableProperty)
  overload: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.#ctor(VRBuilder.Core.Properties.LockableProperty,System.Boolean)
  commentId: M:VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.#ctor(VRBuilder.Core.Properties.LockableProperty,System.Boolean)
  id: '#ctor(VRBuilder.Core.Properties.LockableProperty,System.Boolean)'
  parent: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData
  langs:
  - csharp
  - vb
  name: LockablePropertyData(LockableProperty, Boolean)
  nameWithType: LockablePropertyData.LockablePropertyData(LockableProperty, Boolean)
  fullName: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.LockablePropertyData(VRBuilder.Core.Properties.LockableProperty, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/Properties/LockablePropertyData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/LockablePropertyData.cs
    startLine: 25
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.RestrictiveEnvironment
  syntax:
    content: public LockablePropertyData(LockableProperty property, bool endStepLocked)
    parameters:
    - id: property
      type: VRBuilder.Core.Properties.LockableProperty
    - id: endStepLocked
      type: System.Boolean
    content.vb: Public Sub New(property As LockableProperty, endStepLocked As Boolean)
  overload: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.Equals(VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData)
  commentId: M:VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.Equals(VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData)
  id: Equals(VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData)
  parent: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData
  langs:
  - csharp
  - vb
  name: Equals(LockablePropertyData)
  nameWithType: LockablePropertyData.Equals(LockablePropertyData)
  fullName: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.Equals(VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Properties/LockablePropertyData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Equals
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/LockablePropertyData.cs
    startLine: 31
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.RestrictiveEnvironment
  syntax:
    content: protected bool Equals(LockablePropertyData other)
    parameters:
    - id: other
      type: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData
    return:
      type: System.Boolean
    content.vb: Protected Function Equals(other As LockablePropertyData) As Boolean
  overload: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.Equals*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.Equals(System.Object)
  commentId: M:VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.Equals(System.Object)
  id: Equals(System.Object)
  parent: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: LockablePropertyData.Equals(Object)
  fullName: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Properties/LockablePropertyData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Equals
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/LockablePropertyData.cs
    startLine: 37
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.RestrictiveEnvironment
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.GetHashCode
  commentId: M:VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.GetHashCode
  id: GetHashCode
  parent: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: LockablePropertyData.GetHashCode()
  fullName: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.GetHashCode()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Properties/LockablePropertyData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetHashCode
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Properties/LockablePropertyData.cs
    startLine: 46
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.RestrictiveEnvironment
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VRBuilder.Core.Properties.LockableProperty
  commentId: T:VRBuilder.Core.Properties.LockableProperty
  parent: VRBuilder.Core.Properties
  name: LockableProperty
  nameWithType: LockableProperty
  fullName: VRBuilder.Core.Properties.LockableProperty
- uid: VRBuilder.Core.RestrictiveEnvironment
  commentId: N:VRBuilder.Core.RestrictiveEnvironment
  name: VRBuilder.Core.RestrictiveEnvironment
  nameWithType: VRBuilder.Core.RestrictiveEnvironment
  fullName: VRBuilder.Core.RestrictiveEnvironment
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties
  commentId: N:VRBuilder.Core.Properties
  name: VRBuilder.Core.Properties
  nameWithType: VRBuilder.Core.Properties
  fullName: VRBuilder.Core.Properties
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.#ctor*
  commentId: Overload:VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.#ctor
  name: LockablePropertyData
  nameWithType: LockablePropertyData.LockablePropertyData
  fullName: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.LockablePropertyData
- uid: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.Equals*
  commentId: Overload:VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.Equals
  name: Equals
  nameWithType: LockablePropertyData.Equals
  fullName: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.Equals
- uid: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData
  commentId: T:VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData
  parent: VRBuilder.Core.RestrictiveEnvironment
  name: LockablePropertyData
  nameWithType: LockablePropertyData
  fullName: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.GetHashCode*
  commentId: Overload:VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.GetHashCode
  name: GetHashCode
  nameWithType: LockablePropertyData.GetHashCode
  fullName: VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
