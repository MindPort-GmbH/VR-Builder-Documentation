### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.ITransitionData
  commentId: T:VRBuilder.Core.ITransitionData
  id: ITransitionData
  parent: VRBuilder.Core
  children:
  - VRBuilder.Core.ITransitionData.Conditions
  - VRBuilder.Core.ITransitionData.TargetStep
  langs:
  - csharp
  - vb
  name: ITransitionData
  nameWithType: ITransitionData
  fullName: VRBuilder.Core.ITransitionData
  type: Interface
  source:
    remote:
      path: Source/Core/Runtime/ITransitionData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ITransitionData
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ITransitionData.cs
    startLine: 11
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  syntax:
    content: 'public interface ITransitionData : IEntityCollectionDataWithMode<ICondition>, IEntityCollectionData<ICondition>, IEntityCollectionDataWithMode, IEntityCollectionData, IModeData, ICompletableData, INamedData, IData'
    content.vb: >-
      Public Interface ITransitionData

          Inherits IEntityCollectionDataWithMode(Of ICondition), ICompletableData, INamedData
  inheritedMembers:
  - VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.Conditions.ICondition}.GetChildren
  - VRBuilder.Core.Configuration.Modes.IModeData.Mode
  - VRBuilder.Core.Conditions.ICompletableData.IsCompleted
  - VRBuilder.Core.INamedData.Name
  - VRBuilder.Core.IData.Metadata
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VRBuilder.Core.ITransitionData.Conditions
  commentId: P:VRBuilder.Core.ITransitionData.Conditions
  id: Conditions
  parent: VRBuilder.Core.ITransitionData
  langs:
  - csharp
  - vb
  name: Conditions
  nameWithType: ITransitionData.Conditions
  fullName: VRBuilder.Core.ITransitionData.Conditions
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/ITransitionData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Conditions
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ITransitionData.cs
    startLine: 16
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nA list of conditions. When you complete all of them, this transition will trigger.\n"
  example: []
  syntax:
    content: IList<ICondition> Conditions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{VRBuilder.Core.Conditions.ICondition}
    content.vb: Property Conditions As IList(Of ICondition)
  overload: VRBuilder.Core.ITransitionData.Conditions*
  modifiers.csharp:
  - get
  - set
- uid: VRBuilder.Core.ITransitionData.TargetStep
  commentId: P:VRBuilder.Core.ITransitionData.TargetStep
  id: TargetStep
  parent: VRBuilder.Core.ITransitionData
  langs:
  - csharp
  - vb
  name: TargetStep
  nameWithType: ITransitionData.TargetStep
  fullName: VRBuilder.Core.ITransitionData.TargetStep
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/ITransitionData.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: TargetStep
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ITransitionData.cs
    startLine: 21
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nThe next step to take after this transition triggers.\n"
  example: []
  syntax:
    content: IStep TargetStep { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.IStep
    content.vb: Property TargetStep As IStep
  overload: VRBuilder.Core.ITransitionData.TargetStep*
  modifiers.csharp:
  - get
  - set
references:
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.Conditions.ICondition}.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.Conditions.ICondition}.GetChildren
  parent: VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.Conditions.ICondition}
  definition: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: IEntityCollectionData<ICondition>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<VRBuilder.Core.Conditions.ICondition>.GetChildren()
  nameWithType.vb: IEntityCollectionData(Of ICondition).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of VRBuilder.Core.Conditions.ICondition).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData<ICondition>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<VRBuilder.Core.Conditions.ICondition>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData(Of ICondition).GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of VRBuilder.Core.Conditions.ICondition).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes.IModeData.Mode
  commentId: P:VRBuilder.Core.Configuration.Modes.IModeData.Mode
  parent: VRBuilder.Core.Configuration.Modes.IModeData
  name: Mode
  nameWithType: IModeData.Mode
  fullName: VRBuilder.Core.Configuration.Modes.IModeData.Mode
- uid: VRBuilder.Core.Conditions.ICompletableData.IsCompleted
  commentId: P:VRBuilder.Core.Conditions.ICompletableData.IsCompleted
  parent: VRBuilder.Core.Conditions.ICompletableData
  name: IsCompleted
  nameWithType: ICompletableData.IsCompleted
  fullName: VRBuilder.Core.Conditions.ICompletableData.IsCompleted
- uid: VRBuilder.Core.INamedData.Name
  commentId: P:VRBuilder.Core.INamedData.Name
  parent: VRBuilder.Core.INamedData
  name: Name
  nameWithType: INamedData.Name
  fullName: VRBuilder.Core.INamedData.Name
- uid: VRBuilder.Core.IData.Metadata
  commentId: P:VRBuilder.Core.IData.Metadata
  parent: VRBuilder.Core.IData
  name: Metadata
  nameWithType: IData.Metadata
  fullName: VRBuilder.Core.IData.Metadata
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: IEntityCollectionData<TEntity>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren()
  nameWithType.vb: IEntityCollectionData(Of TEntity).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData<TEntity>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData(Of TEntity).GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.Conditions.ICondition}
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.Conditions.ICondition}
  parent: VRBuilder.Core.EntityOwners
  definition: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  name: IEntityCollectionData<ICondition>
  nameWithType: IEntityCollectionData<ICondition>
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<VRBuilder.Core.Conditions.ICondition>
  nameWithType.vb: IEntityCollectionData(Of ICondition)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of VRBuilder.Core.Conditions.ICondition)
  name.vb: IEntityCollectionData(Of ICondition)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Conditions.ICondition
    name: ICondition
    nameWithType: ICondition
    fullName: VRBuilder.Core.Conditions.ICondition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Conditions.ICondition
    name: ICondition
    nameWithType: ICondition
    fullName: VRBuilder.Core.Conditions.ICondition
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes.IModeData
  commentId: T:VRBuilder.Core.Configuration.Modes.IModeData
  parent: VRBuilder.Core.Configuration.Modes
  name: IModeData
  nameWithType: IModeData
  fullName: VRBuilder.Core.Configuration.Modes.IModeData
- uid: VRBuilder.Core.Conditions.ICompletableData
  commentId: T:VRBuilder.Core.Conditions.ICompletableData
  parent: VRBuilder.Core.Conditions
  name: ICompletableData
  nameWithType: ICompletableData
  fullName: VRBuilder.Core.Conditions.ICompletableData
- uid: VRBuilder.Core.INamedData
  commentId: T:VRBuilder.Core.INamedData
  parent: VRBuilder.Core
  name: INamedData
  nameWithType: INamedData
  fullName: VRBuilder.Core.INamedData
- uid: VRBuilder.Core.IData
  commentId: T:VRBuilder.Core.IData
  parent: VRBuilder.Core
  name: IData
  nameWithType: IData
  fullName: VRBuilder.Core.IData
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  name: IEntityCollectionData<TEntity>
  nameWithType: IEntityCollectionData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>
  nameWithType.vb: IEntityCollectionData(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity)
  name.vb: IEntityCollectionData(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners
  commentId: N:VRBuilder.Core.EntityOwners
  name: VRBuilder.Core.EntityOwners
  nameWithType: VRBuilder.Core.EntityOwners
  fullName: VRBuilder.Core.EntityOwners
- uid: VRBuilder.Core.Configuration.Modes
  commentId: N:VRBuilder.Core.Configuration.Modes
  name: VRBuilder.Core.Configuration.Modes
  nameWithType: VRBuilder.Core.Configuration.Modes
  fullName: VRBuilder.Core.Configuration.Modes
- uid: VRBuilder.Core.Conditions
  commentId: N:VRBuilder.Core.Conditions
  name: VRBuilder.Core.Conditions
  nameWithType: VRBuilder.Core.Conditions
  fullName: VRBuilder.Core.Conditions
- uid: VRBuilder.Core.ITransitionData.Conditions*
  commentId: Overload:VRBuilder.Core.ITransitionData.Conditions
  name: Conditions
  nameWithType: ITransitionData.Conditions
  fullName: VRBuilder.Core.ITransitionData.Conditions
- uid: System.Collections.Generic.IList{VRBuilder.Core.Conditions.ICondition}
  commentId: T:System.Collections.Generic.IList{VRBuilder.Core.Conditions.ICondition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<ICondition>
  nameWithType: IList<ICondition>
  fullName: System.Collections.Generic.IList<VRBuilder.Core.Conditions.ICondition>
  nameWithType.vb: IList(Of ICondition)
  fullName.vb: System.Collections.Generic.IList(Of VRBuilder.Core.Conditions.ICondition)
  name.vb: IList(Of ICondition)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Conditions.ICondition
    name: ICondition
    nameWithType: ICondition
    fullName: VRBuilder.Core.Conditions.ICondition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Conditions.ICondition
    name: ICondition
    nameWithType: ICondition
    fullName: VRBuilder.Core.Conditions.ICondition
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Core.ITransitionData.TargetStep*
  commentId: Overload:VRBuilder.Core.ITransitionData.TargetStep
  name: TargetStep
  nameWithType: ITransitionData.TargetStep
  fullName: VRBuilder.Core.ITransitionData.TargetStep
- uid: VRBuilder.Core.IStep
  commentId: T:VRBuilder.Core.IStep
  parent: VRBuilder.Core
  name: IStep
  nameWithType: IStep
  fullName: VRBuilder.Core.IStep
