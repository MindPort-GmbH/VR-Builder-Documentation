### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.IO.DefaultFileSystem
  commentId: T:VRBuilder.Core.IO.DefaultFileSystem
  id: DefaultFileSystem
  parent: VRBuilder.Core.IO
  children:
  - VRBuilder.Core.IO.DefaultFileSystem.#ctor(System.String,System.String)
  - VRBuilder.Core.IO.DefaultFileSystem.BuildPersistentDataPath(System.String)
  - VRBuilder.Core.IO.DefaultFileSystem.Exists(System.String)
  - VRBuilder.Core.IO.DefaultFileSystem.FetchStreamingAssetsFilesAt(System.String,System.String)
  - VRBuilder.Core.IO.DefaultFileSystem.FileExistsInPersistentData(System.String)
  - VRBuilder.Core.IO.DefaultFileSystem.FileExistsInStreamingAssets(System.String)
  - VRBuilder.Core.IO.DefaultFileSystem.NormalizePath(System.String)
  - VRBuilder.Core.IO.DefaultFileSystem.PersistentDataPath
  - VRBuilder.Core.IO.DefaultFileSystem.Read(System.String)
  - VRBuilder.Core.IO.DefaultFileSystem.ReadAllText(System.String)
  - VRBuilder.Core.IO.DefaultFileSystem.ReadFromPersistentData(System.String)
  - VRBuilder.Core.IO.DefaultFileSystem.ReadFromStreamingAssets(System.String)
  - VRBuilder.Core.IO.DefaultFileSystem.StreamingAssetsPath
  - VRBuilder.Core.IO.DefaultFileSystem.Write(System.String,System.Byte[])
  langs:
  - csharp
  - vb
  name: DefaultFileSystem
  nameWithType: DefaultFileSystem
  fullName: VRBuilder.Core.IO.DefaultFileSystem
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/IO/DefaultFileSystem.cs
      branch: release/v4.2.0
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DefaultFileSystem
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IO/DefaultFileSystem.cs
    startLine: 16
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.IO
  summary: Default implementation of <xref href="VRBuilder.Core.IO.IPlatformFileSystem" data-throw-if-not-resolved="false"></xref> based in 'System.IO'.
  remarks: It works out of the box for most of the Unity's supported platforms.
  example: []
  syntax:
    content: 'public class DefaultFileSystem : IPlatformFileSystem'
    content.vb: Public Class DefaultFileSystem Implements IPlatformFileSystem
  inheritance:
  - System.Object
  implements:
  - VRBuilder.Core.IO.IPlatformFileSystem
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: VRBuilder.Core.IO.DefaultFileSystem.StreamingAssetsPath
  commentId: F:VRBuilder.Core.IO.DefaultFileSystem.StreamingAssetsPath
  id: StreamingAssetsPath
  parent: VRBuilder.Core.IO.DefaultFileSystem
  langs:
  - csharp
  - vb
  name: StreamingAssetsPath
  nameWithType: DefaultFileSystem.StreamingAssetsPath
  fullName: VRBuilder.Core.IO.DefaultFileSystem.StreamingAssetsPath
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/IO/DefaultFileSystem.cs
      branch: release/v4.2.0
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StreamingAssetsPath
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IO/DefaultFileSystem.cs
    startLine: 21
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.IO
  summary: The path to the platform's StreamingAssets folder (Read Only).
  example: []
  syntax:
    content: protected readonly string StreamingAssetsPath
    return:
      type: System.String
    content.vb: Protected ReadOnly StreamingAssetsPath As String
- uid: VRBuilder.Core.IO.DefaultFileSystem.PersistentDataPath
  commentId: F:VRBuilder.Core.IO.DefaultFileSystem.PersistentDataPath
  id: PersistentDataPath
  parent: VRBuilder.Core.IO.DefaultFileSystem
  langs:
  - csharp
  - vb
  name: PersistentDataPath
  nameWithType: DefaultFileSystem.PersistentDataPath
  fullName: VRBuilder.Core.IO.DefaultFileSystem.PersistentDataPath
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/IO/DefaultFileSystem.cs
      branch: release/v4.2.0
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: PersistentDataPath
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IO/DefaultFileSystem.cs
    startLine: 26
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.IO
  summary: The path to the platform's persistent data directory (Read Only).
  example: []
  syntax:
    content: protected readonly string PersistentDataPath
    return:
      type: System.String
    content.vb: Protected ReadOnly PersistentDataPath As String
- uid: VRBuilder.Core.IO.DefaultFileSystem.#ctor(System.String,System.String)
  commentId: M:VRBuilder.Core.IO.DefaultFileSystem.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: VRBuilder.Core.IO.DefaultFileSystem
  langs:
  - csharp
  - vb
  name: DefaultFileSystem(string, string)
  nameWithType: DefaultFileSystem.DefaultFileSystem(string, string)
  fullName: VRBuilder.Core.IO.DefaultFileSystem.DefaultFileSystem(string, string)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/IO/DefaultFileSystem.cs
      branch: release/v4.2.0
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IO/DefaultFileSystem.cs
    startLine: 28
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.IO
  syntax:
    content: public DefaultFileSystem(string streamingAssetsPath, string persistentDataPath)
    parameters:
    - id: streamingAssetsPath
      type: System.String
    - id: persistentDataPath
      type: System.String
    content.vb: Public Sub New(streamingAssetsPath As String, persistentDataPath As String)
  overload: VRBuilder.Core.IO.DefaultFileSystem.#ctor*
  nameWithType.vb: DefaultFileSystem.New(String, String)
  fullName.vb: VRBuilder.Core.IO.DefaultFileSystem.New(String, String)
  name.vb: New(String, String)
- uid: VRBuilder.Core.IO.DefaultFileSystem.Read(System.String)
  commentId: M:VRBuilder.Core.IO.DefaultFileSystem.Read(System.String)
  id: Read(System.String)
  parent: VRBuilder.Core.IO.DefaultFileSystem
  langs:
  - csharp
  - vb
  name: Read(string)
  nameWithType: DefaultFileSystem.Read(string)
  fullName: VRBuilder.Core.IO.DefaultFileSystem.Read(string)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/IO/DefaultFileSystem.cs
      branch: release/v4.2.0
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Read
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IO/DefaultFileSystem.cs
    startLine: 35
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.IO
  summary: Loads a file stored at <code class="paramref">filePath</code>.
  remarks: <code class="paramref">filePath</code> must be relative to the StreamingAssets or the persistent data folder.
  example: []
  syntax:
    content: public virtual Task<byte[]> Read(string filePath)
    parameters:
    - id: filePath
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: The contents of the file into a byte array.
    content.vb: Public Overridable Function Read(filePath As String) As Task(Of Byte())
  overload: VRBuilder.Core.IO.DefaultFileSystem.Read*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: Exception thrown if the file does not exist.
  implements:
  - VRBuilder.Core.IO.IPlatformFileSystem.Read(System.String)
  nameWithType.vb: DefaultFileSystem.Read(String)
  fullName.vb: VRBuilder.Core.IO.DefaultFileSystem.Read(String)
  name.vb: Read(String)
- uid: VRBuilder.Core.IO.DefaultFileSystem.ReadAllText(System.String)
  commentId: M:VRBuilder.Core.IO.DefaultFileSystem.ReadAllText(System.String)
  id: ReadAllText(System.String)
  parent: VRBuilder.Core.IO.DefaultFileSystem
  langs:
  - csharp
  - vb
  name: ReadAllText(string)
  nameWithType: DefaultFileSystem.ReadAllText(string)
  fullName: VRBuilder.Core.IO.DefaultFileSystem.ReadAllText(string)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/IO/DefaultFileSystem.cs
      branch: release/v4.2.0
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ReadAllText
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IO/DefaultFileSystem.cs
    startLine: 53
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.IO
  summary: Loads a file stored at <code class="paramref">filePath</code>.
  remarks: <code class="paramref">filePath</code> must be relative to the StreamingAssets or the persistent data folder.
  example: []
  syntax:
    content: public virtual Task<string> ReadAllText(string filePath)
    parameters:
    - id: filePath
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Returns a `string` with the content of the file.
    content.vb: Public Overridable Function ReadAllText(filePath As String) As Task(Of String)
  overload: VRBuilder.Core.IO.DefaultFileSystem.ReadAllText*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: Exception thrown if the file does not exist.
  implements:
  - VRBuilder.Core.IO.IPlatformFileSystem.ReadAllText(System.String)
  nameWithType.vb: DefaultFileSystem.ReadAllText(String)
  fullName.vb: VRBuilder.Core.IO.DefaultFileSystem.ReadAllText(String)
  name.vb: ReadAllText(String)
- uid: VRBuilder.Core.IO.DefaultFileSystem.Write(System.String,System.Byte[])
  commentId: M:VRBuilder.Core.IO.DefaultFileSystem.Write(System.String,System.Byte[])
  id: Write(System.String,System.Byte[])
  parent: VRBuilder.Core.IO.DefaultFileSystem
  langs:
  - csharp
  - vb
  name: Write(string, byte[])
  nameWithType: DefaultFileSystem.Write(string, byte[])
  fullName: VRBuilder.Core.IO.DefaultFileSystem.Write(string, byte[])
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/IO/DefaultFileSystem.cs
      branch: release/v4.2.0
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Write
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IO/DefaultFileSystem.cs
    startLine: 69
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.IO
  summary: Saves given <code class="paramref">fileData</code> in provided <code class="paramref">filePath</code>.
  remarks: <code class="paramref">filePath</code> must be relative to PersistentDataPath.
  example: []
  syntax:
    content: public virtual Task<bool> Write(string filePath, byte[] fileData)
    parameters:
    - id: filePath
      type: System.String
    - id: fileData
      type: System.Byte[]
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: Returns true if <code class="paramref">fileData</code> could be saved successfully; otherwise, false.
    content.vb: Public Overridable Function Write(filePath As String, fileData As Byte()) As Task(Of Boolean)
  overload: VRBuilder.Core.IO.DefaultFileSystem.Write*
  implements:
  - VRBuilder.Core.IO.IPlatformFileSystem.Write(System.String,System.Byte[])
  nameWithType.vb: DefaultFileSystem.Write(String, Byte())
  fullName.vb: VRBuilder.Core.IO.DefaultFileSystem.Write(String, Byte())
  name.vb: Write(String, Byte())
- uid: VRBuilder.Core.IO.DefaultFileSystem.Exists(System.String)
  commentId: M:VRBuilder.Core.IO.DefaultFileSystem.Exists(System.String)
  id: Exists(System.String)
  parent: VRBuilder.Core.IO.DefaultFileSystem
  langs:
  - csharp
  - vb
  name: Exists(string)
  nameWithType: DefaultFileSystem.Exists(string)
  fullName: VRBuilder.Core.IO.DefaultFileSystem.Exists(string)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/IO/DefaultFileSystem.cs
      branch: release/v4.2.0
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Exists
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IO/DefaultFileSystem.cs
    startLine: 88
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.IO
  summary: Returns true if given <code class="paramref">filePath</code> contains the name of an existing file under the StreamingAssets or platform persistent data folder; otherwise, false.
  remarks: <code class="paramref">filePath</code> must be relative to the StreamingAssets or the platform persistent data folder.
  example: []
  syntax:
    content: public virtual Task<bool> Exists(string filePath)
    parameters:
    - id: filePath
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Overridable Function Exists(filePath As String) As Task(Of Boolean)
  overload: VRBuilder.Core.IO.DefaultFileSystem.Exists*
  implements:
  - VRBuilder.Core.IO.IPlatformFileSystem.Exists(System.String)
  nameWithType.vb: DefaultFileSystem.Exists(String)
  fullName.vb: VRBuilder.Core.IO.DefaultFileSystem.Exists(String)
  name.vb: Exists(String)
- uid: VRBuilder.Core.IO.DefaultFileSystem.FetchStreamingAssetsFilesAt(System.String,System.String)
  commentId: M:VRBuilder.Core.IO.DefaultFileSystem.FetchStreamingAssetsFilesAt(System.String,System.String)
  id: FetchStreamingAssetsFilesAt(System.String,System.String)
  parent: VRBuilder.Core.IO.DefaultFileSystem
  langs:
  - csharp
  - vb
  name: FetchStreamingAssetsFilesAt(string, string)
  nameWithType: DefaultFileSystem.FetchStreamingAssetsFilesAt(string, string)
  fullName: VRBuilder.Core.IO.DefaultFileSystem.FetchStreamingAssetsFilesAt(string, string)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/IO/DefaultFileSystem.cs
      branch: release/v4.2.0
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: FetchStreamingAssetsFilesAt
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IO/DefaultFileSystem.cs
    startLine: 101
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.IO
  summary: Returns the names of files (including their paths) that match the specified search pattern in the specified directory relative to the Streaming Assets folder.
  remarks: >-
    The following wildcard specifiers are permitted in <code class="paramref">searchPattern</code>:

    Wildcard specifier	    Matches

    * (asterisk)	        Zero or more characters in that position.

    ? (question mark)	    Zero or one character in that position.
  example: []
  syntax:
    content: public virtual IEnumerable<string> FetchStreamingAssetsFilesAt(string path, string searchPattern)
    parameters:
    - id: path
      type: System.String
      description: The relative path to the Streaming Assets folder. This string is not case-sensitive.
    - id: searchPattern
      type: System.String
      description: >-
        The search string to match against the names of files in <code class="paramref">path</code>.

        Depending on the platform, this parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions.
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Overridable Function FetchStreamingAssetsFilesAt(path As String, searchPattern As String) As IEnumerable(Of String)
  overload: VRBuilder.Core.IO.DefaultFileSystem.FetchStreamingAssetsFilesAt*
  implements:
  - VRBuilder.Core.IO.IPlatformFileSystem.FetchStreamingAssetsFilesAt(System.String,System.String)
  nameWithType.vb: DefaultFileSystem.FetchStreamingAssetsFilesAt(String, String)
  fullName.vb: VRBuilder.Core.IO.DefaultFileSystem.FetchStreamingAssetsFilesAt(String, String)
  name.vb: FetchStreamingAssetsFilesAt(String, String)
- uid: VRBuilder.Core.IO.DefaultFileSystem.ReadFromStreamingAssets(System.String)
  commentId: M:VRBuilder.Core.IO.DefaultFileSystem.ReadFromStreamingAssets(System.String)
  id: ReadFromStreamingAssets(System.String)
  parent: VRBuilder.Core.IO.DefaultFileSystem
  langs:
  - csharp
  - vb
  name: ReadFromStreamingAssets(string)
  nameWithType: DefaultFileSystem.ReadFromStreamingAssets(string)
  fullName: VRBuilder.Core.IO.DefaultFileSystem.ReadFromStreamingAssets(string)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/IO/DefaultFileSystem.cs
      branch: release/v4.2.0
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ReadFromStreamingAssets
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IO/DefaultFileSystem.cs
    startLine: 114
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.IO
  summary: >-
    Loads a file stored at <code class="paramref">filePath</code>.

    Returns a `FileNotFoundException` if file does not exist.
  remarks: <code class="paramref">filePath</code> must be relative to the StreamingAssets folder.
  example: []
  syntax:
    content: protected virtual Task<byte[]> ReadFromStreamingAssets(string filePath)
    parameters:
    - id: filePath
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: The contents of the file into a byte array.
    content.vb: Protected Overridable Function ReadFromStreamingAssets(filePath As String) As Task(Of Byte())
  overload: VRBuilder.Core.IO.DefaultFileSystem.ReadFromStreamingAssets*
  nameWithType.vb: DefaultFileSystem.ReadFromStreamingAssets(String)
  fullName.vb: VRBuilder.Core.IO.DefaultFileSystem.ReadFromStreamingAssets(String)
  name.vb: ReadFromStreamingAssets(String)
- uid: VRBuilder.Core.IO.DefaultFileSystem.ReadFromPersistentData(System.String)
  commentId: M:VRBuilder.Core.IO.DefaultFileSystem.ReadFromPersistentData(System.String)
  id: ReadFromPersistentData(System.String)
  parent: VRBuilder.Core.IO.DefaultFileSystem
  langs:
  - csharp
  - vb
  name: ReadFromPersistentData(string)
  nameWithType: DefaultFileSystem.ReadFromPersistentData(string)
  fullName: VRBuilder.Core.IO.DefaultFileSystem.ReadFromPersistentData(string)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/IO/DefaultFileSystem.cs
      branch: release/v4.2.0
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ReadFromPersistentData
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IO/DefaultFileSystem.cs
    startLine: 133
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.IO
  summary: >-
    Loads a file stored at <code class="paramref">filePath</code>.

    Returns a `FileNotFoundException` if file does not exist.
  remarks: <code class="paramref">filePath</code> must be relative to the platform persistent data folder.
  example: []
  syntax:
    content: protected virtual Task<byte[]> ReadFromPersistentData(string filePath)
    parameters:
    - id: filePath
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Byte[]}
      description: The contents of the file into a byte array.
    content.vb: Protected Overridable Function ReadFromPersistentData(filePath As String) As Task(Of Byte())
  overload: VRBuilder.Core.IO.DefaultFileSystem.ReadFromPersistentData*
  nameWithType.vb: DefaultFileSystem.ReadFromPersistentData(String)
  fullName.vb: VRBuilder.Core.IO.DefaultFileSystem.ReadFromPersistentData(String)
  name.vb: ReadFromPersistentData(String)
- uid: VRBuilder.Core.IO.DefaultFileSystem.FileExistsInStreamingAssets(System.String)
  commentId: M:VRBuilder.Core.IO.DefaultFileSystem.FileExistsInStreamingAssets(System.String)
  id: FileExistsInStreamingAssets(System.String)
  parent: VRBuilder.Core.IO.DefaultFileSystem
  langs:
  - csharp
  - vb
  name: FileExistsInStreamingAssets(string)
  nameWithType: DefaultFileSystem.FileExistsInStreamingAssets(string)
  fullName: VRBuilder.Core.IO.DefaultFileSystem.FileExistsInStreamingAssets(string)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/IO/DefaultFileSystem.cs
      branch: release/v4.2.0
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: FileExistsInStreamingAssets
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IO/DefaultFileSystem.cs
    startLine: 150
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.IO
  summary: Returns true if given <code class="paramref">filePath</code> contains the name of an existing file under the StreamingAssets folder; otherwise, false.
  remarks: <code class="paramref">filePath</code> must be relative to the StreamingAssets folder.
  example: []
  syntax:
    content: protected virtual Task<bool> FileExistsInStreamingAssets(string filePath)
    parameters:
    - id: filePath
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Protected Overridable Function FileExistsInStreamingAssets(filePath As String) As Task(Of Boolean)
  overload: VRBuilder.Core.IO.DefaultFileSystem.FileExistsInStreamingAssets*
  nameWithType.vb: DefaultFileSystem.FileExistsInStreamingAssets(String)
  fullName.vb: VRBuilder.Core.IO.DefaultFileSystem.FileExistsInStreamingAssets(String)
  name.vb: FileExistsInStreamingAssets(String)
- uid: VRBuilder.Core.IO.DefaultFileSystem.FileExistsInPersistentData(System.String)
  commentId: M:VRBuilder.Core.IO.DefaultFileSystem.FileExistsInPersistentData(System.String)
  id: FileExistsInPersistentData(System.String)
  parent: VRBuilder.Core.IO.DefaultFileSystem
  langs:
  - csharp
  - vb
  name: FileExistsInPersistentData(string)
  nameWithType: DefaultFileSystem.FileExistsInPersistentData(string)
  fullName: VRBuilder.Core.IO.DefaultFileSystem.FileExistsInPersistentData(string)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/IO/DefaultFileSystem.cs
      branch: release/v4.2.0
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: FileExistsInPersistentData
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IO/DefaultFileSystem.cs
    startLine: 162
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.IO
  summary: Returns true if given <code class="paramref">filePath</code> contains the name of an existing file under the platform persistent data folder; otherwise, false.
  remarks: <code class="paramref">filePath</code> must be relative to the platform persistent data folder.
  example: []
  syntax:
    content: protected virtual Task<bool> FileExistsInPersistentData(string filePath)
    parameters:
    - id: filePath
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Protected Overridable Function FileExistsInPersistentData(filePath As String) As Task(Of Boolean)
  overload: VRBuilder.Core.IO.DefaultFileSystem.FileExistsInPersistentData*
  nameWithType.vb: DefaultFileSystem.FileExistsInPersistentData(String)
  fullName.vb: VRBuilder.Core.IO.DefaultFileSystem.FileExistsInPersistentData(String)
  name.vb: FileExistsInPersistentData(String)
- uid: VRBuilder.Core.IO.DefaultFileSystem.BuildPersistentDataPath(System.String)
  commentId: M:VRBuilder.Core.IO.DefaultFileSystem.BuildPersistentDataPath(System.String)
  id: BuildPersistentDataPath(System.String)
  parent: VRBuilder.Core.IO.DefaultFileSystem
  langs:
  - csharp
  - vb
  name: BuildPersistentDataPath(string)
  nameWithType: DefaultFileSystem.BuildPersistentDataPath(string)
  fullName: VRBuilder.Core.IO.DefaultFileSystem.BuildPersistentDataPath(string)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/IO/DefaultFileSystem.cs
      branch: release/v4.2.0
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: BuildPersistentDataPath
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IO/DefaultFileSystem.cs
    startLine: 174
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.IO
  summary: Builds a directory from given <code class="paramref">filePath</code>.
  remarks: <code class="paramref">filePath</code> must be relative to the platform persistent data folder.
  example: []
  syntax:
    content: protected virtual string BuildPersistentDataPath(string filePath)
    parameters:
    - id: filePath
      type: System.String
    return:
      type: System.String
      description: The created directory absolute path.
    content.vb: Protected Overridable Function BuildPersistentDataPath(filePath As String) As String
  overload: VRBuilder.Core.IO.DefaultFileSystem.BuildPersistentDataPath*
  nameWithType.vb: DefaultFileSystem.BuildPersistentDataPath(String)
  fullName.vb: VRBuilder.Core.IO.DefaultFileSystem.BuildPersistentDataPath(String)
  name.vb: BuildPersistentDataPath(String)
- uid: VRBuilder.Core.IO.DefaultFileSystem.NormalizePath(System.String)
  commentId: M:VRBuilder.Core.IO.DefaultFileSystem.NormalizePath(System.String)
  id: NormalizePath(System.String)
  parent: VRBuilder.Core.IO.DefaultFileSystem
  langs:
  - csharp
  - vb
  name: NormalizePath(string)
  nameWithType: DefaultFileSystem.NormalizePath(string)
  fullName: VRBuilder.Core.IO.DefaultFileSystem.NormalizePath(string)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/IO/DefaultFileSystem.cs
      branch: release/v4.2.0
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: NormalizePath
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/IO/DefaultFileSystem.cs
    startLine: 198
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.IO
  summary: Normalizes path to platform specific.
  example: []
  syntax:
    content: protected virtual string NormalizePath(string filePath)
    parameters:
    - id: filePath
      type: System.String
    return:
      type: System.String
    content.vb: Protected Overridable Function NormalizePath(filePath As String) As String
  overload: VRBuilder.Core.IO.DefaultFileSystem.NormalizePath*
  nameWithType.vb: DefaultFileSystem.NormalizePath(String)
  fullName.vb: VRBuilder.Core.IO.DefaultFileSystem.NormalizePath(String)
  name.vb: NormalizePath(String)
references:
- uid: VRBuilder.Core.IO.IPlatformFileSystem
  commentId: T:VRBuilder.Core.IO.IPlatformFileSystem
  parent: VRBuilder.Core.IO
  href: VRBuilder.Core.IO.IPlatformFileSystem.html
  name: IPlatformFileSystem
  nameWithType: IPlatformFileSystem
  fullName: VRBuilder.Core.IO.IPlatformFileSystem
- uid: VRBuilder.Core.IO
  commentId: N:VRBuilder.Core.IO
  href: VRBuilder.html
  name: VRBuilder.Core.IO
  nameWithType: VRBuilder.Core.IO
  fullName: VRBuilder.Core.IO
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.IO
    name: IO
    href: VRBuilder.Core.IO.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.IO
    name: IO
    href: VRBuilder.Core.IO.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: VRBuilder.Core.IO.DefaultFileSystem.#ctor*
  commentId: Overload:VRBuilder.Core.IO.DefaultFileSystem.#ctor
  href: VRBuilder.Core.IO.DefaultFileSystem.html#VRBuilder_Core_IO_DefaultFileSystem__ctor_System_String_System_String_
  name: DefaultFileSystem
  nameWithType: DefaultFileSystem.DefaultFileSystem
  fullName: VRBuilder.Core.IO.DefaultFileSystem.DefaultFileSystem
  nameWithType.vb: DefaultFileSystem.New
  fullName.vb: VRBuilder.Core.IO.DefaultFileSystem.New
  name.vb: New
- uid: System.IO.FileNotFoundException
  commentId: T:System.IO.FileNotFoundException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.filenotfoundexception
  name: FileNotFoundException
  nameWithType: FileNotFoundException
  fullName: System.IO.FileNotFoundException
- uid: VRBuilder.Core.IO.DefaultFileSystem.Read*
  commentId: Overload:VRBuilder.Core.IO.DefaultFileSystem.Read
  href: VRBuilder.Core.IO.DefaultFileSystem.html#VRBuilder_Core_IO_DefaultFileSystem_Read_System_String_
  name: Read
  nameWithType: DefaultFileSystem.Read
  fullName: VRBuilder.Core.IO.DefaultFileSystem.Read
- uid: VRBuilder.Core.IO.IPlatformFileSystem.Read(System.String)
  commentId: M:VRBuilder.Core.IO.IPlatformFileSystem.Read(System.String)
  parent: VRBuilder.Core.IO.IPlatformFileSystem
  isExternal: true
  href: VRBuilder.Core.IO.IPlatformFileSystem.html#VRBuilder_Core_IO_IPlatformFileSystem_Read_System_String_
  name: Read(string)
  nameWithType: IPlatformFileSystem.Read(string)
  fullName: VRBuilder.Core.IO.IPlatformFileSystem.Read(string)
  nameWithType.vb: IPlatformFileSystem.Read(String)
  fullName.vb: VRBuilder.Core.IO.IPlatformFileSystem.Read(String)
  name.vb: Read(String)
  spec.csharp:
  - uid: VRBuilder.Core.IO.IPlatformFileSystem.Read(System.String)
    name: Read
    href: VRBuilder.Core.IO.IPlatformFileSystem.html#VRBuilder_Core_IO_IPlatformFileSystem_Read_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.IO.IPlatformFileSystem.Read(System.String)
    name: Read
    href: VRBuilder.Core.IO.IPlatformFileSystem.html#VRBuilder_Core_IO_IPlatformFileSystem_Read_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks.Task{System.Byte[]}
  commentId: T:System.Threading.Tasks.Task{System.Byte[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<byte[]>
  nameWithType: Task<byte[]>
  fullName: System.Threading.Tasks.Task<byte[]>
  nameWithType.vb: Task(Of Byte())
  fullName.vb: System.Threading.Tasks.Task(Of Byte())
  name.vb: Task(Of Byte())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: VRBuilder.Core.IO.DefaultFileSystem.ReadAllText*
  commentId: Overload:VRBuilder.Core.IO.DefaultFileSystem.ReadAllText
  href: VRBuilder.Core.IO.DefaultFileSystem.html#VRBuilder_Core_IO_DefaultFileSystem_ReadAllText_System_String_
  name: ReadAllText
  nameWithType: DefaultFileSystem.ReadAllText
  fullName: VRBuilder.Core.IO.DefaultFileSystem.ReadAllText
- uid: VRBuilder.Core.IO.IPlatformFileSystem.ReadAllText(System.String)
  commentId: M:VRBuilder.Core.IO.IPlatformFileSystem.ReadAllText(System.String)
  parent: VRBuilder.Core.IO.IPlatformFileSystem
  isExternal: true
  href: VRBuilder.Core.IO.IPlatformFileSystem.html#VRBuilder_Core_IO_IPlatformFileSystem_ReadAllText_System_String_
  name: ReadAllText(string)
  nameWithType: IPlatformFileSystem.ReadAllText(string)
  fullName: VRBuilder.Core.IO.IPlatformFileSystem.ReadAllText(string)
  nameWithType.vb: IPlatformFileSystem.ReadAllText(String)
  fullName.vb: VRBuilder.Core.IO.IPlatformFileSystem.ReadAllText(String)
  name.vb: ReadAllText(String)
  spec.csharp:
  - uid: VRBuilder.Core.IO.IPlatformFileSystem.ReadAllText(System.String)
    name: ReadAllText
    href: VRBuilder.Core.IO.IPlatformFileSystem.html#VRBuilder_Core_IO_IPlatformFileSystem_ReadAllText_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.IO.IPlatformFileSystem.ReadAllText(System.String)
    name: ReadAllText
    href: VRBuilder.Core.IO.IPlatformFileSystem.html#VRBuilder_Core_IO_IPlatformFileSystem_ReadAllText_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: VRBuilder.Core.IO.DefaultFileSystem.Write*
  commentId: Overload:VRBuilder.Core.IO.DefaultFileSystem.Write
  href: VRBuilder.Core.IO.DefaultFileSystem.html#VRBuilder_Core_IO_DefaultFileSystem_Write_System_String_System_Byte___
  name: Write
  nameWithType: DefaultFileSystem.Write
  fullName: VRBuilder.Core.IO.DefaultFileSystem.Write
- uid: VRBuilder.Core.IO.IPlatformFileSystem.Write(System.String,System.Byte[])
  commentId: M:VRBuilder.Core.IO.IPlatformFileSystem.Write(System.String,System.Byte[])
  parent: VRBuilder.Core.IO.IPlatformFileSystem
  isExternal: true
  href: VRBuilder.Core.IO.IPlatformFileSystem.html#VRBuilder_Core_IO_IPlatformFileSystem_Write_System_String_System_Byte___
  name: Write(string, byte[])
  nameWithType: IPlatformFileSystem.Write(string, byte[])
  fullName: VRBuilder.Core.IO.IPlatformFileSystem.Write(string, byte[])
  nameWithType.vb: IPlatformFileSystem.Write(String, Byte())
  fullName.vb: VRBuilder.Core.IO.IPlatformFileSystem.Write(String, Byte())
  name.vb: Write(String, Byte())
  spec.csharp:
  - uid: VRBuilder.Core.IO.IPlatformFileSystem.Write(System.String,System.Byte[])
    name: Write
    href: VRBuilder.Core.IO.IPlatformFileSystem.html#VRBuilder_Core_IO_IPlatformFileSystem_Write_System_String_System_Byte___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.IO.IPlatformFileSystem.Write(System.String,System.Byte[])
    name: Write
    href: VRBuilder.Core.IO.IPlatformFileSystem.html#VRBuilder_Core_IO_IPlatformFileSystem_Write_System_String_System_Byte___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: )
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: VRBuilder.Core.IO.DefaultFileSystem.Exists*
  commentId: Overload:VRBuilder.Core.IO.DefaultFileSystem.Exists
  href: VRBuilder.Core.IO.DefaultFileSystem.html#VRBuilder_Core_IO_DefaultFileSystem_Exists_System_String_
  name: Exists
  nameWithType: DefaultFileSystem.Exists
  fullName: VRBuilder.Core.IO.DefaultFileSystem.Exists
- uid: VRBuilder.Core.IO.IPlatformFileSystem.Exists(System.String)
  commentId: M:VRBuilder.Core.IO.IPlatformFileSystem.Exists(System.String)
  parent: VRBuilder.Core.IO.IPlatformFileSystem
  isExternal: true
  href: VRBuilder.Core.IO.IPlatformFileSystem.html#VRBuilder_Core_IO_IPlatformFileSystem_Exists_System_String_
  name: Exists(string)
  nameWithType: IPlatformFileSystem.Exists(string)
  fullName: VRBuilder.Core.IO.IPlatformFileSystem.Exists(string)
  nameWithType.vb: IPlatformFileSystem.Exists(String)
  fullName.vb: VRBuilder.Core.IO.IPlatformFileSystem.Exists(String)
  name.vb: Exists(String)
  spec.csharp:
  - uid: VRBuilder.Core.IO.IPlatformFileSystem.Exists(System.String)
    name: Exists
    href: VRBuilder.Core.IO.IPlatformFileSystem.html#VRBuilder_Core_IO_IPlatformFileSystem_Exists_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.IO.IPlatformFileSystem.Exists(System.String)
    name: Exists
    href: VRBuilder.Core.IO.IPlatformFileSystem.html#VRBuilder_Core_IO_IPlatformFileSystem_Exists_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: VRBuilder.Core.IO.DefaultFileSystem.FetchStreamingAssetsFilesAt*
  commentId: Overload:VRBuilder.Core.IO.DefaultFileSystem.FetchStreamingAssetsFilesAt
  href: VRBuilder.Core.IO.DefaultFileSystem.html#VRBuilder_Core_IO_DefaultFileSystem_FetchStreamingAssetsFilesAt_System_String_System_String_
  name: FetchStreamingAssetsFilesAt
  nameWithType: DefaultFileSystem.FetchStreamingAssetsFilesAt
  fullName: VRBuilder.Core.IO.DefaultFileSystem.FetchStreamingAssetsFilesAt
- uid: VRBuilder.Core.IO.IPlatformFileSystem.FetchStreamingAssetsFilesAt(System.String,System.String)
  commentId: M:VRBuilder.Core.IO.IPlatformFileSystem.FetchStreamingAssetsFilesAt(System.String,System.String)
  parent: VRBuilder.Core.IO.IPlatformFileSystem
  isExternal: true
  href: VRBuilder.Core.IO.IPlatformFileSystem.html#VRBuilder_Core_IO_IPlatformFileSystem_FetchStreamingAssetsFilesAt_System_String_System_String_
  name: FetchStreamingAssetsFilesAt(string, string)
  nameWithType: IPlatformFileSystem.FetchStreamingAssetsFilesAt(string, string)
  fullName: VRBuilder.Core.IO.IPlatformFileSystem.FetchStreamingAssetsFilesAt(string, string)
  nameWithType.vb: IPlatformFileSystem.FetchStreamingAssetsFilesAt(String, String)
  fullName.vb: VRBuilder.Core.IO.IPlatformFileSystem.FetchStreamingAssetsFilesAt(String, String)
  name.vb: FetchStreamingAssetsFilesAt(String, String)
  spec.csharp:
  - uid: VRBuilder.Core.IO.IPlatformFileSystem.FetchStreamingAssetsFilesAt(System.String,System.String)
    name: FetchStreamingAssetsFilesAt
    href: VRBuilder.Core.IO.IPlatformFileSystem.html#VRBuilder_Core_IO_IPlatformFileSystem_FetchStreamingAssetsFilesAt_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.IO.IPlatformFileSystem.FetchStreamingAssetsFilesAt(System.String,System.String)
    name: FetchStreamingAssetsFilesAt
    href: VRBuilder.Core.IO.IPlatformFileSystem.html#VRBuilder_Core_IO_IPlatformFileSystem_FetchStreamingAssetsFilesAt_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: VRBuilder.Core.IO.DefaultFileSystem.ReadFromStreamingAssets*
  commentId: Overload:VRBuilder.Core.IO.DefaultFileSystem.ReadFromStreamingAssets
  href: VRBuilder.Core.IO.DefaultFileSystem.html#VRBuilder_Core_IO_DefaultFileSystem_ReadFromStreamingAssets_System_String_
  name: ReadFromStreamingAssets
  nameWithType: DefaultFileSystem.ReadFromStreamingAssets
  fullName: VRBuilder.Core.IO.DefaultFileSystem.ReadFromStreamingAssets
- uid: VRBuilder.Core.IO.DefaultFileSystem.ReadFromPersistentData*
  commentId: Overload:VRBuilder.Core.IO.DefaultFileSystem.ReadFromPersistentData
  href: VRBuilder.Core.IO.DefaultFileSystem.html#VRBuilder_Core_IO_DefaultFileSystem_ReadFromPersistentData_System_String_
  name: ReadFromPersistentData
  nameWithType: DefaultFileSystem.ReadFromPersistentData
  fullName: VRBuilder.Core.IO.DefaultFileSystem.ReadFromPersistentData
- uid: VRBuilder.Core.IO.DefaultFileSystem.FileExistsInStreamingAssets*
  commentId: Overload:VRBuilder.Core.IO.DefaultFileSystem.FileExistsInStreamingAssets
  href: VRBuilder.Core.IO.DefaultFileSystem.html#VRBuilder_Core_IO_DefaultFileSystem_FileExistsInStreamingAssets_System_String_
  name: FileExistsInStreamingAssets
  nameWithType: DefaultFileSystem.FileExistsInStreamingAssets
  fullName: VRBuilder.Core.IO.DefaultFileSystem.FileExistsInStreamingAssets
- uid: VRBuilder.Core.IO.DefaultFileSystem.FileExistsInPersistentData*
  commentId: Overload:VRBuilder.Core.IO.DefaultFileSystem.FileExistsInPersistentData
  href: VRBuilder.Core.IO.DefaultFileSystem.html#VRBuilder_Core_IO_DefaultFileSystem_FileExistsInPersistentData_System_String_
  name: FileExistsInPersistentData
  nameWithType: DefaultFileSystem.FileExistsInPersistentData
  fullName: VRBuilder.Core.IO.DefaultFileSystem.FileExistsInPersistentData
- uid: VRBuilder.Core.IO.DefaultFileSystem.BuildPersistentDataPath*
  commentId: Overload:VRBuilder.Core.IO.DefaultFileSystem.BuildPersistentDataPath
  href: VRBuilder.Core.IO.DefaultFileSystem.html#VRBuilder_Core_IO_DefaultFileSystem_BuildPersistentDataPath_System_String_
  name: BuildPersistentDataPath
  nameWithType: DefaultFileSystem.BuildPersistentDataPath
  fullName: VRBuilder.Core.IO.DefaultFileSystem.BuildPersistentDataPath
- uid: VRBuilder.Core.IO.DefaultFileSystem.NormalizePath*
  commentId: Overload:VRBuilder.Core.IO.DefaultFileSystem.NormalizePath
  href: VRBuilder.Core.IO.DefaultFileSystem.html#VRBuilder_Core_IO_DefaultFileSystem_NormalizePath_System_String_
  name: NormalizePath
  nameWithType: DefaultFileSystem.NormalizePath
  fullName: VRBuilder.Core.IO.DefaultFileSystem.NormalizePath
