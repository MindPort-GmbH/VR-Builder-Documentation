### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  commentId: T:VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  id: ProcessGraphNode
  parent: VRBuilder.Editor.UI.Graphics
  children:
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.#ctor
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddToChapter(VRBuilder.Core.IChapter)
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort(System.Boolean,System.Int32)
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort(Direction,Port.Capacity)
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.defaultNodeSize
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.deleteIconFileName
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.editIconFileName
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.EntryPoint
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon(System.String)
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.IsEntryPoint
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Name
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished(TextField)
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Outputs
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Position
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Refresh
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemoveFromChapter(VRBuilder.Core.IChapter)
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemovePortWithUndo(Port)
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.SetOutput(System.Int32,VRBuilder.Core.IStep)
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.UpdateOutputPortName(Port,Node)
  langs:
  - csharp
  - vb
  name: ProcessGraphNode
  nameWithType: ProcessGraphNode
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  type: Class
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessGraphNode
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 12
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nProcess node in a graph view editor.\n"
  example: []
  syntax:
    content: 'public abstract class ProcessGraphNode : Node'
    content.vb: >-
      Public MustInherit Class ProcessGraphNode
          Inherits Node
  inheritance:
  - System.Object
  derivedClasses:
  - VRBuilder.Editor.UI.Graphics.EntryPointNode
  - VRBuilder.Editor.UI.Graphics.StepGraphNode
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.deleteIconFileName
  commentId: F:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.deleteIconFileName
  id: deleteIconFileName
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  langs:
  - csharp
  - vb
  name: deleteIconFileName
  nameWithType: ProcessGraphNode.deleteIconFileName
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.deleteIconFileName
  type: Field
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: deleteIconFileName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 15
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  syntax:
    content: protected const string deleteIconFileName = "icon_delete"
    return:
      type: System.String
    content.vb: Protected Const deleteIconFileName As String = "icon_delete"
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.editIconFileName
  commentId: F:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.editIconFileName
  id: editIconFileName
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  langs:
  - csharp
  - vb
  name: editIconFileName
  nameWithType: ProcessGraphNode.editIconFileName
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.editIconFileName
  type: Field
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: editIconFileName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 16
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  syntax:
    content: protected const string editIconFileName = "icon_edit"
    return:
      type: System.String
    content.vb: Protected Const editIconFileName As String = "icon_edit"
  modifiers.csharp:
  - protected
  - const
  modifiers.vb:
  - Protected
  - Const
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.defaultNodeSize
  commentId: F:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.defaultNodeSize
  id: defaultNodeSize
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  langs:
  - csharp
  - vb
  name: defaultNodeSize
  nameWithType: ProcessGraphNode.defaultNodeSize
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.defaultNodeSize
  type: Field
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: defaultNodeSize
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 21
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  syntax:
    content: protected Vector2 defaultNodeSize
    return:
      type: Vector2
    content.vb: Protected defaultNodeSize As Vector2
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.IsEntryPoint
  commentId: P:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.IsEntryPoint
  id: IsEntryPoint
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  langs:
  - csharp
  - vb
  name: IsEntryPoint
  nameWithType: ProcessGraphNode.IsEntryPoint
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.IsEntryPoint
  type: Property
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsEntryPoint
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 26
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nTrue if this is the &quot;Start&quot; node.\n"
  example: []
  syntax:
    content: public bool IsEntryPoint { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsEntryPoint As Boolean
  overload: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.IsEntryPoint*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Name
  commentId: P:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Name
  id: Name
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ProcessGraphNode.Name
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Name
  type: Property
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Name
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 31
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nName of the node.\n"
  example: []
  syntax:
    content: public abstract string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride Property Name As String
  overload: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Name*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Outputs
  commentId: P:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Outputs
  id: Outputs
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  langs:
  - csharp
  - vb
  name: Outputs
  nameWithType: ProcessGraphNode.Outputs
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Outputs
  type: Property
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Outputs
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 36
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nSteps this node leads to.\n"
  example: []
  syntax:
    content: public abstract IStep[] Outputs { get; }
    parameters: []
    return:
      type: VRBuilder.Core.IStep[]
    content.vb: Public MustOverride ReadOnly Property Outputs As IStep()
  overload: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Outputs*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.EntryPoint
  commentId: P:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.EntryPoint
  id: EntryPoint
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  langs:
  - csharp
  - vb
  name: EntryPoint
  nameWithType: ProcessGraphNode.EntryPoint
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.EntryPoint
  type: Property
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EntryPoint
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 41
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nStep other nodes connect to.\n"
  example: []
  syntax:
    content: public abstract IStep EntryPoint { get; }
    parameters: []
    return:
      type: VRBuilder.Core.IStep
    content.vb: Public MustOverride ReadOnly Property EntryPoint As IStep
  overload: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.EntryPoint*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Position
  commentId: P:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Position
  id: Position
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: ProcessGraphNode.Position
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Position
  type: Property
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Position
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 46
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nPosition in the graph.\n"
  example: []
  syntax:
    content: public abstract Vector2 Position { get; set; }
    parameters: []
    return:
      type: Vector2
    content.vb: Public MustOverride Property Position As Vector2
  overload: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Position*
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.SetOutput(System.Int32,VRBuilder.Core.IStep)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.SetOutput(System.Int32,VRBuilder.Core.IStep)
  id: SetOutput(System.Int32,VRBuilder.Core.IStep)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  langs:
  - csharp
  - vb
  name: SetOutput(Int32, IStep)
  nameWithType: ProcessGraphNode.SetOutput(Int32, IStep)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.SetOutput(System.Int32, VRBuilder.Core.IStep)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetOutput
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 51
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nSets an output to the specified step.\n"
  example: []
  syntax:
    content: public abstract void SetOutput(int index, IStep output)
    parameters:
    - id: index
      type: System.Int32
    - id: output
      type: VRBuilder.Core.IStep
    content.vb: Public MustOverride Sub SetOutput(index As Integer, output As IStep)
  overload: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.SetOutput*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddToChapter(VRBuilder.Core.IChapter)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddToChapter(VRBuilder.Core.IChapter)
  id: AddToChapter(VRBuilder.Core.IChapter)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  langs:
  - csharp
  - vb
  name: AddToChapter(IChapter)
  nameWithType: ProcessGraphNode.AddToChapter(IChapter)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddToChapter(VRBuilder.Core.IChapter)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AddToChapter
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 56
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nAdds node to specified chapter.\n"
  example: []
  syntax:
    content: public abstract void AddToChapter(IChapter chapter)
    parameters:
    - id: chapter
      type: VRBuilder.Core.IChapter
    content.vb: Public MustOverride Sub AddToChapter(chapter As IChapter)
  overload: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddToChapter*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemoveFromChapter(VRBuilder.Core.IChapter)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemoveFromChapter(VRBuilder.Core.IChapter)
  id: RemoveFromChapter(VRBuilder.Core.IChapter)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  langs:
  - csharp
  - vb
  name: RemoveFromChapter(IChapter)
  nameWithType: ProcessGraphNode.RemoveFromChapter(IChapter)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemoveFromChapter(VRBuilder.Core.IChapter)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RemoveFromChapter
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 61
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nRemoves node from specified chapter.\n"
  example: []
  syntax:
    content: public abstract void RemoveFromChapter(IChapter chapter)
    parameters:
    - id: chapter
      type: VRBuilder.Core.IChapter
    content.vb: Public MustOverride Sub RemoveFromChapter(chapter As IChapter)
  overload: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemoveFromChapter*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemovePortWithUndo(Port)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemovePortWithUndo(Port)
  id: RemovePortWithUndo(Port)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  langs:
  - csharp
  - vb
  name: RemovePortWithUndo(Port)
  nameWithType: ProcessGraphNode.RemovePortWithUndo(Port)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemovePortWithUndo(Port)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RemovePortWithUndo
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 66
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nRemove port with undo.\n"
  example: []
  syntax:
    content: protected abstract void RemovePortWithUndo(Port port)
    parameters:
    - id: port
      type: Port
    content.vb: Protected MustOverride Sub RemovePortWithUndo(port As Port)
  overload: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemovePortWithUndo*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.#ctor
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.#ctor
  id: '#ctor'
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  langs:
  - csharp
  - vb
  name: ProcessGraphNode()
  nameWithType: ProcessGraphNode.ProcessGraphNode()
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.ProcessGraphNode()
  type: Constructor
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 68
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  syntax:
    content: public ProcessGraphNode()
    content.vb: Public Sub New
  overload: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Refresh
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Refresh
  id: Refresh
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  langs:
  - csharp
  - vb
  name: Refresh()
  nameWithType: ProcessGraphNode.Refresh()
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Refresh()
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Refresh
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 85
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nRefreshes the node&apos;s graphics.\n"
  example: []
  syntax:
    content: public virtual void Refresh()
    content.vb: Public Overridable Sub Refresh
  overload: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Refresh*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.UpdateOutputPortName(Port,Node)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.UpdateOutputPortName(Port,Node)
  id: UpdateOutputPortName(Port,Node)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  langs:
  - csharp
  - vb
  name: UpdateOutputPortName(Port, Node)
  nameWithType: ProcessGraphNode.UpdateOutputPortName(Port, Node)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.UpdateOutputPortName(Port, Node)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: UpdateOutputPortName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 107
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nUpdates the name of the output port depending on the node it is connected with.\n"
  example: []
  syntax:
    content: public virtual void UpdateOutputPortName(Port outputPort, Node input)
    parameters:
    - id: outputPort
      type: Port
    - id: input
      type: Node
    content.vb: Public Overridable Sub UpdateOutputPortName(outputPort As Port, input As Node)
  overload: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.UpdateOutputPortName*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort(System.Boolean,System.Int32)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort(System.Boolean,System.Int32)
  id: AddTransitionPort(System.Boolean,System.Int32)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  langs:
  - csharp
  - vb
  name: AddTransitionPort(Boolean, Int32)
  nameWithType: ProcessGraphNode.AddTransitionPort(Boolean, Int32)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort(System.Boolean, System.Int32)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AddTransitionPort
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 132
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nAdds a potentially deletable transition port to this node.\n"
  example: []
  syntax:
    content: public virtual Port AddTransitionPort(bool isDeletablePort = true, int index = -1)
    parameters:
    - id: isDeletablePort
      type: System.Boolean
      description: If true, a delete button is created which allows to delete the transition.
    - id: index
      type: System.Int32
      description: Index where to insert the port, if blank it will be added at the end of the list.
    return:
      type: Port
      description: The created port.
    content.vb: Public Overridable Function AddTransitionPort(isDeletablePort As Boolean = True, index As Integer = -1) As Port
  overload: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort(Direction,Port.Capacity)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort(Direction,Port.Capacity)
  id: CreatePort(Direction,Port.Capacity)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  langs:
  - csharp
  - vb
  name: CreatePort(Direction, Port.Capacity)
  nameWithType: ProcessGraphNode.CreatePort(Direction, Port.Capacity)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort(Direction, Port.Capacity)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CreatePort
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 166
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  syntax:
    content: protected Port CreatePort(Direction direction, Port.Capacity capacity = null)
    parameters:
    - id: direction
      type: Direction
    - id: capacity
      type: Port.Capacity
    return:
      type: Port
    content.vb: Protected Function CreatePort(direction As Direction, capacity As Port.Capacity = Nothing) As Port
  overload: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon(System.String)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon(System.String)
  id: GetIcon(System.String)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  langs:
  - csharp
  - vb
  name: GetIcon(String)
  nameWithType: ProcessGraphNode.GetIcon(String)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon(System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetIcon
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 181
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  syntax:
    content: protected Image GetIcon(string fileName)
    parameters:
    - id: fileName
      type: System.String
    return:
      type: Image
    content.vb: Protected Function GetIcon(fileName As String) As Image
  overload: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor
  id: OpenTextEditor
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  langs:
  - csharp
  - vb
  name: OpenTextEditor()
  nameWithType: ProcessGraphNode.OpenTextEditor()
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor()
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OpenTextEditor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 198
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  syntax:
    content: protected virtual void OpenTextEditor()
    content.vb: Protected Overridable Sub OpenTextEditor
  overload: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished(TextField)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished(TextField)
  id: OnEditTextFinished(TextField)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  langs:
  - csharp
  - vb
  name: OnEditTextFinished(TextField)
  nameWithType: ProcessGraphNode.OnEditTextFinished(TextField)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished(TextField)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnEditTextFinished
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/ProcessGraphNode.cs
    startLine: 211
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  syntax:
    content: protected virtual void OnEditTextFinished(TextField textField)
    parameters:
    - id: textField
      type: TextField
    content.vb: Protected Overridable Sub OnEditTextFinished(textField As TextField)
  overload: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: VRBuilder.Editor.UI.Graphics
  commentId: N:VRBuilder.Editor.UI.Graphics
  name: VRBuilder.Editor.UI.Graphics
  nameWithType: VRBuilder.Editor.UI.Graphics
  fullName: VRBuilder.Editor.UI.Graphics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Vector2
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.IsEntryPoint*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.IsEntryPoint
  name: IsEntryPoint
  nameWithType: ProcessGraphNode.IsEntryPoint
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.IsEntryPoint
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Name*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Name
  name: Name
  nameWithType: ProcessGraphNode.Name
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Name
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Outputs*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Outputs
  name: Outputs
  nameWithType: ProcessGraphNode.Outputs
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Outputs
- uid: VRBuilder.Core.IStep[]
  isExternal: true
  name: IStep[]
  nameWithType: IStep[]
  fullName: VRBuilder.Core.IStep[]
  nameWithType.vb: IStep()
  fullName.vb: VRBuilder.Core.IStep()
  name.vb: IStep()
  spec.csharp:
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.EntryPoint*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.EntryPoint
  name: EntryPoint
  nameWithType: ProcessGraphNode.EntryPoint
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.EntryPoint
- uid: VRBuilder.Core.IStep
  commentId: T:VRBuilder.Core.IStep
  parent: VRBuilder.Core
  name: IStep
  nameWithType: IStep
  fullName: VRBuilder.Core.IStep
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Position*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Position
  name: Position
  nameWithType: ProcessGraphNode.Position
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Position
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.SetOutput*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.SetOutput
  name: SetOutput
  nameWithType: ProcessGraphNode.SetOutput
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.SetOutput
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddToChapter*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddToChapter
  name: AddToChapter
  nameWithType: ProcessGraphNode.AddToChapter
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddToChapter
- uid: VRBuilder.Core.IChapter
  commentId: T:VRBuilder.Core.IChapter
  parent: VRBuilder.Core
  name: IChapter
  nameWithType: IChapter
  fullName: VRBuilder.Core.IChapter
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemoveFromChapter*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemoveFromChapter
  name: RemoveFromChapter
  nameWithType: ProcessGraphNode.RemoveFromChapter
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemoveFromChapter
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemovePortWithUndo*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemovePortWithUndo
  name: RemovePortWithUndo
  nameWithType: ProcessGraphNode.RemovePortWithUndo
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemovePortWithUndo
- uid: Port
  isExternal: true
  name: Port
  nameWithType: Port
  fullName: Port
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.#ctor*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.#ctor
  name: ProcessGraphNode
  nameWithType: ProcessGraphNode.ProcessGraphNode
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.ProcessGraphNode
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Refresh*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Refresh
  name: Refresh
  nameWithType: ProcessGraphNode.Refresh
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Refresh
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.UpdateOutputPortName*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.UpdateOutputPortName
  name: UpdateOutputPortName
  nameWithType: ProcessGraphNode.UpdateOutputPortName
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.UpdateOutputPortName
- uid: Node
  isExternal: true
  name: Node
  nameWithType: Node
  fullName: Node
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort
  name: AddTransitionPort
  nameWithType: ProcessGraphNode.AddTransitionPort
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort
  name: CreatePort
  nameWithType: ProcessGraphNode.CreatePort
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort
- uid: Direction
  commentId: '!:Direction'
  isExternal: true
  name: Direction
  nameWithType: Direction
  fullName: Direction
- uid: Port.Capacity
  commentId: '!:Port.Capacity'
  isExternal: true
  name: Port.Capacity
  nameWithType: Port.Capacity
  fullName: Port.Capacity
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon
  name: GetIcon
  nameWithType: ProcessGraphNode.GetIcon
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon
- uid: Image
  commentId: '!:Image'
  isExternal: true
  name: Image
  nameWithType: Image
  fullName: Image
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor
  name: OpenTextEditor
  nameWithType: ProcessGraphNode.OpenTextEditor
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished
  name: OnEditTextFinished
  nameWithType: ProcessGraphNode.OnEditTextFinished
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished
- uid: TextField
  isExternal: true
  name: TextField
  nameWithType: TextField
  fullName: TextField
