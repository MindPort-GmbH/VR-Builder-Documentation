### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.Configuration.EditorConfigurator
  commentId: T:VRBuilder.Editor.Configuration.EditorConfigurator
  id: EditorConfigurator
  parent: VRBuilder.Editor.Configuration
  children:
  - VRBuilder.Editor.Configuration.EditorConfigurator.Init
  - VRBuilder.Editor.Configuration.EditorConfigurator.Instance
  langs:
  - csharp
  - vb
  name: EditorConfigurator
  nameWithType: EditorConfigurator
  fullName: VRBuilder.Editor.Configuration.EditorConfigurator
  type: Class
  source:
    remote:
      path: Source/Core/Editor/Configuration/EditorConfigurator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EditorConfigurator
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/Configuration/EditorConfigurator.cs
    startLine: 20
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.Configuration
  summary: "\nConfigurator to set the process editor configuration which is used by the process creation editor tools (like Step Inspector).\n"
  example: []
  syntax:
    content: public static class EditorConfigurator
    content.vb: Public Module EditorConfigurator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VRBuilder.Editor.Configuration.EditorConfigurator.Instance
  commentId: P:VRBuilder.Editor.Configuration.EditorConfigurator.Instance
  id: Instance
  parent: VRBuilder.Editor.Configuration.EditorConfigurator
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: EditorConfigurator.Instance
  fullName: VRBuilder.Editor.Configuration.EditorConfigurator.Instance
  type: Property
  source:
    remote:
      path: Source/Core/Editor/Configuration/EditorConfigurator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Instance
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/Configuration/EditorConfigurator.cs
    startLine: 24
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.Configuration
  syntax:
    content: public static DefaultEditorConfiguration Instance { get; }
    parameters: []
    return:
      type: VRBuilder.Editor.Configuration.DefaultEditorConfiguration
    content.vb: Public Shared ReadOnly Property Instance As DefaultEditorConfiguration
  overload: VRBuilder.Editor.Configuration.EditorConfigurator.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VRBuilder.Editor.Configuration.EditorConfigurator.Init
  commentId: M:VRBuilder.Editor.Configuration.EditorConfigurator.Init
  id: Init
  parent: VRBuilder.Editor.Configuration.EditorConfigurator
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: EditorConfigurator.Init()
  fullName: VRBuilder.Editor.Configuration.EditorConfigurator.Init()
  type: Method
  source:
    remote:
      path: Source/Core/Editor/Configuration/EditorConfigurator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Init
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/Configuration/EditorConfigurator.cs
    startLine: 34
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.Configuration
  syntax:
    content: public static void Init()
    content.vb: Public Shared Sub Init
  overload: VRBuilder.Editor.Configuration.EditorConfigurator.Init*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VRBuilder.Editor.Configuration
  commentId: N:VRBuilder.Editor.Configuration
  name: VRBuilder.Editor.Configuration
  nameWithType: VRBuilder.Editor.Configuration
  fullName: VRBuilder.Editor.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Editor.Configuration.EditorConfigurator.Instance*
  commentId: Overload:VRBuilder.Editor.Configuration.EditorConfigurator.Instance
  name: Instance
  nameWithType: EditorConfigurator.Instance
  fullName: VRBuilder.Editor.Configuration.EditorConfigurator.Instance
- uid: VRBuilder.Editor.Configuration.DefaultEditorConfiguration
  commentId: T:VRBuilder.Editor.Configuration.DefaultEditorConfiguration
  parent: VRBuilder.Editor.Configuration
  name: DefaultEditorConfiguration
  nameWithType: DefaultEditorConfiguration
  fullName: VRBuilder.Editor.Configuration.DefaultEditorConfiguration
- uid: VRBuilder.Editor.Configuration.EditorConfigurator.Init*
  commentId: Overload:VRBuilder.Editor.Configuration.EditorConfigurator.Init
  name: Init
  nameWithType: EditorConfigurator.Init
  fullName: VRBuilder.Editor.Configuration.EditorConfigurator.Init
