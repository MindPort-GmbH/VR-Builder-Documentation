### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.UI.BuilderGUILayout
  commentId: T:VRBuilder.Editor.UI.BuilderGUILayout
  id: BuilderGUILayout
  parent: VRBuilder.Editor.UI
  children:
  - VRBuilder.Editor.UI.BuilderGUILayout.DrawCheckBoxList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String},System.Collections.Generic.List{``0})
  - VRBuilder.Editor.UI.BuilderGUILayout.DrawLink(System.String,System.Action,System.Int32)
  - VRBuilder.Editor.UI.BuilderGUILayout.DrawLink(System.String,System.String,System.Int32)
  - VRBuilder.Editor.UI.BuilderGUILayout.DrawTextField(System.String,System.Int32,GUILayoutOption[])
  - VRBuilder.Editor.UI.BuilderGUILayout.DrawTextField(System.String,System.Int32,System.Int32,GUILayoutOption[])
  - VRBuilder.Editor.UI.BuilderGUILayout.DrawToggleGroup``1(``0,System.Collections.Generic.List{``0},System.Collections.Generic.List{GUIContent},System.Collections.Generic.List{``0})
  - VRBuilder.Editor.UI.BuilderGUILayout.DrawToggleGroup``1(``0,System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String},System.Collections.Generic.List{``0})
  langs:
  - csharp
  - vb
  name: BuilderGUILayout
  nameWithType: BuilderGUILayout
  fullName: VRBuilder.Editor.UI.BuilderGUILayout
  type: Class
  source:
    remote:
      path: Source/Core/Editor/UI/BuilderGUILayout.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: BuilderGUILayout
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/BuilderGUILayout.cs
    startLine: 17
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nLayout extension for VR Builder.\n"
  example: []
  syntax:
    content: public static class BuilderGUILayout
    content.vb: Public Module BuilderGUILayout
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VRBuilder.Editor.UI.BuilderGUILayout.DrawLink(System.String,System.String,System.Int32)
  commentId: M:VRBuilder.Editor.UI.BuilderGUILayout.DrawLink(System.String,System.String,System.Int32)
  id: DrawLink(System.String,System.String,System.Int32)
  parent: VRBuilder.Editor.UI.BuilderGUILayout
  langs:
  - csharp
  - vb
  name: DrawLink(String, String, Int32)
  nameWithType: BuilderGUILayout.DrawLink(String, String, Int32)
  fullName: VRBuilder.Editor.UI.BuilderGUILayout.DrawLink(System.String, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/BuilderGUILayout.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawLink
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/BuilderGUILayout.cs
    startLine: 25
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nDraws a clickable link which opens a website.\n"
  example: []
  syntax:
    content: public static void DrawLink(string text, string url, int indent = 12)
    parameters:
    - id: text
      type: System.String
      description: Text to be displayed
    - id: url
      type: System.String
      description: url to be opened inside the browser
    - id: indent
      type: System.Int32
      description: Intend on the left
    content.vb: Public Shared Sub DrawLink(text As String, url As String, indent As Integer = 12)
  overload: VRBuilder.Editor.UI.BuilderGUILayout.DrawLink*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.UI.BuilderGUILayout.DrawLink(System.String,System.Action,System.Int32)
  commentId: M:VRBuilder.Editor.UI.BuilderGUILayout.DrawLink(System.String,System.Action,System.Int32)
  id: DrawLink(System.String,System.Action,System.Int32)
  parent: VRBuilder.Editor.UI.BuilderGUILayout
  langs:
  - csharp
  - vb
  name: DrawLink(String, Action, Int32)
  nameWithType: BuilderGUILayout.DrawLink(String, Action, Int32)
  fullName: VRBuilder.Editor.UI.BuilderGUILayout.DrawLink(System.String, System.Action, System.Int32)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/BuilderGUILayout.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawLink
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/BuilderGUILayout.cs
    startLine: 46
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nDraws a clickable link which looks like a hyperlink.\n"
  example: []
  syntax:
    content: public static void DrawLink(string text, Action action, int indent = 12)
    parameters:
    - id: text
      type: System.String
      description: Text to be displayed
    - id: action
      type: System.Action
      description: action done on click
    - id: indent
      type: System.Int32
      description: Intend on the left
    content.vb: Public Shared Sub DrawLink(text As String, action As Action, indent As Integer = 12)
  overload: VRBuilder.Editor.UI.BuilderGUILayout.DrawLink*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.UI.BuilderGUILayout.DrawTextField(System.String,System.Int32,GUILayoutOption[])
  commentId: M:VRBuilder.Editor.UI.BuilderGUILayout.DrawTextField(System.String,System.Int32,GUILayoutOption[])
  id: DrawTextField(System.String,System.Int32,GUILayoutOption[])
  parent: VRBuilder.Editor.UI.BuilderGUILayout
  langs:
  - csharp
  - vb
  name: DrawTextField(String, Int32, GUILayoutOption[])
  nameWithType: BuilderGUILayout.DrawTextField(String, Int32, GUILayoutOption[])
  fullName: VRBuilder.Editor.UI.BuilderGUILayout.DrawTextField(System.String, System.Int32, GUILayoutOption[])
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/BuilderGUILayout.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawTextField
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/BuilderGUILayout.cs
    startLine: 58
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  syntax:
    content: public static string DrawTextField(string content, int charLimit = -1, params GUILayoutOption[] options)
    parameters:
    - id: content
      type: System.String
    - id: charLimit
      type: System.Int32
    - id: options
      type: GUILayoutOption[]
    return:
      type: System.String
    content.vb: Public Shared Function DrawTextField(content As String, charLimit As Integer = -1, ParamArray options As GUILayoutOption()) As String
  overload: VRBuilder.Editor.UI.BuilderGUILayout.DrawTextField*
  nameWithType.vb: BuilderGUILayout.DrawTextField(String, Int32, GUILayoutOption())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.Editor.UI.BuilderGUILayout.DrawTextField(System.String, System.Int32, GUILayoutOption())
  name.vb: DrawTextField(String, Int32, GUILayoutOption())
- uid: VRBuilder.Editor.UI.BuilderGUILayout.DrawTextField(System.String,System.Int32,System.Int32,GUILayoutOption[])
  commentId: M:VRBuilder.Editor.UI.BuilderGUILayout.DrawTextField(System.String,System.Int32,System.Int32,GUILayoutOption[])
  id: DrawTextField(System.String,System.Int32,System.Int32,GUILayoutOption[])
  parent: VRBuilder.Editor.UI.BuilderGUILayout
  langs:
  - csharp
  - vb
  name: DrawTextField(String, Int32, Int32, GUILayoutOption[])
  nameWithType: BuilderGUILayout.DrawTextField(String, Int32, Int32, GUILayoutOption[])
  fullName: VRBuilder.Editor.UI.BuilderGUILayout.DrawTextField(System.String, System.Int32, System.Int32, GUILayoutOption[])
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/BuilderGUILayout.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawTextField
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/BuilderGUILayout.cs
    startLine: 63
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  syntax:
    content: public static string DrawTextField(string content, int charLimit = -1, int indent = 0, params GUILayoutOption[] options)
    parameters:
    - id: content
      type: System.String
    - id: charLimit
      type: System.Int32
    - id: indent
      type: System.Int32
    - id: options
      type: GUILayoutOption[]
    return:
      type: System.String
    content.vb: Public Shared Function DrawTextField(content As String, charLimit As Integer = -1, indent As Integer = 0, ParamArray options As GUILayoutOption()) As String
  overload: VRBuilder.Editor.UI.BuilderGUILayout.DrawTextField*
  nameWithType.vb: BuilderGUILayout.DrawTextField(String, Int32, Int32, GUILayoutOption())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.Editor.UI.BuilderGUILayout.DrawTextField(System.String, System.Int32, System.Int32, GUILayoutOption())
  name.vb: DrawTextField(String, Int32, Int32, GUILayoutOption())
- uid: VRBuilder.Editor.UI.BuilderGUILayout.DrawToggleGroup``1(``0,System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String},System.Collections.Generic.List{``0})
  commentId: M:VRBuilder.Editor.UI.BuilderGUILayout.DrawToggleGroup``1(``0,System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String},System.Collections.Generic.List{``0})
  id: DrawToggleGroup``1(``0,System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String},System.Collections.Generic.List{``0})
  parent: VRBuilder.Editor.UI.BuilderGUILayout
  langs:
  - csharp
  - vb
  name: DrawToggleGroup<T>(T, List<T>, List<String>, List<T>)
  nameWithType: BuilderGUILayout.DrawToggleGroup<T>(T, List<T>, List<String>, List<T>)
  fullName: VRBuilder.Editor.UI.BuilderGUILayout.DrawToggleGroup<T>(T, System.Collections.Generic.List<T>, System.Collections.Generic.List<System.String>, System.Collections.Generic.List<T>)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/BuilderGUILayout.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawToggleGroup
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/BuilderGUILayout.cs
    startLine: 86
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  syntax:
    content: public static T DrawToggleGroup<T>(T selection, List<T> entries, List<string> content, List<T> disabledEntries)
    parameters:
    - id: selection
      type: '{T}'
    - id: entries
      type: System.Collections.Generic.List{{T}}
    - id: content
      type: System.Collections.Generic.List{System.String}
    - id: disabledEntries
      type: System.Collections.Generic.List{{T}}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function DrawToggleGroup(Of T)(selection As T, entries As List(Of T), content As List(Of String), disabledEntries As List(Of T)) As T
  overload: VRBuilder.Editor.UI.BuilderGUILayout.DrawToggleGroup*
  nameWithType.vb: BuilderGUILayout.DrawToggleGroup(Of T)(T, List(Of T), List(Of String), List(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.Editor.UI.BuilderGUILayout.DrawToggleGroup(Of T)(T, System.Collections.Generic.List(Of T), System.Collections.Generic.List(Of System.String), System.Collections.Generic.List(Of T))
  name.vb: DrawToggleGroup(Of T)(T, List(Of T), List(Of String), List(Of T))
- uid: VRBuilder.Editor.UI.BuilderGUILayout.DrawToggleGroup``1(``0,System.Collections.Generic.List{``0},System.Collections.Generic.List{GUIContent},System.Collections.Generic.List{``0})
  commentId: M:VRBuilder.Editor.UI.BuilderGUILayout.DrawToggleGroup``1(``0,System.Collections.Generic.List{``0},System.Collections.Generic.List{GUIContent},System.Collections.Generic.List{``0})
  id: DrawToggleGroup``1(``0,System.Collections.Generic.List{``0},System.Collections.Generic.List{GUIContent},System.Collections.Generic.List{``0})
  parent: VRBuilder.Editor.UI.BuilderGUILayout
  langs:
  - csharp
  - vb
  name: DrawToggleGroup<T>(T, List<T>, List<GUIContent>, List<T>)
  nameWithType: BuilderGUILayout.DrawToggleGroup<T>(T, List<T>, List<GUIContent>, List<T>)
  fullName: VRBuilder.Editor.UI.BuilderGUILayout.DrawToggleGroup<T>(T, System.Collections.Generic.List<T>, System.Collections.Generic.List<GUIContent>, System.Collections.Generic.List<T>)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/BuilderGUILayout.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawToggleGroup
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/BuilderGUILayout.cs
    startLine: 91
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  syntax:
    content: public static T DrawToggleGroup<T>(T selection, List<T> entries, List<GUIContent> content, List<T> disabledEntries)
    parameters:
    - id: selection
      type: '{T}'
    - id: entries
      type: System.Collections.Generic.List{{T}}
    - id: content
      type: System.Collections.Generic.List{GUIContent}
    - id: disabledEntries
      type: System.Collections.Generic.List{{T}}
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function DrawToggleGroup(Of T)(selection As T, entries As List(Of T), content As List(Of GUIContent), disabledEntries As List(Of T)) As T
  overload: VRBuilder.Editor.UI.BuilderGUILayout.DrawToggleGroup*
  nameWithType.vb: BuilderGUILayout.DrawToggleGroup(Of T)(T, List(Of T), List(Of GUIContent), List(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.Editor.UI.BuilderGUILayout.DrawToggleGroup(Of T)(T, System.Collections.Generic.List(Of T), System.Collections.Generic.List(Of GUIContent), System.Collections.Generic.List(Of T))
  name.vb: DrawToggleGroup(Of T)(T, List(Of T), List(Of GUIContent), List(Of T))
- uid: VRBuilder.Editor.UI.BuilderGUILayout.DrawCheckBoxList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String},System.Collections.Generic.List{``0})
  commentId: M:VRBuilder.Editor.UI.BuilderGUILayout.DrawCheckBoxList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String},System.Collections.Generic.List{``0})
  id: DrawCheckBoxList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String},System.Collections.Generic.List{``0})
  parent: VRBuilder.Editor.UI.BuilderGUILayout
  langs:
  - csharp
  - vb
  name: DrawCheckBoxList<T>(IEnumerable<T>, List<T>, List<String>, List<T>)
  nameWithType: BuilderGUILayout.DrawCheckBoxList<T>(IEnumerable<T>, List<T>, List<String>, List<T>)
  fullName: VRBuilder.Editor.UI.BuilderGUILayout.DrawCheckBoxList<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.List<T>, System.Collections.Generic.List<System.String>, System.Collections.Generic.List<T>)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/BuilderGUILayout.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DrawCheckBoxList
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/BuilderGUILayout.cs
    startLine: 113
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  syntax:
    content: public static IEnumerable<T> DrawCheckBoxList<T>(IEnumerable<T> selection, List<T> entries, List<string> content, List<T> disabledEntries)
    parameters:
    - id: selection
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: entries
      type: System.Collections.Generic.List{{T}}
    - id: content
      type: System.Collections.Generic.List{System.String}
    - id: disabledEntries
      type: System.Collections.Generic.List{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Shared Function DrawCheckBoxList(Of T)(selection As IEnumerable(Of T), entries As List(Of T), content As List(Of String), disabledEntries As List(Of T)) As IEnumerable(Of T)
  overload: VRBuilder.Editor.UI.BuilderGUILayout.DrawCheckBoxList*
  nameWithType.vb: BuilderGUILayout.DrawCheckBoxList(Of T)(IEnumerable(Of T), List(Of T), List(Of String), List(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.Editor.UI.BuilderGUILayout.DrawCheckBoxList(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.List(Of T), System.Collections.Generic.List(Of System.String), System.Collections.Generic.List(Of T))
  name.vb: DrawCheckBoxList(Of T)(IEnumerable(Of T), List(Of T), List(Of String), List(Of T))
references:
- uid: VRBuilder.Editor.UI
  commentId: N:VRBuilder.Editor.UI
  name: VRBuilder.Editor.UI
  nameWithType: VRBuilder.Editor.UI
  fullName: VRBuilder.Editor.UI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Editor.UI.BuilderGUILayout.DrawLink*
  commentId: Overload:VRBuilder.Editor.UI.BuilderGUILayout.DrawLink
  name: DrawLink
  nameWithType: BuilderGUILayout.DrawLink
  fullName: VRBuilder.Editor.UI.BuilderGUILayout.DrawLink
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: VRBuilder.Editor.UI.BuilderGUILayout.DrawTextField*
  commentId: Overload:VRBuilder.Editor.UI.BuilderGUILayout.DrawTextField
  name: DrawTextField
  nameWithType: BuilderGUILayout.DrawTextField
  fullName: VRBuilder.Editor.UI.BuilderGUILayout.DrawTextField
- uid: GUILayoutOption[]
  isExternal: true
  name: GUILayoutOption[]
  nameWithType: GUILayoutOption[]
  fullName: GUILayoutOption[]
  nameWithType.vb: GUILayoutOption()
  fullName.vb: GUILayoutOption()
  name.vb: GUILayoutOption()
  spec.csharp:
  - uid: GUILayoutOption
    name: GUILayoutOption
    nameWithType: GUILayoutOption
    fullName: GUILayoutOption
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: GUILayoutOption
    name: GUILayoutOption
    nameWithType: GUILayoutOption
    fullName: GUILayoutOption
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: VRBuilder.Editor.UI.BuilderGUILayout.DrawToggleGroup*
  commentId: Overload:VRBuilder.Editor.UI.BuilderGUILayout.DrawToggleGroup
  name: DrawToggleGroup
  nameWithType: BuilderGUILayout.DrawToggleGroup
  fullName: VRBuilder.Editor.UI.BuilderGUILayout.DrawToggleGroup
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List{GUIContent}
  commentId: T:System.Collections.Generic.List{GUIContent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<GUIContent>
  nameWithType: List<GUIContent>
  fullName: System.Collections.Generic.List<GUIContent>
  nameWithType.vb: List(Of GUIContent)
  fullName.vb: System.Collections.Generic.List(Of GUIContent)
  name.vb: List(Of GUIContent)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GUIContent
    name: GUIContent
    nameWithType: GUIContent
    fullName: GUIContent
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GUIContent
    name: GUIContent
    nameWithType: GUIContent
    fullName: GUIContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.BuilderGUILayout.DrawCheckBoxList*
  commentId: Overload:VRBuilder.Editor.UI.BuilderGUILayout.DrawCheckBoxList
  name: DrawCheckBoxList
  nameWithType: BuilderGUILayout.DrawCheckBoxList
  fullName: VRBuilder.Editor.UI.BuilderGUILayout.DrawCheckBoxList
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
