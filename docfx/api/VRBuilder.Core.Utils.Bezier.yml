### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Utils.Bezier
  commentId: T:VRBuilder.Core.Utils.Bezier
  id: Bezier
  parent: VRBuilder.Core.Utils
  children:
  - VRBuilder.Core.Utils.Bezier.GetArcLength(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Int32)
  - VRBuilder.Core.Utils.Bezier.GetFirstDerivative(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
  - VRBuilder.Core.Utils.Bezier.GetFirstDerivative(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
  - VRBuilder.Core.Utils.Bezier.GetPoint(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
  - VRBuilder.Core.Utils.Bezier.GetPoint(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
  langs:
  - csharp
  - vb
  name: Bezier
  nameWithType: Bezier
  fullName: VRBuilder.Core.Utils.Bezier
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/Bezier.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Bezier
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/Bezier.cs
    startLine: 9
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  summary: "\nBezier curve formulas.\n"
  example: []
  syntax:
    content: public static class Bezier
    content.vb: Public Module Bezier
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VRBuilder.Core.Utils.Bezier.GetPoint(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
  commentId: M:VRBuilder.Core.Utils.Bezier.GetPoint(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
  id: GetPoint(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
  parent: VRBuilder.Core.Utils.Bezier
  langs:
  - csharp
  - vb
  name: GetPoint(Vector3, Vector3, Vector3, Single)
  nameWithType: Bezier.GetPoint(Vector3, Vector3, Vector3, Single)
  fullName: VRBuilder.Core.Utils.Bezier.GetPoint(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, System.Single)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/Bezier.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetPoint
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/Bezier.cs
    startLine: 11
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  syntax:
    content: public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t)
    parameters:
    - id: p0
      type: UnityEngine.Vector3
    - id: p1
      type: UnityEngine.Vector3
    - id: p2
      type: UnityEngine.Vector3
    - id: t
      type: System.Single
    return:
      type: UnityEngine.Vector3
    content.vb: Public Shared Function GetPoint(p0 As Vector3, p1 As Vector3, p2 As Vector3, t As Single) As Vector3
  overload: VRBuilder.Core.Utils.Bezier.GetPoint*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Core.Utils.Bezier.GetFirstDerivative(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
  commentId: M:VRBuilder.Core.Utils.Bezier.GetFirstDerivative(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
  id: GetFirstDerivative(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
  parent: VRBuilder.Core.Utils.Bezier
  langs:
  - csharp
  - vb
  name: GetFirstDerivative(Vector3, Vector3, Vector3, Single)
  nameWithType: Bezier.GetFirstDerivative(Vector3, Vector3, Vector3, Single)
  fullName: VRBuilder.Core.Utils.Bezier.GetFirstDerivative(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, System.Single)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/Bezier.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetFirstDerivative
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/Bezier.cs
    startLine: 21
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  syntax:
    content: public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, float t)
    parameters:
    - id: p0
      type: UnityEngine.Vector3
    - id: p1
      type: UnityEngine.Vector3
    - id: p2
      type: UnityEngine.Vector3
    - id: t
      type: System.Single
    return:
      type: UnityEngine.Vector3
    content.vb: Public Shared Function GetFirstDerivative(p0 As Vector3, p1 As Vector3, p2 As Vector3, t As Single) As Vector3
  overload: VRBuilder.Core.Utils.Bezier.GetFirstDerivative*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Core.Utils.Bezier.GetPoint(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
  commentId: M:VRBuilder.Core.Utils.Bezier.GetPoint(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
  id: GetPoint(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
  parent: VRBuilder.Core.Utils.Bezier
  langs:
  - csharp
  - vb
  name: GetPoint(Vector3, Vector3, Vector3, Vector3, Single)
  nameWithType: Bezier.GetPoint(Vector3, Vector3, Vector3, Vector3, Single)
  fullName: VRBuilder.Core.Utils.Bezier.GetPoint(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, System.Single)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/Bezier.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetPoint
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/Bezier.cs
    startLine: 28
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  syntax:
    content: public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
    parameters:
    - id: p0
      type: UnityEngine.Vector3
    - id: p1
      type: UnityEngine.Vector3
    - id: p2
      type: UnityEngine.Vector3
    - id: p3
      type: UnityEngine.Vector3
    - id: t
      type: System.Single
    return:
      type: UnityEngine.Vector3
    content.vb: Public Shared Function GetPoint(p0 As Vector3, p1 As Vector3, p2 As Vector3, p3 As Vector3, t As Single) As Vector3
  overload: VRBuilder.Core.Utils.Bezier.GetPoint*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Core.Utils.Bezier.GetFirstDerivative(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
  commentId: M:VRBuilder.Core.Utils.Bezier.GetFirstDerivative(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
  id: GetFirstDerivative(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)
  parent: VRBuilder.Core.Utils.Bezier
  langs:
  - csharp
  - vb
  name: GetFirstDerivative(Vector3, Vector3, Vector3, Vector3, Single)
  nameWithType: Bezier.GetFirstDerivative(Vector3, Vector3, Vector3, Vector3, Single)
  fullName: VRBuilder.Core.Utils.Bezier.GetFirstDerivative(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, System.Single)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/Bezier.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetFirstDerivative
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/Bezier.cs
    startLine: 39
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  syntax:
    content: public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
    parameters:
    - id: p0
      type: UnityEngine.Vector3
    - id: p1
      type: UnityEngine.Vector3
    - id: p2
      type: UnityEngine.Vector3
    - id: p3
      type: UnityEngine.Vector3
    - id: t
      type: System.Single
    return:
      type: UnityEngine.Vector3
    content.vb: Public Shared Function GetFirstDerivative(p0 As Vector3, p1 As Vector3, p2 As Vector3, p3 As Vector3, t As Single) As Vector3
  overload: VRBuilder.Core.Utils.Bezier.GetFirstDerivative*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Core.Utils.Bezier.GetArcLength(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Int32)
  commentId: M:VRBuilder.Core.Utils.Bezier.GetArcLength(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Int32)
  id: GetArcLength(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Int32)
  parent: VRBuilder.Core.Utils.Bezier
  langs:
  - csharp
  - vb
  name: GetArcLength(Vector3, Vector3, Vector3, Vector3, Int32)
  nameWithType: Bezier.GetArcLength(Vector3, Vector3, Vector3, Vector3, Int32)
  fullName: VRBuilder.Core.Utils.Bezier.GetArcLength(UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3, System.Int32)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Utils/Bezier/Bezier.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetArcLength
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Bezier/Bezier.cs
    startLine: 49
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils
  syntax:
    content: public static IEnumerable<float> GetArcLength(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, int resolution)
    parameters:
    - id: p0
      type: UnityEngine.Vector3
    - id: p1
      type: UnityEngine.Vector3
    - id: p2
      type: UnityEngine.Vector3
    - id: p3
      type: UnityEngine.Vector3
    - id: resolution
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{System.Single}
    content.vb: Public Shared Function GetArcLength(p0 As Vector3, p1 As Vector3, p2 As Vector3, p3 As Vector3, resolution As Integer) As IEnumerable(Of Single)
  overload: VRBuilder.Core.Utils.Bezier.GetArcLength*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VRBuilder.Core.Utils
  commentId: N:VRBuilder.Core.Utils
  name: VRBuilder.Core.Utils
  nameWithType: VRBuilder.Core.Utils
  fullName: VRBuilder.Core.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Utils.Bezier.GetPoint*
  commentId: Overload:VRBuilder.Core.Utils.Bezier.GetPoint
  name: GetPoint
  nameWithType: Bezier.GetPoint
  fullName: VRBuilder.Core.Utils.Bezier.GetPoint
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: VRBuilder.Core.Utils.Bezier.GetFirstDerivative*
  commentId: Overload:VRBuilder.Core.Utils.Bezier.GetFirstDerivative
  name: GetFirstDerivative
  nameWithType: Bezier.GetFirstDerivative
  fullName: VRBuilder.Core.Utils.Bezier.GetFirstDerivative
- uid: VRBuilder.Core.Utils.Bezier.GetArcLength*
  commentId: Overload:VRBuilder.Core.Utils.Bezier.GetArcLength
  name: GetArcLength
  nameWithType: Bezier.GetArcLength
  fullName: VRBuilder.Core.Utils.Bezier.GetArcLength
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEnumerable{System.Single}
  commentId: T:System.Collections.Generic.IEnumerable{System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Single>
  nameWithType: IEnumerable<Single>
  fullName: System.Collections.Generic.IEnumerable<System.Single>
  nameWithType.vb: IEnumerable(Of Single)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Single)
  name.vb: IEnumerable(Of Single)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
