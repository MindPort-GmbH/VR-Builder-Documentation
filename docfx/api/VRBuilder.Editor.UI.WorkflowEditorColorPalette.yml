### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.UI.WorkflowEditorColorPalette
  commentId: T:VRBuilder.Editor.UI.WorkflowEditorColorPalette
  id: WorkflowEditorColorPalette
  parent: VRBuilder.Editor.UI
  children:
  - VRBuilder.Editor.UI.WorkflowEditorColorPalette.EditorBackground
  - VRBuilder.Editor.UI.WorkflowEditorColorPalette.ElementBackground
  - VRBuilder.Editor.UI.WorkflowEditorColorPalette.GetDefaultPalette
  - VRBuilder.Editor.UI.WorkflowEditorColorPalette.LoadPaletteFrom(System.String)
  - VRBuilder.Editor.UI.WorkflowEditorColorPalette.Primary
  - VRBuilder.Editor.UI.WorkflowEditorColorPalette.Secondary
  - VRBuilder.Editor.UI.WorkflowEditorColorPalette.Text
  - VRBuilder.Editor.UI.WorkflowEditorColorPalette.Transition
  langs:
  - csharp
  - vb
  name: WorkflowEditorColorPalette
  nameWithType: WorkflowEditorColorPalette
  fullName: VRBuilder.Editor.UI.WorkflowEditorColorPalette
  type: Class
  source:
    remote:
      path: Source/Core/Editor/UI/WorkflowEditorColorPalette.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: WorkflowEditorColorPalette
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/WorkflowEditorColorPalette.cs
    startLine: 15
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nClass to provide convenient access to all colors used in the Workflow window.\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public class WorkflowEditorColorPalette
    content.vb: >-
      <DataContract>

      Public Class WorkflowEditorColorPalette
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Editor.UI.WorkflowEditorColorPalette.EditorBackground
  commentId: P:VRBuilder.Editor.UI.WorkflowEditorColorPalette.EditorBackground
  id: EditorBackground
  parent: VRBuilder.Editor.UI.WorkflowEditorColorPalette
  langs:
  - csharp
  - vb
  name: EditorBackground
  nameWithType: WorkflowEditorColorPalette.EditorBackground
  fullName: VRBuilder.Editor.UI.WorkflowEditorColorPalette.EditorBackground
  type: Property
  source:
    remote:
      path: Source/Core/Editor/UI/WorkflowEditorColorPalette.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EditorBackground
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/WorkflowEditorColorPalette.cs
    startLine: 21
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nReturns background color of the editor based on current editor skin.\n"
  example: []
  syntax:
    content: public static Color EditorBackground { get; }
    parameters: []
    return:
      type: UnityEngine.Color
    content.vb: Public Shared ReadOnly Property EditorBackground As Color
  overload: VRBuilder.Editor.UI.WorkflowEditorColorPalette.EditorBackground*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VRBuilder.Editor.UI.WorkflowEditorColorPalette.Primary
  commentId: P:VRBuilder.Editor.UI.WorkflowEditorColorPalette.Primary
  id: Primary
  parent: VRBuilder.Editor.UI.WorkflowEditorColorPalette
  langs:
  - csharp
  - vb
  name: Primary
  nameWithType: WorkflowEditorColorPalette.Primary
  fullName: VRBuilder.Editor.UI.WorkflowEditorColorPalette.Primary
  type: Property
  source:
    remote:
      path: Source/Core/Editor/UI/WorkflowEditorColorPalette.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Primary
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/WorkflowEditorColorPalette.cs
    startLine: 37
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nPrimary color for selected elements.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Color Primary { get; }
    parameters: []
    return:
      type: UnityEngine.Color
    content.vb: >-
      <DataMember>

      Public ReadOnly Property Primary As Color
  overload: VRBuilder.Editor.UI.WorkflowEditorColorPalette.Primary*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Editor.UI.WorkflowEditorColorPalette.Secondary
  commentId: P:VRBuilder.Editor.UI.WorkflowEditorColorPalette.Secondary
  id: Secondary
  parent: VRBuilder.Editor.UI.WorkflowEditorColorPalette
  langs:
  - csharp
  - vb
  name: Secondary
  nameWithType: WorkflowEditorColorPalette.Secondary
  fullName: VRBuilder.Editor.UI.WorkflowEditorColorPalette.Secondary
  type: Property
  source:
    remote:
      path: Source/Core/Editor/UI/WorkflowEditorColorPalette.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Secondary
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/WorkflowEditorColorPalette.cs
    startLine: 43
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nSecondary color (for highlights).\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Color Secondary { get; }
    parameters: []
    return:
      type: UnityEngine.Color
    content.vb: >-
      <DataMember>

      Public ReadOnly Property Secondary As Color
  overload: VRBuilder.Editor.UI.WorkflowEditorColorPalette.Secondary*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Editor.UI.WorkflowEditorColorPalette.ElementBackground
  commentId: P:VRBuilder.Editor.UI.WorkflowEditorColorPalette.ElementBackground
  id: ElementBackground
  parent: VRBuilder.Editor.UI.WorkflowEditorColorPalette
  langs:
  - csharp
  - vb
  name: ElementBackground
  nameWithType: WorkflowEditorColorPalette.ElementBackground
  fullName: VRBuilder.Editor.UI.WorkflowEditorColorPalette.ElementBackground
  type: Property
  source:
    remote:
      path: Source/Core/Editor/UI/WorkflowEditorColorPalette.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ElementBackground
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/WorkflowEditorColorPalette.cs
    startLine: 49
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nBackground color for graphical elements (step nodes, buttons...)\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Color ElementBackground { get; }
    parameters: []
    return:
      type: UnityEngine.Color
    content.vb: >-
      <DataMember>

      Public ReadOnly Property ElementBackground As Color
  overload: VRBuilder.Editor.UI.WorkflowEditorColorPalette.ElementBackground*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Editor.UI.WorkflowEditorColorPalette.Transition
  commentId: P:VRBuilder.Editor.UI.WorkflowEditorColorPalette.Transition
  id: Transition
  parent: VRBuilder.Editor.UI.WorkflowEditorColorPalette
  langs:
  - csharp
  - vb
  name: Transition
  nameWithType: WorkflowEditorColorPalette.Transition
  fullName: VRBuilder.Editor.UI.WorkflowEditorColorPalette.Transition
  type: Property
  source:
    remote:
      path: Source/Core/Editor/UI/WorkflowEditorColorPalette.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Transition
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/WorkflowEditorColorPalette.cs
    startLine: 55
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nColor of transition arrows between steps.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Color Transition { get; }
    parameters: []
    return:
      type: UnityEngine.Color
    content.vb: >-
      <DataMember>

      Public ReadOnly Property Transition As Color
  overload: VRBuilder.Editor.UI.WorkflowEditorColorPalette.Transition*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Editor.UI.WorkflowEditorColorPalette.Text
  commentId: P:VRBuilder.Editor.UI.WorkflowEditorColorPalette.Text
  id: Text
  parent: VRBuilder.Editor.UI.WorkflowEditorColorPalette
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: WorkflowEditorColorPalette.Text
  fullName: VRBuilder.Editor.UI.WorkflowEditorColorPalette.Text
  type: Property
  source:
    remote:
      path: Source/Core/Editor/UI/WorkflowEditorColorPalette.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Text
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/WorkflowEditorColorPalette.cs
    startLine: 61
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nText color easily readable at ElementBackground color.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public Color Text { get; }
    parameters: []
    return:
      type: UnityEngine.Color
    content.vb: >-
      <DataMember>

      Public ReadOnly Property Text As Color
  overload: VRBuilder.Editor.UI.WorkflowEditorColorPalette.Text*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Editor.UI.WorkflowEditorColorPalette.LoadPaletteFrom(System.String)
  commentId: M:VRBuilder.Editor.UI.WorkflowEditorColorPalette.LoadPaletteFrom(System.String)
  id: LoadPaletteFrom(System.String)
  parent: VRBuilder.Editor.UI.WorkflowEditorColorPalette
  langs:
  - csharp
  - vb
  name: LoadPaletteFrom(String)
  nameWithType: WorkflowEditorColorPalette.LoadPaletteFrom(String)
  fullName: VRBuilder.Editor.UI.WorkflowEditorColorPalette.LoadPaletteFrom(System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/WorkflowEditorColorPalette.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LoadPaletteFrom
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/WorkflowEditorColorPalette.cs
    startLine: 68
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  summary: "\nLoad palette from a json file.\n"
  example: []
  syntax:
    content: public static WorkflowEditorColorPalette LoadPaletteFrom(string paletteSubpath)
    parameters:
    - id: paletteSubpath
      type: System.String
      description: Subpath to file. If file is not found, use default palette. If more than one possible candidate is found, use default palette. If there was a serialization error, use default palette.
    return:
      type: VRBuilder.Editor.UI.WorkflowEditorColorPalette
    content.vb: Public Shared Function LoadPaletteFrom(paletteSubpath As String) As WorkflowEditorColorPalette
  overload: VRBuilder.Editor.UI.WorkflowEditorColorPalette.LoadPaletteFrom*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Editor.UI.WorkflowEditorColorPalette.GetDefaultPalette
  commentId: M:VRBuilder.Editor.UI.WorkflowEditorColorPalette.GetDefaultPalette
  id: GetDefaultPalette
  parent: VRBuilder.Editor.UI.WorkflowEditorColorPalette
  langs:
  - csharp
  - vb
  name: GetDefaultPalette()
  nameWithType: WorkflowEditorColorPalette.GetDefaultPalette()
  fullName: VRBuilder.Editor.UI.WorkflowEditorColorPalette.GetDefaultPalette()
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/WorkflowEditorColorPalette.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetDefaultPalette
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/WorkflowEditorColorPalette.cs
    startLine: 105
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI
  syntax:
    content: public static WorkflowEditorColorPalette GetDefaultPalette()
    return:
      type: VRBuilder.Editor.UI.WorkflowEditorColorPalette
    content.vb: Public Shared Function GetDefaultPalette As WorkflowEditorColorPalette
  overload: VRBuilder.Editor.UI.WorkflowEditorColorPalette.GetDefaultPalette*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VRBuilder.Editor.UI
  commentId: N:VRBuilder.Editor.UI
  name: VRBuilder.Editor.UI
  nameWithType: VRBuilder.Editor.UI
  fullName: VRBuilder.Editor.UI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Editor.UI.WorkflowEditorColorPalette.EditorBackground*
  commentId: Overload:VRBuilder.Editor.UI.WorkflowEditorColorPalette.EditorBackground
  name: EditorBackground
  nameWithType: WorkflowEditorColorPalette.EditorBackground
  fullName: VRBuilder.Editor.UI.WorkflowEditorColorPalette.EditorBackground
- uid: UnityEngine.Color
  commentId: T:UnityEngine.Color
  parent: UnityEngine
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: VRBuilder.Editor.UI.WorkflowEditorColorPalette.Primary*
  commentId: Overload:VRBuilder.Editor.UI.WorkflowEditorColorPalette.Primary
  name: Primary
  nameWithType: WorkflowEditorColorPalette.Primary
  fullName: VRBuilder.Editor.UI.WorkflowEditorColorPalette.Primary
- uid: VRBuilder.Editor.UI.WorkflowEditorColorPalette.Secondary*
  commentId: Overload:VRBuilder.Editor.UI.WorkflowEditorColorPalette.Secondary
  name: Secondary
  nameWithType: WorkflowEditorColorPalette.Secondary
  fullName: VRBuilder.Editor.UI.WorkflowEditorColorPalette.Secondary
- uid: VRBuilder.Editor.UI.WorkflowEditorColorPalette.ElementBackground*
  commentId: Overload:VRBuilder.Editor.UI.WorkflowEditorColorPalette.ElementBackground
  name: ElementBackground
  nameWithType: WorkflowEditorColorPalette.ElementBackground
  fullName: VRBuilder.Editor.UI.WorkflowEditorColorPalette.ElementBackground
- uid: VRBuilder.Editor.UI.WorkflowEditorColorPalette.Transition*
  commentId: Overload:VRBuilder.Editor.UI.WorkflowEditorColorPalette.Transition
  name: Transition
  nameWithType: WorkflowEditorColorPalette.Transition
  fullName: VRBuilder.Editor.UI.WorkflowEditorColorPalette.Transition
- uid: VRBuilder.Editor.UI.WorkflowEditorColorPalette.Text*
  commentId: Overload:VRBuilder.Editor.UI.WorkflowEditorColorPalette.Text
  name: Text
  nameWithType: WorkflowEditorColorPalette.Text
  fullName: VRBuilder.Editor.UI.WorkflowEditorColorPalette.Text
- uid: VRBuilder.Editor.UI.WorkflowEditorColorPalette.LoadPaletteFrom*
  commentId: Overload:VRBuilder.Editor.UI.WorkflowEditorColorPalette.LoadPaletteFrom
  name: LoadPaletteFrom
  nameWithType: WorkflowEditorColorPalette.LoadPaletteFrom
  fullName: VRBuilder.Editor.UI.WorkflowEditorColorPalette.LoadPaletteFrom
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Editor.UI.WorkflowEditorColorPalette
  commentId: T:VRBuilder.Editor.UI.WorkflowEditorColorPalette
  parent: VRBuilder.Editor.UI
  name: WorkflowEditorColorPalette
  nameWithType: WorkflowEditorColorPalette
  fullName: VRBuilder.Editor.UI.WorkflowEditorColorPalette
- uid: VRBuilder.Editor.UI.WorkflowEditorColorPalette.GetDefaultPalette*
  commentId: Overload:VRBuilder.Editor.UI.WorkflowEditorColorPalette.GetDefaultPalette
  name: GetDefaultPalette
  nameWithType: WorkflowEditorColorPalette.GetDefaultPalette
  fullName: VRBuilder.Editor.UI.WorkflowEditorColorPalette.GetDefaultPalette
