### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Chapter.EntityData
  commentId: T:VRBuilder.Core.Chapter.EntityData
  id: Chapter.EntityData
  parent: VRBuilder.Core
  children:
  - VRBuilder.Core.Chapter.EntityData.Current
  - VRBuilder.Core.Chapter.EntityData.FirstStep
  - VRBuilder.Core.Chapter.EntityData.GetChildren
  - VRBuilder.Core.Chapter.EntityData.Mode
  - VRBuilder.Core.Chapter.EntityData.Name
  - VRBuilder.Core.Chapter.EntityData.SetName(System.String)
  - VRBuilder.Core.Chapter.EntityData.Steps
  - VRBuilder.Core.Chapter.EntityData.VRBuilder#Core#EntityOwners#IEntitySequenceData#Current
  langs:
  - csharp
  - vb
  name: Chapter.EntityData
  nameWithType: Chapter.EntityData
  fullName: VRBuilder.Core.Chapter.EntityData
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Chapter.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EntityData
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Chapter.cs
    startLine: 27
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nThe chapter&apos;s data class.\n"
  example: []
  syntax:
    content: >-
      [DataContract(IsReference = true)]

      public class EntityData : EntityCollectionData<IStep>, IChapterData, IEntitySequenceDataWithMode<IStep>, IEntitySequenceData<IStep>, IEntityCollectionData<IStep>, IEntityCollectionData, IEntitySequenceData, IModeData, IRenameableData, INamedData, IData
    content.vb: >-
      <DataContract(IsReference:=True)>

      Public Class EntityData

          Inherits EntityCollectionData(Of IStep)

          Implements IChapterData, IEntitySequenceDataWithMode(Of IStep), IEntitySequenceData(Of IStep), IEntityCollectionData(Of IStep), IEntityCollectionData, IEntitySequenceData, IModeData, IRenameableData, INamedData, IData
  inheritance:
  - System.Object
  - VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStep}
  implements:
  - VRBuilder.Core.IChapterData
  - VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode{VRBuilder.Core.IStep}
  - VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IStep}
  - VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IStep}
  - VRBuilder.Core.EntityOwners.IEntityCollectionData
  - VRBuilder.Core.EntityOwners.IEntitySequenceData
  - VRBuilder.Core.Configuration.Modes.IModeData
  - VRBuilder.Core.IRenameableData
  - VRBuilder.Core.INamedData
  - VRBuilder.Core.IData
  inheritedMembers:
  - VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStep}.Metadata
  - VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStep}.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.Chapter.EntityData.Name
  commentId: P:VRBuilder.Core.Chapter.EntityData.Name
  id: Name
  parent: VRBuilder.Core.Chapter.EntityData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Chapter.EntityData.Name
  fullName: VRBuilder.Core.Chapter.EntityData.Name
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Chapter.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Name
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Chapter.cs
    startLine: 31
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: >-
      [DataMember]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember>

      Public Property Name As String
  overload: VRBuilder.Core.Chapter.EntityData.Name*
  implements:
  - VRBuilder.Core.INamedData.Name
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Chapter.EntityData.FirstStep
  commentId: P:VRBuilder.Core.Chapter.EntityData.FirstStep
  id: FirstStep
  parent: VRBuilder.Core.Chapter.EntityData
  langs:
  - csharp
  - vb
  name: FirstStep
  nameWithType: Chapter.EntityData.FirstStep
  fullName: VRBuilder.Core.Chapter.EntityData.FirstStep
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Chapter.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: FirstStep
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Chapter.cs
    startLine: 38
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nThe first step of the chapter.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public IStep FirstStep { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.IStep
    content.vb: >-
      <DataMember>

      Public Property FirstStep As IStep
  overload: VRBuilder.Core.Chapter.EntityData.FirstStep*
  implements:
  - VRBuilder.Core.IChapterData.FirstStep
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Chapter.EntityData.Steps
  commentId: P:VRBuilder.Core.Chapter.EntityData.Steps
  id: Steps
  parent: VRBuilder.Core.Chapter.EntityData
  langs:
  - csharp
  - vb
  name: Steps
  nameWithType: Chapter.EntityData.Steps
  fullName: VRBuilder.Core.Chapter.EntityData.Steps
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Chapter.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Steps
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Chapter.cs
    startLine: 44
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nAll steps of the chapter.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public IList<IStep> Steps { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{VRBuilder.Core.IStep}
    content.vb: >-
      <DataMember>

      Public Property Steps As IList(Of IStep)
  overload: VRBuilder.Core.Chapter.EntityData.Steps*
  implements:
  - VRBuilder.Core.IChapterData.Steps
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Chapter.EntityData.GetChildren
  commentId: M:VRBuilder.Core.Chapter.EntityData.GetChildren
  id: GetChildren
  parent: VRBuilder.Core.Chapter.EntityData
  langs:
  - csharp
  - vb
  name: GetChildren()
  nameWithType: Chapter.EntityData.GetChildren()
  fullName: VRBuilder.Core.Chapter.EntityData.GetChildren()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Chapter.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetChildren
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Chapter.cs
    startLine: 48
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: public override IEnumerable<IStep> GetChildren()
    return:
      type: System.Collections.Generic.IEnumerable{VRBuilder.Core.IStep}
    content.vb: Public Overrides Function GetChildren As IEnumerable(Of IStep)
  overridden: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStep}.GetChildren
  overload: VRBuilder.Core.Chapter.EntityData.GetChildren*
  implements:
  - VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IStep}.GetChildren
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Core.Chapter.EntityData.SetName(System.String)
  commentId: M:VRBuilder.Core.Chapter.EntityData.SetName(System.String)
  id: SetName(System.String)
  parent: VRBuilder.Core.Chapter.EntityData
  langs:
  - csharp
  - vb
  name: SetName(String)
  nameWithType: Chapter.EntityData.SetName(String)
  fullName: VRBuilder.Core.Chapter.EntityData.SetName(System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Chapter.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Chapter.cs
    startLine: 54
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: public void SetName(string name)
    parameters:
    - id: name
      type: System.String
    content.vb: Public Sub SetName(name As String)
  overload: VRBuilder.Core.Chapter.EntityData.SetName*
  implements:
  - VRBuilder.Core.IRenameableData.SetName(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Chapter.EntityData.Mode
  commentId: P:VRBuilder.Core.Chapter.EntityData.Mode
  id: Mode
  parent: VRBuilder.Core.Chapter.EntityData
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: Chapter.EntityData.Mode
  fullName: VRBuilder.Core.Chapter.EntityData.Mode
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Chapter.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Mode
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Chapter.cs
    startLine: 60
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: public IMode Mode { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.Configuration.Modes.IMode
    content.vb: Public Property Mode As IMode
  overload: VRBuilder.Core.Chapter.EntityData.Mode*
  implements:
  - VRBuilder.Core.Configuration.Modes.IModeData.Mode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Chapter.EntityData.Current
  commentId: P:VRBuilder.Core.Chapter.EntityData.Current
  id: Current
  parent: VRBuilder.Core.Chapter.EntityData
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: Chapter.EntityData.Current
  fullName: VRBuilder.Core.Chapter.EntityData.Current
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Chapter.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Current
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Chapter.cs
    startLine: 63
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: >-
      [IgnoreDataMember]

      public IStep Current { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.IStep
    content.vb: >-
      <IgnoreDataMember>

      Public Property Current As IStep
  overload: VRBuilder.Core.Chapter.EntityData.Current*
  implements:
  - VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IStep}.Current
  attributes:
  - type: System.Runtime.Serialization.IgnoreDataMemberAttribute
    ctor: System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Chapter.EntityData.VRBuilder#Core#EntityOwners#IEntitySequenceData#Current
  commentId: P:VRBuilder.Core.Chapter.EntityData.VRBuilder#Core#EntityOwners#IEntitySequenceData#Current
  id: VRBuilder#Core#EntityOwners#IEntitySequenceData#Current
  isEii: true
  parent: VRBuilder.Core.Chapter.EntityData
  langs:
  - csharp
  - vb
  name: IEntitySequenceData.Current
  nameWithType: Chapter.EntityData.IEntitySequenceData.Current
  fullName: VRBuilder.Core.Chapter.EntityData.VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Chapter.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Chapter.cs
    startLine: 67
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: IEntity IEntitySequenceData.Current { get; }
    parameters: []
    return:
      type: VRBuilder.Core.IEntity
    content.vb: ReadOnly WriteOnly Property VRBuilder.Core.EntityOwners.IEntitySequenceData.Current As IEntity Implements IEntitySequenceData.Current
  overload: VRBuilder.Core.Chapter.EntityData.VRBuilder#Core#EntityOwners#IEntitySequenceData#Current*
  implements:
  - VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
  nameWithType.vb: Chapter.EntityData.VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
references:
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStep}
  commentId: T:VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStep}
  parent: VRBuilder.Core.EntityOwners
  definition: VRBuilder.Core.EntityOwners.EntityCollectionData`1
  name: EntityCollectionData<IStep>
  nameWithType: EntityCollectionData<IStep>
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IStep>
  nameWithType.vb: EntityCollectionData(Of IStep)
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of VRBuilder.Core.IStep)
  name.vb: EntityCollectionData(Of IStep)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1
    name: EntityCollectionData
    nameWithType: EntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1
    name: EntityCollectionData
    nameWithType: EntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.IChapterData
  commentId: T:VRBuilder.Core.IChapterData
  parent: VRBuilder.Core
  name: IChapterData
  nameWithType: IChapterData
  fullName: VRBuilder.Core.IChapterData
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode{VRBuilder.Core.IStep}
  commentId: T:VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode{VRBuilder.Core.IStep}
  parent: VRBuilder.Core.EntityOwners
  definition: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode`1
  name: IEntitySequenceDataWithMode<IStep>
  nameWithType: IEntitySequenceDataWithMode<IStep>
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode<VRBuilder.Core.IStep>
  nameWithType.vb: IEntitySequenceDataWithMode(Of IStep)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode(Of VRBuilder.Core.IStep)
  name.vb: IEntitySequenceDataWithMode(Of IStep)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode`1
    name: IEntitySequenceDataWithMode
    nameWithType: IEntitySequenceDataWithMode
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode`1
    name: IEntitySequenceDataWithMode
    nameWithType: IEntitySequenceDataWithMode
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IStep}
  commentId: T:VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IStep}
  parent: VRBuilder.Core.EntityOwners
  definition: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
  name: IEntitySequenceData<IStep>
  nameWithType: IEntitySequenceData<IStep>
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData<VRBuilder.Core.IStep>
  nameWithType.vb: IEntitySequenceData(Of IStep)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData(Of VRBuilder.Core.IStep)
  name.vb: IEntitySequenceData(Of IStep)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
    name: IEntitySequenceData
    nameWithType: IEntitySequenceData
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
    name: IEntitySequenceData
    nameWithType: IEntitySequenceData
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IStep}
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IStep}
  parent: VRBuilder.Core.EntityOwners
  definition: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  name: IEntityCollectionData<IStep>
  nameWithType: IEntityCollectionData<IStep>
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<VRBuilder.Core.IStep>
  nameWithType.vb: IEntityCollectionData(Of IStep)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of VRBuilder.Core.IStep)
  name.vb: IEntityCollectionData(Of IStep)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData
  parent: VRBuilder.Core.EntityOwners
  name: IEntityCollectionData
  nameWithType: IEntityCollectionData
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData
  commentId: T:VRBuilder.Core.EntityOwners.IEntitySequenceData
  parent: VRBuilder.Core.EntityOwners
  name: IEntitySequenceData
  nameWithType: IEntitySequenceData
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
- uid: VRBuilder.Core.Configuration.Modes.IModeData
  commentId: T:VRBuilder.Core.Configuration.Modes.IModeData
  parent: VRBuilder.Core.Configuration.Modes
  name: IModeData
  nameWithType: IModeData
  fullName: VRBuilder.Core.Configuration.Modes.IModeData
- uid: VRBuilder.Core.IRenameableData
  commentId: T:VRBuilder.Core.IRenameableData
  parent: VRBuilder.Core
  name: IRenameableData
  nameWithType: IRenameableData
  fullName: VRBuilder.Core.IRenameableData
- uid: VRBuilder.Core.INamedData
  commentId: T:VRBuilder.Core.INamedData
  parent: VRBuilder.Core
  name: INamedData
  nameWithType: INamedData
  fullName: VRBuilder.Core.INamedData
- uid: VRBuilder.Core.IData
  commentId: T:VRBuilder.Core.IData
  parent: VRBuilder.Core
  name: IData
  nameWithType: IData
  fullName: VRBuilder.Core.IData
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStep}.Metadata
  commentId: P:VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStep}.Metadata
  parent: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStep}
  definition: VRBuilder.Core.EntityOwners.EntityCollectionData`1.Metadata
  name: Metadata
  nameWithType: EntityCollectionData<IStep>.Metadata
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IStep>.Metadata
  nameWithType.vb: EntityCollectionData(Of IStep).Metadata
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of VRBuilder.Core.IStep).Metadata
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStep}.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStep}.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  parent: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStep}
  definition: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  name: IEntityCollectionData.GetChildren()
  nameWithType: EntityCollectionData<IStep>.IEntityCollectionData.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IStep>.VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  nameWithType.vb: EntityCollectionData(Of IStep).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of VRBuilder.Core.IStep).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  name.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
    name: IEntityCollectionData.GetChildren
    nameWithType: EntityCollectionData<IStep>.IEntityCollectionData.GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IStep>.VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
    name: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
    nameWithType: EntityCollectionData(Of IStep).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData(Of VRBuilder.Core.IStep).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1
  commentId: T:VRBuilder.Core.EntityOwners.EntityCollectionData`1
  name: EntityCollectionData<TEntity>
  nameWithType: EntityCollectionData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>
  nameWithType.vb: EntityCollectionData(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity)
  name.vb: EntityCollectionData(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1
    name: EntityCollectionData
    nameWithType: EntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1
    name: EntityCollectionData
    nameWithType: EntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners
  commentId: N:VRBuilder.Core.EntityOwners
  name: VRBuilder.Core.EntityOwners
  nameWithType: VRBuilder.Core.EntityOwners
  fullName: VRBuilder.Core.EntityOwners
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode`1
  commentId: T:VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode`1
  name: IEntitySequenceDataWithMode<TEntity>
  nameWithType: IEntitySequenceDataWithMode<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode<TEntity>
  nameWithType.vb: IEntitySequenceDataWithMode(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode(Of TEntity)
  name.vb: IEntitySequenceDataWithMode(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode`1
    name: IEntitySequenceDataWithMode
    nameWithType: IEntitySequenceDataWithMode
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode`1
    name: IEntitySequenceDataWithMode
    nameWithType: IEntitySequenceDataWithMode
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
  commentId: T:VRBuilder.Core.EntityOwners.IEntitySequenceData`1
  name: IEntitySequenceData<TEntity>
  nameWithType: IEntitySequenceData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>
  nameWithType.vb: IEntitySequenceData(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData(Of TEntity)
  name.vb: IEntitySequenceData(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
    name: IEntitySequenceData
    nameWithType: IEntitySequenceData
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1
    name: IEntitySequenceData
    nameWithType: IEntitySequenceData
    fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  name: IEntityCollectionData<TEntity>
  nameWithType: IEntityCollectionData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>
  nameWithType.vb: IEntityCollectionData(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity)
  name.vb: IEntityCollectionData(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Configuration.Modes
  commentId: N:VRBuilder.Core.Configuration.Modes
  name: VRBuilder.Core.Configuration.Modes
  nameWithType: VRBuilder.Core.Configuration.Modes
  fullName: VRBuilder.Core.Configuration.Modes
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.Metadata
  commentId: P:VRBuilder.Core.EntityOwners.EntityCollectionData`1.Metadata
  name: Metadata
  nameWithType: EntityCollectionData<TEntity>.Metadata
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.Metadata
  nameWithType.vb: EntityCollectionData(Of TEntity).Metadata
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).Metadata
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  name: IEntityCollectionData.GetChildren()
  nameWithType: EntityCollectionData<TEntity>.IEntityCollectionData.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  nameWithType.vb: EntityCollectionData(Of TEntity).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  name.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
    name: IEntityCollectionData.GetChildren
    nameWithType: EntityCollectionData<TEntity>.IEntityCollectionData.GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
    name: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
    nameWithType: EntityCollectionData(Of TEntity).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Chapter.EntityData.Name*
  commentId: Overload:VRBuilder.Core.Chapter.EntityData.Name
  name: Name
  nameWithType: Chapter.EntityData.Name
  fullName: VRBuilder.Core.Chapter.EntityData.Name
- uid: VRBuilder.Core.INamedData.Name
  commentId: P:VRBuilder.Core.INamedData.Name
  parent: VRBuilder.Core.INamedData
  name: Name
  nameWithType: INamedData.Name
  fullName: VRBuilder.Core.INamedData.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Core.Chapter.EntityData.FirstStep*
  commentId: Overload:VRBuilder.Core.Chapter.EntityData.FirstStep
  name: FirstStep
  nameWithType: Chapter.EntityData.FirstStep
  fullName: VRBuilder.Core.Chapter.EntityData.FirstStep
- uid: VRBuilder.Core.IChapterData.FirstStep
  commentId: P:VRBuilder.Core.IChapterData.FirstStep
  parent: VRBuilder.Core.IChapterData
  name: FirstStep
  nameWithType: IChapterData.FirstStep
  fullName: VRBuilder.Core.IChapterData.FirstStep
- uid: VRBuilder.Core.IStep
  commentId: T:VRBuilder.Core.IStep
  parent: VRBuilder.Core
  name: IStep
  nameWithType: IStep
  fullName: VRBuilder.Core.IStep
- uid: VRBuilder.Core.Chapter.EntityData.Steps*
  commentId: Overload:VRBuilder.Core.Chapter.EntityData.Steps
  name: Steps
  nameWithType: Chapter.EntityData.Steps
  fullName: VRBuilder.Core.Chapter.EntityData.Steps
- uid: VRBuilder.Core.IChapterData.Steps
  commentId: P:VRBuilder.Core.IChapterData.Steps
  parent: VRBuilder.Core.IChapterData
  name: Steps
  nameWithType: IChapterData.Steps
  fullName: VRBuilder.Core.IChapterData.Steps
- uid: System.Collections.Generic.IList{VRBuilder.Core.IStep}
  commentId: T:System.Collections.Generic.IList{VRBuilder.Core.IStep}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IStep>
  nameWithType: IList<IStep>
  fullName: System.Collections.Generic.IList<VRBuilder.Core.IStep>
  nameWithType.vb: IList(Of IStep)
  fullName.vb: System.Collections.Generic.IList(Of VRBuilder.Core.IStep)
  name.vb: IList(Of IStep)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStep}.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStep}.GetChildren
  parent: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IStep}
  definition: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: EntityCollectionData<IStep>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IStep>.GetChildren()
  nameWithType.vb: EntityCollectionData(Of IStep).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of VRBuilder.Core.IStep).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: EntityCollectionData<IStep>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IStep>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: EntityCollectionData(Of IStep).GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData(Of VRBuilder.Core.IStep).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Chapter.EntityData.GetChildren*
  commentId: Overload:VRBuilder.Core.Chapter.EntityData.GetChildren
  name: GetChildren
  nameWithType: Chapter.EntityData.GetChildren
  fullName: VRBuilder.Core.Chapter.EntityData.GetChildren
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IStep}.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IStep}.GetChildren
  parent: VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IStep}
  definition: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: IEntityCollectionData<IStep>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<VRBuilder.Core.IStep>.GetChildren()
  nameWithType.vb: IEntityCollectionData(Of IStep).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of VRBuilder.Core.IStep).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData<IStep>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<VRBuilder.Core.IStep>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData(Of IStep).GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of VRBuilder.Core.IStep).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VRBuilder.Core.IStep}
  commentId: T:System.Collections.Generic.IEnumerable{VRBuilder.Core.IStep}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IStep>
  nameWithType: IEnumerable<IStep>
  fullName: System.Collections.Generic.IEnumerable<VRBuilder.Core.IStep>
  nameWithType.vb: IEnumerable(Of IStep)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VRBuilder.Core.IStep)
  name.vb: IEnumerable(Of IStep)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: EntityCollectionData<TEntity>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.GetChildren()
  nameWithType.vb: EntityCollectionData(Of TEntity).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: EntityCollectionData<TEntity>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: EntityCollectionData(Of TEntity).GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: IEntityCollectionData<TEntity>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren()
  nameWithType.vb: IEntityCollectionData(Of TEntity).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData<TEntity>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: IEntityCollectionData(Of TEntity).GetChildren
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Chapter.EntityData.SetName*
  commentId: Overload:VRBuilder.Core.Chapter.EntityData.SetName
  name: SetName
  nameWithType: Chapter.EntityData.SetName
  fullName: VRBuilder.Core.Chapter.EntityData.SetName
- uid: VRBuilder.Core.IRenameableData.SetName(System.String)
  commentId: M:VRBuilder.Core.IRenameableData.SetName(System.String)
  parent: VRBuilder.Core.IRenameableData
  isExternal: true
  name: SetName(String)
  nameWithType: IRenameableData.SetName(String)
  fullName: VRBuilder.Core.IRenameableData.SetName(System.String)
  spec.csharp:
  - uid: VRBuilder.Core.IRenameableData.SetName(System.String)
    name: SetName
    nameWithType: IRenameableData.SetName
    fullName: VRBuilder.Core.IRenameableData.SetName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IRenameableData.SetName(System.String)
    name: SetName
    nameWithType: IRenameableData.SetName
    fullName: VRBuilder.Core.IRenameableData.SetName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Chapter.EntityData.Mode*
  commentId: Overload:VRBuilder.Core.Chapter.EntityData.Mode
  name: Mode
  nameWithType: Chapter.EntityData.Mode
  fullName: VRBuilder.Core.Chapter.EntityData.Mode
- uid: VRBuilder.Core.Configuration.Modes.IModeData.Mode
  commentId: P:VRBuilder.Core.Configuration.Modes.IModeData.Mode
  parent: VRBuilder.Core.Configuration.Modes.IModeData
  name: Mode
  nameWithType: IModeData.Mode
  fullName: VRBuilder.Core.Configuration.Modes.IModeData.Mode
- uid: VRBuilder.Core.Configuration.Modes.IMode
  commentId: T:VRBuilder.Core.Configuration.Modes.IMode
  parent: VRBuilder.Core.Configuration.Modes
  name: IMode
  nameWithType: IMode
  fullName: VRBuilder.Core.Configuration.Modes.IMode
- uid: VRBuilder.Core.Chapter.EntityData.Current*
  commentId: Overload:VRBuilder.Core.Chapter.EntityData.Current
  name: Current
  nameWithType: Chapter.EntityData.Current
  fullName: VRBuilder.Core.Chapter.EntityData.Current
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IStep}.Current
  commentId: P:VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IStep}.Current
  parent: VRBuilder.Core.EntityOwners.IEntitySequenceData{VRBuilder.Core.IStep}
  definition: VRBuilder.Core.EntityOwners.IEntitySequenceData`1.Current
  name: Current
  nameWithType: IEntitySequenceData<IStep>.Current
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData<VRBuilder.Core.IStep>.Current
  nameWithType.vb: IEntitySequenceData(Of IStep).Current
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData(Of VRBuilder.Core.IStep).Current
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData`1.Current
  commentId: P:VRBuilder.Core.EntityOwners.IEntitySequenceData`1.Current
  name: Current
  nameWithType: IEntitySequenceData<TEntity>.Current
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>.Current
  nameWithType.vb: IEntitySequenceData(Of TEntity).Current
  fullName.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData(Of TEntity).Current
- uid: VRBuilder.Core.Chapter.EntityData.VRBuilder#Core#EntityOwners#IEntitySequenceData#Current*
  commentId: Overload:VRBuilder.Core.Chapter.EntityData.VRBuilder#Core#EntityOwners#IEntitySequenceData#Current
  name: IEntitySequenceData.Current
  nameWithType: Chapter.EntityData.IEntitySequenceData.Current
  fullName: VRBuilder.Core.Chapter.EntityData.VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
  nameWithType.vb: Chapter.EntityData.VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
  name.vb: VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
- uid: VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
  commentId: P:VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
  parent: VRBuilder.Core.EntityOwners.IEntitySequenceData
  name: Current
  nameWithType: IEntitySequenceData.Current
  fullName: VRBuilder.Core.EntityOwners.IEntitySequenceData.Current
- uid: VRBuilder.Core.IEntity
  commentId: T:VRBuilder.Core.IEntity
  parent: VRBuilder.Core
  name: IEntity
  nameWithType: IEntity
  fullName: VRBuilder.Core.IEntity
