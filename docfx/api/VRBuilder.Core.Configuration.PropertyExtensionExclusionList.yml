### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Configuration.PropertyExtensionExclusionList
  commentId: T:VRBuilder.Core.Configuration.PropertyExtensionExclusionList
  id: PropertyExtensionExclusionList
  parent: VRBuilder.Core.Configuration
  children:
  - VRBuilder.Core.Configuration.PropertyExtensionExclusionList.AssemblyFullName
  - VRBuilder.Core.Configuration.PropertyExtensionExclusionList.DisallowedExtensionTypes
  langs:
  - csharp
  - vb
  name: PropertyExtensionExclusionList
  nameWithType: PropertyExtensionExclusionList
  fullName: VRBuilder.Core.Configuration.PropertyExtensionExclusionList
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Configuration/PropertyExtensionExclusionList.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: PropertyExtensionExclusionList
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/PropertyExtensionExclusionList.cs
    startLine: 7
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  syntax:
    content: 'public class PropertyExtensionExclusionList : MonoBehaviour'
    content.vb: >-
      Public Class PropertyExtensionExclusionList

          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.Configuration.PropertyExtensionExclusionList.AssemblyFullName
  commentId: P:VRBuilder.Core.Configuration.PropertyExtensionExclusionList.AssemblyFullName
  id: AssemblyFullName
  parent: VRBuilder.Core.Configuration.PropertyExtensionExclusionList
  langs:
  - csharp
  - vb
  name: AssemblyFullName
  nameWithType: PropertyExtensionExclusionList.AssemblyFullName
  fullName: VRBuilder.Core.Configuration.PropertyExtensionExclusionList.AssemblyFullName
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Configuration/PropertyExtensionExclusionList.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AssemblyFullName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/PropertyExtensionExclusionList.cs
    startLine: 20
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: "\nFull name of the assembly we want to exclude the types from.\n"
  example: []
  syntax:
    content: public string AssemblyFullName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property AssemblyFullName As String
  overload: VRBuilder.Core.Configuration.PropertyExtensionExclusionList.AssemblyFullName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.Configuration.PropertyExtensionExclusionList.DisallowedExtensionTypes
  commentId: P:VRBuilder.Core.Configuration.PropertyExtensionExclusionList.DisallowedExtensionTypes
  id: DisallowedExtensionTypes
  parent: VRBuilder.Core.Configuration.PropertyExtensionExclusionList
  langs:
  - csharp
  - vb
  name: DisallowedExtensionTypes
  nameWithType: PropertyExtensionExclusionList.DisallowedExtensionTypes
  fullName: VRBuilder.Core.Configuration.PropertyExtensionExclusionList.DisallowedExtensionTypes
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Configuration/PropertyExtensionExclusionList.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DisallowedExtensionTypes
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Configuration/PropertyExtensionExclusionList.cs
    startLine: 25
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Configuration
  summary: "\nList of excluded extension types.\n"
  example: []
  syntax:
    content: public IEnumerable<Type> DisallowedExtensionTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
    content.vb: Public ReadOnly Property DisallowedExtensionTypes As IEnumerable(Of Type)
  overload: VRBuilder.Core.Configuration.PropertyExtensionExclusionList.DisallowedExtensionTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: VRBuilder.Core.Configuration
  commentId: N:VRBuilder.Core.Configuration
  name: VRBuilder.Core.Configuration
  nameWithType: VRBuilder.Core.Configuration
  fullName: VRBuilder.Core.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Configuration.PropertyExtensionExclusionList.AssemblyFullName*
  commentId: Overload:VRBuilder.Core.Configuration.PropertyExtensionExclusionList.AssemblyFullName
  name: AssemblyFullName
  nameWithType: PropertyExtensionExclusionList.AssemblyFullName
  fullName: VRBuilder.Core.Configuration.PropertyExtensionExclusionList.AssemblyFullName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Core.Configuration.PropertyExtensionExclusionList.DisallowedExtensionTypes*
  commentId: Overload:VRBuilder.Core.Configuration.PropertyExtensionExclusionList.DisallowedExtensionTypes
  name: DisallowedExtensionTypes
  nameWithType: PropertyExtensionExclusionList.DisallowedExtensionTypes
  fullName: VRBuilder.Core.Configuration.PropertyExtensionExclusionList.DisallowedExtensionTypes
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
