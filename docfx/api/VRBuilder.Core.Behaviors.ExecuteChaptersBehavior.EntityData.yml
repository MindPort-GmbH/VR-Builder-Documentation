### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData
  commentId: T:VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData
  id: ExecuteChaptersBehavior.EntityData
  parent: VRBuilder.Core.Behaviors
  children:
  - VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.Chapters
  - VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.GetChildren
  - VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.Name
  langs:
  - csharp
  - vb
  name: ExecuteChaptersBehavior.EntityData
  nameWithType: ExecuteChaptersBehavior.EntityData
  fullName: VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData
  type: Class
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ExecuteChaptersBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EntityData
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ExecuteChaptersBehavior.cs
    startLine: 20
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  summary: "\nExecute chapters behavior data.\n"
  example: []
  syntax:
    content: >-
      [DisplayName("Execute Chapters")]

      [DataContract(IsReference = true)]

      public class EntityData : EntityCollectionData<IChapter>, IEntityCollectionData<IChapter>, IEntityCollectionData, IBehaviorData, INamedData, IData
    content.vb: >-
      <DisplayName("Execute Chapters")>

      <DataContract(IsReference:=True)>

      Public Class EntityData
          Inherits EntityCollectionData(Of IChapter)
          Implements IEntityCollectionData(Of IChapter), IEntityCollectionData, IBehaviorData, INamedData, IData
  inheritance:
  - System.Object
  - VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IChapter}
  implements:
  - VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IChapter}
  - VRBuilder.Core.EntityOwners.IEntityCollectionData
  - VRBuilder.Core.Behaviors.IBehaviorData
  - VRBuilder.Core.INamedData
  - VRBuilder.Core.IData
  inheritedMembers:
  - VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IChapter}.Metadata
  - VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IChapter}.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Execute Chapters
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.Chapters
  commentId: P:VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.Chapters
  id: Chapters
  parent: VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData
  langs:
  - csharp
  - vb
  name: Chapters
  nameWithType: ExecuteChaptersBehavior.EntityData.Chapters
  fullName: VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.Chapters
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ExecuteChaptersBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Chapters
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ExecuteChaptersBehavior.cs
    startLine: 24
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  syntax:
    content: >-
      [DataMember]

      public List<IChapter> Chapters { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{VRBuilder.Core.IChapter}
    content.vb: >-
      <DataMember>

      Public Property Chapters As List(Of IChapter)
  overload: VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.Chapters*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.Name
  commentId: P:VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.Name
  id: Name
  parent: VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ExecuteChaptersBehavior.EntityData.Name
  fullName: VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.Name
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ExecuteChaptersBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Name
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ExecuteChaptersBehavior.cs
    startLine: 27
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  syntax:
    content: >-
      [IgnoreDataMember]

      public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <IgnoreDataMember>

      Public ReadOnly Property Name As String
  overload: VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.Name*
  implements:
  - VRBuilder.Core.INamedData.Name
  attributes:
  - type: System.Runtime.Serialization.IgnoreDataMemberAttribute
    ctor: System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.GetChildren
  commentId: M:VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.GetChildren
  id: GetChildren
  parent: VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData
  langs:
  - csharp
  - vb
  name: GetChildren()
  nameWithType: ExecuteChaptersBehavior.EntityData.GetChildren()
  fullName: VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.GetChildren()
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ExecuteChaptersBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetChildren
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/ExecuteChaptersBehavior.cs
    startLine: 30
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  syntax:
    content: public override IEnumerable<IChapter> GetChildren()
    return:
      type: System.Collections.Generic.IEnumerable{VRBuilder.Core.IChapter}
    content.vb: Public Overrides Function GetChildren As IEnumerable(Of IChapter)
  overridden: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IChapter}.GetChildren
  overload: VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.GetChildren*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VRBuilder.Core.Behaviors
  commentId: N:VRBuilder.Core.Behaviors
  name: VRBuilder.Core.Behaviors
  nameWithType: VRBuilder.Core.Behaviors
  fullName: VRBuilder.Core.Behaviors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IChapter}
  commentId: T:VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IChapter}
  parent: VRBuilder.Core.EntityOwners
  definition: VRBuilder.Core.EntityOwners.EntityCollectionData`1
  name: EntityCollectionData<IChapter>
  nameWithType: EntityCollectionData<IChapter>
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IChapter>
  nameWithType.vb: EntityCollectionData(Of IChapter)
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of VRBuilder.Core.IChapter)
  name.vb: EntityCollectionData(Of IChapter)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1
    name: EntityCollectionData
    nameWithType: EntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1
    name: EntityCollectionData
    nameWithType: EntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IChapter}
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData{VRBuilder.Core.IChapter}
  parent: VRBuilder.Core.EntityOwners
  definition: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  name: IEntityCollectionData<IChapter>
  nameWithType: IEntityCollectionData<IChapter>
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<VRBuilder.Core.IChapter>
  nameWithType.vb: IEntityCollectionData(Of IChapter)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of VRBuilder.Core.IChapter)
  name.vb: IEntityCollectionData(Of IChapter)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData
  parent: VRBuilder.Core.EntityOwners
  name: IEntityCollectionData
  nameWithType: IEntityCollectionData
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
- uid: VRBuilder.Core.Behaviors.IBehaviorData
  commentId: T:VRBuilder.Core.Behaviors.IBehaviorData
  parent: VRBuilder.Core.Behaviors
  name: IBehaviorData
  nameWithType: IBehaviorData
  fullName: VRBuilder.Core.Behaviors.IBehaviorData
- uid: VRBuilder.Core.INamedData
  commentId: T:VRBuilder.Core.INamedData
  parent: VRBuilder.Core
  name: INamedData
  nameWithType: INamedData
  fullName: VRBuilder.Core.INamedData
- uid: VRBuilder.Core.IData
  commentId: T:VRBuilder.Core.IData
  parent: VRBuilder.Core
  name: IData
  nameWithType: IData
  fullName: VRBuilder.Core.IData
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IChapter}.Metadata
  commentId: P:VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IChapter}.Metadata
  parent: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IChapter}
  definition: VRBuilder.Core.EntityOwners.EntityCollectionData`1.Metadata
  name: Metadata
  nameWithType: EntityCollectionData<IChapter>.Metadata
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IChapter>.Metadata
  nameWithType.vb: EntityCollectionData(Of IChapter).Metadata
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of VRBuilder.Core.IChapter).Metadata
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IChapter}.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IChapter}.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  parent: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IChapter}
  definition: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  name: IEntityCollectionData.GetChildren()
  nameWithType: EntityCollectionData<IChapter>.IEntityCollectionData.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IChapter>.VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  nameWithType.vb: EntityCollectionData(Of IChapter).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of VRBuilder.Core.IChapter).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  name.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
    name: IEntityCollectionData.GetChildren
    nameWithType: EntityCollectionData<IChapter>.IEntityCollectionData.GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IChapter>.VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
    name: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
    nameWithType: EntityCollectionData(Of IChapter).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData(Of VRBuilder.Core.IChapter).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1
  commentId: T:VRBuilder.Core.EntityOwners.EntityCollectionData`1
  name: EntityCollectionData<TEntity>
  nameWithType: EntityCollectionData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>
  nameWithType.vb: EntityCollectionData(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity)
  name.vb: EntityCollectionData(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1
    name: EntityCollectionData
    nameWithType: EntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1
    name: EntityCollectionData
    nameWithType: EntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners
  commentId: N:VRBuilder.Core.EntityOwners
  name: VRBuilder.Core.EntityOwners
  nameWithType: VRBuilder.Core.EntityOwners
  fullName: VRBuilder.Core.EntityOwners
- uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  commentId: T:VRBuilder.Core.EntityOwners.IEntityCollectionData`1
  name: IEntityCollectionData<TEntity>
  nameWithType: IEntityCollectionData<TEntity>
  fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData<TEntity>
  nameWithType.vb: IEntityCollectionData(Of TEntity)
  fullName.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData(Of TEntity)
  name.vb: IEntityCollectionData(Of TEntity)
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.IEntityCollectionData`1
    name: IEntityCollectionData
    nameWithType: IEntityCollectionData
    fullName: VRBuilder.Core.EntityOwners.IEntityCollectionData
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.Metadata
  commentId: P:VRBuilder.Core.EntityOwners.EntityCollectionData`1.Metadata
  name: Metadata
  nameWithType: EntityCollectionData<TEntity>.Metadata
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.Metadata
  nameWithType.vb: EntityCollectionData(Of TEntity).Metadata
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).Metadata
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
  name: IEntityCollectionData.GetChildren()
  nameWithType: EntityCollectionData<TEntity>.IEntityCollectionData.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  nameWithType.vb: EntityCollectionData(Of TEntity).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  name.vb: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
    name: IEntityCollectionData.GetChildren
    nameWithType: EntityCollectionData<TEntity>.IEntityCollectionData.GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.VRBuilder#Core#EntityOwners#IEntityCollectionData#GetChildren
    name: VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
    nameWithType: EntityCollectionData(Of TEntity).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).VRBuilder.Core.EntityOwners.IEntityCollectionData.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.Chapters*
  commentId: Overload:VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.Chapters
  name: Chapters
  nameWithType: ExecuteChaptersBehavior.EntityData.Chapters
  fullName: VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.Chapters
- uid: System.Collections.Generic.List{VRBuilder.Core.IChapter}
  commentId: T:System.Collections.Generic.List{VRBuilder.Core.IChapter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IChapter>
  nameWithType: List<IChapter>
  fullName: System.Collections.Generic.List<VRBuilder.Core.IChapter>
  nameWithType.vb: List(Of IChapter)
  fullName.vb: System.Collections.Generic.List(Of VRBuilder.Core.IChapter)
  name.vb: List(Of IChapter)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.Name*
  commentId: Overload:VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.Name
  name: Name
  nameWithType: ExecuteChaptersBehavior.EntityData.Name
  fullName: VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.Name
- uid: VRBuilder.Core.INamedData.Name
  commentId: P:VRBuilder.Core.INamedData.Name
  parent: VRBuilder.Core.INamedData
  name: Name
  nameWithType: INamedData.Name
  fullName: VRBuilder.Core.INamedData.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IChapter}.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IChapter}.GetChildren
  parent: VRBuilder.Core.EntityOwners.EntityCollectionData{VRBuilder.Core.IChapter}
  definition: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: EntityCollectionData<IChapter>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IChapter>.GetChildren()
  nameWithType.vb: EntityCollectionData(Of IChapter).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of VRBuilder.Core.IChapter).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: EntityCollectionData<IChapter>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IChapter>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: EntityCollectionData(Of IChapter).GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData(Of VRBuilder.Core.IChapter).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.GetChildren*
  commentId: Overload:VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.GetChildren
  name: GetChildren
  nameWithType: ExecuteChaptersBehavior.EntityData.GetChildren
  fullName: VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.GetChildren
- uid: System.Collections.Generic.IEnumerable{VRBuilder.Core.IChapter}
  commentId: T:System.Collections.Generic.IEnumerable{VRBuilder.Core.IChapter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IChapter>
  nameWithType: IEnumerable<IChapter>
  fullName: System.Collections.Generic.IEnumerable<VRBuilder.Core.IChapter>
  nameWithType.vb: IEnumerable(Of IChapter)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VRBuilder.Core.IChapter)
  name.vb: IEnumerable(Of IChapter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
  commentId: M:VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
  name: GetChildren()
  nameWithType: EntityCollectionData<TEntity>.GetChildren()
  fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.GetChildren()
  nameWithType.vb: EntityCollectionData(Of TEntity).GetChildren()
  fullName.vb: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).GetChildren()
  spec.csharp:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: EntityCollectionData<TEntity>.GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData<TEntity>.GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.EntityOwners.EntityCollectionData`1.GetChildren
    name: GetChildren
    nameWithType: EntityCollectionData(Of TEntity).GetChildren
    fullName: VRBuilder.Core.EntityOwners.EntityCollectionData(Of TEntity).GetChildren
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
