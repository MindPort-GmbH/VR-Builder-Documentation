### YamlMime:ManagedReference
items:
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator
  commentId: T:VRBuilder.BasicInteraction.BaseInteractionSimulator
  id: BaseInteractionSimulator
  parent: VRBuilder.BasicInteraction
  children:
  - VRBuilder.BasicInteraction.BaseInteractionSimulator.GetTeleportationBaseType
  - VRBuilder.BasicInteraction.BaseInteractionSimulator.Grab(VRBuilder.BasicInteraction.IInteractableObject)
  - VRBuilder.BasicInteraction.BaseInteractionSimulator.HoverSnapZone(VRBuilder.BasicInteraction.ISnapZone,VRBuilder.BasicInteraction.IInteractableObject)
  - VRBuilder.BasicInteraction.BaseInteractionSimulator.Instance
  - VRBuilder.BasicInteraction.BaseInteractionSimulator.IsColliderValid(GameObject,Collider)
  - VRBuilder.BasicInteraction.BaseInteractionSimulator.Release
  - VRBuilder.BasicInteraction.BaseInteractionSimulator.StopTouch
  - VRBuilder.BasicInteraction.BaseInteractionSimulator.StopUse(VRBuilder.BasicInteraction.IInteractableObject)
  - VRBuilder.BasicInteraction.BaseInteractionSimulator.Teleport(GameObject,GameObject,Vector3,Quaternion)
  - VRBuilder.BasicInteraction.BaseInteractionSimulator.Touch(VRBuilder.BasicInteraction.IInteractableObject)
  - VRBuilder.BasicInteraction.BaseInteractionSimulator.UnhoverSnapZone(VRBuilder.BasicInteraction.ISnapZone,VRBuilder.BasicInteraction.IInteractableObject)
  - VRBuilder.BasicInteraction.BaseInteractionSimulator.Use(VRBuilder.BasicInteraction.IInteractableObject)
  langs:
  - csharp
  - vb
  name: BaseInteractionSimulator
  nameWithType: BaseInteractionSimulator
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator
  type: Class
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: BaseInteractionSimulator
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
    startLine: 12
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction
  summary: "\nBase interaction simulator, only have one concrete simulator implementation in your project.\nIf no concrete implementation is found a <xref href=\"VRBuilder.BasicInteraction.BaseInteractionSimulatorDummy\" data-throw-if-not-resolved=\"false\"></xref> will be used.\n"
  example: []
  syntax:
    content: public abstract class BaseInteractionSimulator
    content.vb: Public MustInherit Class BaseInteractionSimulator
  inheritance:
  - System.Object
  derivedClasses:
  - VRBuilder.BasicInteraction.BaseInteractionSimulatorDummy
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.Instance
  commentId: P:VRBuilder.BasicInteraction.BaseInteractionSimulator.Instance
  id: Instance
  parent: VRBuilder.BasicInteraction.BaseInteractionSimulator
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: BaseInteractionSimulator.Instance
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.Instance
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Instance
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
    startLine: 19
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction
  summary: "\nCurrent instance of the interaction simulator.\n"
  example: []
  syntax:
    content: public static BaseInteractionSimulator Instance { get; }
    parameters: []
    return:
      type: VRBuilder.BasicInteraction.BaseInteractionSimulator
    content.vb: Public Shared ReadOnly Property Instance As BaseInteractionSimulator
  overload: VRBuilder.BasicInteraction.BaseInteractionSimulator.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.Touch(VRBuilder.BasicInteraction.IInteractableObject)
  commentId: M:VRBuilder.BasicInteraction.BaseInteractionSimulator.Touch(VRBuilder.BasicInteraction.IInteractableObject)
  id: Touch(VRBuilder.BasicInteraction.IInteractableObject)
  parent: VRBuilder.BasicInteraction.BaseInteractionSimulator
  langs:
  - csharp
  - vb
  name: Touch(IInteractableObject)
  nameWithType: BaseInteractionSimulator.Touch(IInteractableObject)
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.Touch(VRBuilder.BasicInteraction.IInteractableObject)
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Touch
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
    startLine: 51
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction
  summary: "\nSimulates touching the given object. Expected behavior is that the object stays touched until StopTouch is called.\n"
  example: []
  syntax:
    content: public abstract void Touch(IInteractableObject interactable)
    parameters:
    - id: interactable
      type: VRBuilder.BasicInteraction.IInteractableObject
    content.vb: Public MustOverride Sub Touch(interactable As IInteractableObject)
  overload: VRBuilder.BasicInteraction.BaseInteractionSimulator.Touch*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.StopTouch
  commentId: M:VRBuilder.BasicInteraction.BaseInteractionSimulator.StopTouch
  id: StopTouch
  parent: VRBuilder.BasicInteraction.BaseInteractionSimulator
  langs:
  - csharp
  - vb
  name: StopTouch()
  nameWithType: BaseInteractionSimulator.StopTouch()
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.StopTouch()
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StopTouch
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
    startLine: 56
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction
  summary: "\nSimulates stop touching the given object.\n"
  example: []
  syntax:
    content: public abstract void StopTouch()
    content.vb: Public MustOverride Sub StopTouch
  overload: VRBuilder.BasicInteraction.BaseInteractionSimulator.StopTouch*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.Grab(VRBuilder.BasicInteraction.IInteractableObject)
  commentId: M:VRBuilder.BasicInteraction.BaseInteractionSimulator.Grab(VRBuilder.BasicInteraction.IInteractableObject)
  id: Grab(VRBuilder.BasicInteraction.IInteractableObject)
  parent: VRBuilder.BasicInteraction.BaseInteractionSimulator
  langs:
  - csharp
  - vb
  name: Grab(IInteractableObject)
  nameWithType: BaseInteractionSimulator.Grab(IInteractableObject)
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.Grab(VRBuilder.BasicInteraction.IInteractableObject)
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Grab
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
    startLine: 61
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction
  summary: "\nSimulates grabbing the given object.\n"
  example: []
  syntax:
    content: public abstract void Grab(IInteractableObject interactable)
    parameters:
    - id: interactable
      type: VRBuilder.BasicInteraction.IInteractableObject
    content.vb: Public MustOverride Sub Grab(interactable As IInteractableObject)
  overload: VRBuilder.BasicInteraction.BaseInteractionSimulator.Grab*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.Release
  commentId: M:VRBuilder.BasicInteraction.BaseInteractionSimulator.Release
  id: Release
  parent: VRBuilder.BasicInteraction.BaseInteractionSimulator
  langs:
  - csharp
  - vb
  name: Release()
  nameWithType: BaseInteractionSimulator.Release()
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.Release()
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Release
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
    startLine: 66
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction
  summary: "\nSimulates releasing the given object.\n"
  example: []
  syntax:
    content: public abstract void Release()
    content.vb: Public MustOverride Sub Release
  overload: VRBuilder.BasicInteraction.BaseInteractionSimulator.Release*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.Use(VRBuilder.BasicInteraction.IInteractableObject)
  commentId: M:VRBuilder.BasicInteraction.BaseInteractionSimulator.Use(VRBuilder.BasicInteraction.IInteractableObject)
  id: Use(VRBuilder.BasicInteraction.IInteractableObject)
  parent: VRBuilder.BasicInteraction.BaseInteractionSimulator
  langs:
  - csharp
  - vb
  name: Use(IInteractableObject)
  nameWithType: BaseInteractionSimulator.Use(IInteractableObject)
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.Use(VRBuilder.BasicInteraction.IInteractableObject)
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Use
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
    startLine: 71
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction
  summary: "\nSimulates usage of the object and keeps using the given object until StopUse is called.\n"
  example: []
  syntax:
    content: public abstract void Use(IInteractableObject interactable)
    parameters:
    - id: interactable
      type: VRBuilder.BasicInteraction.IInteractableObject
    content.vb: Public MustOverride Sub Use(interactable As IInteractableObject)
  overload: VRBuilder.BasicInteraction.BaseInteractionSimulator.Use*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.StopUse(VRBuilder.BasicInteraction.IInteractableObject)
  commentId: M:VRBuilder.BasicInteraction.BaseInteractionSimulator.StopUse(VRBuilder.BasicInteraction.IInteractableObject)
  id: StopUse(VRBuilder.BasicInteraction.IInteractableObject)
  parent: VRBuilder.BasicInteraction.BaseInteractionSimulator
  langs:
  - csharp
  - vb
  name: StopUse(IInteractableObject)
  nameWithType: BaseInteractionSimulator.StopUse(IInteractableObject)
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.StopUse(VRBuilder.BasicInteraction.IInteractableObject)
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StopUse
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
    startLine: 76
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction
  summary: "\nSimulates stop using the given object.\n"
  example: []
  syntax:
    content: public abstract void StopUse(IInteractableObject interactable)
    parameters:
    - id: interactable
      type: VRBuilder.BasicInteraction.IInteractableObject
    content.vb: Public MustOverride Sub StopUse(interactable As IInteractableObject)
  overload: VRBuilder.BasicInteraction.BaseInteractionSimulator.StopUse*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.HoverSnapZone(VRBuilder.BasicInteraction.ISnapZone,VRBuilder.BasicInteraction.IInteractableObject)
  commentId: M:VRBuilder.BasicInteraction.BaseInteractionSimulator.HoverSnapZone(VRBuilder.BasicInteraction.ISnapZone,VRBuilder.BasicInteraction.IInteractableObject)
  id: HoverSnapZone(VRBuilder.BasicInteraction.ISnapZone,VRBuilder.BasicInteraction.IInteractableObject)
  parent: VRBuilder.BasicInteraction.BaseInteractionSimulator
  langs:
  - csharp
  - vb
  name: HoverSnapZone(ISnapZone, IInteractableObject)
  nameWithType: BaseInteractionSimulator.HoverSnapZone(ISnapZone, IInteractableObject)
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.HoverSnapZone(VRBuilder.BasicInteraction.ISnapZone, VRBuilder.BasicInteraction.IInteractableObject)
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: HoverSnapZone
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
    startLine: 81
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction
  summary: "\nSimulates a hover over a SnapZone.\n"
  example: []
  syntax:
    content: public abstract void HoverSnapZone(ISnapZone snapZone, IInteractableObject interactable)
    parameters:
    - id: snapZone
      type: VRBuilder.BasicInteraction.ISnapZone
    - id: interactable
      type: VRBuilder.BasicInteraction.IInteractableObject
    content.vb: Public MustOverride Sub HoverSnapZone(snapZone As ISnapZone, interactable As IInteractableObject)
  overload: VRBuilder.BasicInteraction.BaseInteractionSimulator.HoverSnapZone*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.UnhoverSnapZone(VRBuilder.BasicInteraction.ISnapZone,VRBuilder.BasicInteraction.IInteractableObject)
  commentId: M:VRBuilder.BasicInteraction.BaseInteractionSimulator.UnhoverSnapZone(VRBuilder.BasicInteraction.ISnapZone,VRBuilder.BasicInteraction.IInteractableObject)
  id: UnhoverSnapZone(VRBuilder.BasicInteraction.ISnapZone,VRBuilder.BasicInteraction.IInteractableObject)
  parent: VRBuilder.BasicInteraction.BaseInteractionSimulator
  langs:
  - csharp
  - vb
  name: UnhoverSnapZone(ISnapZone, IInteractableObject)
  nameWithType: BaseInteractionSimulator.UnhoverSnapZone(ISnapZone, IInteractableObject)
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.UnhoverSnapZone(VRBuilder.BasicInteraction.ISnapZone, VRBuilder.BasicInteraction.IInteractableObject)
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: UnhoverSnapZone
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
    startLine: 86
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction
  summary: "\nSimulates a unhover over a SnapZone.\n"
  example: []
  syntax:
    content: public abstract void UnhoverSnapZone(ISnapZone snapZone, IInteractableObject interactable)
    parameters:
    - id: snapZone
      type: VRBuilder.BasicInteraction.ISnapZone
    - id: interactable
      type: VRBuilder.BasicInteraction.IInteractableObject
    content.vb: Public MustOverride Sub UnhoverSnapZone(snapZone As ISnapZone, interactable As IInteractableObject)
  overload: VRBuilder.BasicInteraction.BaseInteractionSimulator.UnhoverSnapZone*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.GetTeleportationBaseType
  commentId: M:VRBuilder.BasicInteraction.BaseInteractionSimulator.GetTeleportationBaseType
  id: GetTeleportationBaseType
  parent: VRBuilder.BasicInteraction.BaseInteractionSimulator
  langs:
  - csharp
  - vb
  name: GetTeleportationBaseType()
  nameWithType: BaseInteractionSimulator.GetTeleportationBaseType()
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.GetTeleportationBaseType()
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetTeleportationBaseType
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
    startLine: 91
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction
  summary: "\nReturns the base class used for teleportation in your VR framework.\n"
  example: []
  syntax:
    content: public abstract Type GetTeleportationBaseType()
    return:
      type: System.Type
    content.vb: Public MustOverride Function GetTeleportationBaseType As Type
  overload: VRBuilder.BasicInteraction.BaseInteractionSimulator.GetTeleportationBaseType*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.Teleport(GameObject,GameObject,Vector3,Quaternion)
  commentId: M:VRBuilder.BasicInteraction.BaseInteractionSimulator.Teleport(GameObject,GameObject,Vector3,Quaternion)
  id: Teleport(GameObject,GameObject,Vector3,Quaternion)
  parent: VRBuilder.BasicInteraction.BaseInteractionSimulator
  langs:
  - csharp
  - vb
  name: Teleport(GameObject, GameObject, Vector3, Quaternion)
  nameWithType: BaseInteractionSimulator.Teleport(GameObject, GameObject, Vector3, Quaternion)
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.Teleport(GameObject, GameObject, Vector3, Quaternion)
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Teleport
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
    startLine: 100
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction
  summary: "\nExecutes a teleport action.\n"
  example: []
  syntax:
    content: public abstract void Teleport(GameObject rig, GameObject teleportationObject, Vector3 targetPosition, Quaternion targetRotation)
    parameters:
    - id: rig
      type: GameObject
      description: The rig object.
    - id: teleportationObject
      type: GameObject
      description: The object with the teleportation logic or used to teleport into.
    - id: targetPosition
      type: Vector3
      description: Desired position.
    - id: targetRotation
      type: Quaternion
      description: Desired rotation
    content.vb: Public MustOverride Sub Teleport(rig As GameObject, teleportationObject As GameObject, targetPosition As Vector3, targetRotation As Quaternion)
  overload: VRBuilder.BasicInteraction.BaseInteractionSimulator.Teleport*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.IsColliderValid(GameObject,Collider)
  commentId: M:VRBuilder.BasicInteraction.BaseInteractionSimulator.IsColliderValid(GameObject,Collider)
  id: IsColliderValid(GameObject,Collider)
  parent: VRBuilder.BasicInteraction.BaseInteractionSimulator
  langs:
  - csharp
  - vb
  name: IsColliderValid(GameObject, Collider)
  nameWithType: BaseInteractionSimulator.IsColliderValid(GameObject, Collider)
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.IsColliderValid(GameObject, Collider)
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsColliderValid
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Interaction/BaseInteractionSimulator.cs
    startLine: 108
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction
  summary: "\nTrue if the provided <code data-dev-comment-type=\"paramref\" class=\"paramref\">colliderToValidate</code> is an active collider of the <code data-dev-comment-type=\"paramref\" class=\"paramref\">teleportationObject</code>\n"
  example: []
  syntax:
    content: public abstract bool IsColliderValid(GameObject teleportationObject, Collider colliderToValidate)
    parameters:
    - id: teleportationObject
      type: GameObject
      description: The object with the teleportation logic or used to teleport into.
    - id: colliderToValidate
      type: Collider
      description: Collider to validate.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public MustOverride Function IsColliderValid(teleportationObject As GameObject, colliderToValidate As Collider) As Boolean
  overload: VRBuilder.BasicInteraction.BaseInteractionSimulator.IsColliderValid*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulatorDummy
  commentId: T:VRBuilder.BasicInteraction.BaseInteractionSimulatorDummy
  name: BaseInteractionSimulatorDummy
  nameWithType: BaseInteractionSimulatorDummy
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulatorDummy
- uid: VRBuilder.BasicInteraction
  commentId: N:VRBuilder.BasicInteraction
  name: VRBuilder.BasicInteraction
  nameWithType: VRBuilder.BasicInteraction
  fullName: VRBuilder.BasicInteraction
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.Instance*
  commentId: Overload:VRBuilder.BasicInteraction.BaseInteractionSimulator.Instance
  name: Instance
  nameWithType: BaseInteractionSimulator.Instance
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.Instance
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator
  commentId: T:VRBuilder.BasicInteraction.BaseInteractionSimulator
  parent: VRBuilder.BasicInteraction
  name: BaseInteractionSimulator
  nameWithType: BaseInteractionSimulator
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.Touch*
  commentId: Overload:VRBuilder.BasicInteraction.BaseInteractionSimulator.Touch
  name: Touch
  nameWithType: BaseInteractionSimulator.Touch
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.Touch
- uid: VRBuilder.BasicInteraction.IInteractableObject
  commentId: T:VRBuilder.BasicInteraction.IInteractableObject
  parent: VRBuilder.BasicInteraction
  name: IInteractableObject
  nameWithType: IInteractableObject
  fullName: VRBuilder.BasicInteraction.IInteractableObject
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.StopTouch*
  commentId: Overload:VRBuilder.BasicInteraction.BaseInteractionSimulator.StopTouch
  name: StopTouch
  nameWithType: BaseInteractionSimulator.StopTouch
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.StopTouch
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.Grab*
  commentId: Overload:VRBuilder.BasicInteraction.BaseInteractionSimulator.Grab
  name: Grab
  nameWithType: BaseInteractionSimulator.Grab
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.Grab
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.Release*
  commentId: Overload:VRBuilder.BasicInteraction.BaseInteractionSimulator.Release
  name: Release
  nameWithType: BaseInteractionSimulator.Release
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.Release
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.Use*
  commentId: Overload:VRBuilder.BasicInteraction.BaseInteractionSimulator.Use
  name: Use
  nameWithType: BaseInteractionSimulator.Use
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.Use
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.StopUse*
  commentId: Overload:VRBuilder.BasicInteraction.BaseInteractionSimulator.StopUse
  name: StopUse
  nameWithType: BaseInteractionSimulator.StopUse
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.StopUse
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.HoverSnapZone*
  commentId: Overload:VRBuilder.BasicInteraction.BaseInteractionSimulator.HoverSnapZone
  name: HoverSnapZone
  nameWithType: BaseInteractionSimulator.HoverSnapZone
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.HoverSnapZone
- uid: VRBuilder.BasicInteraction.ISnapZone
  commentId: T:VRBuilder.BasicInteraction.ISnapZone
  parent: VRBuilder.BasicInteraction
  name: ISnapZone
  nameWithType: ISnapZone
  fullName: VRBuilder.BasicInteraction.ISnapZone
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.UnhoverSnapZone*
  commentId: Overload:VRBuilder.BasicInteraction.BaseInteractionSimulator.UnhoverSnapZone
  name: UnhoverSnapZone
  nameWithType: BaseInteractionSimulator.UnhoverSnapZone
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.UnhoverSnapZone
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.GetTeleportationBaseType*
  commentId: Overload:VRBuilder.BasicInteraction.BaseInteractionSimulator.GetTeleportationBaseType
  name: GetTeleportationBaseType
  nameWithType: BaseInteractionSimulator.GetTeleportationBaseType
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.GetTeleportationBaseType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.Teleport*
  commentId: Overload:VRBuilder.BasicInteraction.BaseInteractionSimulator.Teleport
  name: Teleport
  nameWithType: BaseInteractionSimulator.Teleport
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.Teleport
- uid: GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
- uid: Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Vector3
- uid: Quaternion
  isExternal: true
  name: Quaternion
  nameWithType: Quaternion
  fullName: Quaternion
- uid: VRBuilder.BasicInteraction.BaseInteractionSimulator.IsColliderValid*
  commentId: Overload:VRBuilder.BasicInteraction.BaseInteractionSimulator.IsColliderValid
  name: IsColliderValid
  nameWithType: BaseInteractionSimulator.IsColliderValid
  fullName: VRBuilder.BasicInteraction.BaseInteractionSimulator.IsColliderValid
- uid: Collider
  isExternal: true
  name: Collider
  nameWithType: Collider
  fullName: Collider
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
