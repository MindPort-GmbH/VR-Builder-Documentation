### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.ProcessEventArgs
  commentId: T:VRBuilder.Core.ProcessEventArgs
  id: ProcessEventArgs
  parent: VRBuilder.Core
  children:
  - VRBuilder.Core.ProcessEventArgs.#ctor(VRBuilder.Core.IProcess)
  - VRBuilder.Core.ProcessEventArgs.Chapter
  - VRBuilder.Core.ProcessEventArgs.Process
  - VRBuilder.Core.ProcessEventArgs.Step
  langs:
  - csharp
  - vb
  name: ProcessEventArgs
  nameWithType: ProcessEventArgs
  fullName: VRBuilder.Core.ProcessEventArgs
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/ProcessEventArgs.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessEventArgs
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessEventArgs.cs
    startLine: 11
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nEventArgs for process events.\n"
  example: []
  syntax:
    content: 'public class ProcessEventArgs : EventArgs'
    content.vb: >-
      Public Class ProcessEventArgs

          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  derivedClasses:
  - VRBuilder.Core.FastForwardProcessEventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.ProcessEventArgs.Process
  commentId: F:VRBuilder.Core.ProcessEventArgs.Process
  id: Process
  parent: VRBuilder.Core.ProcessEventArgs
  langs:
  - csharp
  - vb
  name: Process
  nameWithType: ProcessEventArgs.Process
  fullName: VRBuilder.Core.ProcessEventArgs.Process
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/ProcessEventArgs.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Process
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessEventArgs.cs
    startLine: 16
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nActive process.\n"
  example: []
  syntax:
    content: public readonly IProcess Process
    return:
      type: VRBuilder.Core.IProcess
    content.vb: Public ReadOnly Process As IProcess
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.ProcessEventArgs.Chapter
  commentId: F:VRBuilder.Core.ProcessEventArgs.Chapter
  id: Chapter
  parent: VRBuilder.Core.ProcessEventArgs
  langs:
  - csharp
  - vb
  name: Chapter
  nameWithType: ProcessEventArgs.Chapter
  fullName: VRBuilder.Core.ProcessEventArgs.Chapter
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/ProcessEventArgs.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Chapter
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessEventArgs.cs
    startLine: 21
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nActive Chapter.\n"
  example: []
  syntax:
    content: public readonly IChapter Chapter
    return:
      type: VRBuilder.Core.IChapter
    content.vb: Public ReadOnly Chapter As IChapter
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.ProcessEventArgs.Step
  commentId: F:VRBuilder.Core.ProcessEventArgs.Step
  id: Step
  parent: VRBuilder.Core.ProcessEventArgs
  langs:
  - csharp
  - vb
  name: Step
  nameWithType: ProcessEventArgs.Step
  fullName: VRBuilder.Core.ProcessEventArgs.Step
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/ProcessEventArgs.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Step
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessEventArgs.cs
    startLine: 26
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nActive Step.\n"
  example: []
  syntax:
    content: public readonly IStep Step
    return:
      type: VRBuilder.Core.IStep
    content.vb: Public ReadOnly Step As IStep
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.ProcessEventArgs.#ctor(VRBuilder.Core.IProcess)
  commentId: M:VRBuilder.Core.ProcessEventArgs.#ctor(VRBuilder.Core.IProcess)
  id: '#ctor(VRBuilder.Core.IProcess)'
  parent: VRBuilder.Core.ProcessEventArgs
  langs:
  - csharp
  - vb
  name: ProcessEventArgs(IProcess)
  nameWithType: ProcessEventArgs.ProcessEventArgs(IProcess)
  fullName: VRBuilder.Core.ProcessEventArgs.ProcessEventArgs(VRBuilder.Core.IProcess)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/ProcessEventArgs.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessEventArgs.cs
    startLine: 28
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  syntax:
    content: public ProcessEventArgs(IProcess process)
    parameters:
    - id: process
      type: VRBuilder.Core.IProcess
    content.vb: Public Sub New(process As IProcess)
  overload: VRBuilder.Core.ProcessEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.IProcess
  commentId: T:VRBuilder.Core.IProcess
  parent: VRBuilder.Core
  name: IProcess
  nameWithType: IProcess
  fullName: VRBuilder.Core.IProcess
- uid: VRBuilder.Core.IChapter
  commentId: T:VRBuilder.Core.IChapter
  parent: VRBuilder.Core
  name: IChapter
  nameWithType: IChapter
  fullName: VRBuilder.Core.IChapter
- uid: VRBuilder.Core.IStep
  commentId: T:VRBuilder.Core.IStep
  parent: VRBuilder.Core
  name: IStep
  nameWithType: IStep
  fullName: VRBuilder.Core.IStep
- uid: VRBuilder.Core.ProcessEventArgs.#ctor*
  commentId: Overload:VRBuilder.Core.ProcessEventArgs.#ctor
  name: ProcessEventArgs
  nameWithType: ProcessEventArgs.ProcessEventArgs
  fullName: VRBuilder.Core.ProcessEventArgs.ProcessEventArgs
