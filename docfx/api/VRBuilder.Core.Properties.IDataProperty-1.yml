### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Properties.IDataProperty`1
  commentId: T:VRBuilder.Core.Properties.IDataProperty`1
  id: IDataProperty`1
  parent: VRBuilder.Core.Properties
  children:
  - VRBuilder.Core.Properties.IDataProperty`1.GetValue
  - VRBuilder.Core.Properties.IDataProperty`1.OnValueChanged
  - VRBuilder.Core.Properties.IDataProperty`1.SetValue(`0)
  langs:
  - csharp
  - vb
  name: IDataProperty<T>
  nameWithType: IDataProperty<T>
  fullName: VRBuilder.Core.Properties.IDataProperty<T>
  type: Interface
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/IDataProperty.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IDataProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/IDataProperty.cs
    startLine: 8
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nInterface for a property that stores a single value.\n"
  example: []
  syntax:
    content: 'public interface IDataProperty<T> : IDataPropertyBase, ISceneObjectProperty'
    typeParameters:
    - id: T
      description: Type of the value to be stored.
    content.vb: >-
      Public Interface IDataProperty(Of T)

          Inherits IDataPropertyBase
  inheritedMembers:
  - VRBuilder.Core.Properties.IDataPropertyBase.OnValueReset
  - VRBuilder.Core.Properties.IDataPropertyBase.ResetValue
  - VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
  extensionMethods:
  - VRBuilder.Core.Properties.ISceneObjectProperty.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  nameWithType.vb: IDataProperty(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: VRBuilder.Core.Properties.IDataProperty(Of T)
  name.vb: IDataProperty(Of T)
- uid: VRBuilder.Core.Properties.IDataProperty`1.OnValueChanged
  commentId: P:VRBuilder.Core.Properties.IDataProperty`1.OnValueChanged
  id: OnValueChanged
  parent: VRBuilder.Core.Properties.IDataProperty`1
  langs:
  - csharp
  - vb
  name: OnValueChanged
  nameWithType: IDataProperty<T>.OnValueChanged
  fullName: VRBuilder.Core.Properties.IDataProperty<T>.OnValueChanged
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/IDataProperty.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnValueChanged
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/IDataProperty.cs
    startLine: 13
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nRaised when the stored value changes.\n"
  example: []
  syntax:
    content: UnityEvent<T> OnValueChanged { get; }
    parameters: []
    return:
      type: UnityEngine.Events.UnityEvent{{T}}
    content.vb: ReadOnly Property OnValueChanged As UnityEvent(Of T)
  overload: VRBuilder.Core.Properties.IDataProperty`1.OnValueChanged*
  nameWithType.vb: IDataProperty(Of T).OnValueChanged
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: VRBuilder.Core.Properties.IDataProperty(Of T).OnValueChanged
- uid: VRBuilder.Core.Properties.IDataProperty`1.GetValue
  commentId: M:VRBuilder.Core.Properties.IDataProperty`1.GetValue
  id: GetValue
  parent: VRBuilder.Core.Properties.IDataProperty`1
  langs:
  - csharp
  - vb
  name: GetValue()
  nameWithType: IDataProperty<T>.GetValue()
  fullName: VRBuilder.Core.Properties.IDataProperty<T>.GetValue()
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/IDataProperty.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetValue
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/IDataProperty.cs
    startLine: 18
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nReturns the value.\n"
  example: []
  syntax:
    content: T GetValue()
    return:
      type: '{T}'
    content.vb: Function GetValue As T
  overload: VRBuilder.Core.Properties.IDataProperty`1.GetValue*
  nameWithType.vb: IDataProperty(Of T).GetValue()
  fullName.vb: VRBuilder.Core.Properties.IDataProperty(Of T).GetValue()
- uid: VRBuilder.Core.Properties.IDataProperty`1.SetValue(`0)
  commentId: M:VRBuilder.Core.Properties.IDataProperty`1.SetValue(`0)
  id: SetValue(`0)
  parent: VRBuilder.Core.Properties.IDataProperty`1
  langs:
  - csharp
  - vb
  name: SetValue(T)
  nameWithType: IDataProperty<T>.SetValue(T)
  fullName: VRBuilder.Core.Properties.IDataProperty<T>.SetValue(T)
  type: Method
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/IDataProperty.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetValue
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Properties/Data/IDataProperty.cs
    startLine: 23
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nSets the value.\n"
  example: []
  syntax:
    content: void SetValue(T value)
    parameters:
    - id: value
      type: '{T}'
    content.vb: Sub SetValue(value As T)
  overload: VRBuilder.Core.Properties.IDataProperty`1.SetValue*
  nameWithType.vb: IDataProperty(Of T).SetValue(T)
  fullName.vb: VRBuilder.Core.Properties.IDataProperty(Of T).SetValue(T)
references:
- uid: VRBuilder.Core.Properties
  commentId: N:VRBuilder.Core.Properties
  name: VRBuilder.Core.Properties
  nameWithType: VRBuilder.Core.Properties
  fullName: VRBuilder.Core.Properties
- uid: VRBuilder.Core.Properties.IDataPropertyBase.OnValueReset
  commentId: P:VRBuilder.Core.Properties.IDataPropertyBase.OnValueReset
  parent: VRBuilder.Core.Properties.IDataPropertyBase
  name: OnValueReset
  nameWithType: IDataPropertyBase.OnValueReset
  fullName: VRBuilder.Core.Properties.IDataPropertyBase.OnValueReset
- uid: VRBuilder.Core.Properties.IDataPropertyBase.ResetValue
  commentId: M:VRBuilder.Core.Properties.IDataPropertyBase.ResetValue
  parent: VRBuilder.Core.Properties.IDataPropertyBase
  name: ResetValue()
  nameWithType: IDataPropertyBase.ResetValue()
  fullName: VRBuilder.Core.Properties.IDataPropertyBase.ResetValue()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.IDataPropertyBase.ResetValue
    name: ResetValue
    nameWithType: IDataPropertyBase.ResetValue
    fullName: VRBuilder.Core.Properties.IDataPropertyBase.ResetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.IDataPropertyBase.ResetValue
    name: ResetValue
    nameWithType: IDataPropertyBase.ResetValue
    fullName: VRBuilder.Core.Properties.IDataPropertyBase.ResetValue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
  commentId: P:VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
  parent: VRBuilder.Core.Properties.ISceneObjectProperty
  name: SceneObject
  nameWithType: ISceneObjectProperty.SceneObject
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
- uid: VRBuilder.Core.Properties.ISceneObjectProperty.VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  definition: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  name: AddProcessPropertyExtensions()
  nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions()
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions()
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.IDataPropertyBase
  commentId: T:VRBuilder.Core.Properties.IDataPropertyBase
  parent: VRBuilder.Core.Properties
  name: IDataPropertyBase
  nameWithType: IDataPropertyBase
  fullName: VRBuilder.Core.Properties.IDataPropertyBase
- uid: VRBuilder.Core.Properties.ISceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ISceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ISceneObjectProperty
  nameWithType: ISceneObjectProperty
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  name: AddProcessPropertyExtensions(ISceneObjectProperty)
  nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  spec.csharp:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Properties.ISceneObjectProperty
    name: ISceneObjectProperty
    nameWithType: ISceneObjectProperty
    fullName: VRBuilder.Core.Properties.ISceneObjectProperty
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
    name: AddProcessPropertyExtensions
    nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
    fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.Properties.ISceneObjectProperty
    name: ISceneObjectProperty
    nameWithType: ISceneObjectProperty
    fullName: VRBuilder.Core.Properties.ISceneObjectProperty
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.SceneObjectExtensions
  commentId: T:VRBuilder.Core.Properties.SceneObjectExtensions
  parent: VRBuilder.Core.Properties
  name: SceneObjectExtensions
  nameWithType: SceneObjectExtensions
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions
- uid: VRBuilder.Core.Properties.IDataProperty`1.OnValueChanged*
  commentId: Overload:VRBuilder.Core.Properties.IDataProperty`1.OnValueChanged
  name: OnValueChanged
  nameWithType: IDataProperty<T>.OnValueChanged
  fullName: VRBuilder.Core.Properties.IDataProperty<T>.OnValueChanged
  nameWithType.vb: IDataProperty(Of T).OnValueChanged
  fullName.vb: VRBuilder.Core.Properties.IDataProperty(Of T).OnValueChanged
- uid: UnityEngine.Events.UnityEvent{{T}}
  commentId: T:UnityEngine.Events.UnityEvent{`0}
  parent: UnityEngine.Events
  definition: UnityEngine.Events.UnityEvent`1
  name: UnityEvent<T>
  nameWithType: UnityEvent<T>
  fullName: UnityEngine.Events.UnityEvent<T>
  nameWithType.vb: UnityEvent(Of T)
  fullName.vb: UnityEngine.Events.UnityEvent(Of T)
  name.vb: UnityEvent(Of T)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEngine.Events.UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEngine.Events.UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Events.UnityEvent`1
  commentId: T:UnityEngine.Events.UnityEvent`1
  isExternal: true
  name: UnityEvent<T0>
  nameWithType: UnityEvent<T0>
  fullName: UnityEngine.Events.UnityEvent<T0>
  nameWithType.vb: UnityEvent(Of T0)
  fullName.vb: UnityEngine.Events.UnityEvent(Of T0)
  name.vb: UnityEvent(Of T0)
  spec.csharp:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEngine.Events.UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T0
    nameWithType: T0
    fullName: T0
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEngine.Events.UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEngine.Events.UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T0
    nameWithType: T0
    fullName: T0
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine.Events
  commentId: N:UnityEngine.Events
  isExternal: true
  name: UnityEngine.Events
  nameWithType: UnityEngine.Events
  fullName: UnityEngine.Events
- uid: VRBuilder.Core.Properties.IDataProperty`1.GetValue*
  commentId: Overload:VRBuilder.Core.Properties.IDataProperty`1.GetValue
  name: GetValue
  nameWithType: IDataProperty<T>.GetValue
  fullName: VRBuilder.Core.Properties.IDataProperty<T>.GetValue
  nameWithType.vb: IDataProperty(Of T).GetValue
  fullName.vb: VRBuilder.Core.Properties.IDataProperty(Of T).GetValue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: VRBuilder.Core.Properties.IDataProperty`1.SetValue*
  commentId: Overload:VRBuilder.Core.Properties.IDataProperty`1.SetValue
  name: SetValue
  nameWithType: IDataProperty<T>.SetValue
  fullName: VRBuilder.Core.Properties.IDataProperty<T>.SetValue
  nameWithType.vb: IDataProperty(Of T).SetValue
  fullName.vb: VRBuilder.Core.Properties.IDataProperty(Of T).SetValue
