### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.SceneObjects.SelectableValue`2
  commentId: T:VRBuilder.Core.SceneObjects.SelectableValue`2
  id: SelectableValue`2
  parent: VRBuilder.Core.SceneObjects
  children:
  - VRBuilder.Core.SceneObjects.SelectableValue`2.FirstValue
  - VRBuilder.Core.SceneObjects.SelectableValue`2.FirstValueLabel
  - VRBuilder.Core.SceneObjects.SelectableValue`2.IsFirstValueSelected
  - VRBuilder.Core.SceneObjects.SelectableValue`2.SecondValue
  - VRBuilder.Core.SceneObjects.SelectableValue`2.SecondValueLabel
  langs:
  - csharp
  - vb
  name: SelectableValue<TFirst, TSecond>
  nameWithType: SelectableValue<TFirst, TSecond>
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<TFirst, TSecond>
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SelectableValue.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SelectableValue
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SelectableValue.cs
    startLine: 7
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: Stores two values and a selection between the two.
  example: []
  syntax:
    content: >-
      [DataContract(IsReference = true)]

      public abstract class SelectableValue<TFirst, TSecond>
    typeParameters:
    - id: TFirst
    - id: TSecond
    content.vb: >-
      <DataContract(IsReference:=True)>

      Public MustInherit Class SelectableValue(Of TFirst, TSecond)
  inheritance:
  - System.Object
  derivedClasses:
  - VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue`1
  - VRBuilder.Core.SceneObjects.PropertyReferenceOrTagSelectableValue`1
  - VRBuilder.Core.SceneObjects.VideoClipOrURLSelectableValue
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  nameWithType.vb: SelectableValue(Of TFirst, TSecond)
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of TFirst, TSecond)
  name.vb: SelectableValue(Of TFirst, TSecond)
- uid: VRBuilder.Core.SceneObjects.SelectableValue`2.FirstValueLabel
  commentId: P:VRBuilder.Core.SceneObjects.SelectableValue`2.FirstValueLabel
  id: FirstValueLabel
  parent: VRBuilder.Core.SceneObjects.SelectableValue`2
  langs:
  - csharp
  - vb
  name: FirstValueLabel
  nameWithType: SelectableValue<TFirst, TSecond>.FirstValueLabel
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<TFirst, TSecond>.FirstValueLabel
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SelectableValue.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: FirstValueLabel
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SelectableValue.cs
    startLine: 13
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: Label for the first value.
  example: []
  syntax:
    content: public abstract string FirstValueLabel { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property FirstValueLabel As String
  overload: VRBuilder.Core.SceneObjects.SelectableValue`2.FirstValueLabel*
  nameWithType.vb: SelectableValue(Of TFirst, TSecond).FirstValueLabel
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of TFirst, TSecond).FirstValueLabel
- uid: VRBuilder.Core.SceneObjects.SelectableValue`2.SecondValueLabel
  commentId: P:VRBuilder.Core.SceneObjects.SelectableValue`2.SecondValueLabel
  id: SecondValueLabel
  parent: VRBuilder.Core.SceneObjects.SelectableValue`2
  langs:
  - csharp
  - vb
  name: SecondValueLabel
  nameWithType: SelectableValue<TFirst, TSecond>.SecondValueLabel
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<TFirst, TSecond>.SecondValueLabel
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SelectableValue.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SecondValueLabel
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SelectableValue.cs
    startLine: 18
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: Label for the second value.
  example: []
  syntax:
    content: public abstract string SecondValueLabel { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property SecondValueLabel As String
  overload: VRBuilder.Core.SceneObjects.SelectableValue`2.SecondValueLabel*
  nameWithType.vb: SelectableValue(Of TFirst, TSecond).SecondValueLabel
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of TFirst, TSecond).SecondValueLabel
- uid: VRBuilder.Core.SceneObjects.SelectableValue`2.FirstValue
  commentId: P:VRBuilder.Core.SceneObjects.SelectableValue`2.FirstValue
  id: FirstValue
  parent: VRBuilder.Core.SceneObjects.SelectableValue`2
  langs:
  - csharp
  - vb
  name: FirstValue
  nameWithType: SelectableValue<TFirst, TSecond>.FirstValue
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<TFirst, TSecond>.FirstValue
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SelectableValue.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: FirstValue
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SelectableValue.cs
    startLine: 23
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: The first value to be stored.
  example: []
  syntax:
    content: >-
      [DataMember]

      public virtual TFirst FirstValue { get; set; }
    parameters: []
    return:
      type: '{TFirst}'
    content.vb: >-
      <DataMember>

      Public Overridable Property FirstValue As TFirst
  overload: VRBuilder.Core.SceneObjects.SelectableValue`2.FirstValue*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  nameWithType.vb: SelectableValue(Of TFirst, TSecond).FirstValue
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of TFirst, TSecond).FirstValue
- uid: VRBuilder.Core.SceneObjects.SelectableValue`2.SecondValue
  commentId: P:VRBuilder.Core.SceneObjects.SelectableValue`2.SecondValue
  id: SecondValue
  parent: VRBuilder.Core.SceneObjects.SelectableValue`2
  langs:
  - csharp
  - vb
  name: SecondValue
  nameWithType: SelectableValue<TFirst, TSecond>.SecondValue
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<TFirst, TSecond>.SecondValue
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SelectableValue.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SecondValue
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SelectableValue.cs
    startLine: 29
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: The second value to be stored.
  example: []
  syntax:
    content: >-
      [DataMember]

      public virtual TSecond SecondValue { get; set; }
    parameters: []
    return:
      type: '{TSecond}'
    content.vb: >-
      <DataMember>

      Public Overridable Property SecondValue As TSecond
  overload: VRBuilder.Core.SceneObjects.SelectableValue`2.SecondValue*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  nameWithType.vb: SelectableValue(Of TFirst, TSecond).SecondValue
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of TFirst, TSecond).SecondValue
- uid: VRBuilder.Core.SceneObjects.SelectableValue`2.IsFirstValueSelected
  commentId: P:VRBuilder.Core.SceneObjects.SelectableValue`2.IsFirstValueSelected
  id: IsFirstValueSelected
  parent: VRBuilder.Core.SceneObjects.SelectableValue`2
  langs:
  - csharp
  - vb
  name: IsFirstValueSelected
  nameWithType: SelectableValue<TFirst, TSecond>.IsFirstValueSelected
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<TFirst, TSecond>.IsFirstValueSelected
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SelectableValue.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsFirstValueSelected
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SelectableValue.cs
    startLine: 35
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.SceneObjects
  summary: True if the first value should be used.
  example: []
  syntax:
    content: >-
      [DataMember]

      public virtual bool IsFirstValueSelected { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Overridable Property IsFirstValueSelected As Boolean
  overload: VRBuilder.Core.SceneObjects.SelectableValue`2.IsFirstValueSelected*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  nameWithType.vb: SelectableValue(Of TFirst, TSecond).IsFirstValueSelected
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of TFirst, TSecond).IsFirstValueSelected
references:
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  href: VRBuilder.html
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.SceneObjects
    name: SceneObjects
    href: VRBuilder.Core.SceneObjects.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  - name: .
  - uid: VRBuilder.Core.SceneObjects
    name: SceneObjects
    href: VRBuilder.Core.SceneObjects.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.SceneObjects.SelectableValue`2.FirstValueLabel*
  commentId: Overload:VRBuilder.Core.SceneObjects.SelectableValue`2.FirstValueLabel
  href: VRBuilder.Core.SceneObjects.SelectableValue-2.html#VRBuilder_Core_SceneObjects_SelectableValue_2_FirstValueLabel
  name: FirstValueLabel
  nameWithType: SelectableValue<TFirst, TSecond>.FirstValueLabel
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<TFirst, TSecond>.FirstValueLabel
  nameWithType.vb: SelectableValue(Of TFirst, TSecond).FirstValueLabel
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of TFirst, TSecond).FirstValueLabel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: VRBuilder.Core.SceneObjects.SelectableValue`2.SecondValueLabel*
  commentId: Overload:VRBuilder.Core.SceneObjects.SelectableValue`2.SecondValueLabel
  href: VRBuilder.Core.SceneObjects.SelectableValue-2.html#VRBuilder_Core_SceneObjects_SelectableValue_2_SecondValueLabel
  name: SecondValueLabel
  nameWithType: SelectableValue<TFirst, TSecond>.SecondValueLabel
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<TFirst, TSecond>.SecondValueLabel
  nameWithType.vb: SelectableValue(Of TFirst, TSecond).SecondValueLabel
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of TFirst, TSecond).SecondValueLabel
- uid: VRBuilder.Core.SceneObjects.SelectableValue`2.FirstValue*
  commentId: Overload:VRBuilder.Core.SceneObjects.SelectableValue`2.FirstValue
  href: VRBuilder.Core.SceneObjects.SelectableValue-2.html#VRBuilder_Core_SceneObjects_SelectableValue_2_FirstValue
  name: FirstValue
  nameWithType: SelectableValue<TFirst, TSecond>.FirstValue
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<TFirst, TSecond>.FirstValue
  nameWithType.vb: SelectableValue(Of TFirst, TSecond).FirstValue
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of TFirst, TSecond).FirstValue
- uid: '{TFirst}'
  commentId: '!:TFirst'
  definition: TFirst
  name: TFirst
  nameWithType: TFirst
  fullName: TFirst
- uid: TFirst
  commentId: '!:TFirst'
  name: TFirst
  nameWithType: TFirst
  fullName: TFirst
- uid: VRBuilder.Core.SceneObjects.SelectableValue`2.SecondValue*
  commentId: Overload:VRBuilder.Core.SceneObjects.SelectableValue`2.SecondValue
  href: VRBuilder.Core.SceneObjects.SelectableValue-2.html#VRBuilder_Core_SceneObjects_SelectableValue_2_SecondValue
  name: SecondValue
  nameWithType: SelectableValue<TFirst, TSecond>.SecondValue
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<TFirst, TSecond>.SecondValue
  nameWithType.vb: SelectableValue(Of TFirst, TSecond).SecondValue
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of TFirst, TSecond).SecondValue
- uid: '{TSecond}'
  commentId: '!:TSecond'
  definition: TSecond
  name: TSecond
  nameWithType: TSecond
  fullName: TSecond
- uid: TSecond
  commentId: '!:TSecond'
  name: TSecond
  nameWithType: TSecond
  fullName: TSecond
- uid: VRBuilder.Core.SceneObjects.SelectableValue`2.IsFirstValueSelected*
  commentId: Overload:VRBuilder.Core.SceneObjects.SelectableValue`2.IsFirstValueSelected
  href: VRBuilder.Core.SceneObjects.SelectableValue-2.html#VRBuilder_Core_SceneObjects_SelectableValue_2_IsFirstValueSelected
  name: IsFirstValueSelected
  nameWithType: SelectableValue<TFirst, TSecond>.IsFirstValueSelected
  fullName: VRBuilder.Core.SceneObjects.SelectableValue<TFirst, TSecond>.IsFirstValueSelected
  nameWithType.vb: SelectableValue(Of TFirst, TSecond).IsFirstValueSelected
  fullName.vb: VRBuilder.Core.SceneObjects.SelectableValue(Of TFirst, TSecond).IsFirstValueSelected
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
