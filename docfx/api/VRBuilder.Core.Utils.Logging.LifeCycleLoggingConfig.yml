### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig
  commentId: T:VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig
  id: LifeCycleLoggingConfig
  parent: VRBuilder.Core.Utils.Logging
  children:
  - VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogBehaviors
  - VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogChapters
  - VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogConditions
  - VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogDataPropertyChanges
  - VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogLockState
  - VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogSteps
  - VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogTransitions
  langs:
  - csharp
  - vb
  name: LifeCycleLoggingConfig
  nameWithType: LifeCycleLoggingConfig
  fullName: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Utils/Logging/LifeCycleLoggingConfig.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LifeCycleLoggingConfig
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Logging/LifeCycleLoggingConfig.cs
    startLine: 11
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils.Logging
  summary: "\nScriptableObject which allows you to configure what of the process life cycle should be logged.\n"
  example: []
  syntax:
    content: 'public class LifeCycleLoggingConfig : SettingsObject<LifeCycleLoggingConfig>'
    content.vb: >-
      Public Class LifeCycleLoggingConfig
          Inherits SettingsObject(Of LifeCycleLoggingConfig)
  inheritance:
  - System.Object
  - VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig}
  inheritedMembers:
  - VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig}.Instance
  - VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig}.Save
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogBehaviors
  commentId: F:VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogBehaviors
  id: LogBehaviors
  parent: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig
  langs:
  - csharp
  - vb
  name: LogBehaviors
  nameWithType: LifeCycleLoggingConfig.LogBehaviors
  fullName: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogBehaviors
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/Utils/Logging/LifeCycleLoggingConfig.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LogBehaviors
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Logging/LifeCycleLoggingConfig.cs
    startLine: 16
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils.Logging
  summary: "\nTrue, if behaviors are allowed to be logged.\n"
  example: []
  syntax:
    content: public bool LogBehaviors
    return:
      type: System.Boolean
    content.vb: Public LogBehaviors As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogConditions
  commentId: F:VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogConditions
  id: LogConditions
  parent: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig
  langs:
  - csharp
  - vb
  name: LogConditions
  nameWithType: LifeCycleLoggingConfig.LogConditions
  fullName: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogConditions
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/Utils/Logging/LifeCycleLoggingConfig.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LogConditions
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Logging/LifeCycleLoggingConfig.cs
    startLine: 21
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils.Logging
  summary: "\nTrue, if conditions are allowed to be logged.\n"
  example: []
  syntax:
    content: public bool LogConditions
    return:
      type: System.Boolean
    content.vb: Public LogConditions As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogChapters
  commentId: F:VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogChapters
  id: LogChapters
  parent: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig
  langs:
  - csharp
  - vb
  name: LogChapters
  nameWithType: LifeCycleLoggingConfig.LogChapters
  fullName: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogChapters
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/Utils/Logging/LifeCycleLoggingConfig.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LogChapters
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Logging/LifeCycleLoggingConfig.cs
    startLine: 26
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils.Logging
  summary: "\nTrue, if chapters are allowed to be logged.\n"
  example: []
  syntax:
    content: public bool LogChapters
    return:
      type: System.Boolean
    content.vb: Public LogChapters As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogSteps
  commentId: F:VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogSteps
  id: LogSteps
  parent: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig
  langs:
  - csharp
  - vb
  name: LogSteps
  nameWithType: LifeCycleLoggingConfig.LogSteps
  fullName: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogSteps
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/Utils/Logging/LifeCycleLoggingConfig.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LogSteps
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Logging/LifeCycleLoggingConfig.cs
    startLine: 31
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils.Logging
  summary: "\nTrue, if steps are allowed to be logged.\n"
  example: []
  syntax:
    content: public bool LogSteps
    return:
      type: System.Boolean
    content.vb: Public LogSteps As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogTransitions
  commentId: F:VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogTransitions
  id: LogTransitions
  parent: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig
  langs:
  - csharp
  - vb
  name: LogTransitions
  nameWithType: LifeCycleLoggingConfig.LogTransitions
  fullName: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogTransitions
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/Utils/Logging/LifeCycleLoggingConfig.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LogTransitions
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Logging/LifeCycleLoggingConfig.cs
    startLine: 36
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils.Logging
  summary: "\nTrue, if transitions are allowed to be logged.\n"
  example: []
  syntax:
    content: public bool LogTransitions
    return:
      type: System.Boolean
    content.vb: Public LogTransitions As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogDataPropertyChanges
  commentId: F:VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogDataPropertyChanges
  id: LogDataPropertyChanges
  parent: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig
  langs:
  - csharp
  - vb
  name: LogDataPropertyChanges
  nameWithType: LifeCycleLoggingConfig.LogDataPropertyChanges
  fullName: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogDataPropertyChanges
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/Utils/Logging/LifeCycleLoggingConfig.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LogDataPropertyChanges
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Logging/LifeCycleLoggingConfig.cs
    startLine: 41
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils.Logging
  summary: "\nTrue, if data property changes are allowed to be logged.\n"
  example: []
  syntax:
    content: public bool LogDataPropertyChanges
    return:
      type: System.Boolean
    content.vb: Public LogDataPropertyChanges As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogLockState
  commentId: F:VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogLockState
  id: LogLockState
  parent: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig
  langs:
  - csharp
  - vb
  name: LogLockState
  nameWithType: LifeCycleLoggingConfig.LogLockState
  fullName: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.LogLockState
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/Utils/Logging/LifeCycleLoggingConfig.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: LogLockState
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Utils/Logging/LifeCycleLoggingConfig.cs
    startLine: 46
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Utils.Logging
  summary: "\nTrue, if verbose logging is enabled.\n"
  example: []
  syntax:
    content: public bool LogLockState
    return:
      type: System.Boolean
    content.vb: Public LogLockState As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Core.Utils.Logging
  commentId: N:VRBuilder.Core.Utils.Logging
  name: VRBuilder.Core.Utils.Logging
  nameWithType: VRBuilder.Core.Utils.Logging
  fullName: VRBuilder.Core.Utils.Logging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig}
  commentId: T:VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig}
  parent: VRBuilder.Core.Runtime.Utils
  definition: VRBuilder.Core.Runtime.Utils.SettingsObject`1
  name: SettingsObject<LifeCycleLoggingConfig>
  nameWithType: SettingsObject<LifeCycleLoggingConfig>
  fullName: VRBuilder.Core.Runtime.Utils.SettingsObject<VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig>
  nameWithType.vb: SettingsObject(Of LifeCycleLoggingConfig)
  fullName.vb: VRBuilder.Core.Runtime.Utils.SettingsObject(Of VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig)
  name.vb: SettingsObject(Of LifeCycleLoggingConfig)
  spec.csharp:
  - uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1
    name: SettingsObject
    nameWithType: SettingsObject
    fullName: VRBuilder.Core.Runtime.Utils.SettingsObject
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig
    name: LifeCycleLoggingConfig
    nameWithType: LifeCycleLoggingConfig
    fullName: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1
    name: SettingsObject
    nameWithType: SettingsObject
    fullName: VRBuilder.Core.Runtime.Utils.SettingsObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig
    name: LifeCycleLoggingConfig
    nameWithType: LifeCycleLoggingConfig
    fullName: VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig}.Instance
  commentId: P:VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig}.Instance
  parent: VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig}
  definition: VRBuilder.Core.Runtime.Utils.SettingsObject`1.Instance
  name: Instance
  nameWithType: SettingsObject<LifeCycleLoggingConfig>.Instance
  fullName: VRBuilder.Core.Runtime.Utils.SettingsObject<VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig>.Instance
  nameWithType.vb: SettingsObject(Of LifeCycleLoggingConfig).Instance
  fullName.vb: VRBuilder.Core.Runtime.Utils.SettingsObject(Of VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig).Instance
- uid: VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig}.Save
  commentId: M:VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig}.Save
  parent: VRBuilder.Core.Runtime.Utils.SettingsObject{VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig}
  definition: VRBuilder.Core.Runtime.Utils.SettingsObject`1.Save
  name: Save()
  nameWithType: SettingsObject<LifeCycleLoggingConfig>.Save()
  fullName: VRBuilder.Core.Runtime.Utils.SettingsObject<VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig>.Save()
  nameWithType.vb: SettingsObject(Of LifeCycleLoggingConfig).Save()
  fullName.vb: VRBuilder.Core.Runtime.Utils.SettingsObject(Of VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig).Save()
  spec.csharp:
  - uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1.Save
    name: Save
    nameWithType: SettingsObject<LifeCycleLoggingConfig>.Save
    fullName: VRBuilder.Core.Runtime.Utils.SettingsObject<VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig>.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1.Save
    name: Save
    nameWithType: SettingsObject(Of LifeCycleLoggingConfig).Save
    fullName: VRBuilder.Core.Runtime.Utils.SettingsObject(Of VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig).Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1
  commentId: T:VRBuilder.Core.Runtime.Utils.SettingsObject`1
  name: SettingsObject<T>
  nameWithType: SettingsObject<T>
  fullName: VRBuilder.Core.Runtime.Utils.SettingsObject<T>
  nameWithType.vb: SettingsObject(Of T)
  fullName.vb: VRBuilder.Core.Runtime.Utils.SettingsObject(Of T)
  name.vb: SettingsObject(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1
    name: SettingsObject
    nameWithType: SettingsObject
    fullName: VRBuilder.Core.Runtime.Utils.SettingsObject
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1
    name: SettingsObject
    nameWithType: SettingsObject
    fullName: VRBuilder.Core.Runtime.Utils.SettingsObject
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Runtime.Utils
  commentId: N:VRBuilder.Core.Runtime.Utils
  name: VRBuilder.Core.Runtime.Utils
  nameWithType: VRBuilder.Core.Runtime.Utils
  fullName: VRBuilder.Core.Runtime.Utils
- uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1.Instance
  commentId: P:VRBuilder.Core.Runtime.Utils.SettingsObject`1.Instance
  name: Instance
  nameWithType: SettingsObject<T>.Instance
  fullName: VRBuilder.Core.Runtime.Utils.SettingsObject<T>.Instance
  nameWithType.vb: SettingsObject(Of T).Instance
  fullName.vb: VRBuilder.Core.Runtime.Utils.SettingsObject(Of T).Instance
- uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1.Save
  commentId: M:VRBuilder.Core.Runtime.Utils.SettingsObject`1.Save
  name: Save()
  nameWithType: SettingsObject<T>.Save()
  fullName: VRBuilder.Core.Runtime.Utils.SettingsObject<T>.Save()
  nameWithType.vb: SettingsObject(Of T).Save()
  fullName.vb: VRBuilder.Core.Runtime.Utils.SettingsObject(Of T).Save()
  spec.csharp:
  - uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1.Save
    name: Save
    nameWithType: SettingsObject<T>.Save
    fullName: VRBuilder.Core.Runtime.Utils.SettingsObject<T>.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.Runtime.Utils.SettingsObject`1.Save
    name: Save
    nameWithType: SettingsObject(Of T).Save
    fullName: VRBuilder.Core.Runtime.Utils.SettingsObject(Of T).Save
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
