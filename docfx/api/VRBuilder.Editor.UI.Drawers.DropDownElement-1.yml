### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.UI.Drawers.DropDownElement`1
  commentId: T:VRBuilder.Editor.UI.Drawers.DropDownElement`1
  id: DropDownElement`1
  parent: VRBuilder.Editor.UI.Drawers
  children:
  - VRBuilder.Editor.UI.Drawers.DropDownElement`1.#ctor(`0)
  - VRBuilder.Editor.UI.Drawers.DropDownElement`1.#ctor(`0,System.String)
  - VRBuilder.Editor.UI.Drawers.DropDownElement`1.#ctor(`0,UnityEngine.GUIContent)
  - VRBuilder.Editor.UI.Drawers.DropDownElement`1.Label
  - VRBuilder.Editor.UI.Drawers.DropDownElement`1.Value
  langs:
  - csharp
  - vb
  name: DropDownElement<T>
  nameWithType: DropDownElement<T>
  fullName: VRBuilder.Editor.UI.Drawers.DropDownElement<T>
  type: Struct
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/DropdownDrawers/DropDownElement.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: DropDownElement
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/DropdownDrawers/DropDownElement.cs
    startLine: 9
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  summary: "\nAn element in a dropdown.\n"
  example: []
  syntax:
    content: >-
      public struct DropDownElement<T>

          where T : IEquatable<T>
    typeParameters:
    - id: T
      description: Type of value returned by the dropdown.
    content.vb: Public Structure DropDownElement(Of T As IEquatable(Of T))
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: DropDownElement(Of T)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: VRBuilder.Editor.UI.Drawers.DropDownElement(Of T)
  name.vb: DropDownElement(Of T)
- uid: VRBuilder.Editor.UI.Drawers.DropDownElement`1.Label
  commentId: P:VRBuilder.Editor.UI.Drawers.DropDownElement`1.Label
  id: Label
  parent: VRBuilder.Editor.UI.Drawers.DropDownElement`1
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: DropDownElement<T>.Label
  fullName: VRBuilder.Editor.UI.Drawers.DropDownElement<T>.Label
  type: Property
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/DropdownDrawers/DropDownElement.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Label
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/DropdownDrawers/DropDownElement.cs
    startLine: 14
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  summary: "\nDisplay name of the element.\n"
  example: []
  syntax:
    content: public GUIContent Label { readonly get; set; }
    parameters: []
    return:
      type: UnityEngine.GUIContent
    content.vb: Public Property Label As GUIContent
  overload: VRBuilder.Editor.UI.Drawers.DropDownElement`1.Label*
  nameWithType.vb: DropDownElement(Of T).Label
  modifiers.csharp:
  - public
  - readonly get
  - set
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Editor.UI.Drawers.DropDownElement(Of T).Label
- uid: VRBuilder.Editor.UI.Drawers.DropDownElement`1.Value
  commentId: P:VRBuilder.Editor.UI.Drawers.DropDownElement`1.Value
  id: Value
  parent: VRBuilder.Editor.UI.Drawers.DropDownElement`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: DropDownElement<T>.Value
  fullName: VRBuilder.Editor.UI.Drawers.DropDownElement<T>.Value
  type: Property
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/DropdownDrawers/DropDownElement.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Value
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/DropdownDrawers/DropDownElement.cs
    startLine: 19
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  summary: "\nSelectable value.\n"
  example: []
  syntax:
    content: public T Value { readonly get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Property Value As T
  overload: VRBuilder.Editor.UI.Drawers.DropDownElement`1.Value*
  nameWithType.vb: DropDownElement(Of T).Value
  modifiers.csharp:
  - public
  - readonly get
  - set
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Editor.UI.Drawers.DropDownElement(Of T).Value
- uid: VRBuilder.Editor.UI.Drawers.DropDownElement`1.#ctor(`0,UnityEngine.GUIContent)
  commentId: M:VRBuilder.Editor.UI.Drawers.DropDownElement`1.#ctor(`0,UnityEngine.GUIContent)
  id: '#ctor(`0,UnityEngine.GUIContent)'
  parent: VRBuilder.Editor.UI.Drawers.DropDownElement`1
  langs:
  - csharp
  - vb
  name: DropDownElement(T, GUIContent)
  nameWithType: DropDownElement<T>.DropDownElement(T, GUIContent)
  fullName: VRBuilder.Editor.UI.Drawers.DropDownElement<T>.DropDownElement(T, UnityEngine.GUIContent)
  type: Constructor
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/DropdownDrawers/DropDownElement.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/DropdownDrawers/DropDownElement.cs
    startLine: 21
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  syntax:
    content: public DropDownElement(T value, GUIContent label)
    parameters:
    - id: value
      type: '{T}'
    - id: label
      type: UnityEngine.GUIContent
    content.vb: Public Sub New(value As T, label As GUIContent)
  overload: VRBuilder.Editor.UI.Drawers.DropDownElement`1.#ctor*
  nameWithType.vb: DropDownElement(Of T).DropDownElement(T, GUIContent)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Editor.UI.Drawers.DropDownElement(Of T).DropDownElement(T, UnityEngine.GUIContent)
- uid: VRBuilder.Editor.UI.Drawers.DropDownElement`1.#ctor(`0,System.String)
  commentId: M:VRBuilder.Editor.UI.Drawers.DropDownElement`1.#ctor(`0,System.String)
  id: '#ctor(`0,System.String)'
  parent: VRBuilder.Editor.UI.Drawers.DropDownElement`1
  langs:
  - csharp
  - vb
  name: DropDownElement(T, String)
  nameWithType: DropDownElement<T>.DropDownElement(T, String)
  fullName: VRBuilder.Editor.UI.Drawers.DropDownElement<T>.DropDownElement(T, System.String)
  type: Constructor
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/DropdownDrawers/DropDownElement.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/DropdownDrawers/DropDownElement.cs
    startLine: 27
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  syntax:
    content: public DropDownElement(T value, string label)
    parameters:
    - id: value
      type: '{T}'
    - id: label
      type: System.String
    content.vb: Public Sub New(value As T, label As String)
  overload: VRBuilder.Editor.UI.Drawers.DropDownElement`1.#ctor*
  nameWithType.vb: DropDownElement(Of T).DropDownElement(T, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Editor.UI.Drawers.DropDownElement(Of T).DropDownElement(T, System.String)
- uid: VRBuilder.Editor.UI.Drawers.DropDownElement`1.#ctor(`0)
  commentId: M:VRBuilder.Editor.UI.Drawers.DropDownElement`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: VRBuilder.Editor.UI.Drawers.DropDownElement`1
  langs:
  - csharp
  - vb
  name: DropDownElement(T)
  nameWithType: DropDownElement<T>.DropDownElement(T)
  fullName: VRBuilder.Editor.UI.Drawers.DropDownElement<T>.DropDownElement(T)
  type: Constructor
  source:
    remote:
      path: Source/Core/Editor/UI/Drawers/DropdownDrawers/DropDownElement.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/Drawers/DropdownDrawers/DropDownElement.cs
    startLine: 33
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Drawers
  syntax:
    content: public DropDownElement(T value)
    parameters:
    - id: value
      type: '{T}'
    content.vb: Public Sub New(value As T)
  overload: VRBuilder.Editor.UI.Drawers.DropDownElement`1.#ctor*
  nameWithType.vb: DropDownElement(Of T).DropDownElement(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VRBuilder.Editor.UI.Drawers.DropDownElement(Of T).DropDownElement(T)
references:
- uid: VRBuilder.Editor.UI.Drawers
  commentId: N:VRBuilder.Editor.UI.Drawers
  name: VRBuilder.Editor.UI.Drawers
  nameWithType: VRBuilder.Editor.UI.Drawers
  fullName: VRBuilder.Editor.UI.Drawers
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Editor.UI.Drawers.DropDownElement`1.Label*
  commentId: Overload:VRBuilder.Editor.UI.Drawers.DropDownElement`1.Label
  name: Label
  nameWithType: DropDownElement<T>.Label
  fullName: VRBuilder.Editor.UI.Drawers.DropDownElement<T>.Label
  nameWithType.vb: DropDownElement(Of T).Label
  fullName.vb: VRBuilder.Editor.UI.Drawers.DropDownElement(Of T).Label
- uid: UnityEngine.GUIContent
  commentId: T:UnityEngine.GUIContent
  parent: UnityEngine
  isExternal: true
  name: GUIContent
  nameWithType: GUIContent
  fullName: UnityEngine.GUIContent
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: VRBuilder.Editor.UI.Drawers.DropDownElement`1.Value*
  commentId: Overload:VRBuilder.Editor.UI.Drawers.DropDownElement`1.Value
  name: Value
  nameWithType: DropDownElement<T>.Value
  fullName: VRBuilder.Editor.UI.Drawers.DropDownElement<T>.Value
  nameWithType.vb: DropDownElement(Of T).Value
  fullName.vb: VRBuilder.Editor.UI.Drawers.DropDownElement(Of T).Value
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: VRBuilder.Editor.UI.Drawers.DropDownElement`1.#ctor*
  commentId: Overload:VRBuilder.Editor.UI.Drawers.DropDownElement`1.#ctor
  name: DropDownElement
  nameWithType: DropDownElement<T>.DropDownElement
  fullName: VRBuilder.Editor.UI.Drawers.DropDownElement<T>.DropDownElement
  nameWithType.vb: DropDownElement(Of T).DropDownElement
  fullName.vb: VRBuilder.Editor.UI.Drawers.DropDownElement(Of T).DropDownElement
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
