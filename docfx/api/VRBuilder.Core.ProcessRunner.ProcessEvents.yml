### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.ProcessRunner.ProcessEvents
  commentId: T:VRBuilder.Core.ProcessRunner.ProcessEvents
  id: ProcessRunner.ProcessEvents
  parent: VRBuilder.Core
  children:
  - VRBuilder.Core.ProcessRunner.ProcessEvents.ChapterStarted
  - VRBuilder.Core.ProcessRunner.ProcessEvents.FastForwardStep
  - VRBuilder.Core.ProcessRunner.ProcessEvents.ProcessFinished
  - VRBuilder.Core.ProcessRunner.ProcessEvents.ProcessInitialized
  - VRBuilder.Core.ProcessRunner.ProcessEvents.ProcessSetup
  - VRBuilder.Core.ProcessRunner.ProcessEvents.ProcessStarted
  - VRBuilder.Core.ProcessRunner.ProcessEvents.StepStarted
  langs:
  - csharp
  - vb
  name: ProcessRunner.ProcessEvents
  nameWithType: ProcessRunner.ProcessEvents
  fullName: VRBuilder.Core.ProcessRunner.ProcessEvents
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/ProcessRunner.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessEvents
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessRunner.cs
    startLine: 19
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  syntax:
    content: public class ProcessEvents
    content.vb: Public Class ProcessEvents
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.ProcessRunner.ProcessEvents.ProcessInitialized
  commentId: F:VRBuilder.Core.ProcessRunner.ProcessEvents.ProcessInitialized
  id: ProcessInitialized
  parent: VRBuilder.Core.ProcessRunner.ProcessEvents
  langs:
  - csharp
  - vb
  name: ProcessInitialized
  nameWithType: ProcessRunner.ProcessEvents.ProcessInitialized
  fullName: VRBuilder.Core.ProcessRunner.ProcessEvents.ProcessInitialized
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/ProcessRunner.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessInitialized
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessRunner.cs
    startLine: 24
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nWill be called when the process has been initialized.\n"
  example: []
  syntax:
    content: public EventHandler<ProcessEventArgs> ProcessInitialized
    return:
      type: System.EventHandler{VRBuilder.Core.ProcessEventArgs}
    content.vb: Public ProcessInitialized As EventHandler(Of ProcessEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.ProcessRunner.ProcessEvents.ProcessSetup
  commentId: F:VRBuilder.Core.ProcessRunner.ProcessEvents.ProcessSetup
  id: ProcessSetup
  parent: VRBuilder.Core.ProcessRunner.ProcessEvents
  langs:
  - csharp
  - vb
  name: ProcessSetup
  nameWithType: ProcessRunner.ProcessEvents.ProcessSetup
  fullName: VRBuilder.Core.ProcessRunner.ProcessEvents.ProcessSetup
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/ProcessRunner.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessSetup
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessRunner.cs
    startLine: 29
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nWill be called before the process is setup internally.\n"
  example: []
  syntax:
    content: public EventHandler<ProcessEventArgs> ProcessSetup
    return:
      type: System.EventHandler{VRBuilder.Core.ProcessEventArgs}
    content.vb: Public ProcessSetup As EventHandler(Of ProcessEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.ProcessRunner.ProcessEvents.ProcessStarted
  commentId: F:VRBuilder.Core.ProcessRunner.ProcessEvents.ProcessStarted
  id: ProcessStarted
  parent: VRBuilder.Core.ProcessRunner.ProcessEvents
  langs:
  - csharp
  - vb
  name: ProcessStarted
  nameWithType: ProcessRunner.ProcessEvents.ProcessStarted
  fullName: VRBuilder.Core.ProcessRunner.ProcessEvents.ProcessStarted
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/ProcessRunner.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessStarted
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessRunner.cs
    startLine: 34
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nWill be called on process start.\n"
  example: []
  syntax:
    content: public EventHandler<ProcessEventArgs> ProcessStarted
    return:
      type: System.EventHandler{VRBuilder.Core.ProcessEventArgs}
    content.vb: Public ProcessStarted As EventHandler(Of ProcessEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.ProcessRunner.ProcessEvents.ChapterStarted
  commentId: F:VRBuilder.Core.ProcessRunner.ProcessEvents.ChapterStarted
  id: ChapterStarted
  parent: VRBuilder.Core.ProcessRunner.ProcessEvents
  langs:
  - csharp
  - vb
  name: ChapterStarted
  nameWithType: ProcessRunner.ProcessEvents.ChapterStarted
  fullName: VRBuilder.Core.ProcessRunner.ProcessEvents.ChapterStarted
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/ProcessRunner.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ChapterStarted
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessRunner.cs
    startLine: 39
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nWill be called each time a chapter activates.\n"
  example: []
  syntax:
    content: public EventHandler<ProcessEventArgs> ChapterStarted
    return:
      type: System.EventHandler{VRBuilder.Core.ProcessEventArgs}
    content.vb: Public ChapterStarted As EventHandler(Of ProcessEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.ProcessRunner.ProcessEvents.StepStarted
  commentId: F:VRBuilder.Core.ProcessRunner.ProcessEvents.StepStarted
  id: StepStarted
  parent: VRBuilder.Core.ProcessRunner.ProcessEvents
  langs:
  - csharp
  - vb
  name: StepStarted
  nameWithType: ProcessRunner.ProcessEvents.StepStarted
  fullName: VRBuilder.Core.ProcessRunner.ProcessEvents.StepStarted
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/ProcessRunner.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StepStarted
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessRunner.cs
    startLine: 44
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nWill be called each time a step activates.\n"
  example: []
  syntax:
    content: public EventHandler<ProcessEventArgs> StepStarted
    return:
      type: System.EventHandler{VRBuilder.Core.ProcessEventArgs}
    content.vb: Public StepStarted As EventHandler(Of ProcessEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.ProcessRunner.ProcessEvents.ProcessFinished
  commentId: F:VRBuilder.Core.ProcessRunner.ProcessEvents.ProcessFinished
  id: ProcessFinished
  parent: VRBuilder.Core.ProcessRunner.ProcessEvents
  langs:
  - csharp
  - vb
  name: ProcessFinished
  nameWithType: ProcessRunner.ProcessEvents.ProcessFinished
  fullName: VRBuilder.Core.ProcessRunner.ProcessEvents.ProcessFinished
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/ProcessRunner.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessFinished
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessRunner.cs
    startLine: 49
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nWill be called when the process finishes.\n"
  example: []
  syntax:
    content: public EventHandler<ProcessEventArgs> ProcessFinished
    return:
      type: System.EventHandler{VRBuilder.Core.ProcessEventArgs}
    content.vb: Public ProcessFinished As EventHandler(Of ProcessEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.ProcessRunner.ProcessEvents.FastForwardStep
  commentId: F:VRBuilder.Core.ProcessRunner.ProcessEvents.FastForwardStep
  id: FastForwardStep
  parent: VRBuilder.Core.ProcessRunner.ProcessEvents
  langs:
  - csharp
  - vb
  name: FastForwardStep
  nameWithType: ProcessRunner.ProcessEvents.FastForwardStep
  fullName: VRBuilder.Core.ProcessRunner.ProcessEvents.FastForwardStep
  type: Field
  source:
    remote:
      path: Source/Core/Runtime/ProcessRunner.cs
      branch: feature/mp-2811-outline-shader
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: FastForwardStep
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/ProcessRunner.cs
    startLine: 54
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nWill be called when manual fast forward is triggered.\n"
  example: []
  syntax:
    content: public EventHandler<FastForwardProcessEventArgs> FastForwardStep
    return:
      type: System.EventHandler{VRBuilder.Core.FastForwardProcessEventArgs}
    content.vb: Public FastForwardStep As EventHandler(Of FastForwardProcessEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler{VRBuilder.Core.ProcessEventArgs}
  commentId: T:System.EventHandler{VRBuilder.Core.ProcessEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ProcessEventArgs>
  nameWithType: EventHandler<ProcessEventArgs>
  fullName: System.EventHandler<VRBuilder.Core.ProcessEventArgs>
  nameWithType.vb: EventHandler(Of ProcessEventArgs)
  fullName.vb: System.EventHandler(Of VRBuilder.Core.ProcessEventArgs)
  name.vb: EventHandler(Of ProcessEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.ProcessEventArgs
    name: ProcessEventArgs
    nameWithType: ProcessEventArgs
    fullName: VRBuilder.Core.ProcessEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.ProcessEventArgs
    name: ProcessEventArgs
    nameWithType: ProcessEventArgs
    fullName: VRBuilder.Core.ProcessEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{VRBuilder.Core.FastForwardProcessEventArgs}
  commentId: T:System.EventHandler{VRBuilder.Core.FastForwardProcessEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<FastForwardProcessEventArgs>
  nameWithType: EventHandler<FastForwardProcessEventArgs>
  fullName: System.EventHandler<VRBuilder.Core.FastForwardProcessEventArgs>
  nameWithType.vb: EventHandler(Of FastForwardProcessEventArgs)
  fullName.vb: System.EventHandler(Of VRBuilder.Core.FastForwardProcessEventArgs)
  name.vb: EventHandler(Of FastForwardProcessEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.Core.FastForwardProcessEventArgs
    name: FastForwardProcessEventArgs
    nameWithType: FastForwardProcessEventArgs
    fullName: VRBuilder.Core.FastForwardProcessEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.Core.FastForwardProcessEventArgs
    name: FastForwardProcessEventArgs
    nameWithType: FastForwardProcessEventArgs
    fullName: VRBuilder.Core.FastForwardProcessEventArgs
  - name: )
    nameWithType: )
    fullName: )
