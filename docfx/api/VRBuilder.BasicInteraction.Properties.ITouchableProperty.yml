### YamlMime:ManagedReference
items:
- uid: VRBuilder.BasicInteraction.Properties.ITouchableProperty
  commentId: T:VRBuilder.BasicInteraction.Properties.ITouchableProperty
  id: ITouchableProperty
  parent: VRBuilder.BasicInteraction.Properties
  children:
  - VRBuilder.BasicInteraction.Properties.ITouchableProperty.FastForwardTouch
  - VRBuilder.BasicInteraction.Properties.ITouchableProperty.ForceSetTouched(System.Boolean)
  - VRBuilder.BasicInteraction.Properties.ITouchableProperty.IsBeingTouched
  - VRBuilder.BasicInteraction.Properties.ITouchableProperty.TouchEnded
  - VRBuilder.BasicInteraction.Properties.ITouchableProperty.TouchStarted
  langs:
  - csharp
  - vb
  name: ITouchableProperty
  nameWithType: ITouchableProperty
  fullName: VRBuilder.BasicInteraction.Properties.ITouchableProperty
  type: Interface
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ITouchableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ITouchableProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ITouchableProperty.cs
    startLine: 7
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  syntax:
    content: 'public interface ITouchableProperty : ISceneObjectProperty, ILockable'
    content.vb: >-
      Public Interface ITouchableProperty

          Inherits ISceneObjectProperty, ILockable
  inheritedMembers:
  - VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
  - VRBuilder.Core.SceneObjects.ILockable.Locked
  - VRBuilder.Core.SceneObjects.ILockable.Unlocked
  - VRBuilder.Core.SceneObjects.ILockable.IsLocked
  - VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  - VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  - VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VRBuilder.BasicInteraction.Properties.ITouchableProperty.TouchStarted
  commentId: P:VRBuilder.BasicInteraction.Properties.ITouchableProperty.TouchStarted
  id: TouchStarted
  parent: VRBuilder.BasicInteraction.Properties.ITouchableProperty
  langs:
  - csharp
  - vb
  name: TouchStarted
  nameWithType: ITouchableProperty.TouchStarted
  fullName: VRBuilder.BasicInteraction.Properties.ITouchableProperty.TouchStarted
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ITouchableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: TouchStarted
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ITouchableProperty.cs
    startLine: 12
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  summary: "\nCalled when touched.\n"
  example: []
  syntax:
    content: UnityEvent<TouchablePropertyEventArgs> TouchStarted { get; }
    parameters: []
    return:
      type: UnityEvent{VRBuilder.BasicInteraction.Properties.TouchablePropertyEventArgs}
    content.vb: ReadOnly Property TouchStarted As UnityEvent(Of TouchablePropertyEventArgs)
  overload: VRBuilder.BasicInteraction.Properties.ITouchableProperty.TouchStarted*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.BasicInteraction.Properties.ITouchableProperty.TouchEnded
  commentId: P:VRBuilder.BasicInteraction.Properties.ITouchableProperty.TouchEnded
  id: TouchEnded
  parent: VRBuilder.BasicInteraction.Properties.ITouchableProperty
  langs:
  - csharp
  - vb
  name: TouchEnded
  nameWithType: ITouchableProperty.TouchEnded
  fullName: VRBuilder.BasicInteraction.Properties.ITouchableProperty.TouchEnded
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ITouchableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: TouchEnded
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ITouchableProperty.cs
    startLine: 17
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  summary: "\nCalled when stopped touching.\n"
  example: []
  syntax:
    content: UnityEvent<TouchablePropertyEventArgs> TouchEnded { get; }
    parameters: []
    return:
      type: UnityEvent{VRBuilder.BasicInteraction.Properties.TouchablePropertyEventArgs}
    content.vb: ReadOnly Property TouchEnded As UnityEvent(Of TouchablePropertyEventArgs)
  overload: VRBuilder.BasicInteraction.Properties.ITouchableProperty.TouchEnded*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.BasicInteraction.Properties.ITouchableProperty.IsBeingTouched
  commentId: P:VRBuilder.BasicInteraction.Properties.ITouchableProperty.IsBeingTouched
  id: IsBeingTouched
  parent: VRBuilder.BasicInteraction.Properties.ITouchableProperty
  langs:
  - csharp
  - vb
  name: IsBeingTouched
  nameWithType: ITouchableProperty.IsBeingTouched
  fullName: VRBuilder.BasicInteraction.Properties.ITouchableProperty.IsBeingTouched
  type: Property
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ITouchableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsBeingTouched
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ITouchableProperty.cs
    startLine: 22
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  summary: "\nIs object currently touched.\n"
  example: []
  syntax:
    content: bool IsBeingTouched { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsBeingTouched As Boolean
  overload: VRBuilder.BasicInteraction.Properties.ITouchableProperty.IsBeingTouched*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VRBuilder.BasicInteraction.Properties.ITouchableProperty.FastForwardTouch
  commentId: M:VRBuilder.BasicInteraction.Properties.ITouchableProperty.FastForwardTouch
  id: FastForwardTouch
  parent: VRBuilder.BasicInteraction.Properties.ITouchableProperty
  langs:
  - csharp
  - vb
  name: FastForwardTouch()
  nameWithType: ITouchableProperty.FastForwardTouch()
  fullName: VRBuilder.BasicInteraction.Properties.ITouchableProperty.FastForwardTouch()
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ITouchableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: FastForwardTouch
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ITouchableProperty.cs
    startLine: 27
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  summary: "\nInstantaneously simulate that the object was touched.\n"
  example: []
  syntax:
    content: void FastForwardTouch()
    content.vb: Sub FastForwardTouch
  overload: VRBuilder.BasicInteraction.Properties.ITouchableProperty.FastForwardTouch*
- uid: VRBuilder.BasicInteraction.Properties.ITouchableProperty.ForceSetTouched(System.Boolean)
  commentId: M:VRBuilder.BasicInteraction.Properties.ITouchableProperty.ForceSetTouched(System.Boolean)
  id: ForceSetTouched(System.Boolean)
  parent: VRBuilder.BasicInteraction.Properties.ITouchableProperty
  langs:
  - csharp
  - vb
  name: ForceSetTouched(Boolean)
  nameWithType: ITouchableProperty.ForceSetTouched(Boolean)
  fullName: VRBuilder.BasicInteraction.Properties.ITouchableProperty.ForceSetTouched(System.Boolean)
  type: Method
  source:
    remote:
      path: Source/Basic-Interaction-Component/Runtime/Properties/ITouchableProperty.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ForceSetTouched
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Interaction-Component/Runtime/Properties/ITouchableProperty.cs
    startLine: 32
  assemblies:
  - VRBuilder.BasicInteraction
  namespace: VRBuilder.BasicInteraction.Properties
  summary: "\nForce this property to a specified touched state.\n"
  example: []
  syntax:
    content: void ForceSetTouched(bool isTouched)
    parameters:
    - id: isTouched
      type: System.Boolean
    content.vb: Sub ForceSetTouched(isTouched As Boolean)
  overload: VRBuilder.BasicInteraction.Properties.ITouchableProperty.ForceSetTouched*
references:
- uid: VRBuilder.BasicInteraction.Properties
  commentId: N:VRBuilder.BasicInteraction.Properties
  name: VRBuilder.BasicInteraction.Properties
  nameWithType: VRBuilder.BasicInteraction.Properties
  fullName: VRBuilder.BasicInteraction.Properties
- uid: VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
  commentId: P:VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
  parent: VRBuilder.Core.Properties.ISceneObjectProperty
  name: SceneObject
  nameWithType: ISceneObjectProperty.SceneObject
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty.SceneObject
- uid: VRBuilder.Core.SceneObjects.ILockable.Locked
  commentId: E:VRBuilder.Core.SceneObjects.ILockable.Locked
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: Locked
  nameWithType: ILockable.Locked
  fullName: VRBuilder.Core.SceneObjects.ILockable.Locked
- uid: VRBuilder.Core.SceneObjects.ILockable.Unlocked
  commentId: E:VRBuilder.Core.SceneObjects.ILockable.Unlocked
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: Unlocked
  nameWithType: ILockable.Unlocked
  fullName: VRBuilder.Core.SceneObjects.ILockable.Unlocked
- uid: VRBuilder.Core.SceneObjects.ILockable.IsLocked
  commentId: P:VRBuilder.Core.SceneObjects.ILockable.IsLocked
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: IsLocked
  nameWithType: ILockable.IsLocked
  fullName: VRBuilder.Core.SceneObjects.ILockable.IsLocked
- uid: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  commentId: M:VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  parent: VRBuilder.Core.SceneObjects.ILockable
  isExternal: true
  name: SetLocked(Boolean)
  nameWithType: ILockable.SetLocked(Boolean)
  fullName: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
    name: SetLocked
    nameWithType: ILockable.SetLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.SetLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ILockable.SetLocked(System.Boolean)
    name: SetLocked
    nameWithType: ILockable.SetLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.SetLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  commentId: M:VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
  parent: VRBuilder.Core.SceneObjects.ILockable
  isExternal: true
  name: RequestLocked(Boolean, IStepData)
  nameWithType: ILockable.RequestLocked(Boolean, IStepData)
  fullName: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean, VRBuilder.Core.IStepData)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
    name: RequestLocked
    nameWithType: ILockable.RequestLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.RequestLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RequestLocked(System.Boolean,VRBuilder.Core.IStepData)
    name: RequestLocked
    nameWithType: ILockable.RequestLocked
    fullName: VRBuilder.Core.SceneObjects.ILockable.RequestLocked
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  commentId: M:VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  parent: VRBuilder.Core.SceneObjects.ILockable
  name: RemoveUnlocker(IStepData)
  nameWithType: ILockable.RemoveUnlocker(IStepData)
  fullName: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
  spec.csharp:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
    name: RemoveUnlocker
    nameWithType: ILockable.RemoveUnlocker
    fullName: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker(VRBuilder.Core.IStepData)
    name: RemoveUnlocker
    nameWithType: ILockable.RemoveUnlocker
    fullName: VRBuilder.Core.SceneObjects.ILockable.RemoveUnlocker
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IStepData
    name: IStepData
    nameWithType: IStepData
    fullName: VRBuilder.Core.IStepData
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.Properties.ISceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ISceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ISceneObjectProperty
  nameWithType: ISceneObjectProperty
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty
- uid: VRBuilder.Core.SceneObjects.ILockable
  commentId: T:VRBuilder.Core.SceneObjects.ILockable
  parent: VRBuilder.Core.SceneObjects
  name: ILockable
  nameWithType: ILockable
  fullName: VRBuilder.Core.SceneObjects.ILockable
- uid: VRBuilder.Core.Properties
  commentId: N:VRBuilder.Core.Properties
  name: VRBuilder.Core.Properties
  nameWithType: VRBuilder.Core.Properties
  fullName: VRBuilder.Core.Properties
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: VRBuilder.BasicInteraction.Properties.ITouchableProperty.TouchStarted*
  commentId: Overload:VRBuilder.BasicInteraction.Properties.ITouchableProperty.TouchStarted
  name: TouchStarted
  nameWithType: ITouchableProperty.TouchStarted
  fullName: VRBuilder.BasicInteraction.Properties.ITouchableProperty.TouchStarted
- uid: UnityEvent{VRBuilder.BasicInteraction.Properties.TouchablePropertyEventArgs}
  commentId: '!:UnityEvent{VRBuilder.BasicInteraction.Properties.TouchablePropertyEventArgs}'
  definition: UnityEvent`1
  name: UnityEvent<TouchablePropertyEventArgs>
  nameWithType: UnityEvent<TouchablePropertyEventArgs>
  fullName: UnityEvent<VRBuilder.BasicInteraction.Properties.TouchablePropertyEventArgs>
  nameWithType.vb: UnityEvent(Of TouchablePropertyEventArgs)
  fullName.vb: UnityEvent(Of VRBuilder.BasicInteraction.Properties.TouchablePropertyEventArgs)
  name.vb: UnityEvent(Of TouchablePropertyEventArgs)
  spec.csharp:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VRBuilder.BasicInteraction.Properties.TouchablePropertyEventArgs
    name: TouchablePropertyEventArgs
    nameWithType: TouchablePropertyEventArgs
    fullName: VRBuilder.BasicInteraction.Properties.TouchablePropertyEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VRBuilder.BasicInteraction.Properties.TouchablePropertyEventArgs
    name: TouchablePropertyEventArgs
    nameWithType: TouchablePropertyEventArgs
    fullName: VRBuilder.BasicInteraction.Properties.TouchablePropertyEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEvent`1
  isExternal: true
  name: UnityEvent<>
  nameWithType: UnityEvent<>
  fullName: UnityEvent<>
  nameWithType.vb: UnityEvent(Of )
  fullName.vb: UnityEvent(Of )
  name.vb: UnityEvent(Of )
  spec.csharp:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.BasicInteraction.Properties.ITouchableProperty.TouchEnded*
  commentId: Overload:VRBuilder.BasicInteraction.Properties.ITouchableProperty.TouchEnded
  name: TouchEnded
  nameWithType: ITouchableProperty.TouchEnded
  fullName: VRBuilder.BasicInteraction.Properties.ITouchableProperty.TouchEnded
- uid: VRBuilder.BasicInteraction.Properties.ITouchableProperty.IsBeingTouched*
  commentId: Overload:VRBuilder.BasicInteraction.Properties.ITouchableProperty.IsBeingTouched
  name: IsBeingTouched
  nameWithType: ITouchableProperty.IsBeingTouched
  fullName: VRBuilder.BasicInteraction.Properties.ITouchableProperty.IsBeingTouched
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.BasicInteraction.Properties.ITouchableProperty.FastForwardTouch*
  commentId: Overload:VRBuilder.BasicInteraction.Properties.ITouchableProperty.FastForwardTouch
  name: FastForwardTouch
  nameWithType: ITouchableProperty.FastForwardTouch
  fullName: VRBuilder.BasicInteraction.Properties.ITouchableProperty.FastForwardTouch
- uid: VRBuilder.BasicInteraction.Properties.ITouchableProperty.ForceSetTouched*
  commentId: Overload:VRBuilder.BasicInteraction.Properties.ITouchableProperty.ForceSetTouched
  name: ForceSetTouched
  nameWithType: ITouchableProperty.ForceSetTouched
  fullName: VRBuilder.BasicInteraction.Properties.ITouchableProperty.ForceSetTouched
