### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Process
  commentId: T:VRBuilder.Core.Process
  id: Process
  parent: VRBuilder.Core
  children:
  - VRBuilder.Core.Process.#ctor
  - VRBuilder.Core.Process.#ctor(System.String,System.Collections.Generic.IEnumerable{VRBuilder.Core.IChapter})
  - VRBuilder.Core.Process.#ctor(System.String,VRBuilder.Core.IChapter)
  - VRBuilder.Core.Process.Clone
  - VRBuilder.Core.Process.CurrentStep
  - VRBuilder.Core.Process.GetActivatingProcess
  - VRBuilder.Core.Process.GetDeactivatingProcess
  - VRBuilder.Core.Process.ProcessMetadata
  langs:
  - csharp
  - vb
  name: Process
  nameWithType: Process
  fullName: VRBuilder.Core.Process
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/Process.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Process
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Process.cs
    startLine: 18
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: >-
    An implementation of <xref href="VRBuilder.Core.IProcess" data-throw-if-not-resolved="false"></xref> class.

    It contains a complete information about the process workflow.
  example: []
  syntax:
    content: >-
      [DataContract(IsReference = true)]

      public class Process : Entity<Process.EntityData>, IDataOwner<Process.EntityData>, IProcess, IEntity, IDataOwner<IProcessData>, IDataOwner, IClonable<IProcess>
    content.vb: >-
      <DataContract(IsReference:=True)>

      Public Class Process Inherits Entity(Of Process.EntityData) Implements IDataOwner(Of Process.EntityData), IProcess, IEntity, IDataOwner(Of IProcessData), IDataOwner, IClonable(Of IProcess)
  inheritance:
  - System.Object
  - VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}
  implements:
  - VRBuilder.Core.IDataOwner{VRBuilder.Core.Process.EntityData}
  - VRBuilder.Core.IProcess
  - VRBuilder.Core.IEntity
  - VRBuilder.Core.IDataOwner{VRBuilder.Core.IProcessData}
  - VRBuilder.Core.IDataOwner
  - VRBuilder.Core.IClonable{VRBuilder.Core.IProcess}
  inheritedMembers:
  - VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.Data
  - VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.LifeCycle
  - VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.Parent
  - VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.GetActiveProcess
  - VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.GetConfigurator
  - VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  - VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.Update
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
- uid: VRBuilder.Core.Process.CurrentStep
  commentId: P:VRBuilder.Core.Process.CurrentStep
  id: CurrentStep
  parent: VRBuilder.Core.Process
  langs:
  - csharp
  - vb
  name: CurrentStep
  nameWithType: Process.CurrentStep
  fullName: VRBuilder.Core.Process.CurrentStep
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Process.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CurrentStep
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Process.cs
    startLine: 67
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: Step that is currently being executed.
  example: []
  syntax:
    content: >-
      [DataMember]

      public IStep CurrentStep { get; protected set; }
    parameters: []
    return:
      type: VRBuilder.Core.IStep
    content.vb: >-
      <DataMember>

      Public Property CurrentStep As IStep
  overload: VRBuilder.Core.Process.CurrentStep*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: VRBuilder.Core.Process.ProcessMetadata
  commentId: P:VRBuilder.Core.Process.ProcessMetadata
  id: ProcessMetadata
  parent: VRBuilder.Core.Process
  langs:
  - csharp
  - vb
  name: ProcessMetadata
  nameWithType: Process.ProcessMetadata
  fullName: VRBuilder.Core.Process.ProcessMetadata
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/Process.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ProcessMetadata
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Process.cs
    startLine: 71
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: Utility data used by editor.
  example: []
  syntax:
    content: >-
      [DataMember]

      public ProcessMetadata ProcessMetadata { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.ProcessMetadata
    content.vb: >-
      <DataMember>

      Public Property ProcessMetadata As ProcessMetadata
  overload: VRBuilder.Core.Process.ProcessMetadata*
  implements:
  - VRBuilder.Core.IProcess.ProcessMetadata
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: VRBuilder.Core.Process.GetActivatingProcess
  commentId: M:VRBuilder.Core.Process.GetActivatingProcess
  id: GetActivatingProcess
  parent: VRBuilder.Core.Process
  langs:
  - csharp
  - vb
  name: GetActivatingProcess()
  nameWithType: Process.GetActivatingProcess()
  fullName: VRBuilder.Core.Process.GetActivatingProcess()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Process.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetActivatingProcess
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Process.cs
    startLine: 132
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: Returns a new instance of a process for the Activating <xref href="VRBuilder.Core.Stage" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override IStageProcess GetActivatingProcess()
    return:
      type: VRBuilder.Core.IStageProcess
    content.vb: Public Overrides Function GetActivatingProcess() As IStageProcess
  overridden: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.GetActivatingProcess
  overload: VRBuilder.Core.Process.GetActivatingProcess*
  implements:
  - VRBuilder.Core.IEntity.GetActivatingProcess
- uid: VRBuilder.Core.Process.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.Process.GetDeactivatingProcess
  id: GetDeactivatingProcess
  parent: VRBuilder.Core.Process
  langs:
  - csharp
  - vb
  name: GetDeactivatingProcess()
  nameWithType: Process.GetDeactivatingProcess()
  fullName: VRBuilder.Core.Process.GetDeactivatingProcess()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Process.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: GetDeactivatingProcess
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Process.cs
    startLine: 138
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: Returns a new instance of a process for the Deactivating <xref href="VRBuilder.Core.Stage" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override IStageProcess GetDeactivatingProcess()
    return:
      type: VRBuilder.Core.IStageProcess
    content.vb: Public Overrides Function GetDeactivatingProcess() As IStageProcess
  overridden: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.GetDeactivatingProcess
  overload: VRBuilder.Core.Process.GetDeactivatingProcess*
  implements:
  - VRBuilder.Core.IEntity.GetDeactivatingProcess
- uid: VRBuilder.Core.Process.Clone
  commentId: M:VRBuilder.Core.Process.Clone
  id: Clone
  parent: VRBuilder.Core.Process
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Process.Clone()
  fullName: VRBuilder.Core.Process.Clone()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/Process.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Clone
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Process.cs
    startLine: 144
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: Returns a deep copy of the object.
  example: []
  syntax:
    content: public IProcess Clone()
    return:
      type: VRBuilder.Core.IProcess
    content.vb: Public Function Clone() As IProcess
  overload: VRBuilder.Core.Process.Clone*
  implements:
  - VRBuilder.Core.IClonable{VRBuilder.Core.IProcess}.Clone
- uid: VRBuilder.Core.Process.#ctor
  commentId: M:VRBuilder.Core.Process.#ctor
  id: '#ctor'
  parent: VRBuilder.Core.Process
  langs:
  - csharp
  - vb
  name: Process()
  nameWithType: Process.Process()
  fullName: VRBuilder.Core.Process.Process()
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/Process.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Process.cs
    startLine: 150
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  syntax:
    content: protected Process()
    content.vb: Protected Sub New()
  overload: VRBuilder.Core.Process.#ctor*
  nameWithType.vb: Process.New()
  fullName.vb: VRBuilder.Core.Process.New()
  name.vb: New()
- uid: VRBuilder.Core.Process.#ctor(System.String,VRBuilder.Core.IChapter)
  commentId: M:VRBuilder.Core.Process.#ctor(System.String,VRBuilder.Core.IChapter)
  id: '#ctor(System.String,VRBuilder.Core.IChapter)'
  parent: VRBuilder.Core.Process
  langs:
  - csharp
  - vb
  name: Process(string, IChapter)
  nameWithType: Process.Process(string, IChapter)
  fullName: VRBuilder.Core.Process.Process(string, VRBuilder.Core.IChapter)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/Process.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Process.cs
    startLine: 154
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  syntax:
    content: public Process(string name, IChapter chapter)
    parameters:
    - id: name
      type: System.String
    - id: chapter
      type: VRBuilder.Core.IChapter
    content.vb: Public Sub New(name As String, chapter As IChapter)
  overload: VRBuilder.Core.Process.#ctor*
  nameWithType.vb: Process.New(String, IChapter)
  fullName.vb: VRBuilder.Core.Process.New(String, VRBuilder.Core.IChapter)
  name.vb: New(String, IChapter)
- uid: VRBuilder.Core.Process.#ctor(System.String,System.Collections.Generic.IEnumerable{VRBuilder.Core.IChapter})
  commentId: M:VRBuilder.Core.Process.#ctor(System.String,System.Collections.Generic.IEnumerable{VRBuilder.Core.IChapter})
  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{VRBuilder.Core.IChapter})'
  parent: VRBuilder.Core.Process
  langs:
  - csharp
  - vb
  name: Process(string, IEnumerable<IChapter>)
  nameWithType: Process.Process(string, IEnumerable<IChapter>)
  fullName: VRBuilder.Core.Process.Process(string, System.Collections.Generic.IEnumerable<VRBuilder.Core.IChapter>)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/Process.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/Process.cs
    startLine: 158
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  syntax:
    content: public Process(string name, IEnumerable<IChapter> chapters)
    parameters:
    - id: name
      type: System.String
    - id: chapters
      type: System.Collections.Generic.IEnumerable{VRBuilder.Core.IChapter}
    content.vb: Public Sub New(name As String, chapters As IEnumerable(Of IChapter))
  overload: VRBuilder.Core.Process.#ctor*
  nameWithType.vb: Process.New(String, IEnumerable(Of IChapter))
  fullName.vb: VRBuilder.Core.Process.New(String, System.Collections.Generic.IEnumerable(Of VRBuilder.Core.IChapter))
  name.vb: New(String, IEnumerable(Of IChapter))
references:
- uid: VRBuilder.Core.IProcess
  commentId: T:VRBuilder.Core.IProcess
  parent: VRBuilder.Core
  href: VRBuilder.Core.IProcess.html
  name: IProcess
  nameWithType: IProcess
  fullName: VRBuilder.Core.IProcess
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  href: VRBuilder.html
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.Core
    name: Core
    href: VRBuilder.Core.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}
  commentId: T:VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.Entity`1
  href: VRBuilder.Core.Entity-1.html
  name: Entity<Process.EntityData>
  nameWithType: Entity<Process.EntityData>
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Process.EntityData>
  nameWithType.vb: Entity(Of Process.EntityData)
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Process.EntityData)
  name.vb: Entity(Of Process.EntityData)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    href: VRBuilder.Core.Entity-1.html
  - name: <
  - uid: VRBuilder.Core.Process
    name: Process
    href: VRBuilder.Core.Process.html
  - name: .
  - uid: VRBuilder.Core.Process.EntityData
    name: EntityData
    href: VRBuilder.Core.Process.EntityData.html
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    href: VRBuilder.Core.Entity-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: VRBuilder.Core.Process
    name: Process
    href: VRBuilder.Core.Process.html
  - name: .
  - uid: VRBuilder.Core.Process.EntityData
    name: EntityData
    href: VRBuilder.Core.Process.EntityData.html
  - name: )
- uid: VRBuilder.Core.IDataOwner{VRBuilder.Core.Process.EntityData}
  commentId: T:VRBuilder.Core.IDataOwner{VRBuilder.Core.Process.EntityData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IDataOwner`1
  href: VRBuilder.Core.IDataOwner-1.html
  name: IDataOwner<Process.EntityData>
  nameWithType: IDataOwner<Process.EntityData>
  fullName: VRBuilder.Core.IDataOwner<VRBuilder.Core.Process.EntityData>
  nameWithType.vb: IDataOwner(Of Process.EntityData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of VRBuilder.Core.Process.EntityData)
  name.vb: IDataOwner(Of Process.EntityData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    href: VRBuilder.Core.IDataOwner-1.html
  - name: <
  - uid: VRBuilder.Core.Process
    name: Process
    href: VRBuilder.Core.Process.html
  - name: .
  - uid: VRBuilder.Core.Process.EntityData
    name: EntityData
    href: VRBuilder.Core.Process.EntityData.html
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    href: VRBuilder.Core.IDataOwner-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: VRBuilder.Core.Process
    name: Process
    href: VRBuilder.Core.Process.html
  - name: .
  - uid: VRBuilder.Core.Process.EntityData
    name: EntityData
    href: VRBuilder.Core.Process.EntityData.html
  - name: )
- uid: VRBuilder.Core.IEntity
  commentId: T:VRBuilder.Core.IEntity
  parent: VRBuilder.Core
  href: VRBuilder.Core.IEntity.html
  name: IEntity
  nameWithType: IEntity
  fullName: VRBuilder.Core.IEntity
- uid: VRBuilder.Core.IDataOwner{VRBuilder.Core.IProcessData}
  commentId: T:VRBuilder.Core.IDataOwner{VRBuilder.Core.IProcessData}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IDataOwner`1
  href: VRBuilder.Core.IDataOwner-1.html
  name: IDataOwner<IProcessData>
  nameWithType: IDataOwner<IProcessData>
  fullName: VRBuilder.Core.IDataOwner<VRBuilder.Core.IProcessData>
  nameWithType.vb: IDataOwner(Of IProcessData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of VRBuilder.Core.IProcessData)
  name.vb: IDataOwner(Of IProcessData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    href: VRBuilder.Core.IDataOwner-1.html
  - name: <
  - uid: VRBuilder.Core.IProcessData
    name: IProcessData
    href: VRBuilder.Core.IProcessData.html
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    href: VRBuilder.Core.IDataOwner-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: VRBuilder.Core.IProcessData
    name: IProcessData
    href: VRBuilder.Core.IProcessData.html
  - name: )
- uid: VRBuilder.Core.IDataOwner
  commentId: T:VRBuilder.Core.IDataOwner
  parent: VRBuilder.Core
  href: VRBuilder.Core.IDataOwner.html
  name: IDataOwner
  nameWithType: IDataOwner
  fullName: VRBuilder.Core.IDataOwner
- uid: VRBuilder.Core.IClonable{VRBuilder.Core.IProcess}
  commentId: T:VRBuilder.Core.IClonable{VRBuilder.Core.IProcess}
  parent: VRBuilder.Core
  definition: VRBuilder.Core.IClonable`1
  href: VRBuilder.Core.IClonable-1.html
  name: IClonable<IProcess>
  nameWithType: IClonable<IProcess>
  fullName: VRBuilder.Core.IClonable<VRBuilder.Core.IProcess>
  nameWithType.vb: IClonable(Of IProcess)
  fullName.vb: VRBuilder.Core.IClonable(Of VRBuilder.Core.IProcess)
  name.vb: IClonable(Of IProcess)
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    href: VRBuilder.Core.IClonable-1.html
  - name: <
  - uid: VRBuilder.Core.IProcess
    name: IProcess
    href: VRBuilder.Core.IProcess.html
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    href: VRBuilder.Core.IClonable-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: VRBuilder.Core.IProcess
    name: IProcess
    href: VRBuilder.Core.IProcess.html
  - name: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.Data
  commentId: P:VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.Data
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}
  definition: VRBuilder.Core.Entity`1.Data
  href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_Data
  name: Data
  nameWithType: Entity<Process.EntityData>.Data
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Process.EntityData>.Data
  nameWithType.vb: Entity(Of Process.EntityData).Data
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Process.EntityData).Data
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.LifeCycle
  commentId: P:VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.LifeCycle
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}
  definition: VRBuilder.Core.Entity`1.LifeCycle
  href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_LifeCycle
  name: LifeCycle
  nameWithType: Entity<Process.EntityData>.LifeCycle
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Process.EntityData>.LifeCycle
  nameWithType.vb: Entity(Of Process.EntityData).LifeCycle
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Process.EntityData).LifeCycle
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.Parent
  commentId: P:VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.Parent
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}
  definition: VRBuilder.Core.Entity`1.Parent
  href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_Parent
  name: Parent
  nameWithType: Entity<Process.EntityData>.Parent
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Process.EntityData>.Parent
  nameWithType.vb: Entity(Of Process.EntityData).Parent
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Process.EntityData).Parent
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.GetActiveProcess
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.GetActiveProcess
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}
  definition: VRBuilder.Core.Entity`1.GetActiveProcess
  href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetActiveProcess
  name: GetActiveProcess()
  nameWithType: Entity<Process.EntityData>.GetActiveProcess()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Process.EntityData>.GetActiveProcess()
  nameWithType.vb: Entity(Of Process.EntityData).GetActiveProcess()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Process.EntityData).GetActiveProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.GetActiveProcess
    name: GetActiveProcess
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetActiveProcess
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.GetActiveProcess
    name: GetActiveProcess
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetActiveProcess
  - name: (
  - name: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.GetConfigurator
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.GetConfigurator
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}
  definition: VRBuilder.Core.Entity`1.GetConfigurator
  href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetConfigurator
  name: GetConfigurator()
  nameWithType: Entity<Process.EntityData>.GetConfigurator()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Process.EntityData>.GetConfigurator()
  nameWithType.vb: Entity(Of Process.EntityData).GetConfigurator()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Process.EntityData).GetConfigurator()
  spec.csharp:
  - uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.GetConfigurator
    name: GetConfigurator
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetConfigurator
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.GetConfigurator
    name: GetConfigurator
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetConfigurator
  - name: (
  - name: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}
  definition: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_Configure_VRBuilder_Core_Configuration_Modes_IMode_
  name: Configure(IMode)
  nameWithType: Entity<Process.EntityData>.Configure(IMode)
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Process.EntityData>.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  nameWithType.vb: Entity(Of Process.EntityData).Configure(IMode)
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Process.EntityData).Configure(VRBuilder.Core.Configuration.Modes.IMode)
  spec.csharp:
  - uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_Configure_VRBuilder_Core_Configuration_Modes_IMode_
  - name: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    href: VRBuilder.Core.Configuration.Modes.IMode.html
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_Configure_VRBuilder_Core_Configuration_Modes_IMode_
  - name: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    href: VRBuilder.Core.Configuration.Modes.IMode.html
  - name: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.Update
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.Update
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}
  definition: VRBuilder.Core.Entity`1.Update
  href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_Update
  name: Update()
  nameWithType: Entity<Process.EntityData>.Update()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Process.EntityData>.Update()
  nameWithType.vb: Entity(Of Process.EntityData).Update()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Process.EntityData).Update()
  spec.csharp:
  - uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.Update
    name: Update
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_Update
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.Update
    name: Update
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_Update
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Entity`1
  commentId: T:VRBuilder.Core.Entity`1
  href: VRBuilder.Core.Entity-1.html
  name: Entity<TData>
  nameWithType: Entity<TData>
  fullName: VRBuilder.Core.Entity<TData>
  nameWithType.vb: Entity(Of TData)
  fullName.vb: VRBuilder.Core.Entity(Of TData)
  name.vb: Entity(Of TData)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    href: VRBuilder.Core.Entity-1.html
  - name: <
  - name: TData
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.Entity`1
    name: Entity
    href: VRBuilder.Core.Entity-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TData
  - name: )
- uid: VRBuilder.Core.IDataOwner`1
  commentId: T:VRBuilder.Core.IDataOwner`1
  href: VRBuilder.Core.IDataOwner-1.html
  name: IDataOwner<TData>
  nameWithType: IDataOwner<TData>
  fullName: VRBuilder.Core.IDataOwner<TData>
  nameWithType.vb: IDataOwner(Of TData)
  fullName.vb: VRBuilder.Core.IDataOwner(Of TData)
  name.vb: IDataOwner(Of TData)
  spec.csharp:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    href: VRBuilder.Core.IDataOwner-1.html
  - name: <
  - name: TData
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.IDataOwner`1
    name: IDataOwner
    href: VRBuilder.Core.IDataOwner-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TData
  - name: )
- uid: VRBuilder.Core.IClonable`1
  commentId: T:VRBuilder.Core.IClonable`1
  href: VRBuilder.Core.IClonable-1.html
  name: IClonable<T>
  nameWithType: IClonable<T>
  fullName: VRBuilder.Core.IClonable<T>
  nameWithType.vb: IClonable(Of T)
  fullName.vb: VRBuilder.Core.IClonable(Of T)
  name.vb: IClonable(Of T)
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    href: VRBuilder.Core.IClonable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1
    name: IClonable
    href: VRBuilder.Core.IClonable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: VRBuilder.Core.Entity`1.Data
  commentId: P:VRBuilder.Core.Entity`1.Data
  href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_Data
  name: Data
  nameWithType: Entity<TData>.Data
  fullName: VRBuilder.Core.Entity<TData>.Data
  nameWithType.vb: Entity(Of TData).Data
  fullName.vb: VRBuilder.Core.Entity(Of TData).Data
- uid: VRBuilder.Core.Entity`1.LifeCycle
  commentId: P:VRBuilder.Core.Entity`1.LifeCycle
  href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_LifeCycle
  name: LifeCycle
  nameWithType: Entity<TData>.LifeCycle
  fullName: VRBuilder.Core.Entity<TData>.LifeCycle
  nameWithType.vb: Entity(Of TData).LifeCycle
  fullName.vb: VRBuilder.Core.Entity(Of TData).LifeCycle
- uid: VRBuilder.Core.Entity`1.Parent
  commentId: P:VRBuilder.Core.Entity`1.Parent
  href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_Parent
  name: Parent
  nameWithType: Entity<TData>.Parent
  fullName: VRBuilder.Core.Entity<TData>.Parent
  nameWithType.vb: Entity(Of TData).Parent
  fullName.vb: VRBuilder.Core.Entity(Of TData).Parent
- uid: VRBuilder.Core.Entity`1.GetActiveProcess
  commentId: M:VRBuilder.Core.Entity`1.GetActiveProcess
  href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetActiveProcess
  name: GetActiveProcess()
  nameWithType: Entity<TData>.GetActiveProcess()
  fullName: VRBuilder.Core.Entity<TData>.GetActiveProcess()
  nameWithType.vb: Entity(Of TData).GetActiveProcess()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetActiveProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetActiveProcess
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActiveProcess
    name: GetActiveProcess
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetActiveProcess
  - name: (
  - name: )
- uid: VRBuilder.Core.Entity`1.GetConfigurator
  commentId: M:VRBuilder.Core.Entity`1.GetConfigurator
  href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetConfigurator
  name: GetConfigurator()
  nameWithType: Entity<TData>.GetConfigurator()
  fullName: VRBuilder.Core.Entity<TData>.GetConfigurator()
  nameWithType.vb: Entity(Of TData).GetConfigurator()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetConfigurator()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetConfigurator
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetConfigurator
    name: GetConfigurator
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetConfigurator
  - name: (
  - name: )
- uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  commentId: M:VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_Configure_VRBuilder_Core_Configuration_Modes_IMode_
  name: Configure(IMode)
  nameWithType: Entity<TData>.Configure(IMode)
  fullName: VRBuilder.Core.Entity<TData>.Configure(VRBuilder.Core.Configuration.Modes.IMode)
  nameWithType.vb: Entity(Of TData).Configure(IMode)
  fullName.vb: VRBuilder.Core.Entity(Of TData).Configure(VRBuilder.Core.Configuration.Modes.IMode)
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_Configure_VRBuilder_Core_Configuration_Modes_IMode_
  - name: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    href: VRBuilder.Core.Configuration.Modes.IMode.html
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Configure(VRBuilder.Core.Configuration.Modes.IMode)
    name: Configure
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_Configure_VRBuilder_Core_Configuration_Modes_IMode_
  - name: (
  - uid: VRBuilder.Core.Configuration.Modes.IMode
    name: IMode
    href: VRBuilder.Core.Configuration.Modes.IMode.html
  - name: )
- uid: VRBuilder.Core.Entity`1.Update
  commentId: M:VRBuilder.Core.Entity`1.Update
  href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_Update
  name: Update()
  nameWithType: Entity<TData>.Update()
  fullName: VRBuilder.Core.Entity<TData>.Update()
  nameWithType.vb: Entity(Of TData).Update()
  fullName.vb: VRBuilder.Core.Entity(Of TData).Update()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_Update
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.Update
    name: Update
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_Update
  - name: (
  - name: )
- uid: VRBuilder.Core.Process.CurrentStep*
  commentId: Overload:VRBuilder.Core.Process.CurrentStep
  href: VRBuilder.Core.Process.html#VRBuilder_Core_Process_CurrentStep
  name: CurrentStep
  nameWithType: Process.CurrentStep
  fullName: VRBuilder.Core.Process.CurrentStep
- uid: VRBuilder.Core.IStep
  commentId: T:VRBuilder.Core.IStep
  parent: VRBuilder.Core
  href: VRBuilder.Core.IStep.html
  name: IStep
  nameWithType: IStep
  fullName: VRBuilder.Core.IStep
- uid: VRBuilder.Core.Process.ProcessMetadata*
  commentId: Overload:VRBuilder.Core.Process.ProcessMetadata
  href: VRBuilder.Core.Process.html#VRBuilder_Core_Process_ProcessMetadata
  name: ProcessMetadata
  nameWithType: Process.ProcessMetadata
  fullName: VRBuilder.Core.Process.ProcessMetadata
- uid: VRBuilder.Core.IProcess.ProcessMetadata
  commentId: P:VRBuilder.Core.IProcess.ProcessMetadata
  parent: VRBuilder.Core.IProcess
  href: VRBuilder.Core.IProcess.html#VRBuilder_Core_IProcess_ProcessMetadata
  name: ProcessMetadata
  nameWithType: IProcess.ProcessMetadata
  fullName: VRBuilder.Core.IProcess.ProcessMetadata
- uid: VRBuilder.Core.ProcessMetadata
  commentId: T:VRBuilder.Core.ProcessMetadata
  parent: VRBuilder.Core
  href: VRBuilder.Core.ProcessMetadata.html
  name: ProcessMetadata
  nameWithType: ProcessMetadata
  fullName: VRBuilder.Core.ProcessMetadata
- uid: VRBuilder.Core.Stage
  commentId: T:VRBuilder.Core.Stage
  parent: VRBuilder.Core
  href: VRBuilder.Core.Stage.html
  name: Stage
  nameWithType: Stage
  fullName: VRBuilder.Core.Stage
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.GetActivatingProcess
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.GetActivatingProcess
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}
  definition: VRBuilder.Core.Entity`1.GetActivatingProcess
  href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetActivatingProcess
  name: GetActivatingProcess()
  nameWithType: Entity<Process.EntityData>.GetActivatingProcess()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Process.EntityData>.GetActivatingProcess()
  nameWithType.vb: Entity(Of Process.EntityData).GetActivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Process.EntityData).GetActivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.GetActivatingProcess
    name: GetActivatingProcess
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetActivatingProcess
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.GetActivatingProcess
    name: GetActivatingProcess
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetActivatingProcess
  - name: (
  - name: )
- uid: VRBuilder.Core.Process.GetActivatingProcess*
  commentId: Overload:VRBuilder.Core.Process.GetActivatingProcess
  href: VRBuilder.Core.Process.html#VRBuilder_Core_Process_GetActivatingProcess
  name: GetActivatingProcess
  nameWithType: Process.GetActivatingProcess
  fullName: VRBuilder.Core.Process.GetActivatingProcess
- uid: VRBuilder.Core.IEntity.GetActivatingProcess
  commentId: M:VRBuilder.Core.IEntity.GetActivatingProcess
  parent: VRBuilder.Core.IEntity
  href: VRBuilder.Core.IEntity.html#VRBuilder_Core_IEntity_GetActivatingProcess
  name: GetActivatingProcess()
  nameWithType: IEntity.GetActivatingProcess()
  fullName: VRBuilder.Core.IEntity.GetActivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.IEntity.GetActivatingProcess
    name: GetActivatingProcess
    href: VRBuilder.Core.IEntity.html#VRBuilder_Core_IEntity_GetActivatingProcess
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.IEntity.GetActivatingProcess
    name: GetActivatingProcess
    href: VRBuilder.Core.IEntity.html#VRBuilder_Core_IEntity_GetActivatingProcess
  - name: (
  - name: )
- uid: VRBuilder.Core.IStageProcess
  commentId: T:VRBuilder.Core.IStageProcess
  parent: VRBuilder.Core
  href: VRBuilder.Core.IStageProcess.html
  name: IStageProcess
  nameWithType: IStageProcess
  fullName: VRBuilder.Core.IStageProcess
- uid: VRBuilder.Core.Entity`1.GetActivatingProcess
  commentId: M:VRBuilder.Core.Entity`1.GetActivatingProcess
  href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetActivatingProcess
  name: GetActivatingProcess()
  nameWithType: Entity<TData>.GetActivatingProcess()
  fullName: VRBuilder.Core.Entity<TData>.GetActivatingProcess()
  nameWithType.vb: Entity(Of TData).GetActivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetActivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetActivatingProcess
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetActivatingProcess
    name: GetActivatingProcess
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetActivatingProcess
  - name: (
  - name: )
- uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.GetDeactivatingProcess
  parent: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}
  definition: VRBuilder.Core.Entity`1.GetDeactivatingProcess
  href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetDeactivatingProcess
  name: GetDeactivatingProcess()
  nameWithType: Entity<Process.EntityData>.GetDeactivatingProcess()
  fullName: VRBuilder.Core.Entity<VRBuilder.Core.Process.EntityData>.GetDeactivatingProcess()
  nameWithType.vb: Entity(Of Process.EntityData).GetDeactivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of VRBuilder.Core.Process.EntityData).GetDeactivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.GetDeactivatingProcess
    name: GetDeactivatingProcess
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetDeactivatingProcess
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Entity{VRBuilder.Core.Process.EntityData}.GetDeactivatingProcess
    name: GetDeactivatingProcess
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetDeactivatingProcess
  - name: (
  - name: )
- uid: VRBuilder.Core.Process.GetDeactivatingProcess*
  commentId: Overload:VRBuilder.Core.Process.GetDeactivatingProcess
  href: VRBuilder.Core.Process.html#VRBuilder_Core_Process_GetDeactivatingProcess
  name: GetDeactivatingProcess
  nameWithType: Process.GetDeactivatingProcess
  fullName: VRBuilder.Core.Process.GetDeactivatingProcess
- uid: VRBuilder.Core.IEntity.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.IEntity.GetDeactivatingProcess
  parent: VRBuilder.Core.IEntity
  href: VRBuilder.Core.IEntity.html#VRBuilder_Core_IEntity_GetDeactivatingProcess
  name: GetDeactivatingProcess()
  nameWithType: IEntity.GetDeactivatingProcess()
  fullName: VRBuilder.Core.IEntity.GetDeactivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.IEntity.GetDeactivatingProcess
    name: GetDeactivatingProcess
    href: VRBuilder.Core.IEntity.html#VRBuilder_Core_IEntity_GetDeactivatingProcess
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.IEntity.GetDeactivatingProcess
    name: GetDeactivatingProcess
    href: VRBuilder.Core.IEntity.html#VRBuilder_Core_IEntity_GetDeactivatingProcess
  - name: (
  - name: )
- uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
  commentId: M:VRBuilder.Core.Entity`1.GetDeactivatingProcess
  href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetDeactivatingProcess
  name: GetDeactivatingProcess()
  nameWithType: Entity<TData>.GetDeactivatingProcess()
  fullName: VRBuilder.Core.Entity<TData>.GetDeactivatingProcess()
  nameWithType.vb: Entity(Of TData).GetDeactivatingProcess()
  fullName.vb: VRBuilder.Core.Entity(Of TData).GetDeactivatingProcess()
  spec.csharp:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetDeactivatingProcess
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.Entity`1.GetDeactivatingProcess
    name: GetDeactivatingProcess
    href: VRBuilder.Core.Entity-1.html#VRBuilder_Core_Entity_1_GetDeactivatingProcess
  - name: (
  - name: )
- uid: VRBuilder.Core.Process.Clone*
  commentId: Overload:VRBuilder.Core.Process.Clone
  href: VRBuilder.Core.Process.html#VRBuilder_Core_Process_Clone
  name: Clone
  nameWithType: Process.Clone
  fullName: VRBuilder.Core.Process.Clone
- uid: VRBuilder.Core.IClonable{VRBuilder.Core.IProcess}.Clone
  commentId: M:VRBuilder.Core.IClonable{VRBuilder.Core.IProcess}.Clone
  parent: VRBuilder.Core.IClonable{VRBuilder.Core.IProcess}
  definition: VRBuilder.Core.IClonable`1.Clone
  href: VRBuilder.Core.IClonable-1.html#VRBuilder_Core_IClonable_1_Clone
  name: Clone()
  nameWithType: IClonable<IProcess>.Clone()
  fullName: VRBuilder.Core.IClonable<VRBuilder.Core.IProcess>.Clone()
  nameWithType.vb: IClonable(Of IProcess).Clone()
  fullName.vb: VRBuilder.Core.IClonable(Of VRBuilder.Core.IProcess).Clone()
  spec.csharp:
  - uid: VRBuilder.Core.IClonable{VRBuilder.Core.IProcess}.Clone
    name: Clone
    href: VRBuilder.Core.IClonable-1.html#VRBuilder_Core_IClonable_1_Clone
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.IClonable{VRBuilder.Core.IProcess}.Clone
    name: Clone
    href: VRBuilder.Core.IClonable-1.html#VRBuilder_Core_IClonable_1_Clone
  - name: (
  - name: )
- uid: VRBuilder.Core.IClonable`1.Clone
  commentId: M:VRBuilder.Core.IClonable`1.Clone
  href: VRBuilder.Core.IClonable-1.html#VRBuilder_Core_IClonable_1_Clone
  name: Clone()
  nameWithType: IClonable<T>.Clone()
  fullName: VRBuilder.Core.IClonable<T>.Clone()
  nameWithType.vb: IClonable(Of T).Clone()
  fullName.vb: VRBuilder.Core.IClonable(Of T).Clone()
  spec.csharp:
  - uid: VRBuilder.Core.IClonable`1.Clone
    name: Clone
    href: VRBuilder.Core.IClonable-1.html#VRBuilder_Core_IClonable_1_Clone
  - name: (
  - name: )
  spec.vb:
  - uid: VRBuilder.Core.IClonable`1.Clone
    name: Clone
    href: VRBuilder.Core.IClonable-1.html#VRBuilder_Core_IClonable_1_Clone
  - name: (
  - name: )
- uid: VRBuilder.Core.Process.#ctor*
  commentId: Overload:VRBuilder.Core.Process.#ctor
  href: VRBuilder.Core.Process.html#VRBuilder_Core_Process__ctor
  name: Process
  nameWithType: Process.Process
  fullName: VRBuilder.Core.Process.Process
  nameWithType.vb: Process.New
  fullName.vb: VRBuilder.Core.Process.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: VRBuilder.Core.IChapter
  commentId: T:VRBuilder.Core.IChapter
  parent: VRBuilder.Core
  href: VRBuilder.Core.IChapter.html
  name: IChapter
  nameWithType: IChapter
  fullName: VRBuilder.Core.IChapter
- uid: System.Collections.Generic.IEnumerable{VRBuilder.Core.IChapter}
  commentId: T:System.Collections.Generic.IEnumerable{VRBuilder.Core.IChapter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IChapter>
  nameWithType: IEnumerable<IChapter>
  fullName: System.Collections.Generic.IEnumerable<VRBuilder.Core.IChapter>
  nameWithType.vb: IEnumerable(Of IChapter)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VRBuilder.Core.IChapter)
  name.vb: IEnumerable(Of IChapter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    href: VRBuilder.Core.IChapter.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    href: VRBuilder.Core.IChapter.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
