### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.StageProcess`1
  commentId: T:VRBuilder.Core.StageProcess`1
  id: StageProcess`1
  parent: VRBuilder.Core
  children:
  - VRBuilder.Core.StageProcess`1.#ctor(`0,VRBuilder.Core.IEntity)
  - VRBuilder.Core.StageProcess`1.Data
  - VRBuilder.Core.StageProcess`1.End
  - VRBuilder.Core.StageProcess`1.FastForward
  - VRBuilder.Core.StageProcess`1.Outer
  - VRBuilder.Core.StageProcess`1.Start
  - VRBuilder.Core.StageProcess`1.Update
  langs:
  - csharp
  - vb
  name: StageProcess<TData>
  nameWithType: StageProcess<TData>
  fullName: VRBuilder.Core.StageProcess<TData>
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/StageProcess.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StageProcess
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/StageProcess.cs
    startLine: 11
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nA base implementation of a <xref href=\"VRBuilder.Core.IStageProcess\" data-throw-if-not-resolved=\"false\"></xref> which provides access to its entity&apos;s data.\n"
  example: []
  syntax:
    content: 'public abstract class StageProcess<TData> : IStageProcess where TData : class, IData'
    typeParameters:
    - id: TData
    content.vb: >-
      Public MustInherit Class StageProcess(Of TData As {Class, IData})

          Implements IStageProcess
  inheritance:
  - System.Object
  derivedClasses:
  - VRBuilder.Core.Conditions.BaseActiveProcessOverCompletable`1
  - VRBuilder.Core.Conditions.ObjectInTargetActiveProcess`1
  - VRBuilder.Core.EntityOwners.EntityIteratingProcess`2
  - VRBuilder.Core.EntityOwners.StopEntityIteratingProcess`1
  - VRBuilder.Core.InstantProcess`1
  - VRBuilder.VideoTools.Behaviors.PlayAnimationClipBehavior.ActivatingProcess
  - VRBuilder.VideoTools.Behaviors.PlayVideoBehavior.ActivatingProcess
  implements:
  - VRBuilder.Core.IStageProcess
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: StageProcess(Of TData)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: VRBuilder.Core.StageProcess(Of TData)
  name.vb: StageProcess(Of TData)
- uid: VRBuilder.Core.StageProcess`1.Data
  commentId: P:VRBuilder.Core.StageProcess`1.Data
  id: Data
  parent: VRBuilder.Core.StageProcess`1
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: StageProcess<TData>.Data
  fullName: VRBuilder.Core.StageProcess<TData>.Data
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/StageProcess.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Data
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/StageProcess.cs
    startLine: 16
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nThe entity&apos;s data.\n"
  example: []
  syntax:
    content: protected TData Data { get; }
    parameters: []
    return:
      type: '{TData}'
    content.vb: Protected ReadOnly Property Data As TData
  overload: VRBuilder.Core.StageProcess`1.Data*
  nameWithType.vb: StageProcess(Of TData).Data
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: VRBuilder.Core.StageProcess(Of TData).Data
- uid: VRBuilder.Core.StageProcess`1.Outer
  commentId: P:VRBuilder.Core.StageProcess`1.Outer
  id: Outer
  parent: VRBuilder.Core.StageProcess`1
  langs:
  - csharp
  - vb
  name: Outer
  nameWithType: StageProcess<TData>.Outer
  fullName: VRBuilder.Core.StageProcess<TData>.Outer
  type: Property
  source:
    remote:
      path: Source/Core/Runtime/StageProcess.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Outer
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/StageProcess.cs
    startLine: 21
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  summary: "\nThe entity owning the data.\n"
  example: []
  syntax:
    content: protected IEntity Outer { get; }
    parameters: []
    return:
      type: VRBuilder.Core.IEntity
    content.vb: Protected ReadOnly Property Outer As IEntity
  overload: VRBuilder.Core.StageProcess`1.Outer*
  nameWithType.vb: StageProcess(Of TData).Outer
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: VRBuilder.Core.StageProcess(Of TData).Outer
- uid: VRBuilder.Core.StageProcess`1.#ctor(`0,VRBuilder.Core.IEntity)
  commentId: M:VRBuilder.Core.StageProcess`1.#ctor(`0,VRBuilder.Core.IEntity)
  id: '#ctor(`0,VRBuilder.Core.IEntity)'
  parent: VRBuilder.Core.StageProcess`1
  langs:
  - csharp
  - vb
  name: StageProcess(TData, IEntity)
  nameWithType: StageProcess<TData>.StageProcess(TData, IEntity)
  fullName: VRBuilder.Core.StageProcess<TData>.StageProcess(TData, VRBuilder.Core.IEntity)
  type: Constructor
  source:
    remote:
      path: Source/Core/Runtime/StageProcess.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/StageProcess.cs
    startLine: 23
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  syntax:
    content: protected StageProcess(TData data, IEntity outer = null)
    parameters:
    - id: data
      type: '{TData}'
    - id: outer
      type: VRBuilder.Core.IEntity
    content.vb: Protected Sub New(data As TData, outer As IEntity = Nothing)
  overload: VRBuilder.Core.StageProcess`1.#ctor*
  nameWithType.vb: StageProcess(Of TData).StageProcess(TData, IEntity)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: VRBuilder.Core.StageProcess(Of TData).StageProcess(TData, VRBuilder.Core.IEntity)
- uid: VRBuilder.Core.StageProcess`1.Start
  commentId: M:VRBuilder.Core.StageProcess`1.Start
  id: Start
  parent: VRBuilder.Core.StageProcess`1
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: StageProcess<TData>.Start()
  fullName: VRBuilder.Core.StageProcess<TData>.Start()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/StageProcess.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Start
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/StageProcess.cs
    startLine: 30
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: public abstract void Start()
    content.vb: Public MustOverride Sub Start
  overload: VRBuilder.Core.StageProcess`1.Start*
  implements:
  - VRBuilder.Core.IStageProcess.Start
  nameWithType.vb: StageProcess(Of TData).Start()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: VRBuilder.Core.StageProcess(Of TData).Start()
- uid: VRBuilder.Core.StageProcess`1.Update
  commentId: M:VRBuilder.Core.StageProcess`1.Update
  id: Update
  parent: VRBuilder.Core.StageProcess`1
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: StageProcess<TData>.Update()
  fullName: VRBuilder.Core.StageProcess<TData>.Update()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/StageProcess.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Update
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/StageProcess.cs
    startLine: 33
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: public abstract IEnumerator Update()
    return:
      type: System.Collections.IEnumerator
    content.vb: Public MustOverride Function Update As IEnumerator
  overload: VRBuilder.Core.StageProcess`1.Update*
  implements:
  - VRBuilder.Core.IStageProcess.Update
  nameWithType.vb: StageProcess(Of TData).Update()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: VRBuilder.Core.StageProcess(Of TData).Update()
- uid: VRBuilder.Core.StageProcess`1.End
  commentId: M:VRBuilder.Core.StageProcess`1.End
  id: End
  parent: VRBuilder.Core.StageProcess`1
  langs:
  - csharp
  - vb
  name: End()
  nameWithType: StageProcess<TData>.End()
  fullName: VRBuilder.Core.StageProcess<TData>.End()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/StageProcess.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: End
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/StageProcess.cs
    startLine: 36
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: public abstract void End()
    content.vb: Public MustOverride Sub
  overload: VRBuilder.Core.StageProcess`1.End*
  implements:
  - VRBuilder.Core.IStageProcess.End
  nameWithType.vb: StageProcess(Of TData).End()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: VRBuilder.Core.StageProcess(Of TData).End()
- uid: VRBuilder.Core.StageProcess`1.FastForward
  commentId: M:VRBuilder.Core.StageProcess`1.FastForward
  id: FastForward
  parent: VRBuilder.Core.StageProcess`1
  langs:
  - csharp
  - vb
  name: FastForward()
  nameWithType: StageProcess<TData>.FastForward()
  fullName: VRBuilder.Core.StageProcess<TData>.FastForward()
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/StageProcess.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: FastForward
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/StageProcess.cs
    startLine: 39
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core
  example: []
  syntax:
    content: public abstract void FastForward()
    content.vb: Public MustOverride Sub FastForward
  overload: VRBuilder.Core.StageProcess`1.FastForward*
  implements:
  - VRBuilder.Core.IStageProcess.FastForward
  nameWithType.vb: StageProcess(Of TData).FastForward()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: VRBuilder.Core.StageProcess(Of TData).FastForward()
references:
- uid: VRBuilder.Core.IStageProcess
  commentId: T:VRBuilder.Core.IStageProcess
  parent: VRBuilder.Core
  name: IStageProcess
  nameWithType: IStageProcess
  fullName: VRBuilder.Core.IStageProcess
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.StageProcess`1.Data*
  commentId: Overload:VRBuilder.Core.StageProcess`1.Data
  name: Data
  nameWithType: StageProcess<TData>.Data
  fullName: VRBuilder.Core.StageProcess<TData>.Data
  nameWithType.vb: StageProcess(Of TData).Data
  fullName.vb: VRBuilder.Core.StageProcess(Of TData).Data
- uid: '{TData}'
  commentId: '!:TData'
  definition: TData
  name: TData
  nameWithType: TData
  fullName: TData
- uid: TData
  name: TData
  nameWithType: TData
  fullName: TData
- uid: VRBuilder.Core.StageProcess`1.Outer*
  commentId: Overload:VRBuilder.Core.StageProcess`1.Outer
  name: Outer
  nameWithType: StageProcess<TData>.Outer
  fullName: VRBuilder.Core.StageProcess<TData>.Outer
  nameWithType.vb: StageProcess(Of TData).Outer
  fullName.vb: VRBuilder.Core.StageProcess(Of TData).Outer
- uid: VRBuilder.Core.IEntity
  commentId: T:VRBuilder.Core.IEntity
  parent: VRBuilder.Core
  name: IEntity
  nameWithType: IEntity
  fullName: VRBuilder.Core.IEntity
- uid: VRBuilder.Core.StageProcess`1.#ctor*
  commentId: Overload:VRBuilder.Core.StageProcess`1.#ctor
  name: StageProcess
  nameWithType: StageProcess<TData>.StageProcess
  fullName: VRBuilder.Core.StageProcess<TData>.StageProcess
  nameWithType.vb: StageProcess(Of TData).StageProcess
  fullName.vb: VRBuilder.Core.StageProcess(Of TData).StageProcess
- uid: VRBuilder.Core.StageProcess`1.Start*
  commentId: Overload:VRBuilder.Core.StageProcess`1.Start
  name: Start
  nameWithType: StageProcess<TData>.Start
  fullName: VRBuilder.Core.StageProcess<TData>.Start
  nameWithType.vb: StageProcess(Of TData).Start
  fullName.vb: VRBuilder.Core.StageProcess(Of TData).Start
- uid: VRBuilder.Core.IStageProcess.Start
  commentId: M:VRBuilder.Core.IStageProcess.Start
  parent: VRBuilder.Core.IStageProcess
  name: Start()
  nameWithType: IStageProcess.Start()
  fullName: VRBuilder.Core.IStageProcess.Start()
  spec.csharp:
  - uid: VRBuilder.Core.IStageProcess.Start
    name: Start
    nameWithType: IStageProcess.Start
    fullName: VRBuilder.Core.IStageProcess.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IStageProcess.Start
    name: Start
    nameWithType: IStageProcess.Start
    fullName: VRBuilder.Core.IStageProcess.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.StageProcess`1.Update*
  commentId: Overload:VRBuilder.Core.StageProcess`1.Update
  name: Update
  nameWithType: StageProcess<TData>.Update
  fullName: VRBuilder.Core.StageProcess<TData>.Update
  nameWithType.vb: StageProcess(Of TData).Update
  fullName.vb: VRBuilder.Core.StageProcess(Of TData).Update
- uid: VRBuilder.Core.IStageProcess.Update
  commentId: M:VRBuilder.Core.IStageProcess.Update
  parent: VRBuilder.Core.IStageProcess
  name: Update()
  nameWithType: IStageProcess.Update()
  fullName: VRBuilder.Core.IStageProcess.Update()
  spec.csharp:
  - uid: VRBuilder.Core.IStageProcess.Update
    name: Update
    nameWithType: IStageProcess.Update
    fullName: VRBuilder.Core.IStageProcess.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IStageProcess.Update
    name: Update
    nameWithType: IStageProcess.Update
    fullName: VRBuilder.Core.IStageProcess.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: VRBuilder.Core.StageProcess`1.End*
  commentId: Overload:VRBuilder.Core.StageProcess`1.End
  name: End
  nameWithType: StageProcess<TData>.End
  fullName: VRBuilder.Core.StageProcess<TData>.End
  nameWithType.vb: StageProcess(Of TData).End
  fullName.vb: VRBuilder.Core.StageProcess(Of TData).End
- uid: VRBuilder.Core.IStageProcess.End
  commentId: M:VRBuilder.Core.IStageProcess.End
  parent: VRBuilder.Core.IStageProcess
  name: End()
  nameWithType: IStageProcess.End()
  fullName: VRBuilder.Core.IStageProcess.End()
  spec.csharp:
  - uid: VRBuilder.Core.IStageProcess.End
    name: End
    nameWithType: IStageProcess.End
    fullName: VRBuilder.Core.IStageProcess.End
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IStageProcess.End
    name: End
    nameWithType: IStageProcess.End
    fullName: VRBuilder.Core.IStageProcess.End
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.StageProcess`1.FastForward*
  commentId: Overload:VRBuilder.Core.StageProcess`1.FastForward
  name: FastForward
  nameWithType: StageProcess<TData>.FastForward
  fullName: VRBuilder.Core.StageProcess<TData>.FastForward
  nameWithType.vb: StageProcess(Of TData).FastForward
  fullName.vb: VRBuilder.Core.StageProcess(Of TData).FastForward
- uid: VRBuilder.Core.IStageProcess.FastForward
  commentId: M:VRBuilder.Core.IStageProcess.FastForward
  parent: VRBuilder.Core.IStageProcess
  name: FastForward()
  nameWithType: IStageProcess.FastForward()
  fullName: VRBuilder.Core.IStageProcess.FastForward()
  spec.csharp:
  - uid: VRBuilder.Core.IStageProcess.FastForward
    name: FastForward
    nameWithType: IStageProcess.FastForward
    fullName: VRBuilder.Core.IStageProcess.FastForward
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Core.IStageProcess.FastForward
    name: FastForward
    nameWithType: IStageProcess.FastForward
    fullName: VRBuilder.Core.IStageProcess.FastForward
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
