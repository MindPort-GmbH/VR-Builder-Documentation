### YamlMime:ManagedReference
items:
- uid: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState
  commentId: T:VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState
  id: ActionBasedControllerManager.ControllerState
  parent: VRBuilder.XRInteraction
  children:
  - VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.#ctor(VRBuilder.XRInteraction.ActionBasedControllerManager.StateID)
  - VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.Enabled
  - VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.ID
  - VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnEnter
  - VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnExit
  - VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnUpdate
  langs:
  - csharp
  - vb
  name: ActionBasedControllerManager.ControllerState
  nameWithType: ActionBasedControllerManager.ControllerState
  fullName: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState
  type: Class
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/ActionBasedControllerManager.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ControllerState
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/ActionBasedControllerManager.cs
    startLine: 50
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: Use this class to create a controller state and set up its enter, update, and exit events.
  example: []
  syntax:
    content: >-
      [Serializable]

      public class ActionBasedControllerManager.ControllerState
    content.vb: >-
      <Serializable>

      Public Class ActionBasedControllerManager.ControllerState
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.Enabled
  commentId: P:VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.Enabled
  id: Enabled
  parent: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: ActionBasedControllerManager.ControllerState.Enabled
  fullName: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.Enabled
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/ActionBasedControllerManager.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Enabled
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/ActionBasedControllerManager.cs
    startLine: 62
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: >-
    Sets the controller state to be active.

    For the default states, setting this value to true will automatically update their <xref href="VRBuilder.XRInteraction.ActionBasedControllerManager.StateUpdateEvent" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Enabled As Boolean
  overload: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.Enabled*
- uid: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.ID
  commentId: P:VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.ID
  id: ID
  parent: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: ActionBasedControllerManager.ControllerState.ID
  fullName: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.ID
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/ActionBasedControllerManager.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ID
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/ActionBasedControllerManager.cs
    startLine: 75
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: Sets the identifier of the <xref href="VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState" data-throw-if-not-resolved="false"></xref> from all the optional Controller States that the <xref href="VRBuilder.XRInteraction.ActionBasedControllerManager" data-throw-if-not-resolved="false"></xref> holds.
  example: []
  syntax:
    content: public ActionBasedControllerManager.StateID ID { get; set; }
    parameters: []
    return:
      type: VRBuilder.XRInteraction.ActionBasedControllerManager.StateID
    content.vb: Public Property ID As ActionBasedControllerManager.StateID
  overload: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.ID*
- uid: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnEnter
  commentId: P:VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnEnter
  id: OnEnter
  parent: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState
  langs:
  - csharp
  - vb
  name: OnEnter
  nameWithType: ActionBasedControllerManager.ControllerState.OnEnter
  fullName: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnEnter
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/ActionBasedControllerManager.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnEnter
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/ActionBasedControllerManager.cs
    startLine: 87
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: The <xref href="VRBuilder.XRInteraction.ActionBasedControllerManager.StateEnterEvent" data-throw-if-not-resolved="false"></xref> that will be invoked when entering the controller state.
  example: []
  syntax:
    content: public ActionBasedControllerManager.StateEnterEvent OnEnter { get; set; }
    parameters: []
    return:
      type: VRBuilder.XRInteraction.ActionBasedControllerManager.StateEnterEvent
    content.vb: Public Property OnEnter As ActionBasedControllerManager.StateEnterEvent
  overload: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnEnter*
- uid: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnUpdate
  commentId: P:VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnUpdate
  id: OnUpdate
  parent: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState
  langs:
  - csharp
  - vb
  name: OnUpdate
  nameWithType: ActionBasedControllerManager.ControllerState.OnUpdate
  fullName: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnUpdate
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/ActionBasedControllerManager.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnUpdate
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/ActionBasedControllerManager.cs
    startLine: 99
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: The <xref href="VRBuilder.XRInteraction.ActionBasedControllerManager.StateUpdateEvent" data-throw-if-not-resolved="false"></xref> that will be invoked when updating the controller state.
  example: []
  syntax:
    content: public ActionBasedControllerManager.StateUpdateEvent OnUpdate { get; set; }
    parameters: []
    return:
      type: VRBuilder.XRInteraction.ActionBasedControllerManager.StateUpdateEvent
    content.vb: Public Property OnUpdate As ActionBasedControllerManager.StateUpdateEvent
  overload: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnUpdate*
- uid: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnExit
  commentId: P:VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnExit
  id: OnExit
  parent: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState
  langs:
  - csharp
  - vb
  name: OnExit
  nameWithType: ActionBasedControllerManager.ControllerState.OnExit
  fullName: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnExit
  type: Property
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/ActionBasedControllerManager.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnExit
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/ActionBasedControllerManager.cs
    startLine: 111
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  summary: The <xref href="VRBuilder.XRInteraction.ActionBasedControllerManager.StateExitEvent" data-throw-if-not-resolved="false"></xref> that will be invoked when exiting the controller state.
  example: []
  syntax:
    content: public ActionBasedControllerManager.StateExitEvent OnExit { get; set; }
    parameters: []
    return:
      type: VRBuilder.XRInteraction.ActionBasedControllerManager.StateExitEvent
    content.vb: Public Property OnExit As ActionBasedControllerManager.StateExitEvent
  overload: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnExit*
- uid: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.#ctor(VRBuilder.XRInteraction.ActionBasedControllerManager.StateID)
  commentId: M:VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.#ctor(VRBuilder.XRInteraction.ActionBasedControllerManager.StateID)
  id: '#ctor(VRBuilder.XRInteraction.ActionBasedControllerManager.StateID)'
  parent: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState
  langs:
  - csharp
  - vb
  name: ControllerState(StateID)
  nameWithType: ActionBasedControllerManager.ControllerState.ControllerState(ActionBasedControllerManager.StateID)
  fullName: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.ControllerState(VRBuilder.XRInteraction.ActionBasedControllerManager.StateID)
  type: Constructor
  source:
    remote:
      path: Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/ActionBasedControllerManager.cs
      branch: release/v4.1.1
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/XR-Interaction-Component/Source/Runtime/Interaction/Action-based/ActionBasedControllerManager.cs
    startLine: 117
  assemblies:
  - VRBuilder.XRInteraction
  namespace: VRBuilder.XRInteraction
  syntax:
    content: public ControllerState(ActionBasedControllerManager.StateID defaultId = StateID.None)
    parameters:
    - id: defaultId
      type: VRBuilder.XRInteraction.ActionBasedControllerManager.StateID
    content.vb: Public Sub New(defaultId As ActionBasedControllerManager.StateID = StateID.None)
  overload: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.#ctor*
  nameWithType.vb: ActionBasedControllerManager.ControllerState.New(ActionBasedControllerManager.StateID)
  fullName.vb: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.New(VRBuilder.XRInteraction.ActionBasedControllerManager.StateID)
  name.vb: New(StateID)
references:
- uid: VRBuilder.XRInteraction
  commentId: N:VRBuilder.XRInteraction
  href: VRBuilder.html
  name: VRBuilder.XRInteraction
  nameWithType: VRBuilder.XRInteraction
  fullName: VRBuilder.XRInteraction
  spec.csharp:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.XRInteraction
    name: XRInteraction
    href: VRBuilder.XRInteraction.html
  spec.vb:
  - uid: VRBuilder
    name: VRBuilder
    href: VRBuilder.html
  - name: .
  - uid: VRBuilder.XRInteraction
    name: XRInteraction
    href: VRBuilder.XRInteraction.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.XRInteraction.ActionBasedControllerManager.StateUpdateEvent
  commentId: T:VRBuilder.XRInteraction.ActionBasedControllerManager.StateUpdateEvent
  parent: VRBuilder.XRInteraction
  href: VRBuilder.XRInteraction.ActionBasedControllerManager.html
  name: ActionBasedControllerManager.StateUpdateEvent
  nameWithType: ActionBasedControllerManager.StateUpdateEvent
  fullName: VRBuilder.XRInteraction.ActionBasedControllerManager.StateUpdateEvent
  spec.csharp:
  - uid: VRBuilder.XRInteraction.ActionBasedControllerManager
    name: ActionBasedControllerManager
    href: VRBuilder.XRInteraction.ActionBasedControllerManager.html
  - name: .
  - uid: VRBuilder.XRInteraction.ActionBasedControllerManager.StateUpdateEvent
    name: StateUpdateEvent
    href: VRBuilder.XRInteraction.ActionBasedControllerManager.StateUpdateEvent.html
  spec.vb:
  - uid: VRBuilder.XRInteraction.ActionBasedControllerManager
    name: ActionBasedControllerManager
    href: VRBuilder.XRInteraction.ActionBasedControllerManager.html
  - name: .
  - uid: VRBuilder.XRInteraction.ActionBasedControllerManager.StateUpdateEvent
    name: StateUpdateEvent
    href: VRBuilder.XRInteraction.ActionBasedControllerManager.StateUpdateEvent.html
- uid: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.Enabled*
  commentId: Overload:VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.Enabled
  href: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.html#VRBuilder_XRInteraction_ActionBasedControllerManager_ControllerState_Enabled
  name: Enabled
  nameWithType: ActionBasedControllerManager.ControllerState.Enabled
  fullName: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.Enabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState
  commentId: T:VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState
  parent: VRBuilder.XRInteraction
  href: VRBuilder.XRInteraction.ActionBasedControllerManager.html
  name: ActionBasedControllerManager.ControllerState
  nameWithType: ActionBasedControllerManager.ControllerState
  fullName: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState
  spec.csharp:
  - uid: VRBuilder.XRInteraction.ActionBasedControllerManager
    name: ActionBasedControllerManager
    href: VRBuilder.XRInteraction.ActionBasedControllerManager.html
  - name: .
  - uid: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState
    name: ControllerState
    href: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.html
  spec.vb:
  - uid: VRBuilder.XRInteraction.ActionBasedControllerManager
    name: ActionBasedControllerManager
    href: VRBuilder.XRInteraction.ActionBasedControllerManager.html
  - name: .
  - uid: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState
    name: ControllerState
    href: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.html
- uid: VRBuilder.XRInteraction.ActionBasedControllerManager
  commentId: T:VRBuilder.XRInteraction.ActionBasedControllerManager
  href: VRBuilder.XRInteraction.ActionBasedControllerManager.html
  name: ActionBasedControllerManager
  nameWithType: ActionBasedControllerManager
  fullName: VRBuilder.XRInteraction.ActionBasedControllerManager
- uid: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.ID*
  commentId: Overload:VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.ID
  href: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.html#VRBuilder_XRInteraction_ActionBasedControllerManager_ControllerState_ID
  name: ID
  nameWithType: ActionBasedControllerManager.ControllerState.ID
  fullName: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.ID
- uid: VRBuilder.XRInteraction.ActionBasedControllerManager.StateID
  commentId: T:VRBuilder.XRInteraction.ActionBasedControllerManager.StateID
  parent: VRBuilder.XRInteraction
  href: VRBuilder.XRInteraction.ActionBasedControllerManager.html
  name: ActionBasedControllerManager.StateID
  nameWithType: ActionBasedControllerManager.StateID
  fullName: VRBuilder.XRInteraction.ActionBasedControllerManager.StateID
  spec.csharp:
  - uid: VRBuilder.XRInteraction.ActionBasedControllerManager
    name: ActionBasedControllerManager
    href: VRBuilder.XRInteraction.ActionBasedControllerManager.html
  - name: .
  - uid: VRBuilder.XRInteraction.ActionBasedControllerManager.StateID
    name: StateID
    href: VRBuilder.XRInteraction.ActionBasedControllerManager.StateID.html
  spec.vb:
  - uid: VRBuilder.XRInteraction.ActionBasedControllerManager
    name: ActionBasedControllerManager
    href: VRBuilder.XRInteraction.ActionBasedControllerManager.html
  - name: .
  - uid: VRBuilder.XRInteraction.ActionBasedControllerManager.StateID
    name: StateID
    href: VRBuilder.XRInteraction.ActionBasedControllerManager.StateID.html
- uid: VRBuilder.XRInteraction.ActionBasedControllerManager.StateEnterEvent
  commentId: T:VRBuilder.XRInteraction.ActionBasedControllerManager.StateEnterEvent
  parent: VRBuilder.XRInteraction
  href: VRBuilder.XRInteraction.ActionBasedControllerManager.html
  name: ActionBasedControllerManager.StateEnterEvent
  nameWithType: ActionBasedControllerManager.StateEnterEvent
  fullName: VRBuilder.XRInteraction.ActionBasedControllerManager.StateEnterEvent
  spec.csharp:
  - uid: VRBuilder.XRInteraction.ActionBasedControllerManager
    name: ActionBasedControllerManager
    href: VRBuilder.XRInteraction.ActionBasedControllerManager.html
  - name: .
  - uid: VRBuilder.XRInteraction.ActionBasedControllerManager.StateEnterEvent
    name: StateEnterEvent
    href: VRBuilder.XRInteraction.ActionBasedControllerManager.StateEnterEvent.html
  spec.vb:
  - uid: VRBuilder.XRInteraction.ActionBasedControllerManager
    name: ActionBasedControllerManager
    href: VRBuilder.XRInteraction.ActionBasedControllerManager.html
  - name: .
  - uid: VRBuilder.XRInteraction.ActionBasedControllerManager.StateEnterEvent
    name: StateEnterEvent
    href: VRBuilder.XRInteraction.ActionBasedControllerManager.StateEnterEvent.html
- uid: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnEnter*
  commentId: Overload:VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnEnter
  href: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.html#VRBuilder_XRInteraction_ActionBasedControllerManager_ControllerState_OnEnter
  name: OnEnter
  nameWithType: ActionBasedControllerManager.ControllerState.OnEnter
  fullName: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnEnter
- uid: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnUpdate*
  commentId: Overload:VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnUpdate
  href: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.html#VRBuilder_XRInteraction_ActionBasedControllerManager_ControllerState_OnUpdate
  name: OnUpdate
  nameWithType: ActionBasedControllerManager.ControllerState.OnUpdate
  fullName: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnUpdate
- uid: VRBuilder.XRInteraction.ActionBasedControllerManager.StateExitEvent
  commentId: T:VRBuilder.XRInteraction.ActionBasedControllerManager.StateExitEvent
  parent: VRBuilder.XRInteraction
  href: VRBuilder.XRInteraction.ActionBasedControllerManager.html
  name: ActionBasedControllerManager.StateExitEvent
  nameWithType: ActionBasedControllerManager.StateExitEvent
  fullName: VRBuilder.XRInteraction.ActionBasedControllerManager.StateExitEvent
  spec.csharp:
  - uid: VRBuilder.XRInteraction.ActionBasedControllerManager
    name: ActionBasedControllerManager
    href: VRBuilder.XRInteraction.ActionBasedControllerManager.html
  - name: .
  - uid: VRBuilder.XRInteraction.ActionBasedControllerManager.StateExitEvent
    name: StateExitEvent
    href: VRBuilder.XRInteraction.ActionBasedControllerManager.StateExitEvent.html
  spec.vb:
  - uid: VRBuilder.XRInteraction.ActionBasedControllerManager
    name: ActionBasedControllerManager
    href: VRBuilder.XRInteraction.ActionBasedControllerManager.html
  - name: .
  - uid: VRBuilder.XRInteraction.ActionBasedControllerManager.StateExitEvent
    name: StateExitEvent
    href: VRBuilder.XRInteraction.ActionBasedControllerManager.StateExitEvent.html
- uid: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnExit*
  commentId: Overload:VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnExit
  href: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.html#VRBuilder_XRInteraction_ActionBasedControllerManager_ControllerState_OnExit
  name: OnExit
  nameWithType: ActionBasedControllerManager.ControllerState.OnExit
  fullName: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.OnExit
- uid: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.#ctor*
  commentId: Overload:VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.#ctor
  href: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.html#VRBuilder_XRInteraction_ActionBasedControllerManager_ControllerState__ctor_VRBuilder_XRInteraction_ActionBasedControllerManager_StateID_
  name: ControllerState
  nameWithType: ActionBasedControllerManager.ControllerState.ControllerState
  fullName: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.ControllerState
  nameWithType.vb: ActionBasedControllerManager.ControllerState.New
  fullName.vb: VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.New
  name.vb: New
