### YamlMime:ManagedReference
items:
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode
  commentId: T:VRBuilder.Editor.UI.Graphics.StepGraphNode
  id: StepGraphNode
  parent: VRBuilder.Editor.UI.Graphics
  children:
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.#ctor(VRBuilder.Core.IStep)
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.AddToChapter(VRBuilder.Core.IChapter)
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.CreatePortWithUndo
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.EntryPoint
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.Name
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.OnSelected
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.Outputs
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.Position
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.Refresh
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.RemoveFromChapter(VRBuilder.Core.IChapter)
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePort(Port)
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePortWithUndo(Port)
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.SetOutput(System.Int32,VRBuilder.Core.IStep)
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.step
  - VRBuilder.Editor.UI.Graphics.StepGraphNode.UpdateOutputPortName(Port,Node)
  langs:
  - csharp
  - vb
  name: StepGraphNode
  nameWithType: StepGraphNode
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode
  type: Class
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/StepGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: StepGraphNode
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/StepGraphNode.cs
    startLine: 12
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nStep node in a graph view editor.\n"
  example: []
  syntax:
    content: 'public class StepGraphNode : ProcessGraphNode'
    content.vb: >-
      Public Class StepGraphNode
          Inherits ProcessGraphNode
  inheritance:
  - System.Object
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  derivedClasses:
  - VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode
  - VRBuilder.Editor.UI.Graphics.EndChapterNode
  - VRBuilder.Editor.UI.Graphics.ParallelExecutionNode
  - VRBuilder.Editor.UI.Graphics.StepGroupNode
  inheritedMembers:
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.deleteIconFileName
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.editIconFileName
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.defaultNodeSize
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.IsEntryPoint
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort(System.Boolean,System.Int32)
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort(Direction,Port.Capacity)
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon(System.String)
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor
  - VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished(TextField)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.step
  commentId: F:VRBuilder.Editor.UI.Graphics.StepGraphNode.step
  id: step
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  langs:
  - csharp
  - vb
  name: step
  nameWithType: StepGraphNode.step
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.step
  type: Field
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/StepGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: step
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/StepGraphNode.cs
    startLine: 14
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  syntax:
    content: protected IStep step
    return:
      type: VRBuilder.Core.IStep
    content.vb: Protected step As IStep
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.Name
  commentId: P:VRBuilder.Editor.UI.Graphics.StepGraphNode.Name
  id: Name
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: StepGraphNode.Name
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.Name
  type: Property
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/StepGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Name
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/StepGraphNode.cs
    startLine: 17
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nName of the node.\n"
  example: []
  syntax:
    content: public override string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides Property Name As String
  overridden: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Name
  overload: VRBuilder.Editor.UI.Graphics.StepGraphNode.Name*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.EntryPoint
  commentId: P:VRBuilder.Editor.UI.Graphics.StepGraphNode.EntryPoint
  id: EntryPoint
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  langs:
  - csharp
  - vb
  name: EntryPoint
  nameWithType: StepGraphNode.EntryPoint
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.EntryPoint
  type: Property
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/StepGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EntryPoint
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/StepGraphNode.cs
    startLine: 20
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nStep other nodes connect to.\n"
  example: []
  syntax:
    content: public override IStep EntryPoint { get; }
    parameters: []
    return:
      type: VRBuilder.Core.IStep
    content.vb: Public Overrides ReadOnly Property EntryPoint As IStep
  overridden: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.EntryPoint
  overload: VRBuilder.Editor.UI.Graphics.StepGraphNode.EntryPoint*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.Outputs
  commentId: P:VRBuilder.Editor.UI.Graphics.StepGraphNode.Outputs
  id: Outputs
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  langs:
  - csharp
  - vb
  name: Outputs
  nameWithType: StepGraphNode.Outputs
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.Outputs
  type: Property
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/StepGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Outputs
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/StepGraphNode.cs
    startLine: 23
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nSteps this node leads to.\n"
  example: []
  syntax:
    content: public override IStep[] Outputs { get; }
    parameters: []
    return:
      type: VRBuilder.Core.IStep[]
    content.vb: Public Overrides ReadOnly Property Outputs As IStep()
  overridden: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Outputs
  overload: VRBuilder.Editor.UI.Graphics.StepGraphNode.Outputs*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.Position
  commentId: P:VRBuilder.Editor.UI.Graphics.StepGraphNode.Position
  id: Position
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: StepGraphNode.Position
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.Position
  type: Property
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/StepGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Position
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/StepGraphNode.cs
    startLine: 26
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nPosition in the graph.\n"
  example: []
  syntax:
    content: public override Vector2 Position { get; set; }
    parameters: []
    return:
      type: Vector2
    content.vb: Public Overrides Property Position As Vector2
  overridden: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Position
  overload: VRBuilder.Editor.UI.Graphics.StepGraphNode.Position*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.#ctor(VRBuilder.Core.IStep)
  commentId: M:VRBuilder.Editor.UI.Graphics.StepGraphNode.#ctor(VRBuilder.Core.IStep)
  id: '#ctor(VRBuilder.Core.IStep)'
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  langs:
  - csharp
  - vb
  name: StepGraphNode(IStep)
  nameWithType: StepGraphNode.StepGraphNode(IStep)
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.StepGraphNode(VRBuilder.Core.IStep)
  type: Constructor
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/StepGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: .ctor
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/StepGraphNode.cs
    startLine: 28
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  syntax:
    content: public StepGraphNode(IStep step)
    parameters:
    - id: step
      type: VRBuilder.Core.IStep
    content.vb: Public Sub New(step As IStep)
  overload: VRBuilder.Editor.UI.Graphics.StepGraphNode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.Refresh
  commentId: M:VRBuilder.Editor.UI.Graphics.StepGraphNode.Refresh
  id: Refresh
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  langs:
  - csharp
  - vb
  name: Refresh()
  nameWithType: StepGraphNode.Refresh()
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.Refresh()
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/StepGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Refresh
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/StepGraphNode.cs
    startLine: 55
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nRefreshes the node&apos;s graphics.\n"
  example: []
  syntax:
    content: public override void Refresh()
    content.vb: Public Overrides Sub Refresh
  overridden: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Refresh
  overload: VRBuilder.Editor.UI.Graphics.StepGraphNode.Refresh*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.CreatePortWithUndo
  commentId: M:VRBuilder.Editor.UI.Graphics.StepGraphNode.CreatePortWithUndo
  id: CreatePortWithUndo
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  langs:
  - csharp
  - vb
  name: CreatePortWithUndo()
  nameWithType: StepGraphNode.CreatePortWithUndo()
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.CreatePortWithUndo()
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/StepGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: CreatePortWithUndo
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/StepGraphNode.cs
    startLine: 64
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nCreates a transition port supporting undo.\n"
  example: []
  syntax:
    content: protected virtual void CreatePortWithUndo()
    content.vb: Protected Overridable Sub CreatePortWithUndo
  overload: VRBuilder.Editor.UI.Graphics.StepGraphNode.CreatePortWithUndo*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePort(Port)
  commentId: M:VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePort(Port)
  id: RemovePort(Port)
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  langs:
  - csharp
  - vb
  name: RemovePort(Port)
  nameWithType: StepGraphNode.RemovePort(Port)
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePort(Port)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/StepGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RemovePort
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/StepGraphNode.cs
    startLine: 84
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nRemoves the specified output port.\n"
  example: []
  syntax:
    content: protected void RemovePort(Port port)
    parameters:
    - id: port
      type: Port
    content.vb: Protected Sub RemovePort(port As Port)
  overload: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePort*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePortWithUndo(Port)
  commentId: M:VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePortWithUndo(Port)
  id: RemovePortWithUndo(Port)
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  langs:
  - csharp
  - vb
  name: RemovePortWithUndo(Port)
  nameWithType: StepGraphNode.RemovePortWithUndo(Port)
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePortWithUndo(Port)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/StepGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RemovePortWithUndo
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/StepGraphNode.cs
    startLine: 111
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nRemoves the specified output port supporting undo.\n"
  example: []
  syntax:
    content: protected override void RemovePortWithUndo(Port port)
    parameters:
    - id: port
      type: Port
    content.vb: Protected Overrides Sub RemovePortWithUndo(port As Port)
  overridden: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemovePortWithUndo(Port)
  overload: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePortWithUndo*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.OnSelected
  commentId: M:VRBuilder.Editor.UI.Graphics.StepGraphNode.OnSelected
  id: OnSelected
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  langs:
  - csharp
  - vb
  name: OnSelected()
  nameWithType: StepGraphNode.OnSelected()
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.OnSelected()
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/StepGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: OnSelected
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/StepGraphNode.cs
    startLine: 132
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  example: []
  syntax:
    content: public override void OnSelected()
    content.vb: Public Overrides Sub OnSelected
  overload: VRBuilder.Editor.UI.Graphics.StepGraphNode.OnSelected*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.SetOutput(System.Int32,VRBuilder.Core.IStep)
  commentId: M:VRBuilder.Editor.UI.Graphics.StepGraphNode.SetOutput(System.Int32,VRBuilder.Core.IStep)
  id: SetOutput(System.Int32,VRBuilder.Core.IStep)
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  langs:
  - csharp
  - vb
  name: SetOutput(Int32, IStep)
  nameWithType: StepGraphNode.SetOutput(Int32, IStep)
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.SetOutput(System.Int32, VRBuilder.Core.IStep)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/StepGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetOutput
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/StepGraphNode.cs
    startLine: 141
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nSets an output to the specified step.\n"
  example: []
  syntax:
    content: public override void SetOutput(int index, IStep output)
    parameters:
    - id: index
      type: System.Int32
    - id: output
      type: VRBuilder.Core.IStep
    content.vb: Public Overrides Sub SetOutput(index As Integer, output As IStep)
  overridden: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.SetOutput(System.Int32,VRBuilder.Core.IStep)
  overload: VRBuilder.Editor.UI.Graphics.StepGraphNode.SetOutput*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.AddToChapter(VRBuilder.Core.IChapter)
  commentId: M:VRBuilder.Editor.UI.Graphics.StepGraphNode.AddToChapter(VRBuilder.Core.IChapter)
  id: AddToChapter(VRBuilder.Core.IChapter)
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  langs:
  - csharp
  - vb
  name: AddToChapter(IChapter)
  nameWithType: StepGraphNode.AddToChapter(IChapter)
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.AddToChapter(VRBuilder.Core.IChapter)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/StepGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AddToChapter
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/StepGraphNode.cs
    startLine: 147
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nAdds node to specified chapter.\n"
  example: []
  syntax:
    content: public override void AddToChapter(IChapter chapter)
    parameters:
    - id: chapter
      type: VRBuilder.Core.IChapter
    content.vb: Public Overrides Sub AddToChapter(chapter As IChapter)
  overridden: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddToChapter(VRBuilder.Core.IChapter)
  overload: VRBuilder.Editor.UI.Graphics.StepGraphNode.AddToChapter*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemoveFromChapter(VRBuilder.Core.IChapter)
  commentId: M:VRBuilder.Editor.UI.Graphics.StepGraphNode.RemoveFromChapter(VRBuilder.Core.IChapter)
  id: RemoveFromChapter(VRBuilder.Core.IChapter)
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  langs:
  - csharp
  - vb
  name: RemoveFromChapter(IChapter)
  nameWithType: StepGraphNode.RemoveFromChapter(IChapter)
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemoveFromChapter(VRBuilder.Core.IChapter)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/StepGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RemoveFromChapter
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/StepGraphNode.cs
    startLine: 153
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nRemoves node from specified chapter.\n"
  example: []
  syntax:
    content: public override void RemoveFromChapter(IChapter chapter)
    parameters:
    - id: chapter
      type: VRBuilder.Core.IChapter
    content.vb: Public Overrides Sub RemoveFromChapter(chapter As IChapter)
  overridden: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemoveFromChapter(VRBuilder.Core.IChapter)
  overload: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemoveFromChapter*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.UpdateOutputPortName(Port,Node)
  commentId: M:VRBuilder.Editor.UI.Graphics.StepGraphNode.UpdateOutputPortName(Port,Node)
  id: UpdateOutputPortName(Port,Node)
  parent: VRBuilder.Editor.UI.Graphics.StepGraphNode
  langs:
  - csharp
  - vb
  name: UpdateOutputPortName(Port, Node)
  nameWithType: StepGraphNode.UpdateOutputPortName(Port, Node)
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.UpdateOutputPortName(Port, Node)
  type: Method
  source:
    remote:
      path: Source/Core/Editor/UI/GraphView/StepGraphNode.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: UpdateOutputPortName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Editor/UI/GraphView/StepGraphNode.cs
    startLine: 165
  assemblies:
  - VRBuilder.Editor
  namespace: VRBuilder.Editor.UI.Graphics
  summary: "\nUpdates the name of the output port depending on the node it is connected with.\n"
  example: []
  syntax:
    content: public override void UpdateOutputPortName(Port outputPort, Node input)
    parameters:
    - id: outputPort
      type: Port
    - id: input
      type: Node
    content.vb: Public Overrides Sub UpdateOutputPortName(outputPort As Port, input As Node)
  overridden: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.UpdateOutputPortName(Port,Node)
  overload: VRBuilder.Editor.UI.Graphics.StepGraphNode.UpdateOutputPortName*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VRBuilder.Editor.UI.Graphics
  commentId: N:VRBuilder.Editor.UI.Graphics
  name: VRBuilder.Editor.UI.Graphics
  nameWithType: VRBuilder.Editor.UI.Graphics
  fullName: VRBuilder.Editor.UI.Graphics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  commentId: T:VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  parent: VRBuilder.Editor.UI.Graphics
  name: ProcessGraphNode
  nameWithType: ProcessGraphNode
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.deleteIconFileName
  commentId: F:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.deleteIconFileName
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  name: deleteIconFileName
  nameWithType: ProcessGraphNode.deleteIconFileName
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.deleteIconFileName
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.editIconFileName
  commentId: F:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.editIconFileName
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  name: editIconFileName
  nameWithType: ProcessGraphNode.editIconFileName
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.editIconFileName
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.defaultNodeSize
  commentId: F:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.defaultNodeSize
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  name: defaultNodeSize
  nameWithType: ProcessGraphNode.defaultNodeSize
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.defaultNodeSize
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.IsEntryPoint
  commentId: P:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.IsEntryPoint
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  name: IsEntryPoint
  nameWithType: ProcessGraphNode.IsEntryPoint
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.IsEntryPoint
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort(System.Boolean,System.Int32)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort(System.Boolean,System.Int32)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  isExternal: true
  name: AddTransitionPort(Boolean, Int32)
  nameWithType: ProcessGraphNode.AddTransitionPort(Boolean, Int32)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort(System.Boolean, System.Int32)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort(System.Boolean,System.Int32)
    name: AddTransitionPort
    nameWithType: ProcessGraphNode.AddTransitionPort
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort(System.Boolean,System.Int32)
    name: AddTransitionPort
    nameWithType: ProcessGraphNode.AddTransitionPort
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddTransitionPort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort(Direction,Port.Capacity)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort(Direction,Port.Capacity)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  isExternal: true
  name: CreatePort(Direction, Port.Capacity)
  nameWithType: ProcessGraphNode.CreatePort(Direction, Port.Capacity)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort(Direction, Port.Capacity)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort(Direction,Port.Capacity)
    name: CreatePort
    nameWithType: ProcessGraphNode.CreatePort
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort
  - name: (
    nameWithType: (
    fullName: (
  - uid: Direction
    name: Direction
    nameWithType: Direction
    fullName: Direction
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Port.Capacity
    name: Port.Capacity
    nameWithType: Port.Capacity
    fullName: Port.Capacity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort(Direction,Port.Capacity)
    name: CreatePort
    nameWithType: ProcessGraphNode.CreatePort
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.CreatePort
  - name: (
    nameWithType: (
    fullName: (
  - uid: Direction
    name: Direction
    nameWithType: Direction
    fullName: Direction
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Port.Capacity
    name: Port.Capacity
    nameWithType: Port.Capacity
    fullName: Port.Capacity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon(System.String)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon(System.String)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  isExternal: true
  name: GetIcon(String)
  nameWithType: ProcessGraphNode.GetIcon(String)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon(System.String)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon(System.String)
    name: GetIcon
    nameWithType: ProcessGraphNode.GetIcon
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon(System.String)
    name: GetIcon
    nameWithType: ProcessGraphNode.GetIcon
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.GetIcon
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  name: OpenTextEditor()
  nameWithType: ProcessGraphNode.OpenTextEditor()
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor()
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor
    name: OpenTextEditor
    nameWithType: ProcessGraphNode.OpenTextEditor
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor
    name: OpenTextEditor
    nameWithType: ProcessGraphNode.OpenTextEditor
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OpenTextEditor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished(TextField)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished(TextField)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  isExternal: true
  name: OnEditTextFinished(TextField)
  nameWithType: ProcessGraphNode.OnEditTextFinished(TextField)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished(TextField)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished(TextField)
    name: OnEditTextFinished
    nameWithType: ProcessGraphNode.OnEditTextFinished
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished
  - name: (
    nameWithType: (
    fullName: (
  - uid: TextField
    name: TextField
    nameWithType: TextField
    fullName: TextField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished(TextField)
    name: OnEditTextFinished
    nameWithType: ProcessGraphNode.OnEditTextFinished
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.OnEditTextFinished
  - name: (
    nameWithType: (
    fullName: (
  - uid: TextField
    name: TextField
    nameWithType: TextField
    fullName: TextField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.IStep
  commentId: T:VRBuilder.Core.IStep
  parent: VRBuilder.Core
  name: IStep
  nameWithType: IStep
  fullName: VRBuilder.Core.IStep
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Name
  commentId: P:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Name
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  name: Name
  nameWithType: ProcessGraphNode.Name
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Name
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.Name*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.StepGraphNode.Name
  name: Name
  nameWithType: StepGraphNode.Name
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.EntryPoint
  commentId: P:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.EntryPoint
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  name: EntryPoint
  nameWithType: ProcessGraphNode.EntryPoint
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.EntryPoint
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.EntryPoint*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.StepGraphNode.EntryPoint
  name: EntryPoint
  nameWithType: StepGraphNode.EntryPoint
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.EntryPoint
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Outputs
  commentId: P:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Outputs
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  name: Outputs
  nameWithType: ProcessGraphNode.Outputs
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Outputs
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.Outputs*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.StepGraphNode.Outputs
  name: Outputs
  nameWithType: StepGraphNode.Outputs
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.Outputs
- uid: VRBuilder.Core.IStep[]
  isExternal: true
  name: IStep[]
  nameWithType: IStep[]
  fullName: VRBuilder.Core.IStep[]
  nameWithType.vb: IStep()
  fullName.vb: VRBuilder.Core.IStep()
  name.vb: IStep()
  spec.csharp:
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Position
  commentId: P:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Position
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  name: Position
  nameWithType: ProcessGraphNode.Position
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Position
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.Position*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.StepGraphNode.Position
  name: Position
  nameWithType: StepGraphNode.Position
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.Position
- uid: Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Vector2
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.#ctor*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.StepGraphNode.#ctor
  name: StepGraphNode
  nameWithType: StepGraphNode.StepGraphNode
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.StepGraphNode
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Refresh
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Refresh
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  name: Refresh()
  nameWithType: ProcessGraphNode.Refresh()
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Refresh()
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Refresh
    name: Refresh
    nameWithType: ProcessGraphNode.Refresh
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Refresh
    name: Refresh
    nameWithType: ProcessGraphNode.Refresh
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.Refresh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.Refresh*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.StepGraphNode.Refresh
  name: Refresh
  nameWithType: StepGraphNode.Refresh
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.Refresh
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.CreatePortWithUndo*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.StepGraphNode.CreatePortWithUndo
  name: CreatePortWithUndo
  nameWithType: StepGraphNode.CreatePortWithUndo
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.CreatePortWithUndo
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePort*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePort
  name: RemovePort
  nameWithType: StepGraphNode.RemovePort
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePort
- uid: Port
  isExternal: true
  name: Port
  nameWithType: Port
  fullName: Port
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemovePortWithUndo(Port)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemovePortWithUndo(Port)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  isExternal: true
  name: RemovePortWithUndo(Port)
  nameWithType: ProcessGraphNode.RemovePortWithUndo(Port)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemovePortWithUndo(Port)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemovePortWithUndo(Port)
    name: RemovePortWithUndo
    nameWithType: ProcessGraphNode.RemovePortWithUndo
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemovePortWithUndo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Port
    name: Port
    nameWithType: Port
    fullName: Port
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemovePortWithUndo(Port)
    name: RemovePortWithUndo
    nameWithType: ProcessGraphNode.RemovePortWithUndo
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemovePortWithUndo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Port
    name: Port
    nameWithType: Port
    fullName: Port
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePortWithUndo*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePortWithUndo
  name: RemovePortWithUndo
  nameWithType: StepGraphNode.RemovePortWithUndo
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemovePortWithUndo
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.OnSelected*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.StepGraphNode.OnSelected
  name: OnSelected
  nameWithType: StepGraphNode.OnSelected
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.OnSelected
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.SetOutput(System.Int32,VRBuilder.Core.IStep)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.SetOutput(System.Int32,VRBuilder.Core.IStep)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  isExternal: true
  name: SetOutput(Int32, IStep)
  nameWithType: ProcessGraphNode.SetOutput(Int32, IStep)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.SetOutput(System.Int32, VRBuilder.Core.IStep)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.SetOutput(System.Int32,VRBuilder.Core.IStep)
    name: SetOutput
    nameWithType: ProcessGraphNode.SetOutput
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.SetOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.SetOutput(System.Int32,VRBuilder.Core.IStep)
    name: SetOutput
    nameWithType: ProcessGraphNode.SetOutput
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.SetOutput
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VRBuilder.Core.IStep
    name: IStep
    nameWithType: IStep
    fullName: VRBuilder.Core.IStep
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.SetOutput*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.StepGraphNode.SetOutput
  name: SetOutput
  nameWithType: StepGraphNode.SetOutput
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.SetOutput
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddToChapter(VRBuilder.Core.IChapter)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddToChapter(VRBuilder.Core.IChapter)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  name: AddToChapter(IChapter)
  nameWithType: ProcessGraphNode.AddToChapter(IChapter)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddToChapter(VRBuilder.Core.IChapter)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddToChapter(VRBuilder.Core.IChapter)
    name: AddToChapter
    nameWithType: ProcessGraphNode.AddToChapter
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddToChapter
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddToChapter(VRBuilder.Core.IChapter)
    name: AddToChapter
    nameWithType: ProcessGraphNode.AddToChapter
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.AddToChapter
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.AddToChapter*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.StepGraphNode.AddToChapter
  name: AddToChapter
  nameWithType: StepGraphNode.AddToChapter
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.AddToChapter
- uid: VRBuilder.Core.IChapter
  commentId: T:VRBuilder.Core.IChapter
  parent: VRBuilder.Core
  name: IChapter
  nameWithType: IChapter
  fullName: VRBuilder.Core.IChapter
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemoveFromChapter(VRBuilder.Core.IChapter)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemoveFromChapter(VRBuilder.Core.IChapter)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  name: RemoveFromChapter(IChapter)
  nameWithType: ProcessGraphNode.RemoveFromChapter(IChapter)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemoveFromChapter(VRBuilder.Core.IChapter)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemoveFromChapter(VRBuilder.Core.IChapter)
    name: RemoveFromChapter
    nameWithType: ProcessGraphNode.RemoveFromChapter
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemoveFromChapter
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemoveFromChapter(VRBuilder.Core.IChapter)
    name: RemoveFromChapter
    nameWithType: ProcessGraphNode.RemoveFromChapter
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.RemoveFromChapter
  - name: (
    nameWithType: (
    fullName: (
  - uid: VRBuilder.Core.IChapter
    name: IChapter
    nameWithType: IChapter
    fullName: VRBuilder.Core.IChapter
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemoveFromChapter*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.StepGraphNode.RemoveFromChapter
  name: RemoveFromChapter
  nameWithType: StepGraphNode.RemoveFromChapter
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.RemoveFromChapter
- uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.UpdateOutputPortName(Port,Node)
  commentId: M:VRBuilder.Editor.UI.Graphics.ProcessGraphNode.UpdateOutputPortName(Port,Node)
  parent: VRBuilder.Editor.UI.Graphics.ProcessGraphNode
  isExternal: true
  name: UpdateOutputPortName(Port, Node)
  nameWithType: ProcessGraphNode.UpdateOutputPortName(Port, Node)
  fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.UpdateOutputPortName(Port, Node)
  spec.csharp:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.UpdateOutputPortName(Port,Node)
    name: UpdateOutputPortName
    nameWithType: ProcessGraphNode.UpdateOutputPortName
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.UpdateOutputPortName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Port
    name: Port
    nameWithType: Port
    fullName: Port
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Node
    name: Node
    nameWithType: Node
    fullName: Node
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.UpdateOutputPortName(Port,Node)
    name: UpdateOutputPortName
    nameWithType: ProcessGraphNode.UpdateOutputPortName
    fullName: VRBuilder.Editor.UI.Graphics.ProcessGraphNode.UpdateOutputPortName
  - name: (
    nameWithType: (
    fullName: (
  - uid: Port
    name: Port
    nameWithType: Port
    fullName: Port
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Node
    name: Node
    nameWithType: Node
    fullName: Node
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Editor.UI.Graphics.StepGraphNode.UpdateOutputPortName*
  commentId: Overload:VRBuilder.Editor.UI.Graphics.StepGraphNode.UpdateOutputPortName
  name: UpdateOutputPortName
  nameWithType: StepGraphNode.UpdateOutputPortName
  fullName: VRBuilder.Editor.UI.Graphics.StepGraphNode.UpdateOutputPortName
- uid: Node
  isExternal: true
  name: Node
  nameWithType: Node
  fullName: Node
