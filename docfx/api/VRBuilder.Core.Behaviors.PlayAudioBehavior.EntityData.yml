### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData
  commentId: T:VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData
  id: PlayAudioBehavior.EntityData
  parent: VRBuilder.Core.Behaviors
  children:
  - VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.AudioData
  - VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.AudioPlayer
  - VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.ExecutionStages
  - VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.IsBlocking
  - VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Metadata
  - VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Name
  - VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Volume
  langs:
  - csharp
  - vb
  name: PlayAudioBehavior.EntityData
  nameWithType: PlayAudioBehavior.EntityData
  fullName: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData
  type: Class
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/PlayAudioBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: EntityData
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/PlayAudioBehavior.cs
    startLine: 22
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  summary: "\nThe &quot;play audio&quot; behavior&apos;s data.\n"
  example: []
  syntax:
    content: >-
      [DataContract(IsReference = true)]

      public class EntityData : IBackgroundBehaviorData, IBehaviorData, INamedData, IData, IBehaviorExecutionStages
    content.vb: >-
      <DataContract(IsReference:=True)>

      Public Class EntityData

          Implements IBackgroundBehaviorData, IBehaviorData, INamedData, IData, IBehaviorExecutionStages
  inheritance:
  - System.Object
  implements:
  - VRBuilder.Core.Behaviors.IBackgroundBehaviorData
  - VRBuilder.Core.Behaviors.IBehaviorData
  - VRBuilder.Core.INamedData
  - VRBuilder.Core.IData
  - VRBuilder.Core.Behaviors.IBehaviorExecutionStages
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: IsReference
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.AudioData
  commentId: P:VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.AudioData
  id: AudioData
  parent: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData
  langs:
  - csharp
  - vb
  name: AudioData
  nameWithType: PlayAudioBehavior.EntityData.AudioData
  fullName: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.AudioData
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/PlayAudioBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AudioData
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/PlayAudioBehavior.cs
    startLine: 28
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  summary: "\nAn audio data that contains an audio clip to play.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      public IAudioData AudioData { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.Audio.IAudioData
    content.vb: >-
      <DataMember>

      Public Property AudioData As IAudioData
  overload: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.AudioData*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.ExecutionStages
  commentId: P:VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.ExecutionStages
  id: ExecutionStages
  parent: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData
  langs:
  - csharp
  - vb
  name: ExecutionStages
  nameWithType: PlayAudioBehavior.EntityData.ExecutionStages
  fullName: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.ExecutionStages
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/PlayAudioBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: ExecutionStages
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/PlayAudioBehavior.cs
    startLine: 32
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  example: []
  syntax:
    content: >-
      [DataMember]

      public BehaviorExecutionStages ExecutionStages { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.Behaviors.BehaviorExecutionStages
    content.vb: >-
      <DataMember>

      Public Property ExecutionStages As BehaviorExecutionStages
  overload: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.ExecutionStages*
  implements:
  - VRBuilder.Core.Behaviors.IBehaviorExecutionStages.ExecutionStages
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Volume
  commentId: P:VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Volume
  id: Volume
  parent: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData
  langs:
  - csharp
  - vb
  name: Volume
  nameWithType: PlayAudioBehavior.EntityData.Volume
  fullName: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Volume
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/PlayAudioBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Volume
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/PlayAudioBehavior.cs
    startLine: 38
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  summary: "\nAudio volume this audio file should be played with.\n"
  example: []
  syntax:
    content: >-
      [DataMember]

      [DisplayName("Audio Volume (from 0 to 1)")]

      [UsesSpecificProcessDrawer("NormalizedFloatDrawer")]

      public float Volume { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      <DisplayName("Audio Volume (from 0 to 1)")>

      <UsesSpecificProcessDrawer("NormalizedFloatDrawer")>

      Public Property Volume As Single
  overload: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Volume*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: VRBuilder.Core.Attributes.DisplayNameAttribute
    ctor: VRBuilder.Core.Attributes.DisplayNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Audio Volume (from 0 to 1)
  - type: VRBuilder.Core.Attributes.UsesSpecificProcessDrawerAttribute
    ctor: VRBuilder.Core.Attributes.UsesSpecificProcessDrawerAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NormalizedFloatDrawer
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.AudioPlayer
  commentId: P:VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.AudioPlayer
  id: AudioPlayer
  parent: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData
  langs:
  - csharp
  - vb
  name: AudioPlayer
  nameWithType: PlayAudioBehavior.EntityData.AudioPlayer
  fullName: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.AudioPlayer
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/PlayAudioBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AudioPlayer
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/PlayAudioBehavior.cs
    startLine: 46
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  summary: "\nThe Unity&apos;s audio source to play the sound. If not set, it will use <seealso cref=\"!:RuntimeConfigurator.Configuration.InstructionPlayer\"></seealso>.\n"
  example: []
  syntax:
    content: public AudioSource AudioPlayer { get; set; }
    parameters: []
    return:
      type: AudioSource
    content.vb: Public Property AudioPlayer As AudioSource
  overload: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.AudioPlayer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Metadata
  commentId: P:VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Metadata
  id: Metadata
  parent: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: PlayAudioBehavior.EntityData.Metadata
  fullName: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Metadata
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/PlayAudioBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Metadata
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/PlayAudioBehavior.cs
    startLine: 49
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  example: []
  syntax:
    content: public Metadata Metadata { get; set; }
    parameters: []
    return:
      type: VRBuilder.Core.Metadata
    content.vb: Public Property Metadata As Metadata
  overload: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Metadata*
  implements:
  - VRBuilder.Core.IData.Metadata
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Name
  commentId: P:VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Name
  id: Name
  parent: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PlayAudioBehavior.EntityData.Name
  fullName: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Name
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/PlayAudioBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: Name
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/PlayAudioBehavior.cs
    startLine: 52
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  example: []
  syntax:
    content: >-
      [IgnoreDataMember]

      public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <IgnoreDataMember>

      Public ReadOnly Property Name As String
  overload: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Name*
  implements:
  - VRBuilder.Core.INamedData.Name
  attributes:
  - type: System.Runtime.Serialization.IgnoreDataMemberAttribute
    ctor: System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.IsBlocking
  commentId: P:VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.IsBlocking
  id: IsBlocking
  parent: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData
  langs:
  - csharp
  - vb
  name: IsBlocking
  nameWithType: PlayAudioBehavior.EntityData.IsBlocking
  fullName: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.IsBlocking
  type: Property
  source:
    remote:
      path: Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/PlayAudioBehavior.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: IsBlocking
    path: ../../Assets/MindPort/VR Builder/Core/Source/Basic-Conditions-And-Behaviors/Runtime/Behaviors/PlayAudioBehavior.cs
    startLine: 76
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Behaviors
  example: []
  syntax:
    content: public bool IsBlocking { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsBlocking As Boolean
  overload: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.IsBlocking*
  implements:
  - VRBuilder.Core.Behaviors.IBackgroundBehaviorData.IsBlocking
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VRBuilder.Core.Behaviors
  commentId: N:VRBuilder.Core.Behaviors
  name: VRBuilder.Core.Behaviors
  nameWithType: VRBuilder.Core.Behaviors
  fullName: VRBuilder.Core.Behaviors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VRBuilder.Core.Behaviors.IBackgroundBehaviorData
  commentId: T:VRBuilder.Core.Behaviors.IBackgroundBehaviorData
  parent: VRBuilder.Core.Behaviors
  name: IBackgroundBehaviorData
  nameWithType: IBackgroundBehaviorData
  fullName: VRBuilder.Core.Behaviors.IBackgroundBehaviorData
- uid: VRBuilder.Core.Behaviors.IBehaviorData
  commentId: T:VRBuilder.Core.Behaviors.IBehaviorData
  parent: VRBuilder.Core.Behaviors
  name: IBehaviorData
  nameWithType: IBehaviorData
  fullName: VRBuilder.Core.Behaviors.IBehaviorData
- uid: VRBuilder.Core.INamedData
  commentId: T:VRBuilder.Core.INamedData
  parent: VRBuilder.Core
  name: INamedData
  nameWithType: INamedData
  fullName: VRBuilder.Core.INamedData
- uid: VRBuilder.Core.IData
  commentId: T:VRBuilder.Core.IData
  parent: VRBuilder.Core
  name: IData
  nameWithType: IData
  fullName: VRBuilder.Core.IData
- uid: VRBuilder.Core.Behaviors.IBehaviorExecutionStages
  commentId: T:VRBuilder.Core.Behaviors.IBehaviorExecutionStages
  parent: VRBuilder.Core.Behaviors
  name: IBehaviorExecutionStages
  nameWithType: IBehaviorExecutionStages
  fullName: VRBuilder.Core.Behaviors.IBehaviorExecutionStages
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core
  commentId: N:VRBuilder.Core
  name: VRBuilder.Core
  nameWithType: VRBuilder.Core
  fullName: VRBuilder.Core
- uid: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.AudioData*
  commentId: Overload:VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.AudioData
  name: AudioData
  nameWithType: PlayAudioBehavior.EntityData.AudioData
  fullName: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.AudioData
- uid: VRBuilder.Core.Audio.IAudioData
  commentId: T:VRBuilder.Core.Audio.IAudioData
  parent: VRBuilder.Core.Audio
  name: IAudioData
  nameWithType: IAudioData
  fullName: VRBuilder.Core.Audio.IAudioData
- uid: VRBuilder.Core.Audio
  commentId: N:VRBuilder.Core.Audio
  name: VRBuilder.Core.Audio
  nameWithType: VRBuilder.Core.Audio
  fullName: VRBuilder.Core.Audio
- uid: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.ExecutionStages*
  commentId: Overload:VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.ExecutionStages
  name: ExecutionStages
  nameWithType: PlayAudioBehavior.EntityData.ExecutionStages
  fullName: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.ExecutionStages
- uid: VRBuilder.Core.Behaviors.IBehaviorExecutionStages.ExecutionStages
  commentId: P:VRBuilder.Core.Behaviors.IBehaviorExecutionStages.ExecutionStages
  parent: VRBuilder.Core.Behaviors.IBehaviorExecutionStages
  name: ExecutionStages
  nameWithType: IBehaviorExecutionStages.ExecutionStages
  fullName: VRBuilder.Core.Behaviors.IBehaviorExecutionStages.ExecutionStages
- uid: VRBuilder.Core.Behaviors.BehaviorExecutionStages
  commentId: T:VRBuilder.Core.Behaviors.BehaviorExecutionStages
  parent: VRBuilder.Core.Behaviors
  name: BehaviorExecutionStages
  nameWithType: BehaviorExecutionStages
  fullName: VRBuilder.Core.Behaviors.BehaviorExecutionStages
- uid: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Volume*
  commentId: Overload:VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Volume
  name: Volume
  nameWithType: PlayAudioBehavior.EntityData.Volume
  fullName: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Volume
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.AudioPlayer*
  commentId: Overload:VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.AudioPlayer
  name: AudioPlayer
  nameWithType: PlayAudioBehavior.EntityData.AudioPlayer
  fullName: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.AudioPlayer
- uid: AudioSource
  isExternal: true
  name: AudioSource
  nameWithType: AudioSource
  fullName: AudioSource
- uid: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Metadata*
  commentId: Overload:VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Metadata
  name: Metadata
  nameWithType: PlayAudioBehavior.EntityData.Metadata
  fullName: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Metadata
- uid: VRBuilder.Core.IData.Metadata
  commentId: P:VRBuilder.Core.IData.Metadata
  parent: VRBuilder.Core.IData
  name: Metadata
  nameWithType: IData.Metadata
  fullName: VRBuilder.Core.IData.Metadata
- uid: VRBuilder.Core.Metadata
  commentId: T:VRBuilder.Core.Metadata
  parent: VRBuilder.Core
  name: Metadata
  nameWithType: Metadata
  fullName: VRBuilder.Core.Metadata
- uid: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Name*
  commentId: Overload:VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Name
  name: Name
  nameWithType: PlayAudioBehavior.EntityData.Name
  fullName: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.Name
- uid: VRBuilder.Core.INamedData.Name
  commentId: P:VRBuilder.Core.INamedData.Name
  parent: VRBuilder.Core.INamedData
  name: Name
  nameWithType: INamedData.Name
  fullName: VRBuilder.Core.INamedData.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.IsBlocking*
  commentId: Overload:VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.IsBlocking
  name: IsBlocking
  nameWithType: PlayAudioBehavior.EntityData.IsBlocking
  fullName: VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.IsBlocking
- uid: VRBuilder.Core.Behaviors.IBackgroundBehaviorData.IsBlocking
  commentId: P:VRBuilder.Core.Behaviors.IBackgroundBehaviorData.IsBlocking
  parent: VRBuilder.Core.Behaviors.IBackgroundBehaviorData
  name: IsBlocking
  nameWithType: IBackgroundBehaviorData.IsBlocking
  fullName: VRBuilder.Core.Behaviors.IBackgroundBehaviorData.IsBlocking
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
