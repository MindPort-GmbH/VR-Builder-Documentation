### YamlMime:ManagedReference
items:
- uid: VRBuilder.Core.Properties.SceneObjectExtensions
  commentId: T:VRBuilder.Core.Properties.SceneObjectExtensions
  id: SceneObjectExtensions
  parent: VRBuilder.Core.Properties
  children:
  - VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type)
  - VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1(VRBuilder.Core.SceneObjects.ISceneObject)
  - VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  - VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  - VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  - VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(VRBuilder.Core.SceneObjects.ISceneObject,System.String)
  langs:
  - csharp
  - vb
  name: SceneObjectExtensions
  nameWithType: SceneObjectExtensions
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions
  type: Class
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectExtensions.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SceneObjectExtensions
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectExtensions.cs
    startLine: 18
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nHelper class that adds functionality to any <xref href=\"VRBuilder.Core.SceneObjects.ISceneObject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class SceneObjectExtensions
    content.vb: Public Module SceneObjectExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(VRBuilder.Core.SceneObjects.ISceneObject,System.String)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(VRBuilder.Core.SceneObjects.ISceneObject,System.String)
  id: SetSuitableName(VRBuilder.Core.SceneObjects.ISceneObject,System.String)
  isExtensionMethod: true
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  langs:
  - csharp
  - vb
  name: SetSuitableName(ISceneObject, String)
  nameWithType: SceneObjectExtensions.SetSuitableName(ISceneObject, String)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName(VRBuilder.Core.SceneObjects.ISceneObject, System.String)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectExtensions.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: SetSuitableName
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectExtensions.cs
    startLine: 25
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nEnsures that this <xref href=\"VRBuilder.Core.SceneObjects.ISceneObject\" data-throw-if-not-resolved=\"false\"></xref>&apos;s UniqueName is not duplicated.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This function is no longer used and will be removed in the next major version.")]

      public static void SetSuitableName(this ISceneObject sceneObject, string baseName = "")
    parameters:
    - id: sceneObject
      type: VRBuilder.Core.SceneObjects.ISceneObject
      description: <xref href="VRBuilder.Core.SceneObjects.ISceneObject" data-throw-if-not-resolved="false"></xref> to whom the `UniqueName` will be validated.
    - id: baseName
      type: System.String
      description: Optional base for this <code data-dev-comment-type="paramref" class="paramref">sceneObject</code>&apos;s `UniqueName`.
    content.vb: >-
      <Obsolete("This function is no longer used and will be removed in the next major version.")>

      <ExtensionAttribute>

      Public Shared Sub SetSuitableName(sceneObject As ISceneObject, baseName As String = "")
  overload: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This function is no longer used and will be removed in the next major version.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1(VRBuilder.Core.SceneObjects.ISceneObject)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty``1(VRBuilder.Core.SceneObjects.ISceneObject)
  id: AddProcessProperty``1(VRBuilder.Core.SceneObjects.ISceneObject)
  isExtensionMethod: true
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  langs:
  - csharp
  - vb
  name: AddProcessProperty<T>(ISceneObject)
  nameWithType: SceneObjectExtensions.AddProcessProperty<T>(ISceneObject)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty<T>(VRBuilder.Core.SceneObjects.ISceneObject)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectExtensions.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AddProcessProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectExtensions.cs
    startLine: 47
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nAdds a <xref href=\"VRBuilder.Core.Properties.ISceneObjectProperty\" data-throw-if-not-resolved=\"false\"></xref> of type <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">T</code> into this <xref href=\"VRBuilder.Core.SceneObjects.ISceneObject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static ISceneObjectProperty AddProcessProperty<T>(this ISceneObject sceneObject)
    parameters:
    - id: sceneObject
      type: VRBuilder.Core.SceneObjects.ISceneObject
      description: <xref href="VRBuilder.Core.SceneObjects.ISceneObject" data-throw-if-not-resolved="false"></xref> to whom the type <code data-dev-comment-type="typeparamref" class="typeparamref">T</code> will be added.
    typeParameters:
    - id: T
      description: The type of <xref href="VRBuilder.Core.Properties.ISceneObjectProperty" data-throw-if-not-resolved="false"></xref> to be added to <code data-dev-comment-type="paramref" class="paramref">sceneObject</code>.
    return:
      type: VRBuilder.Core.Properties.ISceneObjectProperty
      description: A reference to the <xref href="VRBuilder.Core.Properties.ISceneObjectProperty" data-throw-if-not-resolved="false"></xref> added to <code data-dev-comment-type="paramref" class="paramref">sceneObject</code>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddProcessProperty(Of T)(sceneObject As ISceneObject) As ISceneObjectProperty
  overload: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty*
  nameWithType.vb: SceneObjectExtensions.AddProcessProperty(Of T)(ISceneObject)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(Of T)(VRBuilder.Core.SceneObjects.ISceneObject)
  name.vb: AddProcessProperty(Of T)(ISceneObject)
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type)
  id: AddProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type)
  isExtensionMethod: true
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  langs:
  - csharp
  - vb
  name: AddProcessProperty(ISceneObject, Type)
  nameWithType: SceneObjectExtensions.AddProcessProperty(ISceneObject, Type)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject, System.Type)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectExtensions.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AddProcessProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectExtensions.cs
    startLine: 58
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nAdds a type of <code data-dev-comment-type=\"paramref\" class=\"paramref\">processProperty</code> into this <xref href=\"VRBuilder.Core.SceneObjects.ISceneObject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static ISceneObjectProperty AddProcessProperty(this ISceneObject sceneObject, Type processProperty)
    parameters:
    - id: sceneObject
      type: VRBuilder.Core.SceneObjects.ISceneObject
      description: <xref href="VRBuilder.Core.SceneObjects.ISceneObject" data-throw-if-not-resolved="false"></xref> to whom the <code data-dev-comment-type="paramref" class="paramref">processProperty</code> will be added.
    - id: processProperty
      type: System.Type
      description: Typo of <xref href="VRBuilder.Core.Properties.ISceneObjectProperty" data-throw-if-not-resolved="false"></xref> to be added to <code data-dev-comment-type="paramref" class="paramref">sceneObject</code>.
    return:
      type: VRBuilder.Core.Properties.ISceneObjectProperty
      description: A reference to the <xref href="VRBuilder.Core.Properties.ISceneObjectProperty" data-throw-if-not-resolved="false"></xref> added to <code data-dev-comment-type="paramref" class="paramref">sceneObject</code>.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddProcessProperty(sceneObject As ISceneObject, processProperty As Type) As ISceneObjectProperty
  overload: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  id: AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  isExtensionMethod: true
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  langs:
  - csharp
  - vb
  name: AddProcessPropertyExtensions(ISceneObjectProperty)
  nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions(VRBuilder.Core.Properties.ISceneObjectProperty)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectExtensions.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: AddProcessPropertyExtensions
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectExtensions.cs
    startLine: 95
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nChecks if property extensions exist in the project and adds them to the game object if the current scene requires them.\n"
  example: []
  syntax:
    content: public static void AddProcessPropertyExtensions(this ISceneObjectProperty property)
    parameters:
    - id: property
      type: VRBuilder.Core.Properties.ISceneObjectProperty
      description: The property to check for.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub AddProcessPropertyExtensions(property As ISceneObjectProperty)
  overload: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  id: RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,Component,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  isExtensionMethod: true
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  langs:
  - csharp
  - vb
  name: RemoveProcessProperty(ISceneObject, Component, Boolean, IEnumerable<Component>)
  nameWithType: SceneObjectExtensions.RemoveProcessProperty(ISceneObject, Component, Boolean, IEnumerable<Component>)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject, Component, System.Boolean, System.Collections.Generic.IEnumerable<Component>)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectExtensions.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RemoveProcessProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectExtensions.cs
    startLine: 138
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nRemoves type of <code data-dev-comment-type=\"paramref\" class=\"paramref\">processProperty</code> from this <xref href=\"VRBuilder.Core.SceneObjects.ISceneObject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void RemoveProcessProperty(this ISceneObject sceneObject, Component processProperty, bool removeDependencies = false, IEnumerable<Component> excludedFromBeingRemoved = null)
    parameters:
    - id: sceneObject
      type: VRBuilder.Core.SceneObjects.ISceneObject
      description: <xref href="VRBuilder.Core.SceneObjects.ISceneObject" data-throw-if-not-resolved="false"></xref> from whom the <code data-dev-comment-type="paramref" class="paramref">processProperty</code> will be removed.
    - id: processProperty
      type: Component
      description: <xref href="VRBuilder.Core.Properties.ISceneObjectProperty" data-throw-if-not-resolved="false"></xref> to be removed from <code data-dev-comment-type="paramref" class="paramref">sceneObject</code>.
    - id: removeDependencies
      type: System.Boolean
      description: If true, this method also removes other components that are marked as `RequiredComponent` by <code data-dev-comment-type="paramref" class="paramref">processProperty</code>.
    - id: excludedFromBeingRemoved
      type: System.Collections.Generic.IEnumerable{Component}
      description: The process properties in this list will not be removed if any is a dependency of <code data-dev-comment-type="paramref" class="paramref">processProperty</code>. Only relevant if <code data-dev-comment-type="paramref" class="paramref">removeDependencies</code> is true.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub RemoveProcessProperty(sceneObject As ISceneObject, processProperty As Component, removeDependencies As Boolean = False, excludedFromBeingRemoved As IEnumerable(Of Component) = Nothing)
  overload: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty*
  nameWithType.vb: SceneObjectExtensions.RemoveProcessProperty(ISceneObject, Component, Boolean, IEnumerable(Of Component))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject, Component, System.Boolean, System.Collections.Generic.IEnumerable(Of Component))
  name.vb: RemoveProcessProperty(ISceneObject, Component, Boolean, IEnumerable(Of Component))
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  commentId: M:VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  id: RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject,System.Type,System.Boolean,System.Collections.Generic.IEnumerable{Component})
  isExtensionMethod: true
  parent: VRBuilder.Core.Properties.SceneObjectExtensions
  langs:
  - csharp
  - vb
  name: RemoveProcessProperty(ISceneObject, Type, Boolean, IEnumerable<Component>)
  nameWithType: SceneObjectExtensions.RemoveProcessProperty(ISceneObject, Type, Boolean, IEnumerable<Component>)
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject, System.Type, System.Boolean, System.Collections.Generic.IEnumerable<Component>)
  type: Method
  source:
    remote:
      path: Source/Core/Runtime/SceneObjects/SceneObjectExtensions.cs
      branch: develop
      repo: git@github.com:MindPort-GmbH/VR-Builder.git
    id: RemoveProcessProperty
    path: ../../Assets/MindPort/VR Builder/Core/Source/Core/Runtime/SceneObjects/SceneObjectExtensions.cs
    startLine: 151
  assemblies:
  - VRBuilder.Core
  namespace: VRBuilder.Core.Properties
  summary: "\nRemoves type of <code data-dev-comment-type=\"paramref\" class=\"paramref\">processProperty</code> from this <xref href=\"VRBuilder.Core.SceneObjects.ISceneObject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static void RemoveProcessProperty(this ISceneObject sceneObject, Type processProperty, bool removeDependencies = false, IEnumerable<Component> excludedFromBeingRemoved = null)
    parameters:
    - id: sceneObject
      type: VRBuilder.Core.SceneObjects.ISceneObject
      description: <xref href="VRBuilder.Core.SceneObjects.ISceneObject" data-throw-if-not-resolved="false"></xref> from whom the <code data-dev-comment-type="paramref" class="paramref">processProperty</code> will be removed.
    - id: processProperty
      type: System.Type
      description: Typo of <xref href="VRBuilder.Core.Properties.ISceneObjectProperty" data-throw-if-not-resolved="false"></xref> to be removed from <code data-dev-comment-type="paramref" class="paramref">sceneObject</code>.
    - id: removeDependencies
      type: System.Boolean
      description: If true, this method also removes other components that are marked as `RequiredComponent` by <code data-dev-comment-type="paramref" class="paramref">processProperty</code>.
    - id: excludedFromBeingRemoved
      type: System.Collections.Generic.IEnumerable{Component}
      description: The process properties in this list will not be removed if any is a dependency of <code data-dev-comment-type="paramref" class="paramref">processProperty</code>. Only relevant if <code data-dev-comment-type="paramref" class="paramref">removeDependencies</code> is true.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub RemoveProcessProperty(sceneObject As ISceneObject, processProperty As Type, removeDependencies As Boolean = False, excludedFromBeingRemoved As IEnumerable(Of Component) = Nothing)
  overload: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty*
  nameWithType.vb: SceneObjectExtensions.RemoveProcessProperty(ISceneObject, Type, Boolean, IEnumerable(Of Component))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty(VRBuilder.Core.SceneObjects.ISceneObject, System.Type, System.Boolean, System.Collections.Generic.IEnumerable(Of Component))
  name.vb: RemoveProcessProperty(ISceneObject, Type, Boolean, IEnumerable(Of Component))
references:
- uid: VRBuilder.Core.SceneObjects.ISceneObject
  commentId: T:VRBuilder.Core.SceneObjects.ISceneObject
  parent: VRBuilder.Core.SceneObjects
  name: ISceneObject
  nameWithType: ISceneObject
  fullName: VRBuilder.Core.SceneObjects.ISceneObject
- uid: VRBuilder.Core.Properties
  commentId: N:VRBuilder.Core.Properties
  name: VRBuilder.Core.Properties
  nameWithType: VRBuilder.Core.Properties
  fullName: VRBuilder.Core.Properties
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VRBuilder.Core.SceneObjects
  commentId: N:VRBuilder.Core.SceneObjects
  name: VRBuilder.Core.SceneObjects
  nameWithType: VRBuilder.Core.SceneObjects
  fullName: VRBuilder.Core.SceneObjects
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName*
  commentId: Overload:VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName
  name: SetSuitableName
  nameWithType: SceneObjectExtensions.SetSuitableName
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.SetSuitableName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VRBuilder.Core.Properties.ISceneObjectProperty
  commentId: T:VRBuilder.Core.Properties.ISceneObjectProperty
  parent: VRBuilder.Core.Properties
  name: ISceneObjectProperty
  nameWithType: ISceneObjectProperty
  fullName: VRBuilder.Core.Properties.ISceneObjectProperty
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty*
  commentId: Overload:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty
  name: AddProcessProperty
  nameWithType: SceneObjectExtensions.AddProcessProperty
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessProperty
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions*
  commentId: Overload:VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
  name: AddProcessPropertyExtensions
  nameWithType: SceneObjectExtensions.AddProcessPropertyExtensions
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.AddProcessPropertyExtensions
- uid: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty*
  commentId: Overload:VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty
  name: RemoveProcessProperty
  nameWithType: SceneObjectExtensions.RemoveProcessProperty
  fullName: VRBuilder.Core.Properties.SceneObjectExtensions.RemoveProcessProperty
- uid: Component
  commentId: '!:Component'
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: Component
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable{Component}
  commentId: T:System.Collections.Generic.IEnumerable{Component}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Component>
  nameWithType: IEnumerable<Component>
  fullName: System.Collections.Generic.IEnumerable<Component>
  nameWithType.vb: IEnumerable(Of Component)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Component)
  name.vb: IEnumerable(Of Component)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Component
    name: Component
    nameWithType: Component
    fullName: Component
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
