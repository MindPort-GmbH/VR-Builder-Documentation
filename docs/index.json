{
  "api/VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.html": {
    "href": "api/VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData.html",
    "title": "Class AnimateTransformBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class AnimateTransformBehavior.EntityData The \"follow path\" behavior's data. Inheritance System.Object AnimateTransformBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Animations.Behaviors Assembly : VRBuilder.Animations.dll Syntax [DisplayName(\"Animate Transform\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source Duration Duration of the transition. If duration is equal or less than zero, the new transform will be applied immediately. Declaration [DataMember] [DisplayName(\"Duration (in seconds)\")] public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source PingPong If enabled, the animation will repeat in reverse, returning the object to the starting position. Declaration [DataMember] [DisplayName(\"Ping pong\")] public bool PingPong { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source PositionCurve Determines the position of the object at a given time. The curve is normalized, the duration of the animation can be set in the Duration field. Declaration [DataMember] [DisplayName(\"Position curve\")] public AnimationCurve PositionCurve { get; set; } Property Value Type Description AnimationCurve | Improve this Doc View Source Repeats Number of times the animation should be repeated. Declaration [DataMember] [DisplayName(\"Repeats\")] public int Repeats { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source RotationCurve Determines the rotation of the object at a given time. The curve is normalized, the duration of the animation can be set in the Duration field. Declaration [DataMember] [DisplayName(\"Rotation curve\")] public AnimationCurve RotationCurve { get; set; } Property Value Type Description AnimationCurve | Improve this Doc View Source ScaleCurve Determines the scale of the object at a given time. The curve is normalized, the duration of the animation can be set in the Duration field. Declaration [DataMember] [DisplayName(\"Scale curve\")] public AnimationCurve ScaleCurve { get; set; } Property Value Type Description AnimationCurve | Improve this Doc View Source Target Declaration [DataMember] [Obsolete(\"Use TargetObject instead.\")] [LegacyProperty(\"TargetObject\")] public SceneObjectReference Target { get; set; } Property Value Type Description SceneObjectReference | Improve this Doc View Source TargetObject Target scene object to be transformed. Declaration [DataMember] [DisplayName(\"Object\")] public SingleSceneObjectReference TargetObject { get; set; } Property Value Type Description SingleSceneObjectReference | Improve this Doc View Source TargetTransform Declaration [DataMember] [Obsolete(\"Use TargetTransformProvider instead.\")] [LegacyProperty(\"TargetTransformProvider\")] public SceneObjectReference TargetTransform { get; set; } Property Value Type Description SceneObjectReference | Improve this Doc View Source TargetTransformProvider Object defining the target transform values. Declaration [DataMember] [DisplayName(\"Final transform provider\")] public SingleSceneObjectReference TargetTransformProvider { get; set; } Property Value Type Description SingleSceneObjectReference Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Animations.Behaviors.AnimateTransformBehavior.html": {
    "href": "api/VRBuilder.Animations.Behaviors.AnimateTransformBehavior.html",
    "title": "Class AnimateTransformBehavior | VR Builder Documentation",
    "keywords": "Class AnimateTransformBehavior Animates an object's transform over time to a new position, rotation and/or scale. Inheritance System.Object Entity < AnimateTransformBehavior.EntityData > Behavior < AnimateTransformBehavior.EntityData > AnimateTransformBehavior Implements IDataOwner < AnimateTransformBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<AnimateTransformBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<AnimateTransformBehavior.EntityData>.Clone() Entity<AnimateTransformBehavior.EntityData>.Data Entity<AnimateTransformBehavior.EntityData>.IDataOwner.Data Entity<AnimateTransformBehavior.EntityData>.LifeCycle Entity<AnimateTransformBehavior.EntityData>.Parent Entity<AnimateTransformBehavior.EntityData>.GetActiveProcess() Entity<AnimateTransformBehavior.EntityData>.GetDeactivatingProcess() Entity<AnimateTransformBehavior.EntityData>.GetConfigurator() Entity<AnimateTransformBehavior.EntityData>.Configure(IMode) Entity<AnimateTransformBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Animations.Behaviors Assembly : VRBuilder.Animations.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/animations-add-on\")] public class AnimateTransformBehavior : Behavior<AnimateTransformBehavior.EntityData>, IDataOwner<AnimateTransformBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source AnimateTransformBehavior() Declaration [JsonConstructor] public AnimateTransformBehavior() | Improve this Doc View Source AnimateTransformBehavior(Guid, Guid, Single, AnimationCurve, AnimationCurve, AnimationCurve, Boolean, Int32) Declaration public AnimateTransformBehavior(Guid targetGuid, Guid transformProviderGuid, float duration, AnimationCurve positionCurve, AnimationCurve rotationCurve, AnimationCurve scaleCurve, bool pingPong = false, int repeats = 1) Parameters Type Name Description System.Guid targetGuid System.Guid transformProviderGuid System.Single duration AnimationCurve positionCurve AnimationCurve rotationCurve AnimationCurve scaleCurve System.Boolean pingPong System.Int32 repeats | Improve this Doc View Source AnimateTransformBehavior(ISceneObject, ISceneObject, Single, AnimationCurve, AnimationCurve, AnimationCurve, Boolean, Int32) Declaration public AnimateTransformBehavior(ISceneObject target, ISceneObject transformProvider, float duration, AnimationCurve positionCurve, AnimationCurve rotationCurve, AnimationCurve scaleCurve, bool pingPong = false, int repeats = 1) Parameters Type Name Description ISceneObject target ISceneObject transformProvider System.Single duration AnimationCurve positionCurve AnimationCurve rotationCurve AnimationCurve scaleCurve System.Boolean pingPong System.Int32 repeats Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Animations.Behaviors.AnimateTransformBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Animations.Behaviors.ChildExplosionViewBehavior.EntityData.html": {
    "href": "api/VRBuilder.Animations.Behaviors.ChildExplosionViewBehavior.EntityData.html",
    "title": "Class ChildExplosionViewBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class ChildExplosionViewBehavior.EntityData The \"follow path\" behavior's data. Inheritance System.Object ChildExplosionViewBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Animations.Behaviors Assembly : VRBuilder.Animations.dll Syntax [DisplayName(\"Child Explosion View\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source Duration Duration of the transition. If duration is equal or less than zero, the new transform will be applied immediately. Declaration [DataMember] [DisplayName(\"Duration (in seconds)\")] public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ExplosionCurve Determines the position of the object at a given time. The curve is normalized, the duration of the animation can be set in the Duration field. Declaration [DataMember] [DisplayName(\"Explosion curve\")] public AnimationCurve ExplosionCurve { get; set; } Property Value Type Description AnimationCurve | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source PingPong If enabled, the animation will repeat in reverse, returning the object to the starting position. Declaration [DataMember] [DisplayName(\"Ping pong\")] public bool PingPong { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Repeats Number of times the animation should be repeated. Declaration [DataMember] [DisplayName(\"Repeats\")] public int Repeats { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Scale Scale of the explosion. A value of 1 resets the object to the initial state. Declaration [DataMember] [DisplayName(\"Scale\")] public float Scale { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Target Declaration [DataMember] [Obsolete(\"Use TargetObject instead.\")] [LegacyProperty(\"TargetObject\")] public ScenePropertyReference<IExplodableProperty> Target { get; set; } Property Value Type Description ScenePropertyReference < IExplodableProperty > | Improve this Doc View Source TargetObject Target scene object to be transformed. Declaration [DataMember] [DisplayName(\"Object\")] public SingleScenePropertyReference<IExplodableProperty> TargetObject { get; set; } Property Value Type Description SingleScenePropertyReference < IExplodableProperty > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Animations.Behaviors.ChildExplosionViewBehavior.html": {
    "href": "api/VRBuilder.Animations.Behaviors.ChildExplosionViewBehavior.html",
    "title": "Class ChildExplosionViewBehavior | VR Builder Documentation",
    "keywords": "Class ChildExplosionViewBehavior Animates an object's transform over time to a new position, rotation and/or scale. Inheritance System.Object Entity < ChildExplosionViewBehavior.EntityData > Behavior < ChildExplosionViewBehavior.EntityData > ChildExplosionViewBehavior Implements IDataOwner < ChildExplosionViewBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<ChildExplosionViewBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<ChildExplosionViewBehavior.EntityData>.Clone() Entity<ChildExplosionViewBehavior.EntityData>.Data Entity<ChildExplosionViewBehavior.EntityData>.IDataOwner.Data Entity<ChildExplosionViewBehavior.EntityData>.LifeCycle Entity<ChildExplosionViewBehavior.EntityData>.Parent Entity<ChildExplosionViewBehavior.EntityData>.GetActiveProcess() Entity<ChildExplosionViewBehavior.EntityData>.GetDeactivatingProcess() Entity<ChildExplosionViewBehavior.EntityData>.GetConfigurator() Entity<ChildExplosionViewBehavior.EntityData>.Configure(IMode) Entity<ChildExplosionViewBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Animations.Behaviors Assembly : VRBuilder.Animations.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/animations-add-on\")] public class ChildExplosionViewBehavior : Behavior<ChildExplosionViewBehavior.EntityData>, IDataOwner<ChildExplosionViewBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source ChildExplosionViewBehavior() Declaration [JsonConstructor] public ChildExplosionViewBehavior() | Improve this Doc View Source ChildExplosionViewBehavior(Guid, Single, Single, AnimationCurve, Boolean, Int32) Declaration public ChildExplosionViewBehavior(Guid targetGuid, float scale, float duration, AnimationCurve explosionCurve, bool pingPong = false, int repeats = 1) Parameters Type Name Description System.Guid targetGuid System.Single scale System.Single duration AnimationCurve explosionCurve System.Boolean pingPong System.Int32 repeats | Improve this Doc View Source ChildExplosionViewBehavior(IExplodableProperty, Single, Single, AnimationCurve, Boolean, Int32) Declaration public ChildExplosionViewBehavior(IExplodableProperty target, float scale, float duration, AnimationCurve explosionCurve, bool pingPong = false, int repeats = 1) Parameters Type Name Description IExplodableProperty target System.Single scale System.Single duration AnimationCurve explosionCurve System.Boolean pingPong System.Int32 repeats Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Animations.Behaviors.ChildExplosionViewBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Animations.Behaviors.FollowPathBehavior.EntityData.html": {
    "href": "api/VRBuilder.Animations.Behaviors.FollowPathBehavior.EntityData.html",
    "title": "Class FollowPathBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class FollowPathBehavior.EntityData The \"follow path\" behavior's data. Inheritance System.Object FollowPathBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Animations.Behaviors Assembly : VRBuilder.Animations.dll Syntax [DisplayName(\"Follow Path\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source DisableRotation If enabled, the object will not rotate while following the path. Settings on KeepRelativeRotation will be ignored. Declaration [DataMember] [DisplayName(\"Disable Rotation\")] public bool DisableRotation { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Duration Duration of the transition. If duration is equal or less than zero, the object will be instantaneously moved at the end of the path. Declaration [DataMember] [DisplayName(\"Duration (in seconds)\")] public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source KeepRelativePosition If enabled, the object will keep its relative position to the path instead of being teleported on it when the animation starts. Declaration [DataMember] [DisplayName(\"Keep relative position\")] public bool KeepRelativePosition { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source KeepRelativeRotation If enabled, the object will keep its relative rotation to the path instead of having its forward vector pointing forward along the path. Declaration [DataMember] [DisplayName(\"Keep relative rotation\")] public bool KeepRelativeRotation { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Path Declaration [DataMember] [Obsolete(\"Use PathProperty instead.\")] [LegacyProperty(\"PathProperty\")] public ScenePropertyReference<IPathProperty> Path { get; set; } Property Value Type Description ScenePropertyReference < IPathProperty > | Improve this Doc View Source PathProperty Path the target is meant to follow. Declaration [DataMember] [DisplayName(\"Path\")] public SingleScenePropertyReference<IPathProperty> PathProperty { get; set; } Property Value Type Description SingleScenePropertyReference < IPathProperty > | Improve this Doc View Source PingPong If enabled, the animation will repeat in reverse, returning the object to the starting position. Declaration [DataMember] [DisplayName(\"Ping pong\")] public bool PingPong { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Repeats Number of times the animation should be repeated. Declaration [DataMember] [DisplayName(\"Repeats\")] public int Repeats { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Reverse If enabled, the animation will play backwards. Declaration [DataMember] [DisplayName(\"Reverse\")] public bool Reverse { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Target Declaration [DataMember] [Obsolete(\"Use TargetObject instead.\")] [LegacyProperty(\"TargetObject\")] public SceneObjectReference Target { get; set; } Property Value Type Description SceneObjectReference | Improve this Doc View Source TargetObject Target scene object to be moved. Declaration [DataMember] [DisplayName(\"Object\")] public SingleSceneObjectReference TargetObject { get; set; } Property Value Type Description SingleSceneObjectReference | Improve this Doc View Source Velocity Determines how fast the object moves at a given time. The curve is normalized, the duration of the animation can be set in the Duration field. Declaration [DataMember] [DisplayName(\"Velocity curve\")] public AnimationCurve Velocity { get; set; } Property Value Type Description AnimationCurve Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Animations.Behaviors.FollowPathBehavior.html": {
    "href": "api/VRBuilder.Animations.Behaviors.FollowPathBehavior.html",
    "title": "Class FollowPathBehavior | VR Builder Documentation",
    "keywords": "Class FollowPathBehavior Moves an object along a path. The object rotates to follow the path. Inheritance System.Object Entity < FollowPathBehavior.EntityData > Behavior < FollowPathBehavior.EntityData > FollowPathBehavior Implements IDataOwner < FollowPathBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<FollowPathBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<FollowPathBehavior.EntityData>.Clone() Entity<FollowPathBehavior.EntityData>.Data Entity<FollowPathBehavior.EntityData>.IDataOwner.Data Entity<FollowPathBehavior.EntityData>.LifeCycle Entity<FollowPathBehavior.EntityData>.Parent Entity<FollowPathBehavior.EntityData>.GetActiveProcess() Entity<FollowPathBehavior.EntityData>.GetDeactivatingProcess() Entity<FollowPathBehavior.EntityData>.GetConfigurator() Entity<FollowPathBehavior.EntityData>.Configure(IMode) Entity<FollowPathBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Animations.Behaviors Assembly : VRBuilder.Animations.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/animations-add-on\")] public class FollowPathBehavior : Behavior<FollowPathBehavior.EntityData>, IDataOwner<FollowPathBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source FollowPathBehavior() Declaration [JsonConstructor] public FollowPathBehavior() | Improve this Doc View Source FollowPathBehavior(Guid, Guid, Single, AnimationCurve, Boolean, Boolean, Boolean, Boolean, Int32, Boolean) Declaration public FollowPathBehavior(Guid targetGuid, Guid pathGuid, float duration, AnimationCurve velocity, bool keepRelativePosition = false, bool keepRelativeRotation = false, bool reverse = false, bool pingPong = false, int repeats = 1, bool disableRotation = false) Parameters Type Name Description System.Guid targetGuid System.Guid pathGuid System.Single duration AnimationCurve velocity System.Boolean keepRelativePosition System.Boolean keepRelativeRotation System.Boolean reverse System.Boolean pingPong System.Int32 repeats System.Boolean disableRotation | Improve this Doc View Source FollowPathBehavior(ISceneObject, IPathProperty, Single, AnimationCurve, Boolean, Boolean, Boolean, Boolean, Int32, Boolean) Declaration public FollowPathBehavior(ISceneObject target, IPathProperty path, float duration, AnimationCurve velocity, bool keepRelativePosition = false, bool keepRelativeRotation = false, bool reverse = false, bool pingPong = false, int repeats = 1, bool disableRotation = false) Parameters Type Name Description ISceneObject target IPathProperty path System.Single duration AnimationCurve velocity System.Boolean keepRelativePosition System.Boolean keepRelativeRotation System.Boolean reverse System.Boolean pingPong System.Int32 repeats System.Boolean disableRotation Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Animations.Behaviors.FollowPathBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Animations.Behaviors.html": {
    "href": "api/VRBuilder.Animations.Behaviors.html",
    "title": "Namespace VRBuilder.Animations.Behaviors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Animations.Behaviors Classes AnimateTransformBehavior Animates an object's transform over time to a new position, rotation and/or scale. AnimateTransformBehavior.EntityData The \"follow path\" behavior's data. ChildExplosionViewBehavior Animates an object's transform over time to a new position, rotation and/or scale. ChildExplosionViewBehavior.EntityData The \"follow path\" behavior's data. FollowPathBehavior Moves an object along a path. The object rotates to follow the path. FollowPathBehavior.EntityData The \"follow path\" behavior's data. RotateAroundAxisBehavior Rotates an object around an axis, which can be represented by another transform. RotateAroundAxisBehavior.EntityData The \"follow path\" behavior's data. SetAnimatorBoolParameterBehavior Sets a boolean parameter on an animator to the specified value. SetAnimatorBoolParameterBehavior.EntityData The SetAnimatorBoolParameterBehavior behavior's data. SetAnimatorFloatParameterBehavior Sets a float parameter on an animator to the specified value. SetAnimatorFloatParameterBehavior.EntityData The SetAnimatorFloatParameterBehavior behavior's data. SetAnimatorIntParameterBehavior Sets an integer parameter on an animator to the specified value. SetAnimatorIntParameterBehavior.EntityData The SetAnimatorIntParameterBehavior behavior's data. SetAnimatorTriggerParameterBehavior Sets a trigger parameter on an animator. SetAnimatorTriggerParameterBehavior.EntityData The SetAnimatorTriggerParameterBehavior behavior's data. Enums RotateAroundAxisBehavior.RotationAxis"
  },
  "api/VRBuilder.Animations.Behaviors.RotateAroundAxisBehavior.EntityData.html": {
    "href": "api/VRBuilder.Animations.Behaviors.RotateAroundAxisBehavior.EntityData.html",
    "title": "Class RotateAroundAxisBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class RotateAroundAxisBehavior.EntityData The \"follow path\" behavior's data. Inheritance System.Object RotateAroundAxisBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Animations.Behaviors Assembly : VRBuilder.Animations.dll Syntax [DisplayName(\"Rotate Around Axis\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source AnimationCurve Determines the position of the object at a given time. The curve is normalized, the duration of the animation can be set in the Duration field. Declaration [DataMember] [DisplayName(\"Animation curve\")] public AnimationCurve AnimationCurve { get; set; } Property Value Type Description AnimationCurve | Improve this Doc View Source AxisProvider Transform representing the axis. If empty, the object's position will be used. Declaration [DataMember] [DisplayName(\"Rotation axis provider\")] public SingleSceneObjectReference AxisProvider { get; set; } Property Value Type Description SingleSceneObjectReference | Improve this Doc View Source AxisTransform Declaration [DataMember] [Obsolete(\"Use AxisProvider instead.\")] [LegacyProperty(\"AxisProvider\")] public SceneObjectReference AxisTransform { get; set; } Property Value Type Description SceneObjectReference | Improve this Doc View Source Degrees Amount of degrees the object will be rotated. Declaration [DataMember] [DisplayName(\"Degrees\")] public float Degrees { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Duration Total duration of the animation. Declaration [DataMember] [DisplayName(\"Duration (in seconds)\")] public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source RotationAxis Choose whether the object will be rotated along the X, Y or Z axis. Declaration [DataMember] [DisplayName(\"Rotation axis\")] public RotateAroundAxisBehavior.RotationAxis RotationAxis { get; set; } Property Value Type Description RotateAroundAxisBehavior.RotationAxis | Improve this Doc View Source Target Declaration [DataMember] [Obsolete(\"Use TargetObject instead.\")] [LegacyProperty(\"TargetObject\")] public SceneObjectReference Target { get; set; } Property Value Type Description SceneObjectReference | Improve this Doc View Source TargetObject Target scene object to be rotated. Declaration [DataMember] [DisplayName(\"Object\")] public SingleSceneObjectReference TargetObject { get; set; } Property Value Type Description SingleSceneObjectReference Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Animations.Behaviors.RotateAroundAxisBehavior.html": {
    "href": "api/VRBuilder.Animations.Behaviors.RotateAroundAxisBehavior.html",
    "title": "Class RotateAroundAxisBehavior | VR Builder Documentation",
    "keywords": "Class RotateAroundAxisBehavior Rotates an object around an axis, which can be represented by another transform. Inheritance System.Object Entity < RotateAroundAxisBehavior.EntityData > Behavior < RotateAroundAxisBehavior.EntityData > RotateAroundAxisBehavior Implements IDataOwner < RotateAroundAxisBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<RotateAroundAxisBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<RotateAroundAxisBehavior.EntityData>.Clone() Entity<RotateAroundAxisBehavior.EntityData>.Data Entity<RotateAroundAxisBehavior.EntityData>.IDataOwner.Data Entity<RotateAroundAxisBehavior.EntityData>.LifeCycle Entity<RotateAroundAxisBehavior.EntityData>.Parent Entity<RotateAroundAxisBehavior.EntityData>.GetActiveProcess() Entity<RotateAroundAxisBehavior.EntityData>.GetDeactivatingProcess() Entity<RotateAroundAxisBehavior.EntityData>.GetConfigurator() Entity<RotateAroundAxisBehavior.EntityData>.Configure(IMode) Entity<RotateAroundAxisBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Animations.Behaviors Assembly : VRBuilder.Animations.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/animations-add-on\")] public class RotateAroundAxisBehavior : Behavior<RotateAroundAxisBehavior.EntityData>, IDataOwner<RotateAroundAxisBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source RotateAroundAxisBehavior() Declaration [JsonConstructor] public RotateAroundAxisBehavior() | Improve this Doc View Source RotateAroundAxisBehavior(Guid, Guid, RotateAroundAxisBehavior.RotationAxis, Single, Single, AnimationCurve) Declaration public RotateAroundAxisBehavior(Guid targetGuid, Guid axisProviderGuid, RotateAroundAxisBehavior.RotationAxis rotationAxis, float duration, float degrees, AnimationCurve animationCurve) Parameters Type Name Description System.Guid targetGuid System.Guid axisProviderGuid RotateAroundAxisBehavior.RotationAxis rotationAxis System.Single duration System.Single degrees AnimationCurve animationCurve | Improve this Doc View Source RotateAroundAxisBehavior(ISceneObject, ISceneObject, RotateAroundAxisBehavior.RotationAxis, Single, Single, AnimationCurve) Declaration public RotateAroundAxisBehavior(ISceneObject target, ISceneObject axisProvider, RotateAroundAxisBehavior.RotationAxis rotationAxis, float duration, float degrees, AnimationCurve animationCurve) Parameters Type Name Description ISceneObject target ISceneObject axisProvider RotateAroundAxisBehavior.RotationAxis rotationAxis System.Single duration System.Single degrees AnimationCurve animationCurve Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Animations.Behaviors.RotateAroundAxisBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Animations.Behaviors.RotateAroundAxisBehavior.RotationAxis.html": {
    "href": "api/VRBuilder.Animations.Behaviors.RotateAroundAxisBehavior.RotationAxis.html",
    "title": "Enum RotateAroundAxisBehavior.RotationAxis | VR Builder Documentation",
    "keywords": "Enum RotateAroundAxisBehavior.RotationAxis Namespace : VRBuilder.Animations.Behaviors Assembly : VRBuilder.Animations.dll Syntax public enum RotationAxis Fields Name Description X Y Z"
  },
  "api/VRBuilder.Animations.Behaviors.SetAnimatorBoolParameterBehavior.EntityData.html": {
    "href": "api/VRBuilder.Animations.Behaviors.SetAnimatorBoolParameterBehavior.EntityData.html",
    "title": "Class SetAnimatorBoolParameterBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetAnimatorBoolParameterBehavior.EntityData The SetAnimatorBoolParameterBehavior behavior's data. Inheritance System.Object SetAnimatorBoolParameterBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Animations.Behaviors Assembly : VRBuilder.Animations.dll Syntax [DisplayName(\"Set Animator Boolean\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source AnimatorProperty Declaration [DataMember] [Obsolete(\"Use Animators instead.\")] [LegacyProperty(\"Animators\")] public ScenePropertyReference<IAnimatorProperty> AnimatorProperty { get; set; } Property Value Type Description ScenePropertyReference < IAnimatorProperty > | Improve this Doc View Source Animators Object with the animator property. Declaration [DataMember] [DisplayName(\"Animators\")] public MultipleScenePropertyReference<IAnimatorProperty> Animators { get; set; } Property Value Type Description MultipleScenePropertyReference < IAnimatorProperty > | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source ParameterName Name of the parameter to be changed. Declaration [DataMember] [DisplayName(\"Parameter name\")] public string ParameterName { get; set; } Property Value Type Description System.String | Improve this Doc View Source ParameterValue New value for the selected parameter. Declaration [DataMember] [DisplayName(\"Parameter value\")] public bool ParameterValue { get; set; } Property Value Type Description System.Boolean Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Animations.Behaviors.SetAnimatorBoolParameterBehavior.html": {
    "href": "api/VRBuilder.Animations.Behaviors.SetAnimatorBoolParameterBehavior.html",
    "title": "Class SetAnimatorBoolParameterBehavior | VR Builder Documentation",
    "keywords": "Class SetAnimatorBoolParameterBehavior Sets a boolean parameter on an animator to the specified value. Inheritance System.Object Entity < SetAnimatorBoolParameterBehavior.EntityData > Behavior < SetAnimatorBoolParameterBehavior.EntityData > SetAnimatorBoolParameterBehavior Implements IDataOwner < SetAnimatorBoolParameterBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetAnimatorBoolParameterBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<SetAnimatorBoolParameterBehavior.EntityData>.Clone() Entity<SetAnimatorBoolParameterBehavior.EntityData>.Data Entity<SetAnimatorBoolParameterBehavior.EntityData>.IDataOwner.Data Entity<SetAnimatorBoolParameterBehavior.EntityData>.LifeCycle Entity<SetAnimatorBoolParameterBehavior.EntityData>.Parent Entity<SetAnimatorBoolParameterBehavior.EntityData>.GetActiveProcess() Entity<SetAnimatorBoolParameterBehavior.EntityData>.GetDeactivatingProcess() Entity<SetAnimatorBoolParameterBehavior.EntityData>.GetConfigurator() Entity<SetAnimatorBoolParameterBehavior.EntityData>.Configure(IMode) Entity<SetAnimatorBoolParameterBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Animations.Behaviors Assembly : VRBuilder.Animations.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/animations-add-on\")] public class SetAnimatorBoolParameterBehavior : Behavior<SetAnimatorBoolParameterBehavior.EntityData>, IDataOwner<SetAnimatorBoolParameterBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source SetAnimatorBoolParameterBehavior() Declaration [JsonConstructor] public SetAnimatorBoolParameterBehavior() | Improve this Doc View Source SetAnimatorBoolParameterBehavior(Guid, String, Boolean) Declaration public SetAnimatorBoolParameterBehavior(Guid animatorPropertyGuid, string parameterName, bool parameterValue) Parameters Type Name Description System.Guid animatorPropertyGuid System.String parameterName System.Boolean parameterValue | Improve this Doc View Source SetAnimatorBoolParameterBehavior(IAnimatorProperty, String, Boolean) Declaration public SetAnimatorBoolParameterBehavior(IAnimatorProperty animatorProperty, string parameterName, bool parameterValue) Parameters Type Name Description IAnimatorProperty animatorProperty System.String parameterName System.Boolean parameterValue Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Animations.Behaviors.SetAnimatorBoolParameterBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Animations.Behaviors.SetAnimatorFloatParameterBehavior.EntityData.html": {
    "href": "api/VRBuilder.Animations.Behaviors.SetAnimatorFloatParameterBehavior.EntityData.html",
    "title": "Class SetAnimatorFloatParameterBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetAnimatorFloatParameterBehavior.EntityData The SetAnimatorFloatParameterBehavior behavior's data. Inheritance System.Object SetAnimatorFloatParameterBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Animations.Behaviors Assembly : VRBuilder.Animations.dll Syntax [DisplayName(\"Set Animator Float\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source AnimationCurve Determines how fast the value changes at a given time. The curve is normalized, the duration of the animation can be set in the Duration field. Declaration [DataMember] [DisplayName(\"Animation curve\")] public AnimationCurve AnimationCurve { get; set; } Property Value Type Description AnimationCurve | Improve this Doc View Source AnimatorProperty Declaration [DataMember] [Obsolete(\"Use Animators instead.\")] [LegacyProperty(\"Animators\")] public ScenePropertyReference<IAnimatorProperty> AnimatorProperty { get; set; } Property Value Type Description ScenePropertyReference < IAnimatorProperty > | Improve this Doc View Source Animators Object with the animator property. Declaration [DataMember] [DisplayName(\"Animators\")] public MultipleScenePropertyReference<IAnimatorProperty> Animators { get; set; } Property Value Type Description MultipleScenePropertyReference < IAnimatorProperty > | Improve this Doc View Source Duration Timeframe during which the value is progressively changed. Declaration [DataMember] [DisplayName(\"Duration (in seconds)\")] public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source ParameterName Name of the parameter to be changed. Declaration [DataMember] [DisplayName(\"Parameter name\")] public string ParameterName { get; set; } Property Value Type Description System.String | Improve this Doc View Source TargetValue New value for the selected parameter. Declaration [DataMember] [DisplayName(\"Target value\")] public float TargetValue { get; set; } Property Value Type Description System.Single Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Animations.Behaviors.SetAnimatorFloatParameterBehavior.html": {
    "href": "api/VRBuilder.Animations.Behaviors.SetAnimatorFloatParameterBehavior.html",
    "title": "Class SetAnimatorFloatParameterBehavior | VR Builder Documentation",
    "keywords": "Class SetAnimatorFloatParameterBehavior Sets a float parameter on an animator to the specified value. Inheritance System.Object Entity < SetAnimatorFloatParameterBehavior.EntityData > Behavior < SetAnimatorFloatParameterBehavior.EntityData > SetAnimatorFloatParameterBehavior Implements IDataOwner < SetAnimatorFloatParameterBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetAnimatorFloatParameterBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<SetAnimatorFloatParameterBehavior.EntityData>.Clone() Entity<SetAnimatorFloatParameterBehavior.EntityData>.Data Entity<SetAnimatorFloatParameterBehavior.EntityData>.IDataOwner.Data Entity<SetAnimatorFloatParameterBehavior.EntityData>.LifeCycle Entity<SetAnimatorFloatParameterBehavior.EntityData>.Parent Entity<SetAnimatorFloatParameterBehavior.EntityData>.GetActiveProcess() Entity<SetAnimatorFloatParameterBehavior.EntityData>.GetDeactivatingProcess() Entity<SetAnimatorFloatParameterBehavior.EntityData>.GetConfigurator() Entity<SetAnimatorFloatParameterBehavior.EntityData>.Configure(IMode) Entity<SetAnimatorFloatParameterBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Animations.Behaviors Assembly : VRBuilder.Animations.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/animations-add-on\")] public class SetAnimatorFloatParameterBehavior : Behavior<SetAnimatorFloatParameterBehavior.EntityData>, IDataOwner<SetAnimatorFloatParameterBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source SetAnimatorFloatParameterBehavior() Declaration [JsonConstructor] public SetAnimatorFloatParameterBehavior() | Improve this Doc View Source SetAnimatorFloatParameterBehavior(Guid, String, Single, Single, AnimationCurve) Declaration public SetAnimatorFloatParameterBehavior(Guid animatorPropertyGuid, string parameterName, float targetValue, float duration, AnimationCurve animationCurve) Parameters Type Name Description System.Guid animatorPropertyGuid System.String parameterName System.Single targetValue System.Single duration AnimationCurve animationCurve | Improve this Doc View Source SetAnimatorFloatParameterBehavior(IAnimatorProperty, String, Single, Single, AnimationCurve) Declaration public SetAnimatorFloatParameterBehavior(IAnimatorProperty animatorProperty, string parameterName, float targetValue, float duration, AnimationCurve animationCurve) Parameters Type Name Description IAnimatorProperty animatorProperty System.String parameterName System.Single targetValue System.Single duration AnimationCurve animationCurve Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Animations.Behaviors.SetAnimatorFloatParameterBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Animations.Behaviors.SetAnimatorIntParameterBehavior.EntityData.html": {
    "href": "api/VRBuilder.Animations.Behaviors.SetAnimatorIntParameterBehavior.EntityData.html",
    "title": "Class SetAnimatorIntParameterBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetAnimatorIntParameterBehavior.EntityData The SetAnimatorIntParameterBehavior behavior's data. Inheritance System.Object SetAnimatorIntParameterBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Animations.Behaviors Assembly : VRBuilder.Animations.dll Syntax [DisplayName(\"Set Animator Integer\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source AnimatorProperty Declaration [DataMember] [Obsolete(\"Use Animators instead.\")] [LegacyProperty(\"Animators\")] public ScenePropertyReference<IAnimatorProperty> AnimatorProperty { get; set; } Property Value Type Description ScenePropertyReference < IAnimatorProperty > | Improve this Doc View Source Animators Object with the animator property. Declaration [DataMember] [DisplayName(\"Animators\")] public MultipleScenePropertyReference<IAnimatorProperty> Animators { get; set; } Property Value Type Description MultipleScenePropertyReference < IAnimatorProperty > | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source ParameterName Name of the parameter to be changed. Declaration [DataMember] [DisplayName(\"Parameter name\")] public string ParameterName { get; set; } Property Value Type Description System.String | Improve this Doc View Source ParameterValue New value for the selected parameter. Declaration [DataMember] [DisplayName(\"Parameter value\")] public int ParameterValue { get; set; } Property Value Type Description System.Int32 Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Animations.Behaviors.SetAnimatorIntParameterBehavior.html": {
    "href": "api/VRBuilder.Animations.Behaviors.SetAnimatorIntParameterBehavior.html",
    "title": "Class SetAnimatorIntParameterBehavior | VR Builder Documentation",
    "keywords": "Class SetAnimatorIntParameterBehavior Sets an integer parameter on an animator to the specified value. Inheritance System.Object Entity < SetAnimatorIntParameterBehavior.EntityData > Behavior < SetAnimatorIntParameterBehavior.EntityData > SetAnimatorIntParameterBehavior Implements IDataOwner < SetAnimatorIntParameterBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetAnimatorIntParameterBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<SetAnimatorIntParameterBehavior.EntityData>.Clone() Entity<SetAnimatorIntParameterBehavior.EntityData>.Data Entity<SetAnimatorIntParameterBehavior.EntityData>.IDataOwner.Data Entity<SetAnimatorIntParameterBehavior.EntityData>.LifeCycle Entity<SetAnimatorIntParameterBehavior.EntityData>.Parent Entity<SetAnimatorIntParameterBehavior.EntityData>.GetActiveProcess() Entity<SetAnimatorIntParameterBehavior.EntityData>.GetDeactivatingProcess() Entity<SetAnimatorIntParameterBehavior.EntityData>.GetConfigurator() Entity<SetAnimatorIntParameterBehavior.EntityData>.Configure(IMode) Entity<SetAnimatorIntParameterBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Animations.Behaviors Assembly : VRBuilder.Animations.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/animations-add-on\")] public class SetAnimatorIntParameterBehavior : Behavior<SetAnimatorIntParameterBehavior.EntityData>, IDataOwner<SetAnimatorIntParameterBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source SetAnimatorIntParameterBehavior() Declaration [JsonConstructor] public SetAnimatorIntParameterBehavior() | Improve this Doc View Source SetAnimatorIntParameterBehavior(Guid, String, Int32) Declaration public SetAnimatorIntParameterBehavior(Guid animatorPropertyGuid, string parameterName, int parameterValue) Parameters Type Name Description System.Guid animatorPropertyGuid System.String parameterName System.Int32 parameterValue | Improve this Doc View Source SetAnimatorIntParameterBehavior(IAnimatorProperty, String, Int32) Declaration public SetAnimatorIntParameterBehavior(IAnimatorProperty animatorProperty, string parameterName, int parameterValue) Parameters Type Name Description IAnimatorProperty animatorProperty System.String parameterName System.Int32 parameterValue Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Animations.Behaviors.SetAnimatorIntParameterBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Animations.Behaviors.SetAnimatorTriggerParameterBehavior.EntityData.html": {
    "href": "api/VRBuilder.Animations.Behaviors.SetAnimatorTriggerParameterBehavior.EntityData.html",
    "title": "Class SetAnimatorTriggerParameterBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetAnimatorTriggerParameterBehavior.EntityData The SetAnimatorTriggerParameterBehavior behavior's data. Inheritance System.Object SetAnimatorTriggerParameterBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Animations.Behaviors Assembly : VRBuilder.Animations.dll Syntax [DisplayName(\"Set Animator Trigger\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source AnimatorProperty Declaration [DataMember] [Obsolete(\"Use Animators instead.\")] [LegacyProperty(\"Animators\")] public ScenePropertyReference<IAnimatorProperty> AnimatorProperty { get; set; } Property Value Type Description ScenePropertyReference < IAnimatorProperty > | Improve this Doc View Source Animators Object with the animator property. Declaration [DataMember] [DisplayName(\"Animators\")] public MultipleScenePropertyReference<IAnimatorProperty> Animators { get; set; } Property Value Type Description MultipleScenePropertyReference < IAnimatorProperty > | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source ParameterName Name of the parameter to be changed. Declaration [DataMember] [DisplayName(\"Parameter name\")] public string ParameterName { get; set; } Property Value Type Description System.String Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Animations.Behaviors.SetAnimatorTriggerParameterBehavior.html": {
    "href": "api/VRBuilder.Animations.Behaviors.SetAnimatorTriggerParameterBehavior.html",
    "title": "Class SetAnimatorTriggerParameterBehavior | VR Builder Documentation",
    "keywords": "Class SetAnimatorTriggerParameterBehavior Sets a trigger parameter on an animator. Inheritance System.Object Entity < SetAnimatorTriggerParameterBehavior.EntityData > Behavior < SetAnimatorTriggerParameterBehavior.EntityData > SetAnimatorTriggerParameterBehavior Implements IDataOwner < SetAnimatorTriggerParameterBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetAnimatorTriggerParameterBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<SetAnimatorTriggerParameterBehavior.EntityData>.Clone() Entity<SetAnimatorTriggerParameterBehavior.EntityData>.Data Entity<SetAnimatorTriggerParameterBehavior.EntityData>.IDataOwner.Data Entity<SetAnimatorTriggerParameterBehavior.EntityData>.LifeCycle Entity<SetAnimatorTriggerParameterBehavior.EntityData>.Parent Entity<SetAnimatorTriggerParameterBehavior.EntityData>.GetActiveProcess() Entity<SetAnimatorTriggerParameterBehavior.EntityData>.GetDeactivatingProcess() Entity<SetAnimatorTriggerParameterBehavior.EntityData>.GetConfigurator() Entity<SetAnimatorTriggerParameterBehavior.EntityData>.Configure(IMode) Entity<SetAnimatorTriggerParameterBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Animations.Behaviors Assembly : VRBuilder.Animations.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/animations-add-on\")] public class SetAnimatorTriggerParameterBehavior : Behavior<SetAnimatorTriggerParameterBehavior.EntityData>, IDataOwner<SetAnimatorTriggerParameterBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source SetAnimatorTriggerParameterBehavior() Declaration [JsonConstructor] public SetAnimatorTriggerParameterBehavior() | Improve this Doc View Source SetAnimatorTriggerParameterBehavior(Guid, String) Declaration public SetAnimatorTriggerParameterBehavior(Guid animatorPropertyGuid, string parameterName) Parameters Type Name Description System.Guid animatorPropertyGuid System.String parameterName | Improve this Doc View Source SetAnimatorTriggerParameterBehavior(IAnimatorProperty, String) Declaration public SetAnimatorTriggerParameterBehavior(IAnimatorProperty animatorProperty, string parameterName) Parameters Type Name Description IAnimatorProperty animatorProperty System.String parameterName Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Animations.Behaviors.SetAnimatorTriggerParameterBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Animations.Properties.AnimationProperty.html": {
    "href": "api/VRBuilder.Animations.Properties.AnimationProperty.html",
    "title": "Class AnimationProperty | VR Builder Documentation",
    "keywords": "Class AnimationProperty Property controlling an Animation component. Inheritance System.Object ProcessSceneObjectProperty AnimationProperty Implements IAnimationProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.Animations.Properties Assembly : VRBuilder.Animations.dll Syntax public class AnimationProperty : ProcessSceneObjectProperty, IAnimationProperty, ISceneObjectProperty Properties | Improve this Doc View Source Animation Animation component associated with this property. Declaration public Animation Animation { get; } Property Value Type Description Animation | Improve this Doc View Source AnimationEnded Declaration public UnityEvent<AnimationPropertyEventArgs> AnimationEnded { get; } Property Value Type Description UnityEvent < AnimationPropertyEventArgs > | Improve this Doc View Source AnimationStarted Declaration public UnityEvent<AnimationPropertyEventArgs> AnimationStarted { get; } Property Value Type Description UnityEvent < AnimationPropertyEventArgs > | Improve this Doc View Source HasClip Declaration public bool HasClip { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsPlaying Declaration public bool IsPlaying { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source FastForward() Declaration public void FastForward() | Improve this Doc View Source Play() Declaration public void Play() | Improve this Doc View Source Reset() Declaration protected override void Reset() Overrides ProcessSceneObjectProperty.Reset() | Improve this Doc View Source SetAnimationClip(AnimationClip) Declaration public void SetAnimationClip(AnimationClip clip) Parameters Type Name Description AnimationClip clip Implements IAnimationProperty ISceneObjectProperty"
  },
  "api/VRBuilder.Animations.Properties.AnimationPropertyEventArgs.html": {
    "href": "api/VRBuilder.Animations.Properties.AnimationPropertyEventArgs.html",
    "title": "Class AnimationPropertyEventArgs | VR Builder Documentation",
    "keywords": "Class AnimationPropertyEventArgs Event args for events related to IAnimationProperty . Inheritance System.Object System.EventArgs AnimationPropertyEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Animations.Properties Assembly : VRBuilder.Animations.dll Syntax public class AnimationPropertyEventArgs : EventArgs"
  },
  "api/VRBuilder.Animations.Properties.AnimatorProperty.html": {
    "href": "api/VRBuilder.Animations.Properties.AnimatorProperty.html",
    "title": "Class AnimatorProperty | VR Builder Documentation",
    "keywords": "Class AnimatorProperty Property that handles animations by changing parameters on an Animator component. Inheritance System.Object ProcessSceneObjectProperty AnimatorProperty Implements IAnimatorProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.Animations.Properties Assembly : VRBuilder.Animations.dll Syntax public class AnimatorProperty : ProcessSceneObjectProperty, IAnimatorProperty, ISceneObjectProperty Properties | Improve this Doc View Source Animator The animator component on this game object. Declaration public Animator Animator { get; } Property Value Type Description Animator Methods | Improve this Doc View Source GetBool(String) Declaration public bool GetBool(string parameterName) Parameters Type Name Description System.String parameterName Returns Type Description System.Boolean | Improve this Doc View Source GetFloat(String) Declaration public float GetFloat(string parameterName) Parameters Type Name Description System.String parameterName Returns Type Description System.Single | Improve this Doc View Source GetInteger(String) Declaration public int GetInteger(string parameterName) Parameters Type Name Description System.String parameterName Returns Type Description System.Int32 | Improve this Doc View Source SetBool(String, Boolean) Declaration public void SetBool(string parameterName, bool value) Parameters Type Name Description System.String parameterName System.Boolean value | Improve this Doc View Source SetFloat(String, Single) Declaration public void SetFloat(string parameterName, float value) Parameters Type Name Description System.String parameterName System.Single value | Improve this Doc View Source SetInteger(String, Int32) Declaration public void SetInteger(string parameterName, int value) Parameters Type Name Description System.String parameterName System.Int32 value | Improve this Doc View Source SetTrigger(String) Declaration public void SetTrigger(string parameterName) Parameters Type Name Description System.String parameterName Implements IAnimatorProperty ISceneObjectProperty"
  },
  "api/VRBuilder.Animations.Properties.ExplodableProperty.html": {
    "href": "api/VRBuilder.Animations.Properties.ExplodableProperty.html",
    "title": "Class ExplodableProperty | VR Builder Documentation",
    "keywords": "Class ExplodableProperty Property for a game object that has an exploded view. Inheritance System.Object ProcessSceneObjectProperty ExplodableProperty Implements IExplodableProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.Animations.Properties Assembly : VRBuilder.Animations.dll Syntax public class ExplodableProperty : ProcessSceneObjectProperty, IExplodableProperty, ISceneObjectProperty Properties | Improve this Doc View Source ExplodedObjects Declaration public IEnumerable<Transform> ExplodedObjects { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Transform > Methods | Improve this Doc View Source Explode(Single, Single) Declaration public void Explode(float progress, float scale) Parameters Type Name Description System.Single progress System.Single scale | Improve this Doc View Source InitializeAnimation() Declaration public void InitializeAnimation() Implements IExplodableProperty ISceneObjectProperty"
  },
  "api/VRBuilder.Animations.Properties.html": {
    "href": "api/VRBuilder.Animations.Properties.html",
    "title": "Namespace VRBuilder.Animations.Properties | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Animations.Properties Classes AnimationProperty Property controlling an Animation component. AnimationPropertyEventArgs Event args for events related to IAnimationProperty . AnimatorProperty Property that handles animations by changing parameters on an Animator component. ExplodableProperty Property for a game object that has an exploded view. Interfaces IAnimationProperty Interface for a property handling a single animation at a time. IAnimatorProperty Property for a game object that can be animated through parameters. IExplodableProperty Property for a game object that has an exploded view."
  },
  "api/VRBuilder.Animations.Properties.IAnimationProperty.html": {
    "href": "api/VRBuilder.Animations.Properties.IAnimationProperty.html",
    "title": "Interface IAnimationProperty | VR Builder Documentation",
    "keywords": "Interface IAnimationProperty Interface for a property handling a single animation at a time. Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.Animations.Properties Assembly : VRBuilder.Animations.dll Syntax public interface IAnimationProperty : ISceneObjectProperty Properties | Improve this Doc View Source AnimationEnded Raised when the animation ends. Declaration UnityEvent<AnimationPropertyEventArgs> AnimationEnded { get; } Property Value Type Description UnityEvent < AnimationPropertyEventArgs > | Improve this Doc View Source AnimationStarted Raised when the animation starts. Declaration UnityEvent<AnimationPropertyEventArgs> AnimationStarted { get; } Property Value Type Description UnityEvent < AnimationPropertyEventArgs > | Improve this Doc View Source HasClip True if an animation clip is referenced in the animation. Declaration bool HasClip { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsPlaying True while the animation is playing. Declaration bool IsPlaying { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source FastForward() Instantly brings the animation to its end state. Declaration void FastForward() | Improve this Doc View Source Play() Plays the associated animation. Declaration void Play() | Improve this Doc View Source SetAnimationClip(AnimationClip) Replaces clips in the animation with the specified animation clip. Declaration void SetAnimationClip(AnimationClip clip) Parameters Type Name Description AnimationClip clip The animation clip to be set."
  },
  "api/VRBuilder.Animations.Properties.IAnimatorProperty.html": {
    "href": "api/VRBuilder.Animations.Properties.IAnimatorProperty.html",
    "title": "Interface IAnimatorProperty | VR Builder Documentation",
    "keywords": "Interface IAnimatorProperty Property for a game object that can be animated through parameters. Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.Animations.Properties Assembly : VRBuilder.Animations.dll Syntax public interface IAnimatorProperty : ISceneObjectProperty Properties | Improve this Doc View Source Animator The animator controlled by this property. Declaration Animator Animator { get; } Property Value Type Description Animator Methods | Improve this Doc View Source GetBool(String) Gets a boolean parameter. Declaration bool GetBool(string parameterName) Parameters Type Name Description System.String parameterName Returns Type Description System.Boolean | Improve this Doc View Source GetFloat(String) Gets a float parameter. Declaration float GetFloat(string parameterName) Parameters Type Name Description System.String parameterName Returns Type Description System.Single | Improve this Doc View Source GetInteger(String) Gets a integer parameter. Declaration int GetInteger(string parameterName) Parameters Type Name Description System.String parameterName Returns Type Description System.Int32 | Improve this Doc View Source SetBool(String, Boolean) Sets a boolean parameter. Declaration void SetBool(string parameterName, bool value) Parameters Type Name Description System.String parameterName System.Boolean value | Improve this Doc View Source SetFloat(String, Single) Sets a float parameter. Declaration void SetFloat(string parameterName, float value) Parameters Type Name Description System.String parameterName System.Single value | Improve this Doc View Source SetInteger(String, Int32) Sets a integer parameter. Declaration void SetInteger(string parameterName, int value) Parameters Type Name Description System.String parameterName System.Int32 value | Improve this Doc View Source SetTrigger(String) Triggers an animation. Declaration void SetTrigger(string parameterName) Parameters Type Name Description System.String parameterName"
  },
  "api/VRBuilder.Animations.Properties.IExplodableProperty.html": {
    "href": "api/VRBuilder.Animations.Properties.IExplodableProperty.html",
    "title": "Interface IExplodableProperty | VR Builder Documentation",
    "keywords": "Interface IExplodableProperty Property for a game object that has an exploded view. Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.Animations.Properties Assembly : VRBuilder.Animations.dll Syntax public interface IExplodableProperty : ISceneObjectProperty Properties | Improve this Doc View Source ExplodedObjects Objects that will be animated. Declaration IEnumerable<Transform> ExplodedObjects { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Transform > Methods | Improve this Doc View Source Explode(Single, Single) Explodes the view by the specified ratio. Declaration void Explode(float progress, float scale) Parameters Type Name Description System.Single progress System.Single scale Positive is outwards, negative is inwards. Zero is the original state. | Improve this Doc View Source InitializeAnimation() Initializes the property before a new animation. Declaration void InitializeAnimation()"
  },
  "api/VRBuilder.BaseTemplate.FontSetter.html": {
    "href": "api/VRBuilder.BaseTemplate.FontSetter.html",
    "title": "Class FontSetter | VR Builder Documentation",
    "keywords": "Class FontSetter Utility component to style all child UI text elements. Inheritance System.Object FontSetter Namespace : VRBuilder.BaseTemplate Assembly : VRBuilder.Core.dll Syntax public class FontSetter : MonoBehaviour Fields | Improve this Doc View Source font Declaration protected Font font Field Value Type Description Font | Improve this Doc View Source fontSize Declaration protected int fontSize Field Value Type Description System.Int32 Methods | Improve this Doc View Source Start() Declaration protected void Start()"
  },
  "api/VRBuilder.BaseTemplate.html": {
    "href": "api/VRBuilder.BaseTemplate.html",
    "title": "Namespace VRBuilder.BaseTemplate | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.BaseTemplate Classes FontSetter Utility component to style all child UI text elements."
  },
  "api/VRBuilder.BasicInteraction.AbstractHighlighter.html": {
    "href": "api/VRBuilder.BasicInteraction.AbstractHighlighter.html",
    "title": "Class AbstractHighlighter | VR Builder Documentation",
    "keywords": "Class AbstractHighlighter Collects render information from a IHighlighter object and provides basic utilities for highlighting. Inheritance System.Object AbstractHighlighter DefaultHighlighter Implements IHighlighter Namespace : VRBuilder.BasicInteraction Assembly : VRBuilder.BasicInteraction.dll Syntax public abstract class AbstractHighlighter : MonoBehaviour, IHighlighter Fields | Improve this Doc View Source highlightMeshFilter Declaration protected MeshFilter highlightMeshFilter Field Value Type Description MeshFilter | Improve this Doc View Source highlightMeshRenderer Declaration protected MeshRenderer highlightMeshRenderer Field Value Type Description MeshRenderer | Improve this Doc View Source renderers Declaration protected Renderer[] renderers Field Value Type Description Renderer [] Properties | Improve this Doc View Source IsHighlighting Declaration public abstract bool IsHighlighting { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source CanObjectBeHighlighted() Declaration protected virtual bool CanObjectBeHighlighted() Returns Type Description System.Boolean | Improve this Doc View Source ClearCacheRenderers() Declaration protected void ClearCacheRenderers() | Improve this Doc View Source CreateHighlightMaterial(Color) Creates a highlight material with given color. Declaration protected virtual Material CreateHighlightMaterial(Color highlightColor) Parameters Type Name Description Color highlightColor Returns Type Description Material | Improve this Doc View Source CreateHighlightMaterial(Texture) Creates a highlight material with given texture. Declaration protected virtual Material CreateHighlightMaterial(Texture mainTexture) Parameters Type Name Description Texture mainTexture Returns Type Description Material | Improve this Doc View Source GetHighlightMaterial() Declaration public abstract Material GetHighlightMaterial() Returns Type Description Material | Improve this Doc View Source RefreshCachedRenderers() Declaration protected void RefreshCachedRenderers() | Improve this Doc View Source StartHighlighting(Material) Declaration public abstract void StartHighlighting(Material highlightMaterial) Parameters Type Name Description Material highlightMaterial | Improve this Doc View Source StopHighlighting() Declaration public abstract void StopHighlighting() Implements IHighlighter"
  },
  "api/VRBuilder.BasicInteraction.BaseInteractionSimulator.html": {
    "href": "api/VRBuilder.BasicInteraction.BaseInteractionSimulator.html",
    "title": "Class BaseInteractionSimulator | VR Builder Documentation",
    "keywords": "Class BaseInteractionSimulator Base interaction simulator, only have one concrete simulator implementation in your project. If no concrete implementation is found a BaseInteractionSimulatorDummy will be used. Inheritance System.Object BaseInteractionSimulator BaseInteractionSimulatorDummy Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction Assembly : VRBuilder.BasicInteraction.dll Syntax public abstract class BaseInteractionSimulator Properties | Improve this Doc View Source Instance Current instance of the interaction simulator. Declaration public static BaseInteractionSimulator Instance { get; } Property Value Type Description BaseInteractionSimulator Methods | Improve this Doc View Source GetTeleportationBaseType() Returns the base class used for teleportation in your VR framework. Declaration public abstract Type GetTeleportationBaseType() Returns Type Description System.Type | Improve this Doc View Source Grab(IInteractableObject) Simulates grabbing the given object. Declaration public abstract void Grab(IInteractableObject interactable) Parameters Type Name Description IInteractableObject interactable | Improve this Doc View Source HoverSnapZone(ISnapZone, IInteractableObject) Simulates a hover over a SnapZone. Declaration public abstract void HoverSnapZone(ISnapZone snapZone, IInteractableObject interactable) Parameters Type Name Description ISnapZone snapZone IInteractableObject interactable | Improve this Doc View Source IsColliderValid(GameObject, Collider) True if the provided colliderToValidate is an active collider of the teleportationObject Declaration public abstract bool IsColliderValid(GameObject teleportationObject, Collider colliderToValidate) Parameters Type Name Description GameObject teleportationObject The object with the teleportation logic or used to teleport into. Collider colliderToValidate Collider to validate. Returns Type Description System.Boolean | Improve this Doc View Source Release() Simulates releasing the given object. Declaration public abstract void Release() | Improve this Doc View Source StopTouch() Simulates stop touching the given object. Declaration public abstract void StopTouch() | Improve this Doc View Source StopUse(IInteractableObject) Simulates stop using the given object. Declaration public abstract void StopUse(IInteractableObject interactable) Parameters Type Name Description IInteractableObject interactable | Improve this Doc View Source Teleport(GameObject, GameObject, Vector3, Quaternion) Executes a teleport action. Declaration public abstract void Teleport(GameObject rig, GameObject teleportationObject, Vector3 targetPosition, Quaternion targetRotation) Parameters Type Name Description GameObject rig The rig object. GameObject teleportationObject The object with the teleportation logic or used to teleport into. Vector3 targetPosition Desired position. Quaternion targetRotation Desired rotation | Improve this Doc View Source Touch(IInteractableObject) Simulates touching the given object. Expected behavior is that the object stays touched until StopTouch is called. Declaration public abstract void Touch(IInteractableObject interactable) Parameters Type Name Description IInteractableObject interactable | Improve this Doc View Source UnhoverSnapZone(ISnapZone, IInteractableObject) Simulates a unhover over a SnapZone. Declaration public abstract void UnhoverSnapZone(ISnapZone snapZone, IInteractableObject interactable) Parameters Type Name Description ISnapZone snapZone IInteractableObject interactable | Improve this Doc View Source Use(IInteractableObject) Simulates usage of the object and keeps using the given object until StopUse is called. Declaration public abstract void Use(IInteractableObject interactable) Parameters Type Name Description IInteractableObject interactable"
  },
  "api/VRBuilder.BasicInteraction.BaseInteractionSimulatorDummy.html": {
    "href": "api/VRBuilder.BasicInteraction.BaseInteractionSimulatorDummy.html",
    "title": "Class BaseInteractionSimulatorDummy | VR Builder Documentation",
    "keywords": "Class BaseInteractionSimulatorDummy Interaction simulator dummy, does nothing beside of warning to there is no concrete implementation of a simulator. Inheritance System.Object BaseInteractionSimulator BaseInteractionSimulatorDummy Inherited Members BaseInteractionSimulator.Instance System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction Assembly : VRBuilder.BasicInteraction.dll Syntax public class BaseInteractionSimulatorDummy : BaseInteractionSimulator Methods | Improve this Doc View Source GetTeleportationBaseType() Declaration public override Type GetTeleportationBaseType() Returns Type Description System.Type Overrides BaseInteractionSimulator.GetTeleportationBaseType() | Improve this Doc View Source Grab(IInteractableObject) Declaration public override void Grab(IInteractableObject interactable) Parameters Type Name Description IInteractableObject interactable Overrides BaseInteractionSimulator.Grab(IInteractableObject) | Improve this Doc View Source HoverSnapZone(ISnapZone, IInteractableObject) Declaration public override void HoverSnapZone(ISnapZone snapZone, IInteractableObject interactable) Parameters Type Name Description ISnapZone snapZone IInteractableObject interactable Overrides BaseInteractionSimulator.HoverSnapZone(ISnapZone, IInteractableObject) | Improve this Doc View Source IsColliderValid(GameObject, Collider) Declaration public override bool IsColliderValid(GameObject teleportationObject, Collider colliderToValidate) Parameters Type Name Description GameObject teleportationObject Collider colliderToValidate Returns Type Description System.Boolean Overrides BaseInteractionSimulator.IsColliderValid(GameObject, Collider) | Improve this Doc View Source Release() Declaration public override void Release() Overrides BaseInteractionSimulator.Release() | Improve this Doc View Source StopTouch() Declaration public override void StopTouch() Overrides BaseInteractionSimulator.StopTouch() | Improve this Doc View Source StopUse(IInteractableObject) Declaration public override void StopUse(IInteractableObject interactable) Parameters Type Name Description IInteractableObject interactable Overrides BaseInteractionSimulator.StopUse(IInteractableObject) | Improve this Doc View Source Teleport(GameObject, GameObject, Vector3, Quaternion) Declaration public override void Teleport(GameObject rig, GameObject teleportationObject, Vector3 targetPosition, Quaternion targetRotation) Parameters Type Name Description GameObject rig GameObject teleportationObject Vector3 targetPosition Quaternion targetRotation Overrides BaseInteractionSimulator.Teleport(GameObject, GameObject, Vector3, Quaternion) | Improve this Doc View Source Touch(IInteractableObject) Declaration public override void Touch(IInteractableObject interactable) Parameters Type Name Description IInteractableObject interactable Overrides BaseInteractionSimulator.Touch(IInteractableObject) | Improve this Doc View Source UnhoverSnapZone(ISnapZone, IInteractableObject) Declaration public override void UnhoverSnapZone(ISnapZone snapZone, IInteractableObject interactable) Parameters Type Name Description ISnapZone snapZone IInteractableObject interactable Overrides BaseInteractionSimulator.UnhoverSnapZone(ISnapZone, IInteractableObject) | Improve this Doc View Source Use(IInteractableObject) Declaration public override void Use(IInteractableObject interactable) Parameters Type Name Description IInteractableObject interactable Overrides BaseInteractionSimulator.Use(IInteractableObject)"
  },
  "api/VRBuilder.BasicInteraction.BaseLocomotionHandler.html": {
    "href": "api/VRBuilder.BasicInteraction.BaseLocomotionHandler.html",
    "title": "Class BaseLocomotionHandler | VR Builder Documentation",
    "keywords": "Class BaseLocomotionHandler Handles basic locomotion for e.g. rigs and provides an abstract locomotion layer. Inheritance System.Object BaseLocomotionHandler XRLocomotionHandler Namespace : VRBuilder.BasicInteraction Assembly : VRBuilder.BasicInteraction.dll Syntax public abstract class BaseLocomotionHandler : MonoBehaviour Properties | Improve this Doc View Source CurrentPosition Current position of the rig or camera. Declaration public abstract Vector3 CurrentPosition { get; } Property Value Type Description Vector3 | Improve this Doc View Source CurrentRotation Current rotation of the rig or camera. Declaration public abstract Quaternion CurrentRotation { get; } Property Value Type Description Quaternion Methods | Improve this Doc View Source SetPositionAndRotation(Vector3, Quaternion) Sets a new position and rotation for the rig or camera. Declaration public abstract void SetPositionAndRotation(Vector3 destinationPosition, Quaternion destinationRotation) Parameters Type Name Description Vector3 destinationPosition Target position. Quaternion destinationRotation Target rotation."
  },
  "api/VRBuilder.BasicInteraction.Behaviors.html": {
    "href": "api/VRBuilder.BasicInteraction.Behaviors.html",
    "title": "Namespace VRBuilder.BasicInteraction.Behaviors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.BasicInteraction.Behaviors Classes UnsnapBehavior This behavior unsnaps an object from a snapzone. UnsnapBehavior.EntityData"
  },
  "api/VRBuilder.BasicInteraction.Behaviors.UnsnapBehavior.EntityData.html": {
    "href": "api/VRBuilder.BasicInteraction.Behaviors.UnsnapBehavior.EntityData.html",
    "title": "Class UnsnapBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class UnsnapBehavior.EntityData Inheritance System.Object UnsnapBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Behaviors Assembly : VRBuilder.BasicInteraction.dll Syntax [DisplayName(\"Unsnap\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source SnappedObject Declaration [DataMember] [Obsolete(\"Use TargetObject instead.\")] [LegacyProperty(\"TargetObject\")] public ScenePropertyReference<ISnappableProperty> SnappedObject { get; set; } Property Value Type Description ScenePropertyReference < ISnappableProperty > | Improve this Doc View Source SnapZone Declaration [DataMember] [Obsolete(\"Use TargetSnapzone instead.\")] [LegacyProperty(\"TargetSnapZone\")] public ScenePropertyReference<ISnapZoneProperty> SnapZone { get; set; } Property Value Type Description ScenePropertyReference < ISnapZoneProperty > | Improve this Doc View Source TargetObject Declaration [DataMember] [DisplayName(\"Object to unsnap\")] public SingleScenePropertyReference<ISnappableProperty> TargetObject { get; set; } Property Value Type Description SingleScenePropertyReference < ISnappableProperty > | Improve this Doc View Source TargetSnapZone Declaration [DataMember] [DisplayName(\"Snap zone to unsnap\")] public SingleScenePropertyReference<ISnapZoneProperty> TargetSnapZone { get; set; } Property Value Type Description SingleScenePropertyReference < ISnapZoneProperty > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.BasicInteraction.Behaviors.UnsnapBehavior.html": {
    "href": "api/VRBuilder.BasicInteraction.Behaviors.UnsnapBehavior.html",
    "title": "Class UnsnapBehavior | VR Builder Documentation",
    "keywords": "Class UnsnapBehavior This behavior unsnaps an object from a snapzone. Inheritance System.Object Entity < UnsnapBehavior.EntityData > Behavior < UnsnapBehavior.EntityData > UnsnapBehavior Implements IDataOwner < UnsnapBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<UnsnapBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<UnsnapBehavior.EntityData>.Clone() Entity<UnsnapBehavior.EntityData>.Data Entity<UnsnapBehavior.EntityData>.IDataOwner.Data Entity<UnsnapBehavior.EntityData>.LifeCycle Entity<UnsnapBehavior.EntityData>.Parent Entity<UnsnapBehavior.EntityData>.GetActiveProcess() Entity<UnsnapBehavior.EntityData>.GetDeactivatingProcess() Entity<UnsnapBehavior.EntityData>.GetConfigurator() Entity<UnsnapBehavior.EntityData>.Configure(IMode) Entity<UnsnapBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Behaviors Assembly : VRBuilder.BasicInteraction.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-behaviors/unsnap-object\")] public class UnsnapBehavior : Behavior<UnsnapBehavior.EntityData>, IDataOwner<UnsnapBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source UnsnapBehavior() Declaration [JsonConstructor] public UnsnapBehavior() | Improve this Doc View Source UnsnapBehavior(Guid, Guid) Declaration public UnsnapBehavior(Guid snappedObjectId, Guid snapZoneId) Parameters Type Name Description System.Guid snappedObjectId System.Guid snapZoneId | Improve this Doc View Source UnsnapBehavior(ISnappableProperty, ISnapZoneProperty) Declaration public UnsnapBehavior(ISnappableProperty snappedObject, ISnapZoneProperty snapZone) Parameters Type Name Description ISnappableProperty snappedObject ISnapZoneProperty snapZone Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Behaviors.UnsnapBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.BasicInteraction.Conditions.GrabbedCondition.EntityData.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.GrabbedCondition.EntityData.html",
    "title": "Class GrabbedCondition.EntityData | VR Builder Documentation",
    "keywords": "Class GrabbedCondition.EntityData Inheritance System.Object GrabbedCondition.EntityData Implements IConditionData ICompletableData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DisplayName(\"Grab Object\")] public class EntityData : IConditionData, ICompletableData, INamedData, IData Fields | Improve this Doc View Source KeepUnlocked Declaration [DataMember] [DisplayName(\"Keep objects grabbable after step\")] public bool KeepUnlocked Field Value Type Description System.Boolean Properties | Improve this Doc View Source GrabbableProperty Declaration [DataMember] [Obsolete(\"Use Targets instead.\")] [LegacyProperty(\"Targets\")] public ScenePropertyReference<IGrabbableProperty> GrabbableProperty { get; set; } Property Value Type Description ScenePropertyReference < IGrabbableProperty > | Improve this Doc View Source IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Targets Declaration [DataMember] [DisplayName(\"Grabbable objects\")] public MultipleScenePropertyReference<IGrabbableProperty> Targets { get; set; } Property Value Type Description MultipleScenePropertyReference < IGrabbableProperty > Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.BasicInteraction.Conditions.GrabbedCondition.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.GrabbedCondition.html",
    "title": "Class GrabbedCondition | VR Builder Documentation",
    "keywords": "Class GrabbedCondition Condition which is completed when a IGrabbableProperty is grabbed. Inheritance System.Object Entity < GrabbedCondition.EntityData > CompletableEntity < GrabbedCondition.EntityData > Condition < GrabbedCondition.EntityData > GrabbedCondition Implements IDataOwner < GrabbedCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<GrabbedCondition.EntityData>.IDataOwner<IConditionData>.Data Condition<GrabbedCondition.EntityData>.Clone() CompletableEntity<GrabbedCondition.EntityData>.IsCompleted CompletableEntity<GrabbedCondition.EntityData>.Autocomplete() Entity<GrabbedCondition.EntityData>.Data Entity<GrabbedCondition.EntityData>.IDataOwner.Data Entity<GrabbedCondition.EntityData>.LifeCycle Entity<GrabbedCondition.EntityData>.Parent Entity<GrabbedCondition.EntityData>.GetActivatingProcess() Entity<GrabbedCondition.EntityData>.GetDeactivatingProcess() Entity<GrabbedCondition.EntityData>.GetConfigurator() Entity<GrabbedCondition.EntityData>.Configure(IMode) Entity<GrabbedCondition.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DataContract(IsReference = true)] public class GrabbedCondition : Condition<GrabbedCondition.EntityData>, IDataOwner<GrabbedCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors | Improve this Doc View Source GrabbedCondition() Declaration [JsonConstructor] public GrabbedCondition() | Improve this Doc View Source GrabbedCondition(Guid) Declaration public GrabbedCondition(Guid guid) Parameters Type Name Description System.Guid guid Methods | Improve this Doc View Source GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.GrabbedCondition.EntityData>.GetActiveProcess() | Improve this Doc View Source GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.GrabbedCondition.EntityData>.GetAutocompleter() | Improve this Doc View Source GetLockableProperties() Declaration public override IEnumerable<LockablePropertyData> GetLockableProperties() Returns Type Description System.Collections.Generic.IEnumerable < LockablePropertyData > Overrides VRBuilder.Core.Conditions.Condition<VRBuilder.BasicInteraction.Conditions.GrabbedCondition.EntityData>.GetLockableProperties() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData.html",
    "title": "Class GrabbedObjectWithTagCondition.EntityData | VR Builder Documentation",
    "keywords": "Class GrabbedObjectWithTagCondition.EntityData Inheritance System.Object GrabbedObjectWithTagCondition.EntityData Implements IConditionData ICompletableData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DisplayName(\"Grab Object with Tag\")] public class EntityData : IConditionData, ICompletableData, INamedData, IData Fields | Improve this Doc View Source KeepUnlocked Declaration [DataMember] [DisplayName(\"Keep objects grabbable after step\")] public bool KeepUnlocked Field Value Type Description System.Boolean Properties | Improve this Doc View Source IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Tag Declaration [DataMember] [Obsolete(\"Use Targets instead.\")] [LegacyProperty(\"Targets\")] public SceneObjectTag<IGrabbableProperty> Tag { get; set; } Property Value Type Description SceneObjectTag < IGrabbableProperty > | Improve this Doc View Source Targets Declaration [DataMember] [DisplayName(\"Grabbable objects\")] public MultipleScenePropertyReference<IGrabbableProperty> Targets { get; set; } Property Value Type Description MultipleScenePropertyReference < IGrabbableProperty > Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.html",
    "title": "Class GrabbedObjectWithTagCondition | VR Builder Documentation",
    "keywords": "Class GrabbedObjectWithTagCondition Condition which is completed when a IGrabbableProperty with the given tag is grabbed. Inheritance System.Object Entity < GrabbedObjectWithTagCondition.EntityData > CompletableEntity < GrabbedObjectWithTagCondition.EntityData > Condition < GrabbedObjectWithTagCondition.EntityData > GrabbedObjectWithTagCondition Implements IDataOwner < GrabbedObjectWithTagCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<GrabbedObjectWithTagCondition.EntityData>.IDataOwner<IConditionData>.Data Condition<GrabbedObjectWithTagCondition.EntityData>.Clone() CompletableEntity<GrabbedObjectWithTagCondition.EntityData>.IsCompleted CompletableEntity<GrabbedObjectWithTagCondition.EntityData>.Autocomplete() Entity<GrabbedObjectWithTagCondition.EntityData>.Data Entity<GrabbedObjectWithTagCondition.EntityData>.IDataOwner.Data Entity<GrabbedObjectWithTagCondition.EntityData>.LifeCycle Entity<GrabbedObjectWithTagCondition.EntityData>.Parent Entity<GrabbedObjectWithTagCondition.EntityData>.GetActivatingProcess() Entity<GrabbedObjectWithTagCondition.EntityData>.GetDeactivatingProcess() Entity<GrabbedObjectWithTagCondition.EntityData>.GetConfigurator() Entity<GrabbedObjectWithTagCondition.EntityData>.Configure(IMode) Entity<GrabbedObjectWithTagCondition.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DataContract(IsReference = true)] [Obsolete(\"Use GrabbedCondition instead.\")] public class GrabbedObjectWithTagCondition : Condition<GrabbedObjectWithTagCondition.EntityData>, IDataOwner<GrabbedObjectWithTagCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors | Improve this Doc View Source GrabbedObjectWithTagCondition() Declaration [JsonConstructor] public GrabbedObjectWithTagCondition() | Improve this Doc View Source GrabbedObjectWithTagCondition(Guid) Declaration public GrabbedObjectWithTagCondition(Guid guid) Parameters Type Name Description System.Guid guid Methods | Improve this Doc View Source GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.GetActiveProcess() | Improve this Doc View Source GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.GetAutocompleter() | Improve this Doc View Source GetLockableProperties() Declaration public override IEnumerable<LockablePropertyData> GetLockableProperties() Returns Type Description System.Collections.Generic.IEnumerable < LockablePropertyData > Overrides VRBuilder.Core.Conditions.Condition<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition.EntityData>.GetLockableProperties() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.BasicInteraction.Conditions.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.html",
    "title": "Namespace VRBuilder.BasicInteraction.Conditions | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.BasicInteraction.Conditions Classes GrabbedCondition Condition which is completed when a IGrabbableProperty is grabbed. GrabbedCondition.EntityData GrabbedObjectWithTagCondition Condition which is completed when a IGrabbableProperty with the given tag is grabbed. GrabbedObjectWithTagCondition.EntityData ReleasedCondition Condition which is completed when GrabbableProperty becomes ungrabbed. ReleasedCondition.EntityData SnappedCondition Condition which is completed when an object from a given pool is snapped into a target snap zone. SnappedCondition.EntityData SnappedObjectWithTagCondition Condition which is completed when an object from a given pool is snapped into a target snap zone. SnappedObjectWithTagCondition.EntityData TeleportCondition Condition which is completed when a teleportation action was executed into the referenced ITeleportationProperty . TeleportCondition.EntityData TouchedCondition Condition which is completed when TouchableProperty is touched. TouchedCondition.EntityData UsedCondition Condition which becomes completed when UsableProperty is used. UsedCondition.EntityData"
  },
  "api/VRBuilder.BasicInteraction.Conditions.ReleasedCondition.EntityData.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.ReleasedCondition.EntityData.html",
    "title": "Class ReleasedCondition.EntityData | VR Builder Documentation",
    "keywords": "Class ReleasedCondition.EntityData Inheritance System.Object ReleasedCondition.EntityData Implements IConditionData ICompletableData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DisplayName(\"Release Object\")] public class EntityData : IConditionData, ICompletableData, INamedData, IData Properties | Improve this Doc View Source GrabbableProperties Declaration [DataMember] [DisplayName(\"Grabbable objects\")] public MultipleScenePropertyReference<IGrabbableProperty> GrabbableProperties { get; set; } Property Value Type Description MultipleScenePropertyReference < IGrabbableProperty > | Improve this Doc View Source GrabbableProperty Declaration [DataMember] [Obsolete(\"Use GrabbableProperties instead.\")] [LegacyProperty(\"GrabbableProperties\")] public ScenePropertyReference<IGrabbableProperty> GrabbableProperty { get; set; } Property Value Type Description ScenePropertyReference < IGrabbableProperty > | Improve this Doc View Source IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.BasicInteraction.Conditions.ReleasedCondition.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.ReleasedCondition.html",
    "title": "Class ReleasedCondition | VR Builder Documentation",
    "keywords": "Class ReleasedCondition Condition which is completed when GrabbableProperty becomes ungrabbed. Inheritance System.Object Entity < ReleasedCondition.EntityData > CompletableEntity < ReleasedCondition.EntityData > Condition < ReleasedCondition.EntityData > ReleasedCondition Implements IDataOwner < ReleasedCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<ReleasedCondition.EntityData>.IDataOwner<IConditionData>.Data Condition<ReleasedCondition.EntityData>.Clone() Condition<ReleasedCondition.EntityData>.GetLockableProperties() CompletableEntity<ReleasedCondition.EntityData>.IsCompleted CompletableEntity<ReleasedCondition.EntityData>.Autocomplete() Entity<ReleasedCondition.EntityData>.Data Entity<ReleasedCondition.EntityData>.IDataOwner.Data Entity<ReleasedCondition.EntityData>.LifeCycle Entity<ReleasedCondition.EntityData>.Parent Entity<ReleasedCondition.EntityData>.GetActivatingProcess() Entity<ReleasedCondition.EntityData>.GetDeactivatingProcess() Entity<ReleasedCondition.EntityData>.GetConfigurator() Entity<ReleasedCondition.EntityData>.Configure(IMode) Entity<ReleasedCondition.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-conditions/release-object\")] public class ReleasedCondition : Condition<ReleasedCondition.EntityData>, IDataOwner<ReleasedCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors | Improve this Doc View Source ReleasedCondition() Declaration [JsonConstructor] public ReleasedCondition() | Improve this Doc View Source ReleasedCondition(Guid) Declaration public ReleasedCondition(Guid uniqueId) Parameters Type Name Description System.Guid uniqueId | Improve this Doc View Source ReleasedCondition(IGrabbableProperty) Declaration public ReleasedCondition(IGrabbableProperty target) Parameters Type Name Description IGrabbableProperty target Methods | Improve this Doc View Source GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.ReleasedCondition.EntityData>.GetActiveProcess() | Improve this Doc View Source GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.ReleasedCondition.EntityData>.GetAutocompleter() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.BasicInteraction.Conditions.SnappedCondition.EntityData.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.SnappedCondition.EntityData.html",
    "title": "Class SnappedCondition.EntityData | VR Builder Documentation",
    "keywords": "Class SnappedCondition.EntityData Inheritance System.Object SnappedCondition.EntityData Implements IConditionData ICompletableData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DisplayName(\"Snap Object\")] [DataContract(IsReference = true)] public class EntityData : IConditionData, ICompletableData, INamedData, IData Properties | Improve this Doc View Source IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Target Declaration [DataMember] [Obsolete(\"Use TargetObjects instead.\")] [LegacyProperty(\"TargetObjects\")] public ScenePropertyReference<ISnappableProperty> Target { get; set; } Property Value Type Description ScenePropertyReference < ISnappableProperty > | Improve this Doc View Source TargetObjects Declaration [DataMember] [DisplayName(\"Snappable Objects\")] public MultipleScenePropertyReference<ISnappableProperty> TargetObjects { get; set; } Property Value Type Description MultipleScenePropertyReference < ISnappableProperty > | Improve this Doc View Source TargetSnapZone Declaration [DataMember] [DisplayName(\"Zone to snap into\")] public SingleScenePropertyReference<ISnapZoneProperty> TargetSnapZone { get; set; } Property Value Type Description SingleScenePropertyReference < ISnapZoneProperty > | Improve this Doc View Source ZoneToSnapInto Declaration [DataMember] [Obsolete(\"Use TargetSnapZone instead.\")] [LegacyProperty(\"TargetSnapZone\")] public ScenePropertyReference<ISnapZoneProperty> ZoneToSnapInto { get; set; } Property Value Type Description ScenePropertyReference < ISnapZoneProperty > Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.BasicInteraction.Conditions.SnappedCondition.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.SnappedCondition.html",
    "title": "Class SnappedCondition | VR Builder Documentation",
    "keywords": "Class SnappedCondition Condition which is completed when an object from a given pool is snapped into a target snap zone. Inheritance System.Object Entity < SnappedCondition.EntityData > CompletableEntity < SnappedCondition.EntityData > Condition < SnappedCondition.EntityData > SnappedCondition Implements IDataOwner < SnappedCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<SnappedCondition.EntityData>.IDataOwner<IConditionData>.Data Condition<SnappedCondition.EntityData>.Clone() Condition<SnappedCondition.EntityData>.GetLockableProperties() CompletableEntity<SnappedCondition.EntityData>.IsCompleted CompletableEntity<SnappedCondition.EntityData>.Autocomplete() Entity<SnappedCondition.EntityData>.Data Entity<SnappedCondition.EntityData>.IDataOwner.Data Entity<SnappedCondition.EntityData>.LifeCycle Entity<SnappedCondition.EntityData>.Parent Entity<SnappedCondition.EntityData>.GetActivatingProcess() Entity<SnappedCondition.EntityData>.GetDeactivatingProcess() Entity<SnappedCondition.EntityData>.Configure(IMode) Entity<SnappedCondition.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-conditions/snap-object\")] public class SnappedCondition : Condition<SnappedCondition.EntityData>, IDataOwner<SnappedCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors | Improve this Doc View Source SnappedCondition() Declaration [JsonConstructor] public SnappedCondition() | Improve this Doc View Source SnappedCondition(Guid, Guid) Declaration public SnappedCondition(Guid targets, Guid snapZone) Parameters Type Name Description System.Guid targets System.Guid snapZone | Improve this Doc View Source SnappedCondition(ISnappableProperty, ISnapZoneProperty) Declaration public SnappedCondition(ISnappableProperty target, ISnapZoneProperty snapZone) Parameters Type Name Description ISnappableProperty target ISnapZoneProperty snapZone Methods | Improve this Doc View Source GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.SnappedCondition.EntityData>.GetActiveProcess() | Improve this Doc View Source GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.SnappedCondition.EntityData>.GetAutocompleter() | Improve this Doc View Source GetConfigurator() Declaration protected override IConfigurator GetConfigurator() Returns Type Description IConfigurator Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.SnappedCondition.EntityData>.GetConfigurator() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.BasicInteraction.Conditions.SnappedObjectWithTagCondition.EntityData.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.SnappedObjectWithTagCondition.EntityData.html",
    "title": "Class SnappedObjectWithTagCondition.EntityData | VR Builder Documentation",
    "keywords": "Class SnappedObjectWithTagCondition.EntityData Inheritance System.Object SnappedObjectWithTagCondition.EntityData Implements IConditionData ICompletableData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DisplayName(\"Snap Object (Tag)\")] [DataContract(IsReference = true)] public class EntityData : IConditionData, ICompletableData, INamedData, IData Properties | Improve this Doc View Source IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Tag Declaration [DataMember] [Obsolete(\"Use TargetObjects instead.\")] [LegacyProperty(\"TargetObjects\")] public SceneObjectTag<ISnappableProperty> Tag { get; set; } Property Value Type Description SceneObjectTag < ISnappableProperty > | Improve this Doc View Source TargetObjects Declaration [DataMember] [DisplayName(\"Snappable Objects\")] public MultipleScenePropertyReference<ISnappableProperty> TargetObjects { get; set; } Property Value Type Description MultipleScenePropertyReference < ISnappableProperty > | Improve this Doc View Source TargetSnapZone Declaration [DataMember] [DisplayName(\"Zone to snap into\")] public SingleScenePropertyReference<ISnapZoneProperty> TargetSnapZone { get; set; } Property Value Type Description SingleScenePropertyReference < ISnapZoneProperty > | Improve this Doc View Source ZoneToSnapInto Declaration [DataMember] [Obsolete(\"Use TargetSnapZone instead.\")] [LegacyProperty(\"TargetSnapZone\")] public ScenePropertyReference<ISnapZoneProperty> ZoneToSnapInto { get; set; } Property Value Type Description ScenePropertyReference < ISnapZoneProperty > Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.BasicInteraction.Conditions.SnappedObjectWithTagCondition.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.SnappedObjectWithTagCondition.html",
    "title": "Class SnappedObjectWithTagCondition | VR Builder Documentation",
    "keywords": "Class SnappedObjectWithTagCondition Condition which is completed when an object from a given pool is snapped into a target snap zone. Inheritance System.Object Entity < SnappedObjectWithTagCondition.EntityData > CompletableEntity < SnappedObjectWithTagCondition.EntityData > Condition < SnappedObjectWithTagCondition.EntityData > SnappedObjectWithTagCondition Implements IDataOwner < SnappedObjectWithTagCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<SnappedObjectWithTagCondition.EntityData>.IDataOwner<IConditionData>.Data Condition<SnappedObjectWithTagCondition.EntityData>.Clone() Condition<SnappedObjectWithTagCondition.EntityData>.GetLockableProperties() CompletableEntity<SnappedObjectWithTagCondition.EntityData>.IsCompleted CompletableEntity<SnappedObjectWithTagCondition.EntityData>.Autocomplete() Entity<SnappedObjectWithTagCondition.EntityData>.Data Entity<SnappedObjectWithTagCondition.EntityData>.IDataOwner.Data Entity<SnappedObjectWithTagCondition.EntityData>.LifeCycle Entity<SnappedObjectWithTagCondition.EntityData>.Parent Entity<SnappedObjectWithTagCondition.EntityData>.GetActivatingProcess() Entity<SnappedObjectWithTagCondition.EntityData>.GetDeactivatingProcess() Entity<SnappedObjectWithTagCondition.EntityData>.Configure(IMode) Entity<SnappedObjectWithTagCondition.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-conditions/snap-object\")] [Obsolete(\"Use SnappedCondition instead.\")] public class SnappedObjectWithTagCondition : Condition<SnappedObjectWithTagCondition.EntityData>, IDataOwner<SnappedObjectWithTagCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors | Improve this Doc View Source SnappedObjectWithTagCondition() Declaration [JsonConstructor] public SnappedObjectWithTagCondition() | Improve this Doc View Source SnappedObjectWithTagCondition(Guid, Guid) Declaration public SnappedObjectWithTagCondition(Guid targets, Guid snapZone) Parameters Type Name Description System.Guid targets System.Guid snapZone | Improve this Doc View Source SnappedObjectWithTagCondition(ISnappableProperty, ISnapZoneProperty) Declaration public SnappedObjectWithTagCondition(ISnappableProperty target, ISnapZoneProperty snapZone) Parameters Type Name Description ISnappableProperty target ISnapZoneProperty snapZone Methods | Improve this Doc View Source GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.SnappedObjectWithTagCondition.EntityData>.GetActiveProcess() | Improve this Doc View Source GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.SnappedObjectWithTagCondition.EntityData>.GetAutocompleter() | Improve this Doc View Source GetConfigurator() Declaration protected override IConfigurator GetConfigurator() Returns Type Description IConfigurator Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.SnappedObjectWithTagCondition.EntityData>.GetConfigurator() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.BasicInteraction.Conditions.TeleportCondition.EntityData.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.TeleportCondition.EntityData.html",
    "title": "Class TeleportCondition.EntityData | VR Builder Documentation",
    "keywords": "Class TeleportCondition.EntityData Inheritance System.Object TeleportCondition.EntityData Implements IConditionData ICompletableData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DisplayName(\"Teleport\")] [DataContract(IsReference = true)] public class EntityData : IConditionData, ICompletableData, INamedData, IData Properties | Improve this Doc View Source IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source TeleportationPoint Declaration [DataMember] [Obsolete(\"Use TeleportationPoints instead.\")] [LegacyProperty(\"TeleportationPoints\")] public ScenePropertyReference<ITeleportationProperty> TeleportationPoint { get; set; } Property Value Type Description ScenePropertyReference < ITeleportationProperty > | Improve this Doc View Source TeleportationPoints Declaration [DataMember] [DisplayName(\"Teleportation Points\")] public MultipleScenePropertyReference<ITeleportationProperty> TeleportationPoints { get; set; } Property Value Type Description MultipleScenePropertyReference < ITeleportationProperty > Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.BasicInteraction.Conditions.TeleportCondition.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.TeleportCondition.html",
    "title": "Class TeleportCondition | VR Builder Documentation",
    "keywords": "Class TeleportCondition Condition which is completed when a teleportation action was executed into the referenced ITeleportationProperty . Inheritance System.Object Entity < TeleportCondition.EntityData > CompletableEntity < TeleportCondition.EntityData > Condition < TeleportCondition.EntityData > TeleportCondition Implements IDataOwner < TeleportCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<TeleportCondition.EntityData>.IDataOwner<IConditionData>.Data Condition<TeleportCondition.EntityData>.Clone() Condition<TeleportCondition.EntityData>.GetLockableProperties() CompletableEntity<TeleportCondition.EntityData>.IsCompleted CompletableEntity<TeleportCondition.EntityData>.Autocomplete() Entity<TeleportCondition.EntityData>.Data Entity<TeleportCondition.EntityData>.IDataOwner.Data Entity<TeleportCondition.EntityData>.LifeCycle Entity<TeleportCondition.EntityData>.Parent Entity<TeleportCondition.EntityData>.GetActivatingProcess() Entity<TeleportCondition.EntityData>.GetDeactivatingProcess() Entity<TeleportCondition.EntityData>.GetConfigurator() Entity<TeleportCondition.EntityData>.Configure(IMode) Entity<TeleportCondition.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-conditions/teleport\")] public class TeleportCondition : Condition<TeleportCondition.EntityData>, IDataOwner<TeleportCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors | Improve this Doc View Source TeleportCondition() Declaration [JsonConstructor] public TeleportCondition() | Improve this Doc View Source TeleportCondition(Guid) Declaration public TeleportCondition(Guid teleportationPoint) Parameters Type Name Description System.Guid teleportationPoint | Improve this Doc View Source TeleportCondition(ITeleportationProperty) Declaration public TeleportCondition(ITeleportationProperty teleportationPoint) Parameters Type Name Description ITeleportationProperty teleportationPoint Methods | Improve this Doc View Source GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.TeleportCondition.EntityData>.GetActiveProcess() | Improve this Doc View Source GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.TeleportCondition.EntityData>.GetAutocompleter() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.html",
    "title": "Class TouchedCondition.EntityData | VR Builder Documentation",
    "keywords": "Class TouchedCondition.EntityData Inheritance System.Object TouchedCondition.EntityData Implements IConditionData ICompletableData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DisplayName(\"Touch Object\")] public class EntityData : IConditionData, ICompletableData, INamedData, IData Properties | Improve this Doc View Source IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source TouchableProperties Declaration [DataMember] [DisplayName(\"Touchable objects\")] public MultipleScenePropertyReference<ITouchableProperty> TouchableProperties { get; set; } Property Value Type Description MultipleScenePropertyReference < ITouchableProperty > | Improve this Doc View Source TouchableProperty Declaration [DataMember] [Obsolete(\"Use TouchableProperties instead.\")] [LegacyProperty(\"TouchableProperties\")] public ScenePropertyReference<ITouchableProperty> TouchableProperty { get; set; } Property Value Type Description ScenePropertyReference < ITouchableProperty > Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.BasicInteraction.Conditions.TouchedCondition.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.TouchedCondition.html",
    "title": "Class TouchedCondition | VR Builder Documentation",
    "keywords": "Class TouchedCondition Condition which is completed when TouchableProperty is touched. Inheritance System.Object Entity < TouchedCondition.EntityData > CompletableEntity < TouchedCondition.EntityData > Condition < TouchedCondition.EntityData > TouchedCondition Implements IDataOwner < TouchedCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<TouchedCondition.EntityData>.IDataOwner<IConditionData>.Data Condition<TouchedCondition.EntityData>.Clone() Condition<TouchedCondition.EntityData>.GetLockableProperties() CompletableEntity<TouchedCondition.EntityData>.IsCompleted CompletableEntity<TouchedCondition.EntityData>.Autocomplete() Entity<TouchedCondition.EntityData>.Data Entity<TouchedCondition.EntityData>.IDataOwner.Data Entity<TouchedCondition.EntityData>.LifeCycle Entity<TouchedCondition.EntityData>.Parent Entity<TouchedCondition.EntityData>.GetActivatingProcess() Entity<TouchedCondition.EntityData>.GetDeactivatingProcess() Entity<TouchedCondition.EntityData>.GetConfigurator() Entity<TouchedCondition.EntityData>.Configure(IMode) Entity<TouchedCondition.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-conditions/touch-object\")] public class TouchedCondition : Condition<TouchedCondition.EntityData>, IDataOwner<TouchedCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors | Improve this Doc View Source TouchedCondition() Declaration [JsonConstructor] public TouchedCondition() | Improve this Doc View Source TouchedCondition(Guid) Declaration public TouchedCondition(Guid uniqueId) Parameters Type Name Description System.Guid uniqueId | Improve this Doc View Source TouchedCondition(String) Declaration [Obsolete(\"This constructor only supports guids and will be removed in the next major version.\")] public TouchedCondition(string uniqueId) Parameters Type Name Description System.String uniqueId | Improve this Doc View Source TouchedCondition(ITouchableProperty) Declaration public TouchedCondition(ITouchableProperty target) Parameters Type Name Description ITouchableProperty target Methods | Improve this Doc View Source GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData>.GetActiveProcess() | Improve this Doc View Source GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData>.GetAutocompleter() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.BasicInteraction.Conditions.UsedCondition.EntityData.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.UsedCondition.EntityData.html",
    "title": "Class UsedCondition.EntityData | VR Builder Documentation",
    "keywords": "Class UsedCondition.EntityData Inheritance System.Object UsedCondition.EntityData Implements IConditionData ICompletableData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DisplayName(\"Use Object\")] public class EntityData : IConditionData, ICompletableData, INamedData, IData Properties | Improve this Doc View Source IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source UsableObjects Declaration [DataMember] [DisplayName(\"Objects\")] public MultipleScenePropertyReference<IUsableProperty> UsableObjects { get; set; } Property Value Type Description MultipleScenePropertyReference < IUsableProperty > | Improve this Doc View Source UsableProperty Declaration [DataMember] [Obsolete(\"Use UsableObjects instead.\")] [LegacyProperty(\"UsableObjects\")] public ScenePropertyReference<IUsableProperty> UsableProperty { get; set; } Property Value Type Description ScenePropertyReference < IUsableProperty > Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.BasicInteraction.Conditions.UsedCondition.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.UsedCondition.html",
    "title": "Class UsedCondition | VR Builder Documentation",
    "keywords": "Class UsedCondition Condition which becomes completed when UsableProperty is used. Inheritance System.Object Entity < UsedCondition.EntityData > CompletableEntity < UsedCondition.EntityData > Condition < UsedCondition.EntityData > UsedCondition Implements IDataOwner < UsedCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<UsedCondition.EntityData>.IDataOwner<IConditionData>.Data Condition<UsedCondition.EntityData>.Clone() CompletableEntity<UsedCondition.EntityData>.IsCompleted CompletableEntity<UsedCondition.EntityData>.Autocomplete() Entity<UsedCondition.EntityData>.Data Entity<UsedCondition.EntityData>.IDataOwner.Data Entity<UsedCondition.EntityData>.LifeCycle Entity<UsedCondition.EntityData>.Parent Entity<UsedCondition.EntityData>.GetActivatingProcess() Entity<UsedCondition.EntityData>.GetDeactivatingProcess() Entity<UsedCondition.EntityData>.GetConfigurator() Entity<UsedCondition.EntityData>.Configure(IMode) Entity<UsedCondition.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-conditions/use-object\")] public class UsedCondition : Condition<UsedCondition.EntityData>, IDataOwner<UsedCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors | Improve this Doc View Source UsedCondition() Declaration [JsonConstructor] public UsedCondition() | Improve this Doc View Source UsedCondition(Guid) Declaration public UsedCondition(Guid target) Parameters Type Name Description System.Guid target | Improve this Doc View Source UsedCondition(String) Declaration [Obsolete(\"This constructor will be removed in the next major version.\")] public UsedCondition(string target) Parameters Type Name Description System.String target | Improve this Doc View Source UsedCondition(IUsableProperty) Declaration public UsedCondition(IUsableProperty target) Parameters Type Name Description IUsableProperty target Methods | Improve this Doc View Source GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.UsedCondition.EntityData>.GetActiveProcess() | Improve this Doc View Source GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.UsedCondition.EntityData>.GetAutocompleter() | Improve this Doc View Source GetLockableProperties() Declaration public override IEnumerable<LockablePropertyData> GetLockableProperties() Returns Type Description System.Collections.Generic.IEnumerable < LockablePropertyData > Overrides VRBuilder.Core.Conditions.Condition<VRBuilder.BasicInteraction.Conditions.UsedCondition.EntityData>.GetLockableProperties() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.BasicInteraction.DefaultHighlighter.html": {
    "href": "api/VRBuilder.BasicInteraction.DefaultHighlighter.html",
    "title": "Class DefaultHighlighter | VR Builder Documentation",
    "keywords": "Class DefaultHighlighter Inheritance System.Object AbstractHighlighter DefaultHighlighter InteractableHighlighter Implements IHighlighter Inherited Members AbstractHighlighter.renderers AbstractHighlighter.highlightMeshRenderer AbstractHighlighter.highlightMeshFilter AbstractHighlighter.ClearCacheRenderers() AbstractHighlighter.RefreshCachedRenderers() AbstractHighlighter.CreateHighlightMaterial(Color) AbstractHighlighter.CreateHighlightMaterial(Texture) AbstractHighlighter.CanObjectBeHighlighted() Namespace : VRBuilder.BasicInteraction Assembly : VRBuilder.BasicInteraction.dll Syntax public class DefaultHighlighter : AbstractHighlighter, IHighlighter Remarks Highlights are always queued following a LIFO (Last In First Out) scheme. Properties | Improve this Doc View Source IsHighlighting Declaration public override bool IsHighlighting { get; } Property Value Type Description System.Boolean Overrides AbstractHighlighter.IsHighlighting Methods | Improve this Doc View Source DisableRenders() Declaration protected void DisableRenders() | Improve this Doc View Source ForceRefreshCachedRenderers() Regenerates the cached renderers. Declaration public void ForceRefreshCachedRenderers() | Improve this Doc View Source GetHighlightMaterial() Declaration public override Material GetHighlightMaterial() Returns Type Description Material Overrides AbstractHighlighter.GetHighlightMaterial() | Improve this Doc View Source OnDisable() Declaration protected virtual void OnDisable() | Improve this Doc View Source ReenableRenderers() Declaration protected void ReenableRenderers() | Improve this Doc View Source Reset() Declaration protected virtual void Reset() | Improve this Doc View Source StartHighlighting(Color, String) Highlights this object with given highlightColor . Declaration public string StartHighlighting(Color highlightColor, string highlightID) Parameters Type Name Description Color highlightColor System.String highlightID Returns Type Description System.String An ID corresponding to the highlight, should be used in StopHighlighting() . Remarks Every highlight requires an ID to avoid duplications. | Improve this Doc View Source StartHighlighting(Material) Declaration public override void StartHighlighting(Material highlightMaterial) Parameters Type Name Description Material highlightMaterial Overrides AbstractHighlighter.StartHighlighting(Material) | Improve this Doc View Source StartHighlighting(Material, String) Highlights this object with given highlightMaterial . Declaration public string StartHighlighting(Material highlightMaterial, string highlightID) Parameters Type Name Description Material highlightMaterial System.String highlightID Returns Type Description System.String An ID corresponding to the highlight, should be used in StopHighlighting() . Remarks Every highlight requires an ID to avoid duplications. | Improve this Doc View Source StartHighlighting(Texture, String) Highlights this object with given highlightTexture . Declaration public string StartHighlighting(Texture highlightTexture, string highlightID) Parameters Type Name Description Texture highlightTexture System.String highlightID Returns Type Description System.String An ID corresponding to the highlight, should be used in StopHighlighting() . Remarks Every highlight requires an ID to avoid duplications. | Improve this Doc View Source StopHighlighting() Declaration public override void StopHighlighting() Overrides AbstractHighlighter.StopHighlighting() | Improve this Doc View Source StopHighlighting(String) Stops a highlight of given highlightID . Declaration public void StopHighlighting(string highlightID) Parameters Type Name Description System.String highlightID Implements IHighlighter"
  },
  "api/VRBuilder.BasicInteraction.ExcludeFromHighlightMesh.html": {
    "href": "api/VRBuilder.BasicInteraction.ExcludeFromHighlightMesh.html",
    "title": "Class ExcludeFromHighlightMesh | VR Builder Documentation",
    "keywords": "Class ExcludeFromHighlightMesh Can be added to GameObjects to exclude them from automatically generated highlights. If you want to add this to your MonoBehaviour, use IExcludeFromHighlightMesh Inheritance System.Object ExcludeFromHighlightMesh Implements IExcludeFromHighlightMesh Namespace : VRBuilder.BasicInteraction Assembly : VRBuilder.BasicInteraction.dll Syntax public sealed class ExcludeFromHighlightMesh : MonoBehaviour, IExcludeFromHighlightMesh Implements IExcludeFromHighlightMesh"
  },
  "api/VRBuilder.BasicInteraction.html": {
    "href": "api/VRBuilder.BasicInteraction.html",
    "title": "Namespace VRBuilder.BasicInteraction | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.BasicInteraction Classes AbstractHighlighter Collects render information from a IHighlighter object and provides basic utilities for highlighting. BaseInteractionSimulator Base interaction simulator, only have one concrete simulator implementation in your project. If no concrete implementation is found a BaseInteractionSimulatorDummy will be used. BaseInteractionSimulatorDummy Interaction simulator dummy, does nothing beside of warning to there is no concrete implementation of a simulator. BaseLocomotionHandler Handles basic locomotion for e.g. rigs and provides an abstract locomotion layer. DefaultHighlighter ExcludeFromHighlightMesh Can be added to GameObjects to exclude them from automatically generated highlights. If you want to add this to your MonoBehaviour, use IExcludeFromHighlightMesh Interfaces IExcludeFromHighlightMesh Objects inheriting this interface will be excluded from automatically generated highlights. IHighlighter Adds highlighting functionality to a GameObject with Renderers. IInteractableObject Base interface to determine that the given class is an interactable object. ISnapZone Base interface for SnapZone, if you add an custom interaction framework add this interface to your SnapZone implementation."
  },
  "api/VRBuilder.BasicInteraction.IExcludeFromHighlightMesh.html": {
    "href": "api/VRBuilder.BasicInteraction.IExcludeFromHighlightMesh.html",
    "title": "Interface IExcludeFromHighlightMesh | VR Builder Documentation",
    "keywords": "Interface IExcludeFromHighlightMesh Objects inheriting this interface will be excluded from automatically generated highlights. Namespace : VRBuilder.BasicInteraction Assembly : VRBuilder.BasicInteraction.dll Syntax public interface IExcludeFromHighlightMesh"
  },
  "api/VRBuilder.BasicInteraction.IHighlighter.html": {
    "href": "api/VRBuilder.BasicInteraction.IHighlighter.html",
    "title": "Interface IHighlighter | VR Builder Documentation",
    "keywords": "Interface IHighlighter Adds highlighting functionality to a GameObject with Renderers. Namespace : VRBuilder.BasicInteraction Assembly : VRBuilder.BasicInteraction.dll Syntax public interface IHighlighter Properties | Improve this Doc View Source IsHighlighting Returns true if there is this object is currently being highlighted. Declaration bool IsHighlighting { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source GetHighlightMaterial() Declaration Material GetHighlightMaterial() Returns Type Description Material | Improve this Doc View Source StartHighlighting(Material) Starts highlighting this object. Declaration void StartHighlighting(Material highlightMaterial) Parameters Type Name Description Material highlightMaterial Material to be applied as highlight. | Improve this Doc View Source StopHighlighting() Stops highlighting this object. Declaration void StopHighlighting()"
  },
  "api/VRBuilder.BasicInteraction.IInteractableObject.html": {
    "href": "api/VRBuilder.BasicInteraction.IInteractableObject.html",
    "title": "Interface IInteractableObject | VR Builder Documentation",
    "keywords": "Interface IInteractableObject Base interface to determine that the given class is an interactable object. Namespace : VRBuilder.BasicInteraction Assembly : VRBuilder.BasicInteraction.dll Syntax public interface IInteractableObject Properties | Improve this Doc View Source GameObject GameObject this interactable object is attached to. Declaration GameObject GameObject { get; } Property Value Type Description GameObject | Improve this Doc View Source IsGrabbable Determines if this interactable object can be grabbed. Declaration bool IsGrabbable { set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsTouchable Determines if this interactable object can be touched. Declaration bool IsTouchable { set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsUsable Determines if this interactable object can be used. Declaration bool IsUsable { set; } Property Value Type Description System.Boolean"
  },
  "api/VRBuilder.BasicInteraction.ISnapZone.html": {
    "href": "api/VRBuilder.BasicInteraction.ISnapZone.html",
    "title": "Interface ISnapZone | VR Builder Documentation",
    "keywords": "Interface ISnapZone Base interface for SnapZone, if you add an custom interaction framework add this interface to your SnapZone implementation. Namespace : VRBuilder.BasicInteraction Assembly : VRBuilder.BasicInteraction.dll Syntax public interface ISnapZone Properties | Improve this Doc View Source Anchor Position where the object is snapped. Declaration Transform Anchor { get; } Property Value Type Description Transform | Improve this Doc View Source IsEmpty Returns if the SnapZone is empty. Declaration bool IsEmpty { get; } Property Value Type Description System.Boolean | Improve this Doc View Source SnappedObject Returns the snapped object, can be null. Declaration ISnappableProperty SnappedObject { get; } Property Value Type Description ISnappableProperty Methods | Improve this Doc View Source CanSnap(ISnappableProperty) Returns if the object can be snapped at all. Declaration bool CanSnap(ISnappableProperty target) Parameters Type Name Description ISnappableProperty target Returns Type Description System.Boolean | Improve this Doc View Source ForceRelease() Forces release the snapped object, will return false when there is no object. Declaration bool ForceRelease() Returns Type Description System.Boolean | Improve this Doc View Source ForceSnap(ISnappableProperty) Forces the object to be snapped, returns true when it was snapped successfully. Declaration bool ForceSnap(ISnappableProperty target) Parameters Type Name Description ISnappableProperty target Returns Type Description System.Boolean"
  },
  "api/VRBuilder.BasicInteraction.Properties.GrabbablePropertyEventArgs.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.GrabbablePropertyEventArgs.html",
    "title": "Class GrabbablePropertyEventArgs | VR Builder Documentation",
    "keywords": "Class GrabbablePropertyEventArgs Event args for IGrabbableProperty events. Inheritance System.Object System.EventArgs GrabbablePropertyEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public class GrabbablePropertyEventArgs : EventArgs"
  },
  "api/VRBuilder.BasicInteraction.Properties.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.html",
    "title": "Namespace VRBuilder.BasicInteraction.Properties | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.BasicInteraction.Properties Classes GrabbablePropertyEventArgs Event args for IGrabbableProperty events. SnappablePropertyEventArgs Event args for ISnappableProperty events. SnapZonePropertyEventArgs TeleportationPropertyEventArgs Event args for ITeleportationProperty events. TouchablePropertyEventArgs Event args for ITouchableProperty events. UsablePropertyEventArgs Interfaces IGrabbableProperty ISnappableProperty ISnapZoneProperty ITeleportationProperty Interface for ISceneObjectProperty s that can be used for teleport into. ITouchableProperty IUsableProperty"
  },
  "api/VRBuilder.BasicInteraction.Properties.IGrabbableProperty.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.IGrabbableProperty.html",
    "title": "Interface IGrabbableProperty | VR Builder Documentation",
    "keywords": "Interface IGrabbableProperty Inherited Members ISceneObjectProperty.SceneObject ILockable.Locked ILockable.Unlocked ILockable.IsLocked ILockable.SetLocked(Boolean) ILockable.RequestLocked(Boolean, IStepData) ILockable.RemoveUnlocker(IStepData) Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public interface IGrabbableProperty : ISceneObjectProperty, ILockable Properties | Improve this Doc View Source GrabEnded Called when ungrabbed. Declaration UnityEvent<GrabbablePropertyEventArgs> GrabEnded { get; } Property Value Type Description UnityEvent < GrabbablePropertyEventArgs > | Improve this Doc View Source GrabStarted Called when grabbed. Declaration UnityEvent<GrabbablePropertyEventArgs> GrabStarted { get; } Property Value Type Description UnityEvent < GrabbablePropertyEventArgs > | Improve this Doc View Source IsGrabbed Is object currently grabbed. Declaration bool IsGrabbed { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source FastForwardGrab() Instantaneously simulate that the object was grabbed. Declaration void FastForwardGrab() | Improve this Doc View Source FastForwardUngrab() Instantaneously simulate that the object was ungrabbed. Declaration void FastForwardUngrab() | Improve this Doc View Source ForceSetGrabbed(Boolean) Force this property to a specified grabbed state. Declaration void ForceSetGrabbed(bool isGrabbed) Parameters Type Name Description System.Boolean isGrabbed"
  },
  "api/VRBuilder.BasicInteraction.Properties.ISnappableProperty.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.ISnappableProperty.html",
    "title": "Interface ISnappableProperty | VR Builder Documentation",
    "keywords": "Interface ISnappableProperty Inherited Members ISceneObjectProperty.SceneObject ILockable.Locked ILockable.Unlocked ILockable.IsLocked ILockable.SetLocked(Boolean) ILockable.RequestLocked(Boolean, IStepData) ILockable.RemoveUnlocker(IStepData) Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public interface ISnappableProperty : ISceneObjectProperty, ILockable Properties | Improve this Doc View Source AttachedToSnapZone Called when the object is snapped to a snap zone. Declaration UnityEvent<SnappablePropertyEventArgs> AttachedToSnapZone { get; } Property Value Type Description UnityEvent < SnappablePropertyEventArgs > | Improve this Doc View Source DetachedFromSnapZone Called when the object is unsnapped from a snap zone. Declaration UnityEvent<SnappablePropertyEventArgs> DetachedFromSnapZone { get; } Property Value Type Description UnityEvent < SnappablePropertyEventArgs > | Improve this Doc View Source IsSnapped Is object currently snapped. Declaration bool IsSnapped { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LockObjectOnSnap Will object be locked when it has been snapped. Declaration bool LockObjectOnSnap { get; } Property Value Type Description System.Boolean | Improve this Doc View Source SnappedZone Zone to snap into. Declaration ISnapZoneProperty SnappedZone { get; set; } Property Value Type Description ISnapZoneProperty Methods | Improve this Doc View Source FastForwardSnapInto(ISnapZoneProperty) Instantaneously simulate that the object was snapped into given snapZone . Declaration void FastForwardSnapInto(ISnapZoneProperty snapZone) Parameters Type Name Description ISnapZoneProperty snapZone Snap zone to snap into."
  },
  "api/VRBuilder.BasicInteraction.Properties.ISnapZoneProperty.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.ISnapZoneProperty.html",
    "title": "Interface ISnapZoneProperty | VR Builder Documentation",
    "keywords": "Interface ISnapZoneProperty Inherited Members ISceneObjectProperty.SceneObject ILockable.Locked ILockable.Unlocked ILockable.IsLocked ILockable.SetLocked(Boolean) ILockable.RequestLocked(Boolean, IStepData) ILockable.RemoveUnlocker(IStepData) Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public interface ISnapZoneProperty : ISceneObjectProperty, ILockable Properties | Improve this Doc View Source IsObjectSnapped Currently has an object snapped into this snap zone. Declaration bool IsObjectSnapped { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ObjectAttached Called when an object is snapped to the snap zone. Declaration UnityEvent<SnapZonePropertyEventArgs> ObjectAttached { get; } Property Value Type Description UnityEvent < SnapZonePropertyEventArgs > | Improve this Doc View Source ObjectDetached Called when an object is unsnapped from the snap zone. Declaration UnityEvent<SnapZonePropertyEventArgs> ObjectDetached { get; } Property Value Type Description UnityEvent < SnapZonePropertyEventArgs > | Improve this Doc View Source SnappedObject Object which is snapped into this snap zone. Declaration ISnappableProperty SnappedObject { get; set; } Property Value Type Description ISnappableProperty | Improve this Doc View Source SnapZoneObject Snap zone object. Declaration GameObject SnapZoneObject { get; } Property Value Type Description GameObject Methods | Improve this Doc View Source Configure(IMode) Declaration void Configure(IMode mode) Parameters Type Name Description IMode mode"
  },
  "api/VRBuilder.BasicInteraction.Properties.ITeleportationProperty.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.ITeleportationProperty.html",
    "title": "Interface ITeleportationProperty | VR Builder Documentation",
    "keywords": "Interface ITeleportationProperty Interface for ISceneObjectProperty s that can be used for teleport into. Inherited Members ISceneObjectProperty.SceneObject ILockable.Locked ILockable.Unlocked ILockable.IsLocked ILockable.SetLocked(Boolean) ILockable.RequestLocked(Boolean, IStepData) ILockable.RemoveUnlocker(IStepData) Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public interface ITeleportationProperty : ISceneObjectProperty, ILockable Properties | Improve this Doc View Source IsActive True if the teleportation property is ready to be teleported to. Declaration bool IsActive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source OnInitialized Emitted when the teleportation property is initialized. Declaration UnityEvent OnInitialized { get; } Property Value Type Description UnityEvent | Improve this Doc View Source TeleportEnded Emitted when a teleportation action into this ISceneObject was done. Declaration UnityEvent<TeleportationPropertyEventArgs> TeleportEnded { get; } Property Value Type Description UnityEvent < TeleportationPropertyEventArgs > | Improve this Doc View Source WasUsedToTeleport True if a teleportation action into this ITeleportationProperty was done. Declaration bool WasUsedToTeleport { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source FastForwardTeleport() Instantaneously simulate that the object was used. Declaration void FastForwardTeleport() | Improve this Doc View Source ForceSetTeleported() Forces the property to the teleported state. Declaration void ForceSetTeleported() | Improve this Doc View Source Initialize() Sets WasUsedToTeleport to true. Declaration void Initialize() Remarks This method is called every time a TeleportCondition is activate."
  },
  "api/VRBuilder.BasicInteraction.Properties.ITouchableProperty.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.ITouchableProperty.html",
    "title": "Interface ITouchableProperty | VR Builder Documentation",
    "keywords": "Interface ITouchableProperty Inherited Members ISceneObjectProperty.SceneObject ILockable.Locked ILockable.Unlocked ILockable.IsLocked ILockable.SetLocked(Boolean) ILockable.RequestLocked(Boolean, IStepData) ILockable.RemoveUnlocker(IStepData) Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public interface ITouchableProperty : ISceneObjectProperty, ILockable Properties | Improve this Doc View Source IsBeingTouched Is object currently touched. Declaration bool IsBeingTouched { get; } Property Value Type Description System.Boolean | Improve this Doc View Source TouchEnded Called when stopped touching. Declaration UnityEvent<TouchablePropertyEventArgs> TouchEnded { get; } Property Value Type Description UnityEvent < TouchablePropertyEventArgs > | Improve this Doc View Source TouchStarted Called when touched. Declaration UnityEvent<TouchablePropertyEventArgs> TouchStarted { get; } Property Value Type Description UnityEvent < TouchablePropertyEventArgs > Methods | Improve this Doc View Source FastForwardTouch() Instantaneously simulate that the object was touched. Declaration void FastForwardTouch() | Improve this Doc View Source ForceSetTouched(Boolean) Force this property to a specified touched state. Declaration void ForceSetTouched(bool isTouched) Parameters Type Name Description System.Boolean isTouched"
  },
  "api/VRBuilder.BasicInteraction.Properties.IUsableProperty.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.IUsableProperty.html",
    "title": "Interface IUsableProperty | VR Builder Documentation",
    "keywords": "Interface IUsableProperty Inherited Members ISceneObjectProperty.SceneObject ILockable.Locked ILockable.Unlocked ILockable.IsLocked ILockable.SetLocked(Boolean) ILockable.RequestLocked(Boolean, IStepData) ILockable.RemoveUnlocker(IStepData) Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public interface IUsableProperty : ISceneObjectProperty, ILockable Properties | Improve this Doc View Source IsBeingUsed Is object currently used. Declaration bool IsBeingUsed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source UseEnded Called when object use has ended. Declaration UnityEvent<UsablePropertyEventArgs> UseEnded { get; } Property Value Type Description UnityEvent < UsablePropertyEventArgs > | Improve this Doc View Source UseStarted Called when the object is used. Declaration UnityEvent<UsablePropertyEventArgs> UseStarted { get; } Property Value Type Description UnityEvent < UsablePropertyEventArgs > Methods | Improve this Doc View Source FastForwardUse() Instantaneously simulate that the object was used. Declaration void FastForwardUse() | Improve this Doc View Source ForceSetUsed(Boolean) Force this property to a specified use state. Declaration void ForceSetUsed(bool isUsed) Parameters Type Name Description System.Boolean isUsed"
  },
  "api/VRBuilder.BasicInteraction.Properties.SnappablePropertyEventArgs.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.SnappablePropertyEventArgs.html",
    "title": "Class SnappablePropertyEventArgs | VR Builder Documentation",
    "keywords": "Class SnappablePropertyEventArgs Event args for ISnappableProperty events. Inheritance System.Object System.EventArgs SnappablePropertyEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public class SnappablePropertyEventArgs : EventArgs Constructors | Improve this Doc View Source SnappablePropertyEventArgs(ISnappableProperty, ISnapZoneProperty) Declaration public SnappablePropertyEventArgs(ISnappableProperty snappedObject, ISnapZoneProperty snappedZone) Parameters Type Name Description ISnappableProperty snappedObject ISnapZoneProperty snappedZone Fields | Improve this Doc View Source SnappedObject Declaration public readonly ISnappableProperty SnappedObject Field Value Type Description ISnappableProperty | Improve this Doc View Source SnappedZone Declaration public readonly ISnapZoneProperty SnappedZone Field Value Type Description ISnapZoneProperty"
  },
  "api/VRBuilder.BasicInteraction.Properties.SnapZonePropertyEventArgs.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.SnapZonePropertyEventArgs.html",
    "title": "Class SnapZonePropertyEventArgs | VR Builder Documentation",
    "keywords": "Class SnapZonePropertyEventArgs Inheritance System.Object System.EventArgs SnapZonePropertyEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public class SnapZonePropertyEventArgs : EventArgs"
  },
  "api/VRBuilder.BasicInteraction.Properties.TeleportationPropertyEventArgs.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.TeleportationPropertyEventArgs.html",
    "title": "Class TeleportationPropertyEventArgs | VR Builder Documentation",
    "keywords": "Class TeleportationPropertyEventArgs Event args for ITeleportationProperty events. Inheritance System.Object System.EventArgs TeleportationPropertyEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public class TeleportationPropertyEventArgs : EventArgs"
  },
  "api/VRBuilder.BasicInteraction.Properties.TouchablePropertyEventArgs.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.TouchablePropertyEventArgs.html",
    "title": "Class TouchablePropertyEventArgs | VR Builder Documentation",
    "keywords": "Class TouchablePropertyEventArgs Event args for ITouchableProperty events. Inheritance System.Object System.EventArgs TouchablePropertyEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public class TouchablePropertyEventArgs : EventArgs"
  },
  "api/VRBuilder.BasicInteraction.Properties.UsablePropertyEventArgs.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.UsablePropertyEventArgs.html",
    "title": "Class UsablePropertyEventArgs | VR Builder Documentation",
    "keywords": "Class UsablePropertyEventArgs Inheritance System.Object System.EventArgs UsablePropertyEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public class UsablePropertyEventArgs : EventArgs"
  },
  "api/VRBuilder.BasicInteraction.RigSetup.html": {
    "href": "api/VRBuilder.BasicInteraction.RigSetup.html",
    "title": "Namespace VRBuilder.BasicInteraction.RigSetup | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.BasicInteraction.RigSetup Classes InteractionRigProvider Provides all information and methods to setup a scene with a fitting and working rig. InteractionRigSetup Will setup the interaction rig on awake. Priority is from top to bottom of the list, only rigs which full fill all RigUsabilityChecker will be initialized. NoRigSetup Does not initialize any rig. Structs InteractionRigSetup.RigInfo Info struct about one rig."
  },
  "api/VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.html": {
    "href": "api/VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.html",
    "title": "Class InteractionRigProvider | VR Builder Documentation",
    "keywords": "Class InteractionRigProvider Provides all information and methods to setup a scene with a fitting and working rig. Inheritance System.Object InteractionRigProvider NoRigSetup XRSetupBase Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.RigSetup Assembly : VRBuilder.BasicInteraction.dll Syntax public abstract class InteractionRigProvider Properties | Improve this Doc View Source Name The name for this rig, has to be unique. Declaration public abstract string Name { get; } Property Value Type Description System.String | Improve this Doc View Source PrefabName Name of the prefab which should be loaded. Declaration public abstract string PrefabName { get; } Property Value Type Description System.String Methods | Improve this Doc View Source CanBeUsed() Decides if this rig is useable at this moment. Can be overwritten to be more sophisticated. Declaration public virtual bool CanBeUsed() Returns Type Description System.Boolean | Improve this Doc View Source FindPrefab(String) Searches the given prefab name and returns it. Declaration protected GameObject FindPrefab(string prefab) Parameters Type Name Description System.String prefab Returns Type Description GameObject | Improve this Doc View Source GetPrefab() Returns the found Prefab object. Declaration public virtual GameObject GetPrefab() Returns Type Description GameObject | Improve this Doc View Source GetSetupTooltip() Returns the tooltip which should be shown when this rig cannot be used. Declaration public virtual string GetSetupTooltip() Returns Type Description System.String | Improve this Doc View Source OnSetup() Will be called when the scene is done setting up this rig to allow additional changes. Declaration public virtual void OnSetup() | Improve this Doc View Source PreSetup() Will be called before the rig is instantiated. Declaration public virtual void PreSetup()"
  },
  "api/VRBuilder.BasicInteraction.RigSetup.InteractionRigSetup.html": {
    "href": "api/VRBuilder.BasicInteraction.RigSetup.InteractionRigSetup.html",
    "title": "Class InteractionRigSetup | VR Builder Documentation",
    "keywords": "Class InteractionRigSetup Will setup the interaction rig on awake. Priority is from top to bottom of the list, only rigs which full fill all RigUsabilityChecker will be initialized. Inheritance System.Object InteractionRigSetup Namespace : VRBuilder.BasicInteraction.RigSetup Assembly : VRBuilder.BasicInteraction.dll Syntax public class InteractionRigSetup : MonoBehaviour Fields | Improve this Doc View Source DummyUser Declaration public GameObject DummyUser Field Value Type Description GameObject | Improve this Doc View Source enforcedProvider Enforced provider will be use. Declaration protected static InteractionRigProvider enforcedProvider Field Value Type Description InteractionRigProvider | Improve this Doc View Source PossibleInteractionRigs Information about possible interaction rigs, serializable. Declaration public InteractionRigSetup.RigInfo[] PossibleInteractionRigs Field Value Type Description InteractionRigSetup.RigInfo [] Methods | Improve this Doc View Source SetEnforcedInteractionRig(InteractionRigProvider) Enforces the giving Rig to be used, if possible. Declaration public static void SetEnforcedInteractionRig(InteractionRigProvider provider) Parameters Type Name Description InteractionRigProvider provider | Improve this Doc View Source UpdateRigList() Updates the current list of all rigs available. Declaration public List<InteractionRigProvider> UpdateRigList() Returns Type Description System.Collections.Generic.List < InteractionRigProvider >"
  },
  "api/VRBuilder.BasicInteraction.RigSetup.InteractionRigSetup.RigInfo.html": {
    "href": "api/VRBuilder.BasicInteraction.RigSetup.InteractionRigSetup.RigInfo.html",
    "title": "Struct InteractionRigSetup.RigInfo | VR Builder Documentation",
    "keywords": "Struct InteractionRigSetup.RigInfo Info struct about one rig. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : VRBuilder.BasicInteraction.RigSetup Assembly : VRBuilder.BasicInteraction.dll Syntax [Serializable] public struct RigInfo Fields | Improve this Doc View Source Enabled Declaration public bool Enabled Field Value Type Description System.Boolean | Improve this Doc View Source Name Declaration public string Name Field Value Type Description System.String"
  },
  "api/VRBuilder.BasicInteraction.RigSetup.NoRigSetup.html": {
    "href": "api/VRBuilder.BasicInteraction.RigSetup.NoRigSetup.html",
    "title": "Class NoRigSetup | VR Builder Documentation",
    "keywords": "Class NoRigSetup Does not initialize any rig. Inheritance System.Object InteractionRigProvider NoRigSetup Inherited Members InteractionRigProvider.CanBeUsed() InteractionRigProvider.GetSetupTooltip() InteractionRigProvider.GetPrefab() InteractionRigProvider.OnSetup() InteractionRigProvider.PreSetup() InteractionRigProvider.FindPrefab(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.RigSetup Assembly : VRBuilder.BasicInteraction.dll Syntax public class NoRigSetup : InteractionRigProvider Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides InteractionRigProvider.Name | Improve this Doc View Source PrefabName Declaration public override string PrefabName { get; } Property Value Type Description System.String Overrides InteractionRigProvider.PrefabName"
  },
  "api/VRBuilder.BasicInteraction.Validation.HasGuidValidation.html": {
    "href": "api/VRBuilder.BasicInteraction.Validation.HasGuidValidation.html",
    "title": "Class HasGuidValidation | VR Builder Documentation",
    "keywords": "Class HasGuidValidation Validator that checks if the object has one of the required guids either as its object ID or as a group. Inheritance System.Object Validator HasGuidValidation Implements IGuidContainer Namespace : VRBuilder.BasicInteraction.Validation Assembly : VRBuilder.BasicInteraction.dll Syntax public class HasGuidValidation : Validator, IGuidContainer Properties | Improve this Doc View Source Guids Declaration public IEnumerable<Guid> Guids { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Guid > Methods | Improve this Doc View Source AddGuid(Guid) Declaration public void AddGuid(Guid guid) Parameters Type Name Description System.Guid guid | Improve this Doc View Source HasGuid(Guid) Declaration public bool HasGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean | Improve this Doc View Source RemoveGuid(Guid) Declaration public bool RemoveGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean | Improve this Doc View Source Validate(GameObject) Declaration public override bool Validate(GameObject obj) Parameters Type Name Description GameObject obj Returns Type Description System.Boolean Overrides Validator.Validate(GameObject) Events | Improve this Doc View Source GuidAdded Declaration public event EventHandler<GuidContainerEventArgs> GuidAdded Event Type Type Description System.EventHandler < GuidContainerEventArgs > | Improve this Doc View Source GuidRemoved Declaration public event EventHandler<GuidContainerEventArgs> GuidRemoved Event Type Type Description System.EventHandler < GuidContainerEventArgs > Implements IGuidContainer"
  },
  "api/VRBuilder.BasicInteraction.Validation.html": {
    "href": "api/VRBuilder.BasicInteraction.Validation.html",
    "title": "Namespace VRBuilder.BasicInteraction.Validation | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.BasicInteraction.Validation Classes HasGuidValidation Validator that checks if the object has one of the required guids either as its object ID or as a group. IsObjectWithTagValidation IsProcessSceneObjectValidation Checks if the process object attached to the given GameObject is listed as accepted trainin scene object. Validator Base validator used to implement concrete validators."
  },
  "api/VRBuilder.BasicInteraction.Validation.IsObjectWithTagValidation.html": {
    "href": "api/VRBuilder.BasicInteraction.Validation.IsObjectWithTagValidation.html",
    "title": "Class IsObjectWithTagValidation | VR Builder Documentation",
    "keywords": "Class IsObjectWithTagValidation Inheritance System.Object Validator IsObjectWithTagValidation Implements IGuidContainer Namespace : VRBuilder.BasicInteraction.Validation Assembly : VRBuilder.BasicInteraction.dll Syntax public class IsObjectWithTagValidation : Validator, IGuidContainer Properties | Improve this Doc View Source Guids Declaration public IEnumerable<Guid> Guids { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Guid > Methods | Improve this Doc View Source AddGuid(Guid) Declaration public void AddGuid(Guid tag) Parameters Type Name Description System.Guid tag | Improve this Doc View Source HasGuid(Guid) Declaration public bool HasGuid(Guid tag) Parameters Type Name Description System.Guid tag Returns Type Description System.Boolean | Improve this Doc View Source RemoveGuid(Guid) Declaration public bool RemoveGuid(Guid tag) Parameters Type Name Description System.Guid tag Returns Type Description System.Boolean | Improve this Doc View Source Validate(GameObject) Declaration public override bool Validate(GameObject obj) Parameters Type Name Description GameObject obj Returns Type Description System.Boolean Overrides Validator.Validate(GameObject) Events | Improve this Doc View Source GuidAdded Declaration public event EventHandler<GuidContainerEventArgs> GuidAdded Event Type Type Description System.EventHandler < GuidContainerEventArgs > | Improve this Doc View Source GuidRemoved Declaration public event EventHandler<GuidContainerEventArgs> GuidRemoved Event Type Type Description System.EventHandler < GuidContainerEventArgs > Implements IGuidContainer"
  },
  "api/VRBuilder.BasicInteraction.Validation.IsProcessSceneObjectValidation.html": {
    "href": "api/VRBuilder.BasicInteraction.Validation.IsProcessSceneObjectValidation.html",
    "title": "Class IsProcessSceneObjectValidation | VR Builder Documentation",
    "keywords": "Class IsProcessSceneObjectValidation Checks if the process object attached to the given GameObject is listed as accepted trainin scene object. Inheritance System.Object Validator IsProcessSceneObjectValidation Namespace : VRBuilder.BasicInteraction.Validation Assembly : VRBuilder.BasicInteraction.dll Syntax public class IsProcessSceneObjectValidation : Validator Methods | Improve this Doc View Source AddProcessSceneObject(ProcessSceneObject) Adds a new ProcessSceneObject to the list. Declaration public void AddProcessSceneObject(ProcessSceneObject target) Parameters Type Name Description ProcessSceneObject target | Improve this Doc View Source RemoveProcessSceneObject(ProcessSceneObject) Removes an existing process object from the list. Declaration public void RemoveProcessSceneObject(ProcessSceneObject target) Parameters Type Name Description ProcessSceneObject target | Improve this Doc View Source Validate(GameObject) Declaration public override bool Validate(GameObject obj) Parameters Type Name Description GameObject obj Returns Type Description System.Boolean Overrides Validator.Validate(GameObject)"
  },
  "api/VRBuilder.BasicInteraction.Validation.Validator.html": {
    "href": "api/VRBuilder.BasicInteraction.Validation.Validator.html",
    "title": "Class Validator | VR Builder Documentation",
    "keywords": "Class Validator Base validator used to implement concrete validators. Inheritance System.Object Validator HasGuidValidation IsObjectWithTagValidation IsProcessSceneObjectValidation SnapZoneNetworkValidator Namespace : VRBuilder.BasicInteraction.Validation Assembly : VRBuilder.BasicInteraction.dll Syntax public abstract class Validator : MonoBehaviour Methods | Improve this Doc View Source Validate(GameObject) When this returns true, the given object is allowed to be snapped. Declaration public abstract bool Validate(GameObject obj) Parameters Type Name Description GameObject obj Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Components.Runtime.Rigs.html": {
    "href": "api/VRBuilder.Components.Runtime.Rigs.html",
    "title": "Namespace VRBuilder.Components.Runtime.Rigs | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Components.Runtime.Rigs Classes XRLegacySetup Setup for XR with the old input system. XRSetup Setup for the standard XR rig. XRSetupBase XRSimulatorSetup Setup for XR Device Simulator."
  },
  "api/VRBuilder.Components.Runtime.Rigs.XRLegacySetup.html": {
    "href": "api/VRBuilder.Components.Runtime.Rigs.XRLegacySetup.html",
    "title": "Class XRLegacySetup | VR Builder Documentation",
    "keywords": "Class XRLegacySetup Setup for XR with the old input system. Inheritance System.Object InteractionRigProvider XRSetupBase XRLegacySetup Inherited Members XRSetupBase.IsPrefabMissing XRSetupBase.IsEventManagerInScene() InteractionRigProvider.GetPrefab() InteractionRigProvider.OnSetup() InteractionRigProvider.PreSetup() InteractionRigProvider.FindPrefab(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Components.Runtime.Rigs Assembly : VRBuilder.XRInteraction.dll Syntax public class XRLegacySetup : XRSetupBase Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides InteractionRigProvider.Name | Improve this Doc View Source PrefabName Declaration public override string PrefabName { get; } Property Value Type Description System.String Overrides InteractionRigProvider.PrefabName Methods | Improve this Doc View Source CanBeUsed() Declaration public override bool CanBeUsed() Returns Type Description System.Boolean Overrides InteractionRigProvider.CanBeUsed() | Improve this Doc View Source GetSetupTooltip() Declaration public override string GetSetupTooltip() Returns Type Description System.String Overrides InteractionRigProvider.GetSetupTooltip()"
  },
  "api/VRBuilder.Components.Runtime.Rigs.XRSetup.html": {
    "href": "api/VRBuilder.Components.Runtime.Rigs.XRSetup.html",
    "title": "Class XRSetup | VR Builder Documentation",
    "keywords": "Class XRSetup Setup for the standard XR rig. Inheritance System.Object InteractionRigProvider XRSetupBase XRSetup Inherited Members XRSetupBase.IsPrefabMissing XRSetupBase.IsEventManagerInScene() InteractionRigProvider.GetPrefab() InteractionRigProvider.OnSetup() InteractionRigProvider.PreSetup() InteractionRigProvider.FindPrefab(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Components.Runtime.Rigs Assembly : VRBuilder.XRInteraction.dll Syntax public class XRSetup : XRSetupBase Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides InteractionRigProvider.Name | Improve this Doc View Source PrefabName Declaration public override string PrefabName { get; } Property Value Type Description System.String Overrides InteractionRigProvider.PrefabName Methods | Improve this Doc View Source CanBeUsed() Declaration public override bool CanBeUsed() Returns Type Description System.Boolean Overrides InteractionRigProvider.CanBeUsed() | Improve this Doc View Source GetSetupTooltip() Declaration public override string GetSetupTooltip() Returns Type Description System.String Overrides InteractionRigProvider.GetSetupTooltip()"
  },
  "api/VRBuilder.Components.Runtime.Rigs.XRSetupBase.html": {
    "href": "api/VRBuilder.Components.Runtime.Rigs.XRSetupBase.html",
    "title": "Class XRSetupBase | VR Builder Documentation",
    "keywords": "Class XRSetupBase Inheritance System.Object InteractionRigProvider XRSetupBase XRLegacySetup XRSetup XRSimulatorSetup Inherited Members InteractionRigProvider.Name InteractionRigProvider.PrefabName InteractionRigProvider.CanBeUsed() InteractionRigProvider.GetSetupTooltip() InteractionRigProvider.GetPrefab() InteractionRigProvider.OnSetup() InteractionRigProvider.PreSetup() InteractionRigProvider.FindPrefab(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Components.Runtime.Rigs Assembly : VRBuilder.XRInteraction.dll Syntax public abstract class XRSetupBase : InteractionRigProvider Constructors | Improve this Doc View Source XRSetupBase() Declaration public XRSetupBase() Fields | Improve this Doc View Source IsPrefabMissing Declaration protected readonly bool IsPrefabMissing Field Value Type Description System.Boolean Methods | Improve this Doc View Source IsEventManagerInScene() Declaration protected bool IsEventManagerInScene() Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Components.Runtime.Rigs.XRSimulatorSetup.html": {
    "href": "api/VRBuilder.Components.Runtime.Rigs.XRSimulatorSetup.html",
    "title": "Class XRSimulatorSetup | VR Builder Documentation",
    "keywords": "Class XRSimulatorSetup Setup for XR Device Simulator. Inheritance System.Object InteractionRigProvider XRSetupBase XRSimulatorSetup Inherited Members XRSetupBase.IsPrefabMissing XRSetupBase.IsEventManagerInScene() InteractionRigProvider.GetPrefab() InteractionRigProvider.OnSetup() InteractionRigProvider.PreSetup() InteractionRigProvider.FindPrefab(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Components.Runtime.Rigs Assembly : VRBuilder.XRInteraction.dll Syntax public class XRSimulatorSetup : XRSetupBase Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides InteractionRigProvider.Name | Improve this Doc View Source PrefabName Declaration public override string PrefabName { get; } Property Value Type Description System.String Overrides InteractionRigProvider.PrefabName Methods | Improve this Doc View Source CanBeUsed() Declaration public override bool CanBeUsed() Returns Type Description System.Boolean Overrides InteractionRigProvider.CanBeUsed() | Improve this Doc View Source GetSetupTooltip() Declaration public override string GetSetupTooltip() Returns Type Description System.String Overrides InteractionRigProvider.GetSetupTooltip()"
  },
  "api/VRBuilder.Core.ActivationStateChangedEventArgs.html": {
    "href": "api/VRBuilder.Core.ActivationStateChangedEventArgs.html",
    "title": "Class ActivationStateChangedEventArgs | VR Builder Documentation",
    "keywords": "Class ActivationStateChangedEventArgs Event that is fired when the current stage changes. Inheritance System.Object System.EventArgs ActivationStateChangedEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class ActivationStateChangedEventArgs : EventArgs Constructors | Improve this Doc View Source ActivationStateChangedEventArgs(Stage) Declaration public ActivationStateChangedEventArgs(Stage stage) Parameters Type Name Description Stage stage Fields | Improve this Doc View Source Stage New stage. Declaration public readonly Stage Stage Field Value Type Description Stage"
  },
  "api/VRBuilder.Core.Attributes.DeletableAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.DeletableAttribute.html",
    "title": "Class DeletableAttribute | VR Builder Documentation",
    "keywords": "Class DeletableAttribute Declares that \"Delete\" button has to be drawn. Inheritance System.Object System.Attribute MetadataAttribute DeletableAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members MetadataAttribute.Name System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field)] public class DeletableAttribute : MetadataAttribute, _Attribute Methods | Improve this Doc View Source GetDefaultMetadata(MemberInfo) Declaration public override object GetDefaultMetadata(MemberInfo owner) Parameters Type Name Description System.Reflection.MemberInfo owner Returns Type Description System.Object Overrides MetadataAttribute.GetDefaultMetadata(MemberInfo) | Improve this Doc View Source IsMetadataValid(Object) Declaration public override bool IsMetadataValid(object metadata) Parameters Type Name Description System.Object metadata Returns Type Description System.Boolean Overrides MetadataAttribute.IsMetadataValid(Object) Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Attributes.DisplayNameAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.DisplayNameAttribute.html",
    "title": "Class DisplayNameAttribute | VR Builder Documentation",
    "keywords": "Class DisplayNameAttribute Displayed name of process entity's property or field. Inheritance System.Object System.Attribute DisplayNameAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Property | AttributeTargets.Field)] public class DisplayNameAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source DisplayNameAttribute(String) Declaration public DisplayNameAttribute(string name) Parameters Type Name Description System.String name Properties | Improve this Doc View Source Name Name of the process entity's property or field. Declaration public string Name { get; } Property Value Type Description System.String Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Attributes.DisplayTooltipAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.DisplayTooltipAttribute.html",
    "title": "Class DisplayTooltipAttribute | VR Builder Documentation",
    "keywords": "Class DisplayTooltipAttribute Tooltip of process entity's property or field. Inheritance System.Object System.Attribute DisplayTooltipAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Property | AttributeTargets.Field)] public class DisplayTooltipAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source DisplayTooltipAttribute(String) Declaration public DisplayTooltipAttribute(string tooltip) Parameters Type Name Description System.String tooltip Properties | Improve this Doc View Source Tooltip Tooltip of the process entity's property or field. Declaration public string Tooltip { get; } Property Value Type Description System.String Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Attributes.DrawingPriorityAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.DrawingPriorityAttribute.html",
    "title": "Class DrawingPriorityAttribute | VR Builder Documentation",
    "keywords": "Class DrawingPriorityAttribute Declares the drawing order for this element. Inheritance System.Object System.Attribute DrawingPriorityAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field)] public class DrawingPriorityAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source DrawingPriorityAttribute(Int32) Declaration public DrawingPriorityAttribute(int priority) Parameters Type Name Description System.Int32 priority Properties | Improve this Doc View Source Priority Lower goes first. Declaration public int Priority { get; } Property Value Type Description System.Int32 Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Attributes.DrawIsBlockingToggleAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.DrawIsBlockingToggleAttribute.html",
    "title": "Class DrawIsBlockingToggleAttribute | VR Builder Documentation",
    "keywords": "Class DrawIsBlockingToggleAttribute Declares that the \"Is Blocking\" toggle has to be drawn, if the behavior implements . Inheritance System.Object System.Attribute MetadataAttribute DrawIsBlockingToggleAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members MetadataAttribute.Name System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field)] public class DrawIsBlockingToggleAttribute : MetadataAttribute, _Attribute Methods | Improve this Doc View Source GetDefaultMetadata(MemberInfo) Declaration public override object GetDefaultMetadata(MemberInfo owner) Parameters Type Name Description System.Reflection.MemberInfo owner Returns Type Description System.Object Overrides MetadataAttribute.GetDefaultMetadata(MemberInfo) | Improve this Doc View Source IsMetadataValid(Object) Declaration public override bool IsMetadataValid(object metadata) Parameters Type Name Description System.Object metadata Returns Type Description System.Boolean Overrides MetadataAttribute.IsMetadataValid(Object) Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Attributes.ExtendableListAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.ExtendableListAttribute.html",
    "title": "Class ExtendableListAttribute | VR Builder Documentation",
    "keywords": "Class ExtendableListAttribute Declares that new elements can be added to this list. Inheritance System.Object System.Attribute MetadataAttribute ExtendableListAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members MetadataAttribute.Name System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field)] public class ExtendableListAttribute : MetadataAttribute, _Attribute Properties | Improve this Doc View Source DeclaredElementType Defines the type of an element to create. Declaration public Type DeclaredElementType { get; set; } Property Value Type Description System.Type Methods | Improve this Doc View Source GetDefaultMetadata(MemberInfo) Declaration public override object GetDefaultMetadata(MemberInfo owner) Parameters Type Name Description System.Reflection.MemberInfo owner Returns Type Description System.Object Overrides MetadataAttribute.GetDefaultMetadata(MemberInfo) | Improve this Doc View Source IsMetadataValid(Object) Declaration public override bool IsMetadataValid(object metadata) Parameters Type Name Description System.Object metadata Returns Type Description System.Boolean Overrides MetadataAttribute.IsMetadataValid(Object) Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Attributes.ExtendableListAttribute.SerializedTypeWrapper.html": {
    "href": "api/VRBuilder.Core.Attributes.ExtendableListAttribute.SerializedTypeWrapper.html",
    "title": "Class ExtendableListAttribute.SerializedTypeWrapper | VR Builder Documentation",
    "keywords": "Class ExtendableListAttribute.SerializedTypeWrapper Holds a serialized reference to the metadata object's type. Inheritance System.Object ExtendableListAttribute.SerializedTypeWrapper Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class SerializedTypeWrapper Properties | Improve this Doc View Source Type Metadata object's type. Declaration [DataMember] public Type Type { get; set; } Property Value Type Description System.Type"
  },
  "api/VRBuilder.Core.Attributes.FoldableAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.FoldableAttribute.html",
    "title": "Class FoldableAttribute | VR Builder Documentation",
    "keywords": "Class FoldableAttribute Declares that this element's view has to be foldable. Inheritance System.Object System.Attribute MetadataAttribute FoldableAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members MetadataAttribute.Name System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field)] public class FoldableAttribute : MetadataAttribute, _Attribute Methods | Improve this Doc View Source GetDefaultMetadata(MemberInfo) Declaration public override object GetDefaultMetadata(MemberInfo owner) Parameters Type Name Description System.Reflection.MemberInfo owner Returns Type Description System.Object Overrides MetadataAttribute.GetDefaultMetadata(MemberInfo) | Improve this Doc View Source IsMetadataValid(Object) Declaration public override bool IsMetadataValid(object metadata) Parameters Type Name Description System.Object metadata Returns Type Description System.Boolean Overrides MetadataAttribute.IsMetadataValid(Object) Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Attributes.HelpAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.HelpAttribute.html",
    "title": "Class HelpAttribute | VR Builder Documentation",
    "keywords": "Class HelpAttribute Declares that \"Help\" button has to be drawn. Inheritance System.Object System.Attribute MetadataAttribute HelpAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members MetadataAttribute.Name System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field)] public class HelpAttribute : MetadataAttribute, _Attribute Methods | Improve this Doc View Source GetDefaultMetadata(MemberInfo) Declaration public override object GetDefaultMetadata(MemberInfo owner) Parameters Type Name Description System.Reflection.MemberInfo owner Returns Type Description System.Object Overrides MetadataAttribute.GetDefaultMetadata(MemberInfo) | Improve this Doc View Source IsMetadataValid(Object) Declaration public override bool IsMetadataValid(object metadata) Parameters Type Name Description System.Object metadata Returns Type Description System.Boolean Overrides MetadataAttribute.IsMetadataValid(Object) Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Attributes.HelpLinkAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.HelpLinkAttribute.html",
    "title": "Class HelpLinkAttribute | VR Builder Documentation",
    "keywords": "Class HelpLinkAttribute Adds a link to a documentation that explains a behavior or condition. Inheritance System.Object System.Attribute HelpLinkAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Property | AttributeTargets.Field)] public class HelpLinkAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source HelpLinkAttribute(String) Declaration public HelpLinkAttribute(string helpLink) Parameters Type Name Description System.String helpLink Properties | Improve this Doc View Source HelpLink An HTML link to the documentation explaining the behavior or condition. Declaration public string HelpLink { get; } Property Value Type Description System.String Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Attributes.HideInProcessInspectorAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.HideInProcessInspectorAttribute.html",
    "title": "Class HideInProcessInspectorAttribute | VR Builder Documentation",
    "keywords": "Class HideInProcessInspectorAttribute Use this attribute to hide serializeable members in the process inspector. Inheritance System.Object System.Attribute HideInProcessInspectorAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field)] public class HideInProcessInspectorAttribute : Attribute, _Attribute Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Attributes.html": {
    "href": "api/VRBuilder.Core.Attributes.html",
    "title": "Namespace VRBuilder.Core.Attributes | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Attributes Classes DeletableAttribute Declares that \"Delete\" button has to be drawn. DisplayNameAttribute Displayed name of process entity's property or field. DisplayTooltipAttribute Tooltip of process entity's property or field. DrawingPriorityAttribute Declares the drawing order for this element. DrawIsBlockingToggleAttribute Declares that the \"Is Blocking\" toggle has to be drawn, if the behavior implements . ExtendableListAttribute Declares that new elements can be added to this list. ExtendableListAttribute.SerializedTypeWrapper Holds a serialized reference to the metadata object's type. FoldableAttribute Declares that this element's view has to be foldable. HelpAttribute Declares that \"Help\" button has to be drawn. HelpLinkAttribute Adds a link to a documentation that explains a behavior or condition. HideInProcessInspectorAttribute Use this attribute to hide serializeable members in the process inspector. IgnoreInStepInspectorAttribute KeepPopulatedAttribute Declares that \"Delete\" button has to be drawn. LegacyPropertyAttribute Attribute for an obsolete property which has been replaced by a different property. ListOfAttribute Declares that children of this list have metadata attributes. ListOfAttribute.Metadata Reference to the child's attributes and metadata. MenuAttribute Declares that \"Menu\" button has to be drawn. MetadataAttribute Base class for metadata attributes which define special rules for drawing the element. ReorderableListOfAttribute Declares that children of this list have metadata attributes and can be reordered. SeparatedAttribute Declare that this element has to be separated with thin gray lines. UsesSpecificProcessDrawerAttribute Use this attribute to explicitly specify an implementation of IProcessDrawer that should be used. The drawer type is passed as string because you can't reference editor definitions in runtime classes."
  },
  "api/VRBuilder.Core.Attributes.IgnoreInStepInspectorAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.IgnoreInStepInspectorAttribute.html",
    "title": "Class IgnoreInStepInspectorAttribute | VR Builder Documentation",
    "keywords": "Class IgnoreInStepInspectorAttribute Inheritance System.Object System.Attribute IgnoreInStepInspectorAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field)] public class IgnoreInStepInspectorAttribute : Attribute, _Attribute Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Attributes.KeepPopulatedAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.KeepPopulatedAttribute.html",
    "title": "Class KeepPopulatedAttribute | VR Builder Documentation",
    "keywords": "Class KeepPopulatedAttribute Declares that \"Delete\" button has to be drawn. Inheritance System.Object System.Attribute MetadataAttribute KeepPopulatedAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members MetadataAttribute.Name System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field)] public class KeepPopulatedAttribute : MetadataAttribute, _Attribute Constructors | Improve this Doc View Source KeepPopulatedAttribute(Type) Declaration public KeepPopulatedAttribute(Type type) Parameters Type Name Description System.Type type Methods | Improve this Doc View Source GetDefaultMetadata(MemberInfo) Declaration public override object GetDefaultMetadata(MemberInfo owner) Parameters Type Name Description System.Reflection.MemberInfo owner Returns Type Description System.Object Overrides MetadataAttribute.GetDefaultMetadata(MemberInfo) | Improve this Doc View Source IsMetadataValid(Object) Declaration public override bool IsMetadataValid(object metadata) Parameters Type Name Description System.Object metadata Returns Type Description System.Boolean Overrides MetadataAttribute.IsMetadataValid(Object) Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Attributes.LegacyPropertyAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.LegacyPropertyAttribute.html",
    "title": "Class LegacyPropertyAttribute | VR Builder Documentation",
    "keywords": "Class LegacyPropertyAttribute Attribute for an obsolete property which has been replaced by a different property. Inheritance System.Object System.Attribute LegacyPropertyAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class LegacyPropertyAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source LegacyPropertyAttribute(String) Declaration public LegacyPropertyAttribute(string newPropertyName) Parameters Type Name Description System.String newPropertyName Properties | Improve this Doc View Source NewPropertyName Name of the property replacing this obsolete property. Declaration public string NewPropertyName { get; } Property Value Type Description System.String Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Attributes.ListOfAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.ListOfAttribute.html",
    "title": "Class ListOfAttribute | VR Builder Documentation",
    "keywords": "Class ListOfAttribute Declares that children of this list have metadata attributes. Inheritance System.Object System.Attribute MetadataAttribute ListOfAttribute ReorderableListOfAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members MetadataAttribute.Name System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field)] public class ListOfAttribute : MetadataAttribute, _Attribute Constructors | Improve this Doc View Source ListOfAttribute(Type[]) Declaration public ListOfAttribute(params Type[] childAttributes) Parameters Type Name Description System.Type [] childAttributes Methods | Improve this Doc View Source GetDefaultMetadata(MemberInfo) Declaration public override object GetDefaultMetadata(MemberInfo owner) Parameters Type Name Description System.Reflection.MemberInfo owner Returns Type Description System.Object Overrides MetadataAttribute.GetDefaultMetadata(MemberInfo) | Improve this Doc View Source IsMetadataValid(Object) ListOf attribute checks that metadata of all children is valid, too. Declaration public override bool IsMetadataValid(object metadata) Parameters Type Name Description System.Object metadata Returns Type Description System.Boolean Overrides MetadataAttribute.IsMetadataValid(Object) Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Attributes.ListOfAttribute.Metadata.html": {
    "href": "api/VRBuilder.Core.Attributes.ListOfAttribute.Metadata.html",
    "title": "Class ListOfAttribute.Metadata | VR Builder Documentation",
    "keywords": "Class ListOfAttribute.Metadata Reference to the child's attributes and metadata. Inheritance System.Object ListOfAttribute.Metadata Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class Metadata Properties | Improve this Doc View Source ChildAttributes Reference to the child's attributes. Declaration [DataMember] public List<MetadataAttribute> ChildAttributes { get; set; } Property Value Type Description System.Collections.Generic.List < MetadataAttribute > | Improve this Doc View Source ChildMetadata Reference to the child metadata. Declaration [DataMember] public List<Dictionary<string, object>> ChildMetadata { get; set; } Property Value Type Description System.Collections.Generic.List < System.Collections.Generic.Dictionary < System.String , System.Object >>"
  },
  "api/VRBuilder.Core.Attributes.MenuAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.MenuAttribute.html",
    "title": "Class MenuAttribute | VR Builder Documentation",
    "keywords": "Class MenuAttribute Declares that \"Menu\" button has to be drawn. Inheritance System.Object System.Attribute MetadataAttribute MenuAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members MetadataAttribute.Name System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field)] public class MenuAttribute : MetadataAttribute, _Attribute Methods | Improve this Doc View Source GetDefaultMetadata(MemberInfo) Declaration public override object GetDefaultMetadata(MemberInfo owner) Parameters Type Name Description System.Reflection.MemberInfo owner Returns Type Description System.Object Overrides MetadataAttribute.GetDefaultMetadata(MemberInfo) | Improve this Doc View Source IsMetadataValid(Object) Declaration public override bool IsMetadataValid(object metadata) Parameters Type Name Description System.Object metadata Returns Type Description System.Boolean Overrides MetadataAttribute.IsMetadataValid(Object) Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Attributes.MetadataAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.MetadataAttribute.html",
    "title": "Class MetadataAttribute | VR Builder Documentation",
    "keywords": "Class MetadataAttribute Base class for metadata attributes which define special rules for drawing the element. Inheritance System.Object System.Attribute MetadataAttribute DeletableAttribute DrawIsBlockingToggleAttribute ExtendableListAttribute FoldableAttribute HelpAttribute KeepPopulatedAttribute ListOfAttribute MenuAttribute SeparatedAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public abstract class MetadataAttribute : Attribute, _Attribute Properties | Improve this Doc View Source Name Name of attribute. Declaration public string Name { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetDefaultMetadata(MemberInfo) Return default metadata for owner . Declaration public abstract object GetDefaultMetadata(MemberInfo owner) Parameters Type Name Description System.Reflection.MemberInfo owner Returns Type Description System.Object | Improve this Doc View Source IsMetadataValid(Object) Check if metadata is still valid. Declaration public abstract bool IsMetadataValid(object metadata) Parameters Type Name Description System.Object metadata Returns Type Description System.Boolean Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Attributes.ReorderableListOfAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.ReorderableListOfAttribute.html",
    "title": "Class ReorderableListOfAttribute | VR Builder Documentation",
    "keywords": "Class ReorderableListOfAttribute Declares that children of this list have metadata attributes and can be reordered. Inheritance System.Object System.Attribute MetadataAttribute ListOfAttribute ReorderableListOfAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members ListOfAttribute.GetDefaultMetadata(MemberInfo) ListOfAttribute.IsMetadataValid(Object) MetadataAttribute.Name System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field)] public class ReorderableListOfAttribute : ListOfAttribute, _Attribute Constructors | Improve this Doc View Source ReorderableListOfAttribute(Type[]) Declaration public ReorderableListOfAttribute(params Type[] childAttributes) Parameters Type Name Description System.Type [] childAttributes Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Attributes.SeparatedAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.SeparatedAttribute.html",
    "title": "Class SeparatedAttribute | VR Builder Documentation",
    "keywords": "Class SeparatedAttribute Declare that this element has to be separated with thin gray lines. Inheritance System.Object System.Attribute MetadataAttribute SeparatedAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members MetadataAttribute.Name System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field)] public class SeparatedAttribute : MetadataAttribute, _Attribute Methods | Improve this Doc View Source GetDefaultMetadata(MemberInfo) Declaration public override object GetDefaultMetadata(MemberInfo owner) Parameters Type Name Description System.Reflection.MemberInfo owner Returns Type Description System.Object Overrides MetadataAttribute.GetDefaultMetadata(MemberInfo) | Improve this Doc View Source IsMetadataValid(Object) Declaration public override bool IsMetadataValid(object metadata) Parameters Type Name Description System.Object metadata Returns Type Description System.Boolean Overrides MetadataAttribute.IsMetadataValid(Object) Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Attributes.UsesSpecificProcessDrawerAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.UsesSpecificProcessDrawerAttribute.html",
    "title": "Class UsesSpecificProcessDrawerAttribute | VR Builder Documentation",
    "keywords": "Class UsesSpecificProcessDrawerAttribute Use this attribute to explicitly specify an implementation of IProcessDrawer that should be used. The drawer type is passed as string because you can't reference editor definitions in runtime classes. Inheritance System.Object System.Attribute UsesSpecificProcessDrawerAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field)] public class UsesSpecificProcessDrawerAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source UsesSpecificProcessDrawerAttribute(String) Declaration public UsesSpecificProcessDrawerAttribute(string drawerType) Parameters Type Name Description System.String drawerType Properties | Improve this Doc View Source DrawerType The drawer's type. Declaration public string DrawerType { get; } Property Value Type Description System.String Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Audio.html": {
    "href": "api/VRBuilder.Core.Audio.html",
    "title": "Namespace VRBuilder.Core.Audio | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Audio Classes ResourceAudio Unity resource based audio data. Interfaces IAudioData This class provides audio data in form of an AudioClip. Which also might not be loaded at the time needed, check first if there can be one provided."
  },
  "api/VRBuilder.Core.Audio.IAudioData.html": {
    "href": "api/VRBuilder.Core.Audio.IAudioData.html",
    "title": "Interface IAudioData | VR Builder Documentation",
    "keywords": "Interface IAudioData This class provides audio data in form of an AudioClip. Which also might not be loaded at the time needed, check first if there can be one provided. Inherited Members ICanBeEmpty.IsEmpty() Namespace : VRBuilder.Core.Audio Assembly : VRBuilder.Core.dll Syntax public interface IAudioData : ICanBeEmpty Properties | Improve this Doc View Source AudioClip The AudioClip of this source, can be null. Best check first with HasAudio. Declaration AudioClip AudioClip { get; } Property Value Type Description AudioClip | Improve this Doc View Source ClipData Data used to retrieve the audio clip. Declaration string ClipData { get; set; } Property Value Type Description System.String | Improve this Doc View Source HasAudioClip Determs if the AudioSource has an AudioClip which can be played. Declaration bool HasAudioClip { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source InitializeAudioClip() Initializes the audio clip from the given data. Declaration void InitializeAudioClip()"
  },
  "api/VRBuilder.Core.Audio.ResourceAudio.html": {
    "href": "api/VRBuilder.Core.Audio.ResourceAudio.html",
    "title": "Class ResourceAudio | VR Builder Documentation",
    "keywords": "Class ResourceAudio Unity resource based audio data. Inheritance System.Object ResourceAudio Implements IAudioData ICanBeEmpty ILocalizedContent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Audio Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [DisplayName(\"Play Audio File\")] public class ResourceAudio : IAudioData, ICanBeEmpty, ILocalizedContent Constructors | Improve this Doc View Source ResourceAudio() Declaration protected ResourceAudio() | Improve this Doc View Source ResourceAudio(String) Declaration public ResourceAudio(string path) Parameters Type Name Description System.String path Properties | Improve this Doc View Source AudioClip Declaration public AudioClip AudioClip { get; } Property Value Type Description AudioClip | Improve this Doc View Source ClipData Declaration public string ClipData { get; set; } Property Value Type Description System.String | Improve this Doc View Source HasAudioClip Declaration public bool HasAudioClip { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ResourcesPath File path relative to the Resources folder. Declaration [DataMember] [DisplayName(\"Resources path / Key\")] [DisplayTooltip(\"The audio clip needs to be in a folder called Resources or one of its subfolders. The path to enter here is the relative path to the Resources folder, without extension. So, if the path is 'Assets/Resources/Audio/MyFile.wav', you would need to enter 'Audio/MyFile'.\")] public string ResourcesPath { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetLocalizedContent() Declaration public string GetLocalizedContent() Returns Type Description System.String | Improve this Doc View Source InitializeAudioClip() Declaration public void InitializeAudioClip() | Improve this Doc View Source IsEmpty() Declaration public bool IsEmpty() Returns Type Description System.Boolean Implements IAudioData ICanBeEmpty ILocalizedContent"
  },
  "api/VRBuilder.Core.Autocompleter-1.html": {
    "href": "api/VRBuilder.Core.Autocompleter-1.html",
    "title": "Class Autocompleter<TData> | VR Builder Documentation",
    "keywords": "Class Autocompleter<TData> A base class for autocompleters which provides access to the entity's data. Inheritance System.Object Autocompleter<TData> Implements IAutocompleter Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public abstract class Autocompleter<TData> : IAutocompleter where TData : IData Type Parameters Name Description TData Constructors | Improve this Doc View Source Autocompleter(TData) Declaration protected Autocompleter(TData data) Parameters Type Name Description TData data Properties | Improve this Doc View Source Data The entity's data. Declaration protected TData Data { get; } Property Value Type Description TData Methods | Improve this Doc View Source Complete() Declaration public abstract void Complete() Implements IAutocompleter"
  },
  "api/VRBuilder.Core.BehaviorCollection.EntityData.html": {
    "href": "api/VRBuilder.Core.BehaviorCollection.EntityData.html",
    "title": "Class BehaviorCollection.EntityData | VR Builder Documentation",
    "keywords": "Class BehaviorCollection.EntityData The data class for IBehavior collections. Inheritance System.Object EntityCollectionData < IBehavior > BehaviorCollection.EntityData Implements IBehaviorCollectionData IEntityCollectionDataWithMode < IBehavior > IEntityCollectionData < IBehavior > IEntityCollectionDataWithMode IEntityCollectionData IModeData IData Inherited Members EntityCollectionData<IBehavior>.Metadata EntityCollectionData<IBehavior>.IEntityCollectionData.GetChildren() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class EntityData : EntityCollectionData<IBehavior>, IBehaviorCollectionData, IEntityCollectionDataWithMode<IBehavior>, IEntityCollectionData<IBehavior>, IEntityCollectionDataWithMode, IEntityCollectionData, IModeData, IData Properties | Improve this Doc View Source Behaviors List of all IBehavior s added. Declaration [DataMember] [DisplayName(\"\")] [ReorderableListOf(new Type[]{typeof(FoldableAttribute), typeof(DrawIsBlockingToggleAttribute), typeof(HelpAttribute), typeof(MenuAttribute)})] public virtual IList<IBehavior> Behaviors { get; set; } Property Value Type Description System.Collections.Generic.IList < IBehavior > | Improve this Doc View Source Mode Reference to IBehavior 's current mode. Declaration public IMode Mode { get; set; } Property Value Type Description IMode Methods | Improve this Doc View Source GetChildren() Returns a list of all IBehavior s added. Declaration public override IEnumerable<IBehavior> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < IBehavior > Overrides VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.Behaviors.IBehavior>.GetChildren() Implements IBehaviorCollectionData IEntityCollectionDataWithMode<TEntity> IEntityCollectionData<TEntity> IEntityCollectionDataWithMode IEntityCollectionData IModeData IData"
  },
  "api/VRBuilder.Core.BehaviorCollection.html": {
    "href": "api/VRBuilder.Core.BehaviorCollection.html",
    "title": "Class BehaviorCollection | VR Builder Documentation",
    "keywords": "Class BehaviorCollection A collection of IBehavior s of a IStep . Inheritance System.Object Entity < BehaviorCollection.EntityData > BehaviorCollection Implements IDataOwner < BehaviorCollection.EntityData > IBehaviorCollection IStepChild IEntity IDataOwner < IBehaviorCollectionData > IDataOwner IClonable < IBehaviorCollection > Inherited Members Entity<BehaviorCollection.EntityData>.Data Entity<BehaviorCollection.EntityData>.IDataOwner.Data Entity<BehaviorCollection.EntityData>.LifeCycle Entity<BehaviorCollection.EntityData>.Parent Entity<BehaviorCollection.EntityData>.Configure(IMode) Entity<BehaviorCollection.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class BehaviorCollection : Entity<BehaviorCollection.EntityData>, IDataOwner<BehaviorCollection.EntityData>, IBehaviorCollection, IStepChild, IEntity, IDataOwner<IBehaviorCollectionData>, IDataOwner, IClonable<IBehaviorCollection> Constructors | Improve this Doc View Source BehaviorCollection() Declaration public BehaviorCollection() Methods | Improve this Doc View Source Clone() Declaration public IBehaviorCollection Clone() Returns Type Description IBehaviorCollection | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.BehaviorCollection.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.BehaviorCollection.EntityData>.GetActiveProcess() | Improve this Doc View Source GetConfigurator() Declaration protected override IConfigurator GetConfigurator() Returns Type Description IConfigurator Overrides VRBuilder.Core.Entity<VRBuilder.Core.BehaviorCollection.EntityData>.GetConfigurator() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.BehaviorCollection.EntityData>.GetDeactivatingProcess() Explicit Interface Implementations | Improve this Doc View Source IDataOwner<IBehaviorCollectionData>.Data Declaration IBehaviorCollectionData IDataOwner<IBehaviorCollectionData>.Data { get; } Returns Type Description IBehaviorCollectionData Implements IDataOwner<TData> IBehaviorCollection IStepChild IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.Behavior-1.html": {
    "href": "api/VRBuilder.Core.Behaviors.Behavior-1.html",
    "title": "Class Behavior<TData> | VR Builder Documentation",
    "keywords": "Class Behavior<TData> Inherit from this abstract class when creating your own behaviors. Inheritance System.Object Entity <TData> Behavior<TData> AnimateTransformBehavior ChildExplosionViewBehavior FollowPathBehavior RotateAroundAxisBehavior SetAnimatorBoolParameterBehavior SetAnimatorFloatParameterBehavior SetAnimatorIntParameterBehavior SetAnimatorTriggerParameterBehavior UnsnapBehavior BehaviorSequence ConfettiBehavior ControlParticleEmissionBehavior DelayBehavior DisableGameObjectBehavior EnableGameObjectBehavior ExecuteChapterBehavior ExecuteChaptersBehavior GoToChapterBehavior HighlightObjectBehavior LoadSceneBehavior MoveObjectBehavior PlayAudioBehavior ResetValueBehavior ScalingBehavior SetComponentEnabledBehavior SetComponentEnabledByTagBehavior SetObjectsEnabledBehavior SetObjectsWithTagEnabledBehavior SetParentBehavior SetValueBehavior<T> SelectRandomTransitionBehavior SetRandomBooleanBehavior SetRandomNumberBehavior MathOperationBehavior SetStateBehavior TriggerEventBehavior TriggerEventByRefBehavior TriggerEventByTagBehavior TriggerGenericEventBehavior<T> TriggerGenericEventByRefBehavior<T> TriggerGenericEventByTagBehavior<T> StartTimerBehavior StopTimerBehavior UpdateScoreBehavior MultipleChoiceBehavior NumPadBehavior OptionalnfoBoxBehavior SetLocalizedTextBehavior UiOutlineBehavior PlayAnimationClipBehavior PlayVideoBehavior Implements IDataOwner <TData> IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Entity<TData>.Data Entity<TData>.IDataOwner.Data Entity<TData>.LifeCycle Entity<TData>.Parent Entity<TData>.GetActivatingProcess() Entity<TData>.GetActiveProcess() Entity<TData>.GetDeactivatingProcess() Entity<TData>.GetConfigurator() Entity<TData>.Configure(IMode) Entity<TData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public abstract class Behavior<TData> : Entity<TData>, IDataOwner<TData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> where TData : class, IBehaviorData, new() Type Parameters Name Description TData The type of the behavior's data. Constructors | Improve this Doc View Source Behavior() Declaration protected Behavior() Methods | Improve this Doc View Source Clone() Declaration public virtual IBehavior Clone() Returns Type Description IBehavior Explicit Interface Implementations | Improve this Doc View Source IDataOwner<IBehaviorData>.Data Declaration IBehaviorData IDataOwner<IBehaviorData>.Data { get; } Returns Type Description IBehaviorData Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.BehaviorCollectionChangedEventArgs.html": {
    "href": "api/VRBuilder.Core.Behaviors.BehaviorCollectionChangedEventArgs.html",
    "title": "Class BehaviorCollectionChangedEventArgs | VR Builder Documentation",
    "keywords": "Class BehaviorCollectionChangedEventArgs Inheritance System.Object System.EventArgs BehaviorCollectionChangedEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public class BehaviorCollectionChangedEventArgs : EventArgs"
  },
  "api/VRBuilder.Core.Behaviors.BehaviorExecutionStages.html": {
    "href": "api/VRBuilder.Core.Behaviors.BehaviorExecutionStages.html",
    "title": "Enum BehaviorExecutionStages | VR Builder Documentation",
    "keywords": "Enum BehaviorExecutionStages Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [Flags] public enum BehaviorExecutionStages Fields Name Description Activation ActivationAndDeactivation Deactivation None"
  },
  "api/VRBuilder.Core.Behaviors.BehaviorMetadata.html": {
    "href": "api/VRBuilder.Core.Behaviors.BehaviorMetadata.html",
    "title": "Class BehaviorMetadata | VR Builder Documentation",
    "keywords": "Class BehaviorMetadata Inheritance System.Object BehaviorMetadata Implements IMetadata Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class BehaviorMetadata : IMetadata Properties | Improve this Doc View Source IsFoldedOut Declaration [DataMember] public bool IsFoldedOut { get; set; } Property Value Type Description System.Boolean Implements IMetadata"
  },
  "api/VRBuilder.Core.Behaviors.BehaviorSequence.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.BehaviorSequence.EntityData.html",
    "title": "Class BehaviorSequence.EntityData | VR Builder Documentation",
    "keywords": "Class BehaviorSequence.EntityData Behavior sequence's data. Inheritance System.Object EntityCollectionData < IBehavior > BehaviorSequence.EntityData Implements IEntitySequenceDataWithMode < IBehavior > IEntitySequenceData < IBehavior > IEntityCollectionData < IBehavior > IEntityCollectionData IEntitySequenceData IModeData IBackgroundBehaviorData IBehaviorData INamedData IData Inherited Members EntityCollectionData<IBehavior>.Metadata EntityCollectionData<IBehavior>.IEntityCollectionData.GetChildren() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Behavior Sequence\")] [DataContract(IsReference = true)] public class EntityData : EntityCollectionData<IBehavior>, IEntitySequenceDataWithMode<IBehavior>, IEntitySequenceData<IBehavior>, IEntityCollectionData<IBehavior>, IEntityCollectionData, IEntitySequenceData, IModeData, IBackgroundBehaviorData, IBehaviorData, INamedData, IData Properties | Improve this Doc View Source Behaviors List of child behaviors. Declaration [DataMember] [DisplayName(\"Child behaviors\")] [ReorderableListOf(new Type[]{typeof(FoldableAttribute), typeof(HelpAttribute), typeof(MenuAttribute)})] public List<IBehavior> Behaviors { get; set; } Property Value Type Description System.Collections.Generic.List < IBehavior > | Improve this Doc View Source Current Declaration [IgnoreDataMember] public IBehavior Current { get; set; } Property Value Type Description IBehavior | Improve this Doc View Source IsBlocking Declaration public bool IsBlocking { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Mode Declaration public IMode Mode { get; set; } Property Value Type Description IMode | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source PlaysOnRepeat Are child behaviors activated only once or the collection is cycled. Declaration [DisplayName(\"Repeat\")] [DataMember] public bool PlaysOnRepeat { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source GetChildren() Declaration public override IEnumerable<IBehavior> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < IBehavior > Overrides VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.Behaviors.IBehavior>.GetChildren() Explicit Interface Implementations | Improve this Doc View Source IEntitySequenceData.Current Declaration IEntity IEntitySequenceData.Current { get; } Returns Type Description IEntity Implements IEntitySequenceDataWithMode<TEntity> IEntitySequenceData<TEntity> IEntityCollectionData<TEntity> IEntityCollectionData IEntitySequenceData IModeData IBackgroundBehaviorData IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.BehaviorSequence.html": {
    "href": "api/VRBuilder.Core.Behaviors.BehaviorSequence.html",
    "title": "Class BehaviorSequence | VR Builder Documentation",
    "keywords": "Class BehaviorSequence A collection of behaviors that are activated and deactivated after each other. Inheritance System.Object Entity < BehaviorSequence.EntityData > Behavior < BehaviorSequence.EntityData > BehaviorSequence Implements IDataOwner < BehaviorSequence.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<BehaviorSequence.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<BehaviorSequence.EntityData>.Clone() Entity<BehaviorSequence.EntityData>.Data Entity<BehaviorSequence.EntityData>.IDataOwner.Data Entity<BehaviorSequence.EntityData>.LifeCycle Entity<BehaviorSequence.EntityData>.Parent Entity<BehaviorSequence.EntityData>.Configure(IMode) Entity<BehaviorSequence.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-behaviors/behavior-sequence\")] public class BehaviorSequence : Behavior<BehaviorSequence.EntityData>, IDataOwner<BehaviorSequence.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source BehaviorSequence() Declaration [JsonConstructor] public BehaviorSequence() | Improve this Doc View Source BehaviorSequence(Boolean, IList<IBehavior>) Declaration public BehaviorSequence(bool playsOnRepeat, IList<IBehavior> behaviors) Parameters Type Name Description System.Boolean playsOnRepeat System.Collections.Generic.IList < IBehavior > behaviors | Improve this Doc View Source BehaviorSequence(Boolean, IList<IBehavior>, Boolean) Declaration public BehaviorSequence(bool playsOnRepeat, IList<IBehavior> behaviors, bool isBlocking) Parameters Type Name Description System.Boolean playsOnRepeat System.Collections.Generic.IList < IBehavior > behaviors System.Boolean isBlocking Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.BehaviorSequence.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.BehaviorSequence.EntityData>.GetActiveProcess() | Improve this Doc View Source GetConfigurator() Declaration protected override IConfigurator GetConfigurator() Returns Type Description IConfigurator Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.BehaviorSequence.EntityData>.GetConfigurator() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.BehaviorSequence.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.html",
    "title": "Class ConfettiBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class ConfettiBehavior.EntityData Inheritance System.Object ConfettiBehavior.EntityData Implements IBehaviorData INamedData IData IBehaviorExecutionStages Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Spawn Confetti\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData, IBehaviorExecutionStages Properties | Improve this Doc View Source AreaRadius Radius of the spawning area. Declaration [DataMember] [DisplayName(\"Area Radius\")] public float AreaRadius { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ConfettiMachine Declaration public GameObject ConfettiMachine { get; set; } Property Value Type Description GameObject | Improve this Doc View Source ConfettiMachinePrefabPath Path to the desired confetti machine prefab. Declaration [DataMember] [DisplayName(\"Confetti Machine Path\")] public string ConfettiMachinePrefabPath { get; set; } Property Value Type Description System.String | Improve this Doc View Source ConfettiPosition Name of the process object where to spawn the confetti machine. Only needed if \"Spawn Above User\" is not checked. Declaration [DataMember] [DisplayName(\"Position Provider\")] public SingleSceneObjectReference ConfettiPosition { get; set; } Property Value Type Description SingleSceneObjectReference | Improve this Doc View Source Duration Duration of the animation in seconds. Declaration [DataMember] [DisplayName(\"Duration\")] public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ExecutionStages Declaration [DataMember] public BehaviorExecutionStages ExecutionStages { get; set; } Property Value Type Description BehaviorExecutionStages | Improve this Doc View Source IsAboveUser Bool to check whether the confetti machine should spawn above the user or at the position of the position provider. Declaration [DataMember] [DisplayName(\"Spawn Above User\")] public bool IsAboveUser { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source PositionProvider Declaration [DataMember] [Obsolete(\"Use ConfettiPosition instead.\")] [LegacyProperty(\"ConfettiPosition\")] public SceneObjectReference PositionProvider { get; set; } Property Value Type Description SceneObjectReference Implements IBehaviorData INamedData IData IBehaviorExecutionStages"
  },
  "api/VRBuilder.Core.Behaviors.ConfettiBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.ConfettiBehavior.html",
    "title": "Class ConfettiBehavior | VR Builder Documentation",
    "keywords": "Class ConfettiBehavior This behavior causes confetti to rain. Inheritance System.Object Entity < ConfettiBehavior.EntityData > Behavior < ConfettiBehavior.EntityData > ConfettiBehavior Implements IDataOwner < ConfettiBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<ConfettiBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<ConfettiBehavior.EntityData>.Clone() Entity<ConfettiBehavior.EntityData>.Data Entity<ConfettiBehavior.EntityData>.IDataOwner.Data Entity<ConfettiBehavior.EntityData>.LifeCycle Entity<ConfettiBehavior.EntityData>.Parent Entity<ConfettiBehavior.EntityData>.GetActiveProcess() Entity<ConfettiBehavior.EntityData>.GetConfigurator() Entity<ConfettiBehavior.EntityData>.Configure(IMode) Entity<ConfettiBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class ConfettiBehavior : Behavior<ConfettiBehavior.EntityData>, IDataOwner<ConfettiBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source ConfettiBehavior() Declaration [JsonConstructor] public ConfettiBehavior() | Improve this Doc View Source ConfettiBehavior(Boolean, Guid, String, Single, Single, BehaviorExecutionStages) Declaration public ConfettiBehavior(bool isAboveUser, Guid positionProviderId, string confettiMachinePrefabPath, float radius, float duration, BehaviorExecutionStages executionStages) Parameters Type Name Description System.Boolean isAboveUser System.Guid positionProviderId System.String confettiMachinePrefabPath System.Single radius System.Single duration BehaviorExecutionStages executionStages | Improve this Doc View Source ConfettiBehavior(Boolean, String, String, Single, Single, BehaviorExecutionStages) Declaration [Obsolete(\"This constructor is obsolete and will be removed in the next major version.\")] public ConfettiBehavior(bool isAboveUser, string positionProviderSceneObjectName, string confettiMachinePrefabPath, float radius, float duration, BehaviorExecutionStages executionStages) Parameters Type Name Description System.Boolean isAboveUser System.String positionProviderSceneObjectName System.String confettiMachinePrefabPath System.Single radius System.Single duration BehaviorExecutionStages executionStages | Improve this Doc View Source ConfettiBehavior(Boolean, ISceneObject, String, Single, Single, BehaviorExecutionStages) Declaration public ConfettiBehavior(bool isAboveUser, ISceneObject positionProvider, string confettiMachinePrefabPath, float radius, float duration, BehaviorExecutionStages executionStages) Parameters Type Name Description System.Boolean isAboveUser ISceneObject positionProvider System.String confettiMachinePrefabPath System.Single radius System.Single duration BehaviorExecutionStages executionStages Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.ControlParticleEmissionBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.ControlParticleEmissionBehavior.EntityData.html",
    "title": "Class ControlParticleEmissionBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class ControlParticleEmissionBehavior.EntityData The ControlParticleEmissionBehavior behavior data. Inheritance System.Object ControlParticleEmissionBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source EmitParticles If true, particle emission starts, else it stops. Declaration [DataMember] public bool EmitParticles { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Target Declaration [DataMember] [Obsolete(\"Use Targets instead.\")] [LegacyProperty(\"Targets\")] public PropertyReferenceOrTagSelectableValue<IParticleSystemProperty> Target { get; set; } Property Value Type Description PropertyReferenceOrTagSelectableValue < IParticleSystemProperty > | Improve this Doc View Source Targets Identifies the particle system property to control. Declaration [DataMember] public MultipleScenePropertyReference<IParticleSystemProperty> Targets { get; set; } Property Value Type Description MultipleScenePropertyReference < IParticleSystemProperty > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.ControlParticleEmissionBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.ControlParticleEmissionBehavior.html",
    "title": "Class ControlParticleEmissionBehavior | VR Builder Documentation",
    "keywords": "Class ControlParticleEmissionBehavior Behavior that start/stops a particle system property. Inheritance System.Object Entity < ControlParticleEmissionBehavior.EntityData > Behavior < ControlParticleEmissionBehavior.EntityData > ControlParticleEmissionBehavior Implements IDataOwner < ControlParticleEmissionBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<ControlParticleEmissionBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<ControlParticleEmissionBehavior.EntityData>.Clone() Entity<ControlParticleEmissionBehavior.EntityData>.Data Entity<ControlParticleEmissionBehavior.EntityData>.IDataOwner.Data Entity<ControlParticleEmissionBehavior.EntityData>.LifeCycle Entity<ControlParticleEmissionBehavior.EntityData>.Parent Entity<ControlParticleEmissionBehavior.EntityData>.GetActiveProcess() Entity<ControlParticleEmissionBehavior.EntityData>.GetDeactivatingProcess() Entity<ControlParticleEmissionBehavior.EntityData>.GetConfigurator() Entity<ControlParticleEmissionBehavior.EntityData>.Configure(IMode) Entity<ControlParticleEmissionBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class ControlParticleEmissionBehavior : Behavior<ControlParticleEmissionBehavior.EntityData>, IDataOwner<ControlParticleEmissionBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source ControlParticleEmissionBehavior() Declaration [JsonConstructor] public ControlParticleEmissionBehavior() | Improve this Doc View Source ControlParticleEmissionBehavior(Boolean) Declaration public ControlParticleEmissionBehavior(bool emitParticles) Parameters Type Name Description System.Boolean emitParticles Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.ControlParticleEmissionBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.DelayBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.DelayBehavior.EntityData.html",
    "title": "Class DelayBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class DelayBehavior.EntityData The data class for a delay behavior. Inheritance System.Object DelayBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Delay\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source DelayTime Declaration [DataMember] [DisplayName(\"Delay (in seconds)\")] public float DelayTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.DelayBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.DelayBehavior.html",
    "title": "Class DelayBehavior | VR Builder Documentation",
    "keywords": "Class DelayBehavior Behavior that waits for DelayTime seconds before finishing its activation. Inheritance System.Object Entity < DelayBehavior.EntityData > Behavior < DelayBehavior.EntityData > DelayBehavior Implements IDataOwner < DelayBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<DelayBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<DelayBehavior.EntityData>.Clone() Entity<DelayBehavior.EntityData>.Data Entity<DelayBehavior.EntityData>.IDataOwner.Data Entity<DelayBehavior.EntityData>.LifeCycle Entity<DelayBehavior.EntityData>.Parent Entity<DelayBehavior.EntityData>.GetActiveProcess() Entity<DelayBehavior.EntityData>.GetDeactivatingProcess() Entity<DelayBehavior.EntityData>.GetConfigurator() Entity<DelayBehavior.EntityData>.Configure(IMode) Entity<DelayBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-behaviors/delay\")] public class DelayBehavior : Behavior<DelayBehavior.EntityData>, IDataOwner<DelayBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source DelayBehavior() Declaration [JsonConstructor] public DelayBehavior() | Improve this Doc View Source DelayBehavior(Single) Declaration public DelayBehavior(float delayTime) Parameters Type Name Description System.Single delayTime Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.DelayBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.DisableGameObjectBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.DisableGameObjectBehavior.EntityData.html",
    "title": "Class DisableGameObjectBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class DisableGameObjectBehavior.EntityData \"Disable game object\" behavior's data. Inheritance System.Object DisableGameObjectBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Disable Object\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Target Object to disable. Declaration [DataMember] [DisplayName(\"Object\")] public SceneObjectReference Target { get; set; } Property Value Type Description SceneObjectReference Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.DisableGameObjectBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.DisableGameObjectBehavior.html",
    "title": "Class DisableGameObjectBehavior | VR Builder Documentation",
    "keywords": "Class DisableGameObjectBehavior Disables gameObject of target ISceneObject. Inheritance System.Object Entity < DisableGameObjectBehavior.EntityData > Behavior < DisableGameObjectBehavior.EntityData > DisableGameObjectBehavior Implements IDataOwner < DisableGameObjectBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<DisableGameObjectBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<DisableGameObjectBehavior.EntityData>.Clone() Entity<DisableGameObjectBehavior.EntityData>.Data Entity<DisableGameObjectBehavior.EntityData>.IDataOwner.Data Entity<DisableGameObjectBehavior.EntityData>.LifeCycle Entity<DisableGameObjectBehavior.EntityData>.Parent Entity<DisableGameObjectBehavior.EntityData>.GetActiveProcess() Entity<DisableGameObjectBehavior.EntityData>.GetDeactivatingProcess() Entity<DisableGameObjectBehavior.EntityData>.GetConfigurator() Entity<DisableGameObjectBehavior.EntityData>.Configure(IMode) Entity<DisableGameObjectBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [Obsolete(\"Use SetObjectsEnabledBehavior instead. This behavior is obsolete and will be removed in the next major version.\")] [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-behaviors/disable-object\")] public class DisableGameObjectBehavior : Behavior<DisableGameObjectBehavior.EntityData>, IDataOwner<DisableGameObjectBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source DisableGameObjectBehavior() Declaration [JsonConstructor] public DisableGameObjectBehavior() | Improve this Doc View Source DisableGameObjectBehavior(String) Declaration public DisableGameObjectBehavior(string targetObject) Parameters Type Name Description System.String targetObject Unique name of target scene object. | Improve this Doc View Source DisableGameObjectBehavior(ISceneObject) Declaration public DisableGameObjectBehavior(ISceneObject targetObject) Parameters Type Name Description ISceneObject targetObject scene object to disable. Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.DisableGameObjectBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.EnableGameObjectBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.EnableGameObjectBehavior.EntityData.html",
    "title": "Class EnableGameObjectBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class EnableGameObjectBehavior.EntityData \"Enable game object\" behavior's data. Inheritance System.Object EnableGameObjectBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Enable Object\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source DisableOnDeactivating Declaration [DataMember] [DisplayName(\"Disable Object after step is complete\")] public bool DisableOnDeactivating { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Target The object to enable. Declaration [DataMember] [DisplayName(\"Object\")] public SceneObjectReference Target { get; set; } Property Value Type Description SceneObjectReference Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.EnableGameObjectBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.EnableGameObjectBehavior.html",
    "title": "Class EnableGameObjectBehavior | VR Builder Documentation",
    "keywords": "Class EnableGameObjectBehavior Enables gameObject of target ISceneObject. Inheritance System.Object Entity < EnableGameObjectBehavior.EntityData > Behavior < EnableGameObjectBehavior.EntityData > EnableGameObjectBehavior Implements IDataOwner < EnableGameObjectBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<EnableGameObjectBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<EnableGameObjectBehavior.EntityData>.Clone() Entity<EnableGameObjectBehavior.EntityData>.Data Entity<EnableGameObjectBehavior.EntityData>.IDataOwner.Data Entity<EnableGameObjectBehavior.EntityData>.LifeCycle Entity<EnableGameObjectBehavior.EntityData>.Parent Entity<EnableGameObjectBehavior.EntityData>.GetActiveProcess() Entity<EnableGameObjectBehavior.EntityData>.GetConfigurator() Entity<EnableGameObjectBehavior.EntityData>.Configure(IMode) Entity<EnableGameObjectBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [Obsolete(\"Use SetObjectsEnabledBehavior instead. This behavior is obsolete and will be removed in the next major version.\")] [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-behaviors/enable-object\")] public class EnableGameObjectBehavior : Behavior<EnableGameObjectBehavior.EntityData>, IDataOwner<EnableGameObjectBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source EnableGameObjectBehavior() Declaration [JsonConstructor] public EnableGameObjectBehavior() | Improve this Doc View Source EnableGameObjectBehavior(String) Declaration public EnableGameObjectBehavior(string targetObject) Parameters Type Name Description System.String targetObject Name of the object to enable. | Improve this Doc View Source EnableGameObjectBehavior(ISceneObject) Declaration public EnableGameObjectBehavior(ISceneObject targetObject) Parameters Type Name Description ISceneObject targetObject Object to enable. Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.EnableGameObjectBehavior.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.EnableGameObjectBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.ExecuteChapterBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.ExecuteChapterBehavior.EntityData.html",
    "title": "Class ExecuteChapterBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class ExecuteChapterBehavior.EntityData Execute chapter behavior data. Inheritance System.Object EntityCollectionData < IChapter > ExecuteChapterBehavior.EntityData Implements IEntityCollectionData < IChapter > IEntityCollectionData IBehaviorData INamedData IData Inherited Members EntityCollectionData<IChapter>.Metadata EntityCollectionData<IChapter>.IEntityCollectionData.GetChildren() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Step Group\")] [DataContract(IsReference = true)] public class EntityData : EntityCollectionData<IChapter>, IEntityCollectionData<IChapter>, IEntityCollectionData, IBehaviorData, INamedData, IData Properties | Improve this Doc View Source Chapter Declaration [DataMember] public IChapter Chapter { get; set; } Property Value Type Description IChapter | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetChildren() Declaration public override IEnumerable<IChapter> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < IChapter > Overrides VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IChapter>.GetChildren() Implements IEntityCollectionData<TEntity> IEntityCollectionData IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.ExecuteChapterBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.ExecuteChapterBehavior.html",
    "title": "Class ExecuteChapterBehavior | VR Builder Documentation",
    "keywords": "Class ExecuteChapterBehavior Behavior that executes a stored chapter and completes when the chapter ends. Inheritance System.Object Entity < ExecuteChapterBehavior.EntityData > Behavior < ExecuteChapterBehavior.EntityData > ExecuteChapterBehavior Implements IDataOwner < ExecuteChapterBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<ExecuteChapterBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<ExecuteChapterBehavior.EntityData>.Data Entity<ExecuteChapterBehavior.EntityData>.IDataOwner.Data Entity<ExecuteChapterBehavior.EntityData>.LifeCycle Entity<ExecuteChapterBehavior.EntityData>.Parent Entity<ExecuteChapterBehavior.EntityData>.GetActiveProcess() Entity<ExecuteChapterBehavior.EntityData>.GetConfigurator() Entity<ExecuteChapterBehavior.EntityData>.Configure(IMode) Entity<ExecuteChapterBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class ExecuteChapterBehavior : Behavior<ExecuteChapterBehavior.EntityData>, IDataOwner<ExecuteChapterBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source ExecuteChapterBehavior() Declaration [JsonConstructor] public ExecuteChapterBehavior() | Improve this Doc View Source ExecuteChapterBehavior(IChapter) Declaration public ExecuteChapterBehavior(IChapter chapter) Parameters Type Name Description IChapter chapter Methods | Improve this Doc View Source Clone() Declaration public override IBehavior Clone() Returns Type Description IBehavior Overrides VRBuilder.Core.Behaviors.Behavior<VRBuilder.Core.Behaviors.ExecuteChapterBehavior.EntityData>.Clone() | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.ExecuteChapterBehavior.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.ExecuteChapterBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.html",
    "title": "Class ExecuteChaptersBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class ExecuteChaptersBehavior.EntityData Execute chapters behavior data. Inheritance System.Object EntityCollectionData < IChapter > ExecuteChaptersBehavior.EntityData Implements IEntityCollectionData < IChapter > IEntityCollectionData IBehaviorData INamedData IData Inherited Members EntityCollectionData<IChapter>.Metadata EntityCollectionData<IChapter>.IEntityCollectionData.GetChildren() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Execute Chapters\")] [DataContract(IsReference = true)] public class EntityData : EntityCollectionData<IChapter>, IEntityCollectionData<IChapter>, IEntityCollectionData, IBehaviorData, INamedData, IData Properties | Improve this Doc View Source Chapters Declaration [DataMember] public List<IChapter> Chapters { get; set; } Property Value Type Description System.Collections.Generic.List < IChapter > | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetChildren() Declaration public override IEnumerable<IChapter> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < IChapter > Overrides VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IChapter>.GetChildren() Implements IEntityCollectionData<TEntity> IEntityCollectionData IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.html",
    "title": "Class ExecuteChaptersBehavior | VR Builder Documentation",
    "keywords": "Class ExecuteChaptersBehavior Behavior that executes a number of chapters at the same time and completes when the chapters ends. Inheritance System.Object Entity < ExecuteChaptersBehavior.EntityData > Behavior < ExecuteChaptersBehavior.EntityData > ExecuteChaptersBehavior Implements IDataOwner < ExecuteChaptersBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<ExecuteChaptersBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<ExecuteChaptersBehavior.EntityData>.Data Entity<ExecuteChaptersBehavior.EntityData>.IDataOwner.Data Entity<ExecuteChaptersBehavior.EntityData>.LifeCycle Entity<ExecuteChaptersBehavior.EntityData>.Parent Entity<ExecuteChaptersBehavior.EntityData>.GetActiveProcess() Entity<ExecuteChaptersBehavior.EntityData>.GetConfigurator() Entity<ExecuteChaptersBehavior.EntityData>.Configure(IMode) Entity<ExecuteChaptersBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class ExecuteChaptersBehavior : Behavior<ExecuteChaptersBehavior.EntityData>, IDataOwner<ExecuteChaptersBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source ExecuteChaptersBehavior() Declaration [JsonConstructor] public ExecuteChaptersBehavior() | Improve this Doc View Source ExecuteChaptersBehavior(IEnumerable<IChapter>) Declaration public ExecuteChaptersBehavior(IEnumerable<IChapter> chapters) Parameters Type Name Description System.Collections.Generic.IEnumerable < IChapter > chapters | Improve this Doc View Source ExecuteChaptersBehavior(IChapter) Declaration public ExecuteChaptersBehavior(IChapter chapter) Parameters Type Name Description IChapter chapter Methods | Improve this Doc View Source Clone() Declaration public override IBehavior Clone() Returns Type Description IBehavior Overrides VRBuilder.Core.Behaviors.Behavior<VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData>.Clone() | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.GoToChapterBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.GoToChapterBehavior.EntityData.html",
    "title": "Class GoToChapterBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class GoToChapterBehavior.EntityData Behavior data. Inheritance System.Object GoToChapterBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Start Chapter\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source ChapterGuid Declaration [DataMember] public Guid ChapterGuid { get; set; } Property Value Type Description System.Guid | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.GoToChapterBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.GoToChapterBehavior.html",
    "title": "Class GoToChapterBehavior | VR Builder Documentation",
    "keywords": "Class GoToChapterBehavior This behavior sets the next chapter to an arbitrary chapter and fast forwards to the end of the current chapter. Inheritance System.Object Entity < GoToChapterBehavior.EntityData > Behavior < GoToChapterBehavior.EntityData > GoToChapterBehavior Implements IDataOwner < GoToChapterBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<GoToChapterBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<GoToChapterBehavior.EntityData>.Clone() Entity<GoToChapterBehavior.EntityData>.Data Entity<GoToChapterBehavior.EntityData>.IDataOwner.Data Entity<GoToChapterBehavior.EntityData>.LifeCycle Entity<GoToChapterBehavior.EntityData>.Parent Entity<GoToChapterBehavior.EntityData>.GetActiveProcess() Entity<GoToChapterBehavior.EntityData>.GetDeactivatingProcess() Entity<GoToChapterBehavior.EntityData>.GetConfigurator() Entity<GoToChapterBehavior.EntityData>.Configure(IMode) Entity<GoToChapterBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class GoToChapterBehavior : Behavior<GoToChapterBehavior.EntityData>, IDataOwner<GoToChapterBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source GoToChapterBehavior() Declaration [JsonConstructor] public GoToChapterBehavior() | Improve this Doc View Source GoToChapterBehavior(Guid, String) Declaration public GoToChapterBehavior(Guid chapterGuid, string name = \"Go to Chapter\") Parameters Type Name Description System.Guid chapterGuid System.String name Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.GoToChapterBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.HighlightObjectBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.HighlightObjectBehavior.EntityData.html",
    "title": "Class HighlightObjectBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class HighlightObjectBehavior.EntityData \"Highlight object\" behavior's data. Inheritance System.Object HighlightObjectBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Highlight Object\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source CustomHighlightColor ModeParameter<T> of the highlight color. Process modes can change the highlight color. Declaration public ModeParameter<Color> CustomHighlightColor { get; set; } Property Value Type Description ModeParameter < Color > | Improve this Doc View Source HighlightColor Highlight color set in the Step Inspector. Declaration [DataMember] [DisplayName(\"Color\")] public Color HighlightColor { get; set; } Property Value Type Description Color | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source ObjectToHighlight Declaration [DataMember] [Obsolete(\"Use TargetObjects instead.\")] [LegacyProperty(\"TargetObjects\")] public ScenePropertyReference<IHighlightProperty> ObjectToHighlight { get; set; } Property Value Type Description ScenePropertyReference < IHighlightProperty > | Improve this Doc View Source TargetObjects Target scene object to be highlighted. Declaration [DataMember] [DisplayName(\"Objects\")] public MultipleScenePropertyReference<IHighlightProperty> TargetObjects { get; set; } Property Value Type Description MultipleScenePropertyReference < IHighlightProperty > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.HighlightObjectBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.HighlightObjectBehavior.html",
    "title": "Class HighlightObjectBehavior | VR Builder Documentation",
    "keywords": "Class HighlightObjectBehavior Behavior that highlights the target ISceneObject with the specified color until the behavior is being deactivated. Inheritance System.Object Entity < HighlightObjectBehavior.EntityData > Behavior < HighlightObjectBehavior.EntityData > HighlightObjectBehavior Implements IDataOwner < HighlightObjectBehavior.EntityData > IBehavior IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > IOptional IEntity Inherited Members Behavior<HighlightObjectBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<HighlightObjectBehavior.EntityData>.Clone() Entity<HighlightObjectBehavior.EntityData>.Data Entity<HighlightObjectBehavior.EntityData>.IDataOwner.Data Entity<HighlightObjectBehavior.EntityData>.LifeCycle Entity<HighlightObjectBehavior.EntityData>.Parent Entity<HighlightObjectBehavior.EntityData>.GetActiveProcess() Entity<HighlightObjectBehavior.EntityData>.Configure(IMode) Entity<HighlightObjectBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-behaviors/highlight-object\")] public class HighlightObjectBehavior : Behavior<HighlightObjectBehavior.EntityData>, IDataOwner<HighlightObjectBehavior.EntityData>, IBehavior, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior>, IOptional, IEntity Constructors | Improve this Doc View Source HighlightObjectBehavior() Declaration [JsonConstructor] public HighlightObjectBehavior() | Improve this Doc View Source HighlightObjectBehavior(Guid, Color) Declaration public HighlightObjectBehavior(Guid objectId, Color highlightColor) Parameters Type Name Description System.Guid objectId Color highlightColor | Improve this Doc View Source HighlightObjectBehavior(IHighlightProperty) Declaration public HighlightObjectBehavior(IHighlightProperty target) Parameters Type Name Description IHighlightProperty target | Improve this Doc View Source HighlightObjectBehavior(IHighlightProperty, Color) Declaration public HighlightObjectBehavior(IHighlightProperty target, Color highlightColor) Parameters Type Name Description IHighlightProperty target Color highlightColor Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.HighlightObjectBehavior.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetConfigurator() Declaration protected override IConfigurator GetConfigurator() Returns Type Description IConfigurator Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.HighlightObjectBehavior.EntityData>.GetConfigurator() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.HighlightObjectBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IDataOwner<TData> IDataOwner IClonable<T> IOptional IEntity"
  },
  "api/VRBuilder.Core.Behaviors.html": {
    "href": "api/VRBuilder.Core.Behaviors.html",
    "title": "Namespace VRBuilder.Core.Behaviors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Behaviors Classes Behavior<TData> Inherit from this abstract class when creating your own behaviors. BehaviorCollectionChangedEventArgs BehaviorMetadata BehaviorSequence A collection of behaviors that are activated and deactivated after each other. BehaviorSequence.EntityData Behavior sequence's data. ConfettiBehavior This behavior causes confetti to rain. ConfettiBehavior.EntityData ControlParticleEmissionBehavior Behavior that start/stops a particle system property. ControlParticleEmissionBehavior.EntityData The ControlParticleEmissionBehavior behavior data. DelayBehavior Behavior that waits for DelayTime seconds before finishing its activation. DelayBehavior.EntityData The data class for a delay behavior. DisableGameObjectBehavior Disables gameObject of target ISceneObject. DisableGameObjectBehavior.EntityData \"Disable game object\" behavior's data. EnableGameObjectBehavior Enables gameObject of target ISceneObject. EnableGameObjectBehavior.EntityData \"Enable game object\" behavior's data. ExecuteChapterBehavior Behavior that executes a stored chapter and completes when the chapter ends. ExecuteChapterBehavior.EntityData Execute chapter behavior data. ExecuteChaptersBehavior Behavior that executes a number of chapters at the same time and completes when the chapters ends. ExecuteChaptersBehavior.EntityData Execute chapters behavior data. GoToChapterBehavior This behavior sets the next chapter to an arbitrary chapter and fast forwards to the end of the current chapter. GoToChapterBehavior.EntityData Behavior data. HighlightObjectBehavior Behavior that highlights the target ISceneObject with the specified color until the behavior is being deactivated. HighlightObjectBehavior.EntityData \"Highlight object\" behavior's data. LoadSceneBehavior Behavior that loads the specified scene, either additively or not. Loading a scene not additively interrupts the current process. LoadSceneBehavior.EntityData The data class for a load scene behavior. LoadSceneBehaviorException Exception related to load scene behavior. LockablePropertyReference Serializable reference to a LockableProperty MoveObjectBehavior Behavior that moves target SceneObject to the position and rotation of another TargetObject. It takes Duration seconds, even if the target was in the place already. If Duration is equal or less than 0, transition is instantaneous. MoveObjectBehavior.EntityData The \"move object\" behavior's data. PlayAudioBehavior A behavior that plays audio. PlayAudioBehavior.EntityData The \"play audio\" behavior's data. ResetValueBehavior A behavior that reset a data property to its default value specified in the inspector. ResetValueBehavior.EntityData The behavior data. ScalingBehavior ScalingBehavior.EntityData SetComponentEnabledBehavior Enables/disables all components of a given type on a given game object. SetComponentEnabledBehavior.EntityData The behavior's data. SetComponentEnabledByTagBehavior Enables/disables all components of a given type on a given game object. SetComponentEnabledByTagBehavior.EntityData The behavior's data. SetObjectsEnabledBehavior Sets enabled or disabled all specified objects. SetObjectsEnabledBehavior.EntityData Behavior data for SetObjectsEnabledBehavior . SetObjectsWithTagEnabledBehavior Sets enabled or disabled all objects with a given tag. SetObjectsWithTagEnabledBehavior.EntityData Behavior data for SetObjectsWithTagEnabledBehavior . SetParentBehavior This behavior changes the parent of a game object in the scene hierarchy. It can accept a null parent, in which case the object will be unparented. SetParentBehavior.EntityData SetValueBehavior<T> A behavior that sets a data property to a specified value. SetValueBehavior<T>.EntityData The SetValueBehavior<T> behavior data. Interfaces IBackgroundBehaviorData Interface that enables non-blocking background behaviors. If the IsBlocking property returns false, the behavior will not hinder the completion of a step. IBehavior IBehaviorData IBehaviorExecutionStages Data structure to add the possibility to run at specific execution stages IBehaviorParent Enums BehaviorExecutionStages"
  },
  "api/VRBuilder.Core.Behaviors.IBackgroundBehaviorData.html": {
    "href": "api/VRBuilder.Core.Behaviors.IBackgroundBehaviorData.html",
    "title": "Interface IBackgroundBehaviorData | VR Builder Documentation",
    "keywords": "Interface IBackgroundBehaviorData Interface that enables non-blocking background behaviors. If the IsBlocking property returns false, the behavior will not hinder the completion of a step. Inherited Members INamedData.Name IData.Metadata Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public interface IBackgroundBehaviorData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source IsBlocking If true, the behavior prevents the completion of a step until it is completed itself. If false, the behavior does not hinder the completion of a step. Declaration [DataMember] bool IsBlocking { get; set; } Property Value Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Behaviors.IBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.IBehavior.html",
    "title": "Interface IBehavior | VR Builder Documentation",
    "keywords": "Interface IBehavior Inherited Members IEntity.LifeCycle IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.Parent IDataOwner<IBehaviorData>.Data IClonable<IBehavior>.Clone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public interface IBehavior : IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior>"
  },
  "api/VRBuilder.Core.Behaviors.IBehaviorData.html": {
    "href": "api/VRBuilder.Core.Behaviors.IBehaviorData.html",
    "title": "Interface IBehaviorData | VR Builder Documentation",
    "keywords": "Interface IBehaviorData Inherited Members INamedData.Name IData.Metadata Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public interface IBehaviorData : INamedData, IData"
  },
  "api/VRBuilder.Core.Behaviors.IBehaviorExecutionStages.html": {
    "href": "api/VRBuilder.Core.Behaviors.IBehaviorExecutionStages.html",
    "title": "Interface IBehaviorExecutionStages | VR Builder Documentation",
    "keywords": "Interface IBehaviorExecutionStages Data structure to add the possibility to run at specific execution stages Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public interface IBehaviorExecutionStages Properties | Improve this Doc View Source ExecutionStages A property that determines if the Behavior should be run at activation or deactivation (or both). Declaration [DataMember] BehaviorExecutionStages ExecutionStages { get; set; } Property Value Type Description BehaviorExecutionStages"
  },
  "api/VRBuilder.Core.Behaviors.IBehaviorParent.html": {
    "href": "api/VRBuilder.Core.Behaviors.IBehaviorParent.html",
    "title": "Interface IBehaviorParent | VR Builder Documentation",
    "keywords": "Interface IBehaviorParent Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public interface IBehaviorParent Properties | Improve this Doc View Source Behaviors List of behaviors associated with this object. Declaration ReadOnlyCollection<IBehavior> Behaviors { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < IBehavior > Methods | Improve this Doc View Source AddBehavior(IBehavior) Add behavior to this object. Implementation of this method should invoke BehaviorCollectionChanged event. Declaration void AddBehavior(IBehavior behavior) Parameters Type Name Description IBehavior behavior Behavior to be added. | Improve this Doc View Source CheckHasBehavior(IBehavior) Returns true if this object has given behavior. Declaration bool CheckHasBehavior(IBehavior behavior) Parameters Type Name Description IBehavior behavior Returns Type Description System.Boolean | Improve this Doc View Source InsertBehavior(Int32, IBehavior) Insert the behavior into the collection of behaviors at index . Declaration void InsertBehavior(int index, IBehavior behavior) Parameters Type Name Description System.Int32 index IBehavior behavior | Improve this Doc View Source RemoveBehavior(IBehavior) Remove behavior from this object. Implementation of this method should invoke BehaviorCollectionChanged event. Declaration bool RemoveBehavior(IBehavior behavior) Parameters Type Name Description IBehavior behavior Returns Type Description System.Boolean Events | Improve this Doc View Source BehaviorCollectionChanged Invoked when behavior is added or removed from this object. Declaration event EventHandler<BehaviorCollectionChangedEventArgs> BehaviorCollectionChanged Event Type Type Description System.EventHandler < BehaviorCollectionChangedEventArgs >"
  },
  "api/VRBuilder.Core.Behaviors.LoadSceneBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.LoadSceneBehavior.EntityData.html",
    "title": "Class LoadSceneBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class LoadSceneBehavior.EntityData The data class for a load scene behavior. Inheritance System.Object LoadSceneBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source LoadAdditively If true, the scene will be loaded additively. Declaration [DataMember] [DisplayName(\"Load additively\")] public bool LoadAdditively { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LoadAsynchronously If true, the scene will be loaded asynchronously during the update cycle of the stage process. Declaration [DataMember] [DisplayName(\"Load asynchronously\")] public bool LoadAsynchronously { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source ScenePath Asset path of the scene to load. Declaration [DataMember] [UsesSpecificProcessDrawer(\"SceneDropdownDrawer\")] [DisplayName(\"Scene to load\")] public string ScenePath { get; set; } Property Value Type Description System.String Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.LoadSceneBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.LoadSceneBehavior.html",
    "title": "Class LoadSceneBehavior | VR Builder Documentation",
    "keywords": "Class LoadSceneBehavior Behavior that loads the specified scene, either additively or not. Loading a scene not additively interrupts the current process. Inheritance System.Object Entity < LoadSceneBehavior.EntityData > Behavior < LoadSceneBehavior.EntityData > LoadSceneBehavior Implements IDataOwner < LoadSceneBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<LoadSceneBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<LoadSceneBehavior.EntityData>.Clone() Entity<LoadSceneBehavior.EntityData>.Data Entity<LoadSceneBehavior.EntityData>.IDataOwner.Data Entity<LoadSceneBehavior.EntityData>.LifeCycle Entity<LoadSceneBehavior.EntityData>.Parent Entity<LoadSceneBehavior.EntityData>.GetActiveProcess() Entity<LoadSceneBehavior.EntityData>.GetDeactivatingProcess() Entity<LoadSceneBehavior.EntityData>.GetConfigurator() Entity<LoadSceneBehavior.EntityData>.Configure(IMode) Entity<LoadSceneBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class LoadSceneBehavior : Behavior<LoadSceneBehavior.EntityData>, IDataOwner<LoadSceneBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source LoadSceneBehavior() Declaration [JsonConstructor] public LoadSceneBehavior() Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.LoadSceneBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.LoadSceneBehaviorException.html": {
    "href": "api/VRBuilder.Core.Behaviors.LoadSceneBehaviorException.html",
    "title": "Class LoadSceneBehaviorException | VR Builder Documentation",
    "keywords": "Class LoadSceneBehaviorException Exception related to load scene behavior. Inheritance System.Object System.Exception LoadSceneBehaviorException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public class LoadSceneBehaviorException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source LoadSceneBehaviorException(String) Declaration public LoadSceneBehaviorException(string message) Parameters Type Name Description System.String message Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/VRBuilder.Core.Behaviors.LockablePropertyReference.html": {
    "href": "api/VRBuilder.Core.Behaviors.LockablePropertyReference.html",
    "title": "Class LockablePropertyReference | VR Builder Documentation",
    "keywords": "Class LockablePropertyReference Serializable reference to a LockableProperty Inheritance System.Object LockablePropertyReference Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class LockablePropertyReference Constructors | Improve this Doc View Source LockablePropertyReference() Declaration public LockablePropertyReference() | Improve this Doc View Source LockablePropertyReference(LockableProperty) Declaration public LockablePropertyReference(LockableProperty property) Parameters Type Name Description LockableProperty property Fields | Improve this Doc View Source Target Reference to the scene object the LockableProperty is attached to. Declaration [DataMember] [Obsolete(\"Use TargetObject instead.\")] [LegacyProperty(\"TargetObject\")] public SceneObjectReference Target Field Value Type Description SceneObjectReference | Improve this Doc View Source TargetObject Reference to the scene object the LockableProperty is attached to. Declaration [DataMember] public SingleSceneObjectReference TargetObject Field Value Type Description SingleSceneObjectReference | Improve this Doc View Source Type Type name of the LockableProperty. Declaration [DataMember] public string Type Field Value Type Description System.String Methods | Improve this Doc View Source GetProperty() Returns the referenced LockableProperty . Declaration public LockableProperty GetProperty() Returns Type Description LockableProperty"
  },
  "api/VRBuilder.Core.Behaviors.MoveObjectBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.MoveObjectBehavior.EntityData.html",
    "title": "Class MoveObjectBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class MoveObjectBehavior.EntityData The \"move object\" behavior's data. Inheritance System.Object MoveObjectBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Move Object\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source AnimationCurve Declaration [DataMember] [DisplayName(\"Animation curve\")] public AnimationCurve AnimationCurve { get; set; } Property Value Type Description AnimationCurve | Improve this Doc View Source Duration Duration of the transition. If duration is equal or less than zero, target object movement is instantaneous. Declaration [DataMember] [DisplayName(\"Animation (in seconds)\")] public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source FinalPosition Target's position and rotation is linearly interpolated to match PositionProvider's position and rotation at the end of transition. Declaration [DataMember] [DisplayName(\"Final position provider\")] public SingleSceneObjectReference FinalPosition { get; set; } Property Value Type Description SingleSceneObjectReference | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source PositionProvider Declaration [DataMember] [Obsolete(\"Use FinalPosition instead.\")] [LegacyProperty(\"FinalPosition\")] public SceneObjectReference PositionProvider { get; set; } Property Value Type Description SceneObjectReference | Improve this Doc View Source Target Declaration [DataMember] [Obsolete(\"Use TargetObject instead.\")] [LegacyProperty(\"TargetObject\")] public SceneObjectReference Target { get; set; } Property Value Type Description SceneObjectReference | Improve this Doc View Source TargetObject Target scene object to be moved. Declaration [DataMember] [DisplayName(\"Object\")] public SingleSceneObjectReference TargetObject { get; set; } Property Value Type Description SingleSceneObjectReference Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.MoveObjectBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.MoveObjectBehavior.html",
    "title": "Class MoveObjectBehavior | VR Builder Documentation",
    "keywords": "Class MoveObjectBehavior Behavior that moves target SceneObject to the position and rotation of another TargetObject. It takes Duration seconds, even if the target was in the place already. If Duration is equal or less than 0, transition is instantaneous. Inheritance System.Object Entity < MoveObjectBehavior.EntityData > Behavior < MoveObjectBehavior.EntityData > MoveObjectBehavior Implements IDataOwner < MoveObjectBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<MoveObjectBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<MoveObjectBehavior.EntityData>.Clone() Entity<MoveObjectBehavior.EntityData>.Data Entity<MoveObjectBehavior.EntityData>.IDataOwner.Data Entity<MoveObjectBehavior.EntityData>.LifeCycle Entity<MoveObjectBehavior.EntityData>.Parent Entity<MoveObjectBehavior.EntityData>.GetActiveProcess() Entity<MoveObjectBehavior.EntityData>.GetDeactivatingProcess() Entity<MoveObjectBehavior.EntityData>.GetConfigurator() Entity<MoveObjectBehavior.EntityData>.Configure(IMode) Entity<MoveObjectBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-behaviors/move-object\")] public class MoveObjectBehavior : Behavior<MoveObjectBehavior.EntityData>, IDataOwner<MoveObjectBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source MoveObjectBehavior() Declaration [JsonConstructor] public MoveObjectBehavior() | Improve this Doc View Source MoveObjectBehavior(Guid, Guid, Single) Declaration public MoveObjectBehavior(Guid targetObjectId, Guid finalPositionId, float duration) Parameters Type Name Description System.Guid targetObjectId System.Guid finalPositionId System.Single duration | Improve this Doc View Source MoveObjectBehavior(ISceneObject, ISceneObject, Single) Declaration public MoveObjectBehavior(ISceneObject target, ISceneObject positionProvider, float duration) Parameters Type Name Description ISceneObject target ISceneObject positionProvider System.Single duration Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.MoveObjectBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.html",
    "title": "Class PlayAudioBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class PlayAudioBehavior.EntityData The \"play audio\" behavior's data. Inheritance System.Object PlayAudioBehavior.EntityData Implements IBackgroundBehaviorData IBehaviorData INamedData IData IBehaviorExecutionStages Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class EntityData : IBackgroundBehaviorData, IBehaviorData, INamedData, IData, IBehaviorExecutionStages Properties | Improve this Doc View Source AudioData An audio data that contains an audio clip to play. Declaration [DataMember] public IAudioData AudioData { get; set; } Property Value Type Description IAudioData | Improve this Doc View Source AudioPlayer The Unity's audio source to play the sound. If not set, it will use . Declaration public AudioSource AudioPlayer { get; set; } Property Value Type Description AudioSource | Improve this Doc View Source ExecutionStages Declaration [DataMember] public BehaviorExecutionStages ExecutionStages { get; set; } Property Value Type Description BehaviorExecutionStages | Improve this Doc View Source IsBlocking Declaration public bool IsBlocking { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Volume Audio volume this audio file should be played with. Declaration [DataMember] [DisplayName(\"Audio Volume (from 0 to 1)\")] [UsesSpecificProcessDrawer(\"NormalizedFloatDrawer\")] public float Volume { get; set; } Property Value Type Description System.Single Implements IBackgroundBehaviorData IBehaviorData INamedData IData IBehaviorExecutionStages"
  },
  "api/VRBuilder.Core.Behaviors.PlayAudioBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.PlayAudioBehavior.html",
    "title": "Class PlayAudioBehavior | VR Builder Documentation",
    "keywords": "Class PlayAudioBehavior A behavior that plays audio. Inheritance System.Object Entity < PlayAudioBehavior.EntityData > Behavior < PlayAudioBehavior.EntityData > PlayAudioBehavior Implements IDataOwner < PlayAudioBehavior.EntityData > IBehavior IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > IOptional IEntity Inherited Members Behavior<PlayAudioBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<PlayAudioBehavior.EntityData>.Clone() Entity<PlayAudioBehavior.EntityData>.Data Entity<PlayAudioBehavior.EntityData>.IDataOwner.Data Entity<PlayAudioBehavior.EntityData>.LifeCycle Entity<PlayAudioBehavior.EntityData>.Parent Entity<PlayAudioBehavior.EntityData>.GetActiveProcess() Entity<PlayAudioBehavior.EntityData>.GetConfigurator() Entity<PlayAudioBehavior.EntityData>.Configure(IMode) Entity<PlayAudioBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-behaviors/play-audio-file\")] public class PlayAudioBehavior : Behavior<PlayAudioBehavior.EntityData>, IDataOwner<PlayAudioBehavior.EntityData>, IBehavior, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior>, IOptional, IEntity Constructors | Improve this Doc View Source PlayAudioBehavior() Declaration [JsonConstructor] protected PlayAudioBehavior() | Improve this Doc View Source PlayAudioBehavior(IAudioData, BehaviorExecutionStages, AudioSource) Declaration public PlayAudioBehavior(IAudioData audioData, BehaviorExecutionStages executionStages, AudioSource audioPlayer = null) Parameters Type Name Description IAudioData audioData BehaviorExecutionStages executionStages AudioSource audioPlayer | Improve this Doc View Source PlayAudioBehavior(IAudioData, BehaviorExecutionStages, Boolean, AudioSource) Declaration public PlayAudioBehavior(IAudioData audioData, BehaviorExecutionStages executionStages, bool isBlocking, AudioSource audioPlayer = null) Parameters Type Name Description IAudioData audioData BehaviorExecutionStages executionStages System.Boolean isBlocking AudioSource audioPlayer Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IDataOwner<TData> IDataOwner IClonable<T> IOptional IEntity"
  },
  "api/VRBuilder.Core.Behaviors.ResetValueBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.ResetValueBehavior.EntityData.html",
    "title": "Class ResetValueBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class ResetValueBehavior.EntityData The behavior data. Inheritance System.Object ResetValueBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Reset Value\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Fields | Improve this Doc View Source Properties Declaration [DataMember] [DisplayName(\"Data Properties\")] public MultipleScenePropertyReference<IDataPropertyBase> Properties Field Value Type Description MultipleScenePropertyReference < IDataPropertyBase > Properties | Improve this Doc View Source DataProperty Declaration [DataMember] [Obsolete(\"Use Properties instead.\")] [LegacyProperty(\"Properties\")] public ScenePropertyReference<IDataPropertyBase> DataProperty { get; set; } Property Value Type Description ScenePropertyReference < IDataPropertyBase > | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.ResetValueBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.ResetValueBehavior.html",
    "title": "Class ResetValueBehavior | VR Builder Documentation",
    "keywords": "Class ResetValueBehavior A behavior that reset a data property to its default value specified in the inspector. Inheritance System.Object Entity < ResetValueBehavior.EntityData > Behavior < ResetValueBehavior.EntityData > ResetValueBehavior Implements IDataOwner < ResetValueBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<ResetValueBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<ResetValueBehavior.EntityData>.Clone() Entity<ResetValueBehavior.EntityData>.Data Entity<ResetValueBehavior.EntityData>.IDataOwner.Data Entity<ResetValueBehavior.EntityData>.LifeCycle Entity<ResetValueBehavior.EntityData>.Parent Entity<ResetValueBehavior.EntityData>.GetActiveProcess() Entity<ResetValueBehavior.EntityData>.GetDeactivatingProcess() Entity<ResetValueBehavior.EntityData>.GetConfigurator() Entity<ResetValueBehavior.EntityData>.Configure(IMode) Entity<ResetValueBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/states-data-add-on\")] public class ResetValueBehavior : Behavior<ResetValueBehavior.EntityData>, IDataOwner<ResetValueBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source ResetValueBehavior() Declaration [JsonConstructor] public ResetValueBehavior() | Improve this Doc View Source ResetValueBehavior(Guid) Declaration public ResetValueBehavior(Guid propertyId) Parameters Type Name Description System.Guid propertyId | Improve this Doc View Source ResetValueBehavior(IDataPropertyBase) Declaration public ResetValueBehavior(IDataPropertyBase property) Parameters Type Name Description IDataPropertyBase property Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.ResetValueBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.ScalingBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.ScalingBehavior.EntityData.html",
    "title": "Class ScalingBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class ScalingBehavior.EntityData Inheritance System.Object ScalingBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Scale Object\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source AnimationCurve Declaration [DataMember] [DisplayName(\"Animation curve\")] public AnimationCurve AnimationCurve { get; set; } Property Value Type Description AnimationCurve | Improve this Doc View Source Duration Declaration [DataMember] [DisplayName(\"Animation Duration (in seconds)\")] public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Target Declaration [DataMember] [Obsolete(\"Use Targets instead.\")] [LegacyProperty(\"Targets\")] public SceneObjectReference Target { get; set; } Property Value Type Description SceneObjectReference | Improve this Doc View Source Targets Declaration [DataMember] [DisplayName(\"Target Objects\")] public MultipleSceneObjectReference Targets { get; set; } Property Value Type Description MultipleSceneObjectReference | Improve this Doc View Source TargetScale Declaration [DataMember] [DisplayName(\"Target Scale\")] public Vector3 TargetScale { get; set; } Property Value Type Description Vector3 Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.ScalingBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.ScalingBehavior.html",
    "title": "Class ScalingBehavior | VR Builder Documentation",
    "keywords": "Class ScalingBehavior Inheritance System.Object Entity < ScalingBehavior.EntityData > Behavior < ScalingBehavior.EntityData > ScalingBehavior Implements IDataOwner < ScalingBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<ScalingBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<ScalingBehavior.EntityData>.Clone() Entity<ScalingBehavior.EntityData>.Data Entity<ScalingBehavior.EntityData>.IDataOwner.Data Entity<ScalingBehavior.EntityData>.LifeCycle Entity<ScalingBehavior.EntityData>.Parent Entity<ScalingBehavior.EntityData>.GetActiveProcess() Entity<ScalingBehavior.EntityData>.GetDeactivatingProcess() Entity<ScalingBehavior.EntityData>.GetConfigurator() Entity<ScalingBehavior.EntityData>.Configure(IMode) Entity<ScalingBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class ScalingBehavior : Behavior<ScalingBehavior.EntityData>, IDataOwner<ScalingBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source ScalingBehavior() Declaration [JsonConstructor] public ScalingBehavior() | Improve this Doc View Source ScalingBehavior(IEnumerable<ISceneObject>, Vector3, Single) Declaration public ScalingBehavior(IEnumerable<ISceneObject> targets, Vector3 targetScale, float duration) Parameters Type Name Description System.Collections.Generic.IEnumerable < ISceneObject > targets Vector3 targetScale System.Single duration Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.ScalingBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.SetComponentEnabledBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.SetComponentEnabledBehavior.EntityData.html",
    "title": "Class SetComponentEnabledBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetComponentEnabledBehavior.EntityData The behavior's data. Inheritance System.Object SetComponentEnabledBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Set Component Enabled\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source ComponentType Type of components to interact with. Declaration [DataMember] public string ComponentType { get; set; } Property Value Type Description System.String | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source RevertOnDeactivation If true, the component will revert to its original state when the behavior deactivates. Declaration [DataMember] public bool RevertOnDeactivation { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SetEnabled If true, the component will be enabled, otherwise it will disabled. Declaration [DataMember] public bool SetEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Target Declaration [DataMember] [Obsolete(\"Use TargetObjects instead.\")] [LegacyProperty(\"TargetObjects\")] public SceneObjectReference Target { get; set; } Property Value Type Description SceneObjectReference | Improve this Doc View Source TargetObjects Object the target component is on. Declaration [DataMember] public MultipleSceneObjectReference TargetObjects { get; set; } Property Value Type Description MultipleSceneObjectReference Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.SetComponentEnabledBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.SetComponentEnabledBehavior.html",
    "title": "Class SetComponentEnabledBehavior | VR Builder Documentation",
    "keywords": "Class SetComponentEnabledBehavior Enables/disables all components of a given type on a given game object. Inheritance System.Object Entity < SetComponentEnabledBehavior.EntityData > Behavior < SetComponentEnabledBehavior.EntityData > SetComponentEnabledBehavior Implements IDataOwner < SetComponentEnabledBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetComponentEnabledBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<SetComponentEnabledBehavior.EntityData>.Clone() Entity<SetComponentEnabledBehavior.EntityData>.Data Entity<SetComponentEnabledBehavior.EntityData>.IDataOwner.Data Entity<SetComponentEnabledBehavior.EntityData>.LifeCycle Entity<SetComponentEnabledBehavior.EntityData>.Parent Entity<SetComponentEnabledBehavior.EntityData>.GetActiveProcess() Entity<SetComponentEnabledBehavior.EntityData>.GetConfigurator() Entity<SetComponentEnabledBehavior.EntityData>.Configure(IMode) Entity<SetComponentEnabledBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-behaviors/enable-object\")] public class SetComponentEnabledBehavior : Behavior<SetComponentEnabledBehavior.EntityData>, IDataOwner<SetComponentEnabledBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source SetComponentEnabledBehavior() Declaration [JsonConstructor] public SetComponentEnabledBehavior() | Improve this Doc View Source SetComponentEnabledBehavior(Boolean, String) Declaration public SetComponentEnabledBehavior(bool setEnabled, string name = \"Set Component Enabled\") Parameters Type Name Description System.Boolean setEnabled System.String name | Improve this Doc View Source SetComponentEnabledBehavior(Guid, String, Boolean, Boolean) Declaration public SetComponentEnabledBehavior(Guid objectId, string componentType, bool setEnabled, bool revertOnDeactivate) Parameters Type Name Description System.Guid objectId System.String componentType System.Boolean setEnabled System.Boolean revertOnDeactivate Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetComponentEnabledBehavior.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetComponentEnabledBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.SetComponentEnabledByTagBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.SetComponentEnabledByTagBehavior.EntityData.html",
    "title": "Class SetComponentEnabledByTagBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetComponentEnabledByTagBehavior.EntityData The behavior's data. Inheritance System.Object SetComponentEnabledByTagBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Set Component Enabled (Tag)\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source ComponentType Type of components to interact with. Declaration [DataMember] public string ComponentType { get; set; } Property Value Type Description System.String | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source RevertOnDeactivation If true, the component will revert to its original state when the behavior deactivates. Declaration [DataMember] public bool RevertOnDeactivation { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SetEnabled If true, the component will be enabled, otherwise it will disabled. Declaration [DataMember] public bool SetEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source TargetObjects Object the target component is on. Declaration [DataMember] public MultipleSceneObjectReference TargetObjects { get; set; } Property Value Type Description MultipleSceneObjectReference | Improve this Doc View Source TargetTag Declaration [DataMember] [Obsolete(\"Use TargetObjects instead.\")] [LegacyProperty(\"TargetObjects\")] public SceneObjectTag<ISceneObject> TargetTag { get; set; } Property Value Type Description SceneObjectTag < ISceneObject > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.SetComponentEnabledByTagBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.SetComponentEnabledByTagBehavior.html",
    "title": "Class SetComponentEnabledByTagBehavior | VR Builder Documentation",
    "keywords": "Class SetComponentEnabledByTagBehavior Enables/disables all components of a given type on a given game object. Inheritance System.Object Entity < SetComponentEnabledByTagBehavior.EntityData > Behavior < SetComponentEnabledByTagBehavior.EntityData > SetComponentEnabledByTagBehavior Implements IDataOwner < SetComponentEnabledByTagBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetComponentEnabledByTagBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<SetComponentEnabledByTagBehavior.EntityData>.Clone() Entity<SetComponentEnabledByTagBehavior.EntityData>.Data Entity<SetComponentEnabledByTagBehavior.EntityData>.IDataOwner.Data Entity<SetComponentEnabledByTagBehavior.EntityData>.LifeCycle Entity<SetComponentEnabledByTagBehavior.EntityData>.Parent Entity<SetComponentEnabledByTagBehavior.EntityData>.GetActiveProcess() Entity<SetComponentEnabledByTagBehavior.EntityData>.GetConfigurator() Entity<SetComponentEnabledByTagBehavior.EntityData>.Configure(IMode) Entity<SetComponentEnabledByTagBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-behaviors/enable-object\")] [Obsolete(\"Use SetComponentEnabledBehavior instead.\")] public class SetComponentEnabledByTagBehavior : Behavior<SetComponentEnabledByTagBehavior.EntityData>, IDataOwner<SetComponentEnabledByTagBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source SetComponentEnabledByTagBehavior() Declaration [JsonConstructor] public SetComponentEnabledByTagBehavior() | Improve this Doc View Source SetComponentEnabledByTagBehavior(Boolean, String) Declaration public SetComponentEnabledByTagBehavior(bool setEnabled, string name = \"Set Component Enabled\") Parameters Type Name Description System.Boolean setEnabled System.String name | Improve this Doc View Source SetComponentEnabledByTagBehavior(Guid, String, Boolean, Boolean) Declaration public SetComponentEnabledByTagBehavior(Guid objectId, string componentType, bool setEnabled, bool revertOnDeactivate) Parameters Type Name Description System.Guid objectId System.String componentType System.Boolean setEnabled System.Boolean revertOnDeactivate Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetComponentEnabledByTagBehavior.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetComponentEnabledByTagBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.SetObjectsEnabledBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.SetObjectsEnabledBehavior.EntityData.html",
    "title": "Class SetObjectsEnabledBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetObjectsEnabledBehavior.EntityData Behavior data for SetObjectsEnabledBehavior . Inheritance System.Object SetObjectsEnabledBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Set Objects Enabled\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source RevertOnDeactivation Declaration [DataMember] [DisplayName(\"Revert after step is complete\")] public bool RevertOnDeactivation { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SetEnabled Declaration [DataMember] public bool SetEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source TargetObjects The objects to enable or disable. Declaration [DataMember] [DisplayName(\"Objects\")] public MultipleSceneObjectReference TargetObjects { get; set; } Property Value Type Description MultipleSceneObjectReference Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.SetObjectsEnabledBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.SetObjectsEnabledBehavior.html",
    "title": "Class SetObjectsEnabledBehavior | VR Builder Documentation",
    "keywords": "Class SetObjectsEnabledBehavior Sets enabled or disabled all specified objects. Inheritance System.Object Entity < SetObjectsEnabledBehavior.EntityData > Behavior < SetObjectsEnabledBehavior.EntityData > SetObjectsEnabledBehavior Implements IDataOwner < SetObjectsEnabledBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetObjectsEnabledBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<SetObjectsEnabledBehavior.EntityData>.Clone() Entity<SetObjectsEnabledBehavior.EntityData>.Data Entity<SetObjectsEnabledBehavior.EntityData>.IDataOwner.Data Entity<SetObjectsEnabledBehavior.EntityData>.LifeCycle Entity<SetObjectsEnabledBehavior.EntityData>.Parent Entity<SetObjectsEnabledBehavior.EntityData>.GetActiveProcess() Entity<SetObjectsEnabledBehavior.EntityData>.GetConfigurator() Entity<SetObjectsEnabledBehavior.EntityData>.Configure(IMode) Entity<SetObjectsEnabledBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class SetObjectsEnabledBehavior : Behavior<SetObjectsEnabledBehavior.EntityData>, IDataOwner<SetObjectsEnabledBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source SetObjectsEnabledBehavior() Declaration [JsonConstructor] public SetObjectsEnabledBehavior() | Improve this Doc View Source SetObjectsEnabledBehavior(Boolean) Declaration public SetObjectsEnabledBehavior(bool setEnabled) Parameters Type Name Description System.Boolean setEnabled | Improve this Doc View Source SetObjectsEnabledBehavior(Guid, Boolean, Boolean) Declaration public SetObjectsEnabledBehavior(Guid objectId, bool setEnabled, bool revertOnDeactivate = false) Parameters Type Name Description System.Guid objectId System.Boolean setEnabled System.Boolean revertOnDeactivate Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsEnabledBehavior.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsEnabledBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData.html",
    "title": "Class SetObjectsWithTagEnabledBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetObjectsWithTagEnabledBehavior.EntityData Behavior data for SetObjectsWithTagEnabledBehavior . Inheritance System.Object SetObjectsWithTagEnabledBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Enable Objects by Tag\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source RevertOnDeactivation Declaration [DataMember] [DisplayName(\"Revert after step is complete\")] public bool RevertOnDeactivation { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SetEnabled Declaration [DataMember] public bool SetEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Tag Declaration [DataMember] [Obsolete(\"Use TargetObjects instead.\")] [LegacyProperty(\"TargetObjects\")] public SceneObjectTag<ISceneObject> Tag { get; set; } Property Value Type Description SceneObjectTag < ISceneObject > | Improve this Doc View Source TargetObjects The objects to enable or disable. Declaration [DataMember] [DisplayName(\"Objects\")] public MultipleSceneObjectReference TargetObjects { get; set; } Property Value Type Description MultipleSceneObjectReference Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.html",
    "title": "Class SetObjectsWithTagEnabledBehavior | VR Builder Documentation",
    "keywords": "Class SetObjectsWithTagEnabledBehavior Sets enabled or disabled all objects with a given tag. Inheritance System.Object Entity < SetObjectsWithTagEnabledBehavior.EntityData > Behavior < SetObjectsWithTagEnabledBehavior.EntityData > SetObjectsWithTagEnabledBehavior Implements IDataOwner < SetObjectsWithTagEnabledBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetObjectsWithTagEnabledBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<SetObjectsWithTagEnabledBehavior.EntityData>.Clone() Entity<SetObjectsWithTagEnabledBehavior.EntityData>.Data Entity<SetObjectsWithTagEnabledBehavior.EntityData>.IDataOwner.Data Entity<SetObjectsWithTagEnabledBehavior.EntityData>.LifeCycle Entity<SetObjectsWithTagEnabledBehavior.EntityData>.Parent Entity<SetObjectsWithTagEnabledBehavior.EntityData>.GetActiveProcess() Entity<SetObjectsWithTagEnabledBehavior.EntityData>.GetConfigurator() Entity<SetObjectsWithTagEnabledBehavior.EntityData>.Configure(IMode) Entity<SetObjectsWithTagEnabledBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [Obsolete(\"Use SetObjectsEnabledBehavior instead.\")] public class SetObjectsWithTagEnabledBehavior : Behavior<SetObjectsWithTagEnabledBehavior.EntityData>, IDataOwner<SetObjectsWithTagEnabledBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source SetObjectsWithTagEnabledBehavior() Declaration [JsonConstructor] public SetObjectsWithTagEnabledBehavior() | Improve this Doc View Source SetObjectsWithTagEnabledBehavior(Boolean) Declaration public SetObjectsWithTagEnabledBehavior(bool setEnabled) Parameters Type Name Description System.Boolean setEnabled | Improve this Doc View Source SetObjectsWithTagEnabledBehavior(Guid, Boolean, Boolean) Declaration public SetObjectsWithTagEnabledBehavior(Guid objectId, bool setEnabled, bool revertOnDeactivate = false) Parameters Type Name Description System.Guid objectId System.Boolean setEnabled System.Boolean revertOnDeactivate Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.html",
    "title": "Class SetParentBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetParentBehavior.EntityData Inheritance System.Object SetParentBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Set Parent\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Parent Declaration [DataMember] [Obsolete(\"Use ParentObject instead.\")] [LegacyProperty(\"ParentObject\")] public SceneObjectReference Parent { get; set; } Property Value Type Description SceneObjectReference | Improve this Doc View Source ParentObject New parent game object. Declaration [DataMember] public SingleSceneObjectReference ParentObject { get; set; } Property Value Type Description SingleSceneObjectReference | Improve this Doc View Source SnapToParentTransform If true, the object will be moved to the parent's transform. Declaration [DataMember] [DisplayName(\"Snap to parent transform\")] public bool SnapToParentTransform { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Target Declaration [DataMember] [Obsolete(\"Use TargetObject instead.\")] [LegacyProperty(\"TargetObject\")] public SceneObjectReference Target { get; set; } Property Value Type Description SceneObjectReference | Improve this Doc View Source TargetObject Process object to reparent. Declaration [DataMember] public SingleSceneObjectReference TargetObject { get; set; } Property Value Type Description SingleSceneObjectReference Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.SetParentBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.SetParentBehavior.html",
    "title": "Class SetParentBehavior | VR Builder Documentation",
    "keywords": "Class SetParentBehavior This behavior changes the parent of a game object in the scene hierarchy. It can accept a null parent, in which case the object will be unparented. Inheritance System.Object Entity < SetParentBehavior.EntityData > Behavior < SetParentBehavior.EntityData > SetParentBehavior Implements IDataOwner < SetParentBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetParentBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<SetParentBehavior.EntityData>.Clone() Entity<SetParentBehavior.EntityData>.Data Entity<SetParentBehavior.EntityData>.IDataOwner.Data Entity<SetParentBehavior.EntityData>.LifeCycle Entity<SetParentBehavior.EntityData>.Parent Entity<SetParentBehavior.EntityData>.GetActiveProcess() Entity<SetParentBehavior.EntityData>.GetDeactivatingProcess() Entity<SetParentBehavior.EntityData>.GetConfigurator() Entity<SetParentBehavior.EntityData>.Configure(IMode) Entity<SetParentBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-behaviors/set-parent\")] public class SetParentBehavior : Behavior<SetParentBehavior.EntityData>, IDataOwner<SetParentBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source SetParentBehavior() Declaration [JsonConstructor] public SetParentBehavior() | Improve this Doc View Source SetParentBehavior(Guid, Guid, Boolean) Declaration public SetParentBehavior(Guid target, Guid parent, bool snapToParentTransform = false) Parameters Type Name Description System.Guid target System.Guid parent System.Boolean snapToParentTransform | Improve this Doc View Source SetParentBehavior(ISceneObject, ISceneObject, Boolean) Declaration public SetParentBehavior(ISceneObject target, ISceneObject parent, bool snapToParentTransform = false) Parameters Type Name Description ISceneObject target ISceneObject parent System.Boolean snapToParentTransform Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetParentBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.SetValueBehavior-1.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.SetValueBehavior-1.EntityData.html",
    "title": "Class SetValueBehavior<T>.EntityData | VR Builder Documentation",
    "keywords": "Class SetValueBehavior<T>.EntityData The SetValueBehavior<T> behavior data. Inheritance System.Object SetValueBehavior<T>.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Set Value\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source DataProperties Declaration [DataMember] [DisplayName(\"Data Property\")] public MultipleScenePropertyReference<IDataProperty<T>> DataProperties { get; set; } Property Value Type Description MultipleScenePropertyReference < IDataProperty <T>> | Improve this Doc View Source DataProperty Declaration [DataMember] [Obsolete(\"Use DataProperties instead.\")] [LegacyProperty(\"DataProperties\")] public ScenePropertyReference<IDataProperty<T>> DataProperty { get; set; } Property Value Type Description ScenePropertyReference < IDataProperty <T>> | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source NewValue Declaration [DataMember] [DisplayName(\"Value\")] public T NewValue { get; set; } Property Value Type Description T Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.SetValueBehavior-1.html": {
    "href": "api/VRBuilder.Core.Behaviors.SetValueBehavior-1.html",
    "title": "Class SetValueBehavior<T> | VR Builder Documentation",
    "keywords": "Class SetValueBehavior<T> A behavior that sets a data property to a specified value. Inheritance System.Object Entity < SetValueBehavior.EntityData <>> Behavior < SetValueBehavior.EntityData <>> SetValueBehavior<T> Implements IDataOwner < SetValueBehavior.EntityData <>> IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetValueBehavior<T>.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<SetValueBehavior<T>.EntityData>.Clone() Entity<SetValueBehavior<T>.EntityData>.Data Entity<SetValueBehavior<T>.EntityData>.IDataOwner.Data Entity<SetValueBehavior<T>.EntityData>.LifeCycle Entity<SetValueBehavior<T>.EntityData>.Parent Entity<SetValueBehavior<T>.EntityData>.GetActiveProcess() Entity<SetValueBehavior<T>.EntityData>.GetDeactivatingProcess() Entity<SetValueBehavior<T>.EntityData>.GetConfigurator() Entity<SetValueBehavior<T>.EntityData>.Configure(IMode) Entity<SetValueBehavior<T>.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/states-data-add-on\")] public class SetValueBehavior<T> : Behavior<SetValueBehavior<T>.EntityData>, IDataOwner<SetValueBehavior<T>.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Type Parameters Name Description T Constructors | Improve this Doc View Source SetValueBehavior() Declaration [JsonConstructor] public SetValueBehavior() | Improve this Doc View Source SetValueBehavior(Guid, T) Declaration public SetValueBehavior(Guid propertyId, T value) Parameters Type Name Description System.Guid propertyId T value | Improve this Doc View Source SetValueBehavior(IDataProperty<T>, T) Declaration public SetValueBehavior(IDataProperty<T> property, T value) Parameters Type Name Description IDataProperty <T> property T value Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetValueBehavior<T>.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Chapter.EntityData.html": {
    "href": "api/VRBuilder.Core.Chapter.EntityData.html",
    "title": "Class Chapter.EntityData | VR Builder Documentation",
    "keywords": "Class Chapter.EntityData The chapter's data class. Inheritance System.Object EntityCollectionData < IStep > Chapter.EntityData Implements IChapterData IEntitySequenceDataWithMode < IStep > IEntitySequenceData < IStep > IEntityCollectionData < IStep > IEntityCollectionData IEntitySequenceData IModeData IRenameableData INamedData IData Inherited Members EntityCollectionData<IStep>.Metadata EntityCollectionData<IStep>.IEntityCollectionData.GetChildren() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class EntityData : EntityCollectionData<IStep>, IChapterData, IEntitySequenceDataWithMode<IStep>, IEntitySequenceData<IStep>, IEntityCollectionData<IStep>, IEntityCollectionData, IEntitySequenceData, IModeData, IRenameableData, INamedData, IData Properties | Improve this Doc View Source Current Declaration [IgnoreDataMember] public IStep Current { get; set; } Property Value Type Description IStep | Improve this Doc View Source FirstStep The first step of the chapter. Declaration [DataMember] public IStep FirstStep { get; set; } Property Value Type Description IStep | Improve this Doc View Source Mode Declaration public IMode Mode { get; set; } Property Value Type Description IMode | Improve this Doc View Source Name Declaration [DataMember] public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Steps All steps of the chapter. Declaration [DataMember] public IList<IStep> Steps { get; set; } Property Value Type Description System.Collections.Generic.IList < IStep > Methods | Improve this Doc View Source GetChildren() Declaration public override IEnumerable<IStep> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < IStep > Overrides VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IStep>.GetChildren() | Improve this Doc View Source SetName(String) Declaration public void SetName(string name) Parameters Type Name Description System.String name Explicit Interface Implementations | Improve this Doc View Source IEntitySequenceData.Current Declaration IEntity IEntitySequenceData.Current { get; } Returns Type Description IEntity Implements IChapterData IEntitySequenceDataWithMode<TEntity> IEntitySequenceData<TEntity> IEntityCollectionData<TEntity> IEntityCollectionData IEntitySequenceData IModeData IRenameableData INamedData IData"
  },
  "api/VRBuilder.Core.Chapter.html": {
    "href": "api/VRBuilder.Core.Chapter.html",
    "title": "Class Chapter | VR Builder Documentation",
    "keywords": "Class Chapter A chapter of a process Process . Inheritance System.Object Entity < Chapter.EntityData > Chapter Implements IDataOwner < Chapter.EntityData > IChapter IEntity IDataOwner < IChapterData > IDataOwner IClonable < IChapter > Inherited Members Entity<Chapter.EntityData>.Data Entity<Chapter.EntityData>.IDataOwner.Data Entity<Chapter.EntityData>.LifeCycle Entity<Chapter.EntityData>.Parent Entity<Chapter.EntityData>.GetActiveProcess() Entity<Chapter.EntityData>.Configure(IMode) Entity<Chapter.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class Chapter : Entity<Chapter.EntityData>, IDataOwner<Chapter.EntityData>, IChapter, IEntity, IDataOwner<IChapterData>, IDataOwner, IClonable<IChapter> Constructors | Improve this Doc View Source Chapter() Declaration protected Chapter() | Improve this Doc View Source Chapter(String, IStep) Declaration public Chapter(string name, IStep firstStep) Parameters Type Name Description System.String name IStep firstStep Properties | Improve this Doc View Source ChapterMetadata Declaration [DataMember] public ChapterMetadata ChapterMetadata { get; set; } Property Value Type Description ChapterMetadata Methods | Improve this Doc View Source Clone() Declaration public IChapter Clone() Returns Type Description IChapter | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Chapter.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetConfigurator() Declaration protected override IConfigurator GetConfigurator() Returns Type Description IConfigurator Overrides VRBuilder.Core.Entity<VRBuilder.Core.Chapter.EntityData>.GetConfigurator() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Chapter.EntityData>.GetDeactivatingProcess() Explicit Interface Implementations | Improve this Doc View Source IDataOwner<IChapterData>.Data Declaration IChapterData IDataOwner<IChapterData>.Data { get; } Returns Type Description IChapterData Implements IDataOwner<TData> IChapter IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.ChapterMetadata.html": {
    "href": "api/VRBuilder.Core.ChapterMetadata.html",
    "title": "Class ChapterMetadata | VR Builder Documentation",
    "keywords": "Class ChapterMetadata Implementation of IMetadata adapted for IChapter data. Inheritance System.Object ChapterMetadata Implements IMetadata Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class ChapterMetadata : IMetadata Constructors | Improve this Doc View Source ChapterMetadata() Declaration public ChapterMetadata() Properties | Improve this Doc View Source EntryNodePosition Reference to the entry node's position in the Workflow window. Declaration [DataMember] public Vector2 EntryNodePosition { get; set; } Property Value Type Description Vector2 | Improve this Doc View Source Guid Unique identifier for chapter. Declaration [DataMember] public Guid Guid { get; set; } Property Value Type Description System.Guid | Improve this Doc View Source LastSelectedStep Reference to last selected IStep . Declaration [DataMember] public IStep LastSelectedStep { get; set; } Property Value Type Description IStep | Improve this Doc View Source ViewTransform Stored position of the view in the graph. Declaration [DataMember] public ViewTransform ViewTransform { get; set; } Property Value Type Description ViewTransform Implements IMetadata"
  },
  "api/VRBuilder.Core.CompletableEntity-1.html": {
    "href": "api/VRBuilder.Core.CompletableEntity-1.html",
    "title": "Class CompletableEntity<TData> | VR Builder Documentation",
    "keywords": "Class CompletableEntity<TData> An Entity<TData> which can be completed. Entities can be completed only during their Active Stage . Inheritance System.Object Entity <TData> CompletableEntity<TData> Condition<TData> Transition Implements IDataOwner <TData> IDataOwner ICompletableEntity ICompletable IEntity Inherited Members Entity<TData>.Data Entity<TData>.IDataOwner.Data Entity<TData>.LifeCycle Entity<TData>.Parent Entity<TData>.GetActivatingProcess() Entity<TData>.GetActiveProcess() Entity<TData>.GetDeactivatingProcess() Entity<TData>.GetConfigurator() Entity<TData>.Configure(IMode) Entity<TData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public abstract class CompletableEntity<TData> : Entity<TData>, IDataOwner<TData>, IDataOwner, ICompletableEntity, ICompletable, IEntity where TData : class, ICompletableData, new() Type Parameters Name Description TData Properties | Improve this Doc View Source IsCompleted Returns true if entity is completed. Declaration public bool IsCompleted { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Autocomplete() If the entity is in the Active Stage , it will invoke its Autocompleter and set IsCompleted to true. Declaration public void Autocomplete() | Improve this Doc View Source GetAutocompleter() Override this method to return a custom Autocompleter<TData> . Declaration protected virtual IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter By default, it returns and empty autocompleter which does nothing. Implements IDataOwner<TData> IDataOwner ICompletableEntity ICompletable IEntity"
  },
  "api/VRBuilder.Core.CompositeProcess.html": {
    "href": "api/VRBuilder.Core.CompositeProcess.html",
    "title": "Class CompositeProcess | VR Builder Documentation",
    "keywords": "Class CompositeProcess A process which consists of multiple processes which execute at the same time. It ends when all its child processes end. Inheritance System.Object CompositeProcess Implements IStageProcess Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class CompositeProcess : IStageProcess Constructors | Improve this Doc View Source CompositeProcess(IStageProcess[]) Declaration public CompositeProcess(params IStageProcess[] processes) Parameters Type Name Description IStageProcess [] processes Child processes which are united into this composite process. Methods | Improve this Doc View Source End() Declaration public void End() | Improve this Doc View Source FastForward() Declaration public void FastForward() | Improve this Doc View Source Start() Declaration public void Start() | Improve this Doc View Source Update() Declaration public IEnumerator Update() Returns Type Description System.Collections.IEnumerator Implements IStageProcess"
  },
  "api/VRBuilder.Core.Conditions.BaseActiveProcessOverCompletable-1.html": {
    "href": "api/VRBuilder.Core.Conditions.BaseActiveProcessOverCompletable-1.html",
    "title": "Class BaseActiveProcessOverCompletable<TData> | VR Builder Documentation",
    "keywords": "Class BaseActiveProcessOverCompletable<TData> An abstract class for processes for Active Stage of ICompletableEntity . Inheritance System.Object StageProcess <TData> BaseActiveProcessOverCompletable<TData> Implements IStageProcess Inherited Members StageProcess<TData>.Data StageProcess<TData>.Outer System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax public abstract class BaseActiveProcessOverCompletable<TData> : StageProcess<TData>, IStageProcess where TData : class, ICompletableData Type Parameters Name Description TData Constructors | Improve this Doc View Source BaseActiveProcessOverCompletable(TData, IEntity) Declaration protected BaseActiveProcessOverCompletable(TData data, IEntity outer = null) Parameters Type Name Description TData data IEntity outer Methods | Improve this Doc View Source CheckIfCompleted() Implement your custom check in this method. The process will not complete until this method returns true. Declaration protected abstract bool CheckIfCompleted() Returns Type Description System.Boolean | Improve this Doc View Source End() Declaration public override void End() Overrides VRBuilder.Core.StageProcess<TData>.End() | Improve this Doc View Source FastForward() Declaration public override void FastForward() Overrides VRBuilder.Core.StageProcess<TData>.FastForward() | Improve this Doc View Source Start() Declaration public override void Start() Overrides VRBuilder.Core.StageProcess<TData>.Start() | Improve this Doc View Source Update() Declaration public override IEnumerator Update() Returns Type Description System.Collections.IEnumerator Overrides VRBuilder.Core.StageProcess<TData>.Update() Implements IStageProcess"
  },
  "api/VRBuilder.Core.Conditions.CompareValuesCondition-1.EntityData.html": {
    "href": "api/VRBuilder.Core.Conditions.CompareValuesCondition-1.EntityData.html",
    "title": "Class CompareValuesCondition<T>.EntityData | VR Builder Documentation",
    "keywords": "Class CompareValuesCondition<T>.EntityData The data for a CompareValuesCondition<T> Inheritance System.Object CompareValuesCondition<T>.EntityData Implements IConditionData ICompletableData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Compare Values\")] public class EntityData : IConditionData, ICompletableData, INamedData, IData Properties | Improve this Doc View Source IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLeftConst Declaration [DataMember] public bool IsLeftConst { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsRightConst Declaration [DataMember] public bool IsRightConst { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LeftProperty Declaration [DataMember] public SingleScenePropertyReference<IDataProperty<T>> LeftProperty { get; set; } Property Value Type Description SingleScenePropertyReference < IDataProperty <T>> | Improve this Doc View Source LeftValue Declaration [DataMember] public T LeftValue { get; set; } Property Value Type Description T | Improve this Doc View Source LeftValueProperty Declaration [DataMember] [Obsolete(\"Use LeftProperty instead.\")] [LegacyProperty(\"LeftProperty\")] public ScenePropertyReference<IDataProperty<T>> LeftValueProperty { get; set; } Property Value Type Description ScenePropertyReference < IDataProperty <T>> | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Operation Declaration [DataMember] public IOperationCommand<T, bool> Operation { get; set; } Property Value Type Description IOperationCommand <T, System.Boolean > | Improve this Doc View Source RightProperty Declaration [DataMember] public SingleScenePropertyReference<IDataProperty<T>> RightProperty { get; set; } Property Value Type Description SingleScenePropertyReference < IDataProperty <T>> | Improve this Doc View Source RightValue Declaration [DataMember] public T RightValue { get; set; } Property Value Type Description T | Improve this Doc View Source RightValueProperty Declaration [DataMember] [Obsolete(\"Use RightProperty instead.\")] [LegacyProperty(\"RightProperty\")] public ScenePropertyReference<IDataProperty<T>> RightValueProperty { get; set; } Property Value Type Description ScenePropertyReference < IDataProperty <T>> Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.Core.Conditions.CompareValuesCondition-1.html": {
    "href": "api/VRBuilder.Core.Conditions.CompareValuesCondition-1.html",
    "title": "Class CompareValuesCondition<T> | VR Builder Documentation",
    "keywords": "Class CompareValuesCondition<T> A condition that compares two IDataProperty<T> s and completes when the comparison returns true. Inheritance System.Object Entity < CompareValuesCondition.EntityData <>> CompletableEntity < CompareValuesCondition.EntityData <>> Condition < CompareValuesCondition.EntityData <>> CompareValuesCondition<T> Implements IDataOwner < CompareValuesCondition.EntityData <>> ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<CompareValuesCondition<T>.EntityData>.IDataOwner<IConditionData>.Data Condition<CompareValuesCondition<T>.EntityData>.Clone() Condition<CompareValuesCondition<T>.EntityData>.GetLockableProperties() CompletableEntity<CompareValuesCondition<T>.EntityData>.GetAutocompleter() CompletableEntity<CompareValuesCondition<T>.EntityData>.IsCompleted CompletableEntity<CompareValuesCondition<T>.EntityData>.Autocomplete() Entity<CompareValuesCondition<T>.EntityData>.Data Entity<CompareValuesCondition<T>.EntityData>.IDataOwner.Data Entity<CompareValuesCondition<T>.EntityData>.LifeCycle Entity<CompareValuesCondition<T>.EntityData>.Parent Entity<CompareValuesCondition<T>.EntityData>.GetActivatingProcess() Entity<CompareValuesCondition<T>.EntityData>.GetDeactivatingProcess() Entity<CompareValuesCondition<T>.EntityData>.GetConfigurator() Entity<CompareValuesCondition<T>.EntityData>.Configure(IMode) Entity<CompareValuesCondition<T>.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/states-data-add-on\")] public class CompareValuesCondition<T> : Condition<CompareValuesCondition<T>.EntityData>, IDataOwner<CompareValuesCondition<T>.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider where T : IEquatable<T>, IComparable<T> Type Parameters Name Description T Constructors | Improve this Doc View Source CompareValuesCondition() Declaration [JsonConstructor] public CompareValuesCondition() | Improve this Doc View Source CompareValuesCondition(Guid, Guid, T, T, Boolean, Boolean, IOperationCommand<T, Boolean>) Declaration public CompareValuesCondition(Guid leftPropertyId, Guid rightPropertyId, T leftValue, T rightValue, bool isLeftConst, bool isRightConst, IOperationCommand<T, bool> operation) Parameters Type Name Description System.Guid leftPropertyId System.Guid rightPropertyId T leftValue T rightValue System.Boolean isLeftConst System.Boolean isRightConst IOperationCommand <T, System.Boolean > operation | Improve this Doc View Source CompareValuesCondition(IDataProperty<T>, IDataProperty<T>, T, T, Boolean, Boolean, IOperationCommand<T, Boolean>) Declaration public CompareValuesCondition(IDataProperty<T> leftProperty, IDataProperty<T> rightProperty, T leftValue, T rightValue, bool isLeftConst, bool isRightConst, IOperationCommand<T, bool> operation) Parameters Type Name Description IDataProperty <T> leftProperty IDataProperty <T> rightProperty T leftValue T rightValue System.Boolean isLeftConst System.Boolean isRightConst IOperationCommand <T, System.Boolean > operation Methods | Improve this Doc View Source GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.GetActiveProcess() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.Core.Conditions.Condition-1.html": {
    "href": "api/VRBuilder.Core.Conditions.Condition-1.html",
    "title": "Class Condition<TData> | VR Builder Documentation",
    "keywords": "Class Condition<TData> An implementation of ICondition . Use it as the base class for your custom conditions. Inheritance System.Object Entity <TData> CompletableEntity <TData> Condition<TData> GrabbedCondition GrabbedObjectWithTagCondition ReleasedCondition SnappedCondition SnappedObjectWithTagCondition TeleportCondition TouchedCondition UsedCondition CompareValuesCondition<T> ObjectInColliderCondition ObjectInRangeCondition TimeoutCondition RandomlySelectedCondition CheckStateCondition MandatoryInfoBoxCondition MultipleChoiceCondition NumPadCompareCondition NumPadCondition UiButtonCondition DrillHolesCondition Implements IDataOwner <TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members CompletableEntity<TData>.GetAutocompleter() CompletableEntity<TData>.IsCompleted CompletableEntity<TData>.Autocomplete() Entity<TData>.Data Entity<TData>.IDataOwner.Data Entity<TData>.LifeCycle Entity<TData>.Parent Entity<TData>.GetActivatingProcess() Entity<TData>.GetActiveProcess() Entity<TData>.GetDeactivatingProcess() Entity<TData>.GetConfigurator() Entity<TData>.Configure(IMode) Entity<TData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public abstract class Condition<TData> : CompletableEntity<TData>, IDataOwner<TData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider where TData : class, IConditionData, new() Type Parameters Name Description TData Constructors | Improve this Doc View Source Condition() Declaration protected Condition() Methods | Improve this Doc View Source Clone() Declaration public virtual ICondition Clone() Returns Type Description ICondition | Improve this Doc View Source GetLockableProperties() Declaration public virtual IEnumerable<LockablePropertyData> GetLockableProperties() Returns Type Description System.Collections.Generic.IEnumerable < LockablePropertyData > Explicit Interface Implementations | Improve this Doc View Source IDataOwner<IConditionData>.Data Declaration IConditionData IDataOwner<IConditionData>.Data { get; } Returns Type Description IConditionData Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.Core.Conditions.html": {
    "href": "api/VRBuilder.Core.Conditions.html",
    "title": "Namespace VRBuilder.Core.Conditions | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Conditions Classes BaseActiveProcessOverCompletable<TData> An abstract class for processes for Active Stage of ICompletableEntity . CompareValuesCondition<T> A condition that compares two IDataProperty<T> s and completes when the comparison returns true. CompareValuesCondition<T>.EntityData The data for a CompareValuesCondition<T> Condition<TData> An implementation of ICondition . Use it as the base class for your custom conditions. ObjectInColliderCondition Condition which is completed when TargetObject gets inside TriggerProperty 's collider. ObjectInColliderCondition.EntityData The \"object in collider\" condition's data. ObjectInRangeCondition Condition that is completed when distance between Target and TransformInRangeDetector is closer than range units. ObjectInRangeCondition.EntityData The data of \"object in range\" condition. ObjectInTargetActiveProcess<TData> An active process for \"object in target\" conditions. TimeoutCondition A condition that completes when a certain amount of time has passed. TimeoutCondition.EntityData The data for timeout condition. Interfaces ICompletableData ICondition IConditionData The base interface for any condition's data class. IObjectInTargetData The data interface for \"object inside target\" conditions."
  },
  "api/VRBuilder.Core.Conditions.ICompletableData.html": {
    "href": "api/VRBuilder.Core.Conditions.ICompletableData.html",
    "title": "Interface ICompletableData | VR Builder Documentation",
    "keywords": "Interface ICompletableData Inherited Members IData.Metadata Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax public interface ICompletableData : IData Properties | Improve this Doc View Source IsCompleted Declaration bool IsCompleted { get; set; } Property Value Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Conditions.ICondition.html": {
    "href": "api/VRBuilder.Core.Conditions.ICondition.html",
    "title": "Interface ICondition | VR Builder Documentation",
    "keywords": "Interface ICondition Inherited Members ICompletable.IsCompleted ICompletable.Autocomplete() IEntity.LifeCycle IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.Parent IDataOwner<IConditionData>.Data IClonable<ICondition>.Clone() Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax public interface ICondition : ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>"
  },
  "api/VRBuilder.Core.Conditions.IConditionData.html": {
    "href": "api/VRBuilder.Core.Conditions.IConditionData.html",
    "title": "Interface IConditionData | VR Builder Documentation",
    "keywords": "Interface IConditionData The base interface for any condition's data class. Inherited Members ICompletableData.IsCompleted INamedData.Name IData.Metadata Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax public interface IConditionData : ICompletableData, INamedData, IData"
  },
  "api/VRBuilder.Core.Conditions.IObjectInTargetData.html": {
    "href": "api/VRBuilder.Core.Conditions.IObjectInTargetData.html",
    "title": "Interface IObjectInTargetData | VR Builder Documentation",
    "keywords": "Interface IObjectInTargetData The data interface for \"object inside target\" conditions. Inherited Members ICompletableData.IsCompleted INamedData.Name IData.Metadata Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax public interface IObjectInTargetData : IConditionData, ICompletableData, INamedData, IData Properties | Improve this Doc View Source RequiredTimeInside The delay before the condition will trigger. Declaration [DataMember] float RequiredTimeInside { get; set; } Property Value Type Description System.Single"
  },
  "api/VRBuilder.Core.Conditions.ObjectInColliderCondition.EntityData.html": {
    "href": "api/VRBuilder.Core.Conditions.ObjectInColliderCondition.EntityData.html",
    "title": "Class ObjectInColliderCondition.EntityData | VR Builder Documentation",
    "keywords": "Class ObjectInColliderCondition.EntityData The \"object in collider\" condition's data. Inheritance System.Object ObjectInColliderCondition.EntityData Implements IObjectInTargetData IConditionData ICompletableData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Move Object into Collider\")] [DataContract(IsReference = true)] public class EntityData : IObjectInTargetData, IConditionData, ICompletableData, INamedData, IData Properties | Improve this Doc View Source IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source RequiredTimeInside Declaration [DataMember] [DisplayName(\"Required seconds inside\")] public float RequiredTimeInside { get; set; } Property Value Type Description System.Single | Improve this Doc View Source TargetObject Declaration [DataMember] [Obsolete(\"Use TargetObjects instead.\")] [LegacyProperty(\"TargetObjects\")] public SceneObjectReference TargetObject { get; set; } Property Value Type Description SceneObjectReference | Improve this Doc View Source TargetObjects The object that has to enter the collider. Declaration [DataMember] [DisplayName(\"Object\")] public MultipleSceneObjectReference TargetObjects { get; set; } Property Value Type Description MultipleSceneObjectReference | Improve this Doc View Source TriggerObject The collider with trigger to enter. Declaration [DataMember] [DisplayName(\"Collider\")] public SingleScenePropertyReference<ColliderWithTriggerProperty> TriggerObject { get; set; } Property Value Type Description SingleScenePropertyReference < ColliderWithTriggerProperty > | Improve this Doc View Source TriggerProperty Declaration [DataMember] [Obsolete(\"Use TriggerObject instead.\")] [LegacyProperty(\"TriggerObject\")] public ScenePropertyReference<ColliderWithTriggerProperty> TriggerProperty { get; set; } Property Value Type Description ScenePropertyReference < ColliderWithTriggerProperty > Implements IObjectInTargetData IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.Core.Conditions.ObjectInColliderCondition.html": {
    "href": "api/VRBuilder.Core.Conditions.ObjectInColliderCondition.html",
    "title": "Class ObjectInColliderCondition | VR Builder Documentation",
    "keywords": "Class ObjectInColliderCondition Condition which is completed when TargetObject gets inside TriggerProperty 's collider. Inheritance System.Object Entity < ObjectInColliderCondition.EntityData > CompletableEntity < ObjectInColliderCondition.EntityData > Condition < ObjectInColliderCondition.EntityData > ObjectInColliderCondition Implements IDataOwner < ObjectInColliderCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<ObjectInColliderCondition.EntityData>.IDataOwner<IConditionData>.Data Condition<ObjectInColliderCondition.EntityData>.Clone() Condition<ObjectInColliderCondition.EntityData>.GetLockableProperties() CompletableEntity<ObjectInColliderCondition.EntityData>.IsCompleted CompletableEntity<ObjectInColliderCondition.EntityData>.Autocomplete() Entity<ObjectInColliderCondition.EntityData>.Data Entity<ObjectInColliderCondition.EntityData>.IDataOwner.Data Entity<ObjectInColliderCondition.EntityData>.LifeCycle Entity<ObjectInColliderCondition.EntityData>.Parent Entity<ObjectInColliderCondition.EntityData>.GetActivatingProcess() Entity<ObjectInColliderCondition.EntityData>.GetDeactivatingProcess() Entity<ObjectInColliderCondition.EntityData>.GetConfigurator() Entity<ObjectInColliderCondition.EntityData>.Configure(IMode) Entity<ObjectInColliderCondition.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-conditions/move-object-in-collider\")] public class ObjectInColliderCondition : Condition<ObjectInColliderCondition.EntityData>, IDataOwner<ObjectInColliderCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors | Improve this Doc View Source ObjectInColliderCondition() Declaration [JsonConstructor] public ObjectInColliderCondition() | Improve this Doc View Source ObjectInColliderCondition(Guid, Guid, Single) Declaration public ObjectInColliderCondition(Guid targetPosition, Guid targetObject, float requiredTimeInTarget = 0F) Parameters Type Name Description System.Guid targetPosition System.Guid targetObject System.Single requiredTimeInTarget | Improve this Doc View Source ObjectInColliderCondition(String, String, Single) Declaration [Obsolete(\"This constructor will be removed in the next major version.\")] public ObjectInColliderCondition(string targetPosition, string targetObject, float requiredTimeInTarget = 0F) Parameters Type Name Description System.String targetPosition System.String targetObject System.Single requiredTimeInTarget | Improve this Doc View Source ObjectInColliderCondition(ColliderWithTriggerProperty, ISceneObject, Single) Declaration public ObjectInColliderCondition(ColliderWithTriggerProperty targetPosition, ISceneObject targetObject, float requiredTimeInTarget = 0F) Parameters Type Name Description ColliderWithTriggerProperty targetPosition ISceneObject targetObject System.Single requiredTimeInTarget Methods | Improve this Doc View Source GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Conditions.ObjectInColliderCondition.EntityData>.GetActiveProcess() | Improve this Doc View Source GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.Core.Conditions.ObjectInColliderCondition.EntityData>.GetAutocompleter() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.Core.Conditions.ObjectInRangeCondition.EntityData.html": {
    "href": "api/VRBuilder.Core.Conditions.ObjectInRangeCondition.EntityData.html",
    "title": "Class ObjectInRangeCondition.EntityData | VR Builder Documentation",
    "keywords": "Class ObjectInRangeCondition.EntityData The data of \"object in range\" condition. Inheritance System.Object ObjectInRangeCondition.EntityData Implements IObjectInTargetData IConditionData ICompletableData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Object Nearby\")] public class EntityData : IObjectInTargetData, IConditionData, ICompletableData, INamedData, IData Properties | Improve this Doc View Source IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Range The required distance between two objects to trigger the condition. Declaration [DataMember] public float Range { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ReferenceObject The object to measure distance from. Declaration [DataMember] [DisplayName(\"Reference object\")] public SingleScenePropertyReference<TransformInRangeDetectorProperty> ReferenceObject { get; set; } Property Value Type Description SingleScenePropertyReference < TransformInRangeDetectorProperty > | Improve this Doc View Source ReferenceProperty Declaration [DataMember] [Obsolete(\"Use ReferenceObject instead.\")] [LegacyProperty(\"ReferenceObject\")] public ScenePropertyReference<TransformInRangeDetectorProperty> ReferenceProperty { get; set; } Property Value Type Description ScenePropertyReference < TransformInRangeDetectorProperty > | Improve this Doc View Source RequiredTimeInside Declaration [DataMember] [DisplayName(\"Required seconds inside\")] public float RequiredTimeInside { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Target Declaration [DataMember] [Obsolete(\"Use TargetObject instead.\")] [LegacyProperty(\"TargetObject\")] public SceneObjectReference Target { get; set; } Property Value Type Description SceneObjectReference | Improve this Doc View Source TargetObject The tracked objects. Declaration [DataMember] [DisplayName(\"Tracked object\")] public SingleSceneObjectReference TargetObject { get; set; } Property Value Type Description SingleSceneObjectReference Implements IObjectInTargetData IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.Core.Conditions.ObjectInRangeCondition.html": {
    "href": "api/VRBuilder.Core.Conditions.ObjectInRangeCondition.html",
    "title": "Class ObjectInRangeCondition | VR Builder Documentation",
    "keywords": "Class ObjectInRangeCondition Condition that is completed when distance between Target and TransformInRangeDetector is closer than range units. Inheritance System.Object Entity < ObjectInRangeCondition.EntityData > CompletableEntity < ObjectInRangeCondition.EntityData > Condition < ObjectInRangeCondition.EntityData > ObjectInRangeCondition Implements IDataOwner < ObjectInRangeCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<ObjectInRangeCondition.EntityData>.IDataOwner<IConditionData>.Data Condition<ObjectInRangeCondition.EntityData>.Clone() Condition<ObjectInRangeCondition.EntityData>.GetLockableProperties() CompletableEntity<ObjectInRangeCondition.EntityData>.IsCompleted CompletableEntity<ObjectInRangeCondition.EntityData>.Autocomplete() Entity<ObjectInRangeCondition.EntityData>.Data Entity<ObjectInRangeCondition.EntityData>.IDataOwner.Data Entity<ObjectInRangeCondition.EntityData>.LifeCycle Entity<ObjectInRangeCondition.EntityData>.Parent Entity<ObjectInRangeCondition.EntityData>.GetActivatingProcess() Entity<ObjectInRangeCondition.EntityData>.GetDeactivatingProcess() Entity<ObjectInRangeCondition.EntityData>.GetConfigurator() Entity<ObjectInRangeCondition.EntityData>.Configure(IMode) Entity<ObjectInRangeCondition.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-conditions/object-nearby\")] public class ObjectInRangeCondition : Condition<ObjectInRangeCondition.EntityData>, IDataOwner<ObjectInRangeCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors | Improve this Doc View Source ObjectInRangeCondition() Declaration [JsonConstructor] public ObjectInRangeCondition() | Improve this Doc View Source ObjectInRangeCondition(Guid, Guid, Single, Single) Declaration public ObjectInRangeCondition(Guid targetId, Guid detector, float range, float requiredTimeInTarget = 0F) Parameters Type Name Description System.Guid targetId System.Guid detector System.Single range System.Single requiredTimeInTarget | Improve this Doc View Source ObjectInRangeCondition(ISceneObject, TransformInRangeDetectorProperty, Single, Single) Declaration public ObjectInRangeCondition(ISceneObject target, TransformInRangeDetectorProperty detector, float range, float requiredTimeInTarget = 0F) Parameters Type Name Description ISceneObject target TransformInRangeDetectorProperty detector System.Single range System.Single requiredTimeInTarget Methods | Improve this Doc View Source GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Conditions.ObjectInRangeCondition.EntityData>.GetActiveProcess() | Improve this Doc View Source GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.Core.Conditions.ObjectInRangeCondition.EntityData>.GetAutocompleter() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.Core.Conditions.ObjectInTargetActiveProcess-1.html": {
    "href": "api/VRBuilder.Core.Conditions.ObjectInTargetActiveProcess-1.html",
    "title": "Class ObjectInTargetActiveProcess<TData> | VR Builder Documentation",
    "keywords": "Class ObjectInTargetActiveProcess<TData> An active process for \"object in target\" conditions. Inheritance System.Object StageProcess <TData> ObjectInTargetActiveProcess<TData> Implements IStageProcess Inherited Members StageProcess<TData>.Data StageProcess<TData>.Outer System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax public abstract class ObjectInTargetActiveProcess<TData> : StageProcess<TData>, IStageProcess where TData : class, IObjectInTargetData Type Parameters Name Description TData Constructors | Improve this Doc View Source ObjectInTargetActiveProcess(TData) Declaration protected ObjectInTargetActiveProcess(TData data) Parameters Type Name Description TData data Methods | Improve this Doc View Source End() Declaration public override void End() Overrides VRBuilder.Core.StageProcess<TData>.End() | Improve this Doc View Source FastForward() Declaration public override void FastForward() Overrides VRBuilder.Core.StageProcess<TData>.FastForward() | Improve this Doc View Source IsInside() Returns true if the object is inside target. Declaration protected abstract bool IsInside() Returns Type Description System.Boolean | Improve this Doc View Source Start() Declaration public override void Start() Overrides VRBuilder.Core.StageProcess<TData>.Start() | Improve this Doc View Source Update() Declaration public override IEnumerator Update() Returns Type Description System.Collections.IEnumerator Overrides VRBuilder.Core.StageProcess<TData>.Update() Implements IStageProcess"
  },
  "api/VRBuilder.Core.Conditions.TimeoutCondition.EntityData.html": {
    "href": "api/VRBuilder.Core.Conditions.TimeoutCondition.EntityData.html",
    "title": "Class TimeoutCondition.EntityData | VR Builder Documentation",
    "keywords": "Class TimeoutCondition.EntityData The data for timeout condition. Inheritance System.Object TimeoutCondition.EntityData Implements IConditionData ICompletableData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Timeout\")] public class EntityData : IConditionData, ICompletableData, INamedData, IData Properties | Improve this Doc View Source IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Timeout The delay before the condition completes. Declaration [DataMember] [DisplayName(\"Wait (in seconds)\")] public float Timeout { get; set; } Property Value Type Description System.Single Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.Core.Conditions.TimeoutCondition.html": {
    "href": "api/VRBuilder.Core.Conditions.TimeoutCondition.html",
    "title": "Class TimeoutCondition | VR Builder Documentation",
    "keywords": "Class TimeoutCondition A condition that completes when a certain amount of time has passed. Inheritance System.Object Entity < TimeoutCondition.EntityData > CompletableEntity < TimeoutCondition.EntityData > Condition < TimeoutCondition.EntityData > TimeoutCondition Implements IDataOwner < TimeoutCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<TimeoutCondition.EntityData>.IDataOwner<IConditionData>.Data Condition<TimeoutCondition.EntityData>.Clone() Condition<TimeoutCondition.EntityData>.GetLockableProperties() CompletableEntity<TimeoutCondition.EntityData>.GetAutocompleter() CompletableEntity<TimeoutCondition.EntityData>.IsCompleted CompletableEntity<TimeoutCondition.EntityData>.Autocomplete() Entity<TimeoutCondition.EntityData>.Data Entity<TimeoutCondition.EntityData>.IDataOwner.Data Entity<TimeoutCondition.EntityData>.LifeCycle Entity<TimeoutCondition.EntityData>.Parent Entity<TimeoutCondition.EntityData>.GetActivatingProcess() Entity<TimeoutCondition.EntityData>.GetDeactivatingProcess() Entity<TimeoutCondition.EntityData>.GetConfigurator() Entity<TimeoutCondition.EntityData>.Configure(IMode) Entity<TimeoutCondition.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-conditions/timeout-condition\")] public class TimeoutCondition : Condition<TimeoutCondition.EntityData>, IDataOwner<TimeoutCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors | Improve this Doc View Source TimeoutCondition() Declaration [JsonConstructor] public TimeoutCondition() | Improve this Doc View Source TimeoutCondition(Single) Declaration public TimeoutCondition(float timeout) Parameters Type Name Description System.Single timeout Methods | Improve this Doc View Source GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Conditions.TimeoutCondition.EntityData>.GetActiveProcess() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.Core.Configuration.BaseRuntimeConfiguration.html": {
    "href": "api/VRBuilder.Core.Configuration.BaseRuntimeConfiguration.html",
    "title": "Class BaseRuntimeConfiguration | VR Builder Documentation",
    "keywords": "Class BaseRuntimeConfiguration Base class for your runtime process configuration. Extend it to create your own. Inheritance System.Object BaseRuntimeConfiguration DefaultRuntimeConfiguration NetcodeRuntimeConfiguration Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public abstract class BaseRuntimeConfiguration Constructors | Improve this Doc View Source BaseRuntimeConfiguration() Declaration protected BaseRuntimeConfiguration() | Improve this Doc View Source BaseRuntimeConfiguration(StepLockHandlingStrategy) Declaration protected BaseRuntimeConfiguration(StepLockHandlingStrategy lockHandling) Parameters Type Name Description StepLockHandlingStrategy lockHandling Properties | Improve this Doc View Source CustomInputActionAssetPath Custom InputActionAsset path which is used when key bindings are modified. Should be stored in project path. Declaration public virtual string CustomInputActionAssetPath { get; } Property Value Type Description System.String | Improve this Doc View Source DefaultInputActionAssetPath Default input action asset which is used when no customization of key bindings are done. Should be stored inside the VR Builder package. Declaration public virtual string DefaultInputActionAssetPath { get; } Property Value Type Description System.String | Improve this Doc View Source InstructionPlayer Declaration public abstract AudioSource InstructionPlayer { get; } Property Value Type Description AudioSource | Improve this Doc View Source LocalUser Declaration public abstract UserSceneObject LocalUser { get; } Property Value Type Description UserSceneObject | Improve this Doc View Source ManifestFileName Name of the manifest file that could be used to save process asset information. Declaration public static string ManifestFileName { get; } Property Value Type Description System.String | Improve this Doc View Source Modes Declaration public IModeHandler Modes { get; protected set; } Property Value Type Description IModeHandler | Improve this Doc View Source ProcessAudioPlayer Declaration public abstract IProcessAudioPlayer ProcessAudioPlayer { get; } Property Value Type Description IProcessAudioPlayer | Improve this Doc View Source SceneConfiguration Declaration public virtual ISceneConfiguration SceneConfiguration { get; } Property Value Type Description ISceneConfiguration | Improve this Doc View Source SceneObjectManager Declaration public abstract ISceneObjectManager SceneObjectManager { get; } Property Value Type Description ISceneObjectManager | Improve this Doc View Source SceneObjectRegistry Declaration public virtual ISceneObjectRegistry SceneObjectRegistry { get; } Property Value Type Description ISceneObjectRegistry | Improve this Doc View Source Serializer Declaration public IProcessSerializer Serializer { get; set; } Property Value Type Description IProcessSerializer | Improve this Doc View Source StepLockHandling Determines the property locking strategy used for this runtime configuration. Declaration public StepLockHandlingStrategy StepLockHandling { get; set; } Property Value Type Description StepLockHandlingStrategy | Improve this Doc View Source User Declaration [Obsolete(\"This property is obsolete and no longer returns a valid value. Use LocalUser instead.\", true)] public abstract ProcessSceneObject User { get; } Property Value Type Description ProcessSceneObject | Improve this Doc View Source Users Declaration public abstract IEnumerable<UserSceneObject> Users { get; } Property Value Type Description System.Collections.Generic.IEnumerable < UserSceneObject > Methods | Improve this Doc View Source LoadProcess(String) Declaration public virtual async Task<IProcess> LoadProcess(string path) Parameters Type Name Description System.String path Returns Type Description System.Threading.Tasks.Task < IProcess > Extension Methods RuntimeConfigurationExtensions.GetTextToSpeechConfiguration(BaseRuntimeConfiguration) RuntimeConfigurationExtensions.SetTextToSpeechConfiguration(BaseRuntimeConfiguration, TextToSpeechConfiguration)"
  },
  "api/VRBuilder.Core.Configuration.DefaultAudioPlayer.html": {
    "href": "api/VRBuilder.Core.Configuration.DefaultAudioPlayer.html",
    "title": "Class DefaultAudioPlayer | VR Builder Documentation",
    "keywords": "Class DefaultAudioPlayer Default process audio player. Inheritance System.Object DefaultAudioPlayer Implements IProcessAudioPlayer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public class DefaultAudioPlayer : IProcessAudioPlayer Constructors | Improve this Doc View Source DefaultAudioPlayer() Declaration public DefaultAudioPlayer() | Improve this Doc View Source DefaultAudioPlayer(AudioSource) Declaration public DefaultAudioPlayer(AudioSource audioSource) Parameters Type Name Description AudioSource audioSource Properties | Improve this Doc View Source FallbackAudioSource Declaration public AudioSource FallbackAudioSource { get; } Property Value Type Description AudioSource | Improve this Doc View Source IsPlaying Declaration public bool IsPlaying { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source PlayAudio(IAudioData, Single, Single) Declaration public void PlayAudio(IAudioData audioData, float volume = 1F, float pitch = 1F) Parameters Type Name Description IAudioData audioData System.Single volume System.Single pitch | Improve this Doc View Source Reset() Declaration public void Reset() | Improve this Doc View Source Stop() Declaration public void Stop() Implements IProcessAudioPlayer"
  },
  "api/VRBuilder.Core.Configuration.DefaultRuntimeConfiguration.html": {
    "href": "api/VRBuilder.Core.Configuration.DefaultRuntimeConfiguration.html",
    "title": "Class DefaultRuntimeConfiguration | VR Builder Documentation",
    "keywords": "Class DefaultRuntimeConfiguration Process runtime configuration which is used if no other was implemented. Inheritance System.Object BaseRuntimeConfiguration DefaultRuntimeConfiguration Inherited Members BaseRuntimeConfiguration.ManifestFileName BaseRuntimeConfiguration.SceneObjectRegistry BaseRuntimeConfiguration.Serializer BaseRuntimeConfiguration.DefaultInputActionAssetPath BaseRuntimeConfiguration.CustomInputActionAssetPath BaseRuntimeConfiguration.Modes BaseRuntimeConfiguration.StepLockHandling BaseRuntimeConfiguration.SceneConfiguration BaseRuntimeConfiguration.LoadProcess(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public class DefaultRuntimeConfiguration : BaseRuntimeConfiguration Constructors | Improve this Doc View Source DefaultRuntimeConfiguration() Declaration public DefaultRuntimeConfiguration() Fields | Improve this Doc View Source DefaultMode Default mode which white lists everything. Declaration public static readonly IMode DefaultMode Field Value Type Description IMode Properties | Improve this Doc View Source InstructionPlayer Declaration public override AudioSource InstructionPlayer { get; } Property Value Type Description AudioSource Overrides BaseRuntimeConfiguration.InstructionPlayer | Improve this Doc View Source LocalUser Declaration public override UserSceneObject LocalUser { get; } Property Value Type Description UserSceneObject Overrides BaseRuntimeConfiguration.LocalUser | Improve this Doc View Source ProcessAudioPlayer Declaration public override IProcessAudioPlayer ProcessAudioPlayer { get; } Property Value Type Description IProcessAudioPlayer Overrides BaseRuntimeConfiguration.ProcessAudioPlayer | Improve this Doc View Source SceneObjectManager Declaration public override ISceneObjectManager SceneObjectManager { get; } Property Value Type Description ISceneObjectManager Overrides BaseRuntimeConfiguration.SceneObjectManager | Improve this Doc View Source User Declaration public override ProcessSceneObject User { get; } Property Value Type Description ProcessSceneObject Overrides BaseRuntimeConfiguration.User | Improve this Doc View Source Users Declaration public override IEnumerable<UserSceneObject> Users { get; } Property Value Type Description System.Collections.Generic.IEnumerable < UserSceneObject > Overrides BaseRuntimeConfiguration.Users Extension Methods RuntimeConfigurationExtensions.GetTextToSpeechConfiguration(BaseRuntimeConfiguration) RuntimeConfigurationExtensions.SetTextToSpeechConfiguration(BaseRuntimeConfiguration, TextToSpeechConfiguration)"
  },
  "api/VRBuilder.Core.Configuration.DefaultSceneObjectManager.html": {
    "href": "api/VRBuilder.Core.Configuration.DefaultSceneObjectManager.html",
    "title": "Class DefaultSceneObjectManager | VR Builder Documentation",
    "keywords": "Class DefaultSceneObjectManager Default single-user implementation of ISceneObjectManager . Inheritance System.Object DefaultSceneObjectManager Implements ISceneObjectManager Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public class DefaultSceneObjectManager : ISceneObjectManager Methods | Improve this Doc View Source InstantiatePrefab(GameObject, Vector3, Quaternion) Declaration public GameObject InstantiatePrefab(GameObject prefab, Vector3 position, Quaternion rotation) Parameters Type Name Description GameObject prefab Vector3 position Quaternion rotation Returns Type Description GameObject | Improve this Doc View Source RequestAuthority(ISceneObject) Declaration public void RequestAuthority(ISceneObject sceneObject) Parameters Type Name Description ISceneObject sceneObject | Improve this Doc View Source SetComponentActive(ISceneObject, String, Boolean) Declaration public void SetComponentActive(ISceneObject sceneObject, string componentTypeName, bool isActive) Parameters Type Name Description ISceneObject sceneObject System.String componentTypeName System.Boolean isActive | Improve this Doc View Source SetSceneObjectActive(ISceneObject, Boolean) Declaration public void SetSceneObjectActive(ISceneObject sceneObject, bool isActive) Parameters Type Name Description ISceneObject sceneObject System.Boolean isActive Implements ISceneObjectManager"
  },
  "api/VRBuilder.Core.Configuration.html": {
    "href": "api/VRBuilder.Core.Configuration.html",
    "title": "Namespace VRBuilder.Core.Configuration | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Configuration Classes BaseRuntimeConfiguration Base class for your runtime process configuration. Extend it to create your own. DefaultAudioPlayer Default process audio player. DefaultRuntimeConfiguration Process runtime configuration which is used if no other was implemented. DefaultSceneObjectManager Default single-user implementation of ISceneObjectManager . PropertyExtensionExclusionList RuntimeConfigurator Configurator to set the process runtime configuration which is used by a process during its execution. There has to be one and only one process runtime configurator game object per scene. SceneConfiguration Handles configuration specific to this scene. Interfaces IInteractionComponentConfiguration Should be implemented by every interaction component in order to qualify as such. IProcessAudioPlayer Interface for the class playing sounds for the process, i.e. tts and play audio behaviors. ISceneConfiguration Handles configuration specific to this scene. ISceneObjectManager Object that handles scene object operations, e.g. enabling/disabling them."
  },
  "api/VRBuilder.Core.Configuration.IInteractionComponentConfiguration.html": {
    "href": "api/VRBuilder.Core.Configuration.IInteractionComponentConfiguration.html",
    "title": "Interface IInteractionComponentConfiguration | VR Builder Documentation",
    "keywords": "Interface IInteractionComponentConfiguration Should be implemented by every interaction component in order to qualify as such. Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public interface IInteractionComponentConfiguration Properties | Improve this Doc View Source DefaultRigPrefab Name of the prefab to be spawned as user rig. Declaration string DefaultRigPrefab { get; } Property Value Type Description System.String | Improve this Doc View Source DisplayName Display name of the interaction component. Declaration string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source IsXRInteractionComponent True if the interaction component is meant to work with XR. Declaration bool IsXRInteractionComponent { get; } Property Value Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Configuration.IProcessAudioPlayer.html": {
    "href": "api/VRBuilder.Core.Configuration.IProcessAudioPlayer.html",
    "title": "Interface IProcessAudioPlayer | VR Builder Documentation",
    "keywords": "Interface IProcessAudioPlayer Interface for the class playing sounds for the process, i.e. tts and play audio behaviors. Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public interface IProcessAudioPlayer Properties | Improve this Doc View Source FallbackAudioSource Gets a fallback audio source. Used only for backwards compatibility. Declaration AudioSource FallbackAudioSource { get; } Property Value Type Description AudioSource | Improve this Doc View Source IsPlaying True if currently playing audio. Declaration bool IsPlaying { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source PlayAudio(IAudioData, Single, Single) Play the specified audio immediately with the set parameters. Declaration void PlayAudio(IAudioData audioData, float volume = 1F, float pitch = 1F) Parameters Type Name Description IAudioData audioData System.Single volume System.Single pitch | Improve this Doc View Source Reset() Resets the player to its default settings. Declaration void Reset() | Improve this Doc View Source Stop() Stops playing audio. Declaration void Stop()"
  },
  "api/VRBuilder.Core.Configuration.ISceneConfiguration.html": {
    "href": "api/VRBuilder.Core.Configuration.ISceneConfiguration.html",
    "title": "Interface ISceneConfiguration | VR Builder Documentation",
    "keywords": "Interface ISceneConfiguration Handles configuration specific to this scene. Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public interface ISceneConfiguration Properties | Improve this Doc View Source DefaultConfettiPrefab Default resources prefab to use for Confetti behavior. Declaration string DefaultConfettiPrefab { get; } Property Value Type Description System.String | Improve this Doc View Source ExtensionAssembliesWhitelist Lists all assemblies whose property extensions will be used in the current scene. Declaration IEnumerable<string> ExtensionAssembliesWhitelist { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > Methods | Improve this Doc View Source IsAllowedInAssembly(Type, String) True if the specified type is not in an exclusion list for the specified assembly. Declaration bool IsAllowedInAssembly(Type extensionType, string assemblyName) Parameters Type Name Description System.Type extensionType System.String assemblyName Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Configuration.ISceneObjectManager.html": {
    "href": "api/VRBuilder.Core.Configuration.ISceneObjectManager.html",
    "title": "Interface ISceneObjectManager | VR Builder Documentation",
    "keywords": "Interface ISceneObjectManager Object that handles scene object operations, e.g. enabling/disabling them. Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public interface ISceneObjectManager Methods | Improve this Doc View Source InstantiatePrefab(GameObject, Vector3, Quaternion) Instantiates the specified prefab. Declaration GameObject InstantiatePrefab(GameObject prefab, Vector3 position, Quaternion rotation) Parameters Type Name Description GameObject prefab Vector3 position Quaternion rotation Returns Type Description GameObject | Improve this Doc View Source RequestAuthority(ISceneObject) Requests authority on the specified scene object. Declaration void RequestAuthority(ISceneObject sceneObject) Parameters Type Name Description ISceneObject sceneObject | Improve this Doc View Source SetComponentActive(ISceneObject, String, Boolean) Sets all components of a given type on a specified scene object enabled or disabled. Declaration void SetComponentActive(ISceneObject sceneObject, string componentTypeName, bool isActive) Parameters Type Name Description ISceneObject sceneObject System.String componentTypeName System.Boolean isActive | Improve this Doc View Source SetSceneObjectActive(ISceneObject, Boolean) Set the specified scene object enabled or disabled. Declaration void SetSceneObjectActive(ISceneObject sceneObject, bool isActive) Parameters Type Name Description ISceneObject sceneObject System.Boolean isActive"
  },
  "api/VRBuilder.Core.Configuration.Modes.BaseModeHandler.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.BaseModeHandler.html",
    "title": "Class BaseModeHandler | VR Builder Documentation",
    "keywords": "Class BaseModeHandler Simple ModeHandler. Inheritance System.Object BaseModeHandler Implements IModeHandler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public sealed class BaseModeHandler : IModeHandler Constructors | Improve this Doc View Source BaseModeHandler(List<IMode>, Int32) Declaration public BaseModeHandler(List<IMode> modes, int defaultMode = 0) Parameters Type Name Description System.Collections.Generic.List < IMode > modes System.Int32 defaultMode Properties | Improve this Doc View Source AvailableModes Declaration public ReadOnlyCollection<IMode> AvailableModes { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < IMode > | Improve this Doc View Source CurrentMode Declaration public IMode CurrentMode { get; } Property Value Type Description IMode | Improve this Doc View Source CurrentModeIndex Declaration public int CurrentModeIndex { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source SetMode(Int32) Declaration public void SetMode(int index) Parameters Type Name Description System.Int32 index | Improve this Doc View Source SetMode(IMode) Declaration public void SetMode(IMode mode) Parameters Type Name Description IMode mode Events | Improve this Doc View Source ModeChanged Declaration public event EventHandler<ModeChangedEventArgs> ModeChanged Event Type Type Description System.EventHandler < ModeChangedEventArgs > Implements IModeHandler"
  },
  "api/VRBuilder.Core.Configuration.Modes.BlacklistTypeRule-1.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.BlacklistTypeRule-1.html",
    "title": "Class BlacklistTypeRule<TBase> | VR Builder Documentation",
    "keywords": "Class BlacklistTypeRule<TBase> All listed types will be invalid. Inheritance System.Object TypeRule <TBase> ListTypeRule < BlacklistTypeRule <TBase>, TBase> BlacklistTypeRule<TBase> Implements IRule < System.Type > Inherited Members ListTypeRule<BlacklistTypeRule<TBase>, TBase>.StoredTypes ListTypeRule<BlacklistTypeRule<TBase>, TBase>.Add<T>() ListTypeRule<BlacklistTypeRule<TBase>, TBase>.Clone() TypeRule<TBase>.IsQualifiedBy<T>() TypeRule<TBase>.IsQualifiedBy(Type) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public class BlacklistTypeRule<TBase> : ListTypeRule<BlacklistTypeRule<TBase>, TBase>, IRule<Type> Type Parameters Name Description TBase Type which can be filtered. Methods | Improve this Doc View Source IsQualifiedByPredicate(Type) Declaration protected override bool IsQualifiedByPredicate(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean Overrides VRBuilder.Core.Configuration.Modes.TypeRule<TBase>.IsQualifiedByPredicate(System.Type) Implements IRule<T>"
  },
  "api/VRBuilder.Core.Configuration.Modes.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.html",
    "title": "Namespace VRBuilder.Core.Configuration.Modes | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Configuration.Modes Classes BaseModeHandler Simple ModeHandler. BlacklistTypeRule<TBase> All listed types will be invalid. ListTypeRule<TRecursive, TValueBase> Base class for list-based implementations of the TypeRule<TValueBase> class. Mode A process mode that is defined by its name, IConfigurables activation policy and a collection of parameters. Immutable. ModeChangedEventArgs This is a System.EventArgs used for IMode changes. If you want so see more about EventArgs, please visit: https://docs.microsoft.com/en-us/dotnet/standard/events/ ModeParameter<T> ModeParameter is responsible for fetching its parameter value from a IMode . If the value changes while being configured, an event will be triggered. TypeRule<TValueBase> An IRule<T> for types. WhitelistTypeRule<TBase> All listed types will be valid. Interfaces IConfigurator An interface for entities' configurators. IMode The interface of a process mode. A process mode determines if an entity has to be skipped and provides configurable entities with parameters. IModeData IModeHandler Interface for the ModeHandler used to configure modes during runtime. IOptional An interface that indicates that it would make sense to skip this IEntity via IMode . Makes it possible to include it to a list of entities to skip that is defined in a IMode . IRule<T> Very generic interface which allows to implement a rule similar to Linq.Where or SQL Filter."
  },
  "api/VRBuilder.Core.Configuration.Modes.IConfigurator.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.IConfigurator.html",
    "title": "Interface IConfigurator | VR Builder Documentation",
    "keywords": "Interface IConfigurator An interface for entities' configurators. Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public interface IConfigurator Methods | Improve this Doc View Source Configure(IMode, Stage) Declaration void Configure(IMode mode, Stage stage) Parameters Type Name Description IMode mode Stage stage"
  },
  "api/VRBuilder.Core.Configuration.Modes.IMode.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.IMode.html",
    "title": "Interface IMode | VR Builder Documentation",
    "keywords": "Interface IMode The interface of a process mode. A process mode determines if an entity has to be skipped and provides configurable entities with parameters. Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public interface IMode Properties | Improve this Doc View Source Name The name of this process mode. Declaration string Name { get; } Property Value Type Description System.String Methods | Improve this Doc View Source CheckIfSkipped(Type) Returns whether the given type should be skipped in this process mode. Declaration bool CheckIfSkipped(Type type) Parameters Type Name Description System.Type type The type to check. Returns Type Description System.Boolean | Improve this Doc View Source CheckIfSkipped<TOptional>() Returns whether the given IOptional type should be skipped in this process mode. Declaration bool CheckIfSkipped<TOptional>() where TOptional : IOptional Returns Type Description System.Boolean Type Parameters Name Description TOptional | Improve this Doc View Source ContainsParameter<T>(String) Checks if given key exists. Declaration bool ContainsParameter<T>(string key) Parameters Type Name Description System.String key Name of the key Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source GetParameter<T>(String) Provides a specific parameter for this mode. Declaration T GetParameter<T>(string key) Parameters Type Name Description System.String key Name of the parameter. Returns Type Description T The value for the given key Type Parameters Name Description T Type this parameter should be."
  },
  "api/VRBuilder.Core.Configuration.Modes.IModeData.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.IModeData.html",
    "title": "Interface IModeData | VR Builder Documentation",
    "keywords": "Interface IModeData Inherited Members IData.Metadata Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public interface IModeData : IData Properties | Improve this Doc View Source Mode Declaration IMode Mode { get; set; } Property Value Type Description IMode"
  },
  "api/VRBuilder.Core.Configuration.Modes.IModeHandler.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.IModeHandler.html",
    "title": "Interface IModeHandler | VR Builder Documentation",
    "keywords": "Interface IModeHandler Interface for the ModeHandler used to configure modes during runtime. Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public interface IModeHandler Properties | Improve this Doc View Source AvailableModes The ordered collection of all available process modes. Declaration ReadOnlyCollection<IMode> AvailableModes { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < IMode > | Improve this Doc View Source CurrentMode The current process mode. Declaration IMode CurrentMode { get; } Property Value Type Description IMode | Improve this Doc View Source CurrentModeIndex The index of the current process mode. Declaration int CurrentModeIndex { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source SetMode(Int32) Set the current process mode. Declaration void SetMode(int index) Parameters Type Name Description System.Int32 index The index of the desired process mode. | Improve this Doc View Source SetMode(IMode) Set the current process mode, this process mode has to be one of the available modes. Declaration void SetMode(IMode mode) Parameters Type Name Description IMode mode The desired process mode which should be set. Events | Improve this Doc View Source ModeChanged The event that has to be invoked when the current mode changes, for example in SetMode(Int32) method. Declaration event EventHandler<ModeChangedEventArgs> ModeChanged Event Type Type Description System.EventHandler < ModeChangedEventArgs >"
  },
  "api/VRBuilder.Core.Configuration.Modes.IOptional.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.IOptional.html",
    "title": "Interface IOptional | VR Builder Documentation",
    "keywords": "Interface IOptional An interface that indicates that it would make sense to skip this IEntity via IMode . Makes it possible to include it to a list of entities to skip that is defined in a IMode . Inherited Members IEntity.LifeCycle IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.Parent Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public interface IOptional : IEntity"
  },
  "api/VRBuilder.Core.Configuration.Modes.IRule-1.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.IRule-1.html",
    "title": "Interface IRule<T> | VR Builder Documentation",
    "keywords": "Interface IRule<T> Very generic interface which allows to implement a rule similar to Linq.Where or SQL Filter. Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public interface IRule<T> Type Parameters Name Description T Methods | Improve this Doc View Source IsQualifiedBy(T) Checks a given value and returns true if this value qualifies the rule. Declaration bool IsQualifiedBy(T value) Parameters Type Name Description T value The type which is checked. Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html",
    "title": "Class ListTypeRule<TRecursive, TValueBase> | VR Builder Documentation",
    "keywords": "Class ListTypeRule<TRecursive, TValueBase> Base class for list-based implementations of the TypeRule<TValueBase> class. Inheritance System.Object TypeRule <TValueBase> ListTypeRule<TRecursive, TValueBase> BlacklistTypeRule<TBase> WhitelistTypeRule<TBase> Implements IRule < System.Type > Inherited Members TypeRule<TValueBase>.IsQualifiedBy<T>() TypeRule<TValueBase>.IsQualifiedBy(Type) TypeRule<TValueBase>.IsQualifiedByPredicate(Type) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public abstract class ListTypeRule<TRecursive, TValueBase> : TypeRule<TValueBase>, IRule<Type> where TRecursive : ListTypeRule<TRecursive, TValueBase>, new() Type Parameters Name Description TRecursive TValueBase Properties | Improve this Doc View Source StoredTypes Declaration protected HashSet<Type> StoredTypes { get; } Property Value Type Description System.Collections.Generic.HashSet < System.Type > Methods | Improve this Doc View Source Add<T>() Adds an additional Type to the list and returns a changed instance of this rule. Declaration public TRecursive Add<T>() where T : TValueBase Returns Type Description TRecursive Type Parameters Name Description T Type which is added. | Improve this Doc View Source Clone() Declaration protected virtual TRecursive Clone() Returns Type Description TRecursive Implements IRule<T>"
  },
  "api/VRBuilder.Core.Configuration.Modes.Mode.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.Mode.html",
    "title": "Class Mode | VR Builder Documentation",
    "keywords": "Class Mode A process mode that is defined by its name, IConfigurables activation policy and a collection of parameters. Immutable. Inheritance System.Object Mode Implements IMode Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public sealed class Mode : IMode Constructors | Improve this Doc View Source Mode(String, TypeRule<IOptional>, Dictionary<String, Object>) Declaration public Mode(string name, TypeRule<IOptional> entitiesToSkip, Dictionary<string, object> parameters = null) Parameters Type Name Description System.String name Name of the process mode. TypeRule < IOptional > entitiesToSkip A type rule which determines if an IOptional has to be skipped, depending on its type. System.Collections.Generic.Dictionary < System.String , System.Object > parameters A string-to-object dictionary of process mode parameters. Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String Methods | Improve this Doc View Source CheckIfSkipped(Type) Declaration public bool CheckIfSkipped(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean | Improve this Doc View Source CheckIfSkipped<TSkippable>() Declaration public bool CheckIfSkipped<TSkippable>() where TSkippable : IOptional Returns Type Description System.Boolean Type Parameters Name Description TSkippable | Improve this Doc View Source ContainsParameter<TValue>(String) Declaration public bool ContainsParameter<TValue>(string key) Parameters Type Name Description System.String key Returns Type Description System.Boolean Type Parameters Name Description TValue | Improve this Doc View Source GetParameter<TValue>(String) Declaration public TValue GetParameter<TValue>(string key) Parameters Type Name Description System.String key Returns Type Description TValue Type Parameters Name Description TValue Implements IMode"
  },
  "api/VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs.html",
    "title": "Class ModeChangedEventArgs | VR Builder Documentation",
    "keywords": "Class ModeChangedEventArgs This is a System.EventArgs used for IMode changes. If you want so see more about EventArgs, please visit: https://docs.microsoft.com/en-us/dotnet/standard/events/ Inheritance System.Object System.EventArgs ModeChangedEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public class ModeChangedEventArgs : EventArgs Constructors | Improve this Doc View Source ModeChangedEventArgs(IMode) Declaration public ModeChangedEventArgs(IMode mode) Parameters Type Name Description IMode mode Properties | Improve this Doc View Source Mode The newly activated IMode . Declaration public IMode Mode { get; } Property Value Type Description IMode"
  },
  "api/VRBuilder.Core.Configuration.Modes.ModeParameter-1.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.ModeParameter-1.html",
    "title": "Class ModeParameter<T> | VR Builder Documentation",
    "keywords": "Class ModeParameter<T> ModeParameter is responsible for fetching its parameter value from a IMode . If the value changes while being configured, an event will be triggered. Inheritance System.Object ModeParameter<T> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public class ModeParameter<T> Type Parameters Name Description T Constructors | Improve this Doc View Source ModeParameter(String, T) Declaration public ModeParameter(string key, T defaultValue = null) Parameters Type Name Description System.String key T defaultValue Fields | Improve this Doc View Source ParameterModified Declaration public EventHandler<EventArgs> ParameterModified Field Value Type Description System.EventHandler < System.EventArgs > Properties | Improve this Doc View Source IsModified Is true when the current value is different to the default value. Declaration public bool IsModified { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Value Returns the current value, if set and different to the default value it will invoke a ParameterModified event. Declaration public T Value { get; set; } Property Value Type Description T Methods | Improve this Doc View Source Configure(IMode) Configures this parameter with the given mode. Declaration public void Configure(IMode mode) Parameters Type Name Description IMode mode | Improve this Doc View Source Reset() Resets the parameter, will triggered modified if the value changes. Declaration public void Reset()"
  },
  "api/VRBuilder.Core.Configuration.Modes.TypeRule-1.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.TypeRule-1.html",
    "title": "Class TypeRule<TValueBase> | VR Builder Documentation",
    "keywords": "Class TypeRule<TValueBase> An IRule<T> for types. Inheritance System.Object TypeRule<TValueBase> ListTypeRule<TRecursive, TValueBase> Implements IRule < System.Type > Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public abstract class TypeRule<TValueBase> : IRule<Type> Type Parameters Name Description TValueBase A type from which all input types have to be inherited from. Methods | Improve this Doc View Source IsQualifiedBy(Type) Declaration public bool IsQualifiedBy(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean | Improve this Doc View Source IsQualifiedBy<T>() Generic version of IsQualifiedBy(Type) . Declaration public bool IsQualifiedBy<T>() where T : TValueBase Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source IsQualifiedByPredicate(Type) Actual check of a given type. It is guaranteed that type inherits the Declaration protected abstract bool IsQualifiedByPredicate(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean Implements IRule<T>"
  },
  "api/VRBuilder.Core.Configuration.Modes.WhitelistTypeRule-1.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.WhitelistTypeRule-1.html",
    "title": "Class WhitelistTypeRule<TBase> | VR Builder Documentation",
    "keywords": "Class WhitelistTypeRule<TBase> All listed types will be valid. Inheritance System.Object TypeRule <TBase> ListTypeRule < WhitelistTypeRule <TBase>, TBase> WhitelistTypeRule<TBase> Implements IRule < System.Type > Inherited Members ListTypeRule<WhitelistTypeRule<TBase>, TBase>.StoredTypes ListTypeRule<WhitelistTypeRule<TBase>, TBase>.Add<T>() ListTypeRule<WhitelistTypeRule<TBase>, TBase>.Clone() TypeRule<TBase>.IsQualifiedBy<T>() TypeRule<TBase>.IsQualifiedBy(Type) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public class WhitelistTypeRule<TBase> : ListTypeRule<WhitelistTypeRule<TBase>, TBase>, IRule<Type> Type Parameters Name Description TBase Type which can be filtered. Methods | Improve this Doc View Source IsQualifiedByPredicate(Type) Declaration protected override bool IsQualifiedByPredicate(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean Overrides VRBuilder.Core.Configuration.Modes.TypeRule<TBase>.IsQualifiedByPredicate(System.Type) Implements IRule<T>"
  },
  "api/VRBuilder.Core.Configuration.PropertyExtensionExclusionList.html": {
    "href": "api/VRBuilder.Core.Configuration.PropertyExtensionExclusionList.html",
    "title": "Class PropertyExtensionExclusionList | VR Builder Documentation",
    "keywords": "Class PropertyExtensionExclusionList Inheritance System.Object PropertyExtensionExclusionList Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public class PropertyExtensionExclusionList : MonoBehaviour Properties | Improve this Doc View Source AssemblyFullName Full name of the assembly we want to exclude the types from. Declaration public string AssemblyFullName { get; } Property Value Type Description System.String | Improve this Doc View Source DisallowedExtensionTypes List of excluded extension types. Declaration public IEnumerable<Type> DisallowedExtensionTypes { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Type >"
  },
  "api/VRBuilder.Core.Configuration.RuntimeConfigurator.html": {
    "href": "api/VRBuilder.Core.Configuration.RuntimeConfigurator.html",
    "title": "Class RuntimeConfigurator | VR Builder Documentation",
    "keywords": "Class RuntimeConfigurator Configurator to set the process runtime configuration which is used by a process during its execution. There has to be one and only one process runtime configurator game object per scene. Inheritance System.Object RuntimeConfigurator Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public sealed class RuntimeConfigurator : MonoBehaviour Properties | Improve this Doc View Source Configuration Shortcut to get the of the instance. Declaration public static BaseRuntimeConfiguration Configuration { get; set; } Property Value Type Description BaseRuntimeConfiguration | Improve this Doc View Source Exists Checks if a process runtime configurator exists in the scene. Declaration public static bool Exists { get; } Property Value Type Description System.Boolean true if an instance of the runtime configurator exists; otherwise, false . | Improve this Doc View Source Instance Gets the current instance of the RuntimeConfigurator. Declaration public static RuntimeConfigurator Instance { get; } Property Value Type Description RuntimeConfigurator Exceptions Type Condition System.NullReferenceException Thrown if there is no RuntimeConfigurator added to the scene. Methods | Improve this Doc View Source GetProcessStringLocalizationTable() Returns the string localization table for the selected process. Declaration public string GetProcessStringLocalizationTable() Returns Type Description System.String The string localization table for the selected process. | Improve this Doc View Source GetRuntimeConfigurationName() Returns the assembly qualified name of the runtime configuration. Declaration public string GetRuntimeConfigurationName() Returns Type Description System.String The assembly qualified name of the runtime configuration. | Improve this Doc View Source GetSelectedProcess() Returns the path to the selected process. Declaration public string GetSelectedProcess() Returns Type Description System.String The path to the selected process. | Improve this Doc View Source IsExisting(Boolean) Checks if an instance of the runtime configurator exists. If VRBuilder.Core.Configuration.RuntimeConfigurator.instance is not set it tries to set it by calling . Declaration public static bool IsExisting(bool forceNewLookup = false) Parameters Type Name Description System.Boolean forceNewLookup If set to true , forces a new lookup for the instance. Returns Type Description System.Boolean true if an instance of the runtime configurator exists; otherwise, false . | Improve this Doc View Source SetRuntimeConfigurationName(String) Sets the runtime configuration name, expects an assembly qualified name. Declaration public void SetRuntimeConfigurationName(string configurationName) Parameters Type Name Description System.String configurationName The assembly qualified name of the runtime configuration. | Improve this Doc View Source SetSelectedProcess(String) Sets the path to the selected process. Declaration public void SetSelectedProcess(string path) Parameters Type Name Description System.String path The path to the selected process. Events | Improve this Doc View Source ModeChanged The event that fires when a process mode or runtime configuration changes. Declaration public static event EventHandler<ModeChangedEventArgs> ModeChanged Event Type Type Description System.EventHandler < ModeChangedEventArgs > | Improve this Doc View Source RuntimeConfigurationChanged The event that fires when a process runtime configuration changes. Declaration public static event EventHandler<EventArgs> RuntimeConfigurationChanged Event Type Type Description System.EventHandler < System.EventArgs >"
  },
  "api/VRBuilder.Core.Configuration.SceneConfiguration.html": {
    "href": "api/VRBuilder.Core.Configuration.SceneConfiguration.html",
    "title": "Class SceneConfiguration | VR Builder Documentation",
    "keywords": "Class SceneConfiguration Handles configuration specific to this scene. Inheritance System.Object SceneConfiguration Implements ISceneConfiguration Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public class SceneConfiguration : MonoBehaviour, ISceneConfiguration Properties | Improve this Doc View Source DefaultConfettiPrefab Declaration public string DefaultConfettiPrefab { get; set; } Property Value Type Description System.String | Improve this Doc View Source ExtensionAssembliesWhitelist Declaration public IEnumerable<string> ExtensionAssembliesWhitelist { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > Methods | Improve this Doc View Source AddWhitelistAssemblies(IEnumerable<String>) Adds the specified assembly names to the extension whitelist. Declaration public void AddWhitelistAssemblies(IEnumerable<string> assemblyNames) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.String > assemblyNames | Improve this Doc View Source IsAllowedInAssembly(Type, String) Declaration public bool IsAllowedInAssembly(Type extensionType, string assemblyName) Parameters Type Name Description System.Type extensionType System.String assemblyName Returns Type Description System.Boolean Implements ISceneConfiguration"
  },
  "api/VRBuilder.Core.Configurator-1.html": {
    "href": "api/VRBuilder.Core.Configurator-1.html",
    "title": "Class Configurator<TData> | VR Builder Documentation",
    "keywords": "Class Configurator<TData> A base class for entities' configurators which have access to their entities' data. Inheritance System.Object Configurator<TData> FoldedLifeCycleConfigurator<TEntity> ParallelConfigurator<TEntity> SequenceConfigurator<TEntity> Implements IConfigurator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public abstract class Configurator<TData> : IConfigurator where TData : IData Type Parameters Name Description TData Constructors | Improve this Doc View Source Configurator(TData) Declaration protected Configurator(TData data) Parameters Type Name Description TData data Properties | Improve this Doc View Source Data The data to configure. Declaration protected TData Data { get; } Property Value Type Description TData Methods | Improve this Doc View Source Configure(IMode, Stage) Declaration public abstract void Configure(IMode mode, Stage stage) Parameters Type Name Description IMode mode Stage stage Implements IConfigurator"
  },
  "api/VRBuilder.Core.EmptyAutocompleter.html": {
    "href": "api/VRBuilder.Core.EmptyAutocompleter.html",
    "title": "Class EmptyAutocompleter | VR Builder Documentation",
    "keywords": "Class EmptyAutocompleter An autocompleter that does nothing. Inheritance System.Object EmptyAutocompleter Implements IAutocompleter Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class EmptyAutocompleter : IAutocompleter Methods | Improve this Doc View Source Complete() Declaration public void Complete() Implements IAutocompleter"
  },
  "api/VRBuilder.Core.EmptyConfigurator.html": {
    "href": "api/VRBuilder.Core.EmptyConfigurator.html",
    "title": "Class EmptyConfigurator | VR Builder Documentation",
    "keywords": "Class EmptyConfigurator A configurator that does nothing. Inheritance System.Object EmptyConfigurator Implements IConfigurator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class EmptyConfigurator : IConfigurator Methods | Improve this Doc View Source Configure(IMode, Stage) Declaration public void Configure(IMode mode, Stage stage) Parameters Type Name Description IMode mode Stage stage Implements IConfigurator"
  },
  "api/VRBuilder.Core.EmptyProcess.html": {
    "href": "api/VRBuilder.Core.EmptyProcess.html",
    "title": "Class EmptyProcess | VR Builder Documentation",
    "keywords": "Class EmptyProcess A stage process that does nothing. Inheritance System.Object EmptyProcess Implements IStageProcess Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public sealed class EmptyProcess : IStageProcess Methods | Improve this Doc View Source End() Declaration public void End() | Improve this Doc View Source FastForward() Declaration public void FastForward() | Improve this Doc View Source Start() Declaration public void Start() | Improve this Doc View Source Update() Declaration public IEnumerator Update() Returns Type Description System.Collections.IEnumerator Implements IStageProcess"
  },
  "api/VRBuilder.Core.EndChapterPostProcessing.html": {
    "href": "api/VRBuilder.Core.EndChapterPostProcessing.html",
    "title": "Class EndChapterPostProcessing | VR Builder Documentation",
    "keywords": "Class EndChapterPostProcessing IStep implementation of EntityPostProcessing<T> specific for \"endChapter\" steps. Inheritance System.Object EntityPostProcessing < IStep > EndChapterPostProcessing Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Editor.dll Syntax public class EndChapterPostProcessing : EntityPostProcessing<IStep> Methods | Improve this Doc View Source Execute(IStep) Executes post processing. Declaration public override void Execute(IStep entity) Parameters Type Name Description IStep entity Overrides VRBuilder.Core.EntityPostProcessing<VRBuilder.Core.IStep>.Execute(VRBuilder.Core.IStep)"
  },
  "api/VRBuilder.Core.Entity-1.html": {
    "href": "api/VRBuilder.Core.Entity-1.html",
    "title": "Class Entity<TData> | VR Builder Documentation",
    "keywords": "Class Entity<TData> Abstract helper class that can be used for instances that implement IEntity . Provides implementation of the events and properties, and also offers member functions to trigger state changes. Inheritance System.Object Entity<TData> BehaviorCollection Behavior<TData> Chapter CompletableEntity<TData> Process Step TransitionCollection Implements IEntity IDataOwner <TData> IDataOwner Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public abstract class Entity<TData> : IEntity, IDataOwner<TData>, IDataOwner where TData : class, IData, new() Type Parameters Name Description TData Constructors | Improve this Doc View Source Entity() Declaration protected Entity() Properties | Improve this Doc View Source Data Declaration [DataMember] public TData Data { get; } Property Value Type Description TData | Improve this Doc View Source LifeCycle Declaration [IgnoreDataMember] public ILifeCycle LifeCycle { get; } Property Value Type Description ILifeCycle | Improve this Doc View Source Parent Declaration [IgnoreDataMember] public IEntity Parent { get; set; } Property Value Type Description IEntity Methods | Improve this Doc View Source Configure(IMode) Declaration public virtual void Configure(IMode mode) Parameters Type Name Description IMode mode | Improve this Doc View Source GetActivatingProcess() Declaration public virtual IStageProcess GetActivatingProcess() Returns Type Description IStageProcess | Improve this Doc View Source GetActiveProcess() Declaration public virtual IStageProcess GetActiveProcess() Returns Type Description IStageProcess | Improve this Doc View Source GetConfigurator() Override this method if your behavior or condition supports changing between process modes ( IMode ). By default returns an empty configurator that does nothing. Declaration protected virtual IConfigurator GetConfigurator() Returns Type Description IConfigurator | Improve this Doc View Source GetDeactivatingProcess() Declaration public virtual IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess | Improve this Doc View Source Update() Declaration public void Update() Explicit Interface Implementations | Improve this Doc View Source IDataOwner.Data Declaration IData IDataOwner.Data { get; } Returns Type Description IData Implements IEntity IDataOwner<TData> IDataOwner"
  },
  "api/VRBuilder.Core.EntityFactory.html": {
    "href": "api/VRBuilder.Core.EntityFactory.html",
    "title": "Class EntityFactory | VR Builder Documentation",
    "keywords": "Class EntityFactory Base factory interface for IEntity objects. Inheritance System.Object EntityFactory Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public static class EntityFactory Methods | Improve this Doc View Source CreateChapter(String) Creates a new IChapter with given name and, if there is any valid VRBuilder.Core.EntityFactory.PostProcessEntity``1(VRBuilder.Core.IEntity) , executes corresponding post processing. Declaration public static IChapter CreateChapter(string name) Parameters Type Name Description System.String name Returns Type Description IChapter | Improve this Doc View Source CreateProcess(String) Creates a new IProcess with given name and, if there is any valid VRBuilder.Core.EntityFactory.PostProcessEntity``1(VRBuilder.Core.IEntity) , executes corresponding post processing. Declaration public static IProcess CreateProcess(string name) Parameters Type Name Description System.String name Returns Type Description IProcess | Improve this Doc View Source CreateStep(String, Vector2, String) Creates a new IStep with given name , position and, if there is any valid VRBuilder.Core.EntityFactory.PostProcessEntity``1(VRBuilder.Core.IEntity) , executes corresponding post processing. Declaration public static IStep CreateStep(string name, Vector2 position = null, string stepType = \"default\") Parameters Type Name Description System.String name Vector2 position System.String stepType Returns Type Description IStep | Improve this Doc View Source CreateTransition() Creates a new ITransition and, if there is any valid VRBuilder.Core.EntityFactory.PostProcessEntity``1(VRBuilder.Core.IEntity) , executes corresponding post processing. Declaration public static ITransition CreateTransition() Returns Type Description ITransition"
  },
  "api/VRBuilder.Core.EntityOwners.EntityCollectionData-1.html": {
    "href": "api/VRBuilder.Core.EntityOwners.EntityCollectionData-1.html",
    "title": "Class EntityCollectionData<TEntity> | VR Builder Documentation",
    "keywords": "Class EntityCollectionData<TEntity> A base class for data classes that are collections of other entities. Inheritance System.Object EntityCollectionData<TEntity> BehaviorCollection.EntityData BehaviorSequence.EntityData ExecuteChapterBehavior.EntityData ExecuteChaptersBehavior.EntityData Chapter.EntityData Process.EntityData Step.EntityData Transition.EntityData TransitionCollection.EntityData Implements IEntityCollectionData <TEntity> IEntityCollectionData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public abstract class EntityCollectionData<TEntity> : IEntityCollectionData<TEntity>, IEntityCollectionData, IData where TEntity : IEntity Type Parameters Name Description TEntity Properties | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Methods | Improve this Doc View Source GetChildren() Declaration public abstract IEnumerable<TEntity> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable <TEntity> Explicit Interface Implementations | Improve this Doc View Source IEntityCollectionData.GetChildren() Declaration IEnumerable<IEntity> IEntityCollectionData.GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < IEntity > Implements IEntityCollectionData<TEntity> IEntityCollectionData IData"
  },
  "api/VRBuilder.Core.EntityOwners.EntityIteratingProcess-2.html": {
    "href": "api/VRBuilder.Core.EntityOwners.EntityIteratingProcess-2.html",
    "title": "Class EntityIteratingProcess<TEntitySequenceDataWithMode, TEntity> | VR Builder Documentation",
    "keywords": "Class EntityIteratingProcess<TEntitySequenceDataWithMode, TEntity> A process that activates and deactivates entities one after another. Inheritance System.Object StageProcess <TEntitySequenceDataWithMode> EntityIteratingProcess<TEntitySequenceDataWithMode, TEntity> Implements IStageProcess Inherited Members StageProcess<TEntitySequenceDataWithMode>.Data StageProcess<TEntitySequenceDataWithMode>.Outer System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public abstract class EntityIteratingProcess<TEntitySequenceDataWithMode, TEntity> : StageProcess<TEntitySequenceDataWithMode>, IStageProcess where TEntitySequenceDataWithMode : class, IEntitySequenceDataWithMode<TEntity> where TEntity : IEntity Type Parameters Name Description TEntitySequenceDataWithMode TEntity Constructors | Improve this Doc View Source EntityIteratingProcess(TEntitySequenceDataWithMode) Declaration protected EntityIteratingProcess(TEntitySequenceDataWithMode data) Parameters Type Name Description TEntitySequenceDataWithMode data Methods | Improve this Doc View Source End() Declaration public override void End() Overrides VRBuilder.Core.StageProcess<TEntitySequenceDataWithMode>.End() | Improve this Doc View Source FastForward() Declaration public override void FastForward() Overrides VRBuilder.Core.StageProcess<TEntitySequenceDataWithMode>.FastForward() | Improve this Doc View Source ShouldActivateCurrent() Returns true if the current entity has to be activated. Declaration protected abstract bool ShouldActivateCurrent() Returns Type Description System.Boolean | Improve this Doc View Source ShouldDeactivateCurrent() Returns true if the current entity has to be deactivated. Declaration protected abstract bool ShouldDeactivateCurrent() Returns Type Description System.Boolean | Improve this Doc View Source Start() Declaration public override void Start() Overrides VRBuilder.Core.StageProcess<TEntitySequenceDataWithMode>.Start() | Improve this Doc View Source TryNext(out TEntity) Try to get next child entity. Declaration protected abstract bool TryNext(out TEntity entity) Parameters Type Name Description TEntity entity Returns Type Description System.Boolean | Improve this Doc View Source Update() Declaration public override IEnumerator Update() Returns Type Description System.Collections.IEnumerator Overrides VRBuilder.Core.StageProcess<TEntitySequenceDataWithMode>.Update() Implements IStageProcess"
  },
  "api/VRBuilder.Core.EntityOwners.FoldedLifeCycleConfigurator-1.html": {
    "href": "api/VRBuilder.Core.EntityOwners.FoldedLifeCycleConfigurator-1.html",
    "title": "Class FoldedLifeCycleConfigurator<TEntity> | VR Builder Documentation",
    "keywords": "Class FoldedLifeCycleConfigurator<TEntity> A configurator for a sequence of entities. Inheritance System.Object Configurator < IEntitySequenceData <TEntity>> FoldedLifeCycleConfigurator<TEntity> Implements IConfigurator Inherited Members Configurator<IEntitySequenceData<TEntity>>.Data System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public class FoldedLifeCycleConfigurator<TEntity> : Configurator<IEntitySequenceData<TEntity>>, IConfigurator where TEntity : IEntity Type Parameters Name Description TEntity Constructors | Improve this Doc View Source FoldedLifeCycleConfigurator(IEntitySequenceData<TEntity>) Declaration public FoldedLifeCycleConfigurator(IEntitySequenceData<TEntity> data) Parameters Type Name Description IEntitySequenceData <TEntity> data Methods | Improve this Doc View Source Configure(IMode, Stage) Declaration public override void Configure(IMode mode, Stage stage) Parameters Type Name Description IMode mode Stage stage Overrides VRBuilder.Core.Configurator<VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>>.Configure(VRBuilder.Core.Configuration.Modes.IMode, VRBuilder.Core.Stage) Implements IConfigurator"
  },
  "api/VRBuilder.Core.EntityOwners.html": {
    "href": "api/VRBuilder.Core.EntityOwners.html",
    "title": "Namespace VRBuilder.Core.EntityOwners | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.EntityOwners Classes EntityCollectionData<TEntity> A base class for data classes that are collections of other entities. EntityIteratingProcess<TEntitySequenceDataWithMode, TEntity> A process that activates and deactivates entities one after another. FoldedLifeCycleConfigurator<TEntity> A configurator for a sequence of entities. ParallelConfigurator<TEntity> A configurator for a collection of entities. SequenceConfigurator<TEntity> A configurator for a sequence of entities. StopEntityIteratingProcess<TEntity> A process that stops activation of a current entity in the entity sequence. Interfaces IEntityCollectionData An entity's data which represents a collection of other entities. IEntityCollectionData<TEntity> A generic version of IEntityCollectionData IEntityCollectionDataWithMode A composition interface of IEntityCollectionData and IModeData . IEntityCollectionDataWithMode<TEntity> A generic version of IEntityCollectionDataWithMode IEntityNonLinearSequenceDataWithMode<TEntity> Sequence data which allow specifying the next element in the sequence. IEntitySequenceData IEntitySequenceData<TEntity> IEntitySequenceDataWithMode<TEntity> An IEntitySequenceData<TEntity> with IModeData ."
  },
  "api/VRBuilder.Core.EntityOwners.IEntityCollectionData.html": {
    "href": "api/VRBuilder.Core.EntityOwners.IEntityCollectionData.html",
    "title": "Interface IEntityCollectionData | VR Builder Documentation",
    "keywords": "Interface IEntityCollectionData An entity's data which represents a collection of other entities. Inherited Members IData.Metadata Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public interface IEntityCollectionData : IData Methods | Improve this Doc View Source GetChildren() Declaration IEnumerable<IEntity> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < IEntity >"
  },
  "api/VRBuilder.Core.EntityOwners.IEntityCollectionData-1.html": {
    "href": "api/VRBuilder.Core.EntityOwners.IEntityCollectionData-1.html",
    "title": "Interface IEntityCollectionData<TEntity> | VR Builder Documentation",
    "keywords": "Interface IEntityCollectionData<TEntity> A generic version of IEntityCollectionData Inherited Members IData.Metadata Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public interface IEntityCollectionData<out TEntity> : IEntityCollectionData, IData where TEntity : IEntity Type Parameters Name Description TEntity Methods | Improve this Doc View Source GetChildren() Declaration IEnumerable<TEntity> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable <TEntity>"
  },
  "api/VRBuilder.Core.EntityOwners.IEntityCollectionDataWithMode.html": {
    "href": "api/VRBuilder.Core.EntityOwners.IEntityCollectionDataWithMode.html",
    "title": "Interface IEntityCollectionDataWithMode | VR Builder Documentation",
    "keywords": "Interface IEntityCollectionDataWithMode A composition interface of IEntityCollectionData and IModeData . Inherited Members IEntityCollectionData.GetChildren() IModeData.Mode IData.Metadata Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public interface IEntityCollectionDataWithMode : IEntityCollectionData, IModeData, IData"
  },
  "api/VRBuilder.Core.EntityOwners.IEntityCollectionDataWithMode-1.html": {
    "href": "api/VRBuilder.Core.EntityOwners.IEntityCollectionDataWithMode-1.html",
    "title": "Interface IEntityCollectionDataWithMode<TEntity> | VR Builder Documentation",
    "keywords": "Interface IEntityCollectionDataWithMode<TEntity> A generic version of IEntityCollectionDataWithMode Inherited Members IEntityCollectionData<TEntity>.GetChildren() IModeData.Mode IData.Metadata Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public interface IEntityCollectionDataWithMode<out TEntity> : IEntityCollectionData<TEntity>, IEntityCollectionDataWithMode, IEntityCollectionData, IModeData, IData where TEntity : IEntity Type Parameters Name Description TEntity"
  },
  "api/VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode-1.html": {
    "href": "api/VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode-1.html",
    "title": "Interface IEntityNonLinearSequenceDataWithMode<TEntity> | VR Builder Documentation",
    "keywords": "Interface IEntityNonLinearSequenceDataWithMode<TEntity> Sequence data which allow specifying the next element in the sequence. Inherited Members IEntitySequenceData<TEntity>.Current IEntityCollectionData<TEntity>.GetChildren() IModeData.Mode IData.Metadata Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public interface IEntityNonLinearSequenceDataWithMode<TEntity> : IEntitySequenceDataWithMode<TEntity>, IEntitySequenceData<TEntity>, IEntityCollectionData<TEntity>, IEntityCollectionData, IEntitySequenceData, IModeData, IData where TEntity : IEntity Type Parameters Name Description TEntity Properties | Improve this Doc View Source OverrideNext If not null, overrides the next entity in the sequence. Declaration TEntity OverrideNext { get; set; } Property Value Type Description TEntity"
  },
  "api/VRBuilder.Core.EntityOwners.IEntitySequenceData.html": {
    "href": "api/VRBuilder.Core.EntityOwners.IEntitySequenceData.html",
    "title": "Interface IEntitySequenceData | VR Builder Documentation",
    "keywords": "Interface IEntitySequenceData Inherited Members IData.Metadata Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public interface IEntitySequenceData : IData Properties | Improve this Doc View Source Current Current entity in the sequence. Declaration IEntity Current { get; } Property Value Type Description IEntity"
  },
  "api/VRBuilder.Core.EntityOwners.IEntitySequenceData-1.html": {
    "href": "api/VRBuilder.Core.EntityOwners.IEntitySequenceData-1.html",
    "title": "Interface IEntitySequenceData<TEntity> | VR Builder Documentation",
    "keywords": "Interface IEntitySequenceData<TEntity> Inherited Members IEntityCollectionData<TEntity>.GetChildren() IData.Metadata Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public interface IEntitySequenceData<TEntity> : IEntityCollectionData<TEntity>, IEntityCollectionData, IEntitySequenceData, IData where TEntity : IEntity Type Parameters Name Description TEntity Properties | Improve this Doc View Source Current Current entity in the sequence. Declaration TEntity Current { get; set; } Property Value Type Description TEntity"
  },
  "api/VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode-1.html": {
    "href": "api/VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode-1.html",
    "title": "Interface IEntitySequenceDataWithMode<TEntity> | VR Builder Documentation",
    "keywords": "Interface IEntitySequenceDataWithMode<TEntity> An IEntitySequenceData<TEntity> with IModeData . Inherited Members IEntitySequenceData<TEntity>.Current IEntityCollectionData<TEntity>.GetChildren() IModeData.Mode IData.Metadata Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public interface IEntitySequenceDataWithMode<TEntity> : IEntitySequenceData<TEntity>, IEntityCollectionData<TEntity>, IEntityCollectionData, IEntitySequenceData, IModeData, IData where TEntity : IEntity Type Parameters Name Description TEntity"
  },
  "api/VRBuilder.Core.EntityOwners.ParallelConfigurator-1.html": {
    "href": "api/VRBuilder.Core.EntityOwners.ParallelConfigurator-1.html",
    "title": "Class ParallelConfigurator<TEntity> | VR Builder Documentation",
    "keywords": "Class ParallelConfigurator<TEntity> A configurator for a collection of entities. Inheritance System.Object Configurator < IEntityCollectionDataWithMode <TEntity>> ParallelConfigurator<TEntity> Implements IConfigurator Inherited Members Configurator<IEntityCollectionDataWithMode<TEntity>>.Data System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public class ParallelConfigurator<TEntity> : Configurator<IEntityCollectionDataWithMode<TEntity>>, IConfigurator where TEntity : IEntity Type Parameters Name Description TEntity Constructors | Improve this Doc View Source ParallelConfigurator(IEntityCollectionDataWithMode<TEntity>) Declaration public ParallelConfigurator(IEntityCollectionDataWithMode<TEntity> data) Parameters Type Name Description IEntityCollectionDataWithMode <TEntity> data Methods | Improve this Doc View Source Configure(IMode, Stage) Declaration public override void Configure(IMode mode, Stage stage) Parameters Type Name Description IMode mode Stage stage Overrides VRBuilder.Core.Configurator<VRBuilder.Core.EntityOwners.IEntityCollectionDataWithMode<TEntity>>.Configure(VRBuilder.Core.Configuration.Modes.IMode, VRBuilder.Core.Stage) Implements IConfigurator"
  },
  "api/VRBuilder.Core.EntityOwners.SequenceConfigurator-1.html": {
    "href": "api/VRBuilder.Core.EntityOwners.SequenceConfigurator-1.html",
    "title": "Class SequenceConfigurator<TEntity> | VR Builder Documentation",
    "keywords": "Class SequenceConfigurator<TEntity> A configurator for a sequence of entities. Inheritance System.Object Configurator < IEntitySequenceData <TEntity>> SequenceConfigurator<TEntity> Implements IConfigurator Inherited Members Configurator<IEntitySequenceData<TEntity>>.Data System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public class SequenceConfigurator<TEntity> : Configurator<IEntitySequenceData<TEntity>>, IConfigurator where TEntity : IEntity Type Parameters Name Description TEntity Constructors | Improve this Doc View Source SequenceConfigurator(IEntitySequenceData<TEntity>) Declaration public SequenceConfigurator(IEntitySequenceData<TEntity> data) Parameters Type Name Description IEntitySequenceData <TEntity> data Methods | Improve this Doc View Source Configure(IMode, Stage) Declaration public override void Configure(IMode mode, Stage stage) Parameters Type Name Description IMode mode Stage stage Overrides VRBuilder.Core.Configurator<VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>>.Configure(VRBuilder.Core.Configuration.Modes.IMode, VRBuilder.Core.Stage) Implements IConfigurator"
  },
  "api/VRBuilder.Core.EntityOwners.StopEntityIteratingProcess-1.html": {
    "href": "api/VRBuilder.Core.EntityOwners.StopEntityIteratingProcess-1.html",
    "title": "Class StopEntityIteratingProcess<TEntity> | VR Builder Documentation",
    "keywords": "Class StopEntityIteratingProcess<TEntity> A process that stops activation of a current entity in the entity sequence. Inheritance System.Object StageProcess < IEntitySequenceData <TEntity>> StopEntityIteratingProcess<TEntity> Implements IStageProcess Inherited Members StageProcess<IEntitySequenceData<TEntity>>.Data StageProcess<IEntitySequenceData<TEntity>>.Outer System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public class StopEntityIteratingProcess<TEntity> : StageProcess<IEntitySequenceData<TEntity>>, IStageProcess where TEntity : IEntity Type Parameters Name Description TEntity Constructors | Improve this Doc View Source StopEntityIteratingProcess(IEntitySequenceData<TEntity>) Declaration public StopEntityIteratingProcess(IEntitySequenceData<TEntity> data) Parameters Type Name Description IEntitySequenceData <TEntity> data Methods | Improve this Doc View Source End() Declaration public override void End() Overrides VRBuilder.Core.StageProcess<VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>>.End() | Improve this Doc View Source FastForward() Declaration public override void FastForward() Overrides VRBuilder.Core.StageProcess<VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>>.FastForward() | Improve this Doc View Source Start() Declaration public override void Start() Overrides VRBuilder.Core.StageProcess<VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>>.Start() | Improve this Doc View Source Update() Declaration public override IEnumerator Update() Returns Type Description System.Collections.IEnumerator Overrides VRBuilder.Core.StageProcess<VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>>.Update() Implements IStageProcess"
  },
  "api/VRBuilder.Core.EntityPostProcessing-1.html": {
    "href": "api/VRBuilder.Core.EntityPostProcessing-1.html",
    "title": "Class EntityPostProcessing<T> | VR Builder Documentation",
    "keywords": "Class EntityPostProcessing<T> Base class for implementing post processing after a IEntity creation. Inheritance System.Object EntityPostProcessing<T> EndChapterPostProcessing ParallelExecutionPostProcessing RandomBranchPostProcessing StepGroupPostProcessing StepPostProcessing Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public abstract class EntityPostProcessing<T> where T : IEntity Type Parameters Name Description T Type of IEntity . Methods | Improve this Doc View Source Execute(T) Executes post processing. Declaration public abstract void Execute(T entity) Parameters Type Name Description T entity IEntity reference for post processing."
  },
  "api/VRBuilder.Core.Exceptions.AlreadyRegisteredException.html": {
    "href": "api/VRBuilder.Core.Exceptions.AlreadyRegisteredException.html",
    "title": "Class AlreadyRegisteredException | VR Builder Documentation",
    "keywords": "Class AlreadyRegisteredException Inheritance System.Object System.Exception ProcessException AlreadyRegisteredException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Exceptions Assembly : VRBuilder.Core.dll Syntax [Obsolete(\"This exception is not used anymore and will be removed in the next major version.\")] public class AlreadyRegisteredException : ProcessException, ISerializable, _Exception Constructors | Improve this Doc View Source AlreadyRegisteredException(ISceneObject) Declaration public AlreadyRegisteredException(ISceneObject obj) Parameters Type Name Description ISceneObject obj Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/VRBuilder.Core.Exceptions.html": {
    "href": "api/VRBuilder.Core.Exceptions.html",
    "title": "Namespace VRBuilder.Core.Exceptions | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Exceptions Classes AlreadyRegisteredException InvalidStateException MissingEntityException MissingModeException NameNotUniqueException ProcessException PropertyNotFoundException"
  },
  "api/VRBuilder.Core.Exceptions.InvalidStateException.html": {
    "href": "api/VRBuilder.Core.Exceptions.InvalidStateException.html",
    "title": "Class InvalidStateException | VR Builder Documentation",
    "keywords": "Class InvalidStateException Inheritance System.Object System.Exception ProcessException InvalidStateException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Exceptions Assembly : VRBuilder.Core.dll Syntax public class InvalidStateException : ProcessException, ISerializable, _Exception Constructors | Improve this Doc View Source InvalidStateException(String) Declaration public InvalidStateException(string message) Parameters Type Name Description System.String message Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/VRBuilder.Core.Exceptions.MissingEntityException.html": {
    "href": "api/VRBuilder.Core.Exceptions.MissingEntityException.html",
    "title": "Class MissingEntityException | VR Builder Documentation",
    "keywords": "Class MissingEntityException Inheritance System.Object System.Exception ProcessException MissingEntityException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Exceptions Assembly : VRBuilder.Core.dll Syntax public class MissingEntityException : ProcessException, ISerializable, _Exception Constructors | Improve this Doc View Source MissingEntityException(String) Declaration public MissingEntityException(string message) Parameters Type Name Description System.String message Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/VRBuilder.Core.Exceptions.MissingModeException.html": {
    "href": "api/VRBuilder.Core.Exceptions.MissingModeException.html",
    "title": "Class MissingModeException | VR Builder Documentation",
    "keywords": "Class MissingModeException Inheritance System.Object System.Exception ProcessException MissingModeException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Exceptions Assembly : VRBuilder.Core.dll Syntax public class MissingModeException : ProcessException, ISerializable, _Exception Constructors | Improve this Doc View Source MissingModeException() Declaration public MissingModeException() | Improve this Doc View Source MissingModeException(String) Declaration public MissingModeException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source MissingModeException(String, Exception) Declaration public MissingModeException(string message, Exception inner) Parameters Type Name Description System.String message System.Exception inner Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/VRBuilder.Core.Exceptions.NameNotUniqueException.html": {
    "href": "api/VRBuilder.Core.Exceptions.NameNotUniqueException.html",
    "title": "Class NameNotUniqueException | VR Builder Documentation",
    "keywords": "Class NameNotUniqueException Inheritance System.Object System.Exception ProcessException NameNotUniqueException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Exceptions Assembly : VRBuilder.Core.dll Syntax [Obsolete(\"This exception is no longer used and will be removed in the next major version.\")] public class NameNotUniqueException : ProcessException, ISerializable, _Exception Constructors | Improve this Doc View Source NameNotUniqueException(ISceneObject) Declaration public NameNotUniqueException(ISceneObject entity) Parameters Type Name Description ISceneObject entity Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/VRBuilder.Core.Exceptions.ProcessException.html": {
    "href": "api/VRBuilder.Core.Exceptions.ProcessException.html",
    "title": "Class ProcessException | VR Builder Documentation",
    "keywords": "Class ProcessException Inheritance System.Object System.Exception ProcessException AlreadyRegisteredException InvalidStateException MissingEntityException MissingModeException NameNotUniqueException PropertyNotFoundException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Exceptions Assembly : VRBuilder.Core.dll Syntax public class ProcessException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source ProcessException() Declaration public ProcessException() | Improve this Doc View Source ProcessException(String) Declaration public ProcessException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source ProcessException(String, Exception) Declaration public ProcessException(string message, Exception inner) Parameters Type Name Description System.String message System.Exception inner Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/VRBuilder.Core.Exceptions.PropertyNotFoundException.html": {
    "href": "api/VRBuilder.Core.Exceptions.PropertyNotFoundException.html",
    "title": "Class PropertyNotFoundException | VR Builder Documentation",
    "keywords": "Class PropertyNotFoundException Inheritance System.Object System.Exception ProcessException PropertyNotFoundException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Exceptions Assembly : VRBuilder.Core.dll Syntax public class PropertyNotFoundException : ProcessException, ISerializable, _Exception Constructors | Improve this Doc View Source PropertyNotFoundException(String) Declaration public PropertyNotFoundException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source PropertyNotFoundException(ISceneObject, Type) Declaration public PropertyNotFoundException(ISceneObject sourceObject, Type missingType) Parameters Type Name Description ISceneObject sourceObject System.Type missingType Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/VRBuilder.Core.FastForwardProcessEventArgs.html": {
    "href": "api/VRBuilder.Core.FastForwardProcessEventArgs.html",
    "title": "Class FastForwardProcessEventArgs | VR Builder Documentation",
    "keywords": "Class FastForwardProcessEventArgs EventArgs for fast forward process events. Inheritance System.Object System.EventArgs ProcessEventArgs FastForwardProcessEventArgs Inherited Members ProcessEventArgs.Process ProcessEventArgs.Chapter ProcessEventArgs.Step System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class FastForwardProcessEventArgs : ProcessEventArgs Constructors | Improve this Doc View Source FastForwardProcessEventArgs(ITransition, IProcess) Declaration public FastForwardProcessEventArgs(ITransition transition, IProcess process) Parameters Type Name Description ITransition transition IProcess process Fields | Improve this Doc View Source CompletedTransition Completed transition Declaration public readonly ITransition CompletedTransition Field Value Type Description ITransition"
  },
  "api/VRBuilder.Core.html": {
    "href": "api/VRBuilder.Core.html",
    "title": "Namespace VRBuilder.Core | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core Classes ActivationStateChangedEventArgs Event that is fired when the current stage changes. Autocompleter<TData> A base class for autocompleters which provides access to the entity's data. BehaviorCollection A collection of IBehavior s of a IStep . BehaviorCollection.EntityData The data class for IBehavior collections. Chapter A chapter of a process Process . Chapter.EntityData The chapter's data class. ChapterMetadata Implementation of IMetadata adapted for IChapter data. CompletableEntity<TData> An Entity<TData> which can be completed. Entities can be completed only during their Active Stage . CompositeProcess A process which consists of multiple processes which execute at the same time. It ends when all its child processes end. Configurator<TData> A base class for entities' configurators which have access to their entities' data. EmptyAutocompleter An autocompleter that does nothing. EmptyConfigurator A configurator that does nothing. EmptyProcess A stage process that does nothing. EndChapterPostProcessing IStep implementation of EntityPostProcessing<T> specific for \"endChapter\" steps. Entity<TData> Abstract helper class that can be used for instances that implement IEntity . Provides implementation of the events and properties, and also offers member functions to trigger state changes. EntityFactory Base factory interface for IEntity objects. EntityPostProcessing<T> Base class for implementing post processing after a IEntity creation. FastForwardProcessEventArgs EventArgs for fast forward process events. InstantProcess<TData> A convenience class for processes that happen instantly. You only have to implement the Start() method. LifeCycle The implementation of the ILifeCycle interface. Metadata General implementation of IMetadata . ParallelExecutionPostProcessing Postprocessing for a parallel execution node. Process An implementation of IProcess class. It contains a complete information about the process workflow. Process.EntityData The data class for a process. ProcessEventArgs EventArgs for process events. ProcessMetadata Implementation of IMetadata adapted for IProcess data. ProcessRunner Runs a IProcess , expects to be run only once. ProcessRunner.ProcessEvents RandomBranchPostProcessing IStep implementation of EntityPostProcessing<T> specific for \"randomBranch\" steps. StageProcess<TData> A base implementation of a IStageProcess which provides access to its entity's data. Step An implementation of IStep interface. Step.EntityData StepGroupPostProcessing Postprocessing for a step group node. StepMetadata Implementation of IMetadata adapted for IStep data. StepPostProcessing IStep implementation of EntityPostProcessing<T> for default steps. Transition A class for a transition from one step to another. Transition.EntityData The transition's data class. TransitionCollection A collection of ITransition s. TransitionCollection.EntityData The data class of the ITransition s' collection. ViewTransform Stores position and scale in a viewport. Interfaces IAutocompleter A base interface for an autocompleter. Autocompleters are used alongside fast-forwarding of the processes. They must fake circumstances under which conditions should complete if fast-forwarding requires it. IBehaviorCollection A collection of IBehavior s of a IStep . IBehaviorCollectionData A data that contains a list of IBehavior s. IChapter A chapter is a high-level grouping of several IStep s. IChapterData The IChapter 's data interface. IClonable<T> Interface for objects that can be duplicated. ICompletable Base interface for objects which can be completed. ICompletableEntity An IEntity which can be completed. IData Abstract data structure. IDataOwner Abstract holder of data. IDataOwner<TData> Abstract holder of data. IDescribable Interface for all process entities that have a description. IDescribedData Data structure with an IStep 's description. IEntity The basic interface for all components of a process: behaviors, conditions, transitions, and so on. Do not implement this interface directly. Use or abstract classes instead. ILifeCycle A life cycle of an entity. It handles transition between four stages: Inactive, Activating, Active, and Deactivating. ILockablePropertiesProvider This interface is used to allow entities, for example Transition or VRBuilder.Core.Conditions to provide properties which should be locked. IMetadata Utility data which is used by the VR Builder SDK custom editors. INamedData Data structure with an IStep 's name. IProcess Interface of a process. IProcessData The data class for a IProcess . IRenameableData Interface for data that can be renamed. IStageProcess A process for an IEntity 's Stage . IStep Interface for a process step. IStepChild Abstract data structure. Usually works along with IDataOwner . IStepData The interface for a step's data. ITransition An interface for a transition that determines when a IStep is completed and what is the next IStep . ITransitionCollection Interface for a collection of transitions. ITransitionCollectionData The interface of a data with a list of ITransition s. ITransitionData Enums Stage All possible states of an IEntity ."
  },
  "api/VRBuilder.Core.IAutocompleter.html": {
    "href": "api/VRBuilder.Core.IAutocompleter.html",
    "title": "Interface IAutocompleter | VR Builder Documentation",
    "keywords": "Interface IAutocompleter A base interface for an autocompleter. Autocompleters are used alongside fast-forwarding of the processes. They must fake circumstances under which conditions should complete if fast-forwarding requires it. Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IAutocompleter Methods | Improve this Doc View Source Complete() A custom logic to \"fake\" natural completion of an entity. Declaration void Complete()"
  },
  "api/VRBuilder.Core.IBehaviorCollection.html": {
    "href": "api/VRBuilder.Core.IBehaviorCollection.html",
    "title": "Interface IBehaviorCollection | VR Builder Documentation",
    "keywords": "Interface IBehaviorCollection A collection of IBehavior s of a IStep . Inherited Members IEntity.LifeCycle IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.Parent IDataOwner<IBehaviorCollectionData>.Data IClonable<IBehaviorCollection>.Clone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IBehaviorCollection : IStepChild, IEntity, IDataOwner<IBehaviorCollectionData>, IDataOwner, IClonable<IBehaviorCollection>"
  },
  "api/VRBuilder.Core.IBehaviorCollectionData.html": {
    "href": "api/VRBuilder.Core.IBehaviorCollectionData.html",
    "title": "Interface IBehaviorCollectionData | VR Builder Documentation",
    "keywords": "Interface IBehaviorCollectionData A data that contains a list of IBehavior s. Inherited Members IEntityCollectionData<IBehavior>.GetChildren() IModeData.Mode IData.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IBehaviorCollectionData : IEntityCollectionDataWithMode<IBehavior>, IEntityCollectionData<IBehavior>, IEntityCollectionDataWithMode, IEntityCollectionData, IModeData, IData Properties | Improve this Doc View Source Behaviors A list of IBehavior s. Declaration IList<IBehavior> Behaviors { get; set; } Property Value Type Description System.Collections.Generic.IList < IBehavior >"
  },
  "api/VRBuilder.Core.IChapter.html": {
    "href": "api/VRBuilder.Core.IChapter.html",
    "title": "Interface IChapter | VR Builder Documentation",
    "keywords": "Interface IChapter A chapter is a high-level grouping of several IStep s. Inherited Members IEntity.LifeCycle IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.Parent IDataOwner<IChapterData>.Data IClonable<IChapter>.Clone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IChapter : IEntity, IDataOwner<IChapterData>, IDataOwner, IClonable<IChapter> Properties | Improve this Doc View Source ChapterMetadata Utility data which is used by VR Builder custom editors. Declaration ChapterMetadata ChapterMetadata { get; } Property Value Type Description ChapterMetadata"
  },
  "api/VRBuilder.Core.IChapterData.html": {
    "href": "api/VRBuilder.Core.IChapterData.html",
    "title": "Interface IChapterData | VR Builder Documentation",
    "keywords": "Interface IChapterData The IChapter 's data interface. Inherited Members IEntitySequenceData<IStep>.Current IEntityCollectionData<IStep>.GetChildren() IModeData.Mode IRenameableData.SetName(String) INamedData.Name IData.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IChapterData : IEntitySequenceDataWithMode<IStep>, IEntitySequenceData<IStep>, IEntityCollectionData<IStep>, IEntityCollectionData, IEntitySequenceData, IModeData, IRenameableData, INamedData, IData Properties | Improve this Doc View Source FirstStep The IStep from which the chapter starts. Declaration IStep FirstStep { get; set; } Property Value Type Description IStep | Improve this Doc View Source Steps The list of all IStep s in the chapter. Declaration IList<IStep> Steps { get; set; } Property Value Type Description System.Collections.Generic.IList < IStep >"
  },
  "api/VRBuilder.Core.IClonable-1.html": {
    "href": "api/VRBuilder.Core.IClonable-1.html",
    "title": "Interface IClonable<T> | VR Builder Documentation",
    "keywords": "Interface IClonable<T> Interface for objects that can be duplicated. Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IClonable<T> Type Parameters Name Description T Methods | Improve this Doc View Source Clone() Returns a deep copy of the object. Declaration T Clone() Returns Type Description T"
  },
  "api/VRBuilder.Core.ICompletable.html": {
    "href": "api/VRBuilder.Core.ICompletable.html",
    "title": "Interface ICompletable | VR Builder Documentation",
    "keywords": "Interface ICompletable Base interface for objects which can be completed. Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface ICompletable Properties | Improve this Doc View Source IsCompleted True if this instance is already completed. Declaration bool IsCompleted { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Autocomplete() Forces this instance's completion. Declaration void Autocomplete()"
  },
  "api/VRBuilder.Core.ICompletableEntity.html": {
    "href": "api/VRBuilder.Core.ICompletableEntity.html",
    "title": "Interface ICompletableEntity | VR Builder Documentation",
    "keywords": "Interface ICompletableEntity An IEntity which can be completed. Inherited Members ICompletable.IsCompleted ICompletable.Autocomplete() IEntity.LifeCycle IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.Parent Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface ICompletableEntity : ICompletable, IEntity"
  },
  "api/VRBuilder.Core.IData.html": {
    "href": "api/VRBuilder.Core.IData.html",
    "title": "Interface IData | VR Builder Documentation",
    "keywords": "Interface IData Abstract data structure. Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IData Properties | Improve this Doc View Source Metadata Reference to this object's IMetadata . Declaration [DataMember] Metadata Metadata { get; set; } Property Value Type Description Metadata"
  },
  "api/VRBuilder.Core.IDataOwner.html": {
    "href": "api/VRBuilder.Core.IDataOwner.html",
    "title": "Interface IDataOwner | VR Builder Documentation",
    "keywords": "Interface IDataOwner Abstract holder of data. Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IDataOwner Properties | Improve this Doc View Source Data Abstract data. Declaration IData Data { get; } Property Value Type Description IData"
  },
  "api/VRBuilder.Core.IDataOwner-1.html": {
    "href": "api/VRBuilder.Core.IDataOwner-1.html",
    "title": "Interface IDataOwner<TData> | VR Builder Documentation",
    "keywords": "Interface IDataOwner<TData> Abstract holder of data. Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IDataOwner<out TData> : IDataOwner Type Parameters Name Description TData Properties | Improve this Doc View Source Data Abstract data. Declaration [DataMember] TData Data { get; } Property Value Type Description TData"
  },
  "api/VRBuilder.Core.IDescribable.html": {
    "href": "api/VRBuilder.Core.IDescribable.html",
    "title": "Interface IDescribable | VR Builder Documentation",
    "keywords": "Interface IDescribable Interface for all process entities that have a description. Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IDescribable Properties | Improve this Doc View Source Description Description of this process entity. Declaration string Description { get; set; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Core.IDescribedData.html": {
    "href": "api/VRBuilder.Core.IDescribedData.html",
    "title": "Interface IDescribedData | VR Builder Documentation",
    "keywords": "Interface IDescribedData Data structure with an IStep 's description. Inherited Members IData.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IDescribedData : IData Properties | Improve this Doc View Source Description IStep 's description. Declaration string Description { get; set; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Core.IEntity.html": {
    "href": "api/VRBuilder.Core.IEntity.html",
    "title": "Interface IEntity | VR Builder Documentation",
    "keywords": "Interface IEntity The basic interface for all components of a process: behaviors, conditions, transitions, and so on. Do not implement this interface directly. Use or abstract classes instead. Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IEntity Properties | Improve this Doc View Source LifeCycle The entity's life cycle. Declaration ILifeCycle LifeCycle { get; } Property Value Type Description ILifeCycle | Improve this Doc View Source Parent Entity parent to this entity. Declaration IEntity Parent { get; set; } Property Value Type Description IEntity Methods | Improve this Doc View Source Configure(IMode) Configures the entity according to the given mode . Declaration void Configure(IMode mode) Parameters Type Name Description IMode mode | Improve this Doc View Source GetActivatingProcess() Returns a new instance of a process for the Activating Stage . Declaration IStageProcess GetActivatingProcess() Returns Type Description IStageProcess | Improve this Doc View Source GetActiveProcess() Returns a new instance of a process for the Active Stage . Declaration IStageProcess GetActiveProcess() Returns Type Description IStageProcess | Improve this Doc View Source GetDeactivatingProcess() Returns a new instance of a process for the Deactivating Stage . Declaration IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess | Improve this Doc View Source Update() Called every frame during the Unity's update. Declaration void Update()"
  },
  "api/VRBuilder.Core.ILifeCycle.html": {
    "href": "api/VRBuilder.Core.ILifeCycle.html",
    "title": "Interface ILifeCycle | VR Builder Documentation",
    "keywords": "Interface ILifeCycle A life cycle of an entity. It handles transition between four stages: Inactive, Activating, Active, and Deactivating. Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface ILifeCycle Properties | Improve this Doc View Source Stage The current stage. Declaration Stage Stage { get; } Property Value Type Description Stage Methods | Improve this Doc View Source Activate() Enters Activating stage if was deactivating. Declaration void Activate() | Improve this Doc View Source Deactivate() Enters Deactivating stage if was Active. If was Activating, will start deactivating as soon as it enters Active stage. Declaration void Deactivate() | Improve this Doc View Source MarkToFastForward() Marks all stages to fast-forward until it reaches Inactive stage. Declaration void MarkToFastForward() | Improve this Doc View Source MarkToFastForwardStage(Stage) Marks the given stage to fast-forward. Declaration void MarkToFastForwardStage(Stage stage) Parameters Type Name Description Stage stage | Improve this Doc View Source Update() This method should be called every frame. Declaration void Update() Events | Improve this Doc View Source StageChanged An event which is fired when the current stage changes. Declaration event EventHandler<ActivationStateChangedEventArgs> StageChanged Event Type Type Description System.EventHandler < ActivationStateChangedEventArgs >"
  },
  "api/VRBuilder.Core.ILockablePropertiesProvider.html": {
    "href": "api/VRBuilder.Core.ILockablePropertiesProvider.html",
    "title": "Interface ILockablePropertiesProvider | VR Builder Documentation",
    "keywords": "Interface ILockablePropertiesProvider This interface is used to allow entities, for example Transition or VRBuilder.Core.Conditions to provide properties which should be locked. Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface ILockablePropertiesProvider Methods | Improve this Doc View Source GetLockableProperties() Returns all LockableProperties this provider requires. Declaration IEnumerable<LockablePropertyData> GetLockableProperties() Returns Type Description System.Collections.Generic.IEnumerable < LockablePropertyData >"
  },
  "api/VRBuilder.Core.IMetadata.html": {
    "href": "api/VRBuilder.Core.IMetadata.html",
    "title": "Interface IMetadata | VR Builder Documentation",
    "keywords": "Interface IMetadata Utility data which is used by the VR Builder SDK custom editors. Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IMetadata"
  },
  "api/VRBuilder.Core.INamedData.html": {
    "href": "api/VRBuilder.Core.INamedData.html",
    "title": "Interface INamedData | VR Builder Documentation",
    "keywords": "Interface INamedData Data structure with an IStep 's name. Inherited Members IData.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface INamedData : IData Properties | Improve this Doc View Source Name Name of the entity. Declaration string Name { get; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Core.Input.html": {
    "href": "api/VRBuilder.Core.Input.html",
    "title": "Namespace VRBuilder.Core.Input | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Input Classes InputActionListener Base class for InputActionListener. InputController Central controller for input via the new Input System using C# events. InputController.InputEventArgs InputController.InputFocusEventArgs Structs InputController.ListenerInfo Information of the listener registered. Interfaces IInputActionListener Allows to prioritize input actions. IInputFocus Can be used to mark a GameObject focusable."
  },
  "api/VRBuilder.Core.Input.IInputActionListener.html": {
    "href": "api/VRBuilder.Core.Input.IInputActionListener.html",
    "title": "Interface IInputActionListener | VR Builder Documentation",
    "keywords": "Interface IInputActionListener Allows to prioritize input actions. Namespace : VRBuilder.Core.Input Assembly : VRBuilder.Core.dll Syntax public interface IInputActionListener Properties | Improve this Doc View Source IgnoreFocus If this listener ignores a set focus, it will also be called when focus is active. Declaration bool IgnoreFocus { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Priority Priority of this input. Declaration int Priority { get; } Property Value Type Description System.Int32"
  },
  "api/VRBuilder.Core.Input.IInputFocus.html": {
    "href": "api/VRBuilder.Core.Input.IInputFocus.html",
    "title": "Interface IInputFocus | VR Builder Documentation",
    "keywords": "Interface IInputFocus Can be used to mark a GameObject focusable. Namespace : VRBuilder.Core.Input Assembly : VRBuilder.Core.dll Syntax public interface IInputFocus Properties | Improve this Doc View Source ActionMapName If this is not null the action map with the given name will be set. Declaration string ActionMapName { get; } Property Value Type Description System.String | Improve this Doc View Source CanBeFocused Return if this object can be focused. Declaration bool CanBeFocused { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source OnFocus() Will be called when this object is focused. Declaration void OnFocus() | Improve this Doc View Source OnReleaseFocus() Will be called when the object's focus is released. Declaration void OnReleaseFocus()"
  },
  "api/VRBuilder.Core.Input.InputActionListener.html": {
    "href": "api/VRBuilder.Core.Input.InputActionListener.html",
    "title": "Class InputActionListener | VR Builder Documentation",
    "keywords": "Class InputActionListener Base class for InputActionListener. Inheritance System.Object InputActionListener SpectatorController Implements IInputActionListener Namespace : VRBuilder.Core.Input Assembly : VRBuilder.Core.dll Syntax public abstract class InputActionListener : MonoBehaviour, IInputActionListener Properties | Improve this Doc View Source IgnoreFocus Declaration public virtual bool IgnoreFocus { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Priority Declaration public virtual int Priority { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source RegisterInputEvent(Action<InputController.InputEventArgs>) Registers the given method as input event, the name of the method will be the event name. Declaration protected virtual void RegisterInputEvent(Action<InputController.InputEventArgs> action) Parameters Type Name Description System.Action < InputController.InputEventArgs > action | Improve this Doc View Source UnregisterInputEvent(Action<InputController.InputEventArgs>) Unregisters the given method as input event, the name of the method will be the event name. Declaration protected virtual void UnregisterInputEvent(Action<InputController.InputEventArgs> action) Parameters Type Name Description System.Action < InputController.InputEventArgs > action Implements IInputActionListener"
  },
  "api/VRBuilder.Core.Input.InputController.html": {
    "href": "api/VRBuilder.Core.Input.InputController.html",
    "title": "Class InputController | VR Builder Documentation",
    "keywords": "Class InputController Central controller for input via the new Input System using C# events. Inheritance System.Object UnitySceneSingleton < InputController > InputController Inherited Members UnitySceneSingleton<InputController>.ConcreteType UnitySceneSingleton<InputController>.Instance UnitySceneSingleton<InputController>.Exists UnitySceneSingleton<InputController>.GetName() UnitySceneSingleton<InputController>.OnDestroy() Namespace : VRBuilder.Core.Input Assembly : VRBuilder.Core.dll Syntax public abstract class InputController : UnitySceneSingleton<InputController> Fields | Improve this Doc View Source OnFocused Will be called when an object is focused. Declaration public EventHandler<InputController.InputFocusEventArgs> OnFocused Field Value Type Description System.EventHandler < InputController.InputFocusEventArgs > | Improve this Doc View Source OnFocusReleased Will be called when the focus on an object is released. Declaration public EventHandler<InputController.InputFocusEventArgs> OnFocusReleased Field Value Type Description System.EventHandler < InputController.InputFocusEventArgs > Properties | Improve this Doc View Source CurrentInputFocus Currently focused object. Declaration protected IInputFocus CurrentInputFocus { get; set; } Property Value Type Description IInputFocus | Improve this Doc View Source ListenerDictionary Registered listener. Declaration protected Dictionary<string, List<InputController.ListenerInfo>> ListenerDictionary { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Collections.Generic.List < InputController.ListenerInfo >> Methods | Improve this Doc View Source Awake() Declaration protected override void Awake() Overrides VRBuilder.Unity.UnitySceneSingleton<VRBuilder.Core.Input.InputController>.Awake() | Improve this Doc View Source Focus(IInputFocus) Focus the given input focus target. Declaration public abstract void Focus(IInputFocus target) Parameters Type Name Description IInputFocus target | Improve this Doc View Source RegisterEvent(IInputActionListener, Action<InputController.InputEventArgs>) Registers an action event to input. Declaration public void RegisterEvent(IInputActionListener listener, Action<InputController.InputEventArgs> action) Parameters Type Name Description IInputActionListener listener The listener owning the action. System.Action < InputController.InputEventArgs > action The action method which will be called. | Improve this Doc View Source ReleaseFocus() Releases the focus, if possible. Declaration public abstract void ReleaseFocus() | Improve this Doc View Source Reset() Declaration protected virtual void Reset() | Improve this Doc View Source Setup() will be called on Reset (in editor time) and Awake (in play mode). Intended to setup the input controller properly. Declaration protected abstract void Setup() | Improve this Doc View Source UnregisterEvent(IInputActionListener, Action<InputController.InputEventArgs>) Unregisters the given listeners action. Declaration public void UnregisterEvent(IInputActionListener listener, Action<InputController.InputEventArgs> action) Parameters Type Name Description IInputActionListener listener System.Action < InputController.InputEventArgs > action"
  },
  "api/VRBuilder.Core.Input.InputController.InputEventArgs.html": {
    "href": "api/VRBuilder.Core.Input.InputController.InputEventArgs.html",
    "title": "Class InputController.InputEventArgs | VR Builder Documentation",
    "keywords": "Class InputController.InputEventArgs Inheritance System.Object System.EventArgs InputController.InputEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Input Assembly : VRBuilder.Core.dll Syntax public class InputEventArgs : EventArgs Constructors | Improve this Doc View Source InputEventArgs(Object) Declaration public InputEventArgs(object context) Parameters Type Name Description System.Object context Fields | Improve this Doc View Source Context Declaration public readonly object Context Field Value Type Description System.Object"
  },
  "api/VRBuilder.Core.Input.InputController.InputFocusEventArgs.html": {
    "href": "api/VRBuilder.Core.Input.InputController.InputFocusEventArgs.html",
    "title": "Class InputController.InputFocusEventArgs | VR Builder Documentation",
    "keywords": "Class InputController.InputFocusEventArgs Inheritance System.Object System.EventArgs InputController.InputFocusEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Input Assembly : VRBuilder.Core.dll Syntax public class InputFocusEventArgs : EventArgs Constructors | Improve this Doc View Source InputFocusEventArgs(IInputFocus) Declaration public InputFocusEventArgs(IInputFocus inputFocus) Parameters Type Name Description IInputFocus inputFocus Fields | Improve this Doc View Source InputFocus Declaration public readonly IInputFocus InputFocus Field Value Type Description IInputFocus"
  },
  "api/VRBuilder.Core.Input.InputController.ListenerInfo.html": {
    "href": "api/VRBuilder.Core.Input.InputController.ListenerInfo.html",
    "title": "Struct InputController.ListenerInfo | VR Builder Documentation",
    "keywords": "Struct InputController.ListenerInfo Information of the listener registered. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : VRBuilder.Core.Input Assembly : VRBuilder.Core.dll Syntax protected struct ListenerInfo Constructors | Improve this Doc View Source ListenerInfo(IInputActionListener, Action<InputController.InputEventArgs>) Declaration public ListenerInfo(IInputActionListener actionListener, Action<InputController.InputEventArgs> action) Parameters Type Name Description IInputActionListener actionListener System.Action < InputController.InputEventArgs > action Fields | Improve this Doc View Source Action Declaration public readonly Action<InputController.InputEventArgs> Action Field Value Type Description System.Action < InputController.InputEventArgs > | Improve this Doc View Source ActionListener Declaration public readonly IInputActionListener ActionListener Field Value Type Description IInputActionListener"
  },
  "api/VRBuilder.Core.InstantProcess-1.html": {
    "href": "api/VRBuilder.Core.InstantProcess-1.html",
    "title": "Class InstantProcess<TData> | VR Builder Documentation",
    "keywords": "Class InstantProcess<TData> A convenience class for processes that happen instantly. You only have to implement the Start() method. Inheritance System.Object StageProcess <TData> InstantProcess<TData> Implements IStageProcess Inherited Members StageProcess<TData>.Data StageProcess<TData>.Outer System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public abstract class InstantProcess<TData> : StageProcess<TData>, IStageProcess where TData : class, IData Type Parameters Name Description TData Constructors | Improve this Doc View Source InstantProcess(TData) Declaration protected InstantProcess(TData data) Parameters Type Name Description TData data Methods | Improve this Doc View Source End() Declaration public override void End() Overrides VRBuilder.Core.StageProcess<TData>.End() | Improve this Doc View Source FastForward() Declaration public override void FastForward() Overrides VRBuilder.Core.StageProcess<TData>.FastForward() | Improve this Doc View Source Start() Declaration public abstract override void Start() Overrides VRBuilder.Core.StageProcess<TData>.Start() | Improve this Doc View Source Update() Declaration public override IEnumerator Update() Returns Type Description System.Collections.IEnumerator Overrides VRBuilder.Core.StageProcess<TData>.Update() Implements IStageProcess"
  },
  "api/VRBuilder.Core.IO.DefaultFileSystem.html": {
    "href": "api/VRBuilder.Core.IO.DefaultFileSystem.html",
    "title": "Class DefaultFileSystem | VR Builder Documentation",
    "keywords": "Class DefaultFileSystem Default implementation of IPlatformFileSystem based in 'System.IO'. Inheritance System.Object DefaultFileSystem Implements IPlatformFileSystem Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.IO Assembly : VRBuilder.Core.dll Syntax public class DefaultFileSystem : IPlatformFileSystem Remarks It works out of the box for most of the Unity's supported platforms. Constructors | Improve this Doc View Source DefaultFileSystem(String, String) Declaration public DefaultFileSystem(string streamingAssetsPath, string persistentDataPath) Parameters Type Name Description System.String streamingAssetsPath System.String persistentDataPath Fields | Improve this Doc View Source PersistentDataPath The path to the platform's persistent data directory (Read Only). Declaration protected readonly string PersistentDataPath Field Value Type Description System.String | Improve this Doc View Source StreamingAssetsPath The path to the platform's StreamingAssets folder (Read Only). Declaration protected readonly string StreamingAssetsPath Field Value Type Description System.String Methods | Improve this Doc View Source BuildPersistentDataPath(String) Builds a directory from given filePath . Declaration protected virtual string BuildPersistentDataPath(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.String The created directory absolute path. Remarks filePath must be relative to the platform persistent data folder. | Improve this Doc View Source Exists(String) Declaration public virtual async Task<bool> Exists(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source FetchStreamingAssetsFilesAt(String, String) Declaration public virtual IEnumerable<string> FetchStreamingAssetsFilesAt(string path, string searchPattern) Parameters Type Name Description System.String path System.String searchPattern Returns Type Description System.Collections.Generic.IEnumerable < System.String > Remarks The following wildcard specifiers are permitted in searchPattern : Wildcard specifier Matches (asterisk) Zero or more characters in that position. ? (question mark) Zero or one character in that position. | Improve this Doc View Source FileExistsInPersistentData(String) Returns true if given filePath contains the name of an existing file under the platform persistent data folder; otherwise, false. Declaration protected virtual async Task<bool> FileExistsInPersistentData(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Boolean > Remarks filePath must be relative to the platform persistent data folder. | Improve this Doc View Source FileExistsInStreamingAssets(String) Returns true if given filePath contains the name of an existing file under the StreamingAssets folder; otherwise, false. Declaration protected virtual async Task<bool> FileExistsInStreamingAssets(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Boolean > Remarks filePath must be relative to the StreamingAssets folder. | Improve this Doc View Source NormalizePath(String) Normalizes path to platform specific. Declaration protected virtual string NormalizePath(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.String | Improve this Doc View Source Read(String) Declaration public virtual async Task<byte[]> Read(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Byte []> | Improve this Doc View Source ReadAllText(String) Declaration public virtual async Task<string> ReadAllText(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.String > | Improve this Doc View Source ReadFromPersistentData(String) Loads a file stored at filePath . Returns a FileNotFoundException if file does not exist. Declaration protected virtual async Task<byte[]> ReadFromPersistentData(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Byte []> The contents of the file into a byte array. Remarks filePath must be relative to the platform persistent data folder. | Improve this Doc View Source ReadFromStreamingAssets(String) Loads a file stored at filePath . Returns a FileNotFoundException if file does not exist. Declaration protected virtual async Task<byte[]> ReadFromStreamingAssets(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Byte []> The contents of the file into a byte array. Remarks filePath must be relative to the StreamingAssets folder. | Improve this Doc View Source Write(String, Byte[]) Declaration public virtual async Task<bool> Write(string filePath, byte[] fileData) Parameters Type Name Description System.String filePath System.Byte [] fileData Returns Type Description System.Threading.Tasks.Task < System.Boolean > Implements IPlatformFileSystem"
  },
  "api/VRBuilder.Core.IO.FileManager.html": {
    "href": "api/VRBuilder.Core.IO.FileManager.html",
    "title": "Class FileManager | VR Builder Documentation",
    "keywords": "Class FileManager Handles runtime operations that allow reading and writing to files in Unity. Inheritance System.Object FileManager Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.IO Assembly : VRBuilder.Core.dll Syntax public static class FileManager Methods | Improve this Doc View Source Exists(String) Returns true if given filePath contains the name of an existing file under the StreamingAssets or platform persistent data folder; otherwise, false. Declaration public static async Task<bool> Exists(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Boolean > Remarks filePath must be relative to the StreamingAssets or the platform persistent data folder. | Improve this Doc View Source FetchStreamingAssetsFilesAt(String, String) Returns the names of files (including their paths) that match the specified search pattern in the specified directory relative to the Streaming Assets folder. Declaration public static IEnumerable<string> FetchStreamingAssetsFilesAt(string path, string searchPattern) Parameters Type Name Description System.String path The relative path to the Streaming Assets folder. This string is not case-sensitive. System.String searchPattern The search string to match against the names of files in path . Depending on the platform, this parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see implementations of IPlatformFileSystem ), but doesn't support regular expressions. Returns Type Description System.Collections.Generic.IEnumerable < System.String > | Improve this Doc View Source Read(String) Loads a file stored at filePath . Declaration public static async Task<byte[]> Read(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Byte []> The contents of the file into a byte array. Remarks filePath must be relative to the StreamingAssets or the persistent data folder. Exceptions Type Condition System.ArgumentException Exception thrown if filePath is invalid. System.IO.FileNotFoundException Exception thrown if the file does not exist. | Improve this Doc View Source ReadAllText(String) Loads a file stored at filePath . Declaration public static async Task<string> ReadAllText(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.String > Returns a string with the content of the file. Remarks filePath must be relative to the StreamingAssets or the persistent data folder. Exceptions Type Condition System.ArgumentException Exception thrown if filePath is invalid. System.IO.FileNotFoundException Exception thrown if the file does not exist. | Improve this Doc View Source Write(String, Byte[]) Saves given fileData in provided filePath . Declaration public static async Task<bool> Write(string filePath, byte[] fileData) Parameters Type Name Description System.String filePath System.Byte [] fileData Returns Type Description System.Threading.Tasks.Task < System.Boolean > Returns true if fileData could be saved successfully; otherwise, false. Remarks filePath must be relative to ."
  },
  "api/VRBuilder.Core.IO.html": {
    "href": "api/VRBuilder.Core.IO.html",
    "title": "Namespace VRBuilder.Core.IO | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.IO Classes DefaultFileSystem Default implementation of IPlatformFileSystem based in 'System.IO'. FileManager Handles runtime operations that allow reading and writing to files in Unity. ProcessAssetManifest Provides instructions on how a process asset should be loaded. SingleFileProcessAssetStrategy Process asset strategy that saves the process as a single file. SplitChaptersProcessAssetStrategy Asset strategy that saves the process as a list of chapter, then each chapter in a separate file. A manifest file is created as well. Interfaces IPlatformFileSystem Interface with basic platform operations for reading and saving files in Unity. IProcessAssetManifest Provides instructions on how a process asset should be loaded. IProcessAssetStrategy Defines how a process asset should be saved or loaded."
  },
  "api/VRBuilder.Core.IO.IPlatformFileSystem.html": {
    "href": "api/VRBuilder.Core.IO.IPlatformFileSystem.html",
    "title": "Interface IPlatformFileSystem | VR Builder Documentation",
    "keywords": "Interface IPlatformFileSystem Interface with basic platform operations for reading and saving files in Unity. Namespace : VRBuilder.Core.IO Assembly : VRBuilder.Core.dll Syntax public interface IPlatformFileSystem Remarks Operations are done for the StreamingAssets and platform persistent data folders. Methods | Improve this Doc View Source Exists(String) Returns true if given filePath contains the name of an existing file under the StreamingAssets or platform persistent data folder; otherwise, false. Declaration Task<bool> Exists(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Boolean > Remarks filePath must be relative to the StreamingAssets or the platform persistent data folder. | Improve this Doc View Source FetchStreamingAssetsFilesAt(String, String) Returns the names of files (including their paths) that match the specified search pattern in the specified directory relative to the Streaming Assets folder. Declaration IEnumerable<string> FetchStreamingAssetsFilesAt(string path, string searchPattern) Parameters Type Name Description System.String path The relative path to the Streaming Assets folder. This string is not case-sensitive. System.String searchPattern The search string to match against the names of files in path . Depending on the platform, this parameter can contain a combination of valid literal path and wildcard (* and ?) characters (see Remarks), but doesn't support regular expressions. Returns Type Description System.Collections.Generic.IEnumerable < System.String > | Improve this Doc View Source Read(String) Loads a file stored at filePath . Declaration Task<byte[]> Read(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Byte []> The contents of the file into a byte array. Remarks filePath must be relative to the StreamingAssets or the persistent data folder. Exceptions Type Condition System.IO.FileNotFoundException Exception thrown if the file does not exist. | Improve this Doc View Source ReadAllText(String) Loads a file stored at filePath . Declaration Task<string> ReadAllText(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.String > Returns a string with the content of the file. Remarks filePath must be relative to the StreamingAssets or the persistent data folder. Exceptions Type Condition System.IO.FileNotFoundException Exception thrown if the file does not exist. | Improve this Doc View Source Write(String, Byte[]) Saves given fileData in provided filePath . Declaration Task<bool> Write(string filePath, byte[] fileData) Parameters Type Name Description System.String filePath System.Byte [] fileData Returns Type Description System.Threading.Tasks.Task < System.Boolean > Returns true if fileData could be saved successfully; otherwise, false. Remarks filePath must be relative to ."
  },
  "api/VRBuilder.Core.IO.IProcessAssetManifest.html": {
    "href": "api/VRBuilder.Core.IO.IProcessAssetManifest.html",
    "title": "Interface IProcessAssetManifest | VR Builder Documentation",
    "keywords": "Interface IProcessAssetManifest Provides instructions on how a process asset should be loaded. Namespace : VRBuilder.Core.IO Assembly : VRBuilder.Core.dll Syntax public interface IProcessAssetManifest Properties | Improve this Doc View Source AdditionalFileNames Names of files containing additional data. Declaration IEnumerable<string> AdditionalFileNames { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > | Improve this Doc View Source AssetStrategyTypeName Full type name of the asset strategy used to load the process. It should be a type of IProcessAssetStrategy . Declaration string AssetStrategyTypeName { get; set; } Property Value Type Description System.String | Improve this Doc View Source ProcessFileName Name of the main process file. Declaration string ProcessFileName { get; set; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Core.IO.IProcessAssetStrategy.html": {
    "href": "api/VRBuilder.Core.IO.IProcessAssetStrategy.html",
    "title": "Interface IProcessAssetStrategy | VR Builder Documentation",
    "keywords": "Interface IProcessAssetStrategy Defines how a process asset should be saved or loaded. Namespace : VRBuilder.Core.IO Assembly : VRBuilder.Core.dll Syntax public interface IProcessAssetStrategy Properties | Improve this Doc View Source CreateManifest If true, a manifest file will be created. The file will be read first when loading the process. Declaration bool CreateManifest { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source CreateSerializedProcessAssets(IProcess, IProcessSerializer) Returns a number of named byte arrays containing the process data. The first key is the process file, subsequent ones are additional data. Declaration IDictionary<string, byte[]> CreateSerializedProcessAssets(IProcess process, IProcessSerializer serializer) Parameters Type Name Description IProcess process IProcessSerializer serializer Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Byte []> | Improve this Doc View Source GetProcessFromSerializedData(Byte[], IEnumerable<Byte[]>, IProcessSerializer) Attempts to build a process from the provided serialized data. Declaration IProcess GetProcessFromSerializedData(byte[] processData, IEnumerable<byte[]> additionalData, IProcessSerializer serializer) Parameters Type Name Description System.Byte [] processData System.Collections.Generic.IEnumerable < System.Byte []> additionalData IProcessSerializer serializer Returns Type Description IProcess"
  },
  "api/VRBuilder.Core.IO.ProcessAssetManifest.html": {
    "href": "api/VRBuilder.Core.IO.ProcessAssetManifest.html",
    "title": "Class ProcessAssetManifest | VR Builder Documentation",
    "keywords": "Class ProcessAssetManifest Provides instructions on how a process asset should be loaded. Inheritance System.Object ProcessAssetManifest Implements IProcessAssetManifest Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.IO Assembly : VRBuilder.Core.dll Syntax [Serializable] public class ProcessAssetManifest : IProcessAssetManifest Properties | Improve this Doc View Source AdditionalFileNames Declaration [DataMember] public IEnumerable<string> AdditionalFileNames { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > | Improve this Doc View Source AssetStrategyTypeName Declaration [DataMember] public string AssetStrategyTypeName { get; set; } Property Value Type Description System.String | Improve this Doc View Source ProcessFileName Declaration [DataMember] public string ProcessFileName { get; set; } Property Value Type Description System.String Implements IProcessAssetManifest"
  },
  "api/VRBuilder.Core.IO.SingleFileProcessAssetStrategy.html": {
    "href": "api/VRBuilder.Core.IO.SingleFileProcessAssetStrategy.html",
    "title": "Class SingleFileProcessAssetStrategy | VR Builder Documentation",
    "keywords": "Class SingleFileProcessAssetStrategy Process asset strategy that saves the process as a single file. Inheritance System.Object SingleFileProcessAssetStrategy Implements IProcessAssetStrategy Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.IO Assembly : VRBuilder.Core.dll Syntax public class SingleFileProcessAssetStrategy : IProcessAssetStrategy Properties | Improve this Doc View Source CreateManifest Declaration public bool CreateManifest { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source CreateSerializedProcessAssets(IProcess, IProcessSerializer) Declaration public IDictionary<string, byte[]> CreateSerializedProcessAssets(IProcess process, IProcessSerializer serializer) Parameters Type Name Description IProcess process IProcessSerializer serializer Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Byte []> | Improve this Doc View Source GetProcessFromSerializedData(Byte[], IEnumerable<Byte[]>, IProcessSerializer) Declaration public IProcess GetProcessFromSerializedData(byte[] processData, IEnumerable<byte[]> additionalData, IProcessSerializer serializer) Parameters Type Name Description System.Byte [] processData System.Collections.Generic.IEnumerable < System.Byte []> additionalData IProcessSerializer serializer Returns Type Description IProcess Implements IProcessAssetStrategy"
  },
  "api/VRBuilder.Core.IO.SplitChaptersProcessAssetStrategy.html": {
    "href": "api/VRBuilder.Core.IO.SplitChaptersProcessAssetStrategy.html",
    "title": "Class SplitChaptersProcessAssetStrategy | VR Builder Documentation",
    "keywords": "Class SplitChaptersProcessAssetStrategy Asset strategy that saves the process as a list of chapter, then each chapter in a separate file. A manifest file is created as well. Inheritance System.Object SplitChaptersProcessAssetStrategy Implements IProcessAssetStrategy Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.IO Assembly : VRBuilder.Core.dll Syntax public class SplitChaptersProcessAssetStrategy : IProcessAssetStrategy Properties | Improve this Doc View Source CreateManifest Declaration public bool CreateManifest { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source CreateSerializedProcessAssets(IProcess, IProcessSerializer) Declaration public IDictionary<string, byte[]> CreateSerializedProcessAssets(IProcess process, IProcessSerializer serializer) Parameters Type Name Description IProcess process IProcessSerializer serializer Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Byte []> | Improve this Doc View Source GetProcessFromSerializedData(Byte[], IEnumerable<Byte[]>, IProcessSerializer) Declaration public IProcess GetProcessFromSerializedData(byte[] processData, IEnumerable<byte[]> additionalData, IProcessSerializer serializer) Parameters Type Name Description System.Byte [] processData System.Collections.Generic.IEnumerable < System.Byte []> additionalData IProcessSerializer serializer Returns Type Description IProcess Implements IProcessAssetStrategy"
  },
  "api/VRBuilder.Core.IProcess.html": {
    "href": "api/VRBuilder.Core.IProcess.html",
    "title": "Interface IProcess | VR Builder Documentation",
    "keywords": "Interface IProcess Interface of a process. Inherited Members IEntity.LifeCycle IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.Parent IDataOwner<IProcessData>.Data IClonable<IProcess>.Clone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IProcess : IEntity, IDataOwner<IProcessData>, IDataOwner, IClonable<IProcess> Properties | Improve this Doc View Source ProcessMetadata Utility data used by editor. Declaration ProcessMetadata ProcessMetadata { get; } Property Value Type Description ProcessMetadata"
  },
  "api/VRBuilder.Core.IProcessData.html": {
    "href": "api/VRBuilder.Core.IProcessData.html",
    "title": "Interface IProcessData | VR Builder Documentation",
    "keywords": "Interface IProcessData The data class for a IProcess . Inherited Members IEntityNonLinearSequenceDataWithMode<IChapter>.OverrideNext IEntitySequenceData<IChapter>.Current IEntityCollectionData<IChapter>.GetChildren() IModeData.Mode IRenameableData.SetName(String) INamedData.Name IData.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IProcessData : IEntityNonLinearSequenceDataWithMode<IChapter>, IEntitySequenceDataWithMode<IChapter>, IEntitySequenceData<IChapter>, IEntityCollectionData<IChapter>, IEntityCollectionData, IEntitySequenceData, IModeData, IRenameableData, INamedData, IData Properties | Improve this Doc View Source Chapters The list of the IChapter s. Declaration IList<IChapter> Chapters { get; set; } Property Value Type Description System.Collections.Generic.IList < IChapter > | Improve this Doc View Source FirstChapter The IChapter to start execution from. Declaration IChapter FirstChapter { get; } Property Value Type Description IChapter"
  },
  "api/VRBuilder.Core.IRenameableData.html": {
    "href": "api/VRBuilder.Core.IRenameableData.html",
    "title": "Interface IRenameableData | VR Builder Documentation",
    "keywords": "Interface IRenameableData Interface for data that can be renamed. Inherited Members INamedData.Name IData.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IRenameableData : INamedData, IData Methods | Improve this Doc View Source SetName(String) Set the new name. Declaration void SetName(string name) Parameters Type Name Description System.String name"
  },
  "api/VRBuilder.Core.IStageProcess.html": {
    "href": "api/VRBuilder.Core.IStageProcess.html",
    "title": "Interface IStageProcess | VR Builder Documentation",
    "keywords": "Interface IStageProcess A process for an IEntity 's Stage . Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IStageProcess Methods | Improve this Doc View Source End() This method is invoked immediately after the Update() was iterated over completely, or after the FastForward() was called. The invocation is guaranteed. Use it for deinitialization. Declaration void End() | Improve this Doc View Source FastForward() This method is called when the process was not completed yet. It must \"fake\" normal execution of the process and handle the cases when the Update() is not iterated over completely. Declaration void FastForward() | Improve this Doc View Source Start() This method is invoked immediately when entity enters the stage. The invocation is guaranteed. Use it for initialization. Declaration void Start() | Improve this Doc View Source Update() This method will be iterated over while the entity is in this stage, one iteration step per frame, starting from the second frame. Declaration IEnumerator Update() Returns Type Description System.Collections.IEnumerator"
  },
  "api/VRBuilder.Core.IStep.html": {
    "href": "api/VRBuilder.Core.IStep.html",
    "title": "Interface IStep | VR Builder Documentation",
    "keywords": "Interface IStep Interface for a process step. Inherited Members IDataOwner<IStepData>.Data IEntity.LifeCycle IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.Parent IClonable<IStep>.Clone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IStep : IDataOwner<IStepData>, IDataOwner, IEntity, IClonable<IStep> Properties | Improve this Doc View Source StepMetadata Step's metadata. Declaration StepMetadata StepMetadata { get; set; } Property Value Type Description StepMetadata"
  },
  "api/VRBuilder.Core.IStepChild.html": {
    "href": "api/VRBuilder.Core.IStepChild.html",
    "title": "Interface IStepChild | VR Builder Documentation",
    "keywords": "Interface IStepChild Abstract data structure. Usually works along with IDataOwner . Inherited Members IEntity.LifeCycle IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.Parent Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IStepChild : IEntity"
  },
  "api/VRBuilder.Core.IStepData.html": {
    "href": "api/VRBuilder.Core.IStepData.html",
    "title": "Interface IStepData | VR Builder Documentation",
    "keywords": "Interface IStepData The interface for a step's data. Inherited Members IRenameableData.SetName(String) INamedData.Name IDescribedData.Description IEntitySequenceData<IStepChild>.Current IEntityCollectionData<IStepChild>.GetChildren() IModeData.Mode IData.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IStepData : IRenameableData, INamedData, IDescribedData, IEntitySequenceDataWithMode<IStepChild>, IEntitySequenceData<IStepChild>, IEntityCollectionData<IStepChild>, IEntityCollectionData, IEntitySequenceData, IModeData, IData Properties | Improve this Doc View Source Behaviors The list of the step's behaviors. Declaration IBehaviorCollection Behaviors { get; set; } Property Value Type Description IBehaviorCollection | Improve this Doc View Source Transitions The list of the step's transitions. Declaration ITransitionCollection Transitions { get; set; } Property Value Type Description ITransitionCollection"
  },
  "api/VRBuilder.Core.ITransition.html": {
    "href": "api/VRBuilder.Core.ITransition.html",
    "title": "Interface ITransition | VR Builder Documentation",
    "keywords": "Interface ITransition An interface for a transition that determines when a IStep is completed and what is the next IStep . Inherited Members IEntity.LifeCycle IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.Parent ICompletable.IsCompleted ICompletable.Autocomplete() IDataOwner<ITransitionData>.Data IClonable<ITransition>.Clone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface ITransition : IEntity, ICompletable, IDataOwner<ITransitionData>, IDataOwner, IClonable<ITransition>"
  },
  "api/VRBuilder.Core.ITransitionCollection.html": {
    "href": "api/VRBuilder.Core.ITransitionCollection.html",
    "title": "Interface ITransitionCollection | VR Builder Documentation",
    "keywords": "Interface ITransitionCollection Interface for a collection of transitions. Inherited Members IEntity.LifeCycle IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.Parent IDataOwner<ITransitionCollectionData>.Data IClonable<ITransitionCollection>.Clone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface ITransitionCollection : IStepChild, IEntity, IDataOwner<ITransitionCollectionData>, IDataOwner, IClonable<ITransitionCollection>"
  },
  "api/VRBuilder.Core.ITransitionCollectionData.html": {
    "href": "api/VRBuilder.Core.ITransitionCollectionData.html",
    "title": "Interface ITransitionCollectionData | VR Builder Documentation",
    "keywords": "Interface ITransitionCollectionData The interface of a data with a list of ITransition s. Inherited Members IEntityCollectionData<ITransition>.GetChildren() IModeData.Mode IData.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface ITransitionCollectionData : IEntityCollectionDataWithMode<ITransition>, IEntityCollectionData<ITransition>, IEntityCollectionDataWithMode, IEntityCollectionData, IModeData, IData Properties | Improve this Doc View Source Transitions A list of ITransition s. Declaration IList<ITransition> Transitions { get; set; } Property Value Type Description System.Collections.Generic.IList < ITransition >"
  },
  "api/VRBuilder.Core.ITransitionData.html": {
    "href": "api/VRBuilder.Core.ITransitionData.html",
    "title": "Interface ITransitionData | VR Builder Documentation",
    "keywords": "Interface ITransitionData Inherited Members IEntityCollectionData<ICondition>.GetChildren() IModeData.Mode ICompletableData.IsCompleted INamedData.Name IData.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface ITransitionData : IEntityCollectionDataWithMode<ICondition>, IEntityCollectionData<ICondition>, IEntityCollectionDataWithMode, IEntityCollectionData, IModeData, ICompletableData, INamedData, IData Properties | Improve this Doc View Source Conditions A list of conditions. When you complete all of them, this transition will trigger. Declaration IList<ICondition> Conditions { get; set; } Property Value Type Description System.Collections.Generic.IList < ICondition > | Improve this Doc View Source TargetStep The next step to take after this transition triggers. Declaration IStep TargetStep { get; set; } Property Value Type Description IStep"
  },
  "api/VRBuilder.Core.LifeCycle.html": {
    "href": "api/VRBuilder.Core.LifeCycle.html",
    "title": "Class LifeCycle | VR Builder Documentation",
    "keywords": "Class LifeCycle The implementation of the ILifeCycle interface. Inheritance System.Object LifeCycle Implements ILifeCycle Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public sealed class LifeCycle : ILifeCycle Constructors | Improve this Doc View Source LifeCycle(IEntity) Declaration public LifeCycle(IEntity owner) Parameters Type Name Description IEntity owner Properties | Improve this Doc View Source Stage Declaration public Stage Stage { get; } Property Value Type Description Stage Methods | Improve this Doc View Source Activate() Declaration public void Activate() | Improve this Doc View Source Deactivate() Declaration public void Deactivate() | Improve this Doc View Source MarkToFastForward() Declaration public void MarkToFastForward() | Improve this Doc View Source MarkToFastForwardStage(Stage) Declaration public void MarkToFastForwardStage(Stage stage) Parameters Type Name Description Stage stage | Improve this Doc View Source Update() Declaration public void Update() Events | Improve this Doc View Source StageChanged Declaration public event EventHandler<ActivationStateChangedEventArgs> StageChanged Event Type Type Description System.EventHandler < ActivationStateChangedEventArgs > Implements ILifeCycle"
  },
  "api/VRBuilder.Core.Localization.html": {
    "href": "api/VRBuilder.Core.Localization.html",
    "title": "Namespace VRBuilder.Core.Localization | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Localization Classes LanguageSettings Language settings for VR Builder. LanguageUtils Collection of language utilities. Interfaces ILocalizedContent Interface for localized text content."
  },
  "api/VRBuilder.Core.Localization.ILocalizedContent.html": {
    "href": "api/VRBuilder.Core.Localization.ILocalizedContent.html",
    "title": "Interface ILocalizedContent | VR Builder Documentation",
    "keywords": "Interface ILocalizedContent Interface for localized text content. Namespace : VRBuilder.Core.Localization Assembly : VRBuilder.Core.dll Syntax public interface ILocalizedContent Methods | Improve this Doc View Source GetLocalizedContent() Returns localized content according to the localization and process configuration. Declaration string GetLocalizedContent() Returns Type Description System.String"
  },
  "api/VRBuilder.Core.Localization.LanguageSettings.html": {
    "href": "api/VRBuilder.Core.Localization.LanguageSettings.html",
    "title": "Class LanguageSettings | VR Builder Documentation",
    "keywords": "Class LanguageSettings Language settings for VR Builder. Inheritance System.Object SettingsObject < LanguageSettings > LanguageSettings Inherited Members SettingsObject<LanguageSettings>.Instance SettingsObject<LanguageSettings>.Save() Namespace : VRBuilder.Core.Localization Assembly : VRBuilder.Core.dll Syntax public class LanguageSettings : SettingsObject<LanguageSettings> Fields | Improve this Doc View Source ApplicationLanguage Language which should be used if no localization settings are present. Declaration public string ApplicationLanguage Field Value Type Description System.String Properties | Improve this Doc View Source ActiveOrDefaultLanguage Returns the active or default language. Declaration public string ActiveOrDefaultLanguage { get; } Property Value Type Description System.String | Improve this Doc View Source ActiveOrDefaultLocale Returns the active or default locale. Declaration public Locale ActiveOrDefaultLocale { get; } Property Value Type Description UnityEngine.Localization.Locale Methods | Improve this Doc View Source GetLocaleFromString(String) Get Locale object from a language or language code string. Declaration public Locale GetLocaleFromString(string languageOrCode) Parameters Type Name Description System.String languageOrCode The language or language code string. Returns Type Description UnityEngine.Localization.Locale The Locale object corresponding to the language code string or NULL."
  },
  "api/VRBuilder.Core.Localization.LanguageUtils.html": {
    "href": "api/VRBuilder.Core.Localization.LanguageUtils.html",
    "title": "Class LanguageUtils | VR Builder Documentation",
    "keywords": "Class LanguageUtils Collection of language utilities. Inheritance System.Object LanguageUtils Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Localization Assembly : VRBuilder.Core.dll Syntax public static class LanguageUtils Methods | Improve this Doc View Source GetLocalizedChapterName(IChapter, String, Locale) Try to localize a chapter name if used as a key in a localization table Declaration public static string GetLocalizedChapterName(IChapter chapter, string localizationTable, Locale locale) Parameters Type Name Description IChapter chapter System.String localizationTable UnityEngine.Localization.Locale locale Returns Type Description System.String | Improve this Doc View Source GetLocalizedStepName(IStep, String, Locale) Try to localize a step name if used as a key in a localization table Declaration public static string GetLocalizedStepName(IStep step, string localizationTable, Locale locale) Parameters Type Name Description IStep step System.String localizationTable UnityEngine.Localization.Locale locale Returns Type Description System.String | Improve this Doc View Source GetLocalizedString(String, String) Try to get the localized string for a key and in a table with the currently selcted locale Declaration public static string GetLocalizedString(string localizationKey, string localizationTable) Parameters Type Name Description System.String localizationKey System.String localizationTable Returns Type Description System.String | Improve this Doc View Source GetLocalizedString(String, String, Locale) Try to get the localized string for a key and in a table with a custom locale Declaration public static string GetLocalizedString(string localizationKey, string localizationTable, Locale locale) Parameters Type Name Description System.String localizationKey System.String localizationTable UnityEngine.Localization.Locale locale Returns Type Description System.String | Improve this Doc View Source TryConvertToTwoLetterIsoCode(String, out String) Convert natural language name to two-letters ISO code. Declaration public static bool TryConvertToTwoLetterIsoCode(this string language, out string result) Parameters Type Name Description System.String language String with natural language name or two-letters ISO code. System.String result If language is already in two-letters ISO code, simply returns it. If language is a natural language name, returns two-symbol code. Otherwise, returns null. Returns Type Description System.Boolean Was operation successful or not."
  },
  "api/VRBuilder.Core.Metadata.html": {
    "href": "api/VRBuilder.Core.Metadata.html",
    "title": "Class Metadata | VR Builder Documentation",
    "keywords": "Class Metadata General implementation of IMetadata . Inheritance System.Object Metadata Implements IMetadata Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class Metadata : IMetadata Methods | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source GetMetadata(MemberInfo) Returns a set of data extracted from given member . Declaration public Dictionary<string, object> GetMetadata(MemberInfo member) Parameters Type Name Description System.Reflection.MemberInfo member Returns Type Description System.Collections.Generic.Dictionary < System.String , System.Object > | Improve this Doc View Source GetMetadata(MemberInfo, MetadataAttribute) Returns a set of data extracted from specified attribute of given member . Declaration public object GetMetadata(MemberInfo member, MetadataAttribute attribute) Parameters Type Name Description System.Reflection.MemberInfo member MetadataAttribute attribute Returns Type Description System.Object | Improve this Doc View Source SetMetadata(MemberInfo, String, Object) Sets a set of data in to specified member . Declaration public void SetMetadata(MemberInfo member, string attributeName, object data) Parameters Type Name Description System.Reflection.MemberInfo member Member data. System.String attributeName Key name of provided data. System.Object data Data to be saved as metadata for member . Implements IMetadata"
  },
  "api/VRBuilder.Core.ParallelExecutionPostProcessing.html": {
    "href": "api/VRBuilder.Core.ParallelExecutionPostProcessing.html",
    "title": "Class ParallelExecutionPostProcessing | VR Builder Documentation",
    "keywords": "Class ParallelExecutionPostProcessing Postprocessing for a parallel execution node. Inheritance System.Object EntityPostProcessing < IStep > ParallelExecutionPostProcessing Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Editor.dll Syntax public class ParallelExecutionPostProcessing : EntityPostProcessing<IStep> Methods | Improve this Doc View Source Execute(IStep) Declaration public override void Execute(IStep entity) Parameters Type Name Description IStep entity Overrides VRBuilder.Core.EntityPostProcessing<VRBuilder.Core.IStep>.Execute(VRBuilder.Core.IStep)"
  },
  "api/VRBuilder.Core.Process.EntityData.html": {
    "href": "api/VRBuilder.Core.Process.EntityData.html",
    "title": "Class Process.EntityData | VR Builder Documentation",
    "keywords": "Class Process.EntityData The data class for a process. Inheritance System.Object EntityCollectionData < IChapter > Process.EntityData Implements IProcessData IEntityNonLinearSequenceDataWithMode < IChapter > IEntitySequenceDataWithMode < IChapter > IEntitySequenceData < IChapter > IEntityCollectionData < IChapter > IEntityCollectionData IEntitySequenceData IModeData IRenameableData INamedData IData Inherited Members EntityCollectionData<IChapter>.Metadata EntityCollectionData<IChapter>.IEntityCollectionData.GetChildren() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class EntityData : EntityCollectionData<IChapter>, IProcessData, IEntityNonLinearSequenceDataWithMode<IChapter>, IEntitySequenceDataWithMode<IChapter>, IEntitySequenceData<IChapter>, IEntityCollectionData<IChapter>, IEntityCollectionData, IEntitySequenceData, IModeData, IRenameableData, INamedData, IData Properties | Improve this Doc View Source Chapters Declaration [DataMember] public IList<IChapter> Chapters { get; set; } Property Value Type Description System.Collections.Generic.IList < IChapter > | Improve this Doc View Source Current Declaration [IgnoreDataMember] public IChapter Current { get; set; } Property Value Type Description IChapter | Improve this Doc View Source FirstChapter Declaration public IChapter FirstChapter { get; } Property Value Type Description IChapter | Improve this Doc View Source Mode Declaration public IMode Mode { get; set; } Property Value Type Description IMode | Improve this Doc View Source Name Declaration [DataMember] public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source OverrideNext Declaration [IgnoreDataMember] public IChapter OverrideNext { get; set; } Property Value Type Description IChapter Methods | Improve this Doc View Source GetChildren() Declaration public override IEnumerable<IChapter> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < IChapter > Overrides VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IChapter>.GetChildren() | Improve this Doc View Source SetName(String) Declaration public void SetName(string name) Parameters Type Name Description System.String name Explicit Interface Implementations | Improve this Doc View Source IEntitySequenceData.Current Declaration IEntity IEntitySequenceData.Current { get; } Returns Type Description IEntity Implements IProcessData IEntityNonLinearSequenceDataWithMode<TEntity> IEntitySequenceDataWithMode<TEntity> IEntitySequenceData<TEntity> IEntityCollectionData<TEntity> IEntityCollectionData IEntitySequenceData IModeData IRenameableData INamedData IData"
  },
  "api/VRBuilder.Core.Process.html": {
    "href": "api/VRBuilder.Core.Process.html",
    "title": "Class Process | VR Builder Documentation",
    "keywords": "Class Process An implementation of IProcess class. It contains a complete information about the process workflow. Inheritance System.Object Entity < Process.EntityData > Process Implements IDataOwner < Process.EntityData > IProcess IEntity IDataOwner < IProcessData > IDataOwner IClonable < IProcess > Inherited Members Entity<Process.EntityData>.Data Entity<Process.EntityData>.IDataOwner.Data Entity<Process.EntityData>.LifeCycle Entity<Process.EntityData>.Parent Entity<Process.EntityData>.GetActiveProcess() Entity<Process.EntityData>.GetConfigurator() Entity<Process.EntityData>.Configure(IMode) Entity<Process.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class Process : Entity<Process.EntityData>, IDataOwner<Process.EntityData>, IProcess, IEntity, IDataOwner<IProcessData>, IDataOwner, IClonable<IProcess> Constructors | Improve this Doc View Source Process() Declaration protected Process() | Improve this Doc View Source Process(String, IEnumerable<IChapter>) Declaration public Process(string name, IEnumerable<IChapter> chapters) Parameters Type Name Description System.String name System.Collections.Generic.IEnumerable < IChapter > chapters | Improve this Doc View Source Process(String, IChapter) Declaration public Process(string name, IChapter chapter) Parameters Type Name Description System.String name IChapter chapter Properties | Improve this Doc View Source CurrentStep Step that is currently being executed. Declaration [DataMember] public IStep CurrentStep { get; protected set; } Property Value Type Description IStep | Improve this Doc View Source ProcessMetadata Declaration [DataMember] public ProcessMetadata ProcessMetadata { get; set; } Property Value Type Description ProcessMetadata Methods | Improve this Doc View Source Clone() Declaration public IProcess Clone() Returns Type Description IProcess | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Process.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Process.EntityData>.GetDeactivatingProcess() Explicit Interface Implementations | Improve this Doc View Source IDataOwner<IProcessData>.Data Declaration IProcessData IDataOwner<IProcessData>.Data { get; } Returns Type Description IProcessData Implements IDataOwner<TData> IProcess IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.ProcessEventArgs.html": {
    "href": "api/VRBuilder.Core.ProcessEventArgs.html",
    "title": "Class ProcessEventArgs | VR Builder Documentation",
    "keywords": "Class ProcessEventArgs EventArgs for process events. Inheritance System.Object System.EventArgs ProcessEventArgs FastForwardProcessEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class ProcessEventArgs : EventArgs Constructors | Improve this Doc View Source ProcessEventArgs(IProcess) Declaration public ProcessEventArgs(IProcess process) Parameters Type Name Description IProcess process Fields | Improve this Doc View Source Chapter Active Chapter. Declaration public readonly IChapter Chapter Field Value Type Description IChapter | Improve this Doc View Source Process Active process. Declaration public readonly IProcess Process Field Value Type Description IProcess | Improve this Doc View Source Step Active Step. Declaration public readonly IStep Step Field Value Type Description IStep"
  },
  "api/VRBuilder.Core.ProcessMetadata.html": {
    "href": "api/VRBuilder.Core.ProcessMetadata.html",
    "title": "Class ProcessMetadata | VR Builder Documentation",
    "keywords": "Class ProcessMetadata Implementation of IMetadata adapted for IProcess data. Inheritance System.Object ProcessMetadata Implements IMetadata Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class ProcessMetadata : IMetadata Constructors | Improve this Doc View Source ProcessMetadata() Declaration public ProcessMetadata() Properties | Improve this Doc View Source Guid Unique identifier for process. Declaration [DataMember] public Guid Guid { get; set; } Property Value Type Description System.Guid | Improve this Doc View Source StringLocalizationTable String localization table for this process. Declaration [DataMember] public string StringLocalizationTable { get; set; } Property Value Type Description System.String Implements IMetadata"
  },
  "api/VRBuilder.Core.ProcessRunner.html": {
    "href": "api/VRBuilder.Core.ProcessRunner.html",
    "title": "Class ProcessRunner | VR Builder Documentation",
    "keywords": "Class ProcessRunner Runs a IProcess , expects to be run only once. Inheritance System.Object ProcessRunner Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public static class ProcessRunner Properties | Improve this Doc View Source Current Currently running IProcess Declaration public static IProcess Current { get; } Property Value Type Description IProcess | Improve this Doc View Source Events Returns all process events for the current scene. Declaration public static ProcessRunner.ProcessEvents Events { get; } Property Value Type Description ProcessRunner.ProcessEvents | Improve this Doc View Source IsRunning Returns true if the current IProcess is running. Declaration public static bool IsRunning { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Initialize(IProcess) Initializes the process runner by creating all required component in scene. Declaration public static void Initialize(IProcess process) Parameters Type Name Description IProcess process The process which should be run. | Improve this Doc View Source Run() Starts the IProcess . Declaration public static void Run() | Improve this Doc View Source SetNextChapter(IChapter) Sets the specified chapter as the next chapter in the process. Declaration public static void SetNextChapter(IChapter chapter) Parameters Type Name Description IChapter chapter | Improve this Doc View Source SkipChapters(Int32) Skips the given amount of chapters. Declaration public static void SkipChapters(int numberOfChapters) Parameters Type Name Description System.Int32 numberOfChapters Number of chapters. | Improve this Doc View Source SkipCurrentChapter() Skips the current chapters. Declaration public static void SkipCurrentChapter() | Improve this Doc View Source SkipStep(ITransition) Skips the current step and uses given transition. Declaration public static void SkipStep(ITransition transition) Parameters Type Name Description ITransition transition Transition which should be used."
  },
  "api/VRBuilder.Core.ProcessRunner.ProcessEvents.html": {
    "href": "api/VRBuilder.Core.ProcessRunner.ProcessEvents.html",
    "title": "Class ProcessRunner.ProcessEvents | VR Builder Documentation",
    "keywords": "Class ProcessRunner.ProcessEvents Inheritance System.Object ProcessRunner.ProcessEvents Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class ProcessEvents Fields | Improve this Doc View Source ChapterStarted Will be called each time a chapter activates. Declaration public EventHandler<ProcessEventArgs> ChapterStarted Field Value Type Description System.EventHandler < ProcessEventArgs > | Improve this Doc View Source FastForwardStep Will be called when manual fast forward is triggered. Declaration public EventHandler<FastForwardProcessEventArgs> FastForwardStep Field Value Type Description System.EventHandler < FastForwardProcessEventArgs > | Improve this Doc View Source ProcessFinished Will be called when the process finishes. Declaration public EventHandler<ProcessEventArgs> ProcessFinished Field Value Type Description System.EventHandler < ProcessEventArgs > | Improve this Doc View Source ProcessInitialized Will be called when the process has been initialized. Declaration public EventHandler<ProcessEventArgs> ProcessInitialized Field Value Type Description System.EventHandler < ProcessEventArgs > | Improve this Doc View Source ProcessSetup Will be called before the process is setup internally. Declaration public EventHandler<ProcessEventArgs> ProcessSetup Field Value Type Description System.EventHandler < ProcessEventArgs > | Improve this Doc View Source ProcessStarted Will be called on process start. Declaration public EventHandler<ProcessEventArgs> ProcessStarted Field Value Type Description System.EventHandler < ProcessEventArgs > | Improve this Doc View Source StepStarted Will be called each time a step activates. Declaration public EventHandler<ProcessEventArgs> StepStarted Field Value Type Description System.EventHandler < ProcessEventArgs >"
  },
  "api/VRBuilder.Core.ProcessUtils.AndOperation.html": {
    "href": "api/VRBuilder.Core.ProcessUtils.AndOperation.html",
    "title": "Class AndOperation | VR Builder Documentation",
    "keywords": "Class AndOperation \"And\" boolean operation. Inheritance System.Object AndOperation Implements IOperationCommand < System.Boolean , System.Boolean > System.IFormattable Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.ProcessUtils Assembly : VRBuilder.Core.dll Syntax public class AndOperation : IOperationCommand<bool, bool>, IFormattable Methods | Improve this Doc View Source Execute(Boolean, Boolean) Declaration public bool Execute(bool leftOperand, bool rightOperand) Parameters Type Name Description System.Boolean leftOperand System.Boolean rightOperand Returns Type Description System.Boolean | Improve this Doc View Source ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Core.ProcessUtils.ConfettiMachine.html": {
    "href": "api/VRBuilder.Core.ProcessUtils.ConfettiMachine.html",
    "title": "Class ConfettiMachine | VR Builder Documentation",
    "keywords": "Class ConfettiMachine Manager of all listed particle systems using confetti as particles. Manages activation, deactivation, and some particle system configurations. Inheritance System.Object ConfettiMachine Implements IParticleMachine Namespace : VRBuilder.Core.ProcessUtils Assembly : VRBuilder.Core.dll Syntax public class ConfettiMachine : MonoBehaviour, IParticleMachine Properties | Improve this Doc View Source EmissionDuration Duration in seconds after the machine finishes to emit confetti. Declaration public float EmissionDuration { get; } Property Value Type Description System.Single | Improve this Doc View Source IsActive Declaration public bool IsActive { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Activate() Declaration public void Activate() | Improve this Doc View Source Activate(Single, Single) Declaration public void Activate(float newRadius, float newDuration) Parameters Type Name Description System.Single newRadius System.Single newDuration | Improve this Doc View Source ChangeAreaRadius(Single) Declaration public void ChangeAreaRadius(float newRadius) Parameters Type Name Description System.Single newRadius | Improve this Doc View Source ChangeEmissionDuration(Single) Declaration public void ChangeEmissionDuration(float newDuration) Parameters Type Name Description System.Single newDuration | Improve this Doc View Source Deactivate() Declaration public void Deactivate() Implements IParticleMachine"
  },
  "api/VRBuilder.Core.ProcessUtils.EqualToOperation-1.html": {
    "href": "api/VRBuilder.Core.ProcessUtils.EqualToOperation-1.html",
    "title": "Class EqualToOperation<T> | VR Builder Documentation",
    "keywords": "Class EqualToOperation<T> True if left and right are equal. Inheritance System.Object EqualToOperation<T> Implements IOperationCommand <T, System.Boolean > System.IFormattable Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.ProcessUtils Assembly : VRBuilder.Core.dll Syntax public class EqualToOperation<T> : IOperationCommand<T, bool>, IFormattable where T : IEquatable<T> Type Parameters Name Description T Methods | Improve this Doc View Source Execute(T, T) Declaration public bool Execute(T leftOperand, T rightOperand) Parameters Type Name Description T leftOperand T rightOperand Returns Type Description System.Boolean | Improve this Doc View Source ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Core.ProcessUtils.GreaterOrEqualOperation-1.html": {
    "href": "api/VRBuilder.Core.ProcessUtils.GreaterOrEqualOperation-1.html",
    "title": "Class GreaterOrEqualOperation<T> | VR Builder Documentation",
    "keywords": "Class GreaterOrEqualOperation<T> True if left >= right. Inheritance System.Object GreaterOrEqualOperation<T> Implements IOperationCommand <T, System.Boolean > System.IFormattable Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.ProcessUtils Assembly : VRBuilder.Core.dll Syntax public class GreaterOrEqualOperation<T> : IOperationCommand<T, bool>, IFormattable where T : IComparable<T> Type Parameters Name Description T Methods | Improve this Doc View Source Execute(T, T) Declaration public bool Execute(T leftOperand, T rightOperand) Parameters Type Name Description T leftOperand T rightOperand Returns Type Description System.Boolean | Improve this Doc View Source ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Core.ProcessUtils.GreaterThanOperation-1.html": {
    "href": "api/VRBuilder.Core.ProcessUtils.GreaterThanOperation-1.html",
    "title": "Class GreaterThanOperation<T> | VR Builder Documentation",
    "keywords": "Class GreaterThanOperation<T> True if left > right. Inheritance System.Object GreaterThanOperation<T> Implements IOperationCommand <T, System.Boolean > System.IFormattable Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.ProcessUtils Assembly : VRBuilder.Core.dll Syntax public class GreaterThanOperation<T> : IOperationCommand<T, bool>, IFormattable where T : IComparable<T> Type Parameters Name Description T Methods | Improve this Doc View Source Execute(T, T) Declaration public bool Execute(T leftOperand, T rightOperand) Parameters Type Name Description T leftOperand T rightOperand Returns Type Description System.Boolean | Improve this Doc View Source ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Core.ProcessUtils.html": {
    "href": "api/VRBuilder.Core.ProcessUtils.html",
    "title": "Namespace VRBuilder.Core.ProcessUtils | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.ProcessUtils Classes AndOperation \"And\" boolean operation. ConfettiMachine Manager of all listed particle systems using confetti as particles. Manages activation, deactivation, and some particle system configurations. EqualToOperation<T> True if left and right are equal. GreaterOrEqualOperation<T> True if left >= right. GreaterThanOperation<T> True if left > right. LessThanOperation<T> LessThanOrEqualOperation<T> NotEqualToOperation<T> True if left and right are not equal. OrOperation \"Or\" boolean operation. Structs ProcessVariable<T> Struct for a process variable. Accommodates the value coming from a IDataProperty<T> , or being a constant value set e.g. in the Step Inspector. Interfaces IOperationCommand<TOperand, TResult> A command that executes an operation between two values. IParticleMachine"
  },
  "api/VRBuilder.Core.ProcessUtils.IOperationCommand-2.html": {
    "href": "api/VRBuilder.Core.ProcessUtils.IOperationCommand-2.html",
    "title": "Interface IOperationCommand<TOperand, TResult> | VR Builder Documentation",
    "keywords": "Interface IOperationCommand<TOperand, TResult> A command that executes an operation between two values. Inherited Members System.IFormattable.ToString(System.String, System.IFormatProvider) Namespace : VRBuilder.Core.ProcessUtils Assembly : VRBuilder.Core.dll Syntax public interface IOperationCommand<TOperand, TResult> : IFormattable Type Parameters Name Description TOperand Type of the operands. TResult Type of the returned result. Methods | Improve this Doc View Source Execute(TOperand, TOperand) Executes the operation on the provided operands. Declaration TResult Execute(TOperand leftOperand, TOperand rightOperand) Parameters Type Name Description TOperand leftOperand TOperand rightOperand Returns Type Description TResult"
  },
  "api/VRBuilder.Core.ProcessUtils.IParticleMachine.html": {
    "href": "api/VRBuilder.Core.ProcessUtils.IParticleMachine.html",
    "title": "Interface IParticleMachine | VR Builder Documentation",
    "keywords": "Interface IParticleMachine Namespace : VRBuilder.Core.ProcessUtils Assembly : VRBuilder.Core.dll Syntax public interface IParticleMachine Properties | Improve this Doc View Source IsActive True if particle machine is currently active and emitting particles. Declaration bool IsActive { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Activate() Activates the particle machine. Declaration void Activate() | Improve this Doc View Source Activate(Single, Single) Activates the particle machine. Declaration void Activate(float radius, float duration) Parameters Type Name Description System.Single radius New radius of the emission area. System.Single duration New duration of the emission. | Improve this Doc View Source ChangeAreaRadius(Single) Changes the radius of the emission area. Declaration void ChangeAreaRadius(float radius) Parameters Type Name Description System.Single radius New radius of the emission area. | Improve this Doc View Source ChangeEmissionDuration(Single) Changes the duration of the emission of the particle systems. Declaration void ChangeEmissionDuration(float duration) Parameters Type Name Description System.Single duration New duration of the emission. | Improve this Doc View Source Deactivate() Deactivates the particle machine. Declaration void Deactivate()"
  },
  "api/VRBuilder.Core.ProcessUtils.LessThanOperation-1.html": {
    "href": "api/VRBuilder.Core.ProcessUtils.LessThanOperation-1.html",
    "title": "Class LessThanOperation<T> | VR Builder Documentation",
    "keywords": "Class LessThanOperation<T> Inheritance System.Object LessThanOperation<T> Implements IOperationCommand <T, System.Boolean > System.IFormattable Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.ProcessUtils Assembly : VRBuilder.Core.dll Syntax public class LessThanOperation<T> : IOperationCommand<T, bool>, IFormattable where T : IComparable<T> Type Parameters Name Description T Methods | Improve this Doc View Source Execute(T, T) Declaration public bool Execute(T leftOperand, T rightOperand) Parameters Type Name Description T leftOperand T rightOperand Returns Type Description System.Boolean | Improve this Doc View Source ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Core.ProcessUtils.LessThanOrEqualOperation-1.html": {
    "href": "api/VRBuilder.Core.ProcessUtils.LessThanOrEqualOperation-1.html",
    "title": "Class LessThanOrEqualOperation<T> | VR Builder Documentation",
    "keywords": "Class LessThanOrEqualOperation<T> Inheritance System.Object LessThanOrEqualOperation<T> Implements IOperationCommand <T, System.Boolean > System.IFormattable Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.ProcessUtils Assembly : VRBuilder.Core.dll Syntax public class LessThanOrEqualOperation<T> : IOperationCommand<T, bool>, IFormattable where T : IComparable<T> Type Parameters Name Description T Methods | Improve this Doc View Source Execute(T, T) Declaration public bool Execute(T leftOperand, T rightOperand) Parameters Type Name Description T leftOperand T rightOperand Returns Type Description System.Boolean | Improve this Doc View Source ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Core.ProcessUtils.NotEqualToOperation-1.html": {
    "href": "api/VRBuilder.Core.ProcessUtils.NotEqualToOperation-1.html",
    "title": "Class NotEqualToOperation<T> | VR Builder Documentation",
    "keywords": "Class NotEqualToOperation<T> True if left and right are not equal. Inheritance System.Object NotEqualToOperation<T> Implements IOperationCommand <T, System.Boolean > System.IFormattable Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.ProcessUtils Assembly : VRBuilder.Core.dll Syntax public class NotEqualToOperation<T> : IOperationCommand<T, bool>, IFormattable where T : IEquatable<T> Type Parameters Name Description T Methods | Improve this Doc View Source Execute(T, T) Declaration public bool Execute(T leftOperand, T rightOperand) Parameters Type Name Description T leftOperand T rightOperand Returns Type Description System.Boolean | Improve this Doc View Source ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Core.ProcessUtils.OrOperation.html": {
    "href": "api/VRBuilder.Core.ProcessUtils.OrOperation.html",
    "title": "Class OrOperation | VR Builder Documentation",
    "keywords": "Class OrOperation \"Or\" boolean operation. Inheritance System.Object OrOperation Implements IOperationCommand < System.Boolean , System.Boolean > System.IFormattable Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.ProcessUtils Assembly : VRBuilder.Core.dll Syntax public class OrOperation : IOperationCommand<bool, bool>, IFormattable Methods | Improve this Doc View Source Execute(Boolean, Boolean) Declaration public bool Execute(bool leftOperand, bool rightOperand) Parameters Type Name Description System.Boolean leftOperand System.Boolean rightOperand Returns Type Description System.Boolean | Improve this Doc View Source ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Core.ProcessUtils.ProcessVariable-1.html": {
    "href": "api/VRBuilder.Core.ProcessUtils.ProcessVariable-1.html",
    "title": "Struct ProcessVariable<T> | VR Builder Documentation",
    "keywords": "Struct ProcessVariable<T> Struct for a process variable. Accommodates the value coming from a IDataProperty<T> , or being a constant value set e.g. in the Step Inspector. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : VRBuilder.Core.ProcessUtils Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public struct ProcessVariable<T> Type Parameters Name Description T Constructors | Improve this Doc View Source ProcessVariable(T, IEnumerable<Guid>, Boolean) Declaration public ProcessVariable(T constValue, IEnumerable<Guid> referenceIds, bool isConst) Parameters Type Name Description T constValue System.Collections.Generic.IEnumerable < System.Guid > referenceIds System.Boolean isConst | Improve this Doc View Source ProcessVariable(T, Guid, Boolean) Declaration public ProcessVariable(T constValue, Guid referenceId, bool isConst) Parameters Type Name Description T constValue System.Guid referenceId System.Boolean isConst Properties | Improve this Doc View Source ConstValue Constant value. Declaration [DataMember] public T ConstValue { readonly get; set; } Property Value Type Description T | Improve this Doc View Source IsConst If true, ConstValue is used. Else the value will be fetched from the PropertyReference . Declaration [DataMember] public bool IsConst { readonly get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Property Property reference for the variable. Declaration [DataMember] public SingleScenePropertyReference<IDataProperty<T>> Property { readonly get; set; } Property Value Type Description SingleScenePropertyReference < IDataProperty <T>> | Improve this Doc View Source PropertyReference Declaration [DataMember] [Obsolete(\"Use Property instead.\")] [LegacyProperty(\"Property\")] public ScenePropertyReference<IDataProperty<T>> PropertyReference { readonly get; set; } Property Value Type Description ScenePropertyReference < IDataProperty <T>> | Improve this Doc View Source Value Returns the current value of this variable. Declaration public readonly T Value { get; } Property Value Type Description T Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString()"
  },
  "api/VRBuilder.Core.Properties.BaseHighlightProperty.HighlightEventArgs.html": {
    "href": "api/VRBuilder.Core.Properties.BaseHighlightProperty.HighlightEventArgs.html",
    "title": "Class BaseHighlightProperty.HighlightEventArgs | VR Builder Documentation",
    "keywords": "Class BaseHighlightProperty.HighlightEventArgs Event data for events of BaseHighlightProperty . Inheritance System.Object System.EventArgs BaseHighlightProperty.HighlightEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class HighlightEventArgs : EventArgs"
  },
  "api/VRBuilder.Core.Properties.BaseHighlightProperty.html": {
    "href": "api/VRBuilder.Core.Properties.BaseHighlightProperty.html",
    "title": "Class BaseHighlightProperty | VR Builder Documentation",
    "keywords": "Class BaseHighlightProperty Abstract base property for highlight properties. Inheritance System.Object ProcessSceneObjectProperty BaseHighlightProperty EnableHighlightProperty HighlightProperty Implements IHighlightProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public abstract class BaseHighlightProperty : ProcessSceneObjectProperty, IHighlightProperty, ISceneObjectProperty Properties | Improve this Doc View Source HighlightEnded Declaration public UnityEvent<HighlightPropertyEventArgs> HighlightEnded { get; } Property Value Type Description UnityEvent < HighlightPropertyEventArgs > | Improve this Doc View Source HighlightStarted Declaration public UnityEvent<HighlightPropertyEventArgs> HighlightStarted { get; } Property Value Type Description UnityEvent < HighlightPropertyEventArgs > | Improve this Doc View Source IsHighlighted Is currently highlighted. Declaration public bool IsHighlighted { get; protected set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source EmitHighlightEvent(HighlightPropertyEventArgs) Emits an event when the property is highlighted. Declaration public void EmitHighlightEvent(HighlightPropertyEventArgs args) Parameters Type Name Description HighlightPropertyEventArgs args | Improve this Doc View Source EmitUnhighlightEvent(HighlightPropertyEventArgs) Emits an event when the property is unhighlighted. Declaration public void EmitUnhighlightEvent(HighlightPropertyEventArgs args) Parameters Type Name Description HighlightPropertyEventArgs args | Improve this Doc View Source Highlight(Color) Declaration public abstract void Highlight(Color highlightColor) Parameters Type Name Description Color highlightColor | Improve this Doc View Source Unhighlight() Declaration public abstract void Unhighlight() Implements IHighlightProperty ISceneObjectProperty Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.BezierSplinePathProperty.html": {
    "href": "api/VRBuilder.Core.Properties.BezierSplinePathProperty.html",
    "title": "Class BezierSplinePathProperty | VR Builder Documentation",
    "keywords": "Class BezierSplinePathProperty Path property that generates a path from a BezierSpline . Inheritance System.Object ProcessSceneObjectProperty BezierSplinePathProperty Implements IPathProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class BezierSplinePathProperty : ProcessSceneObjectProperty, IPathProperty, ISceneObjectProperty Methods | Improve this Doc View Source GetDirection(Single) Declaration public Vector3 GetDirection(float t) Parameters Type Name Description System.Single t Returns Type Description Vector3 | Improve this Doc View Source GetPoint(Single) Declaration public Vector3 GetPoint(float t) Parameters Type Name Description System.Single t Returns Type Description Vector3 | Improve this Doc View Source OnEnable() Declaration protected override void OnEnable() Overrides ProcessSceneObjectProperty.OnEnable() Implements IPathProperty ISceneObjectProperty Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.BooleanDataProperty.html": {
    "href": "api/VRBuilder.Core.Properties.BooleanDataProperty.html",
    "title": "Class BooleanDataProperty | VR Builder Documentation",
    "keywords": "Class BooleanDataProperty Boolean implementation of the DataProperty<T> class. Inheritance System.Object ProcessSceneObjectProperty DataProperty < System.Boolean > BooleanDataProperty Implements IDataProperty < System.Boolean > IDataPropertyBase ISceneObjectProperty Inherited Members DataProperty<Boolean>.storedValue DataProperty<Boolean>.GetValue() DataProperty<Boolean>.ResetValue() DataProperty<Boolean>.SetValue(Boolean) DataProperty<Boolean>.ValueToString(Boolean) ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class BooleanDataProperty : DataProperty<bool>, IDataProperty<bool>, IDataPropertyBase, ISceneObjectProperty Properties | Improve this Doc View Source DefaultValue Declaration public override bool DefaultValue { get; } Property Value Type Description System.Boolean Overrides VRBuilder.Core.Properties.DataProperty<System.Boolean>.DefaultValue | Improve this Doc View Source OnValueChanged Declaration public override UnityEvent<bool> OnValueChanged { get; } Property Value Type Description UnityEvent < System.Boolean > Overrides VRBuilder.Core.Properties.DataProperty<System.Boolean>.OnValueChanged | Improve this Doc View Source OnValueReset Declaration public override UnityEvent OnValueReset { get; } Property Value Type Description UnityEvent Overrides VRBuilder.Core.Properties.DataProperty<System.Boolean>.OnValueReset Methods | Improve this Doc View Source InvertValue() Changes the property's value from true to false and viceversa. Declaration public void InvertValue() Implements IDataProperty<T> IDataPropertyBase ISceneObjectProperty Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.ColliderWithTriggerProperty.ColliderWithTriggerEventArgs.html": {
    "href": "api/VRBuilder.Core.Properties.ColliderWithTriggerProperty.ColliderWithTriggerEventArgs.html",
    "title": "Class ColliderWithTriggerProperty.ColliderWithTriggerEventArgs | VR Builder Documentation",
    "keywords": "Class ColliderWithTriggerProperty.ColliderWithTriggerEventArgs Inheritance System.Object System.EventArgs ColliderWithTriggerProperty.ColliderWithTriggerEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class ColliderWithTriggerEventArgs : EventArgs Constructors | Improve this Doc View Source ColliderWithTriggerEventArgs(GameObject) Declaration public ColliderWithTriggerEventArgs(GameObject collidedObject) Parameters Type Name Description GameObject collidedObject Fields | Improve this Doc View Source CollidedObject Declaration public readonly GameObject CollidedObject Field Value Type Description GameObject"
  },
  "api/VRBuilder.Core.Properties.ColliderWithTriggerProperty.html": {
    "href": "api/VRBuilder.Core.Properties.ColliderWithTriggerProperty.html",
    "title": "Class ColliderWithTriggerProperty | VR Builder Documentation",
    "keywords": "Class ColliderWithTriggerProperty Inheritance System.Object ProcessSceneObjectProperty ColliderWithTriggerProperty Implements ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class ColliderWithTriggerProperty : ProcessSceneObjectProperty, ISceneObjectProperty Methods | Improve this Doc View Source FastForwardEnter(ISceneObject) Instantaneously move target inside the collider and fire the event. Declaration public void FastForwardEnter(ISceneObject target) Parameters Type Name Description ISceneObject target | Improve this Doc View Source IsTransformInsideTrigger(Transform) Declaration public bool IsTransformInsideTrigger(Transform targetTransform) Parameters Type Name Description Transform targetTransform Returns Type Description System.Boolean | Improve this Doc View Source OnEnable() Declaration protected override void OnEnable() Overrides ProcessSceneObjectProperty.OnEnable() Events | Improve this Doc View Source EnteredTrigger Declaration public event EventHandler<ColliderWithTriggerProperty.ColliderWithTriggerEventArgs> EnteredTrigger Event Type Type Description System.EventHandler < ColliderWithTriggerProperty.ColliderWithTriggerEventArgs > | Improve this Doc View Source ExitedTrigger Declaration public event EventHandler<ColliderWithTriggerProperty.ColliderWithTriggerEventArgs> ExitedTrigger Event Type Type Description System.EventHandler < ColliderWithTriggerProperty.ColliderWithTriggerEventArgs > Implements ISceneObjectProperty Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.DataProperty-1.html": {
    "href": "api/VRBuilder.Core.Properties.DataProperty-1.html",
    "title": "Class DataProperty<T> | VR Builder Documentation",
    "keywords": "Class DataProperty<T> Base implementation for process data properties. Inheritance System.Object ProcessSceneObjectProperty DataProperty<T> BooleanDataProperty NumberDataProperty TextDataProperty StateDataPropertyBase Implements IDataProperty <T> IDataPropertyBase ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public abstract class DataProperty<T> : ProcessSceneObjectProperty, IDataProperty<T>, IDataPropertyBase, ISceneObjectProperty Type Parameters Name Description T Fields | Improve this Doc View Source storedValue Declaration protected T storedValue Field Value Type Description T Properties | Improve this Doc View Source DefaultValue Defines a default value for the property. Declaration public abstract T DefaultValue { get; } Property Value Type Description T | Improve this Doc View Source OnValueChanged Declaration public abstract UnityEvent<T> OnValueChanged { get; } Property Value Type Description UnityEvent <T> | Improve this Doc View Source OnValueReset Declaration public abstract UnityEvent OnValueReset { get; } Property Value Type Description UnityEvent Methods | Improve this Doc View Source GetValue() Declaration public T GetValue() Returns Type Description T | Improve this Doc View Source ResetValue() Declaration public void ResetValue() | Improve this Doc View Source SetValue(T) Declaration public void SetValue(T value) Parameters Type Name Description T value | Improve this Doc View Source ValueToString(T) Declaration protected virtual string ValueToString(T value) Parameters Type Name Description T value Returns Type Description System.String Implements IDataProperty<T> IDataPropertyBase ISceneObjectProperty Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.EnableHighlightProperty.html": {
    "href": "api/VRBuilder.Core.Properties.EnableHighlightProperty.html",
    "title": "Class EnableHighlightProperty | VR Builder Documentation",
    "keywords": "Class EnableHighlightProperty Highlight property which enables a referenced VRBuilder.Core.Properties.EnableHighlightProperty.highlightObject , which can be e.g. a colored copy of the original object or a marker. Inheritance System.Object ProcessSceneObjectProperty BaseHighlightProperty EnableHighlightProperty Implements IHighlightProperty ISceneObjectProperty Inherited Members BaseHighlightProperty.IsHighlighted BaseHighlightProperty.HighlightStarted BaseHighlightProperty.HighlightEnded BaseHighlightProperty.EmitHighlightEvent(HighlightPropertyEventArgs) BaseHighlightProperty.EmitUnhighlightEvent(HighlightPropertyEventArgs) ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class EnableHighlightProperty : BaseHighlightProperty, IHighlightProperty, ISceneObjectProperty Methods | Improve this Doc View Source Highlight(Color) Declaration public override void Highlight(Color highlightColor) Parameters Type Name Description Color highlightColor Overrides BaseHighlightProperty.Highlight(Color) | Improve this Doc View Source Unhighlight() Declaration public override void Unhighlight() Overrides BaseHighlightProperty.Unhighlight() Implements IHighlightProperty ISceneObjectProperty Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.HighlightPropertyEventArgs.html": {
    "href": "api/VRBuilder.Core.Properties.HighlightPropertyEventArgs.html",
    "title": "Class HighlightPropertyEventArgs | VR Builder Documentation",
    "keywords": "Class HighlightPropertyEventArgs Inheritance System.Object System.EventArgs HighlightPropertyEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class HighlightPropertyEventArgs : EventArgs Constructors | Improve this Doc View Source HighlightPropertyEventArgs(Nullable<Color>) Declaration public HighlightPropertyEventArgs(Color? highlightColor) Parameters Type Name Description System.Nullable < Color > highlightColor Fields | Improve this Doc View Source HighlightColor Declaration public readonly Color? HighlightColor Field Value Type Description System.Nullable < Color >"
  },
  "api/VRBuilder.Core.Properties.html": {
    "href": "api/VRBuilder.Core.Properties.html",
    "title": "Namespace VRBuilder.Core.Properties | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Properties Classes BaseHighlightProperty Abstract base property for highlight properties. BaseHighlightProperty.HighlightEventArgs Event data for events of BaseHighlightProperty . BezierSplinePathProperty Path property that generates a path from a BezierSpline . BooleanDataProperty Boolean implementation of the DataProperty<T> class. ColliderWithTriggerProperty ColliderWithTriggerProperty.ColliderWithTriggerEventArgs DataProperty<T> Base implementation for process data properties. EnableHighlightProperty Highlight property which enables a referenced VRBuilder.Core.Properties.EnableHighlightProperty.highlightObject , which can be e.g. a colored copy of the original object or a marker. HighlightPropertyEventArgs LockableProperty ProcessSceneObjectProperty which is lockable, to allow the restrictive environment to handle locking/unlocking your properties, extend this class. NumberDataProperty Float implementation of the DataProperty<T> class. ParticleSystemProperty ParticleSystemPropertyEventArgs Event args for IParticleSystemProperty ProcessSceneObjectProperty SceneObjectExtensions Helper class that adds functionality to any ISceneObject . TeleportationProperty XR implementation of ITeleportationProperty . TextDataProperty String implementation of the DataProperty<T> class. TransformInRangeDetectorProperty TransformInRangeDetectorProperty.RangeEventArgs UserSceneObject Used to identify the user within the scene. Interfaces IDataProperty<T> Interface for a property that stores a single value. IDataPropertyBase Base interface for a property that stores a single value. IHighlightProperty Interface for scene objects that can be highlighted. IParticleSystemProperty Property that controls a particle system. IPathProperty This property represents a linear path. ISceneObjectProperty ISceneObjectPropertyExtension<T> Defines a component extending a ISceneObjectProperty ."
  },
  "api/VRBuilder.Core.Properties.IDataProperty-1.html": {
    "href": "api/VRBuilder.Core.Properties.IDataProperty-1.html",
    "title": "Interface IDataProperty<T> | VR Builder Documentation",
    "keywords": "Interface IDataProperty<T> Interface for a property that stores a single value. Inherited Members IDataPropertyBase.OnValueReset IDataPropertyBase.ResetValue() ISceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public interface IDataProperty<T> : IDataPropertyBase, ISceneObjectProperty Type Parameters Name Description T Type of the value to be stored. Properties | Improve this Doc View Source OnValueChanged Raised when the stored value changes. Declaration UnityEvent<T> OnValueChanged { get; } Property Value Type Description UnityEvent <T> Methods | Improve this Doc View Source GetValue() Returns the value. Declaration T GetValue() Returns Type Description T | Improve this Doc View Source SetValue(T) Sets the value. Declaration void SetValue(T value) Parameters Type Name Description T value Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.IDataPropertyBase.html": {
    "href": "api/VRBuilder.Core.Properties.IDataPropertyBase.html",
    "title": "Interface IDataPropertyBase | VR Builder Documentation",
    "keywords": "Interface IDataPropertyBase Base interface for a property that stores a single value. Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public interface IDataPropertyBase : ISceneObjectProperty Properties | Improve this Doc View Source OnValueReset Raised when the stored value is reset to the default. Declaration UnityEvent OnValueReset { get; } Property Value Type Description UnityEvent Methods | Improve this Doc View Source ResetValue() Resets the value to its default. Declaration void ResetValue() Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.IHighlightProperty.html": {
    "href": "api/VRBuilder.Core.Properties.IHighlightProperty.html",
    "title": "Interface IHighlightProperty | VR Builder Documentation",
    "keywords": "Interface IHighlightProperty Interface for scene objects that can be highlighted. Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public interface IHighlightProperty : ISceneObjectProperty Properties | Improve this Doc View Source HighlightEnded Emitted when the object gets unhighlighted. Declaration UnityEvent<HighlightPropertyEventArgs> HighlightEnded { get; } Property Value Type Description UnityEvent < HighlightPropertyEventArgs > | Improve this Doc View Source HighlightStarted Emitted when the object gets highlighted. Declaration UnityEvent<HighlightPropertyEventArgs> HighlightStarted { get; } Property Value Type Description UnityEvent < HighlightPropertyEventArgs > | Improve this Doc View Source IsHighlighted Is object currently highlighted. Declaration bool IsHighlighted { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Highlight(Color) Highlight this object and use highlightColor . Declaration void Highlight(Color highlightColor) Parameters Type Name Description Color highlightColor Color to use for highlighting. | Improve this Doc View Source Unhighlight() Disable highlight. Declaration void Unhighlight() Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.IParticleSystemProperty.html": {
    "href": "api/VRBuilder.Core.Properties.IParticleSystemProperty.html",
    "title": "Interface IParticleSystemProperty | VR Builder Documentation",
    "keywords": "Interface IParticleSystemProperty Property that controls a particle system. Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public interface IParticleSystemProperty : ISceneObjectProperty Properties | Improve this Doc View Source IsEmitting True if the system is emitting particles. Declaration bool IsEmitting { get; } Property Value Type Description System.Boolean | Improve this Doc View Source StartedEmission Called when the system starts emitting particles. Declaration UnityEvent<ParticleSystemPropertyEventArgs> StartedEmission { get; } Property Value Type Description UnityEvent < ParticleSystemPropertyEventArgs > | Improve this Doc View Source StoppedEmission Called when the system stops emitting particles. Declaration UnityEvent<ParticleSystemPropertyEventArgs> StoppedEmission { get; } Property Value Type Description UnityEvent < ParticleSystemPropertyEventArgs > Methods | Improve this Doc View Source StartEmission() Start emitting particles. Declaration void StartEmission() | Improve this Doc View Source StopEmission() Stop emitting particles. Declaration void StopEmission() Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.IPathProperty.html": {
    "href": "api/VRBuilder.Core.Properties.IPathProperty.html",
    "title": "Interface IPathProperty | VR Builder Documentation",
    "keywords": "Interface IPathProperty This property represents a linear path. Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public interface IPathProperty : ISceneObjectProperty Methods | Improve this Doc View Source GetDirection(Single) Get the direction of the path in a given position. Declaration Vector3 GetDirection(float t) Parameters Type Name Description System.Single t Position on the path, 0 to 1. Returns Type Description Vector3 | Improve this Doc View Source GetPoint(Single) Get a point on the path. Declaration Vector3 GetPoint(float t) Parameters Type Name Description System.Single t Position on the path, 0 to 1. Returns Type Description Vector3 Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.ISceneObjectProperty.html": {
    "href": "api/VRBuilder.Core.Properties.ISceneObjectProperty.html",
    "title": "Interface ISceneObjectProperty | VR Builder Documentation",
    "keywords": "Interface ISceneObjectProperty Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public interface ISceneObjectProperty Properties | Improve this Doc View Source SceneObject Declaration ISceneObject SceneObject { get; } Property Value Type Description ISceneObject Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.ISceneObjectPropertyExtension-1.html": {
    "href": "api/VRBuilder.Core.Properties.ISceneObjectPropertyExtension-1.html",
    "title": "Interface ISceneObjectPropertyExtension<T> | VR Builder Documentation",
    "keywords": "Interface ISceneObjectPropertyExtension<T> Defines a component extending a ISceneObjectProperty . Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public interface ISceneObjectPropertyExtension<T> where T : ISceneObjectProperty Type Parameters Name Description T"
  },
  "api/VRBuilder.Core.Properties.LockableProperty.html": {
    "href": "api/VRBuilder.Core.Properties.LockableProperty.html",
    "title": "Class LockableProperty | VR Builder Documentation",
    "keywords": "Class LockableProperty ProcessSceneObjectProperty which is lockable, to allow the restrictive environment to handle locking/unlocking your properties, extend this class. Inheritance System.Object ProcessSceneObjectProperty LockableProperty TeleportationProperty LocalizedTextProperty UiButtonProperty DrillableProperty DrillableSocketProperty GrabbableProperty SnappableProperty SnapZoneProperty TouchableProperty UsableProperty Implements ISceneObjectProperty ILockable Inherited Members ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public abstract class LockableProperty : ProcessSceneObjectProperty, ISceneObjectProperty, ILockable Properties | Improve this Doc View Source EndStepLocked On default the lockable property will use this value to determine if its locked at the end of a step. Declaration public virtual bool EndStepLocked { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLocked Declaration public bool IsLocked { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LockOnParentObjectLock Decides if the property will be locked when the parent scene object is locked. Declaration public bool LockOnParentObjectLock { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source InternalSetLocked(Boolean) Handle your internal locking affairs here. Declaration protected abstract void InternalSetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState | Improve this Doc View Source OnDisable() Declaration protected virtual void OnDisable() | Improve this Doc View Source OnEnable() Declaration protected override void OnEnable() Overrides ProcessSceneObjectProperty.OnEnable() | Improve this Doc View Source RemoveUnlocker(IStepData) Declaration public bool RemoveUnlocker(IStepData data) Parameters Type Name Description IStepData data Returns Type Description System.Boolean | Improve this Doc View Source RequestLocked(Boolean, IStepData) Declaration public virtual void RequestLocked(bool lockState, IStepData stepData = null) Parameters Type Name Description System.Boolean lockState IStepData stepData | Improve this Doc View Source SetLocked(Boolean) Declaration public virtual void SetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState Events | Improve this Doc View Source Locked Declaration public event EventHandler<LockStateChangedEventArgs> Locked Event Type Type Description System.EventHandler < LockStateChangedEventArgs > | Improve this Doc View Source Unlocked Declaration public event EventHandler<LockStateChangedEventArgs> Unlocked Event Type Type Description System.EventHandler < LockStateChangedEventArgs > Implements ISceneObjectProperty ILockable Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.NumberDataProperty.html": {
    "href": "api/VRBuilder.Core.Properties.NumberDataProperty.html",
    "title": "Class NumberDataProperty | VR Builder Documentation",
    "keywords": "Class NumberDataProperty Float implementation of the DataProperty<T> class. Inheritance System.Object ProcessSceneObjectProperty DataProperty < System.Single > NumberDataProperty Implements IDataProperty < System.Single > IDataPropertyBase ISceneObjectProperty Inherited Members DataProperty<Single>.storedValue DataProperty<Single>.GetValue() DataProperty<Single>.ResetValue() DataProperty<Single>.SetValue(Single) DataProperty<Single>.ValueToString(Single) ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class NumberDataProperty : DataProperty<float>, IDataProperty<float>, IDataPropertyBase, ISceneObjectProperty Properties | Improve this Doc View Source DefaultValue Declaration public override float DefaultValue { get; } Property Value Type Description System.Single Overrides VRBuilder.Core.Properties.DataProperty<System.Single>.DefaultValue | Improve this Doc View Source OnValueChanged Declaration public override UnityEvent<float> OnValueChanged { get; } Property Value Type Description UnityEvent < System.Single > Overrides VRBuilder.Core.Properties.DataProperty<System.Single>.OnValueChanged | Improve this Doc View Source OnValueReset Declaration public override UnityEvent OnValueReset { get; } Property Value Type Description UnityEvent Overrides VRBuilder.Core.Properties.DataProperty<System.Single>.OnValueReset Methods | Improve this Doc View Source IncreaseValue(Single) Increases the value of the data property by a given amount. Declaration public void IncreaseValue(float increase) Parameters Type Name Description System.Single increase Implements IDataProperty<T> IDataPropertyBase ISceneObjectProperty Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.ParticleSystemProperty.html": {
    "href": "api/VRBuilder.Core.Properties.ParticleSystemProperty.html",
    "title": "Class ParticleSystemProperty | VR Builder Documentation",
    "keywords": "Class ParticleSystemProperty Inheritance System.Object ProcessSceneObjectProperty ParticleSystemProperty Implements IParticleSystemProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class ParticleSystemProperty : ProcessSceneObjectProperty, IParticleSystemProperty, ISceneObjectProperty Properties | Improve this Doc View Source IsEmitting Declaration public bool IsEmitting { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ParticleSystem The particle system associated with this property. Declaration public ParticleSystem ParticleSystem { get; } Property Value Type Description ParticleSystem | Improve this Doc View Source StartedEmission Declaration public UnityEvent<ParticleSystemPropertyEventArgs> StartedEmission { get; } Property Value Type Description UnityEvent < ParticleSystemPropertyEventArgs > | Improve this Doc View Source StoppedEmission Declaration public UnityEvent<ParticleSystemPropertyEventArgs> StoppedEmission { get; } Property Value Type Description UnityEvent < ParticleSystemPropertyEventArgs > Methods | Improve this Doc View Source StartEmission() Declaration public void StartEmission() | Improve this Doc View Source StopEmission() Declaration public void StopEmission() Implements IParticleSystemProperty ISceneObjectProperty Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs.html": {
    "href": "api/VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs.html",
    "title": "Class ParticleSystemPropertyEventArgs | VR Builder Documentation",
    "keywords": "Class ParticleSystemPropertyEventArgs Event args for IParticleSystemProperty Inheritance System.Object System.EventArgs ParticleSystemPropertyEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class ParticleSystemPropertyEventArgs : EventArgs"
  },
  "api/VRBuilder.Core.Properties.ProcessSceneObjectProperty.html": {
    "href": "api/VRBuilder.Core.Properties.ProcessSceneObjectProperty.html",
    "title": "Class ProcessSceneObjectProperty | VR Builder Documentation",
    "keywords": "Class ProcessSceneObjectProperty Inheritance System.Object ProcessSceneObjectProperty AnimationProperty AnimatorProperty ExplodableProperty BaseHighlightProperty BezierSplinePathProperty ColliderWithTriggerProperty DataProperty<T> LockableProperty ParticleSystemProperty TransformInRangeDetectorProperty EventProperty GenericEventProperty<T> ScoreFeedbackProperty TimerProperty InfoBoxProperty MultipleChoiceProperty NumPadProperty UiOutlineProperty VideoPlayerProperty Implements ISceneObjectProperty Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public abstract class ProcessSceneObjectProperty : MonoBehaviour, ISceneObjectProperty Properties | Improve this Doc View Source SceneObject Declaration public ISceneObject SceneObject { get; } Property Value Type Description ISceneObject Methods | Improve this Doc View Source OnEnable() Declaration protected virtual void OnEnable() | Improve this Doc View Source Reset() Declaration protected virtual void Reset() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Implements ISceneObjectProperty Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.SceneObjectExtensions.html": {
    "href": "api/VRBuilder.Core.Properties.SceneObjectExtensions.html",
    "title": "Class SceneObjectExtensions | VR Builder Documentation",
    "keywords": "Class SceneObjectExtensions Helper class that adds functionality to any ISceneObject . Inheritance System.Object SceneObjectExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public static class SceneObjectExtensions Methods | Improve this Doc View Source AddProcessProperty(ISceneObject, Type) Adds a type of processProperty into this ISceneObject . Declaration public static ISceneObjectProperty AddProcessProperty(this ISceneObject sceneObject, Type processProperty) Parameters Type Name Description ISceneObject sceneObject ISceneObject to whom the processProperty will be added. System.Type processProperty Typo of ISceneObjectProperty to be added to sceneObject . Returns Type Description ISceneObjectProperty A reference to the ISceneObjectProperty added to sceneObject . | Improve this Doc View Source AddProcessProperty<T>(ISceneObject) Adds a ISceneObjectProperty of type T into this ISceneObject . Declaration public static ISceneObjectProperty AddProcessProperty<T>(this ISceneObject sceneObject) Parameters Type Name Description ISceneObject sceneObject ISceneObject to whom the type T will be added. Returns Type Description ISceneObjectProperty A reference to the ISceneObjectProperty added to sceneObject . Type Parameters Name Description T The type of ISceneObjectProperty to be added to sceneObject . | Improve this Doc View Source AddProcessPropertyExtensions(ISceneObjectProperty) Checks if property extensions exist in the project and adds them to the game object if the current scene requires them. Declaration public static void AddProcessPropertyExtensions(this ISceneObjectProperty property) Parameters Type Name Description ISceneObjectProperty property The property to check for. | Improve this Doc View Source RemoveProcessProperty(ISceneObject, Component, Boolean, IEnumerable<Component>) Removes type of processProperty from this ISceneObject . Declaration public static void RemoveProcessProperty(this ISceneObject sceneObject, Component processProperty, bool removeDependencies = false, IEnumerable<Component> excludedFromBeingRemoved = null) Parameters Type Name Description ISceneObject sceneObject ISceneObject from whom the processProperty will be removed. Component processProperty ISceneObjectProperty to be removed from sceneObject . System.Boolean removeDependencies If true, this method also removes other components that are marked as RequiredComponent by processProperty . System.Collections.Generic.IEnumerable < Component > excludedFromBeingRemoved The process properties in this list will not be removed if any is a dependency of processProperty . Only relevant if removeDependencies is true. | Improve this Doc View Source RemoveProcessProperty(ISceneObject, Type, Boolean, IEnumerable<Component>) Removes type of processProperty from this ISceneObject . Declaration public static void RemoveProcessProperty(this ISceneObject sceneObject, Type processProperty, bool removeDependencies = false, IEnumerable<Component> excludedFromBeingRemoved = null) Parameters Type Name Description ISceneObject sceneObject ISceneObject from whom the processProperty will be removed. System.Type processProperty Typo of ISceneObjectProperty to be removed from sceneObject . System.Boolean removeDependencies If true, this method also removes other components that are marked as RequiredComponent by processProperty . System.Collections.Generic.IEnumerable < Component > excludedFromBeingRemoved The process properties in this list will not be removed if any is a dependency of processProperty . Only relevant if removeDependencies is true. | Improve this Doc View Source SetSuitableName(ISceneObject, String) Ensures that this ISceneObject 's UniqueName is not duplicated. Declaration [Obsolete(\"This function is no longer used and will be removed in the next major version.\")] public static void SetSuitableName(this ISceneObject sceneObject, string baseName = \"\") Parameters Type Name Description ISceneObject sceneObject ISceneObject to whom the UniqueName will be validated. System.String baseName Optional base for this sceneObject 's UniqueName ."
  },
  "api/VRBuilder.Core.Properties.TeleportationProperty.html": {
    "href": "api/VRBuilder.Core.Properties.TeleportationProperty.html",
    "title": "Class TeleportationProperty | VR Builder Documentation",
    "keywords": "Class TeleportationProperty XR implementation of ITeleportationProperty . Inheritance System.Object ProcessSceneObjectProperty LockableProperty TeleportationProperty Implements ITeleportationProperty ISceneObjectProperty ILockable Inherited Members LockableProperty.Locked LockableProperty.Unlocked LockableProperty.LockOnParentObjectLock LockableProperty.IsLocked LockableProperty.EndStepLocked LockableProperty.SetLocked(Boolean) LockableProperty.RequestLocked(Boolean, IStepData) LockableProperty.RemoveUnlocker(IStepData) ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.XRInteraction.dll Syntax public class TeleportationProperty : LockableProperty, ITeleportationProperty, ISceneObjectProperty, ILockable Remarks This implementation is based on 'TeleportationAnchor'. Properties | Improve this Doc View Source IsActive Declaration public bool IsActive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source OnInitialized Declaration public UnityEvent OnInitialized { get; } Property Value Type Description UnityEvent | Improve this Doc View Source TeleportEnded Declaration public UnityEvent<TeleportationPropertyEventArgs> TeleportEnded { get; } Property Value Type Description UnityEvent < TeleportationPropertyEventArgs > | Improve this Doc View Source WasUsedToTeleport Declaration public bool WasUsedToTeleport { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Awake() Declaration protected void Awake() | Improve this Doc View Source EmitTeleported(TeleportingEventArgs) Declaration protected virtual void EmitTeleported(TeleportingEventArgs args) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.TeleportingEventArgs args | Improve this Doc View Source FastForwardTeleport() Declaration public void FastForwardTeleport() | Improve this Doc View Source ForceSetTeleported() Declaration public void ForceSetTeleported() | Improve this Doc View Source Initialize() Declaration public void Initialize() | Improve this Doc View Source InternalSetLocked(Boolean) Declaration protected override void InternalSetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState Overrides LockableProperty.InternalSetLocked(Boolean) | Improve this Doc View Source OnDisable() Declaration protected override void OnDisable() Overrides LockableProperty.OnDisable() | Improve this Doc View Source OnEnable() Declaration protected override void OnEnable() Overrides LockableProperty.OnEnable() Implements ITeleportationProperty ISceneObjectProperty ILockable"
  },
  "api/VRBuilder.Core.Properties.TextDataProperty.html": {
    "href": "api/VRBuilder.Core.Properties.TextDataProperty.html",
    "title": "Class TextDataProperty | VR Builder Documentation",
    "keywords": "Class TextDataProperty String implementation of the DataProperty<T> class. Inheritance System.Object ProcessSceneObjectProperty DataProperty < System.String > TextDataProperty Implements IDataProperty < System.String > IDataPropertyBase ISceneObjectProperty Inherited Members DataProperty<String>.storedValue DataProperty<String>.GetValue() DataProperty<String>.ResetValue() DataProperty<String>.SetValue(String) DataProperty<String>.ValueToString(String) ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class TextDataProperty : DataProperty<string>, IDataProperty<string>, IDataPropertyBase, ISceneObjectProperty Properties | Improve this Doc View Source DefaultValue Declaration public override string DefaultValue { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Properties.DataProperty<System.String>.DefaultValue | Improve this Doc View Source OnValueChanged Declaration public override UnityEvent<string> OnValueChanged { get; } Property Value Type Description UnityEvent < System.String > Overrides VRBuilder.Core.Properties.DataProperty<System.String>.OnValueChanged | Improve this Doc View Source OnValueReset Declaration public override UnityEvent OnValueReset { get; } Property Value Type Description UnityEvent Overrides VRBuilder.Core.Properties.DataProperty<System.String>.OnValueReset Implements IDataProperty<T> IDataPropertyBase ISceneObjectProperty Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.TransformInRangeDetectorProperty.html": {
    "href": "api/VRBuilder.Core.Properties.TransformInRangeDetectorProperty.html",
    "title": "Class TransformInRangeDetectorProperty | VR Builder Documentation",
    "keywords": "Class TransformInRangeDetectorProperty Inheritance System.Object ProcessSceneObjectProperty TransformInRangeDetectorProperty Implements ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class TransformInRangeDetectorProperty : ProcessSceneObjectProperty, ISceneObjectProperty Properties | Improve this Doc View Source DetectionRange Declaration public float DetectionRange { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source DestroySelf() Declaration public void DestroySelf() | Improve this Doc View Source EmitEnteredArea() Declaration protected void EmitEnteredArea() | Improve this Doc View Source EmitExitedArea() Declaration protected void EmitExitedArea() | Improve this Doc View Source IsTargetInsideRange() Declaration public virtual bool IsTargetInsideRange() Returns Type Description System.Boolean | Improve this Doc View Source Refresh() Check if there are transforms in range and fire the appropriate events. Declaration public void Refresh() | Improve this Doc View Source SetTrackedTransform(Transform) Declaration public void SetTrackedTransform(Transform transformToBeTracked) Parameters Type Name Description Transform transformToBeTracked Events | Improve this Doc View Source EnteredRange Declaration public event EventHandler<TransformInRangeDetectorProperty.RangeEventArgs> EnteredRange Event Type Type Description System.EventHandler < TransformInRangeDetectorProperty.RangeEventArgs > | Improve this Doc View Source ExitedRange Declaration public event EventHandler<TransformInRangeDetectorProperty.RangeEventArgs> ExitedRange Event Type Type Description System.EventHandler < TransformInRangeDetectorProperty.RangeEventArgs > Implements ISceneObjectProperty Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.TransformInRangeDetectorProperty.RangeEventArgs.html": {
    "href": "api/VRBuilder.Core.Properties.TransformInRangeDetectorProperty.RangeEventArgs.html",
    "title": "Class TransformInRangeDetectorProperty.RangeEventArgs | VR Builder Documentation",
    "keywords": "Class TransformInRangeDetectorProperty.RangeEventArgs Inheritance System.Object System.EventArgs TransformInRangeDetectorProperty.RangeEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class RangeEventArgs : EventArgs Constructors | Improve this Doc View Source RangeEventArgs(Transform) Declaration public RangeEventArgs(Transform trackedTransform) Parameters Type Name Description Transform trackedTransform Fields | Improve this Doc View Source TrackedTransform Declaration public readonly Transform TrackedTransform Field Value Type Description Transform"
  },
  "api/VRBuilder.Core.Properties.UserSceneObject.html": {
    "href": "api/VRBuilder.Core.Properties.UserSceneObject.html",
    "title": "Class UserSceneObject | VR Builder Documentation",
    "keywords": "Class UserSceneObject Used to identify the user within the scene. Inheritance System.Object UserSceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class UserSceneObject : MonoBehaviour Properties | Improve this Doc View Source Head Returns the user's head transform. Declaration public Transform Head { get; } Property Value Type Description Transform | Improve this Doc View Source LeftHand Returns the user's left hand transform. Declaration public Transform LeftHand { get; } Property Value Type Description Transform | Improve this Doc View Source RightHand Returns the user's right hand transform. Declaration public Transform RightHand { get; } Property Value Type Description Transform"
  },
  "api/VRBuilder.Core.RandomBranchPostProcessing.html": {
    "href": "api/VRBuilder.Core.RandomBranchPostProcessing.html",
    "title": "Class RandomBranchPostProcessing | VR Builder Documentation",
    "keywords": "Class RandomBranchPostProcessing IStep implementation of EntityPostProcessing<T> specific for \"randomBranch\" steps. Inheritance System.Object EntityPostProcessing < IStep > RandomBranchPostProcessing Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Randomization.dll Syntax public class RandomBranchPostProcessing : EntityPostProcessing<IStep> Methods | Improve this Doc View Source Execute(IStep) Declaration public override void Execute(IStep entity) Parameters Type Name Description IStep entity Overrides VRBuilder.Core.EntityPostProcessing<VRBuilder.Core.IStep>.Execute(VRBuilder.Core.IStep)"
  },
  "api/VRBuilder.Core.RestrictiveEnvironment.DefaultStepLockHandling.html": {
    "href": "api/VRBuilder.Core.RestrictiveEnvironment.DefaultStepLockHandling.html",
    "title": "Class DefaultStepLockHandling | VR Builder Documentation",
    "keywords": "Class DefaultStepLockHandling Restricts interaction with scene objects by using LockableProperties, which are extracted from the IStepData . Inheritance System.Object StepLockHandlingStrategy DefaultStepLockHandling Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.RestrictiveEnvironment Assembly : VRBuilder.Core.dll Syntax public class DefaultStepLockHandling : StepLockHandlingStrategy Methods | Improve this Doc View Source Configure(IMode) Declaration public override void Configure(IMode mode) Parameters Type Name Description IMode mode Overrides StepLockHandlingStrategy.Configure(IMode) | Improve this Doc View Source Lock(IStepData, IEnumerable<LockablePropertyData>) Declaration public override void Lock(IStepData data, IEnumerable<LockablePropertyData> manualUnlocked) Parameters Type Name Description IStepData data System.Collections.Generic.IEnumerable < LockablePropertyData > manualUnlocked Overrides StepLockHandlingStrategy.Lock(IStepData, IEnumerable<LockablePropertyData>) | Improve this Doc View Source OnProcessFinished(IProcess) Declaration public override void OnProcessFinished(IProcess process) Parameters Type Name Description IProcess process Overrides StepLockHandlingStrategy.OnProcessFinished(IProcess) | Improve this Doc View Source OnProcessStarted(IProcess) Declaration public override void OnProcessStarted(IProcess process) Parameters Type Name Description IProcess process Overrides StepLockHandlingStrategy.OnProcessStarted(IProcess) | Improve this Doc View Source Unlock(IStepData, IEnumerable<LockablePropertyData>) Declaration public override void Unlock(IStepData data, IEnumerable<LockablePropertyData> manualUnlocked) Parameters Type Name Description IStepData data System.Collections.Generic.IEnumerable < LockablePropertyData > manualUnlocked Overrides StepLockHandlingStrategy.Unlock(IStepData, IEnumerable<LockablePropertyData>)"
  },
  "api/VRBuilder.Core.RestrictiveEnvironment.html": {
    "href": "api/VRBuilder.Core.RestrictiveEnvironment.html",
    "title": "Namespace VRBuilder.Core.RestrictiveEnvironment | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.RestrictiveEnvironment Classes DefaultStepLockHandling Restricts interaction with scene objects by using LockableProperties, which are extracted from the IStepData . LockablePropertyData Contains a target LockableProperty and additional information which define how the property is handled. NonLockingStepHandling This implementation does not care about restrictive environment and does nothing. Use this strategy to disable the feature. StepLockHandlingStrategy Allows to implement strategies which restrict interaction with scene objects for specific steps."
  },
  "api/VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.html": {
    "href": "api/VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.html",
    "title": "Class LockablePropertyData | VR Builder Documentation",
    "keywords": "Class LockablePropertyData Contains a target LockableProperty and additional information which define how the property is handled. Inheritance System.Object LockablePropertyData Inherited Members System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.RestrictiveEnvironment Assembly : VRBuilder.Core.dll Syntax public class LockablePropertyData Constructors | Improve this Doc View Source LockablePropertyData(LockableProperty) Declaration public LockablePropertyData(LockableProperty property) Parameters Type Name Description LockableProperty property | Improve this Doc View Source LockablePropertyData(LockableProperty, Boolean) Declaration public LockablePropertyData(LockableProperty property, bool endStepLocked) Parameters Type Name Description LockableProperty property System.Boolean endStepLocked Fields | Improve this Doc View Source EndStepLocked If true the property is locked in the end of a step. Declaration public bool EndStepLocked Field Value Type Description System.Boolean | Improve this Doc View Source Property Target lockable property. Declaration public readonly LockableProperty Property Field Value Type Description LockableProperty Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source Equals(LockablePropertyData) Declaration protected bool Equals(LockablePropertyData other) Parameters Type Name Description LockablePropertyData other Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode()"
  },
  "api/VRBuilder.Core.RestrictiveEnvironment.NonLockingStepHandling.html": {
    "href": "api/VRBuilder.Core.RestrictiveEnvironment.NonLockingStepHandling.html",
    "title": "Class NonLockingStepHandling | VR Builder Documentation",
    "keywords": "Class NonLockingStepHandling This implementation does not care about restrictive environment and does nothing. Use this strategy to disable the feature. Inheritance System.Object StepLockHandlingStrategy NonLockingStepHandling Inherited Members StepLockHandlingStrategy.Configure(IMode) StepLockHandlingStrategy.OnProcessStarted(IProcess) StepLockHandlingStrategy.OnProcessFinished(IProcess) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.RestrictiveEnvironment Assembly : VRBuilder.Core.dll Syntax public class NonLockingStepHandling : StepLockHandlingStrategy Methods | Improve this Doc View Source Lock(IStepData, IEnumerable<LockablePropertyData>) Declaration public override void Lock(IStepData data, IEnumerable<LockablePropertyData> manualUnlocked) Parameters Type Name Description IStepData data System.Collections.Generic.IEnumerable < LockablePropertyData > manualUnlocked Overrides StepLockHandlingStrategy.Lock(IStepData, IEnumerable<LockablePropertyData>) | Improve this Doc View Source Unlock(IStepData, IEnumerable<LockablePropertyData>) Declaration public override void Unlock(IStepData data, IEnumerable<LockablePropertyData> manualUnlocked) Parameters Type Name Description IStepData data System.Collections.Generic.IEnumerable < LockablePropertyData > manualUnlocked Overrides StepLockHandlingStrategy.Unlock(IStepData, IEnumerable<LockablePropertyData>)"
  },
  "api/VRBuilder.Core.RestrictiveEnvironment.StepLockHandlingStrategy.html": {
    "href": "api/VRBuilder.Core.RestrictiveEnvironment.StepLockHandlingStrategy.html",
    "title": "Class StepLockHandlingStrategy | VR Builder Documentation",
    "keywords": "Class StepLockHandlingStrategy Allows to implement strategies which restrict interaction with scene objects for specific steps. Inheritance System.Object StepLockHandlingStrategy DefaultStepLockHandling NonLockingStepHandling Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.RestrictiveEnvironment Assembly : VRBuilder.Core.dll Syntax public abstract class StepLockHandlingStrategy Methods | Improve this Doc View Source Configure(IMode) Will be called whenever the mode is changed, allows to adapt to lock handling to it. Declaration public virtual void Configure(IMode mode) Parameters Type Name Description IMode mode | Improve this Doc View Source Lock(IStepData, IEnumerable<LockablePropertyData>) Locks all unlocked LockableProperties for the current step. Declaration public abstract void Lock(IStepData data, IEnumerable<LockablePropertyData> manualUnlocked) Parameters Type Name Description IStepData data IStepData of the current step System.Collections.Generic.IEnumerable < LockablePropertyData > manualUnlocked All LockableProperties which were unlocked in addition | Improve this Doc View Source OnProcessFinished(IProcess) Will be called once when the currently running process finishes. Declaration public virtual void OnProcessFinished(IProcess process) Parameters Type Name Description IProcess process | Improve this Doc View Source OnProcessStarted(IProcess) Will be called once when a process is started. Declaration public virtual void OnProcessStarted(IProcess process) Parameters Type Name Description IProcess process | Improve this Doc View Source Unlock(IStepData, IEnumerable<LockablePropertyData>) Unlocks the restrictive environment and allows interaction with scene objects required for this Step to complete. Declaration public abstract void Unlock(IStepData data, IEnumerable<LockablePropertyData> manualUnlocked) Parameters Type Name Description IStepData data IStepData of the current step System.Collections.Generic.IEnumerable < LockablePropertyData > manualUnlocked All LockableProperties which are should be unlocked in addition"
  },
  "api/VRBuilder.Core.Runtime.Properties.html": {
    "href": "api/VRBuilder.Core.Runtime.Properties.html",
    "title": "Namespace VRBuilder.Core.Runtime.Properties | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Runtime.Properties Interfaces ICanBeEmpty Interface which allows validation to check if the object validated is empty."
  },
  "api/VRBuilder.Core.Runtime.Properties.ICanBeEmpty.html": {
    "href": "api/VRBuilder.Core.Runtime.Properties.ICanBeEmpty.html",
    "title": "Interface ICanBeEmpty | VR Builder Documentation",
    "keywords": "Interface ICanBeEmpty Interface which allows validation to check if the object validated is empty. Namespace : VRBuilder.Core.Runtime.Properties Assembly : VRBuilder.Core.dll Syntax public interface ICanBeEmpty Methods | Improve this Doc View Source IsEmpty() Returns true when this object is not properly filled. Declaration bool IsEmpty() Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Runtime.Utils.html": {
    "href": "api/VRBuilder.Core.Runtime.Utils.html",
    "title": "Namespace VRBuilder.Core.Runtime.Utils | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Runtime.Utils Classes SettingsObject<T> ScriptableObject with additional load and save mechanic to make it a singleton."
  },
  "api/VRBuilder.Core.Runtime.Utils.SettingsObject-1.html": {
    "href": "api/VRBuilder.Core.Runtime.Utils.SettingsObject-1.html",
    "title": "Class SettingsObject<T> | VR Builder Documentation",
    "keywords": "Class SettingsObject<T> ScriptableObject with additional load and save mechanic to make it a singleton. Inheritance System.Object SettingsObject<T> LanguageSettings InteractionSettings SceneObjectGroups SceneObjectTags LifeCycleLoggingConfig InteractionComponentSettings SnapZoneSettings VoiceChatSettings TextToSpeechConfiguration Namespace : VRBuilder.Core.Runtime.Utils Assembly : VRBuilder.Core.dll Syntax public class SettingsObject<T> : ScriptableObject where T : ScriptableObject, new() Type Parameters Name Description T The class itself Properties | Improve this Doc View Source Instance Declaration public static T Instance { get; } Property Value Type Description T Methods | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source Save() Saves the VR Builder settings, only works in editor. Declaration public void Save()"
  },
  "api/VRBuilder.Core.SceneObjects.GuidContainerEventArgs.html": {
    "href": "api/VRBuilder.Core.SceneObjects.GuidContainerEventArgs.html",
    "title": "Class GuidContainerEventArgs | VR Builder Documentation",
    "keywords": "Class GuidContainerEventArgs Event args for guid container events. Inheritance System.Object System.EventArgs GuidContainerEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public class GuidContainerEventArgs : EventArgs Constructors | Improve this Doc View Source GuidContainerEventArgs(Guid) Declaration public GuidContainerEventArgs(Guid guid) Parameters Type Name Description System.Guid guid Fields | Improve this Doc View Source Guid Declaration public readonly Guid Guid Field Value Type Description System.Guid"
  },
  "api/VRBuilder.Core.SceneObjects.html": {
    "href": "api/VRBuilder.Core.SceneObjects.html",
    "title": "Namespace VRBuilder.Core.SceneObjects | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.SceneObjects Classes GuidContainerEventArgs Event args for guid container events. LockStateChangedEventArgs MultipleSceneObjectReference Step inspector reference to multiple ISceneObject s. MultipleScenePropertyReference<T> Step inspector reference to multiple ISceneObjectProperty s. MultipleSceneReference<T> Step inspector reference to multiple objects. ObjectReference<T> Base class for references to process objects and their properties. ProcessSceneObject This component gives a GameObject a stable, non-replicatable Globally Unique Identifier. It can be used to reference a specific instance of an object no matter where it is. ProcessSceneReference<T> Step inspector reference to a scene object or a specific property. ProcessSceneReferenceBase Base class for a process reference to one or more objects. ProcessVariableSelectableValue<T> Selectable value implementation for process variables. PropertyReferenceOrTagSelectableValue<T> Lets the user choose between a scene property reference or a tag. SceneObjectNameChanged SceneObjectReference Weak reference by a unique name to a process object in a scene. SceneObjectRegistry SceneObjectRegistryV2 Implementation of ISceneObjectRegistry that handles ISceneObject s with one or more GUID associated to them. The GUIDs don't have to be unique and can represent a group of objects. SceneObjectTag<T> Step inspector reference to a SceneObjectTagBase requiring a specific property. SceneObjectTagBase Base class for step inspector references to tags. ScenePropertyReference<T> Weak reference to a property of a process object with the same unique name. SelectableValue<TFirst, TSecond> Stores two values and a selection between the two. SerializableGuid Serializable version of a System.Guid . SingleSceneObjectReference Step inspector reference to a single ISceneObject . SingleScenePropertyReference<T> Step inspector reference to a single ISceneObjectProperty . SingleSceneReference<T> Step inspector reference to a single object. TaggableObjectEventArgs Event args for taggable objects events. UniqueIdChangedEventArgs Arguments for UniqueIdChanged event. UniqueNameReference Simple container for UniqueName. VideoClipOrURLSelectableValue Lets the user select between a VideoClip asset (stored as asset path) and a string URL. Interfaces IGuidContainer A container for a list of guids that are associated to an object. ILockable Basic interface for everything which is lockable. ISceneObject Gives the possibility to easily identify targets for Conditions, Behaviors and so on. ISceneObjectRegistry ITagContainer A container for a list of guids that are associated to an object as tags."
  },
  "api/VRBuilder.Core.SceneObjects.IGuidContainer.html": {
    "href": "api/VRBuilder.Core.SceneObjects.IGuidContainer.html",
    "title": "Interface IGuidContainer | VR Builder Documentation",
    "keywords": "Interface IGuidContainer A container for a list of guids that are associated to an object. Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public interface IGuidContainer Properties | Improve this Doc View Source Guids All guids on the object. Declaration IEnumerable<Guid> Guids { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Guid > Methods | Improve this Doc View Source AddGuid(Guid) Add the specified guid. Declaration void AddGuid(Guid guid) Parameters Type Name Description System.Guid guid | Improve this Doc View Source HasGuid(Guid) True if the object has the specified guid. Declaration bool HasGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean | Improve this Doc View Source RemoveGuid(Guid) Remove the specified guid. Declaration bool RemoveGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean Events | Improve this Doc View Source GuidAdded Raised when a guid is added. Declaration event EventHandler<GuidContainerEventArgs> GuidAdded Event Type Type Description System.EventHandler < GuidContainerEventArgs > | Improve this Doc View Source GuidRemoved Raised when a guid is removed. Declaration event EventHandler<GuidContainerEventArgs> GuidRemoved Event Type Type Description System.EventHandler < GuidContainerEventArgs >"
  },
  "api/VRBuilder.Core.SceneObjects.ILockable.html": {
    "href": "api/VRBuilder.Core.SceneObjects.ILockable.html",
    "title": "Interface ILockable | VR Builder Documentation",
    "keywords": "Interface ILockable Basic interface for everything which is lockable. Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public interface ILockable Properties | Improve this Doc View Source IsLocked Returns if the object is locked. Declaration bool IsLocked { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source RemoveUnlocker(IStepData) Manually removes a step data keeping the object unlocked. Declaration bool RemoveUnlocker(IStepData data) Parameters Type Name Description IStepData data Returns Type Description System.Boolean | Improve this Doc View Source RequestLocked(Boolean, IStepData) Requests a change on the lock state of the object. Declaration void RequestLocked(bool lockState, IStepData stepData = null) Parameters Type Name Description System.Boolean lockState IStepData stepData | Improve this Doc View Source SetLocked(Boolean) Changes the lock state of the object. Declaration void SetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState Events | Improve this Doc View Source Locked Will be called when the object containing this interface is locked. Declaration event EventHandler<LockStateChangedEventArgs> Locked Event Type Type Description System.EventHandler < LockStateChangedEventArgs > | Improve this Doc View Source Unlocked Will be called when the object containing this interface is unlocked. Declaration event EventHandler<LockStateChangedEventArgs> Unlocked Event Type Type Description System.EventHandler < LockStateChangedEventArgs >"
  },
  "api/VRBuilder.Core.SceneObjects.ISceneObject.html": {
    "href": "api/VRBuilder.Core.SceneObjects.ISceneObject.html",
    "title": "Interface ISceneObject | VR Builder Documentation",
    "keywords": "Interface ISceneObject Gives the possibility to easily identify targets for Conditions, Behaviors and so on. Inherited Members ILockable.Locked ILockable.Unlocked ILockable.IsLocked ILockable.SetLocked(Boolean) ILockable.RequestLocked(Boolean, IStepData) ILockable.RemoveUnlocker(IStepData) IGuidContainer.GuidAdded IGuidContainer.GuidRemoved IGuidContainer.Guids IGuidContainer.HasGuid(Guid) IGuidContainer.AddGuid(Guid) IGuidContainer.RemoveGuid(Guid) Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public interface ISceneObject : ILockable, IGuidContainer Properties | Improve this Doc View Source GameObject Target GameObject, used for applying stuff. Declaration GameObject GameObject { get; } Property Value Type Description GameObject | Improve this Doc View Source Guid Unique Guid for each entity, which is required Declaration Guid Guid { get; } Property Value Type Description System.Guid | Improve this Doc View Source Properties Properties on the scene object. Declaration ICollection<ISceneObjectProperty> Properties { get; } Property Value Type Description System.Collections.Generic.ICollection < ISceneObjectProperty > | Improve this Doc View Source UniqueName Unique name which is not required Declaration [Obsolete(\"Use Guid instead.\")] string UniqueName { get; } Property Value Type Description System.String Methods | Improve this Doc View Source ChangeUniqueName(String) Attempts to change the scene object's unique name to the specified name. Declaration [Obsolete(\"Use ChangeUniqueId instead.\")] void ChangeUniqueName(string newName) Parameters Type Name Description System.String newName | Improve this Doc View Source CheckHasProperty(Type) True if the scene object has a property of the specified type. Declaration bool CheckHasProperty(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean | Improve this Doc View Source CheckHasProperty<T>() True if the scene object has a property of the specified type. Declaration bool CheckHasProperty<T>() where T : ISceneObjectProperty Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source GetProperty<T>() Returns a property of the specified type. Declaration T GetProperty<T>() where T : ISceneObjectProperty Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source SetObjectId(Guid) Gives the object a new specified unique ID. Declaration void SetObjectId(Guid guid) Parameters Type Name Description System.Guid guid | Improve this Doc View Source ValidateProperties(IEnumerable<Type>) Validates properties on the scene object. Declaration void ValidateProperties(IEnumerable<Type> properties) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Type > properties Events | Improve this Doc View Source ObjectIdChanged Called when the object's object id has been changed. Declaration event EventHandler<UniqueIdChangedEventArgs> ObjectIdChanged Event Type Type Description System.EventHandler < UniqueIdChangedEventArgs > | Improve this Doc View Source UniqueNameChanged Declaration [Obsolete(\"This event is no longer used and will be removed in the next major release. Use UniqueIdChanged instead.\")] event EventHandler<SceneObjectNameChanged> UniqueNameChanged Event Type Type Description System.EventHandler < SceneObjectNameChanged > Extension Methods SceneObjectExtensions.SetSuitableName(ISceneObject, String) SceneObjectExtensions.AddProcessProperty<T>(ISceneObject) SceneObjectExtensions.AddProcessProperty(ISceneObject, Type) SceneObjectExtensions.RemoveProcessProperty(ISceneObject, Component, Boolean, IEnumerable<Component>) SceneObjectExtensions.RemoveProcessProperty(ISceneObject, Type, Boolean, IEnumerable<Component>)"
  },
  "api/VRBuilder.Core.SceneObjects.ISceneObjectRegistry.html": {
    "href": "api/VRBuilder.Core.SceneObjects.ISceneObjectRegistry.html",
    "title": "Interface ISceneObjectRegistry | VR Builder Documentation",
    "keywords": "Interface ISceneObjectRegistry Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public interface ISceneObjectRegistry Properties | Improve this Doc View Source Item[Guid] Shortcut for GetByGuid(Guid guid) method. Declaration [Obsolete(\"Use GetObjects instead\")] ISceneObject this[Guid guid] { get; } Parameters Type Name Description System.Guid guid Property Value Type Description ISceneObject | Improve this Doc View Source Item[String] Shortcut for GetByName(string name) method. Declaration [Obsolete(\"Use GetObjects instead\")] ISceneObject this[string name] { get; } Parameters Type Name Description System.String name Property Value Type Description ISceneObject Methods | Improve this Doc View Source ContainsGuid(Guid) Returns if the Guid is registered in the registry. Declaration bool ContainsGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean | Improve this Doc View Source ContainsName(String) Returns if the name is registered in the registry. Declaration [Obsolete(\"Use ContainsGuid instead.\")] bool ContainsName(string name) Parameters Type Name Description System.String name Returns Type Description System.Boolean | Improve this Doc View Source GetByGuid(Guid) Returns the IProcessSceneEntity belonging to the given Guid. If there is no fitting Entity found a MissingEntityException will be thrown. Declaration [Obsolete(\"Use GetObjects instead.\")] ISceneObject GetByGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description ISceneObject | Improve this Doc View Source GetByName(String) Returns the IProcessSceneEntity belonging to the given unique name. If there is no fitting Entity found a MissingEntityException will be thrown. Declaration [Obsolete(\"Use GetObjects instead.\")] ISceneObject GetByName(string name) Parameters Type Name Description System.String name Returns Type Description ISceneObject | Improve this Doc View Source GetByTag(Guid) Declaration [Obsolete(\"Use GetObjects instead.\")] IEnumerable<ISceneObject> GetByTag(Guid tag) Parameters Type Name Description System.Guid tag Returns Type Description System.Collections.Generic.IEnumerable < ISceneObject > | Improve this Doc View Source GetObjects(Guid) Returns all registered scene objects which have the provided guid assigned to them. Declaration IEnumerable<ISceneObject> GetObjects(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Collections.Generic.IEnumerable < ISceneObject > | Improve this Doc View Source GetProperties<T>(Guid) Returns all registered scene objects with the provided guid and at least one valid property of the specified type. Declaration IEnumerable<T> GetProperties<T>(Guid guid) where T : ISceneObjectProperty Parameters Type Name Description System.Guid guid Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source GetPropertyByTag<T>(Guid) Declaration [Obsolete(\"Use GetProperties instead.\")] IEnumerable<T> GetPropertyByTag<T>(Guid tag) where T : ISceneObjectProperty Parameters Type Name Description System.Guid tag Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source Refresh() Updates the registry by removing all ISceneObject which are not in the scene anymore and adding new ones. Declaration void Refresh() | Improve this Doc View Source Register(ISceneObject) Registers an SceneObject in the registry. If there is an SceneObject with the same name already registered, an NameNotUniqueException will be thrown. Also if the Guid is already known an SceneObjectAlreadyRegisteredException will be thrown. Declaration void Register(ISceneObject obj) Parameters Type Name Description ISceneObject obj | Improve this Doc View Source RegisterAll() Registers all SceneObject in scene, independent of their state. Declaration void RegisterAll() | Improve this Doc View Source Unregister(ISceneObject) Removes the SceneObject completely from the Registry. Declaration bool Unregister(ISceneObject obj) Parameters Type Name Description ISceneObject obj Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Core.SceneObjects.ITagContainer.html": {
    "href": "api/VRBuilder.Core.SceneObjects.ITagContainer.html",
    "title": "Interface ITagContainer | VR Builder Documentation",
    "keywords": "Interface ITagContainer A container for a list of guids that are associated to an object as tags. Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [Obsolete(\"Use IGuidContainer instead.\")] public interface ITagContainer Properties | Improve this Doc View Source Tags All tags on the object. Declaration IEnumerable<Guid> Tags { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Guid > Methods | Improve this Doc View Source AddTag(Guid) Add the specified tag. Declaration void AddTag(Guid tag) Parameters Type Name Description System.Guid tag | Improve this Doc View Source HasTag(Guid) True if the object has the specified tag. Declaration bool HasTag(Guid tag) Parameters Type Name Description System.Guid tag Returns Type Description System.Boolean | Improve this Doc View Source RemoveTag(Guid) Remove the specified tag. Declaration bool RemoveTag(Guid tag) Parameters Type Name Description System.Guid tag Returns Type Description System.Boolean Events | Improve this Doc View Source TagAdded Raised when a tag is added. Declaration event EventHandler<GuidContainerEventArgs> TagAdded Event Type Type Description System.EventHandler < GuidContainerEventArgs > | Improve this Doc View Source TagRemoved Raised when a tag is removed. Declaration event EventHandler<GuidContainerEventArgs> TagRemoved Event Type Type Description System.EventHandler < GuidContainerEventArgs >"
  },
  "api/VRBuilder.Core.SceneObjects.LockStateChangedEventArgs.html": {
    "href": "api/VRBuilder.Core.SceneObjects.LockStateChangedEventArgs.html",
    "title": "Class LockStateChangedEventArgs | VR Builder Documentation",
    "keywords": "Class LockStateChangedEventArgs Inheritance System.Object System.EventArgs LockStateChangedEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public class LockStateChangedEventArgs : EventArgs Constructors | Improve this Doc View Source LockStateChangedEventArgs(Boolean) Declaration public LockStateChangedEventArgs(bool isLocked) Parameters Type Name Description System.Boolean isLocked Fields | Improve this Doc View Source IsLocked Declaration public readonly bool IsLocked Field Value Type Description System.Boolean"
  },
  "api/VRBuilder.Core.SceneObjects.MultipleSceneObjectReference.html": {
    "href": "api/VRBuilder.Core.SceneObjects.MultipleSceneObjectReference.html",
    "title": "Class MultipleSceneObjectReference | VR Builder Documentation",
    "keywords": "Class MultipleSceneObjectReference Step inspector reference to multiple ISceneObject s. Inheritance System.Object ProcessSceneReferenceBase ProcessSceneReference < ISceneObject > MultipleSceneReference < ISceneObject > MultipleSceneObjectReference Implements ICanBeEmpty Inherited Members MultipleSceneReference<ISceneObject>.Values MultipleSceneReference<ISceneObject>.HasValue() MultipleSceneReference<ISceneObject>.ToString() ProcessSceneReferenceBase.Guids ProcessSceneReferenceBase.AddGuid(Guid) ProcessSceneReferenceBase.RemoveGuid(Guid) ProcessSceneReferenceBase.ResetGuids(IEnumerable<Guid>) ProcessSceneReferenceBase.IsEmpty() ProcessSceneReferenceBase.Equals(Object) ProcessSceneReferenceBase.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class MultipleSceneObjectReference : MultipleSceneReference<ISceneObject>, ICanBeEmpty Constructors | Improve this Doc View Source MultipleSceneObjectReference() Declaration public MultipleSceneObjectReference() | Improve this Doc View Source MultipleSceneObjectReference(IEnumerable<Guid>) Declaration public MultipleSceneObjectReference(IEnumerable<Guid> guids) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Guid > guids | Improve this Doc View Source MultipleSceneObjectReference(Guid) Declaration public MultipleSceneObjectReference(Guid guid) Parameters Type Name Description System.Guid guid Methods | Improve this Doc View Source DetermineValue(IEnumerable<ISceneObject>) Declaration protected override IEnumerable<ISceneObject> DetermineValue(IEnumerable<ISceneObject> cachedValue) Parameters Type Name Description System.Collections.Generic.IEnumerable < ISceneObject > cachedValue Returns Type Description System.Collections.Generic.IEnumerable < ISceneObject > Overrides VRBuilder.Core.SceneObjects.MultipleSceneReference<VRBuilder.Core.SceneObjects.ISceneObject>.DetermineValue(System.Collections.Generic.IEnumerable<VRBuilder.Core.SceneObjects.ISceneObject>) Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.MultipleScenePropertyReference-1.html": {
    "href": "api/VRBuilder.Core.SceneObjects.MultipleScenePropertyReference-1.html",
    "title": "Class MultipleScenePropertyReference<T> | VR Builder Documentation",
    "keywords": "Class MultipleScenePropertyReference<T> Step inspector reference to multiple ISceneObjectProperty s. Inheritance System.Object ProcessSceneReferenceBase ProcessSceneReference <T> MultipleSceneReference <T> MultipleScenePropertyReference<T> Implements ICanBeEmpty Inherited Members MultipleSceneReference<T>.Values MultipleSceneReference<T>.HasValue() MultipleSceneReference<T>.ToString() ProcessSceneReferenceBase.Guids ProcessSceneReferenceBase.AddGuid(Guid) ProcessSceneReferenceBase.RemoveGuid(Guid) ProcessSceneReferenceBase.ResetGuids(IEnumerable<Guid>) ProcessSceneReferenceBase.IsEmpty() ProcessSceneReferenceBase.Equals(Object) ProcessSceneReferenceBase.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class MultipleScenePropertyReference<T> : MultipleSceneReference<T>, ICanBeEmpty where T : class, ISceneObjectProperty Type Parameters Name Description T Constructors | Improve this Doc View Source MultipleScenePropertyReference() Declaration public MultipleScenePropertyReference() | Improve this Doc View Source MultipleScenePropertyReference(IEnumerable<Guid>) Declaration public MultipleScenePropertyReference(IEnumerable<Guid> guids) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Guid > guids | Improve this Doc View Source MultipleScenePropertyReference(Guid) Declaration public MultipleScenePropertyReference(Guid guid) Parameters Type Name Description System.Guid guid Methods | Improve this Doc View Source DetermineValue(IEnumerable<T>) Declaration protected override IEnumerable<T> DetermineValue(IEnumerable<T> cachedValue) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> cachedValue Returns Type Description System.Collections.Generic.IEnumerable <T> Overrides VRBuilder.Core.SceneObjects.MultipleSceneReference<T>.DetermineValue(System.Collections.Generic.IEnumerable<T>) Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.MultipleSceneReference-1.html": {
    "href": "api/VRBuilder.Core.SceneObjects.MultipleSceneReference-1.html",
    "title": "Class MultipleSceneReference<T> | VR Builder Documentation",
    "keywords": "Class MultipleSceneReference<T> Step inspector reference to multiple objects. Inheritance System.Object ProcessSceneReferenceBase ProcessSceneReference <T> MultipleSceneReference<T> MultipleSceneObjectReference MultipleScenePropertyReference<T> Implements ICanBeEmpty Inherited Members ProcessSceneReferenceBase.Guids ProcessSceneReferenceBase.AddGuid(Guid) ProcessSceneReferenceBase.RemoveGuid(Guid) ProcessSceneReferenceBase.ResetGuids(IEnumerable<Guid>) ProcessSceneReferenceBase.IsEmpty() ProcessSceneReferenceBase.Equals(Object) ProcessSceneReferenceBase.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public abstract class MultipleSceneReference<T> : ProcessSceneReference<T>, ICanBeEmpty where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source MultipleSceneReference() Declaration public MultipleSceneReference() | Improve this Doc View Source MultipleSceneReference(IEnumerable<Guid>) Declaration public MultipleSceneReference(IEnumerable<Guid> guids) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Guid > guids | Improve this Doc View Source MultipleSceneReference(Guid) Declaration public MultipleSceneReference(Guid guid) Parameters Type Name Description System.Guid guid Properties | Improve this Doc View Source Values The referenced values. Declaration public IEnumerable<T> Values { get; } Property Value Type Description System.Collections.Generic.IEnumerable <T> Methods | Improve this Doc View Source DetermineValue(IEnumerable<T>) Determine the objects referenced by this scene reference. Declaration protected abstract IEnumerable<T> DetermineValue(IEnumerable<T> cachedValue) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> cachedValue Returns Type Description System.Collections.Generic.IEnumerable <T> | Improve this Doc View Source HasValue() Declaration public override bool HasValue() Returns Type Description System.Boolean Overrides ProcessSceneReferenceBase.HasValue() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Operators | Improve this Doc View Source Implicit(MultipleSceneReference<T> to List<T>) Declaration public static implicit operator List<T>(MultipleSceneReference<T> reference) Parameters Type Name Description MultipleSceneReference <T> reference Returns Type Description System.Collections.Generic.List <T> Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.ObjectReference-1.html": {
    "href": "api/VRBuilder.Core.SceneObjects.ObjectReference-1.html",
    "title": "Class ObjectReference<T> | VR Builder Documentation",
    "keywords": "Class ObjectReference<T> Base class for references to process objects and their properties. Inheritance System.Object UniqueNameReference ObjectReference<T> SceneObjectReference ScenePropertyReference<T> Implements ICanBeEmpty Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [Obsolete(\"Use ProcessSceneReferenceBase and derived classes to store references to objects in the scene.\")] public abstract class ObjectReference<T> : UniqueNameReference, ICanBeEmpty where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source ObjectReference() Declaration protected ObjectReference() | Improve this Doc View Source ObjectReference(String) Declaration protected ObjectReference(string uniqueName) Parameters Type Name Description System.String uniqueName Properties | Improve this Doc View Source UniqueName Declaration public override string UniqueName { get; set; } Property Value Type Description System.String Overrides UniqueNameReference.UniqueName | Improve this Doc View Source Value Declaration public T Value { get; } Property Value Type Description T Methods | Improve this Doc View Source DetermineValue(T) Declaration protected abstract T DetermineValue(T cachedValue) Parameters Type Name Description T cachedValue Returns Type Description T | Improve this Doc View Source IsEmpty() Declaration public bool IsEmpty() Returns Type Description System.Boolean Operators | Improve this Doc View Source Implicit(ObjectReference<T> to T) Declaration public static implicit operator T(ObjectReference<T> reference) Parameters Type Name Description ObjectReference <T> reference Returns Type Description T Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.ProcessSceneObject.html": {
    "href": "api/VRBuilder.Core.SceneObjects.ProcessSceneObject.html",
    "title": "Class ProcessSceneObject | VR Builder Documentation",
    "keywords": "Class ProcessSceneObject This component gives a GameObject a stable, non-replicatable Globally Unique Identifier. It can be used to reference a specific instance of an object no matter where it is. Inheritance System.Object ProcessSceneObject Implements ISerializationCallbackReceiver ISceneObject ILockable IGuidContainer Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public class ProcessSceneObject : MonoBehaviour, ISceneObject, ILockable, IGuidContainer Fields | Improve this Doc View Source guid We use this Guid for comparison, generation and caching. Declaration protected Guid guid Field Value Type Description System.Guid Remarks When the VRBuilder.Core.SceneObjects.ProcessSceneObject.serializedGuid is modified by the Unity editor (e.g.: reverting a prefab) this will be used to revert it back canaling the changes of the editor. | Improve this Doc View Source guids Declaration protected List<SerializableGuid> guids Field Value Type Description System.Collections.Generic.List < SerializableGuid > | Improve this Doc View Source tags Declaration [Obsolete(\"This field will be removed in a future major version.\")] protected List<string> tags Field Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source uniqueName Declaration [Obsolete(\"This exists for backwards compatibility. Use the serializedGuid field to store the object's unique identifier.\")] protected string uniqueName Field Value Type Description System.String Properties | Improve this Doc View Source GameObject Declaration public GameObject GameObject { get; } Property Value Type Description GameObject | Improve this Doc View Source Guid Declaration public Guid Guid { get; } Property Value Type Description System.Guid | Improve this Doc View Source Guids Declaration public IEnumerable<Guid> Guids { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Guid > | Improve this Doc View Source IsLocked Declaration public bool IsLocked { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Properties Properties associated with this scene object. Declaration public ICollection<ISceneObjectProperty> Properties { get; } Property Value Type Description System.Collections.Generic.ICollection < ISceneObjectProperty > | Improve this Doc View Source Tags Declaration [Obsolete(\"This property will be removed in a future major version.\")] public IEnumerable<Guid> Tags { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Guid > | Improve this Doc View Source UniqueName Declaration [Obsolete(\"Use Guid instead.\")] public string UniqueName { get; } Property Value Type Description System.String Methods | Improve this Doc View Source AddGuid(Guid) Declaration public void AddGuid(Guid guid) Parameters Type Name Description System.Guid guid | Improve this Doc View Source ChangeUniqueName(String) Declaration [Obsolete(\"This is no longer supported.\")] public void ChangeUniqueName(string newName = \"\") Parameters Type Name Description System.String newName | Improve this Doc View Source CheckHasProperty(Type) Declaration public bool CheckHasProperty(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean | Improve this Doc View Source CheckHasProperty<T>() Declaration public bool CheckHasProperty<T>() where T : ISceneObjectProperty Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source GetProperty<T>() Declaration public T GetProperty<T>() where T : ISceneObjectProperty Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source HasGuid(Guid) Declaration public bool HasGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean | Improve this Doc View Source Init() Initializes the ProcessSceneObject by registering it with the SceneObjectRegistry. It will not register if in prefab mode edit mode or if we are a prefab asset. Declaration protected void Init() | Improve this Doc View Source IsGuidAssigned() Checks if the Guid was assigned a value and not System.Guid.Empty . Declaration protected bool IsGuidAssigned() Returns Type Description System.Boolean true if the Guid is assigned; otherwise, false . | Improve this Doc View Source OnAfterDeserialize() Declaration public void OnAfterDeserialize() | Improve this Doc View Source OnBeforeSerialize() Implement this method to receive a callback before Unity serializes your object. Declaration public void OnBeforeSerialize() Remarks We use this to prevent the GUID to be saved into a prefab on disk. Be aware this is called more often than you would think (e.g.: about once per frame if the object is selected in the editor) https://discussions.unity.com/t/onbeforeserialize-is-getting-called-rapidly/115546 , https://blog.unity.com/engine-platform/serialization-in-unity | Improve this Doc View Source RemoveGuid(Guid) Declaration public bool RemoveGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean | Improve this Doc View Source RemoveUnlocker(IStepData) Declaration public bool RemoveUnlocker(IStepData data) Parameters Type Name Description IStepData data Returns Type Description System.Boolean | Improve this Doc View Source RequestLocked(Boolean, IStepData) Declaration public virtual void RequestLocked(bool lockState, IStepData stepData) Parameters Type Name Description System.Boolean lockState IStepData stepData | Improve this Doc View Source ResetUniqueId() Declaration public void ResetUniqueId() | Improve this Doc View Source SetLocked(Boolean) Declaration public void SetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState | Improve this Doc View Source SetObjectId(Guid) Declaration public void SetObjectId(Guid guid) Parameters Type Name Description System.Guid guid | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String | Improve this Doc View Source ValidateProperties(IEnumerable<Type>) Declaration public void ValidateProperties(IEnumerable<Type> properties) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Type > properties Events | Improve this Doc View Source GuidAdded Declaration public event EventHandler<GuidContainerEventArgs> GuidAdded Event Type Type Description System.EventHandler < GuidContainerEventArgs > | Improve this Doc View Source GuidRemoved Declaration public event EventHandler<GuidContainerEventArgs> GuidRemoved Event Type Type Description System.EventHandler < GuidContainerEventArgs > | Improve this Doc View Source Locked Declaration public event EventHandler<LockStateChangedEventArgs> Locked Event Type Type Description System.EventHandler < LockStateChangedEventArgs > | Improve this Doc View Source ObjectIdChanged Declaration public event EventHandler<UniqueIdChangedEventArgs> ObjectIdChanged Event Type Type Description System.EventHandler < UniqueIdChangedEventArgs > | Improve this Doc View Source UniqueNameChanged Declaration [Obsolete(\"This event is no longer used and will be removed in the next major release.\")] public event EventHandler<SceneObjectNameChanged> UniqueNameChanged Event Type Type Description System.EventHandler < SceneObjectNameChanged > | Improve this Doc View Source Unlocked Declaration public event EventHandler<LockStateChangedEventArgs> Unlocked Event Type Type Description System.EventHandler < LockStateChangedEventArgs > Implements ISerializationCallbackReceiver ISceneObject ILockable IGuidContainer Extension Methods SceneObjectExtensions.SetSuitableName(ISceneObject, String) SceneObjectExtensions.AddProcessProperty<T>(ISceneObject) SceneObjectExtensions.AddProcessProperty(ISceneObject, Type) SceneObjectExtensions.RemoveProcessProperty(ISceneObject, Component, Boolean, IEnumerable<Component>) SceneObjectExtensions.RemoveProcessProperty(ISceneObject, Type, Boolean, IEnumerable<Component>)"
  },
  "api/VRBuilder.Core.SceneObjects.ProcessSceneReference-1.html": {
    "href": "api/VRBuilder.Core.SceneObjects.ProcessSceneReference-1.html",
    "title": "Class ProcessSceneReference<T> | VR Builder Documentation",
    "keywords": "Class ProcessSceneReference<T> Step inspector reference to a scene object or a specific property. Inheritance System.Object ProcessSceneReferenceBase ProcessSceneReference<T> MultipleSceneReference<T> SingleSceneReference<T> Implements ICanBeEmpty Inherited Members ProcessSceneReferenceBase.Guids ProcessSceneReferenceBase.HasValue() ProcessSceneReferenceBase.AddGuid(Guid) ProcessSceneReferenceBase.RemoveGuid(Guid) ProcessSceneReferenceBase.ResetGuids(IEnumerable<Guid>) ProcessSceneReferenceBase.IsEmpty() ProcessSceneReferenceBase.Equals(Object) ProcessSceneReferenceBase.GetHashCode() System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public abstract class ProcessSceneReference<T> : ProcessSceneReferenceBase, ICanBeEmpty where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source ProcessSceneReference() Declaration public ProcessSceneReference() | Improve this Doc View Source ProcessSceneReference(IEnumerable<Guid>) Declaration public ProcessSceneReference(IEnumerable<Guid> guids) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Guid > guids | Improve this Doc View Source ProcessSceneReference(Guid) Declaration public ProcessSceneReference(Guid guid) Parameters Type Name Description System.Guid guid Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.html": {
    "href": "api/VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.html",
    "title": "Class ProcessSceneReferenceBase | VR Builder Documentation",
    "keywords": "Class ProcessSceneReferenceBase Base class for a process reference to one or more objects. Inheritance System.Object ProcessSceneReferenceBase ProcessSceneReference<T> Implements ICanBeEmpty Inherited Members System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public abstract class ProcessSceneReferenceBase : ICanBeEmpty Constructors | Improve this Doc View Source ProcessSceneReferenceBase() Declaration public ProcessSceneReferenceBase() | Improve this Doc View Source ProcessSceneReferenceBase(IEnumerable<Guid>) Declaration public ProcessSceneReferenceBase(IEnumerable<Guid> guids) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Guid > guids | Improve this Doc View Source ProcessSceneReferenceBase(Guid) Declaration public ProcessSceneReferenceBase(Guid guid) Parameters Type Name Description System.Guid guid Properties | Improve this Doc View Source Guids List of guids, each Guid is a reference to a SceneObjectGroups.SceneObjectGroup . Declaration public IReadOnlyList<Guid> Guids { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < System.Guid > Methods | Improve this Doc View Source AddGuid(Guid) Adds the specified guid to this reference. Declaration public void AddGuid(Guid guid) Parameters Type Name Description System.Guid guid | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source HasValue() Returns true if the reference contains a non-null value. Declaration public abstract bool HasValue() Returns Type Description System.Boolean | Improve this Doc View Source IsEmpty() Declaration public virtual bool IsEmpty() Returns Type Description System.Boolean | Improve this Doc View Source RemoveGuid(Guid) Removes the specified guid from this reference. Declaration public bool RemoveGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean | Improve this Doc View Source ResetGuids(IEnumerable<Guid>) Resets the guids on this reference to the specified value. Declaration public void ResetGuids(IEnumerable<Guid> newGuids = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Guid > newGuids Operators | Improve this Doc View Source Equality(ProcessSceneReferenceBase, ProcessSceneReferenceBase) Declaration public static bool operator ==(ProcessSceneReferenceBase left, ProcessSceneReferenceBase right) Parameters Type Name Description ProcessSceneReferenceBase left ProcessSceneReferenceBase right Returns Type Description System.Boolean | Improve this Doc View Source Inequality(ProcessSceneReferenceBase, ProcessSceneReferenceBase) Declaration public static bool operator !=(ProcessSceneReferenceBase left, ProcessSceneReferenceBase right) Parameters Type Name Description ProcessSceneReferenceBase left ProcessSceneReferenceBase right Returns Type Description System.Boolean Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue-1.html": {
    "href": "api/VRBuilder.Core.SceneObjects.ProcessVariableSelectableValue-1.html",
    "title": "Class ProcessVariableSelectableValue<T> | VR Builder Documentation",
    "keywords": "Class ProcessVariableSelectableValue<T> Selectable value implementation for process variables. Inheritance System.Object SelectableValue <T, SingleScenePropertyReference < IDataProperty <T>>> ProcessVariableSelectableValue<T> Inherited Members SelectableValue<T, SingleScenePropertyReference<IDataProperty<T>>>.FirstValueLabel SelectableValue<T, SingleScenePropertyReference<IDataProperty<T>>>.SecondValueLabel SelectableValue<T, SingleScenePropertyReference<IDataProperty<T>>>.FirstValue SelectableValue<T, SingleScenePropertyReference<IDataProperty<T>>>.SecondValue SelectableValue<T, SingleScenePropertyReference<IDataProperty<T>>>.IsFirstValueSelected System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class ProcessVariableSelectableValue<T> : SelectableValue<T, SingleScenePropertyReference<IDataProperty<T>>> Type Parameters Name Description T Constructors | Improve this Doc View Source ProcessVariableSelectableValue(T, SingleScenePropertyReference<IDataProperty<T>>, Boolean) Declaration public ProcessVariableSelectableValue(T firstValue, SingleScenePropertyReference<IDataProperty<T>> secondValue, bool isFirstValueSelected) Parameters Type Name Description T firstValue SingleScenePropertyReference < IDataProperty <T>> secondValue System.Boolean isFirstValueSelected Properties | Improve this Doc View Source FirstValueLabel Declaration public override string FirstValueLabel { get; } Property Value Type Description System.String Overrides VRBuilder.Core.SceneObjects.SelectableValue<T, VRBuilder.Core.SceneObjects.SingleScenePropertyReference<VRBuilder.Core.Properties.IDataProperty<T>>>.FirstValueLabel | Improve this Doc View Source SecondValueLabel Declaration public override string SecondValueLabel { get; } Property Value Type Description System.String Overrides VRBuilder.Core.SceneObjects.SelectableValue<T, VRBuilder.Core.SceneObjects.SingleScenePropertyReference<VRBuilder.Core.Properties.IDataProperty<T>>>.SecondValueLabel"
  },
  "api/VRBuilder.Core.SceneObjects.PropertyReferenceOrTagSelectableValue-1.html": {
    "href": "api/VRBuilder.Core.SceneObjects.PropertyReferenceOrTagSelectableValue-1.html",
    "title": "Class PropertyReferenceOrTagSelectableValue<T> | VR Builder Documentation",
    "keywords": "Class PropertyReferenceOrTagSelectableValue<T> Lets the user choose between a scene property reference or a tag. Inheritance System.Object SelectableValue < ScenePropertyReference <T>, SceneObjectTag <T>> PropertyReferenceOrTagSelectableValue<T> Inherited Members SelectableValue<ScenePropertyReference<T>, SceneObjectTag<T>>.FirstValueLabel SelectableValue<ScenePropertyReference<T>, SceneObjectTag<T>>.SecondValueLabel SelectableValue<ScenePropertyReference<T>, SceneObjectTag<T>>.FirstValue SelectableValue<ScenePropertyReference<T>, SceneObjectTag<T>>.SecondValue SelectableValue<ScenePropertyReference<T>, SceneObjectTag<T>>.IsFirstValueSelected System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [Obsolete(\"This class is not used anymore and will be removed in the next major release.\")] public class PropertyReferenceOrTagSelectableValue<T> : SelectableValue<ScenePropertyReference<T>, SceneObjectTag<T>> where T : class, ISceneObjectProperty Type Parameters Name Description T Constructors | Improve this Doc View Source PropertyReferenceOrTagSelectableValue() Declaration public PropertyReferenceOrTagSelectableValue() Properties | Improve this Doc View Source FirstValueLabel Declaration public override string FirstValueLabel { get; } Property Value Type Description System.String Overrides VRBuilder.Core.SceneObjects.SelectableValue<VRBuilder.Core.SceneObjects.ScenePropertyReference<T>, VRBuilder.Core.SceneObjects.SceneObjectTag<T>>.FirstValueLabel | Improve this Doc View Source SecondValueLabel Declaration public override string SecondValueLabel { get; } Property Value Type Description System.String Overrides VRBuilder.Core.SceneObjects.SelectableValue<VRBuilder.Core.SceneObjects.ScenePropertyReference<T>, VRBuilder.Core.SceneObjects.SceneObjectTag<T>>.SecondValueLabel"
  },
  "api/VRBuilder.Core.SceneObjects.SceneObjectNameChanged.html": {
    "href": "api/VRBuilder.Core.SceneObjects.SceneObjectNameChanged.html",
    "title": "Class SceneObjectNameChanged | VR Builder Documentation",
    "keywords": "Class SceneObjectNameChanged Inheritance System.Object System.EventArgs SceneObjectNameChanged Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [Obsolete(\"These args belong to a unused event and will be removed in the next major release.\")] public class SceneObjectNameChanged : EventArgs Constructors | Improve this Doc View Source SceneObjectNameChanged(String, String) Declaration public SceneObjectNameChanged(string newName, string previousName) Parameters Type Name Description System.String newName System.String previousName Fields | Improve this Doc View Source NewName Declaration public readonly string NewName Field Value Type Description System.String | Improve this Doc View Source PreviousName Declaration public readonly string PreviousName Field Value Type Description System.String"
  },
  "api/VRBuilder.Core.SceneObjects.SceneObjectReference.html": {
    "href": "api/VRBuilder.Core.SceneObjects.SceneObjectReference.html",
    "title": "Class SceneObjectReference | VR Builder Documentation",
    "keywords": "Class SceneObjectReference Weak reference by a unique name to a process object in a scene. Inheritance System.Object UniqueNameReference ObjectReference < ISceneObject > SceneObjectReference Implements ICanBeEmpty Inherited Members ObjectReference<ISceneObject>.UniqueName ObjectReference<ISceneObject>.Value ObjectReference<ISceneObject>.IsEmpty() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [Obsolete(\"Use ProcessSceneReferenceBase and derived classes to store references to objects in the scene.\")] public sealed class SceneObjectReference : ObjectReference<ISceneObject>, ICanBeEmpty Constructors | Improve this Doc View Source SceneObjectReference() Declaration public SceneObjectReference() | Improve this Doc View Source SceneObjectReference(String) Declaration public SceneObjectReference(string uniqueName) Parameters Type Name Description System.String uniqueName Methods | Improve this Doc View Source DetermineValue(ISceneObject) Declaration protected override ISceneObject DetermineValue(ISceneObject cached) Parameters Type Name Description ISceneObject cached Returns Type Description ISceneObject Overrides VRBuilder.Core.SceneObjects.ObjectReference<VRBuilder.Core.SceneObjects.ISceneObject>.DetermineValue(VRBuilder.Core.SceneObjects.ISceneObject) Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.SceneObjectRegistry.html": {
    "href": "api/VRBuilder.Core.SceneObjects.SceneObjectRegistry.html",
    "title": "Class SceneObjectRegistry | VR Builder Documentation",
    "keywords": "Class SceneObjectRegistry Inheritance System.Object SceneObjectRegistry Implements ISceneObjectRegistry Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [Obsolete(\"This implementation of the scene object registry is obsolete. Use SceneObjectRegistryV2 instead.\")] public class SceneObjectRegistry : ISceneObjectRegistry Constructors | Improve this Doc View Source SceneObjectRegistry() Declaration public SceneObjectRegistry() Properties | Improve this Doc View Source Item[Guid] Declaration public ISceneObject this[Guid guid] { get; } Parameters Type Name Description System.Guid guid Property Value Type Description ISceneObject | Improve this Doc View Source Item[String] Declaration public ISceneObject this[string name] { get; } Parameters Type Name Description System.String name Property Value Type Description ISceneObject Methods | Improve this Doc View Source ContainsGuid(Guid) Declaration public bool ContainsGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean | Improve this Doc View Source ContainsName(String) Declaration public bool ContainsName(string name) Parameters Type Name Description System.String name Returns Type Description System.Boolean | Improve this Doc View Source GetByGuid(Guid) Declaration public ISceneObject GetByGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description ISceneObject | Improve this Doc View Source GetByName(String) Declaration public ISceneObject GetByName(string name) Parameters Type Name Description System.String name Returns Type Description ISceneObject | Improve this Doc View Source GetByTag(Guid) Declaration [Obsolete(\"Use GetObjects instead.\")] public IEnumerable<ISceneObject> GetByTag(Guid tag) Parameters Type Name Description System.Guid tag Returns Type Description System.Collections.Generic.IEnumerable < ISceneObject > | Improve this Doc View Source GetObjects(Guid) Declaration public IEnumerable<ISceneObject> GetObjects(Guid tag) Parameters Type Name Description System.Guid tag Returns Type Description System.Collections.Generic.IEnumerable < ISceneObject > | Improve this Doc View Source GetProperties<T>(Guid) Declaration public IEnumerable<T> GetProperties<T>(Guid tag) where T : ISceneObjectProperty Parameters Type Name Description System.Guid tag Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source GetPropertyByTag<T>(Guid) Declaration [Obsolete(\"Use GetProperties instead.\")] public IEnumerable<T> GetPropertyByTag<T>(Guid tag) where T : ISceneObjectProperty Parameters Type Name Description System.Guid tag Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source Refresh() Declaration public void Refresh() | Improve this Doc View Source Register(ISceneObject) Declaration public void Register(ISceneObject obj) Parameters Type Name Description ISceneObject obj | Improve this Doc View Source RegisterAll() Declaration public void RegisterAll() | Improve this Doc View Source Unregister(ISceneObject) Declaration public bool Unregister(ISceneObject entity) Parameters Type Name Description ISceneObject entity Returns Type Description System.Boolean Implements ISceneObjectRegistry"
  },
  "api/VRBuilder.Core.SceneObjects.SceneObjectRegistryV2.html": {
    "href": "api/VRBuilder.Core.SceneObjects.SceneObjectRegistryV2.html",
    "title": "Class SceneObjectRegistryV2 | VR Builder Documentation",
    "keywords": "Class SceneObjectRegistryV2 Implementation of ISceneObjectRegistry that handles ISceneObject s with one or more GUID associated to them. The GUIDs don't have to be unique and can represent a group of objects. Inheritance System.Object SceneObjectRegistryV2 Implements ISceneObjectRegistry Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public class SceneObjectRegistryV2 : ISceneObjectRegistry Constructors | Improve this Doc View Source SceneObjectRegistryV2() Declaration public SceneObjectRegistryV2() Fields | Improve this Doc View Source registeredObjects Declaration protected readonly Dictionary<Guid, List<ISceneObject>> registeredObjects Field Value Type Description System.Collections.Generic.Dictionary < System.Guid , System.Collections.Generic.List < ISceneObject >> Properties | Improve this Doc View Source Item[Guid] Declaration public ISceneObject this[Guid guid] { get; } Parameters Type Name Description System.Guid guid Property Value Type Description ISceneObject | Improve this Doc View Source Item[String] Declaration public ISceneObject this[string name] { get; } Parameters Type Name Description System.String name Property Value Type Description ISceneObject | Improve this Doc View Source RegisteredGuids Declaration public IEnumerable<Guid> RegisteredGuids { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Guid > Methods | Improve this Doc View Source ContainsGuid(Guid) Declaration public bool ContainsGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean | Improve this Doc View Source ContainsName(String) Declaration public bool ContainsName(string guidString) Parameters Type Name Description System.String guidString Returns Type Description System.Boolean | Improve this Doc View Source DebugRebuild() Clears the registry and registers all object in the scene again. Declaration public void DebugRebuild() | Improve this Doc View Source GetByGuid(Guid) Declaration public ISceneObject GetByGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description ISceneObject | Improve this Doc View Source GetByName(String) Declaration public ISceneObject GetByName(string name) Parameters Type Name Description System.String name Returns Type Description ISceneObject | Improve this Doc View Source GetByTag(Guid) Declaration [Obsolete(\"Use GetObjects instead.\")] public IEnumerable<ISceneObject> GetByTag(Guid tag) Parameters Type Name Description System.Guid tag Returns Type Description System.Collections.Generic.IEnumerable < ISceneObject > | Improve this Doc View Source GetObjects(Guid) Declaration public IEnumerable<ISceneObject> GetObjects(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Collections.Generic.IEnumerable < ISceneObject > | Improve this Doc View Source GetProperties<T>(Guid) Declaration public IEnumerable<T> GetProperties<T>(Guid guid) where T : ISceneObjectProperty Parameters Type Name Description System.Guid guid Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source GetPropertyByTag<T>(Guid) Declaration [Obsolete(\"Use GetProperties instead.\")] public IEnumerable<T> GetPropertyByTag<T>(Guid tag) where T : ISceneObjectProperty Parameters Type Name Description System.Guid tag Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source Refresh() Declaration public void Refresh() | Improve this Doc View Source Register(ISceneObject) Declaration public void Register(ISceneObject obj) Parameters Type Name Description ISceneObject obj | Improve this Doc View Source RegisterAll() Declaration public void RegisterAll() | Improve this Doc View Source Unregister(ISceneObject) Declaration public bool Unregister(ISceneObject obj) Parameters Type Name Description ISceneObject obj Returns Type Description System.Boolean Implements ISceneObjectRegistry"
  },
  "api/VRBuilder.Core.SceneObjects.SceneObjectTag-1.html": {
    "href": "api/VRBuilder.Core.SceneObjects.SceneObjectTag-1.html",
    "title": "Class SceneObjectTag<T> | VR Builder Documentation",
    "keywords": "Class SceneObjectTag<T> Step inspector reference to a SceneObjectTagBase requiring a specific property. Inheritance System.Object SceneObjectTagBase SceneObjectTag<T> Implements ICanBeEmpty Inherited Members SceneObjectTagBase.Guid SceneObjectTagBase.IsEmpty() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [Obsolete(\"Use ProcessSceneReference and its derived classes instead.\")] public sealed class SceneObjectTag<T> : SceneObjectTagBase, ICanBeEmpty Type Parameters Name Description T Constructors | Improve this Doc View Source SceneObjectTag() Declaration public SceneObjectTag() | Improve this Doc View Source SceneObjectTag(Guid) Declaration public SceneObjectTag(Guid guid) Parameters Type Name Description System.Guid guid Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.SceneObjectTagBase.html": {
    "href": "api/VRBuilder.Core.SceneObjects.SceneObjectTagBase.html",
    "title": "Class SceneObjectTagBase | VR Builder Documentation",
    "keywords": "Class SceneObjectTagBase Base class for step inspector references to tags. Inheritance System.Object SceneObjectTagBase SceneObjectTag<T> Implements ICanBeEmpty Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] [Obsolete(\"Use ProcessSceneReference and its derived classes instead.\")] public abstract class SceneObjectTagBase : ICanBeEmpty Constructors | Improve this Doc View Source SceneObjectTagBase() Declaration public SceneObjectTagBase() | Improve this Doc View Source SceneObjectTagBase(Guid) Declaration public SceneObjectTagBase(Guid guid) Parameters Type Name Description System.Guid guid Properties | Improve this Doc View Source Guid The guid representing the tag. Declaration [DataMember] public Guid Guid { get; set; } Property Value Type Description System.Guid Methods | Improve this Doc View Source IsEmpty() Declaration public bool IsEmpty() Returns Type Description System.Boolean Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.ScenePropertyReference-1.html": {
    "href": "api/VRBuilder.Core.SceneObjects.ScenePropertyReference-1.html",
    "title": "Class ScenePropertyReference<T> | VR Builder Documentation",
    "keywords": "Class ScenePropertyReference<T> Weak reference to a property of a process object with the same unique name. Inheritance System.Object UniqueNameReference ObjectReference <T> ScenePropertyReference<T> Implements ICanBeEmpty Inherited Members ObjectReference<T>.UniqueName ObjectReference<T>.Value ObjectReference<T>.IsEmpty() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [Serializable] [DataContract(IsReference = true)] [Obsolete(\"Use ProcessSceneReferenceBase and derived classes to store references to objects in the scene.\")] public sealed class ScenePropertyReference<T> : ObjectReference<T>, ICanBeEmpty where T : class, ISceneObjectProperty Type Parameters Name Description T Constructors | Improve this Doc View Source ScenePropertyReference() Declaration public ScenePropertyReference() | Improve this Doc View Source ScenePropertyReference(String) Declaration public ScenePropertyReference(string uniqueName) Parameters Type Name Description System.String uniqueName Methods | Improve this Doc View Source DetermineValue(T) Declaration protected override T DetermineValue(T cachedValue) Parameters Type Name Description T cachedValue Returns Type Description T Overrides VRBuilder.Core.SceneObjects.ObjectReference<T>.DetermineValue(T) Operators | Improve this Doc View Source Implicit(ScenePropertyReference<T> to T) Declaration public static implicit operator T(ScenePropertyReference<T> reference) Parameters Type Name Description ScenePropertyReference <T> reference Returns Type Description T Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.SelectableValue-2.html": {
    "href": "api/VRBuilder.Core.SceneObjects.SelectableValue-2.html",
    "title": "Class SelectableValue<TFirst, TSecond> | VR Builder Documentation",
    "keywords": "Class SelectableValue<TFirst, TSecond> Stores two values and a selection between the two. Inheritance System.Object SelectableValue<TFirst, TSecond> ProcessVariableSelectableValue<T> PropertyReferenceOrTagSelectableValue<T> VideoClipOrURLSelectableValue Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public abstract class SelectableValue<TFirst, TSecond> Type Parameters Name Description TFirst TSecond Properties | Improve this Doc View Source FirstValue The first value to be stored. Declaration [DataMember] public virtual TFirst FirstValue { get; set; } Property Value Type Description TFirst | Improve this Doc View Source FirstValueLabel Label for the first value. Declaration public abstract string FirstValueLabel { get; } Property Value Type Description System.String | Improve this Doc View Source IsFirstValueSelected True if the first value should be used. Declaration [DataMember] public virtual bool IsFirstValueSelected { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SecondValue The second value to be stored. Declaration [DataMember] public virtual TSecond SecondValue { get; set; } Property Value Type Description TSecond | Improve this Doc View Source SecondValueLabel Label for the second value. Declaration public abstract string SecondValueLabel { get; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Core.SceneObjects.SerializableGuid.html": {
    "href": "api/VRBuilder.Core.SceneObjects.SerializableGuid.html",
    "title": "Class SerializableGuid | VR Builder Documentation",
    "keywords": "Class SerializableGuid Serializable version of a System.Guid . Inheritance System.Object SerializableGuid Implements System.IEquatable < SerializableGuid > System.IEquatable < System.Guid > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [Serializable] public class SerializableGuid : IEquatable<SerializableGuid>, IEquatable<Guid> Remarks If not working with the Unity Editor better use Newtonsoft.Json. It has a implementation to serialize System.Guid . Constructors | Improve this Doc View Source SerializableGuid(Byte[]) Declaration public SerializableGuid(byte[] bytes) Parameters Type Name Description System.Byte [] bytes | Improve this Doc View Source SerializableGuid(Guid) Declaration public SerializableGuid(Guid guid) Parameters Type Name Description System.Guid guid Properties | Improve this Doc View Source Guid Converts the System.Guid to byte[] for serialization. Declaration public Guid Guid { get; set; } Property Value Type Description System.Guid Methods | Improve this Doc View Source Equals(Guid) Determines whether the current SerializableGuid object is equal to the specified Guid. Declaration public bool Equals(Guid otherGuid) Parameters Type Name Description System.Guid otherGuid The Guid to compare with the current SerializableGuid object. Returns Type Description System.Boolean true if the current SerializableGuid object is equal to the specified Guid; otherwise, false. | Improve this Doc View Source Equals(Object) Determines whether the current SerializableGuid object is equal to another object. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The object to compare with the current object. Returns Type Description System.Boolean true if the specified object is equal to the current object; otherwise, false . Overrides System.Object.Equals(System.Object) | Improve this Doc View Source Equals(SerializableGuid) Determines whether the current SerializableGuid object is equal to another SerializableGuid object. Declaration public bool Equals(SerializableGuid other) Parameters Type Name Description SerializableGuid other The SerializableGuid to compare with the current object. Returns Type Description System.Boolean true if the current object is equal to the other parameter; otherwise, false . | Improve this Doc View Source GetHashCode() Returns the hash code for this instance. Declaration public override int GetHashCode() Returns Type Description System.Int32 A 32-bit signed integer hash code. Overrides System.Object.GetHashCode() Remarks This is used in hash-based collections, like Dictionary. | Improve this Doc View Source IsValid() Checks if the serialized Guid is valid. Declaration public bool IsValid() Returns Type Description System.Boolean true if the serialized Guid is not null and has a length of 16; otherwise, false . | Improve this Doc View Source IsValid(SerializableGuid) Checks if a SerializableGuid is valid. Declaration public static bool IsValid(SerializableGuid serializableGuid) Parameters Type Name Description SerializableGuid serializableGuid The SerializableGuid to check. Returns Type Description System.Boolean true if the SerializableGuid and VRBuilder.Core.SceneObjects.SerializableGuid.serializedGuid is not null, and has a length of 16; otherwise, false . | Improve this Doc View Source SetGuid(Guid) Sets the Guid value for the SerializableGuid. Declaration public void SetGuid(Guid guid) Parameters Type Name Description System.Guid guid The Guid value to set. | Improve this Doc View Source ToString() Returns a string representation of the current SerializableGuid object. Declaration public override string ToString() Returns Type Description System.String A string representation of the current SerializableGuid object. If the serializedGuid is null or empty, it returns \"null\". If the serializedGuid length is not equal to 16, it returns \"invalid\". Otherwise, it returns the string representation of the Guid. Overrides System.Object.ToString() Operators | Improve this Doc View Source Equality(SerializableGuid, SerializableGuid) Declaration public static bool operator ==(SerializableGuid left, SerializableGuid right) Parameters Type Name Description SerializableGuid left SerializableGuid right Returns Type Description System.Boolean | Improve this Doc View Source Inequality(SerializableGuid, SerializableGuid) Declaration public static bool operator !=(SerializableGuid left, SerializableGuid right) Parameters Type Name Description SerializableGuid left SerializableGuid right Returns Type Description System.Boolean Implements System.IEquatable<T> System.IEquatable<T>"
  },
  "api/VRBuilder.Core.SceneObjects.SingleSceneObjectReference.html": {
    "href": "api/VRBuilder.Core.SceneObjects.SingleSceneObjectReference.html",
    "title": "Class SingleSceneObjectReference | VR Builder Documentation",
    "keywords": "Class SingleSceneObjectReference Step inspector reference to a single ISceneObject . Inheritance System.Object ProcessSceneReferenceBase ProcessSceneReference < ISceneObject > SingleSceneReference < ISceneObject > SingleSceneObjectReference Implements ICanBeEmpty Inherited Members SingleSceneReference<ISceneObject>.Value SingleSceneReference<ISceneObject>.HasValue() SingleSceneReference<ISceneObject>.ToString() ProcessSceneReferenceBase.Guids ProcessSceneReferenceBase.AddGuid(Guid) ProcessSceneReferenceBase.RemoveGuid(Guid) ProcessSceneReferenceBase.ResetGuids(IEnumerable<Guid>) ProcessSceneReferenceBase.IsEmpty() ProcessSceneReferenceBase.Equals(Object) ProcessSceneReferenceBase.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class SingleSceneObjectReference : SingleSceneReference<ISceneObject>, ICanBeEmpty Constructors | Improve this Doc View Source SingleSceneObjectReference() Declaration public SingleSceneObjectReference() | Improve this Doc View Source SingleSceneObjectReference(IEnumerable<Guid>) Declaration public SingleSceneObjectReference(IEnumerable<Guid> guids) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Guid > guids | Improve this Doc View Source SingleSceneObjectReference(Guid) Declaration public SingleSceneObjectReference(Guid guid) Parameters Type Name Description System.Guid guid Methods | Improve this Doc View Source DetermineValue(ISceneObject) Declaration protected override ISceneObject DetermineValue(ISceneObject cached) Parameters Type Name Description ISceneObject cached Returns Type Description ISceneObject Overrides VRBuilder.Core.SceneObjects.SingleSceneReference<VRBuilder.Core.SceneObjects.ISceneObject>.DetermineValue(VRBuilder.Core.SceneObjects.ISceneObject) Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.SingleScenePropertyReference-1.html": {
    "href": "api/VRBuilder.Core.SceneObjects.SingleScenePropertyReference-1.html",
    "title": "Class SingleScenePropertyReference<T> | VR Builder Documentation",
    "keywords": "Class SingleScenePropertyReference<T> Step inspector reference to a single ISceneObjectProperty . Inheritance System.Object ProcessSceneReferenceBase ProcessSceneReference <T> SingleSceneReference <T> SingleScenePropertyReference<T> Implements ICanBeEmpty Inherited Members SingleSceneReference<T>.Value SingleSceneReference<T>.HasValue() SingleSceneReference<T>.ToString() ProcessSceneReferenceBase.Guids ProcessSceneReferenceBase.AddGuid(Guid) ProcessSceneReferenceBase.RemoveGuid(Guid) ProcessSceneReferenceBase.ResetGuids(IEnumerable<Guid>) ProcessSceneReferenceBase.IsEmpty() ProcessSceneReferenceBase.Equals(Object) ProcessSceneReferenceBase.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class SingleScenePropertyReference<T> : SingleSceneReference<T>, ICanBeEmpty where T : class, ISceneObjectProperty Type Parameters Name Description T Constructors | Improve this Doc View Source SingleScenePropertyReference() Declaration public SingleScenePropertyReference() | Improve this Doc View Source SingleScenePropertyReference(IEnumerable<Guid>) Declaration public SingleScenePropertyReference(IEnumerable<Guid> guids) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Guid > guids | Improve this Doc View Source SingleScenePropertyReference(Guid) Declaration public SingleScenePropertyReference(Guid guid) Parameters Type Name Description System.Guid guid Methods | Improve this Doc View Source DetermineValue(T) Declaration protected override T DetermineValue(T cachedValue) Parameters Type Name Description T cachedValue Returns Type Description T Overrides VRBuilder.Core.SceneObjects.SingleSceneReference<T>.DetermineValue(T) Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.SingleSceneReference-1.html": {
    "href": "api/VRBuilder.Core.SceneObjects.SingleSceneReference-1.html",
    "title": "Class SingleSceneReference<T> | VR Builder Documentation",
    "keywords": "Class SingleSceneReference<T> Step inspector reference to a single object. Inheritance System.Object ProcessSceneReferenceBase ProcessSceneReference <T> SingleSceneReference<T> SingleSceneObjectReference SingleScenePropertyReference<T> Implements ICanBeEmpty Inherited Members ProcessSceneReferenceBase.Guids ProcessSceneReferenceBase.AddGuid(Guid) ProcessSceneReferenceBase.RemoveGuid(Guid) ProcessSceneReferenceBase.ResetGuids(IEnumerable<Guid>) ProcessSceneReferenceBase.IsEmpty() ProcessSceneReferenceBase.Equals(Object) ProcessSceneReferenceBase.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public abstract class SingleSceneReference<T> : ProcessSceneReference<T>, ICanBeEmpty where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source SingleSceneReference() Declaration public SingleSceneReference() | Improve this Doc View Source SingleSceneReference(IEnumerable<Guid>) Declaration public SingleSceneReference(IEnumerable<Guid> guids) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Guid > guids | Improve this Doc View Source SingleSceneReference(Guid) Declaration public SingleSceneReference(Guid guid) Parameters Type Name Description System.Guid guid Properties | Improve this Doc View Source Value Declaration public T Value { get; } Property Value Type Description T Methods | Improve this Doc View Source DetermineValue(T) Determine the object referenced by this scene reference. Declaration protected abstract T DetermineValue(T cachedValue) Parameters Type Name Description T cachedValue Returns Type Description T | Improve this Doc View Source HasValue() Declaration public override bool HasValue() Returns Type Description System.Boolean Overrides ProcessSceneReferenceBase.HasValue() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.TaggableObjectEventArgs.html": {
    "href": "api/VRBuilder.Core.SceneObjects.TaggableObjectEventArgs.html",
    "title": "Class TaggableObjectEventArgs | VR Builder Documentation",
    "keywords": "Class TaggableObjectEventArgs Event args for taggable objects events. Inheritance System.Object System.EventArgs TaggableObjectEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [Obsolete(\"Will be removed with the next major version.\")] public class TaggableObjectEventArgs : EventArgs Constructors | Improve this Doc View Source TaggableObjectEventArgs(Guid) Declaration public TaggableObjectEventArgs(Guid tag) Parameters Type Name Description System.Guid tag Fields | Improve this Doc View Source Tag Declaration public readonly Guid Tag Field Value Type Description System.Guid"
  },
  "api/VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs.html": {
    "href": "api/VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs.html",
    "title": "Class UniqueIdChangedEventArgs | VR Builder Documentation",
    "keywords": "Class UniqueIdChangedEventArgs Arguments for UniqueIdChanged event. Inheritance System.Object System.EventArgs UniqueIdChangedEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public class UniqueIdChangedEventArgs : EventArgs Constructors | Improve this Doc View Source UniqueIdChangedEventArgs(Guid, Guid) Declaration public UniqueIdChangedEventArgs(Guid previousId, Guid newId) Parameters Type Name Description System.Guid previousId System.Guid newId Fields | Improve this Doc View Source NewId Declaration public readonly Guid NewId Field Value Type Description System.Guid | Improve this Doc View Source PreviousId Declaration public readonly Guid PreviousId Field Value Type Description System.Guid"
  },
  "api/VRBuilder.Core.SceneObjects.UniqueNameReference.html": {
    "href": "api/VRBuilder.Core.SceneObjects.UniqueNameReference.html",
    "title": "Class UniqueNameReference | VR Builder Documentation",
    "keywords": "Class UniqueNameReference Simple container for UniqueName. Inheritance System.Object UniqueNameReference ObjectReference<T> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax [Obsolete(\"Use ProcessSceneReferenceBase and derived classes to store references to objects in the scene.\")] [DataContract(IsReference = true)] public abstract class UniqueNameReference Constructors | Improve this Doc View Source UniqueNameReference() Declaration protected UniqueNameReference() | Improve this Doc View Source UniqueNameReference(String) Declaration protected UniqueNameReference(string uniqueName) Parameters Type Name Description System.String uniqueName Properties | Improve this Doc View Source UniqueName Serializable unique name of referenced object. Declaration [DataMember] public virtual string UniqueName { get; set; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Core.SceneObjects.VideoClipOrURLSelectableValue.html": {
    "href": "api/VRBuilder.Core.SceneObjects.VideoClipOrURLSelectableValue.html",
    "title": "Class VideoClipOrURLSelectableValue | VR Builder Documentation",
    "keywords": "Class VideoClipOrURLSelectableValue Lets the user select between a VideoClip asset (stored as asset path) and a string URL. Inheritance System.Object SelectableValue < System.String , System.String > VideoClipOrURLSelectableValue Inherited Members SelectableValue<String, String>.FirstValueLabel SelectableValue<String, String>.SecondValueLabel SelectableValue<String, String>.FirstValue SelectableValue<String, String>.SecondValue SelectableValue<String, String>.IsFirstValueSelected System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public class VideoClipOrURLSelectableValue : SelectableValue<string, string> Constructors | Improve this Doc View Source VideoClipOrURLSelectableValue() Declaration public VideoClipOrURLSelectableValue() Properties | Improve this Doc View Source FirstValue Declaration [DataMember] [UsesSpecificProcessDrawer(\"VideoClipResourceDrawer\")] public override string FirstValue { get; set; } Property Value Type Description System.String Overrides VRBuilder.Core.SceneObjects.SelectableValue<System.String, System.String>.FirstValue | Improve this Doc View Source FirstValueLabel Declaration public override string FirstValueLabel { get; } Property Value Type Description System.String Overrides VRBuilder.Core.SceneObjects.SelectableValue<System.String, System.String>.FirstValueLabel | Improve this Doc View Source SecondValueLabel Declaration public override string SecondValueLabel { get; } Property Value Type Description System.String Overrides VRBuilder.Core.SceneObjects.SelectableValue<System.String, System.String>.SecondValueLabel"
  },
  "api/VRBuilder.Core.Serialization.AnimationCurveConverter.html": {
    "href": "api/VRBuilder.Core.Serialization.AnimationCurveConverter.html",
    "title": "Class AnimationCurveConverter | VR Builder Documentation",
    "keywords": "Class AnimationCurveConverter Converter that serializes and deserializes . Inheritance System.Object Newtonsoft.Json.JsonConverter AnimationCurveConverter Inherited Members Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Serialization Assembly : VRBuilder.Core.dll Syntax [NewtonsoftConverter(1024)] public class AnimationCurveConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description System.Type objectType Returns Type Description System.Boolean Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader System.Type objectType System.Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description System.Object Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer System.Object value Newtonsoft.Json.JsonSerializer serializer Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)"
  },
  "api/VRBuilder.Core.Serialization.html": {
    "href": "api/VRBuilder.Core.Serialization.html",
    "title": "Namespace VRBuilder.Core.Serialization | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Serialization Classes AnimationCurveConverter Converter that serializes and deserializes . ImprovedNewtonsoftJsonProcessSerializer Improved version of the NewtonsoftJsonProcessSerializer, which now allows to serialize very long chapters. KeyframeConverter Converter that serializes and deserializes . NewtonsoftConverterAttribute Every class with this attribute which also extends JsonConverter will be added as converter to the . NewtonsoftJsonProcessSerializerV3 Improved version of the NewtonsoftJsonProcessSerializer, which now allows to serialize very long chapters. NewtonsoftJsonProcessSerializerV4 Improved version of the NewtonsoftJsonProcessSerializer, which now flattens nested subchapters. Interfaces IProcessSerializer A serializer which can de/serialize processes and steps to a certain format."
  },
  "api/VRBuilder.Core.Serialization.ImprovedNewtonsoftJsonProcessSerializer.html": {
    "href": "api/VRBuilder.Core.Serialization.ImprovedNewtonsoftJsonProcessSerializer.html",
    "title": "Class ImprovedNewtonsoftJsonProcessSerializer | VR Builder Documentation",
    "keywords": "Class ImprovedNewtonsoftJsonProcessSerializer Improved version of the NewtonsoftJsonProcessSerializer, which now allows to serialize very long chapters. Inheritance System.Object NewtonsoftJsonProcessSerializer ImprovedNewtonsoftJsonProcessSerializer Implements IProcessSerializer Inherited Members NewtonsoftJsonProcessSerializer.ProcessSerializerSettings NewtonsoftJsonProcessSerializer.FileFormat NewtonsoftJsonProcessSerializer.Serialize(IEntity, JsonSerializerSettings) NewtonsoftJsonProcessSerializer.Deserialize<T>(Byte[], JsonSerializerSettings) NewtonsoftJsonProcessSerializer.StepToByteArray(IStep) NewtonsoftJsonProcessSerializer.StepFromByteArray(Byte[]) NewtonsoftJsonProcessSerializer.ChapterToByteArray(IChapter) NewtonsoftJsonProcessSerializer.ChapterFromByteArray(Byte[]) NewtonsoftJsonProcessSerializer.ManifestToByteArray(IProcessAssetManifest) NewtonsoftJsonProcessSerializer.ManifestFromByteArray(Byte[]) NewtonsoftJsonProcessSerializer.EntityToByteArray(IEntity) NewtonsoftJsonProcessSerializer.EntityFromByteArray(Byte[]) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Serialization Assembly : VRBuilder.Core.dll Syntax public class ImprovedNewtonsoftJsonProcessSerializer : NewtonsoftJsonProcessSerializer, IProcessSerializer Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides NewtonsoftJsonProcessSerializer.Name | Improve this Doc View Source Version Declaration protected override int Version { get; } Property Value Type Description System.Int32 Overrides NewtonsoftJsonProcessSerializer.Version Methods | Improve this Doc View Source ProcessFromByteArray(Byte[]) Declaration public override IProcess ProcessFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IProcess Overrides NewtonsoftJsonProcessSerializer.ProcessFromByteArray(Byte[]) | Improve this Doc View Source ProcessToByteArray(IProcess) Declaration public override byte[] ProcessToByteArray(IProcess process) Parameters Type Name Description IProcess process Returns Type Description System.Byte [] Overrides NewtonsoftJsonProcessSerializer.ProcessToByteArray(IProcess) Implements IProcessSerializer"
  },
  "api/VRBuilder.Core.Serialization.IProcessSerializer.html": {
    "href": "api/VRBuilder.Core.Serialization.IProcessSerializer.html",
    "title": "Interface IProcessSerializer | VR Builder Documentation",
    "keywords": "Interface IProcessSerializer A serializer which can de/serialize processes and steps to a certain format. Namespace : VRBuilder.Core.Serialization Assembly : VRBuilder.Core.dll Syntax public interface IProcessSerializer Properties | Improve this Doc View Source FileFormat File format used for this serializer. For example, 'json'. Declaration string FileFormat { get; } Property Value Type Description System.String | Improve this Doc View Source Name Display name. Declaration string Name { get; } Property Value Type Description System.String Methods | Improve this Doc View Source ChapterFromByteArray(Byte[]) Deserializes a given chapter to a usable object. Declaration IChapter ChapterFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IChapter | Improve this Doc View Source ChapterToByteArray(IChapter) Serializes a given chapter into a byte array. Declaration byte[] ChapterToByteArray(IChapter chapter) Parameters Type Name Description IChapter chapter Returns Type Description System.Byte [] | Improve this Doc View Source EntityFromByteArray(Byte[]) Deserializes a given entity to a usable object. Declaration IEntity EntityFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IEntity | Improve this Doc View Source EntityToByteArray(IEntity) Serializes a given entity into a byte array. Declaration byte[] EntityToByteArray(IEntity entity) Parameters Type Name Description IEntity entity Returns Type Description System.Byte [] | Improve this Doc View Source ManifestFromByteArray(Byte[]) Deserializes a process asset manifest to a usable object. Declaration IProcessAssetManifest ManifestFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IProcessAssetManifest | Improve this Doc View Source ManifestToByteArray(IProcessAssetManifest) Serializes a process asset manifest into a byte array. Declaration byte[] ManifestToByteArray(IProcessAssetManifest manifest) Parameters Type Name Description IProcessAssetManifest manifest Returns Type Description System.Byte [] | Improve this Doc View Source ProcessFromByteArray(Byte[]) Deserializes a given process to a usable object. Declaration IProcess ProcessFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IProcess | Improve this Doc View Source ProcessToByteArray(IProcess) Serializes a given process into a byte array. Declaration byte[] ProcessToByteArray(IProcess target) Parameters Type Name Description IProcess target Returns Type Description System.Byte [] | Improve this Doc View Source StepFromByteArray(Byte[]) Deserializes a given step to a usable object. Declaration IStep StepFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IStep | Improve this Doc View Source StepToByteArray(IStep) Serializes a given step into a byte array. The implementation should trim target steps of the step. Declaration byte[] StepToByteArray(IStep step) Parameters Type Name Description IStep step Returns Type Description System.Byte []"
  },
  "api/VRBuilder.Core.Serialization.KeyframeConverter.html": {
    "href": "api/VRBuilder.Core.Serialization.KeyframeConverter.html",
    "title": "Class KeyframeConverter | VR Builder Documentation",
    "keywords": "Class KeyframeConverter Converter that serializes and deserializes . Inheritance System.Object Newtonsoft.Json.JsonConverter KeyframeConverter Inherited Members Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Serialization Assembly : VRBuilder.Core.dll Syntax [NewtonsoftConverter(1024)] public class KeyframeConverter : JsonConverter Methods | Improve this Doc View Source CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description System.Type objectType Returns Type Description System.Boolean Overrides Newtonsoft.Json.JsonConverter.CanConvert(System.Type) | Improve this Doc View Source ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader System.Type objectType System.Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description System.Object Overrides Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) | Improve this Doc View Source WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer System.Object value Newtonsoft.Json.JsonSerializer serializer Overrides Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer)"
  },
  "api/VRBuilder.Core.Serialization.NewtonsoftConverterAttribute.html": {
    "href": "api/VRBuilder.Core.Serialization.NewtonsoftConverterAttribute.html",
    "title": "Class NewtonsoftConverterAttribute | VR Builder Documentation",
    "keywords": "Class NewtonsoftConverterAttribute Every class with this attribute which also extends JsonConverter will be added as converter to the . Inheritance System.Object System.Attribute NewtonsoftConverterAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Serialization Assembly : VRBuilder.Core.dll Syntax public class NewtonsoftConverterAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source NewtonsoftConverterAttribute(Int32) Declaration public NewtonsoftConverterAttribute(int priority = 1024) Parameters Type Name Description System.Int32 priority Set the value of Priority property. Properties | Improve this Doc View Source Priority Defines the order in which converters should be applied, the lower value triggers earlier. Declaration public int Priority { get; } Property Value Type Description System.Int32 Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Serialization.NewtonsoftJson.html": {
    "href": "api/VRBuilder.Core.Serialization.NewtonsoftJson.html",
    "title": "Namespace VRBuilder.Core.Serialization.NewtonsoftJson | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Serialization.NewtonsoftJson Classes NewtonsoftJsonProcessSerializer This serializer uses NewtonsoftJson to serialize data, the outcome is a json file in the UTF-8 encoding."
  },
  "api/VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.html": {
    "href": "api/VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.html",
    "title": "Class NewtonsoftJsonProcessSerializer | VR Builder Documentation",
    "keywords": "Class NewtonsoftJsonProcessSerializer This serializer uses NewtonsoftJson to serialize data, the outcome is a json file in the UTF-8 encoding. Inheritance System.Object NewtonsoftJsonProcessSerializer ImprovedNewtonsoftJsonProcessSerializer NewtonsoftJsonProcessSerializerV3 NewtonsoftJsonProcessSerializerV4 Implements IProcessSerializer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Serialization.NewtonsoftJson Assembly : VRBuilder.Core.dll Syntax public class NewtonsoftJsonProcessSerializer : IProcessSerializer Properties | Improve this Doc View Source FileFormat Declaration public virtual string FileFormat { get; } Property Value Type Description System.String | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description System.String | Improve this Doc View Source ProcessSerializerSettings Returns the json serializer settings used by the process deserialization. Declaration public static JsonSerializerSettings ProcessSerializerSettings { get; } Property Value Type Description Newtonsoft.Json.JsonSerializerSettings | Improve this Doc View Source Version Declaration protected virtual int Version { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source ChapterFromByteArray(Byte[]) Declaration public virtual IChapter ChapterFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IChapter | Improve this Doc View Source ChapterToByteArray(IChapter) Declaration public virtual byte[] ChapterToByteArray(IChapter chapter) Parameters Type Name Description IChapter chapter Returns Type Description System.Byte [] | Improve this Doc View Source Deserialize<T>(Byte[], JsonSerializerSettings) Declaration protected T Deserialize<T>(byte[] data, JsonSerializerSettings settings) Parameters Type Name Description System.Byte [] data Newtonsoft.Json.JsonSerializerSettings settings Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source EntityFromByteArray(Byte[]) Declaration public virtual IEntity EntityFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IEntity | Improve this Doc View Source EntityToByteArray(IEntity) Declaration public virtual byte[] EntityToByteArray(IEntity entity) Parameters Type Name Description IEntity entity Returns Type Description System.Byte [] | Improve this Doc View Source ManifestFromByteArray(Byte[]) Declaration public virtual IProcessAssetManifest ManifestFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IProcessAssetManifest | Improve this Doc View Source ManifestToByteArray(IProcessAssetManifest) Declaration public virtual byte[] ManifestToByteArray(IProcessAssetManifest manifest) Parameters Type Name Description IProcessAssetManifest manifest Returns Type Description System.Byte [] | Improve this Doc View Source ProcessFromByteArray(Byte[]) Declaration public virtual IProcess ProcessFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IProcess | Improve this Doc View Source ProcessToByteArray(IProcess) Declaration public virtual byte[] ProcessToByteArray(IProcess process) Parameters Type Name Description IProcess process Returns Type Description System.Byte [] | Improve this Doc View Source Serialize(IEntity, JsonSerializerSettings) Declaration protected byte[] Serialize(IEntity entity, JsonSerializerSettings settings) Parameters Type Name Description IEntity entity Newtonsoft.Json.JsonSerializerSettings settings Returns Type Description System.Byte [] | Improve this Doc View Source StepFromByteArray(Byte[]) Declaration public virtual IStep StepFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IStep | Improve this Doc View Source StepToByteArray(IStep) Declaration public virtual byte[] StepToByteArray(IStep step) Parameters Type Name Description IStep step Returns Type Description System.Byte [] Implements IProcessSerializer"
  },
  "api/VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV3.html": {
    "href": "api/VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV3.html",
    "title": "Class NewtonsoftJsonProcessSerializerV3 | VR Builder Documentation",
    "keywords": "Class NewtonsoftJsonProcessSerializerV3 Improved version of the NewtonsoftJsonProcessSerializer, which now allows to serialize very long chapters. Inheritance System.Object NewtonsoftJsonProcessSerializer NewtonsoftJsonProcessSerializerV3 Implements IProcessSerializer Inherited Members NewtonsoftJsonProcessSerializer.ProcessSerializerSettings NewtonsoftJsonProcessSerializer.FileFormat NewtonsoftJsonProcessSerializer.Serialize(IEntity, JsonSerializerSettings) NewtonsoftJsonProcessSerializer.Deserialize<T>(Byte[], JsonSerializerSettings) NewtonsoftJsonProcessSerializer.StepToByteArray(IStep) NewtonsoftJsonProcessSerializer.StepFromByteArray(Byte[]) NewtonsoftJsonProcessSerializer.ChapterToByteArray(IChapter) NewtonsoftJsonProcessSerializer.ChapterFromByteArray(Byte[]) NewtonsoftJsonProcessSerializer.ManifestToByteArray(IProcessAssetManifest) NewtonsoftJsonProcessSerializer.ManifestFromByteArray(Byte[]) NewtonsoftJsonProcessSerializer.EntityToByteArray(IEntity) NewtonsoftJsonProcessSerializer.EntityFromByteArray(Byte[]) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Serialization Assembly : VRBuilder.Core.dll Syntax public class NewtonsoftJsonProcessSerializerV3 : NewtonsoftJsonProcessSerializer, IProcessSerializer Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides NewtonsoftJsonProcessSerializer.Name | Improve this Doc View Source Version Declaration protected override int Version { get; } Property Value Type Description System.Int32 Overrides NewtonsoftJsonProcessSerializer.Version Methods | Improve this Doc View Source ProcessFromByteArray(Byte[]) Declaration public override IProcess ProcessFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IProcess Overrides NewtonsoftJsonProcessSerializer.ProcessFromByteArray(Byte[]) | Improve this Doc View Source ProcessToByteArray(IProcess) Declaration public override byte[] ProcessToByteArray(IProcess process) Parameters Type Name Description IProcess process Returns Type Description System.Byte [] Overrides NewtonsoftJsonProcessSerializer.ProcessToByteArray(IProcess) Implements IProcessSerializer"
  },
  "api/VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.html": {
    "href": "api/VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.html",
    "title": "Class NewtonsoftJsonProcessSerializerV4 | VR Builder Documentation",
    "keywords": "Class NewtonsoftJsonProcessSerializerV4 Improved version of the NewtonsoftJsonProcessSerializer, which now flattens nested subchapters. Inheritance System.Object NewtonsoftJsonProcessSerializer NewtonsoftJsonProcessSerializerV4 Implements IProcessSerializer Inherited Members NewtonsoftJsonProcessSerializer.ProcessSerializerSettings NewtonsoftJsonProcessSerializer.FileFormat NewtonsoftJsonProcessSerializer.Serialize(IEntity, JsonSerializerSettings) NewtonsoftJsonProcessSerializer.Deserialize<T>(Byte[], JsonSerializerSettings) NewtonsoftJsonProcessSerializer.StepToByteArray(IStep) NewtonsoftJsonProcessSerializer.StepFromByteArray(Byte[]) NewtonsoftJsonProcessSerializer.ManifestToByteArray(IProcessAssetManifest) NewtonsoftJsonProcessSerializer.ManifestFromByteArray(Byte[]) NewtonsoftJsonProcessSerializer.EntityToByteArray(IEntity) NewtonsoftJsonProcessSerializer.EntityFromByteArray(Byte[]) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Serialization Assembly : VRBuilder.Core.dll Syntax public class NewtonsoftJsonProcessSerializerV4 : NewtonsoftJsonProcessSerializer, IProcessSerializer Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides NewtonsoftJsonProcessSerializer.Name | Improve this Doc View Source Version Declaration protected override int Version { get; } Property Value Type Description System.Int32 Overrides NewtonsoftJsonProcessSerializer.Version Methods | Improve this Doc View Source ChapterFromByteArray(Byte[]) Declaration public override IChapter ChapterFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IChapter Overrides NewtonsoftJsonProcessSerializer.ChapterFromByteArray(Byte[]) | Improve this Doc View Source ChapterToByteArray(IChapter) Declaration public override byte[] ChapterToByteArray(IChapter chapter) Parameters Type Name Description IChapter chapter Returns Type Description System.Byte [] Overrides NewtonsoftJsonProcessSerializer.ChapterToByteArray(IChapter) | Improve this Doc View Source ProcessFromByteArray(Byte[]) Declaration public override IProcess ProcessFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IProcess Overrides NewtonsoftJsonProcessSerializer.ProcessFromByteArray(Byte[]) | Improve this Doc View Source ProcessToByteArray(IProcess) Declaration public override byte[] ProcessToByteArray(IProcess process) Parameters Type Name Description IProcess process Returns Type Description System.Byte [] Overrides NewtonsoftJsonProcessSerializer.ProcessToByteArray(IProcess) Implements IProcessSerializer"
  },
  "api/VRBuilder.Core.Settings.html": {
    "href": "api/VRBuilder.Core.Settings.html",
    "title": "Namespace VRBuilder.Core.Settings | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Settings Classes InteractionSettings Settings related to VR Builder's default interaction behaviour. SceneObjectGroups Settings for global list of scene object groups. SceneObjectGroups.SceneObjectGroup SceneObjectTags Settings for global list of scene object tags. SceneObjectTags.Tag"
  },
  "api/VRBuilder.Core.Settings.InteractionSettings.html": {
    "href": "api/VRBuilder.Core.Settings.InteractionSettings.html",
    "title": "Class InteractionSettings | VR Builder Documentation",
    "keywords": "Class InteractionSettings Settings related to VR Builder's default interaction behaviour. Inheritance System.Object SettingsObject < InteractionSettings > InteractionSettings Inherited Members SettingsObject<InteractionSettings>.Instance SettingsObject<InteractionSettings>.Save() Namespace : VRBuilder.Core.Settings Assembly : VRBuilder.Core.dll Syntax public class InteractionSettings : SettingsObject<InteractionSettings> Fields | Improve this Doc View Source MakeGrabbablesKinematic Declaration public bool MakeGrabbablesKinematic Field Value Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Settings.SceneObjectGroups.html": {
    "href": "api/VRBuilder.Core.Settings.SceneObjectGroups.html",
    "title": "Class SceneObjectGroups | VR Builder Documentation",
    "keywords": "Class SceneObjectGroups Settings for global list of scene object groups. Inheritance System.Object SettingsObject < SceneObjectGroups > SceneObjectGroups Inherited Members SettingsObject<SceneObjectGroups>.Instance SettingsObject<SceneObjectGroups>.Save() Namespace : VRBuilder.Core.Settings Assembly : VRBuilder.Core.dll Syntax public class SceneObjectGroups : SettingsObject<SceneObjectGroups> Fields | Improve this Doc View Source GuidNotRegisteredText Declaration public const string GuidNotRegisteredText = \"[<i>Missing Group</i>]\" Field Value Type Description System.String | Improve this Doc View Source UniqueGuidName Declaration public const string UniqueGuidName = \"[Object ID]\" Field Value Type Description System.String | Improve this Doc View Source UniqueGuidNameItalic Declaration public const string UniqueGuidNameItalic = \"[<i>Object ID</i>]\" Field Value Type Description System.String Properties | Improve this Doc View Source Groups All groups in the list. Declaration public IEnumerable<SceneObjectGroups.SceneObjectGroup> Groups { get; } Property Value Type Description System.Collections.Generic.IEnumerable < SceneObjectGroups.SceneObjectGroup > Methods | Improve this Doc View Source CanCreateGroup(String) Determines whether a group with the specified label can be created. Declaration public bool CanCreateGroup(string label) Parameters Type Name Description System.String label The label of the group. Returns Type Description System.Boolean true if a group with the specified label can be created; otherwise, false . | Improve this Doc View Source CreateGroup(String, Guid) Create a new group and add it to the list. Declaration public SceneObjectGroups.SceneObjectGroup CreateGroup(string label, Guid guid) Parameters Type Name Description System.String label System.Guid guid Returns Type Description SceneObjectGroups.SceneObjectGroup | Improve this Doc View Source GetLabel(Guid) Retrieves the label of a SceneObjectGroups.SceneObjectGroup based on its GUID. Declaration public string GetLabel(Guid guid) Parameters Type Name Description System.Guid guid The GUID of the SceneObjectGroups.SceneObjectGroup . Returns Type Description System.String The label of the SceneObjectGroups.SceneObjectGroup if a group with the specified GUID is found; otherwise, string.Empty . | Improve this Doc View Source GroupExists(Guid) Checks if a group with the specified GUID exists. Declaration public bool GroupExists(Guid guid) Parameters Type Name Description System.Guid guid The GUID of the group to check. Returns Type Description System.Boolean true if a group with the specified GUID exists, otherwise false . | Improve this Doc View Source RemoveGroup(Guid) Removes a group from the list of groups based on the specified GUID. Declaration public bool RemoveGroup(Guid guid) Parameters Type Name Description System.Guid guid The GUID of the group to remove. Returns Type Description System.Boolean true if the group was successfully removed; otherwise, false . | Improve this Doc View Source RenameGroup(SceneObjectGroups.SceneObjectGroup, String) Renames the specified scene object group with the given label. Declaration public bool RenameGroup(SceneObjectGroups.SceneObjectGroup group, string label) Parameters Type Name Description SceneObjectGroups.SceneObjectGroup group The scene object group to rename. System.String label The new label for the group. Returns Type Description System.Boolean true if the group was renamed successfully, false otherwise. | Improve this Doc View Source TryGetGroup(Guid, out SceneObjectGroups.SceneObjectGroup) Tries to get the group associated with the specified GUID. Declaration public bool TryGetGroup(Guid guid, out SceneObjectGroups.SceneObjectGroup group) Parameters Type Name Description System.Guid guid The GUID of the group to retrieve. SceneObjectGroups.SceneObjectGroup group When this method returns, contains the group associated with the specified GUID, if found; otherwise, the default value. Returns Type Description System.Boolean true if a group with the specified GUID is found; otherwise, false . | Improve this Doc View Source TryGetGroup(String, out SceneObjectGroups.SceneObjectGroup) Tries to get a group associated with the specified label. Takes the first label found. Declaration public bool TryGetGroup(string label, out SceneObjectGroups.SceneObjectGroup group) Parameters Type Name Description System.String label The label of the group to retrieve. SceneObjectGroups.SceneObjectGroup group When this method returns, contains the first group found associated with the specified label, if found; otherwise, the default value. Returns Type Description System.Boolean true if a group with the specified label is found; otherwise, false ."
  },
  "api/VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup.html": {
    "href": "api/VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup.html",
    "title": "Class SceneObjectGroups.SceneObjectGroup | VR Builder Documentation",
    "keywords": "Class SceneObjectGroups.SceneObjectGroup Inheritance System.Object SceneObjectGroups.SceneObjectGroup Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Settings Assembly : VRBuilder.Core.dll Syntax [Serializable] public class SceneObjectGroup Constructors | Improve this Doc View Source SceneObjectGroup(String) Declaration public SceneObjectGroup(string label) Parameters Type Name Description System.String label | Improve this Doc View Source SceneObjectGroup(String, Guid) Declaration public SceneObjectGroup(string label, Guid guid) Parameters Type Name Description System.String label System.Guid guid Properties | Improve this Doc View Source Guid Unique Guid representing the group. Declaration public Guid Guid { get; } Property Value Type Description System.Guid | Improve this Doc View Source Label Text name for this group. Declaration public string Label { get; } Property Value Type Description System.String Remarks We do not guarantee that this name is unique. Methods | Improve this Doc View Source Rename(String) Renames the scene object group with the specified label. Declaration public void Rename(string label) Parameters Type Name Description System.String label The new label for the scene object group."
  },
  "api/VRBuilder.Core.Settings.SceneObjectTags.html": {
    "href": "api/VRBuilder.Core.Settings.SceneObjectTags.html",
    "title": "Class SceneObjectTags | VR Builder Documentation",
    "keywords": "Class SceneObjectTags Settings for global list of scene object tags. Inheritance System.Object SettingsObject < SceneObjectTags > SceneObjectTags Inherited Members SettingsObject<SceneObjectTags>.Instance SettingsObject<SceneObjectTags>.Save() Namespace : VRBuilder.Core.Settings Assembly : VRBuilder.Core.dll Syntax [Obsolete(\"The same functionality is now available in the SceneObjectGroups settings object.\")] public class SceneObjectTags : SettingsObject<SceneObjectTags> Fields | Improve this Doc View Source AutoGeneratedTagName Declaration public const string AutoGeneratedTagName = \"[<i>Object ID</i>]\" Field Value Type Description System.String | Improve this Doc View Source AutoGeneratedTagNameNoItalic Declaration public const string AutoGeneratedTagNameNoItalic = \"[Object ID]\" Field Value Type Description System.String | Improve this Doc View Source NotRegisterTagName Declaration public const string NotRegisterTagName = \"[<i>Not registered. Did you delete it?</i>]\" Field Value Type Description System.String Properties | Improve this Doc View Source Tags All tags in the list. Declaration public IEnumerable<SceneObjectTags.Tag> Tags { get; } Property Value Type Description System.Collections.Generic.IEnumerable < SceneObjectTags.Tag > Methods | Improve this Doc View Source CanCreateTag(String) True if a tag with this label can be created. Declaration public bool CanCreateTag(string label) Parameters Type Name Description System.String label Returns Type Description System.Boolean | Improve this Doc View Source CreateTag(String, Guid) Create a new tag and add it to the list. Declaration public SceneObjectTags.Tag CreateTag(string label, Guid guid) Parameters Type Name Description System.String label System.Guid guid Returns Type Description SceneObjectTags.Tag | Improve this Doc View Source GetLabel(Guid) Returns the text label associated with the specified guid. Declaration public string GetLabel(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.String | Improve this Doc View Source RemoveTag(Guid) Remove the specified tag from the list. Declaration public bool RemoveTag(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean | Improve this Doc View Source RenameTag(SceneObjectTags.Tag, String) Attempts to rename a tag. Declaration public bool RenameTag(SceneObjectTags.Tag tag, string label) Parameters Type Name Description SceneObjectTags.Tag tag System.String label Returns Type Description System.Boolean | Improve this Doc View Source TagExists(Guid) True if the specified tag is present in the list. Declaration public bool TagExists(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean | Improve this Doc View Source TryGetTag(Guid, out SceneObjectTags.Tag) Tries to get the tag associated with the specified GUID. Declaration public bool TryGetTag(Guid guid, out SceneObjectTags.Tag tag) Parameters Type Name Description System.Guid guid The GUID of the tag to retrieve. SceneObjectTags.Tag tag When this method returns, contains the tag associated with the specified GUID, if found; otherwise, the default value. Returns Type Description System.Boolean true if a tag with the specified GUID is found; otherwise, false ."
  },
  "api/VRBuilder.Core.Settings.SceneObjectTags.Tag.html": {
    "href": "api/VRBuilder.Core.Settings.SceneObjectTags.Tag.html",
    "title": "Class SceneObjectTags.Tag | VR Builder Documentation",
    "keywords": "Class SceneObjectTags.Tag Inheritance System.Object SceneObjectTags.Tag Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Settings Assembly : VRBuilder.Core.dll Syntax [Serializable] public class Tag Constructors | Improve this Doc View Source Tag(String) Declaration public Tag(string label) Parameters Type Name Description System.String label | Improve this Doc View Source Tag(String, Guid) Declaration public Tag(string label, Guid guid) Parameters Type Name Description System.String label System.Guid guid Properties | Improve this Doc View Source Guid Guid representing the tag. Declaration public Guid Guid { get; } Property Value Type Description System.Guid | Improve this Doc View Source Label Text label for this tag. Declaration public string Label { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Rename(String) Declaration public void Rename(string label) Parameters Type Name Description System.String label"
  },
  "api/VRBuilder.Core.Setup.html": {
    "href": "api/VRBuilder.Core.Setup.html",
    "title": "Namespace VRBuilder.Core.Setup | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Setup Interfaces ILayerConfigurator Can configure layer masks on an interactor or interactable. Enums LayerSet Define a set of raycast/interaction layers for a specific use."
  },
  "api/VRBuilder.Core.Setup.ILayerConfigurator.html": {
    "href": "api/VRBuilder.Core.Setup.ILayerConfigurator.html",
    "title": "Interface ILayerConfigurator | VR Builder Documentation",
    "keywords": "Interface ILayerConfigurator Can configure layer masks on an interactor or interactable. Namespace : VRBuilder.Core.Setup Assembly : VRBuilder.Core.dll Syntax public interface ILayerConfigurator Properties | Improve this Doc View Source LayerSet The layer set to be used on this configurator. Declaration LayerSet LayerSet { get; } Property Value Type Description LayerSet Methods | Improve this Doc View Source ConfigureLayers(String, String) Set up the layer masks to the specified layer names. Declaration void ConfigureLayers(string interactionLayerName, string raycastLayerName) Parameters Type Name Description System.String interactionLayerName System.String raycastLayerName"
  },
  "api/VRBuilder.Core.Setup.LayerSet.html": {
    "href": "api/VRBuilder.Core.Setup.LayerSet.html",
    "title": "Enum LayerSet | VR Builder Documentation",
    "keywords": "Enum LayerSet Define a set of raycast/interaction layers for a specific use. Namespace : VRBuilder.Core.Setup Assembly : VRBuilder.Core.dll Syntax public enum LayerSet Fields Name Description Interaction None Teleportation UI"
  },
  "api/VRBuilder.Core.Stage.html": {
    "href": "api/VRBuilder.Core.Stage.html",
    "title": "Enum Stage | VR Builder Documentation",
    "keywords": "Enum Stage All possible states of an IEntity . Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public enum Stage Fields Name Description Activating Active Deactivating Inactive"
  },
  "api/VRBuilder.Core.StageProcess-1.html": {
    "href": "api/VRBuilder.Core.StageProcess-1.html",
    "title": "Class StageProcess<TData> | VR Builder Documentation",
    "keywords": "Class StageProcess<TData> A base implementation of a IStageProcess which provides access to its entity's data. Inheritance System.Object StageProcess<TData> BaseActiveProcessOverCompletable<TData> ObjectInTargetActiveProcess<TData> EntityIteratingProcess<TEntitySequenceDataWithMode, TEntity> StopEntityIteratingProcess<TEntity> InstantProcess<TData> PlayAnimationClipBehavior.ActivatingProcess PlayVideoBehavior.ActivatingProcess Implements IStageProcess Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public abstract class StageProcess<TData> : IStageProcess where TData : class, IData Type Parameters Name Description TData Constructors | Improve this Doc View Source StageProcess(TData, IEntity) Declaration protected StageProcess(TData data, IEntity outer = null) Parameters Type Name Description TData data IEntity outer Properties | Improve this Doc View Source Data The entity's data. Declaration protected TData Data { get; } Property Value Type Description TData | Improve this Doc View Source Outer The entity owning the data. Declaration protected IEntity Outer { get; } Property Value Type Description IEntity Methods | Improve this Doc View Source End() Declaration public abstract void End() | Improve this Doc View Source FastForward() Declaration public abstract void FastForward() | Improve this Doc View Source Start() Declaration public abstract void Start() | Improve this Doc View Source Update() Declaration public abstract IEnumerator Update() Returns Type Description System.Collections.IEnumerator Implements IStageProcess"
  },
  "api/VRBuilder.Core.Step.EntityData.html": {
    "href": "api/VRBuilder.Core.Step.EntityData.html",
    "title": "Class Step.EntityData | VR Builder Documentation",
    "keywords": "Class Step.EntityData Inheritance System.Object EntityCollectionData < IStepChild > Step.EntityData Implements IStepData IRenameableData INamedData IDescribedData IEntitySequenceDataWithMode < IStepChild > IEntitySequenceData < IStepChild > IEntityCollectionData < IStepChild > IEntityCollectionData IEntitySequenceData IModeData IData Inherited Members EntityCollectionData<IStepChild>.Metadata EntityCollectionData<IStepChild>.IEntityCollectionData.GetChildren() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class EntityData : EntityCollectionData<IStepChild>, IStepData, IRenameableData, INamedData, IDescribedData, IEntitySequenceDataWithMode<IStepChild>, IEntitySequenceData<IStepChild>, IEntityCollectionData<IStepChild>, IEntityCollectionData, IEntitySequenceData, IModeData, IData Constructors | Improve this Doc View Source EntityData() Declaration public EntityData() Properties | Improve this Doc View Source Behaviors Declaration [DataMember] public IBehaviorCollection Behaviors { get; set; } Property Value Type Description IBehaviorCollection | Improve this Doc View Source Current Declaration [IgnoreDataMember] public IStepChild Current { get; set; } Property Value Type Description IStepChild | Improve this Doc View Source Description Declaration [DataMember] [DrawingPriority(1)] public string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source GroupsToUnlock Declaration public IDictionary<Guid, IEnumerable<Type>> GroupsToUnlock { get; set; } Property Value Type Description System.Collections.Generic.IDictionary < System.Guid , System.Collections.Generic.IEnumerable < System.Type >> | Improve this Doc View Source Mode Declaration public IMode Mode { get; set; } Property Value Type Description IMode | Improve this Doc View Source Name Declaration [DataMember] [DrawingPriority(0)] public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source TagsToUnlock Declaration [Obsolete(\"Use GroupsToUnlock instead.\")] public IDictionary<Guid, IEnumerable<Type>> TagsToUnlock { get; set; } Property Value Type Description System.Collections.Generic.IDictionary < System.Guid , System.Collections.Generic.IEnumerable < System.Type >> | Improve this Doc View Source ToUnlock Declaration [DataMember] public IEnumerable<LockablePropertyReference> ToUnlock { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable < LockablePropertyReference > | Improve this Doc View Source Transitions Declaration [DataMember] public ITransitionCollection Transitions { get; set; } Property Value Type Description ITransitionCollection Methods | Improve this Doc View Source GetChildren() Declaration public override IEnumerable<IStepChild> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < IStepChild > Overrides VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IStepChild>.GetChildren() | Improve this Doc View Source SetName(String) Declaration public void SetName(string name) Parameters Type Name Description System.String name Explicit Interface Implementations | Improve this Doc View Source IEntitySequenceData.Current Declaration IEntity IEntitySequenceData.Current { get; } Returns Type Description IEntity Implements IStepData IRenameableData INamedData IDescribedData IEntitySequenceDataWithMode<TEntity> IEntitySequenceData<TEntity> IEntityCollectionData<TEntity> IEntityCollectionData IEntitySequenceData IModeData IData"
  },
  "api/VRBuilder.Core.Step.html": {
    "href": "api/VRBuilder.Core.Step.html",
    "title": "Class Step | VR Builder Documentation",
    "keywords": "Class Step An implementation of IStep interface. Inheritance System.Object Entity < Step.EntityData > Step Implements IDataOwner < Step.EntityData > IStep IDataOwner < IStepData > IDataOwner IEntity IClonable < IStep > Inherited Members Entity<Step.EntityData>.Data Entity<Step.EntityData>.IDataOwner.Data Entity<Step.EntityData>.LifeCycle Entity<Step.EntityData>.Parent Entity<Step.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class Step : Entity<Step.EntityData>, IDataOwner<Step.EntityData>, IStep, IDataOwner<IStepData>, IDataOwner, IEntity, IClonable<IStep> Constructors | Improve this Doc View Source Step() Declaration protected Step() | Improve this Doc View Source Step(String) Declaration public Step(string name) Parameters Type Name Description System.String name Properties | Improve this Doc View Source StepMetadata Declaration [DataMember] public StepMetadata StepMetadata { get; set; } Property Value Type Description StepMetadata Methods | Improve this Doc View Source Clone() Declaration public IStep Clone() Returns Type Description IStep | Improve this Doc View Source Configure(IMode) Declaration public override void Configure(IMode mode) Parameters Type Name Description IMode mode Overrides VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.Configure(VRBuilder.Core.Configuration.Modes.IMode) | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.GetActiveProcess() | Improve this Doc View Source GetConfigurator() Declaration protected override IConfigurator GetConfigurator() Returns Type Description IConfigurator Overrides VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.GetConfigurator() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.GetDeactivatingProcess() Explicit Interface Implementations | Improve this Doc View Source IDataOwner<IStepData>.Data Declaration IStepData IDataOwner<IStepData>.Data { get; } Returns Type Description IStepData Implements IDataOwner<TData> IStep IDataOwner<TData> IDataOwner IEntity IClonable<T>"
  },
  "api/VRBuilder.Core.StepGroupPostProcessing.html": {
    "href": "api/VRBuilder.Core.StepGroupPostProcessing.html",
    "title": "Class StepGroupPostProcessing | VR Builder Documentation",
    "keywords": "Class StepGroupPostProcessing Postprocessing for a step group node. Inheritance System.Object EntityPostProcessing < IStep > StepGroupPostProcessing Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Editor.dll Syntax public class StepGroupPostProcessing : EntityPostProcessing<IStep> Methods | Improve this Doc View Source Execute(IStep) Declaration public override void Execute(IStep entity) Parameters Type Name Description IStep entity Overrides VRBuilder.Core.EntityPostProcessing<VRBuilder.Core.IStep>.Execute(VRBuilder.Core.IStep)"
  },
  "api/VRBuilder.Core.StepMetadata.html": {
    "href": "api/VRBuilder.Core.StepMetadata.html",
    "title": "Class StepMetadata | VR Builder Documentation",
    "keywords": "Class StepMetadata Implementation of IMetadata adapted for IStep data. Inheritance System.Object StepMetadata Implements IMetadata Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class StepMetadata : IMetadata Properties | Improve this Doc View Source Guid Unique identifier for step. Declaration [DataMember] public Guid Guid { get; set; } Property Value Type Description System.Guid | Improve this Doc View Source Position Graphical position of current IStep on the 'Workflow' window. Declaration public Vector2 Position { get; set; } Property Value Type Description Vector2 | Improve this Doc View Source StepType Graphical representation of current IStep on the 'Workflow' window. Declaration public string StepType { get; set; } Property Value Type Description System.String Implements IMetadata"
  },
  "api/VRBuilder.Core.StepPostProcessing.html": {
    "href": "api/VRBuilder.Core.StepPostProcessing.html",
    "title": "Class StepPostProcessing | VR Builder Documentation",
    "keywords": "Class StepPostProcessing IStep implementation of EntityPostProcessing<T> for default steps. Inheritance System.Object EntityPostProcessing < IStep > StepPostProcessing Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class StepPostProcessing : EntityPostProcessing<IStep> Methods | Improve this Doc View Source Execute(IStep) Declaration public override void Execute(IStep entity) Parameters Type Name Description IStep entity Overrides VRBuilder.Core.EntityPostProcessing<VRBuilder.Core.IStep>.Execute(VRBuilder.Core.IStep)"
  },
  "api/VRBuilder.Core.Transition.EntityData.html": {
    "href": "api/VRBuilder.Core.Transition.EntityData.html",
    "title": "Class Transition.EntityData | VR Builder Documentation",
    "keywords": "Class Transition.EntityData The transition's data class. Inheritance System.Object EntityCollectionData < ICondition > Transition.EntityData Implements ITransitionData IEntityCollectionDataWithMode < ICondition > IEntityCollectionData < ICondition > IEntityCollectionDataWithMode IEntityCollectionData IModeData ICompletableData INamedData IData Inherited Members EntityCollectionData<ICondition>.Metadata EntityCollectionData<ICondition>.IEntityCollectionData.GetChildren() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Transition\")] public class EntityData : EntityCollectionData<ICondition>, ITransitionData, IEntityCollectionDataWithMode<ICondition>, IEntityCollectionData<ICondition>, IEntityCollectionDataWithMode, IEntityCollectionData, IModeData, ICompletableData, INamedData, IData Properties | Improve this Doc View Source Conditions Declaration [DataMember] [DisplayName(\"Conditions\")] [ReorderableListOf(new Type[]{typeof(FoldableAttribute), typeof(HelpAttribute), typeof(MenuAttribute)})] public IList<ICondition> Conditions { get; set; } Property Value Type Description System.Collections.Generic.IList < ICondition > | Improve this Doc View Source IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Mode Declaration public IMode Mode { get; set; } Property Value Type Description IMode | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source TargetStep Declaration [DataMember] public IStep TargetStep { get; set; } Property Value Type Description IStep Methods | Improve this Doc View Source GetChildren() Declaration public override IEnumerable<ICondition> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < ICondition > Overrides VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.Conditions.ICondition>.GetChildren() Implements ITransitionData IEntityCollectionDataWithMode<TEntity> IEntityCollectionData<TEntity> IEntityCollectionDataWithMode IEntityCollectionData IModeData ICompletableData INamedData IData"
  },
  "api/VRBuilder.Core.Transition.html": {
    "href": "api/VRBuilder.Core.Transition.html",
    "title": "Class Transition | VR Builder Documentation",
    "keywords": "Class Transition A class for a transition from one step to another. Inheritance System.Object Entity < Transition.EntityData > CompletableEntity < Transition.EntityData > Transition Implements IDataOwner < Transition.EntityData > ICompletableEntity ITransition IEntity ICompletable IDataOwner < ITransitionData > IDataOwner IClonable < ITransition > ILockablePropertiesProvider Inherited Members CompletableEntity<Transition.EntityData>.IsCompleted CompletableEntity<Transition.EntityData>.Autocomplete() Entity<Transition.EntityData>.Data Entity<Transition.EntityData>.IDataOwner.Data Entity<Transition.EntityData>.LifeCycle Entity<Transition.EntityData>.Parent Entity<Transition.EntityData>.Configure(IMode) Entity<Transition.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class Transition : CompletableEntity<Transition.EntityData>, IDataOwner<Transition.EntityData>, ICompletableEntity, ITransition, IEntity, ICompletable, IDataOwner<ITransitionData>, IDataOwner, IClonable<ITransition>, ILockablePropertiesProvider Constructors | Improve this Doc View Source Transition() Declaration public Transition() Methods | Improve this Doc View Source Clone() Declaration public ITransition Clone() Returns Type Description ITransition | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Transition.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Transition.EntityData>.GetActiveProcess() | Improve this Doc View Source GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.Core.Transition.EntityData>.GetAutocompleter() | Improve this Doc View Source GetConfigurator() Declaration protected override IConfigurator GetConfigurator() Returns Type Description IConfigurator Overrides VRBuilder.Core.Entity<VRBuilder.Core.Transition.EntityData>.GetConfigurator() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Transition.EntityData>.GetDeactivatingProcess() | Improve this Doc View Source GetLockableProperties() Declaration public IEnumerable<LockablePropertyData> GetLockableProperties() Returns Type Description System.Collections.Generic.IEnumerable < LockablePropertyData > Explicit Interface Implementations | Improve this Doc View Source IDataOwner<ITransitionData>.Data Declaration ITransitionData IDataOwner<ITransitionData>.Data { get; } Returns Type Description ITransitionData Implements IDataOwner<TData> ICompletableEntity ITransition IEntity ICompletable IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.Core.TransitionCollection.EntityData.html": {
    "href": "api/VRBuilder.Core.TransitionCollection.EntityData.html",
    "title": "Class TransitionCollection.EntityData | VR Builder Documentation",
    "keywords": "Class TransitionCollection.EntityData The data class of the ITransition s' collection. Inheritance System.Object EntityCollectionData < ITransition > TransitionCollection.EntityData Implements ITransitionCollectionData IEntityCollectionDataWithMode < ITransition > IEntityCollectionData < ITransition > IEntityCollectionDataWithMode IEntityCollectionData IModeData IData Inherited Members EntityCollectionData<ITransition>.Metadata EntityCollectionData<ITransition>.IEntityCollectionData.GetChildren() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class EntityData : EntityCollectionData<ITransition>, ITransitionCollectionData, IEntityCollectionDataWithMode<ITransition>, IEntityCollectionData<ITransition>, IEntityCollectionDataWithMode, IEntityCollectionData, IModeData, IData Properties | Improve this Doc View Source Mode Declaration public IMode Mode { get; set; } Property Value Type Description IMode | Improve this Doc View Source Transitions Declaration [DataMember] [DisplayName(\"\")] [KeepPopulated(typeof(Transition))] [ReorderableListOf(new Type[]{typeof(FoldableAttribute), typeof(DeletableAttribute)})] public virtual IList<ITransition> Transitions { get; set; } Property Value Type Description System.Collections.Generic.IList < ITransition > Methods | Improve this Doc View Source GetChildren() Declaration public override IEnumerable<ITransition> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < ITransition > Overrides VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.ITransition>.GetChildren() Implements ITransitionCollectionData IEntityCollectionDataWithMode<TEntity> IEntityCollectionData<TEntity> IEntityCollectionDataWithMode IEntityCollectionData IModeData IData"
  },
  "api/VRBuilder.Core.TransitionCollection.html": {
    "href": "api/VRBuilder.Core.TransitionCollection.html",
    "title": "Class TransitionCollection | VR Builder Documentation",
    "keywords": "Class TransitionCollection A collection of ITransition s. Inheritance System.Object Entity < TransitionCollection.EntityData > TransitionCollection Implements IDataOwner < TransitionCollection.EntityData > ITransitionCollection IStepChild IEntity IDataOwner < ITransitionCollectionData > IDataOwner IClonable < ITransitionCollection > Inherited Members Entity<TransitionCollection.EntityData>.Data Entity<TransitionCollection.EntityData>.IDataOwner.Data Entity<TransitionCollection.EntityData>.LifeCycle Entity<TransitionCollection.EntityData>.Parent Entity<TransitionCollection.EntityData>.Configure(IMode) Entity<TransitionCollection.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class TransitionCollection : Entity<TransitionCollection.EntityData>, IDataOwner<TransitionCollection.EntityData>, ITransitionCollection, IStepChild, IEntity, IDataOwner<ITransitionCollectionData>, IDataOwner, IClonable<ITransitionCollection> Constructors | Improve this Doc View Source TransitionCollection() Declaration public TransitionCollection() Methods | Improve this Doc View Source Clone() Declaration public ITransitionCollection Clone() Returns Type Description ITransitionCollection | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.GetActiveProcess() | Improve this Doc View Source GetConfigurator() Declaration protected override IConfigurator GetConfigurator() Returns Type Description IConfigurator Overrides VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.GetConfigurator() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.GetDeactivatingProcess() Explicit Interface Implementations | Improve this Doc View Source IDataOwner<ITransitionCollectionData>.Data Declaration ITransitionCollectionData IDataOwner<ITransitionCollectionData>.Data { get; } Returns Type Description ITransitionCollectionData Implements IDataOwner<TData> ITransitionCollection IStepChild IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.UI.Drawers.Metadata.html": {
    "href": "api/VRBuilder.Core.UI.Drawers.Metadata.html",
    "title": "Namespace VRBuilder.Core.UI.Drawers.Metadata | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.UI.Drawers.Metadata Classes ReorderableElementMetadata Metadata to make ReorderableListOfAttribute reorderable."
  },
  "api/VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.html": {
    "href": "api/VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.html",
    "title": "Class ReorderableElementMetadata | VR Builder Documentation",
    "keywords": "Class ReorderableElementMetadata Metadata to make ReorderableListOfAttribute reorderable. Inheritance System.Object ReorderableElementMetadata Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.UI.Drawers.Metadata Assembly : VRBuilder.Core.dll Syntax public class ReorderableElementMetadata Properties | Improve this Doc View Source IsFirst Determines, whether the entity is the first one in the list. Declaration public bool IsFirst { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLast Determines, whether the entity is the last one in the list. Declaration public bool IsLast { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MoveDown Determines, whether the entity must be moved down in the list. Declaration public bool MoveDown { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MoveUp Determines, whether the entity must be moved up in the list. Declaration public bool MoveUp { get; set; } Property Value Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Utils.Bezier.html": {
    "href": "api/VRBuilder.Core.Utils.Bezier.html",
    "title": "Class Bezier | VR Builder Documentation",
    "keywords": "Class Bezier Bezier curve formulas. Inheritance System.Object Bezier Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Utils Assembly : VRBuilder.Core.dll Syntax public static class Bezier Methods | Improve this Doc View Source GetArcLength(Vector3, Vector3, Vector3, Vector3, Int32) Declaration public static IEnumerable<float> GetArcLength(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, int resolution) Parameters Type Name Description Vector3 p0 Vector3 p1 Vector3 p2 Vector3 p3 System.Int32 resolution Returns Type Description System.Collections.Generic.IEnumerable < System.Single > | Improve this Doc View Source GetFirstDerivative(Vector3, Vector3, Vector3, Single) Declaration public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, float t) Parameters Type Name Description Vector3 p0 Vector3 p1 Vector3 p2 System.Single t Returns Type Description Vector3 | Improve this Doc View Source GetFirstDerivative(Vector3, Vector3, Vector3, Vector3, Single) Declaration public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t) Parameters Type Name Description Vector3 p0 Vector3 p1 Vector3 p2 Vector3 p3 System.Single t Returns Type Description Vector3 | Improve this Doc View Source GetPoint(Vector3, Vector3, Vector3, Single) Declaration public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t) Parameters Type Name Description Vector3 p0 Vector3 p1 Vector3 p2 System.Single t Returns Type Description Vector3 | Improve this Doc View Source GetPoint(Vector3, Vector3, Vector3, Vector3, Single) Declaration public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t) Parameters Type Name Description Vector3 p0 Vector3 p1 Vector3 p2 Vector3 p3 System.Single t Returns Type Description Vector3"
  },
  "api/VRBuilder.Core.Utils.BezierControlPointMode.html": {
    "href": "api/VRBuilder.Core.Utils.BezierControlPointMode.html",
    "title": "Enum BezierControlPointMode | VR Builder Documentation",
    "keywords": "Enum BezierControlPointMode Control point modes for BezierSpline . Namespace : VRBuilder.Core.Utils Assembly : VRBuilder.Core.dll Syntax public enum BezierControlPointMode Fields Name Description Aligned Free Mirrored"
  },
  "api/VRBuilder.Core.Utils.BezierSpline.html": {
    "href": "api/VRBuilder.Core.Utils.BezierSpline.html",
    "title": "Class BezierSpline | VR Builder Documentation",
    "keywords": "Class BezierSpline Class that generates a Bezier spline. Inheritance System.Object BezierSpline Namespace : VRBuilder.Core.Utils Assembly : VRBuilder.Core.dll Syntax public class BezierSpline : MonoBehaviour Properties | Improve this Doc View Source ControlPointCount Amount of control points in the spline. Declaration public int ControlPointCount { get; } Property Value Type Description System.Int32 | Improve this Doc View Source CurveCount Returns curve count. Declaration public int CurveCount { get; } Property Value Type Description System.Int32 | Improve this Doc View Source CurveResolution The amount of segments the curve will be divided in for the linear approximation. Declaration public int CurveResolution { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source LinearVelocity If true, the t parameter will be applied linearly, with some approximation. Declaration public bool LinearVelocity { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Loop If true, the spline will form a loop. Declaration public bool Loop { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source AddCurve() Adds a new curve to the spline. Declaration public void AddCurve() | Improve this Doc View Source GetControlPoint(Int32) Returns the control point at the given index. Declaration public Vector3 GetControlPoint(int index) Parameters Type Name Description System.Int32 index Returns Type Description Vector3 | Improve this Doc View Source GetControlPointMode(Int32) Returns control point mode. Declaration public BezierControlPointMode GetControlPointMode(int index) Parameters Type Name Description System.Int32 index Returns Type Description BezierControlPointMode | Improve this Doc View Source GetDirection(Single) Returns direction at the given position. Declaration public Vector3 GetDirection(float t) Parameters Type Name Description System.Single t Returns Type Description Vector3 | Improve this Doc View Source GetPoint(Single) Returns the point at the given position. Declaration public Vector3 GetPoint(float t) Parameters Type Name Description System.Single t Returns Type Description Vector3 | Improve this Doc View Source GetVelocity(Single) Returns velocity at the given position. Declaration public Vector3 GetVelocity(float t) Parameters Type Name Description System.Single t Returns Type Description Vector3 | Improve this Doc View Source RemoveCurve() Removes the last curve from the spline. Declaration public void RemoveCurve() | Improve this Doc View Source Reset() Declaration public void Reset() | Improve this Doc View Source SetControlPoint(Int32, Vector3) Sets the control point at the given index. Declaration public void SetControlPoint(int index, Vector3 point) Parameters Type Name Description System.Int32 index Vector3 point | Improve this Doc View Source SetControlPointMode(Int32, BezierControlPointMode) Sets control point mode. Declaration public void SetControlPointMode(int index, BezierControlPointMode mode) Parameters Type Name Description System.Int32 index BezierControlPointMode mode"
  },
  "api/VRBuilder.Core.Utils.DebugUtils.html": {
    "href": "api/VRBuilder.Core.Utils.DebugUtils.html",
    "title": "Class DebugUtils | VR Builder Documentation",
    "keywords": "Class DebugUtils Utility class for debug tools. Inheritance System.Object DebugUtils Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Utils Assembly : VRBuilder.Core.dll Syntax public static class DebugUtils Methods | Improve this Doc View Source DrawWireCylinderGizmo(Vector3, Vector3, Single, Color) Draws a custom wire cylinder gizmo. Declaration public static void DrawWireCylinderGizmo(Vector3 startPoint, Vector3 endPoint, float width, Color color) Parameters Type Name Description Vector3 startPoint Vector3 endPoint System.Single width Color color"
  },
  "api/VRBuilder.Core.Utils.GameObjectExtension.html": {
    "href": "api/VRBuilder.Core.Utils.GameObjectExtension.html",
    "title": "Class GameObjectExtension | VR Builder Documentation",
    "keywords": "Class GameObjectExtension Inheritance System.Object GameObjectExtension Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Utils Assembly : VRBuilder.Core.dll Syntax public static class GameObjectExtension Methods | Improve this Doc View Source RemoveChildWithNameImmediate(GameObject, String) Removes a gameobject child with a specific name. As it uses DestroyImmediate it should only be used during editor time. Declaration public static void RemoveChildWithNameImmediate(this GameObject gameObject, string name) Parameters Type Name Description GameObject gameObject System.String name | Improve this Doc View Source SetLayer<T>(GameObject, Int32, Boolean) Declaration public static void SetLayer<T>(this GameObject gameObject, int layer, bool includeChildren = false) where T : Component Parameters Type Name Description GameObject gameObject System.Int32 layer System.Boolean includeChildren Type Parameters Name Description T"
  },
  "api/VRBuilder.Core.Utils.html": {
    "href": "api/VRBuilder.Core.Utils.html",
    "title": "Namespace VRBuilder.Core.Utils | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Utils Classes Bezier Bezier curve formulas. BezierSpline Class that generates a Bezier spline. DebugUtils Utility class for debug tools. GameObjectExtension LockObjectsOnSceneStart Handles locking of all process objects in the scene and makes them non-interactable before the process is started. ProcessReferenceUtils ProcessUtils Collection of utilities for handling processes. ReflectionUtils Enums BezierControlPointMode Control point modes for BezierSpline ."
  },
  "api/VRBuilder.Core.Utils.LockObjectsOnSceneStart.html": {
    "href": "api/VRBuilder.Core.Utils.LockObjectsOnSceneStart.html",
    "title": "Class LockObjectsOnSceneStart | VR Builder Documentation",
    "keywords": "Class LockObjectsOnSceneStart Handles locking of all process objects in the scene and makes them non-interactable before the process is started. Inheritance System.Object LockObjectsOnSceneStart Namespace : VRBuilder.Core.Utils Assembly : VRBuilder.Core.dll Syntax public class LockObjectsOnSceneStart : MonoBehaviour"
  },
  "api/VRBuilder.Core.Utils.Logging.html": {
    "href": "api/VRBuilder.Core.Utils.Logging.html",
    "title": "Namespace VRBuilder.Core.Utils.Logging | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Utils.Logging Classes LifeCycleLoggingConfig ScriptableObject which allows you to configure what of the process life cycle should be logged."
  },
  "api/VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.html": {
    "href": "api/VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.html",
    "title": "Class LifeCycleLoggingConfig | VR Builder Documentation",
    "keywords": "Class LifeCycleLoggingConfig ScriptableObject which allows you to configure what of the process life cycle should be logged. Inheritance System.Object SettingsObject < LifeCycleLoggingConfig > LifeCycleLoggingConfig Inherited Members SettingsObject<LifeCycleLoggingConfig>.Instance SettingsObject<LifeCycleLoggingConfig>.Save() Namespace : VRBuilder.Core.Utils.Logging Assembly : VRBuilder.Core.dll Syntax public class LifeCycleLoggingConfig : SettingsObject<LifeCycleLoggingConfig> Fields | Improve this Doc View Source LogBehaviors True, if behaviors are allowed to be logged. Declaration public bool LogBehaviors Field Value Type Description System.Boolean | Improve this Doc View Source LogChapters True, if chapters are allowed to be logged. Declaration public bool LogChapters Field Value Type Description System.Boolean | Improve this Doc View Source LogConditions True, if conditions are allowed to be logged. Declaration public bool LogConditions Field Value Type Description System.Boolean | Improve this Doc View Source LogDataPropertyChanges True, if data property changes are allowed to be logged. Declaration public bool LogDataPropertyChanges Field Value Type Description System.Boolean | Improve this Doc View Source LogLockState True, if verbose logging is enabled. Declaration public bool LogLockState Field Value Type Description System.Boolean | Improve this Doc View Source LogSteps True, if steps are allowed to be logged. Declaration public bool LogSteps Field Value Type Description System.Boolean | Improve this Doc View Source LogTransitions True, if transitions are allowed to be logged. Declaration public bool LogTransitions Field Value Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Utils.ProcessReferenceUtils.html": {
    "href": "api/VRBuilder.Core.Utils.ProcessReferenceUtils.html",
    "title": "Class ProcessReferenceUtils | VR Builder Documentation",
    "keywords": "Class ProcessReferenceUtils Inheritance System.Object ProcessReferenceUtils Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Utils Assembly : VRBuilder.Core.dll Syntax public static class ProcessReferenceUtils Methods | Improve this Doc View Source GetNameFrom(ISceneObjectProperty) Declaration [Obsolete] public static string GetNameFrom(ISceneObjectProperty property) Parameters Type Name Description ISceneObjectProperty property Returns Type Description System.String | Improve this Doc View Source GetNameFrom(ISceneObject) Declaration [Obsolete] public static string GetNameFrom(ISceneObject sceneObject) Parameters Type Name Description ISceneObject sceneObject Returns Type Description System.String | Improve this Doc View Source GetUniqueIdFrom(ISceneObjectProperty) Declaration public static Guid GetUniqueIdFrom(ISceneObjectProperty property) Parameters Type Name Description ISceneObjectProperty property Returns Type Description System.Guid | Improve this Doc View Source GetUniqueIdFrom(ISceneObject) Declaration public static Guid GetUniqueIdFrom(ISceneObject sceneObject) Parameters Type Name Description ISceneObject sceneObject Returns Type Description System.Guid"
  },
  "api/VRBuilder.Core.Utils.ProcessUtils.html": {
    "href": "api/VRBuilder.Core.Utils.ProcessUtils.html",
    "title": "Class ProcessUtils | VR Builder Documentation",
    "keywords": "Class ProcessUtils Collection of utilities for handling processes. Inheritance System.Object ProcessUtils Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Utils Assembly : VRBuilder.Core.dll Syntax public static class ProcessUtils Methods | Improve this Doc View Source GetParentEntity(IEntity, IProcess) Returns the parent entity for the specified entity in the given process. Declaration public static IEntity GetParentEntity(IEntity entity, IProcess process) Parameters Type Name Description IEntity entity IProcess process Returns Type Description IEntity"
  },
  "api/VRBuilder.Core.Utils.ReflectionUtils.html": {
    "href": "api/VRBuilder.Core.Utils.ReflectionUtils.html",
    "title": "Class ReflectionUtils | VR Builder Documentation",
    "keywords": "Class ReflectionUtils Inheritance System.Object ReflectionUtils Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Utils Assembly : VRBuilder.Core.dll Syntax public static class ReflectionUtils Methods | Improve this Doc View Source CreateInstanceOfType(Type) Creates instance of given type using public or protected constructor with no parameters. Declaration public static object CreateInstanceOfType(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Object | Improve this Doc View Source CreateInstanceOfType<T>() Creates instance of given type using public or protected constructor with no parameters. Declaration public static T CreateInstanceOfType<T>() Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetAllTypes() Returns all existing types of all assemblies. Declaration public static IEnumerable<Type> GetAllTypes() Returns Type Description System.Collections.Generic.IEnumerable < System.Type > | Improve this Doc View Source GetAttribute<T>(Type, Boolean) Returns first attribute T of type Declaration public static T GetAttribute<T>(this Type type, bool inherit = false) where T : Attribute Parameters Type Name Description System.Type type System.Boolean inherit Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetConcreteImplementationsOf(Type) Returns non-abstract classes that implement or inherit from given type. Declaration public static IEnumerable<Type> GetConcreteImplementationsOf(Type baseType) Parameters Type Name Description System.Type baseType Returns Type Description System.Collections.Generic.IEnumerable < System.Type > | Improve this Doc View Source GetConcreteImplementationsOf<T>() Returns non-abstract classes that implement or inherit from given type. Declaration public static IEnumerable<Type> GetConcreteImplementationsOf<T>() Returns Type Description System.Collections.Generic.IEnumerable < System.Type > Type Parameters Name Description T | Improve this Doc View Source GetDeclaredTypeOfPropertyOrField(MemberInfo) Get declared type of field/property info . Declaration public static Type GetDeclaredTypeOfPropertyOrField(MemberInfo info) Parameters Type Name Description System.Reflection.MemberInfo info Returns Type Description System.Type | Improve this Doc View Source GetDefault(Type) Returns default instance of type. Declaration public static object GetDefault(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Object | Improve this Doc View Source GetEntryType(Object) Declaration public static Type GetEntryType(object list) Parameters Type Name Description System.Object list Returns Type Description System.Type | Improve this Doc View Source GetEntryType(Type) If the given listType is IList{T}, return its generic type argument. Otherwise, return typeof(object). Declaration public static Type GetEntryType(Type listType) Parameters Type Name Description System.Type listType Returns Type Description System.Type | Improve this Doc View Source GetFinalImplementationsOf<T>(Type[]) Return an IEnumerable of types which inherit T and are not inherited by any other type. It is sorted by priority. lowestPriorityTypes come at the end. Declaration public static IEnumerable<Type> GetFinalImplementationsOf<T>(params Type[] lowestPriorityTypes) Parameters Type Name Description System.Type [] lowestPriorityTypes Returns Type Description System.Collections.Generic.IEnumerable < System.Type > Type Parameters Name Description T | Improve this Doc View Source GetGenericDictionaryInterface(Object) Returns generic IDictionary interface which is implemented by the type of dictionaryValue . If dictionaryValue 's type does not implement it, returns null. Declaration public static Type GetGenericDictionaryInterface(object dictionaryValue) Parameters Type Name Description System.Object dictionaryValue Returns Type Description System.Type | Improve this Doc View Source GetNameWithNesting(Type) Return type name taking into consideration if it is nested type or not. Declaration public static string GetNameWithNesting(this Type type) Parameters Type Name Description System.Type type Returns Type Description System.String | Improve this Doc View Source GetTypeFromAssemblyQualifiedName(String) Returns the type from assemblyQualifiedName or null if not found. Declaration public static Type GetTypeFromAssemblyQualifiedName(string assemblyQualifiedName) Parameters Type Name Description System.String assemblyQualifiedName Returns Type Description System.Type | Improve this Doc View Source GetValueFromPropertyOrField(Object, MemberInfo) Get value from property/field member of object owner Declaration public static object GetValueFromPropertyOrField(object owner, MemberInfo member) Parameters Type Name Description System.Object owner System.Reflection.MemberInfo member Returns Type Description System.Object | Improve this Doc View Source InsertIntoList(ref IList, Int32, Object) Insert a value in list at index index . If the list is fixed size, new instance is created. Declaration public static void InsertIntoList(ref IList list, int index, object value) Parameters Type Name Description System.Collections.IList list System.Int32 index System.Object value | Improve this Doc View Source IsEmpty(Object) Determines if the given object is empty. Declaration public static bool IsEmpty(object value) Parameters Type Name Description System.Object value Returns Type Description System.Boolean | Improve this Doc View Source IsField(MemberInfo) Is given memberInfo a FieldInfo? Declaration public static bool IsField(MemberInfo memberInfo) Parameters Type Name Description System.Reflection.MemberInfo memberInfo Returns Type Description System.Boolean | Improve this Doc View Source IsNumeric(Type) Checks if the given type is a number. Declaration public static bool IsNumeric(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean | Improve this Doc View Source IsProperty(MemberInfo) Is given memberInfo a PropertyInfo? Declaration public static bool IsProperty(MemberInfo memberInfo) Parameters Type Name Description System.Reflection.MemberInfo memberInfo Returns Type Description System.Boolean | Improve this Doc View Source IsSubclassOfGenericDefinition(Type, Type) Check if type inherits from genericDefinition . Declaration public static bool IsSubclassOfGenericDefinition(this Type typeToCheck, Type genericDefinition) Parameters Type Name Description System.Type typeToCheck System.Type genericDefinition Returns Type Description System.Boolean | Improve this Doc View Source RemoveFromList(ref IList, Int32) Remove an element from list at index . If the list is fixed size, new instance is created. Declaration public static void RemoveFromList(ref IList list, int index) Parameters Type Name Description System.Collections.IList list System.Int32 index | Improve this Doc View Source ReplaceList<T>(ref IList, IEnumerable<T>) Replace list with a newList . New instance is created. Declaration public static void ReplaceList<T>(ref IList list, IEnumerable<T> newList) Parameters Type Name Description System.Collections.IList list System.Collections.Generic.IEnumerable <T> newList Type Parameters Name Description T | Improve this Doc View Source SetValueToPropertyOrField(Object, MemberInfo, Object) Set value to property/field member of object owner . Declaration public static void SetValueToPropertyOrField(object owner, MemberInfo member, object value) Parameters Type Name Description System.Object owner System.Reflection.MemberInfo member System.Object value | Improve this Doc View Source WhichHaveAttribute<T>(IEnumerable<Type>) Returns types which have attribute T . Declaration public static IEnumerable<Type> WhichHaveAttribute<T>(this IEnumerable<Type> types) where T : Attribute Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Type > types Returns Type Description System.Collections.Generic.IEnumerable < System.Type > Type Parameters Name Description T"
  },
  "api/VRBuilder.Core.Validation.html": {
    "href": "api/VRBuilder.Core.Validation.html",
    "title": "Namespace VRBuilder.Core.Validation | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Validation Classes ReportEntry Base report entry with all information available on editor Builder core. Interfaces IAttributeValidator Can be used to validate variables in any EntityData. Enums ValidationErrorLevel Error level of the problem found while validating."
  },
  "api/VRBuilder.Core.Validation.IAttributeValidator.html": {
    "href": "api/VRBuilder.Core.Validation.IAttributeValidator.html",
    "title": "Interface IAttributeValidator | VR Builder Documentation",
    "keywords": "Interface IAttributeValidator Can be used to validate variables in any EntityData. Namespace : VRBuilder.Core.Validation Assembly : VRBuilder.Core.dll Syntax public interface IAttributeValidator Properties | Improve this Doc View Source ErrorLevel ValidationState which will be used if the validation fails. Declaration ValidationErrorLevel ErrorLevel { get; } Property Value Type Description ValidationErrorLevel Methods | Improve this Doc View Source Validate(Object) Runs the validation and returns true if there is a problem. Declaration List<ReportEntry> Validate(object value) Parameters Type Name Description System.Object value Object which will be validated. Returns Type Description System.Collections.Generic.List < ReportEntry > Returns a list of report entries."
  },
  "api/VRBuilder.Core.Validation.ReportEntry.html": {
    "href": "api/VRBuilder.Core.Validation.ReportEntry.html",
    "title": "Class ReportEntry | VR Builder Documentation",
    "keywords": "Class ReportEntry Base report entry with all information available on editor Builder core. Inheritance System.Object ReportEntry EditorReportEntry Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Validation Assembly : VRBuilder.Core.dll Syntax public class ReportEntry Constructors | Improve this Doc View Source ReportEntry(Int32, String, ValidationErrorLevel) Declaration public ReportEntry(int code, string message, ValidationErrorLevel errorLevel) Parameters Type Name Description System.Int32 code System.String message ValidationErrorLevel errorLevel | Improve this Doc View Source ReportEntry(ReportEntry) Declaration protected ReportEntry(ReportEntry entry) Parameters Type Name Description ReportEntry entry Fields | Improve this Doc View Source Code ErrorCode to easily identifying the error. Declaration public readonly int Code Field Value Type Description System.Int32 | Improve this Doc View Source ErrorLevel Priority level for this . Declaration public readonly ValidationErrorLevel ErrorLevel Field Value Type Description ValidationErrorLevel | Improve this Doc View Source Message Detailed description of the issue. Declaration public readonly string Message Field Value Type Description System.String"
  },
  "api/VRBuilder.Core.Validation.ValidationErrorLevel.html": {
    "href": "api/VRBuilder.Core.Validation.ValidationErrorLevel.html",
    "title": "Enum ValidationErrorLevel | VR Builder Documentation",
    "keywords": "Enum ValidationErrorLevel Error level of the problem found while validating. Namespace : VRBuilder.Core.Validation Assembly : VRBuilder.Core.dll Syntax public enum ValidationErrorLevel Fields Name Description ERROR FATAL HINT WARNING"
  },
  "api/VRBuilder.Core.ViewTransform.html": {
    "href": "api/VRBuilder.Core.ViewTransform.html",
    "title": "Class ViewTransform | VR Builder Documentation",
    "keywords": "Class ViewTransform Stores position and scale in a viewport. Inheritance System.Object ViewTransform Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax [DataContract(IsReference = true)] public class ViewTransform Constructors | Improve this Doc View Source ViewTransform(Vector3, Vector3) Declaration public ViewTransform(Vector3 position, Vector3 scale) Parameters Type Name Description Vector3 position Vector3 scale Properties | Improve this Doc View Source Position Declaration [DataMember] public Vector3 Position { get; set; } Property Value Type Description Vector3 | Improve this Doc View Source Scale Declaration [DataMember] public Vector3 Scale { get; set; } Property Value Type Description Vector3"
  },
  "api/VRBuilder.Editor.Animations.Configuration.AnimationsConfigurationExtension.html": {
    "href": "api/VRBuilder.Editor.Animations.Configuration.AnimationsConfigurationExtension.html",
    "title": "Class AnimationsConfigurationExtension | VR Builder Documentation",
    "keywords": "Class AnimationsConfigurationExtension Inheritance System.Object AnimationsConfigurationExtension Implements IEditorConfigurationExtension Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Animations.Configuration Assembly : VRBuilder.Editor.Animations.dll Syntax public class AnimationsConfigurationExtension : IEditorConfigurationExtension Properties | Improve this Doc View Source DisabledMenuItems Declaration public IEnumerable<Type> DisabledMenuItems { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Type > | Improve this Doc View Source RequiredMenuItems Declaration public IEnumerable<Type> RequiredMenuItems { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Type > Implements IEditorConfigurationExtension"
  },
  "api/VRBuilder.Editor.Animations.Configuration.html": {
    "href": "api/VRBuilder.Editor.Animations.Configuration.html",
    "title": "Namespace VRBuilder.Editor.Animations.Configuration | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.Animations.Configuration Classes AnimationsConfigurationExtension"
  },
  "api/VRBuilder.Editor.Animations.UI.Behaviors.AnimateTransformMenuItem.html": {
    "href": "api/VRBuilder.Editor.Animations.UI.Behaviors.AnimateTransformMenuItem.html",
    "title": "Class AnimateTransformMenuItem | VR Builder Documentation",
    "keywords": "Class AnimateTransformMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > AnimateTransformMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Animations.UI.Behaviors Assembly : VRBuilder.Editor.Animations.dll Syntax public class AnimateTransformMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.Animations.UI.Behaviors.ChildExplosionViewMenuItem.html": {
    "href": "api/VRBuilder.Editor.Animations.UI.Behaviors.ChildExplosionViewMenuItem.html",
    "title": "Class ChildExplosionViewMenuItem | VR Builder Documentation",
    "keywords": "Class ChildExplosionViewMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > ChildExplosionViewMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Animations.UI.Behaviors Assembly : VRBuilder.Editor.Animations.dll Syntax public class ChildExplosionViewMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.Animations.UI.Behaviors.FollowPathMenuItem.html": {
    "href": "api/VRBuilder.Editor.Animations.UI.Behaviors.FollowPathMenuItem.html",
    "title": "Class FollowPathMenuItem | VR Builder Documentation",
    "keywords": "Class FollowPathMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > FollowPathMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Animations.UI.Behaviors Assembly : VRBuilder.Editor.Animations.dll Syntax public class FollowPathMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.Animations.UI.Behaviors.html": {
    "href": "api/VRBuilder.Editor.Animations.UI.Behaviors.html",
    "title": "Namespace VRBuilder.Editor.Animations.UI.Behaviors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.Animations.UI.Behaviors Classes AnimateTransformMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . ChildExplosionViewMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . FollowPathMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . PlayAnimationClipMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . RotateAroundAxisMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . SetAnimatorBoolMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . SetAnimatorFloatMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . SetAnimatorIntMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . SetAnimatorTriggerMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() ."
  },
  "api/VRBuilder.Editor.Animations.UI.Behaviors.PlayAnimationClipMenuItem.html": {
    "href": "api/VRBuilder.Editor.Animations.UI.Behaviors.PlayAnimationClipMenuItem.html",
    "title": "Class PlayAnimationClipMenuItem | VR Builder Documentation",
    "keywords": "Class PlayAnimationClipMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > PlayAnimationClipMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Animations.UI.Behaviors Assembly : VRBuilder.Editor.Animations.dll Syntax public class PlayAnimationClipMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.Animations.UI.Behaviors.RotateAroundAxisMenuItem.html": {
    "href": "api/VRBuilder.Editor.Animations.UI.Behaviors.RotateAroundAxisMenuItem.html",
    "title": "Class RotateAroundAxisMenuItem | VR Builder Documentation",
    "keywords": "Class RotateAroundAxisMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > RotateAroundAxisMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Animations.UI.Behaviors Assembly : VRBuilder.Editor.Animations.dll Syntax public class RotateAroundAxisMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.Animations.UI.Behaviors.SetAnimatorBoolMenuItem.html": {
    "href": "api/VRBuilder.Editor.Animations.UI.Behaviors.SetAnimatorBoolMenuItem.html",
    "title": "Class SetAnimatorBoolMenuItem | VR Builder Documentation",
    "keywords": "Class SetAnimatorBoolMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetAnimatorBoolMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Animations.UI.Behaviors Assembly : VRBuilder.Editor.Animations.dll Syntax public class SetAnimatorBoolMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.Animations.UI.Behaviors.SetAnimatorFloatMenuItem.html": {
    "href": "api/VRBuilder.Editor.Animations.UI.Behaviors.SetAnimatorFloatMenuItem.html",
    "title": "Class SetAnimatorFloatMenuItem | VR Builder Documentation",
    "keywords": "Class SetAnimatorFloatMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetAnimatorFloatMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Animations.UI.Behaviors Assembly : VRBuilder.Editor.Animations.dll Syntax public class SetAnimatorFloatMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.Animations.UI.Behaviors.SetAnimatorIntMenuItem.html": {
    "href": "api/VRBuilder.Editor.Animations.UI.Behaviors.SetAnimatorIntMenuItem.html",
    "title": "Class SetAnimatorIntMenuItem | VR Builder Documentation",
    "keywords": "Class SetAnimatorIntMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetAnimatorIntMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Animations.UI.Behaviors Assembly : VRBuilder.Editor.Animations.dll Syntax public class SetAnimatorIntMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.Animations.UI.Behaviors.SetAnimatorTriggerMenuItem.html": {
    "href": "api/VRBuilder.Editor.Animations.UI.Behaviors.SetAnimatorTriggerMenuItem.html",
    "title": "Class SetAnimatorTriggerMenuItem | VR Builder Documentation",
    "keywords": "Class SetAnimatorTriggerMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetAnimatorTriggerMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Animations.UI.Behaviors Assembly : VRBuilder.Editor.Animations.dll Syntax public class SetAnimatorTriggerMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.BasicInteraction.html": {
    "href": "api/VRBuilder.Editor.BasicInteraction.html",
    "title": "Namespace VRBuilder.Editor.BasicInteraction | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.BasicInteraction Classes InteractionFrameworkSceneSetup This base class is supposed to be implemented by classes which will be called to setup the scene, specifically interaction frameworks."
  },
  "api/VRBuilder.Editor.BasicInteraction.Inspector.HasGuidValidationEditor.html": {
    "href": "api/VRBuilder.Editor.BasicInteraction.Inspector.HasGuidValidationEditor.html",
    "title": "Class HasGuidValidationEditor | VR Builder Documentation",
    "keywords": "Class HasGuidValidationEditor Inheritance System.Object HasGuidValidationEditor Namespace : VRBuilder.Editor.BasicInteraction.Inspector Assembly : VRBuilder.Editor.BasicInteraction.dll Syntax public class HasGuidValidationEditor : Editor Fields | Improve this Doc View Source dropBoxStyle Declaration protected GUIStyle dropBoxStyle Field Value Type Description GUIStyle | Improve this Doc View Source richTextLabelStyle Declaration protected GUIStyle richTextLabelStyle Field Value Type Description GUIStyle Methods | Improve this Doc View Source DropAreaGUI(Action<GameObject>) Declaration protected void DropAreaGUI(Action<GameObject> dropAction) Parameters Type Name Description System.Action < GameObject > dropAction | Improve this Doc View Source OnInspectorGUI() Declaration public override void OnInspectorGUI() | Improve this Doc View Source OpenMissingProcessSceneObjectDialog(GameObject) Declaration protected Guid OpenMissingProcessSceneObjectDialog(GameObject selectedSceneObject) Parameters Type Name Description GameObject selectedSceneObject Returns Type Description System.Guid"
  },
  "api/VRBuilder.Editor.BasicInteraction.Inspector.html": {
    "href": "api/VRBuilder.Editor.BasicInteraction.Inspector.html",
    "title": "Namespace VRBuilder.Editor.BasicInteraction.Inspector | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.BasicInteraction.Inspector Classes HasGuidValidationEditor IsObjectWithTagValidationEditor"
  },
  "api/VRBuilder.Editor.BasicInteraction.Inspector.IsObjectWithTagValidationEditor.html": {
    "href": "api/VRBuilder.Editor.BasicInteraction.Inspector.IsObjectWithTagValidationEditor.html",
    "title": "Class IsObjectWithTagValidationEditor | VR Builder Documentation",
    "keywords": "Class IsObjectWithTagValidationEditor Inheritance System.Object IsObjectWithTagValidationEditor Namespace : VRBuilder.Editor.BasicInteraction.Inspector Assembly : VRBuilder.Editor.BasicInteraction.dll Syntax public class IsObjectWithTagValidationEditor : Editor Methods | Improve this Doc View Source OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/VRBuilder.Editor.BasicInteraction.InteractionFrameworkSceneSetup.html": {
    "href": "api/VRBuilder.Editor.BasicInteraction.InteractionFrameworkSceneSetup.html",
    "title": "Class InteractionFrameworkSceneSetup | VR Builder Documentation",
    "keywords": "Class InteractionFrameworkSceneSetup This base class is supposed to be implemented by classes which will be called to setup the scene, specifically interaction frameworks. Inheritance System.Object SceneSetup InteractionFrameworkSceneSetup XRInteractionSceneSetup Inherited Members SceneSetup.Setup(ISceneSetupConfiguration) SceneSetup.SetupPrefab(String) SceneSetup.FindPrefab(String) SceneSetup.IsPrefabMissingInScene(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.BasicInteraction Assembly : VRBuilder.Editor.BasicInteraction.dll Syntax public abstract class InteractionFrameworkSceneSetup : SceneSetup Properties | Improve this Doc View Source Key Identifier key for specific scene setup types, e.g. for every interaction framework. Declaration public override string Key { get; } Property Value Type Description System.String Overrides SceneSetup.Key | Improve this Doc View Source Priority Priority lets you tweak in which order different SceneSetup s will be performed. The priority is considered from lowest to highest. Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides SceneSetup.Priority Methods | Improve this Doc View Source RemoveMainCamera() Removes current MainCamera. Declaration protected void RemoveMainCamera()"
  },
  "api/VRBuilder.Editor.BasicInteraction.RigSetup.DefaultRigSceneSetup.html": {
    "href": "api/VRBuilder.Editor.BasicInteraction.RigSetup.DefaultRigSceneSetup.html",
    "title": "Class DefaultRigSceneSetup | VR Builder Documentation",
    "keywords": "Class DefaultRigSceneSetup Setups the default rig for the active interaction component. Inheritance System.Object SceneSetup DefaultRigSceneSetup Inherited Members SceneSetup.SetupPrefab(String) SceneSetup.FindPrefab(String) SceneSetup.IsPrefabMissingInScene(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.BasicInteraction.RigSetup Assembly : VRBuilder.Editor.BasicInteraction.dll Syntax public class DefaultRigSceneSetup : SceneSetup Properties | Improve this Doc View Source Key Identifier key for specific scene setup types, e.g. for every interaction framework. Declaration public override string Key { get; } Property Value Type Description System.String Overrides SceneSetup.Key | Improve this Doc View Source Priority Priority lets you tweak in which order different SceneSetup s will be performed. The priority is considered from lowest to highest. Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides SceneSetup.Priority Methods | Improve this Doc View Source Setup(ISceneSetupConfiguration) Setup the scene with necessary objects and/or logic. Declaration public override void Setup(ISceneSetupConfiguration configuration) Parameters Type Name Description ISceneSetupConfiguration configuration Overrides SceneSetup.Setup(ISceneSetupConfiguration)"
  },
  "api/VRBuilder.Editor.BasicInteraction.RigSetup.html": {
    "href": "api/VRBuilder.Editor.BasicInteraction.RigSetup.html",
    "title": "Namespace VRBuilder.Editor.BasicInteraction.RigSetup | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.BasicInteraction.RigSetup Classes DefaultRigSceneSetup Setups the default rig for the active interaction component. RigLoaderSceneSetup Setups the rig loader, cleans up the scene and creates a dummy user."
  },
  "api/VRBuilder.Editor.BasicInteraction.RigSetup.RigLoaderSceneSetup.html": {
    "href": "api/VRBuilder.Editor.BasicInteraction.RigSetup.RigLoaderSceneSetup.html",
    "title": "Class RigLoaderSceneSetup | VR Builder Documentation",
    "keywords": "Class RigLoaderSceneSetup Setups the rig loader, cleans up the scene and creates a dummy user. Inheritance System.Object SceneSetup RigLoaderSceneSetup Inherited Members SceneSetup.SetupPrefab(String) SceneSetup.FindPrefab(String) SceneSetup.IsPrefabMissingInScene(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.BasicInteraction.RigSetup Assembly : VRBuilder.Editor.BasicInteraction.dll Syntax public class RigLoaderSceneSetup : SceneSetup Properties | Improve this Doc View Source Key Identifier key for specific scene setup types, e.g. for every interaction framework. Declaration public override string Key { get; } Property Value Type Description System.String Overrides SceneSetup.Key | Improve this Doc View Source Priority Priority lets you tweak in which order different SceneSetup s will be performed. The priority is considered from lowest to highest. Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides SceneSetup.Priority Methods | Improve this Doc View Source Setup(ISceneSetupConfiguration) Setup the scene with necessary objects and/or logic. Declaration public override void Setup(ISceneSetupConfiguration configuration) Parameters Type Name Description ISceneSetupConfiguration configuration Overrides SceneSetup.Setup(ISceneSetupConfiguration)"
  },
  "api/VRBuilder.Editor.BasicInteraction.UI.Behaviors.html": {
    "href": "api/VRBuilder.Editor.BasicInteraction.UI.Behaviors.html",
    "title": "Namespace VRBuilder.Editor.BasicInteraction.UI.Behaviors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.BasicInteraction.UI.Behaviors Classes UnsnapMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() ."
  },
  "api/VRBuilder.Editor.BasicInteraction.UI.Behaviors.UnsnapMenuItem.html": {
    "href": "api/VRBuilder.Editor.BasicInteraction.UI.Behaviors.UnsnapMenuItem.html",
    "title": "Class UnsnapMenuItem | VR Builder Documentation",
    "keywords": "Class UnsnapMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > UnsnapMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.BasicInteraction.UI.Behaviors Assembly : VRBuilder.Editor.BasicInteraction.dll Syntax public class UnsnapMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.BasicInteraction.UI.Conditions.GrabbedMenuItem.html": {
    "href": "api/VRBuilder.Editor.BasicInteraction.UI.Conditions.GrabbedMenuItem.html",
    "title": "Class GrabbedMenuItem | VR Builder Documentation",
    "keywords": "Class GrabbedMenuItem Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > GrabbedMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.BasicInteraction.UI.Conditions Assembly : VRBuilder.Editor.BasicInteraction.dll Syntax public class GrabbedMenuItem : MenuItem<ICondition> Properties | Improve this Doc View Source DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.BasicInteraction.UI.Conditions.html": {
    "href": "api/VRBuilder.Editor.BasicInteraction.UI.Conditions.html",
    "title": "Namespace VRBuilder.Editor.BasicInteraction.UI.Conditions | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.BasicInteraction.UI.Conditions Classes GrabbedMenuItem ReleasedMenuItem SnappedMenuItem TeleportMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . TouchedMenuItem UsedMenuItem"
  },
  "api/VRBuilder.Editor.BasicInteraction.UI.Conditions.ReleasedMenuItem.html": {
    "href": "api/VRBuilder.Editor.BasicInteraction.UI.Conditions.ReleasedMenuItem.html",
    "title": "Class ReleasedMenuItem | VR Builder Documentation",
    "keywords": "Class ReleasedMenuItem Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > ReleasedMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.BasicInteraction.UI.Conditions Assembly : VRBuilder.Editor.BasicInteraction.dll Syntax public class ReleasedMenuItem : MenuItem<ICondition> Properties | Improve this Doc View Source DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.BasicInteraction.UI.Conditions.SnappedMenuItem.html": {
    "href": "api/VRBuilder.Editor.BasicInteraction.UI.Conditions.SnappedMenuItem.html",
    "title": "Class SnappedMenuItem | VR Builder Documentation",
    "keywords": "Class SnappedMenuItem Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > SnappedMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.BasicInteraction.UI.Conditions Assembly : VRBuilder.Editor.BasicInteraction.dll Syntax public class SnappedMenuItem : MenuItem<ICondition> Properties | Improve this Doc View Source DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.BasicInteraction.UI.Conditions.TeleportMenuItem.html": {
    "href": "api/VRBuilder.Editor.BasicInteraction.UI.Conditions.TeleportMenuItem.html",
    "title": "Class TeleportMenuItem | VR Builder Documentation",
    "keywords": "Class TeleportMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > TeleportMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.BasicInteraction.UI.Conditions Assembly : VRBuilder.Editor.BasicInteraction.dll Syntax public class TeleportMenuItem : MenuItem<ICondition> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.BasicInteraction.UI.Conditions.TouchedMenuItem.html": {
    "href": "api/VRBuilder.Editor.BasicInteraction.UI.Conditions.TouchedMenuItem.html",
    "title": "Class TouchedMenuItem | VR Builder Documentation",
    "keywords": "Class TouchedMenuItem Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > TouchedMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.BasicInteraction.UI.Conditions Assembly : VRBuilder.Editor.BasicInteraction.dll Syntax public class TouchedMenuItem : MenuItem<ICondition> Properties | Improve this Doc View Source DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.BasicInteraction.UI.Conditions.UsedMenuItem.html": {
    "href": "api/VRBuilder.Editor.BasicInteraction.UI.Conditions.UsedMenuItem.html",
    "title": "Class UsedMenuItem | VR Builder Documentation",
    "keywords": "Class UsedMenuItem Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > UsedMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.BasicInteraction.UI.Conditions Assembly : VRBuilder.Editor.BasicInteraction.dll Syntax public class UsedMenuItem : MenuItem<ICondition> Properties | Improve this Doc View Source DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.html": {
    "href": "api/VRBuilder.Editor.Configuration.AllowedMenuItemsSettings.html",
    "title": "Class AllowedMenuItemsSettings | VR Builder Documentation",
    "keywords": "Class AllowedMenuItemsSettings Configuration class for menu items. It manages whether a behavior or condition should be displayed in the Step Inspector or not. Can be serialized. Inheritance System.Object AllowedMenuItemsSettings Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Configuration Assembly : VRBuilder.Editor.dll Syntax [DataContract(IsReference = true)] public class AllowedMenuItemsSettings Constructors | Improve this Doc View Source AllowedMenuItemsSettings() Declaration [JsonConstructor] public AllowedMenuItemsSettings() | Improve this Doc View Source AllowedMenuItemsSettings(IDictionary<String, Boolean>, IDictionary<String, Boolean>) Declaration public AllowedMenuItemsSettings(IDictionary<string, bool> behaviors, IDictionary<string, bool> serializedConditions) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Boolean > behaviors System.Collections.Generic.IDictionary < System.String , System.Boolean > serializedConditions Fields | Improve this Doc View Source SerializedBehaviorSelections Declaration [DataMember] public IDictionary<string, bool> SerializedBehaviorSelections Field Value Type Description System.Collections.Generic.IDictionary < System.String , System.Boolean > | Improve this Doc View Source SerializedConditionSelections Declaration [DataMember] public IDictionary<string, bool> SerializedConditionSelections Field Value Type Description System.Collections.Generic.IDictionary < System.String , System.Boolean > Methods | Improve this Doc View Source GetBehaviorMenuOptions() Returns all active behavior menu items. Declaration public IEnumerable<MenuItem<IBehavior>> GetBehaviorMenuOptions() Returns Type Description System.Collections.Generic.IEnumerable < MenuItem < IBehavior >> | Improve this Doc View Source GetConditionMenuOptions() Returns all active condition menu items. Declaration public IEnumerable<MenuItem<ICondition>> GetConditionMenuOptions() Returns Type Description System.Collections.Generic.IEnumerable < MenuItem < ICondition >> | Improve this Doc View Source Load() Loads and returns the AllowedMenuItemsSettings object from the default configuration file location. If the in the editor configuration is empty or null, it returns an empty AllowedMenuItemsSettings object. Declaration public static AllowedMenuItemsSettings Load() Returns Type Description AllowedMenuItemsSettings | Improve this Doc View Source RefreshMenuOptions() Declaration public async void RefreshMenuOptions() | Improve this Doc View Source Save(AllowedMenuItemsSettings) Serializes the settings object and saves it into a configuration file at a default path. Declaration public static bool Save(AllowedMenuItemsSettings settings) Parameters Type Name Description AllowedMenuItemsSettings settings Returns Type Description System.Boolean Exceptions Type Condition System.NullReferenceException Thrown when parameter is null."
  },
  "api/VRBuilder.Editor.Configuration.DefaultEditorConfiguration.html": {
    "href": "api/VRBuilder.Editor.Configuration.DefaultEditorConfiguration.html",
    "title": "Class DefaultEditorConfiguration | VR Builder Documentation",
    "keywords": "Class DefaultEditorConfiguration Default editor configuration definition which is used if no other was implemented. Inheritance System.Object DefaultEditorConfiguration Implements IEditorConfiguration Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Configuration Assembly : VRBuilder.Editor.dll Syntax public class DefaultEditorConfiguration : IEditorConfiguration Constructors | Improve this Doc View Source DefaultEditorConfiguration() Declaration protected DefaultEditorConfiguration() Properties | Improve this Doc View Source AllowedMenuItemsSettings The current instance of the AllowedMenuItemsSettings object. It manages the display status of all available behaviors and conditions. Declaration public virtual AllowedMenuItemsSettings AllowedMenuItemsSettings { get; set; } Property Value Type Description AllowedMenuItemsSettings | Improve this Doc View Source AllowedMenuItemsSettingsAssetPath Assets path where to save the serialized AllowedMenuItemsSettings file. It has to start with \"Assets/\". Declaration public virtual string AllowedMenuItemsSettingsAssetPath { get; } Property Value Type Description System.String | Improve this Doc View Source BehaviorsMenuContent List of available options in \"Add new behavior\" dropdown. Declaration public virtual ReadOnlyCollection<MenuOption<IBehavior>> BehaviorsMenuContent { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < MenuOption < IBehavior >> | Improve this Doc View Source ConditionsMenuContent List of available options in \"Add new condition\" dropdown. Declaration public virtual ReadOnlyCollection<MenuOption<ICondition>> ConditionsMenuContent { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < MenuOption < ICondition >> | Improve this Doc View Source ProcessAssetStrategy Defines how the asset is going to be saved on disk. Declaration public IProcessAssetStrategy ProcessAssetStrategy { get; } Property Value Type Description IProcessAssetStrategy | Improve this Doc View Source ProcessStreamingAssetsSubdirectory Absolute path where processes are stored. Declaration public virtual string ProcessStreamingAssetsSubdirectory { get; } Property Value Type Description System.String | Improve this Doc View Source Serializer Serializer used to serialize processes and steps. Declaration public virtual IProcessSerializer Serializer { get; } Property Value Type Description IProcessSerializer Implements IEditorConfiguration"
  },
  "api/VRBuilder.Editor.Configuration.EditorConfigurator.html": {
    "href": "api/VRBuilder.Editor.Configuration.EditorConfigurator.html",
    "title": "Class EditorConfigurator | VR Builder Documentation",
    "keywords": "Class EditorConfigurator Configurator to set the process editor configuration which is used by the process creation editor tools (like Step Inspector). Inheritance System.Object EditorConfigurator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Configuration Assembly : VRBuilder.Editor.dll Syntax public static class EditorConfigurator Properties | Improve this Doc View Source Instance Declaration public static DefaultEditorConfiguration Instance { get; } Property Value Type Description DefaultEditorConfiguration Methods | Improve this Doc View Source Init() Declaration public static void Init()"
  },
  "api/VRBuilder.Editor.Configuration.html": {
    "href": "api/VRBuilder.Editor.Configuration.html",
    "title": "Namespace VRBuilder.Editor.Configuration | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.Configuration Classes AllowedMenuItemsSettings Configuration class for menu items. It manages whether a behavior or condition should be displayed in the Step Inspector or not. Can be serialized. DefaultEditorConfiguration Default editor configuration definition which is used if no other was implemented. EditorConfigurator Configurator to set the process editor configuration which is used by the process creation editor tools (like Step Inspector). LoggingConfigCreationTrigger Checks on editor initialization if there is a logging config. Will add one if it's missing. RuntimeConfiguratorEditor Custom editor for choosing the process configuration in the Unity game object inspector. Interfaces IEditorConfiguration Interface for editor configuration definition. Implement it to create your own. IEditorConfigurationExtension Interface for editor configuration extension definition."
  },
  "api/VRBuilder.Editor.Configuration.IEditorConfiguration.html": {
    "href": "api/VRBuilder.Editor.Configuration.IEditorConfiguration.html",
    "title": "Interface IEditorConfiguration | VR Builder Documentation",
    "keywords": "Interface IEditorConfiguration Interface for editor configuration definition. Implement it to create your own. Namespace : VRBuilder.Editor.Configuration Assembly : VRBuilder.Editor.dll Syntax public interface IEditorConfiguration Properties | Improve this Doc View Source AllowedMenuItemsSettings The current instance of the AllowedMenuItemsSettings object. It manages the display status of all available behaviors and conditions. Declaration AllowedMenuItemsSettings AllowedMenuItemsSettings { get; set; } Property Value Type Description AllowedMenuItemsSettings | Improve this Doc View Source AllowedMenuItemsSettingsAssetPath Assets path where to save the serialized AllowedMenuItemsSettings file. It has to start with \"Assets/\". Declaration string AllowedMenuItemsSettingsAssetPath { get; } Property Value Type Description System.String | Improve this Doc View Source BehaviorsMenuContent List of available options in \"Add new behavior\" dropdown. Declaration ReadOnlyCollection<MenuOption<IBehavior>> BehaviorsMenuContent { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < MenuOption < IBehavior >> | Improve this Doc View Source ConditionsMenuContent List of available options in \"Add new condition\" dropdown. Declaration ReadOnlyCollection<MenuOption<ICondition>> ConditionsMenuContent { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < MenuOption < ICondition >> | Improve this Doc View Source ProcessAssetStrategy Defines how the asset is going to be saved on disk. Declaration IProcessAssetStrategy ProcessAssetStrategy { get; } Property Value Type Description IProcessAssetStrategy | Improve this Doc View Source ProcessStreamingAssetsSubdirectory Absolute path where processes are stored. Declaration string ProcessStreamingAssetsSubdirectory { get; } Property Value Type Description System.String | Improve this Doc View Source Serializer Serializer used to serialize processes and steps. Declaration IProcessSerializer Serializer { get; } Property Value Type Description IProcessSerializer"
  },
  "api/VRBuilder.Editor.Configuration.IEditorConfigurationExtension.html": {
    "href": "api/VRBuilder.Editor.Configuration.IEditorConfigurationExtension.html",
    "title": "Interface IEditorConfigurationExtension | VR Builder Documentation",
    "keywords": "Interface IEditorConfigurationExtension Interface for editor configuration extension definition. Namespace : VRBuilder.Editor.Configuration Assembly : VRBuilder.Editor.dll Syntax public interface IEditorConfigurationExtension Properties | Improve this Doc View Source DisabledMenuItems Menu items disabled by this configuration. Declaration IEnumerable<Type> DisabledMenuItems { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Type > | Improve this Doc View Source RequiredMenuItems Menu items required by this configuration. Declaration IEnumerable<Type> RequiredMenuItems { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Type >"
  },
  "api/VRBuilder.Editor.Configuration.LoggingConfigCreationTrigger.html": {
    "href": "api/VRBuilder.Editor.Configuration.LoggingConfigCreationTrigger.html",
    "title": "Class LoggingConfigCreationTrigger | VR Builder Documentation",
    "keywords": "Class LoggingConfigCreationTrigger Checks on editor initialization if there is a logging config. Will add one if it's missing. Inheritance System.Object LoggingConfigCreationTrigger Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Configuration Assembly : VRBuilder.Editor.dll Syntax public class LoggingConfigCreationTrigger"
  },
  "api/VRBuilder.Editor.Configuration.RuntimeConfiguratorEditor.html": {
    "href": "api/VRBuilder.Editor.Configuration.RuntimeConfiguratorEditor.html",
    "title": "Class RuntimeConfiguratorEditor | VR Builder Documentation",
    "keywords": "Class RuntimeConfiguratorEditor Custom editor for choosing the process configuration in the Unity game object inspector. Inheritance System.Object RuntimeConfiguratorEditor Namespace : VRBuilder.Editor.Configuration Assembly : VRBuilder.Editor.dll Syntax public class RuntimeConfiguratorEditor : Editor Methods | Improve this Doc View Source IsProcessListEmpty() True when the process list is empty or missing. Declaration public static bool IsProcessListEmpty() Returns Type Description System.Boolean | Improve this Doc View Source OnEnable() Declaration protected void OnEnable() | Improve this Doc View Source OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/VRBuilder.Editor.Core.UI.BezierSplineInspector.html": {
    "href": "api/VRBuilder.Editor.Core.UI.BezierSplineInspector.html",
    "title": "Class BezierSplineInspector | VR Builder Documentation",
    "keywords": "Class BezierSplineInspector Editor for BezierSpline . Inheritance System.Object BezierSplineInspector Namespace : VRBuilder.Editor.Core.UI Assembly : VRBuilder.Editor.dll Syntax public class BezierSplineInspector : Editor Methods | Improve this Doc View Source OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/VRBuilder.Editor.Core.UI.Drawers.CompareValuesDrawer-1.html": {
    "href": "api/VRBuilder.Editor.Core.UI.Drawers.CompareValuesDrawer-1.html",
    "title": "Class CompareValuesDrawer<T> | VR Builder Documentation",
    "keywords": "Class CompareValuesDrawer<T> Custom drawer for CompareValuesCondition<T> . Inheritance System.Object AbstractDrawer ObjectDrawer NameableDrawer CompareValuesDrawer<T> Implements IProcessDrawer Inherited Members NameableDrawer.DrawLabel(Rect, Object, Action<Object>, GUIContent) ObjectDrawer.CheckValidationForValue(Object, MemberInfo, GUIContent) ObjectDrawer.AddValidationInformation(GUIContent, List<EditorReportEntry>) ObjectDrawer.GetValidationReports(Object) ObjectDrawer.GetValidationReportsFor(IData, MemberInfo) ObjectDrawer.GetLabel(MemberInfo, Object) ObjectDrawer.GetLabel(Object, Type) ObjectDrawer.GetMembersToDraw(Object) ObjectDrawer.GetTypeNameLabel(Object, Type) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Core.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax public abstract class CompareValuesDrawer<T> : NameableDrawer, IProcessDrawer where T : IEquatable<T>, IComparable<T> Type Parameters Name Description T Methods | Improve this Doc View Source Draw(Rect, Object, Action<Object>, GUIContent) Draw editor view in given Rect. Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect A rectangle in which editor view should fit. The height value is ignored. System.Object currentValue Current value of a member. System.Action < System.Object > changeValueCallback Delegate for a method that changes value of a member. Done that way to allow non-instantaneous assignments (for example, from generic menus). Invoke only when child member's value has changed; Otherwise, if the value itself has changed, call ChangeValue(Func<Object>, Func<Object>, Action<Object>) so it could manage Do/Undo stack in a proper way. GUIContent label Label content to display. Returns Type Description Rect The area that was taken by the property. Overrides ObjectDrawer.Draw(Rect, Object, Action<Object>, GUIContent) | Improve this Doc View Source DrawOperatorDropdown(Action<Object>, Rect, CompareValuesCondition<T>.EntityData) Draws the dropdown for selecting the operator depending on the operands' type Declaration protected abstract Rect DrawOperatorDropdown(Action<object> changeValueCallback, Rect nextPosition, CompareValuesCondition<T>.EntityData data) Parameters Type Name Description System.Action < System.Object > changeValueCallback Rect nextPosition CompareValuesCondition.EntityData <> data Returns Type Description Rect Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.Core.UI.Drawers.CompareValueToConstDrawer-1.html": {
    "href": "api/VRBuilder.Editor.Core.UI.Drawers.CompareValueToConstDrawer-1.html",
    "title": "Class CompareValueToConstDrawer<T> | VR Builder Documentation",
    "keywords": "Class CompareValueToConstDrawer<T> Custom drawer for CompareValuesCondition<T> . This drawer omits the reference/const selectors in order to improve performance and optimize layout. Inheritance System.Object AbstractDrawer ObjectDrawer NameableDrawer CompareValueToConstDrawer<T> Implements IProcessDrawer Inherited Members NameableDrawer.DrawLabel(Rect, Object, Action<Object>, GUIContent) ObjectDrawer.CheckValidationForValue(Object, MemberInfo, GUIContent) ObjectDrawer.AddValidationInformation(GUIContent, List<EditorReportEntry>) ObjectDrawer.GetValidationReports(Object) ObjectDrawer.GetValidationReportsFor(IData, MemberInfo) ObjectDrawer.GetLabel(MemberInfo, Object) ObjectDrawer.GetLabel(Object, Type) ObjectDrawer.GetMembersToDraw(Object) ObjectDrawer.GetTypeNameLabel(Object, Type) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Core.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax public abstract class CompareValueToConstDrawer<T> : NameableDrawer, IProcessDrawer where T : IEquatable<T>, IComparable<T> Type Parameters Name Description T Remarks If you only ever need to compare data properties to constant values, you can replace the default drawer with this one for increased editor performance. To do so, modify the implementations of CompareValuesDrawer<T> so that they inherit from this class instead. Methods | Improve this Doc View Source Draw(Rect, Object, Action<Object>, GUIContent) Draw editor view in given Rect. Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect A rectangle in which editor view should fit. The height value is ignored. System.Object currentValue Current value of a member. System.Action < System.Object > changeValueCallback Delegate for a method that changes value of a member. Done that way to allow non-instantaneous assignments (for example, from generic menus). Invoke only when child member's value has changed; Otherwise, if the value itself has changed, call ChangeValue(Func<Object>, Func<Object>, Action<Object>) so it could manage Do/Undo stack in a proper way. GUIContent label Label content to display. Returns Type Description Rect The area that was taken by the property. Overrides ObjectDrawer.Draw(Rect, Object, Action<Object>, GUIContent) | Improve this Doc View Source DrawOperatorDropdown(Action<Object>, Rect, CompareValuesCondition<T>.EntityData) Draws the dropdown for selecting the operator depending on the operands' type. Declaration protected abstract Rect DrawOperatorDropdown(Action<object> changeValueCallback, Rect nextPosition, CompareValuesCondition<T>.EntityData data) Parameters Type Name Description System.Action < System.Object > changeValueCallback Rect nextPosition CompareValuesCondition.EntityData <> data Returns Type Description Rect Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.Core.UI.Drawers.html": {
    "href": "api/VRBuilder.Editor.Core.UI.Drawers.html",
    "title": "Namespace VRBuilder.Editor.Core.UI.Drawers | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.Core.UI.Drawers Classes CompareValuesDrawer<T> Custom drawer for CompareValuesCondition<T> . CompareValueToConstDrawer<T> Custom drawer for CompareValuesCondition<T> . This drawer omits the reference/const selectors in order to improve performance and optimize layout. LocalizationTableDrawer Draws a drop-down for localization tables. PlayAudioBehaviorDrawer Default drawer for PlayAudioBehavior . It sets displayed name to \"Play Audio File\". SetComponentEnabledBehaviorDrawer SetComponentEnabledByTagBehaviorDrawer"
  },
  "api/VRBuilder.Editor.Core.UI.Drawers.LocalizationTableDrawer.html": {
    "href": "api/VRBuilder.Editor.Core.UI.Drawers.LocalizationTableDrawer.html",
    "title": "Class LocalizationTableDrawer | VR Builder Documentation",
    "keywords": "Class LocalizationTableDrawer Draws a drop-down for localization tables. Inheritance System.Object AbstractDrawer ObjectDrawer LocalizationTableDrawer Implements IProcessDrawer Inherited Members ObjectDrawer.CheckValidationForValue(Object, MemberInfo, GUIContent) ObjectDrawer.AddValidationInformation(GUIContent, List<EditorReportEntry>) ObjectDrawer.GetValidationReports(Object) ObjectDrawer.GetValidationReportsFor(IData, MemberInfo) ObjectDrawer.DrawLabel(Rect, Object, Action<Object>, GUIContent) ObjectDrawer.GetLabel(MemberInfo, Object) ObjectDrawer.GetLabel(Object, Type) ObjectDrawer.GetMembersToDraw(Object) ObjectDrawer.GetTypeNameLabel(Object, Type) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Core.UI.Drawers Assembly : VRBuilder.Editor.TextToSpeech.dll Syntax public class LocalizationTableDrawer : ObjectDrawer, IProcessDrawer Methods | Improve this Doc View Source Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback GUIContent label Returns Type Description Rect Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.Core.UI.Drawers.PlayAudioBehaviorDrawer.html": {
    "href": "api/VRBuilder.Editor.Core.UI.Drawers.PlayAudioBehaviorDrawer.html",
    "title": "Class PlayAudioBehaviorDrawer | VR Builder Documentation",
    "keywords": "Class PlayAudioBehaviorDrawer Default drawer for PlayAudioBehavior . It sets displayed name to \"Play Audio File\". Inheritance System.Object AbstractDrawer ObjectDrawer NameableDrawer PlayAudioBehaviorDrawer Implements IProcessDrawer Inherited Members NameableDrawer.DrawLabel(Rect, Object, Action<Object>, GUIContent) ObjectDrawer.CheckValidationForValue(Object, MemberInfo, GUIContent) ObjectDrawer.AddValidationInformation(GUIContent, List<EditorReportEntry>) ObjectDrawer.GetValidationReports(Object) ObjectDrawer.GetValidationReportsFor(IData, MemberInfo) ObjectDrawer.GetLabel(MemberInfo, Object) ObjectDrawer.GetLabel(Object, Type) ObjectDrawer.GetMembersToDraw(Object) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Core.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax [DefaultProcessDrawer(typeof(PlayAudioBehavior.EntityData))] public class PlayAudioBehaviorDrawer : NameableDrawer, IProcessDrawer Methods | Improve this Doc View Source Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback GUIContent label Returns Type Description Rect Overrides ObjectDrawer.Draw(Rect, Object, Action<Object>, GUIContent) | Improve this Doc View Source GetTypeNameLabel(Object, Type) Declaration protected override GUIContent GetTypeNameLabel(object value, Type declaredType) Parameters Type Name Description System.Object value System.Type declaredType Returns Type Description GUIContent Overrides ObjectDrawer.GetTypeNameLabel(Object, Type) Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.Core.UI.Drawers.SetComponentEnabledBehaviorDrawer.html": {
    "href": "api/VRBuilder.Editor.Core.UI.Drawers.SetComponentEnabledBehaviorDrawer.html",
    "title": "Class SetComponentEnabledBehaviorDrawer | VR Builder Documentation",
    "keywords": "Class SetComponentEnabledBehaviorDrawer Inheritance System.Object AbstractDrawer ObjectDrawer NameableDrawer SetComponentEnabledBehaviorDrawer Implements IProcessDrawer Inherited Members NameableDrawer.DrawLabel(Rect, Object, Action<Object>, GUIContent) ObjectDrawer.CheckValidationForValue(Object, MemberInfo, GUIContent) ObjectDrawer.AddValidationInformation(GUIContent, List<EditorReportEntry>) ObjectDrawer.GetValidationReports(Object) ObjectDrawer.GetValidationReportsFor(IData, MemberInfo) ObjectDrawer.GetLabel(MemberInfo, Object) ObjectDrawer.GetLabel(Object, Type) ObjectDrawer.GetMembersToDraw(Object) ObjectDrawer.GetTypeNameLabel(Object, Type) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Core.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax [DefaultProcessDrawer(typeof(SetComponentEnabledBehavior.EntityData))] public class SetComponentEnabledBehaviorDrawer : NameableDrawer, IProcessDrawer Methods | Improve this Doc View Source Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback GUIContent label Returns Type Description Rect Overrides ObjectDrawer.Draw(Rect, Object, Action<Object>, GUIContent) Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.Core.UI.Drawers.SetComponentEnabledByTagBehaviorDrawer.html": {
    "href": "api/VRBuilder.Editor.Core.UI.Drawers.SetComponentEnabledByTagBehaviorDrawer.html",
    "title": "Class SetComponentEnabledByTagBehaviorDrawer | VR Builder Documentation",
    "keywords": "Class SetComponentEnabledByTagBehaviorDrawer Inheritance System.Object AbstractDrawer ObjectDrawer NameableDrawer SetComponentEnabledByTagBehaviorDrawer Implements IProcessDrawer Inherited Members NameableDrawer.DrawLabel(Rect, Object, Action<Object>, GUIContent) ObjectDrawer.CheckValidationForValue(Object, MemberInfo, GUIContent) ObjectDrawer.AddValidationInformation(GUIContent, List<EditorReportEntry>) ObjectDrawer.GetValidationReports(Object) ObjectDrawer.GetValidationReportsFor(IData, MemberInfo) ObjectDrawer.GetLabel(MemberInfo, Object) ObjectDrawer.GetLabel(Object, Type) ObjectDrawer.GetMembersToDraw(Object) ObjectDrawer.GetTypeNameLabel(Object, Type) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Core.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax [Obsolete(\"This drawer is obsolete and will be removed in the next major version.\")] [DefaultProcessDrawer(typeof(SetComponentEnabledByTagBehavior.EntityData))] public class SetComponentEnabledByTagBehaviorDrawer : NameableDrawer, IProcessDrawer Methods | Improve this Doc View Source Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback GUIContent label Returns Type Description Rect Overrides ObjectDrawer.Draw(Rect, Object, Action<Object>, GUIContent) Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.Core.UI.html": {
    "href": "api/VRBuilder.Editor.Core.UI.html",
    "title": "Namespace VRBuilder.Editor.Core.UI | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.Core.UI Classes BezierSplineInspector Editor for BezierSpline ."
  },
  "api/VRBuilder.Editor.Debugging.html": {
    "href": "api/VRBuilder.Editor.Debugging.html",
    "title": "Namespace VRBuilder.Editor.Debugging | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.Debugging Classes SceneObjectRegistryV2EditorWindow"
  },
  "api/VRBuilder.Editor.Debugging.SceneObjectRegistryV2EditorWindow.html": {
    "href": "api/VRBuilder.Editor.Debugging.SceneObjectRegistryV2EditorWindow.html",
    "title": "Class SceneObjectRegistryV2EditorWindow | VR Builder Documentation",
    "keywords": "Class SceneObjectRegistryV2EditorWindow Inheritance System.Object SceneObjectRegistryV2EditorWindow Namespace : VRBuilder.Editor.Debugging Assembly : VRBuilder.Editor.dll Syntax public class SceneObjectRegistryV2EditorWindow : EditorWindow"
  },
  "api/VRBuilder.Editor.EditorReflectionUtils.html": {
    "href": "api/VRBuilder.Editor.EditorReflectionUtils.html",
    "title": "Class EditorReflectionUtils | VR Builder Documentation",
    "keywords": "Class EditorReflectionUtils Helper class for reflection. Inheritance System.Object EditorReflectionUtils Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor Assembly : VRBuilder.Editor.dll Syntax public static class EditorReflectionUtils Methods | Improve this Doc View Source AssemblyExists(String) Checks if assembly exists in current domain space. Declaration public static bool AssemblyExists(string name) Parameters Type Name Description System.String name Returns Type Description System.Boolean | Improve this Doc View Source ClassExists(String, String) Checks if class exists in given assembly. Declaration public static bool ClassExists(string assemblyName, string className) Parameters Type Name Description System.String assemblyName System.String className Returns Type Description System.Boolean | Improve this Doc View Source GetAllDataMembers(Object) Returns all data members of a given object. Declaration public static IEnumerable<MemberInfo> GetAllDataMembers(object value) Parameters Type Name Description System.Object value Returns Type Description System.Collections.Generic.IEnumerable < System.Reflection.MemberInfo > | Improve this Doc View Source GetAllFieldsAndProperties(Object) Returns all fields and properties of given object as System.Reflection.MemberInfo . Declaration public static IEnumerable<MemberInfo> GetAllFieldsAndProperties(object value) Parameters Type Name Description System.Object value Returns Type Description System.Collections.Generic.IEnumerable < System.Reflection.MemberInfo > | Improve this Doc View Source GetAttributes(MemberInfo, Boolean) Declaration public static IEnumerable<Attribute> GetAttributes(this MemberInfo memberInfo, bool isInherited) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Boolean isInherited Returns Type Description System.Collections.Generic.IEnumerable < System.Attribute > | Improve this Doc View Source GetAttributes(Type, Boolean) Declaration public static IEnumerable<Attribute> GetAttributes(this Type type, bool isInherited) Parameters Type Name Description System.Type type System.Boolean isInherited Returns Type Description System.Collections.Generic.IEnumerable < System.Attribute > | Improve this Doc View Source GetAttributes<T>(MemberInfo, Boolean) Declaration public static IEnumerable<T> GetAttributes<T>(this MemberInfo memberInfo, bool isInherited) where T : Attribute Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Boolean isInherited Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source GetAttributes<T>(Type, Boolean) Declaration public static IEnumerable<T> GetAttributes<T>(Type type, bool isInherited) where T : Attribute Parameters Type Name Description System.Type type System.Boolean isInherited Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source GetDisplayName(MemberInfo) Declaration public static string GetDisplayName(this MemberInfo memberInfo) Parameters Type Name Description System.Reflection.MemberInfo memberInfo Returns Type Description System.String | Improve this Doc View Source GetFieldsAndPropertiesToDraw(Object) Returns all properties and fields of the object that have to be drawn by process drawers. Declaration public static IEnumerable<MemberInfo> GetFieldsAndPropertiesToDraw(object value) Parameters Type Name Description System.Object value Returns Type Description System.Collections.Generic.IEnumerable < System.Reflection.MemberInfo > | Improve this Doc View Source GetNestedPropertiesFromData<TProperty>(IData) Returns all properties of a given type in the IData and its children. Declaration public static IEnumerable<TProperty> GetNestedPropertiesFromData<TProperty>(IData data) Parameters Type Name Description IData data Returns Type Description System.Collections.Generic.IEnumerable <TProperty> Type Parameters Name Description TProperty"
  },
  "api/VRBuilder.Editor.EditorUtils.html": {
    "href": "api/VRBuilder.Editor.EditorUtils.html",
    "title": "Class EditorUtils | VR Builder Documentation",
    "keywords": "Class EditorUtils Utility helper to ease up working with Unity Editor. Inheritance System.Object EditorUtils Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor Assembly : VRBuilder.Editor.dll Syntax public static class EditorUtils Properties | Improve this Doc View Source IsUpmPackage True if VR Builder is a Package Manager package. Declaration public static bool IsUpmPackage { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source GetCoreFolder() Gets the root folder of VR Builder. Declaration public static string GetCoreFolder() Returns Type Description System.String"
  },
  "api/VRBuilder.Editor.html": {
    "href": "api/VRBuilder.Editor.html",
    "title": "Namespace VRBuilder.Editor | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor Classes EditorReflectionUtils Helper class for reflection. EditorUtils Utility helper to ease up working with Unity Editor. MetadataWrapper Data structure used to draw properties in the 'Step Inspector'. PreBuildCloseProcessEditor We are closing the process editor window before the build starts. Having an open process editor window can lead to corrupt Unique Names. PreBuildLinkXMLCreator Generates a LinkXML file before the build process to preserve all Behaviors and Conditions from VR Builder add-ons. SceneSetup This base class is supposed to be implemented by classes which will be called to setup the scene. Can be used to e.g. setup process classes or interaction frameworks. TestableEditorElements TestableEditorElements.DisabledMenuItem TestableEditorElements.MenuItem TestableEditorElements.MenuOption TestableEditorElements.MenuSeparator VRBuilderEditorHelper Enums TestableEditorElements.DisplayMode"
  },
  "api/VRBuilder.Editor.Input.html": {
    "href": "api/VRBuilder.Editor.Input.html",
    "title": "Namespace VRBuilder.Editor.Input | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.Input Classes InputEditorUtils Static utility class which provides methods to help managing assets and functionalities of the new input system."
  },
  "api/VRBuilder.Editor.Input.InputEditorUtils.html": {
    "href": "api/VRBuilder.Editor.Input.InputEditorUtils.html",
    "title": "Class InputEditorUtils | VR Builder Documentation",
    "keywords": "Class InputEditorUtils Static utility class which provides methods to help managing assets and functionalities of the new input system. Inheritance System.Object InputEditorUtils Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Input Assembly : VRBuilder.Editor.dll Syntax public static class InputEditorUtils Methods | Improve this Doc View Source CopyCustomKeyBindingAsset() Copies the custom key bindings into the project by using the default one. Declaration public static void CopyCustomKeyBindingAsset() | Improve this Doc View Source OpenKeyBindingEditor() Opens the key binding editor. Declaration public static void OpenKeyBindingEditor() | Improve this Doc View Source UsesCustomKeyBindingAsset() Checks if the custom key bindings are loaded. Declaration public static bool UsesCustomKeyBindingAsset() Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Editor.MetadataWrapper.html": {
    "href": "api/VRBuilder.Editor.MetadataWrapper.html",
    "title": "Class MetadataWrapper | VR Builder Documentation",
    "keywords": "Class MetadataWrapper Data structure used to draw properties in the 'Step Inspector'. Inheritance System.Object MetadataWrapper Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor Assembly : VRBuilder.Editor.dll Syntax public class MetadataWrapper Properties | Improve this Doc View Source Metadata Collection of data from a 'System.Reflection.MemberInfo'. Declaration public Dictionary<string, object> Metadata { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Object > | Improve this Doc View Source Value Value of an object reference. Declaration public object Value { get; set; } Property Value Type Description System.Object | Improve this Doc View Source ValueDeclaredType Type of an object reference. Declaration public Type ValueDeclaredType { get; set; } Property Value Type Description System.Type"
  },
  "api/VRBuilder.Editor.Netcode.html": {
    "href": "api/VRBuilder.Editor.Netcode.html",
    "title": "Namespace VRBuilder.Editor.Netcode | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.Netcode Classes NetcodeSceneSetupConfiguration Default scene setup configuration for projects using Netcode."
  },
  "api/VRBuilder.Editor.Netcode.NetcodeSceneSetupConfiguration.html": {
    "href": "api/VRBuilder.Editor.Netcode.NetcodeSceneSetupConfiguration.html",
    "title": "Class NetcodeSceneSetupConfiguration | VR Builder Documentation",
    "keywords": "Class NetcodeSceneSetupConfiguration Default scene setup configuration for projects using Netcode. Inheritance System.Object NetcodeSceneSetupConfiguration Implements ISceneSetupConfiguration Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Netcode Assembly : VRBuilder.Editor.Netcode.dll Syntax public class NetcodeSceneSetupConfiguration : ISceneSetupConfiguration Properties | Improve this Doc View Source AllowedExtensionAssemblies Returns the names of the assemblies which contain allowed extensions. Declaration public IEnumerable<string> AllowedExtensionAssemblies { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > | Improve this Doc View Source DefaultConfettiPrefab Default resources prefab to use for Confetti behavior. Declaration public string DefaultConfettiPrefab { get; } Property Value Type Description System.String | Improve this Doc View Source DefaultProcessController Default process controller to use in this configuration. Declaration public string DefaultProcessController { get; } Property Value Type Description System.String | Improve this Doc View Source Description Detailed description of the configuration. Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Name Display name of the configuration. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Priority Priority of this configuration. Declaration public int Priority { get; } Property Value Type Description System.Int32 | Improve this Doc View Source RuntimeConfigurationName Name of the runtime configuration to use. Declaration public string RuntimeConfigurationName { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetSetupNames() Gets the required scene setup actions for this configuration. Declaration public IEnumerable<string> GetSetupNames() Returns Type Description System.Collections.Generic.IEnumerable < System.String > Implements ISceneSetupConfiguration"
  },
  "api/VRBuilder.Editor.Netcode.PackageManager.html": {
    "href": "api/VRBuilder.Editor.Netcode.PackageManager.html",
    "title": "Namespace VRBuilder.Editor.Netcode.PackageManager | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.Netcode.PackageManager Classes NetcodePackageEnabler"
  },
  "api/VRBuilder.Editor.Netcode.PackageManager.NetcodePackageEnabler.html": {
    "href": "api/VRBuilder.Editor.Netcode.PackageManager.NetcodePackageEnabler.html",
    "title": "Class NetcodePackageEnabler | VR Builder Documentation",
    "keywords": "Class NetcodePackageEnabler Inheritance System.Object Dependency NetcodePackageEnabler Inherited Members Dependency.Samples Dependency.Layers Dependency.OnPackageEnabled Dependency.OnPackageDisabled Dependency.EmitOnEnabled() Dependency.EmitOnDisabled() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Netcode.PackageManager Assembly : VRBuilder.Editor.dll Syntax public class NetcodePackageEnabler : Dependency Properties | Improve this Doc View Source Package A string representing the package to be added. Declaration public override string Package { get; } Property Value Type Description System.String Overrides Dependency.Package | Improve this Doc View Source Priority Priority lets you tweak in which order each Dependency will be performed. The priority is considered from lowest to highest. Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides Dependency.Priority | Improve this Doc View Source Version A string representing the version of the package. Declaration public override string Version { get; set; } Property Value Type Description System.String Overrides Dependency.Version"
  },
  "api/VRBuilder.Editor.Netcode.VoiceChat.html": {
    "href": "api/VRBuilder.Editor.Netcode.VoiceChat.html",
    "title": "Namespace VRBuilder.Editor.Netcode.VoiceChat | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.Netcode.VoiceChat Classes VoiceChatSettingsProvider Settings provider for voice chat options."
  },
  "api/VRBuilder.Editor.Netcode.VoiceChat.VoiceChatSettingsProvider.html": {
    "href": "api/VRBuilder.Editor.Netcode.VoiceChat.VoiceChatSettingsProvider.html",
    "title": "Class VoiceChatSettingsProvider | VR Builder Documentation",
    "keywords": "Class VoiceChatSettingsProvider Settings provider for voice chat options. Inheritance System.Object BaseSettingsProvider VoiceChatSettingsProvider Inherited Members BaseSettingsProvider.sections BaseSettingsProvider.OnGUI(String) Namespace : VRBuilder.Editor.Netcode.VoiceChat Assembly : VRBuilder.Editor.Netcode.dll Syntax public class VoiceChatSettingsProvider : BaseSettingsProvider Constructors | Improve this Doc View Source VoiceChatSettingsProvider() Declaration public VoiceChatSettingsProvider() Methods | Improve this Doc View Source InternalDraw(String) Declaration protected override void InternalDraw(string searchContext) Parameters Type Name Description System.String searchContext Overrides BaseSettingsProvider.InternalDraw(String) | Improve this Doc View Source OnDeactivate() Declaration public override void OnDeactivate() | Improve this Doc View Source Provider() Declaration public static SettingsProvider Provider() Returns Type Description SettingsProvider"
  },
  "api/VRBuilder.Editor.PackageManager.Dependency.html": {
    "href": "api/VRBuilder.Editor.PackageManager.Dependency.html",
    "title": "Class Dependency | VR Builder Documentation",
    "keywords": "Class Dependency Base class for dependencies used by the DependencyManager . Inheritance System.Object Dependency NetcodePackageEnabler InputSystemPackageEnabler LocalizationPackageEnabler NewtonsoftJSONPackageEnabler PostProcessingPackageEnabler XRHandsPackageEnabler XRInteractionPackageEnabler AuthenticationPackageEnabler VivoxPackageEnabler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.PackageManager Assembly : VRBuilder.Editor.PackageManager.dll Syntax public abstract class Dependency Constructors | Improve this Doc View Source Dependency() Declaration protected Dependency() Properties | Improve this Doc View Source Layers A list of layers to be added. Declaration protected virtual string[] Layers { get; } Property Value Type Description System.String [] | Improve this Doc View Source Package A string representing the package to be added. Declaration public virtual string Package { get; } Property Value Type Description System.String | Improve this Doc View Source Priority Priority lets you tweak in which order each Dependency will be performed. The priority is considered from lowest to highest. Declaration public virtual int Priority { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Samples Collection of samples to be imported from the Unity Package. Declaration public virtual string[] Samples { get; } Property Value Type Description System.String [] | Improve this Doc View Source Version A string representing the version of the package. Declaration public virtual string Version { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source EmitOnDisabled() Declaration protected virtual void EmitOnDisabled() | Improve this Doc View Source EmitOnEnabled() Declaration protected virtual void EmitOnEnabled() Events | Improve this Doc View Source OnPackageDisabled Emitted when this Dependency is set as disabled. Declaration public event EventHandler<EventArgs> OnPackageDisabled Event Type Type Description System.EventHandler < System.EventArgs > | Improve this Doc View Source OnPackageEnabled Emitted when this Dependency is set as enabled. Declaration public event EventHandler<EventArgs> OnPackageEnabled Event Type Type Description System.EventHandler < System.EventArgs >"
  },
  "api/VRBuilder.Editor.PackageManager.DependencyManager.DependenciesEnabledEventArgs.html": {
    "href": "api/VRBuilder.Editor.PackageManager.DependencyManager.DependenciesEnabledEventArgs.html",
    "title": "Class DependencyManager.DependenciesEnabledEventArgs | VR Builder Documentation",
    "keywords": "Class DependencyManager.DependenciesEnabledEventArgs Inheritance System.Object System.EventArgs DependencyManager.DependenciesEnabledEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.PackageManager Assembly : VRBuilder.Editor.PackageManager.dll Syntax public class DependenciesEnabledEventArgs : EventArgs Constructors | Improve this Doc View Source DependenciesEnabledEventArgs(List<Dependency>) Declaration public DependenciesEnabledEventArgs(List<Dependency> dependenciesList) Parameters Type Name Description System.Collections.Generic.List < Dependency > dependenciesList Fields | Improve this Doc View Source DependenciesList Declaration public readonly List<Dependency> DependenciesList Field Value Type Description System.Collections.Generic.List < Dependency >"
  },
  "api/VRBuilder.Editor.PackageManager.DependencyManager.html": {
    "href": "api/VRBuilder.Editor.PackageManager.DependencyManager.html",
    "title": "Class DependencyManager | VR Builder Documentation",
    "keywords": "Class DependencyManager Automatically retrieves all dependencies from the Unity's Package Manager at the startup. Inheritance System.Object DependencyManager Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.PackageManager Assembly : VRBuilder.Editor.PackageManager.dll Syntax public class DependencyManager Events | Improve this Doc View Source OnPostProcess Emitted when all found Dependency were installed. Declaration public static event EventHandler<DependencyManager.DependenciesEnabledEventArgs> OnPostProcess Event Type Type Description System.EventHandler < DependencyManager.DependenciesEnabledEventArgs >"
  },
  "api/VRBuilder.Editor.PackageManager.html": {
    "href": "api/VRBuilder.Editor.PackageManager.html",
    "title": "Namespace VRBuilder.Editor.PackageManager | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.PackageManager Classes Dependency Base class for dependencies used by the DependencyManager . DependencyManager Automatically retrieves all dependencies from the Unity's Package Manager at the startup. DependencyManager.DependenciesEnabledEventArgs InputSystemPackageEnabler Adds Unity's Input System package as a dependency. LocalizationPackageEnabler Adds Unity's Localizaion System package as a dependency. NewtonsoftJSONPackageEnabler PackageOperationsManager Handles different Unity's Package Manager requests. PackageOperationsManager.InitializedEventArgs PackageOperationsManager.PackageDisabledEventArgs PackageOperationsManager.PackageEnabledEventArgs PostProcessingPackageEnabler Adds Unity's Post-Processing package as a dependency."
  },
  "api/VRBuilder.Editor.PackageManager.InputSystemPackageEnabler.html": {
    "href": "api/VRBuilder.Editor.PackageManager.InputSystemPackageEnabler.html",
    "title": "Class InputSystemPackageEnabler | VR Builder Documentation",
    "keywords": "Class InputSystemPackageEnabler Adds Unity's Input System package as a dependency. Inheritance System.Object Dependency InputSystemPackageEnabler Inherited Members Dependency.Version Dependency.Samples Dependency.Layers Dependency.OnPackageEnabled Dependency.OnPackageDisabled Dependency.EmitOnEnabled() Dependency.EmitOnDisabled() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.PackageManager Assembly : VRBuilder.Editor.PackageManager.dll Syntax public class InputSystemPackageEnabler : Dependency Properties | Improve this Doc View Source Package Declaration public override string Package { get; } Property Value Type Description System.String Overrides Dependency.Package | Improve this Doc View Source Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides Dependency.Priority"
  },
  "api/VRBuilder.Editor.PackageManager.LocalizationPackageEnabler.html": {
    "href": "api/VRBuilder.Editor.PackageManager.LocalizationPackageEnabler.html",
    "title": "Class LocalizationPackageEnabler | VR Builder Documentation",
    "keywords": "Class LocalizationPackageEnabler Adds Unity's Localizaion System package as a dependency. Inheritance System.Object Dependency LocalizationPackageEnabler Inherited Members Dependency.Version Dependency.Samples Dependency.Layers Dependency.OnPackageEnabled Dependency.OnPackageDisabled Dependency.EmitOnEnabled() Dependency.EmitOnDisabled() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.PackageManager Assembly : VRBuilder.Editor.PackageManager.dll Syntax public class LocalizationPackageEnabler : Dependency Properties | Improve this Doc View Source Package Declaration public override string Package { get; } Property Value Type Description System.String Overrides Dependency.Package | Improve this Doc View Source Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides Dependency.Priority"
  },
  "api/VRBuilder.Editor.PackageManager.NewtonsoftJSONPackageEnabler.html": {
    "href": "api/VRBuilder.Editor.PackageManager.NewtonsoftJSONPackageEnabler.html",
    "title": "Class NewtonsoftJSONPackageEnabler | VR Builder Documentation",
    "keywords": "Class NewtonsoftJSONPackageEnabler Inheritance System.Object Dependency NewtonsoftJSONPackageEnabler Inherited Members Dependency.Version Dependency.Samples Dependency.Layers Dependency.OnPackageEnabled Dependency.OnPackageDisabled Dependency.EmitOnEnabled() Dependency.EmitOnDisabled() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.PackageManager Assembly : VRBuilder.Editor.PackageManager.dll Syntax public class NewtonsoftJSONPackageEnabler : Dependency Properties | Improve this Doc View Source Package Declaration public override string Package { get; } Property Value Type Description System.String Overrides Dependency.Package | Improve this Doc View Source Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides Dependency.Priority"
  },
  "api/VRBuilder.Editor.PackageManager.PackageOperationsManager.html": {
    "href": "api/VRBuilder.Editor.PackageManager.PackageOperationsManager.html",
    "title": "Class PackageOperationsManager | VR Builder Documentation",
    "keywords": "Class PackageOperationsManager Handles different Unity's Package Manager requests. Inheritance System.Object PackageOperationsManager Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.PackageManager Assembly : VRBuilder.Editor.PackageManager.dll Syntax public class PackageOperationsManager Properties | Improve this Doc View Source IsInitialized Set to true when the package list has been fetched. Declaration public static bool IsInitialized { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Packages List of currently loaded packages in the Package Manager. Declaration public static PackageCollection Packages { get; } Property Value Type Description PackageCollection Methods | Improve this Doc View Source GetInstalledPackageVersion(String) Returns the version corresponding to the provided package if this is installed, otherwise it returns null. Declaration public static string GetInstalledPackageVersion(string package) Parameters Type Name Description System.String package Returns Type Description System.String | Improve this Doc View Source IsPackageLoaded(String, String) Returns true if the PackageOperationsManager has already collected a list of currently available packages and given package is already on that list with given version . Declaration public static bool IsPackageLoaded(string package, string version = null) Parameters Type Name Description System.String package System.String version Returns Type Description System.Boolean Remarks If package already contains an embedded version, version will be ignored. | Improve this Doc View Source LoadPackage(String, String) Adds a package to the Package Manager. Declaration public static async void LoadPackage(string package, string version = null) Parameters Type Name Description System.String package A string representing the package to be added. System.String version If provided, the package will be loaded with this specific version. | Improve this Doc View Source RemovePackage(String) Removes a package from the Package Manager. Declaration public static async void RemovePackage(string package) Parameters Type Name Description System.String package A string representing the package to be removed. Events | Improve this Doc View Source OnInitialized Emitted when the package list has been fetched. Declaration public static event EventHandler<PackageOperationsManager.InitializedEventArgs> OnInitialized Event Type Type Description System.EventHandler < PackageOperationsManager.InitializedEventArgs > | Improve this Doc View Source OnPackageDisabled Emitted when a package was successfully removed. Declaration public static event EventHandler<PackageOperationsManager.PackageDisabledEventArgs> OnPackageDisabled Event Type Type Description System.EventHandler < PackageOperationsManager.PackageDisabledEventArgs > | Improve this Doc View Source OnPackageEnabled Emitted when a package was successfully installed. Declaration public static event EventHandler<PackageOperationsManager.PackageEnabledEventArgs> OnPackageEnabled Event Type Type Description System.EventHandler < PackageOperationsManager.PackageEnabledEventArgs >"
  },
  "api/VRBuilder.Editor.PackageManager.PackageOperationsManager.InitializedEventArgs.html": {
    "href": "api/VRBuilder.Editor.PackageManager.PackageOperationsManager.InitializedEventArgs.html",
    "title": "Class PackageOperationsManager.InitializedEventArgs | VR Builder Documentation",
    "keywords": "Class PackageOperationsManager.InitializedEventArgs Inheritance System.Object System.EventArgs PackageOperationsManager.InitializedEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.PackageManager Assembly : VRBuilder.Editor.PackageManager.dll Syntax public class InitializedEventArgs : EventArgs"
  },
  "api/VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageDisabledEventArgs.html": {
    "href": "api/VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageDisabledEventArgs.html",
    "title": "Class PackageOperationsManager.PackageDisabledEventArgs | VR Builder Documentation",
    "keywords": "Class PackageOperationsManager.PackageDisabledEventArgs Inheritance System.Object System.EventArgs PackageOperationsManager.PackageDisabledEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.PackageManager Assembly : VRBuilder.Editor.PackageManager.dll Syntax public class PackageDisabledEventArgs : EventArgs Constructors | Improve this Doc View Source PackageDisabledEventArgs(String) Declaration public PackageDisabledEventArgs(string package) Parameters Type Name Description System.String package Fields | Improve this Doc View Source Package Declaration public readonly string Package Field Value Type Description System.String"
  },
  "api/VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageEnabledEventArgs.html": {
    "href": "api/VRBuilder.Editor.PackageManager.PackageOperationsManager.PackageEnabledEventArgs.html",
    "title": "Class PackageOperationsManager.PackageEnabledEventArgs | VR Builder Documentation",
    "keywords": "Class PackageOperationsManager.PackageEnabledEventArgs Inheritance System.Object System.EventArgs PackageOperationsManager.PackageEnabledEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.PackageManager Assembly : VRBuilder.Editor.PackageManager.dll Syntax public class PackageEnabledEventArgs : EventArgs Constructors | Improve this Doc View Source PackageEnabledEventArgs(PackageManager.PackageInfo) Declaration public PackageEnabledEventArgs(PackageManager.PackageInfo packageInfo) Parameters Type Name Description UnityEditor.PackageManager.PackageInfo packageInfo Fields | Improve this Doc View Source PackageInfo Declaration public readonly PackageManager.PackageInfo PackageInfo Field Value Type Description UnityEditor.PackageManager.PackageInfo"
  },
  "api/VRBuilder.Editor.PackageManager.PostProcessingPackageEnabler.html": {
    "href": "api/VRBuilder.Editor.PackageManager.PostProcessingPackageEnabler.html",
    "title": "Class PostProcessingPackageEnabler | VR Builder Documentation",
    "keywords": "Class PostProcessingPackageEnabler Adds Unity's Post-Processing package as a dependency. Inheritance System.Object Dependency PostProcessingPackageEnabler Inherited Members Dependency.Version Dependency.Samples Dependency.OnPackageEnabled Dependency.OnPackageDisabled Dependency.EmitOnEnabled() Dependency.EmitOnDisabled() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.PackageManager Assembly : VRBuilder.Editor.PackageManager.dll Syntax public class PostProcessingPackageEnabler : Dependency Properties | Improve this Doc View Source Layers Declaration protected override string[] Layers { get; } Property Value Type Description System.String [] Overrides Dependency.Layers | Improve this Doc View Source Package Declaration public override string Package { get; } Property Value Type Description System.String Overrides Dependency.Package | Improve this Doc View Source Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides Dependency.Priority"
  },
  "api/VRBuilder.Editor.PackageManager.XRInteraction.html": {
    "href": "api/VRBuilder.Editor.PackageManager.XRInteraction.html",
    "title": "Namespace VRBuilder.Editor.PackageManager.XRInteraction | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.PackageManager.XRInteraction Classes XRHandsPackageEnabler Adds Unity's XR Hands package as a dependency and sets specified symbol for script compilation. XRInteractionPackageEnabler Adds Unity's XR-Interaction-Toolkit package as a dependency and sets specified symbol for script compilation."
  },
  "api/VRBuilder.Editor.PackageManager.XRInteraction.XRHandsPackageEnabler.html": {
    "href": "api/VRBuilder.Editor.PackageManager.XRInteraction.XRHandsPackageEnabler.html",
    "title": "Class XRHandsPackageEnabler | VR Builder Documentation",
    "keywords": "Class XRHandsPackageEnabler Adds Unity's XR Hands package as a dependency and sets specified symbol for script compilation. Inheritance System.Object Dependency XRHandsPackageEnabler Inherited Members Dependency.Priority Dependency.Layers Dependency.OnPackageEnabled Dependency.OnPackageDisabled Dependency.EmitOnEnabled() Dependency.EmitOnDisabled() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.PackageManager.XRInteraction Assembly : VRBuilder.Editor.PackageManager.XRInteraction.dll Syntax public class XRHandsPackageEnabler : Dependency Properties | Improve this Doc View Source Package Declaration public override string Package { get; } Property Value Type Description System.String Overrides Dependency.Package | Improve this Doc View Source Samples Declaration public override string[] Samples { get; } Property Value Type Description System.String [] Overrides Dependency.Samples | Improve this Doc View Source Version Declaration public override string Version { get; set; } Property Value Type Description System.String Overrides Dependency.Version"
  },
  "api/VRBuilder.Editor.PackageManager.XRInteraction.XRInteractionPackageEnabler.html": {
    "href": "api/VRBuilder.Editor.PackageManager.XRInteraction.XRInteractionPackageEnabler.html",
    "title": "Class XRInteractionPackageEnabler | VR Builder Documentation",
    "keywords": "Class XRInteractionPackageEnabler Adds Unity's XR-Interaction-Toolkit package as a dependency and sets specified symbol for script compilation. Inheritance System.Object Dependency XRInteractionPackageEnabler Inherited Members Dependency.OnPackageEnabled Dependency.OnPackageDisabled Dependency.EmitOnEnabled() Dependency.EmitOnDisabled() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.PackageManager.XRInteraction Assembly : VRBuilder.Editor.PackageManager.XRInteraction.dll Syntax public class XRInteractionPackageEnabler : Dependency Properties | Improve this Doc View Source Layers Declaration protected override string[] Layers { get; } Property Value Type Description System.String [] Overrides Dependency.Layers | Improve this Doc View Source Package Declaration public override string Package { get; } Property Value Type Description System.String Overrides Dependency.Package | Improve this Doc View Source Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides Dependency.Priority | Improve this Doc View Source Samples Declaration public override string[] Samples { get; } Property Value Type Description System.String [] Overrides Dependency.Samples | Improve this Doc View Source Version Declaration public override string Version { get; set; } Property Value Type Description System.String Overrides Dependency.Version"
  },
  "api/VRBuilder.Editor.PreBuildCloseProcessEditor.html": {
    "href": "api/VRBuilder.Editor.PreBuildCloseProcessEditor.html",
    "title": "Class PreBuildCloseProcessEditor | VR Builder Documentation",
    "keywords": "Class PreBuildCloseProcessEditor We are closing the process editor window before the build starts. Having an open process editor window can lead to corrupt Unique Names. Inheritance System.Object PreBuildCloseProcessEditor Namespace : VRBuilder.Editor Assembly : VRBuilder.Editor.dll Syntax public class PreBuildCloseProcessEditor : IPreprocessBuildWithReport Properties | Improve this Doc View Source callbackOrder Declaration public int callbackOrder { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source OnPreprocessBuild(BuildReport) Declaration public void OnPreprocessBuild(BuildReport report) Parameters Type Name Description BuildReport report"
  },
  "api/VRBuilder.Editor.PreBuildLinkXMLCreator.html": {
    "href": "api/VRBuilder.Editor.PreBuildLinkXMLCreator.html",
    "title": "Class PreBuildLinkXMLCreator | VR Builder Documentation",
    "keywords": "Class PreBuildLinkXMLCreator Generates a LinkXML file before the build process to preserve all Behaviors and Conditions from VR Builder add-ons. Inheritance System.Object PreBuildLinkXMLCreator Namespace : VRBuilder.Editor Assembly : VRBuilder.Editor.dll Syntax public class PreBuildLinkXMLCreator : IPreprocessBuildWithReport Remarks The existing LinkXML in the VRBuilderRootFolder will be overwritten. Fields | Improve this Doc View Source LinkXML Declaration public const string LinkXML = \"link.xml\" Field Value Type Description System.String | Improve this Doc View Source VRBuilderRootFolder Declaration public const string VRBuilderRootFolder = \"Assets/MindPort/VR Builder\" Field Value Type Description System.String Properties | Improve this Doc View Source callbackOrder Declaration public int callbackOrder { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source OnPreprocessBuild(BuildReport) Declaration public void OnPreprocessBuild(BuildReport report) Parameters Type Name Description BuildReport report"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.BehaviorListUpdater.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.BehaviorListUpdater.html",
    "title": "Class BehaviorListUpdater | VR Builder Documentation",
    "keywords": "Class BehaviorListUpdater Concrete implementation of ListUpdater<T> . Inheritance System.Object ListUpdater < IBehavior > BehaviorListUpdater Implements IUpdater Inherited Members ListUpdater<IBehavior>.UpdatedType ListUpdater<IBehavior>.Update(MemberInfo, Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.dll Syntax public class BehaviorListUpdater : ListUpdater<IBehavior>, IUpdater Implements IUpdater"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.ConditionListUpdater.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.ConditionListUpdater.html",
    "title": "Class ConditionListUpdater | VR Builder Documentation",
    "keywords": "Class ConditionListUpdater Concrete implementation of ListUpdater<T> . Inheritance System.Object ListUpdater < ICondition > ConditionListUpdater Implements IUpdater Inherited Members ListUpdater<ICondition>.UpdatedType ListUpdater<ICondition>.Update(MemberInfo, Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.dll Syntax public class ConditionListUpdater : ListUpdater<ICondition>, IUpdater Implements IUpdater"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.Converter-2.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.Converter-2.html",
    "title": "Class Converter<TIn, TOut> | VR Builder Documentation",
    "keywords": "Class Converter<TIn, TOut> Generic implementation of IConverter . Inheritance System.Object Converter<TIn, TOut> DisableGameObjectBehaviorConverter EnableGameObjectBehaviorConverter GrabbedObjectWithTagConditionConverter SetComponentEnabledByTagBehaviorConverter SetObjectsWithTagEnabledBehaviorConverter SnappedObjectWithTagConditionConverter TriggerEventByRefBehaviorConverter TriggerEventByTagBehaviorConverter TriggerGenericEventByRefBehaviorConverter<T> TriggerGenericEventByTagBehaviorConverter<T> Implements IConverter Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.dll Syntax public abstract class Converter<TIn, TOut> : IConverter where TIn : class where TOut : class Type Parameters Name Description TIn TOut Properties | Improve this Doc View Source ConvertedType Type supported by this converter. Declaration public Type ConvertedType { get; } Property Value Type Description System.Type Methods | Improve this Doc View Source Convert(Object) Returns an object which is an up to date version of the provided object. Declaration public object Convert(object oldObject) Parameters Type Name Description System.Object oldObject Returns Type Description System.Object | Improve this Doc View Source PerformConversion(TIn) Returns an object which can replace the provided object. Declaration protected abstract TOut PerformConversion(TIn oldObject) Parameters Type Name Description TIn oldObject Returns Type Description TOut Implements IConverter"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.DataUpdater.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.DataUpdater.html",
    "title": "Class DataUpdater | VR Builder Documentation",
    "keywords": "Class DataUpdater Concrete implementation of NestedUpdater<T> . Inheritance System.Object Updater < IData > NestedUpdater < IData > DataUpdater Implements IUpdater Inherited Members NestedUpdater<IData>.Update(MemberInfo, Object) Updater<IData>.UpdatedType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.dll Syntax public class DataUpdater : NestedUpdater<IData>, IUpdater Implements IUpdater"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.DisableGameObjectBehaviorConverter.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.DisableGameObjectBehaviorConverter.html",
    "title": "Class DisableGameObjectBehaviorConverter | VR Builder Documentation",
    "keywords": "Class DisableGameObjectBehaviorConverter Replaces an obsolete DisableGameObjectBehavior with a SetObjectsEnabledBehavior with the same configuration. Inheritance System.Object Converter < DisableGameObjectBehavior , SetObjectsEnabledBehavior > DisableGameObjectBehaviorConverter Implements IConverter Inherited Members Converter<DisableGameObjectBehavior, SetObjectsEnabledBehavior>.ConvertedType Converter<DisableGameObjectBehavior, SetObjectsEnabledBehavior>.PerformConversion(DisableGameObjectBehavior) Converter<DisableGameObjectBehavior, SetObjectsEnabledBehavior>.Convert(Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.dll Syntax public class DisableGameObjectBehaviorConverter : Converter<DisableGameObjectBehavior, SetObjectsEnabledBehavior>, IConverter Methods | Improve this Doc View Source PerformConversion(DisableGameObjectBehavior) Returns an object which can replace the provided object. Declaration protected override SetObjectsEnabledBehavior PerformConversion(DisableGameObjectBehavior oldBehavior) Parameters Type Name Description DisableGameObjectBehavior oldBehavior Returns Type Description SetObjectsEnabledBehavior Overrides VRBuilder.Editor.ProcessUpgradeTool.Converter<VRBuilder.Core.Behaviors.DisableGameObjectBehavior, VRBuilder.Core.Behaviors.SetObjectsEnabledBehavior>.PerformConversion(VRBuilder.Core.Behaviors.DisableGameObjectBehavior) Implements IConverter"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.EnableGameObjectBehaviorConverter.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.EnableGameObjectBehaviorConverter.html",
    "title": "Class EnableGameObjectBehaviorConverter | VR Builder Documentation",
    "keywords": "Class EnableGameObjectBehaviorConverter Replaces an obsolete EnableGameObjectBehavior with a SetObjectsEnabledBehavior with the same configuration. Inheritance System.Object Converter < EnableGameObjectBehavior , SetObjectsEnabledBehavior > EnableGameObjectBehaviorConverter Implements IConverter Inherited Members Converter<EnableGameObjectBehavior, SetObjectsEnabledBehavior>.ConvertedType Converter<EnableGameObjectBehavior, SetObjectsEnabledBehavior>.PerformConversion(EnableGameObjectBehavior) Converter<EnableGameObjectBehavior, SetObjectsEnabledBehavior>.Convert(Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.dll Syntax public class EnableGameObjectBehaviorConverter : Converter<EnableGameObjectBehavior, SetObjectsEnabledBehavior>, IConverter Methods | Improve this Doc View Source PerformConversion(EnableGameObjectBehavior) Returns an object which can replace the provided object. Declaration protected override SetObjectsEnabledBehavior PerformConversion(EnableGameObjectBehavior oldBehavior) Parameters Type Name Description EnableGameObjectBehavior oldBehavior Returns Type Description SetObjectsEnabledBehavior Overrides VRBuilder.Editor.ProcessUpgradeTool.Converter<VRBuilder.Core.Behaviors.EnableGameObjectBehavior, VRBuilder.Core.Behaviors.SetObjectsEnabledBehavior>.PerformConversion(VRBuilder.Core.Behaviors.EnableGameObjectBehavior) Implements IConverter"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.GrabbedObjectWithTagConditionConverter.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.GrabbedObjectWithTagConditionConverter.html",
    "title": "Class GrabbedObjectWithTagConditionConverter | VR Builder Documentation",
    "keywords": "Class GrabbedObjectWithTagConditionConverter Replaces an obsolete GrabbedObjectWithTagCondition with a GrabbedCondition with the same configuration. Inheritance System.Object Converter < GrabbedObjectWithTagCondition , GrabbedCondition > GrabbedObjectWithTagConditionConverter Implements IConverter Inherited Members Converter<GrabbedObjectWithTagCondition, GrabbedCondition>.ConvertedType Converter<GrabbedObjectWithTagCondition, GrabbedCondition>.PerformConversion(GrabbedObjectWithTagCondition) Converter<GrabbedObjectWithTagCondition, GrabbedCondition>.Convert(Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.BasicInteraction.dll Syntax public class GrabbedObjectWithTagConditionConverter : Converter<GrabbedObjectWithTagCondition, GrabbedCondition>, IConverter Methods | Improve this Doc View Source PerformConversion(GrabbedObjectWithTagCondition) Returns an object which can replace the provided object. Declaration protected override GrabbedCondition PerformConversion(GrabbedObjectWithTagCondition oldCondition) Parameters Type Name Description GrabbedObjectWithTagCondition oldCondition Returns Type Description GrabbedCondition Overrides VRBuilder.Editor.ProcessUpgradeTool.Converter<VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition, VRBuilder.BasicInteraction.Conditions.GrabbedCondition>.PerformConversion(VRBuilder.BasicInteraction.Conditions.GrabbedObjectWithTagCondition) Implements IConverter"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.html",
    "title": "Namespace VRBuilder.Editor.ProcessUpgradeTool | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.ProcessUpgradeTool Classes BehaviorListUpdater Concrete implementation of ListUpdater<T> . ConditionListUpdater Concrete implementation of ListUpdater<T> . Converter<TIn, TOut> Generic implementation of IConverter . DataUpdater Concrete implementation of NestedUpdater<T> . DisableGameObjectBehaviorConverter Replaces an obsolete DisableGameObjectBehavior with a SetObjectsEnabledBehavior with the same configuration. EnableGameObjectBehaviorConverter Replaces an obsolete EnableGameObjectBehavior with a SetObjectsEnabledBehavior with the same configuration. GrabbedObjectWithTagConditionConverter Replaces an obsolete GrabbedObjectWithTagCondition with a GrabbedCondition with the same configuration. ListUpdater<T> Iterates through elements of a System.Collections.Generic.IList<T> and replaces them with an up to date version if a suitable converter is found. LockablePropertyReferenceUpdater Iterates through a collection of LockablePropertyReference s and updates them if a suitable updater exists. NestedUpdater<T> Generic IUpdater that iterates through the fields and properties of the provided object and tries to update them, provided it finds a suitable updater. ProcessSceneReferencePropertyUpdater Assigns a value to a ProcessSceneReferenceBase property from an obsolete UniqueNameReference or SceneObjectTagBase . ProcessUpgradeTool Tool for upgrading an old process loaded in a scene to be compatible with the latest version of VR Builder. ProcessVariableBoolUpdater Concrete implementation of NestedUpdater<T> . ProcessVariableFloatUpdater Concrete implementation of NestedUpdater<T> . ProcessVariableStringUpdater Concrete implementation of NestedUpdater<T> . PropertyUpdater<TNew, TOld> Generic implementation of IUpdater specific for properties that supersede obsolete properties of a different type. SetComponentEnabledByTagBehaviorConverter Replaces an obsolete SetComponentEnabledByTagBehavior with a SetComponentEnabledBehavior with the same configuration. SetObjectsWithTagEnabledBehaviorConverter Replaces an obsolete SetObjectsWithTagEnabledBehavior with a SetObjectsEnabledBehavior with the same configuration. SnappedObjectWithTagConditionConverter Replaces an obsolete SnappedObjectWithTagCondition with a SnappedCondition with the same configuration. TriggerBoolEventByRefBehaviorConverter Replaces an obsolete TriggerGenericEventByRefBehavior<T> with a TriggerGenericEventBehavior<T> with the same configuration. TriggerBoolEventByTagBehaviorConverter Replaces an obsolete TriggerGenericEventByTagBehavior<T> with a TriggerGenericEventBehavior<T> with the same configuration. TriggerEventByRefBehaviorConverter Replaces an obsolete TriggerEventByRefBehavior with a TriggerEventBehavior with the same configuration. TriggerEventByTagBehaviorConverter Replaces an obsolete TriggerEventByTagBehavior with a TriggerEventBehavior with the same configuration. TriggerFloatEventByRefBehaviorConverter Replaces an obsolete TriggerGenericEventByRefBehavior<T> with a TriggerGenericEventBehavior<T> with the same configuration. TriggerFloatEventByTagBehaviorConverter Replaces an obsolete TriggerGenericEventByTagBehavior<T> with a TriggerGenericEventBehavior<T> with the same configuration. TriggerGenericEventByRefBehaviorConverter<T> Generic implementation to convert an obsolete TriggerGenericEventByRefBehavior<T> with a TriggerGenericEventBehavior<T> with the same configuration. TriggerGenericEventByTagBehaviorConverter<T> Generic implementation to convert an obsolete TriggerGenericEventByTagBehavior<T> with a TriggerGenericEventBehavior<T> with the same configuration. TriggerStringEventByRefBehaviorConverter Replaces an obsolete TriggerGenericEventByRefBehavior<T> with a TriggerGenericEventBehavior<T> with the same configuration. TriggerStringEventByTagBehaviorConverter Replaces an obsolete TriggerGenericEventByTagBehavior<T> with a TriggerGenericEventBehavior<T> with the same configuration. Updater<T> Generic implementation of IUpdater . Interfaces IConverter Replaces an object with another up to date object with comparable functionality. IUpdater Updates the value in a field or property according to a newer standard."
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.IConverter.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.IConverter.html",
    "title": "Interface IConverter | VR Builder Documentation",
    "keywords": "Interface IConverter Replaces an object with another up to date object with comparable functionality. Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.dll Syntax public interface IConverter Properties | Improve this Doc View Source ConvertedType Type supported by this converter. Declaration Type ConvertedType { get; } Property Value Type Description System.Type Methods | Improve this Doc View Source Convert(Object) Returns an object which is an up to date version of the provided object. Declaration object Convert(object oldEntity) Parameters Type Name Description System.Object oldEntity Returns Type Description System.Object"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.IUpdater.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.IUpdater.html",
    "title": "Interface IUpdater | VR Builder Documentation",
    "keywords": "Interface IUpdater Updates the value in a field or property according to a newer standard. Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.dll Syntax public interface IUpdater Properties | Improve this Doc View Source UpdatedType Base type compatible with this updater. Declaration Type UpdatedType { get; } Property Value Type Description System.Type Methods | Improve this Doc View Source Update(MemberInfo, Object) Updates the provided field or property. Declaration void Update(MemberInfo memberInfo, object owner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object owner"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.ListUpdater-1.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.ListUpdater-1.html",
    "title": "Class ListUpdater<T> | VR Builder Documentation",
    "keywords": "Class ListUpdater<T> Iterates through elements of a System.Collections.Generic.IList<T> and replaces them with an up to date version if a suitable converter is found. Inheritance System.Object ListUpdater<T> BehaviorListUpdater ConditionListUpdater Implements IUpdater Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.dll Syntax public abstract class ListUpdater<T> : IUpdater Type Parameters Name Description T Properties | Improve this Doc View Source UpdatedType Base type compatible with this updater. Declaration public Type UpdatedType { get; } Property Value Type Description System.Type Methods | Improve this Doc View Source Update(MemberInfo, Object) Updates the provided field or property. Declaration public void Update(MemberInfo memberInfo, object owner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object owner Implements IUpdater"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.LockablePropertyReferenceUpdater.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.LockablePropertyReferenceUpdater.html",
    "title": "Class LockablePropertyReferenceUpdater | VR Builder Documentation",
    "keywords": "Class LockablePropertyReferenceUpdater Iterates through a collection of LockablePropertyReference s and updates them if a suitable updater exists. Inheritance System.Object Updater < System.Collections.Generic.IEnumerable < LockablePropertyReference >> LockablePropertyReferenceUpdater Implements IUpdater Inherited Members Updater<IEnumerable<LockablePropertyReference>>.UpdatedType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.dll Syntax public class LockablePropertyReferenceUpdater : Updater<IEnumerable<LockablePropertyReference>>, IUpdater Methods | Improve this Doc View Source Update(MemberInfo, Object) Updates the provided field or property. Declaration public override void Update(MemberInfo memberInfo, object owner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object owner Overrides VRBuilder.Editor.ProcessUpgradeTool.Updater<System.Collections.Generic.IEnumerable<VRBuilder.Core.Behaviors.LockablePropertyReference>>.Update(System.Reflection.MemberInfo, System.Object) Implements IUpdater"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.NestedUpdater-1.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.NestedUpdater-1.html",
    "title": "Class NestedUpdater<T> | VR Builder Documentation",
    "keywords": "Class NestedUpdater<T> Generic IUpdater that iterates through the fields and properties of the provided object and tries to update them, provided it finds a suitable updater. Inheritance System.Object Updater <T> NestedUpdater<T> DataUpdater ProcessVariableBoolUpdater ProcessVariableFloatUpdater ProcessVariableStringUpdater Implements IUpdater Inherited Members Updater<T>.UpdatedType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.dll Syntax public abstract class NestedUpdater<T> : Updater<T>, IUpdater Type Parameters Name Description T Methods | Improve this Doc View Source Update(MemberInfo, Object) Updates the provided field or property. Declaration public override void Update(MemberInfo memberInfo, object owner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object owner Overrides VRBuilder.Editor.ProcessUpgradeTool.Updater<T>.Update(System.Reflection.MemberInfo, System.Object) Implements IUpdater"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.ProcessSceneReferencePropertyUpdater.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.ProcessSceneReferencePropertyUpdater.html",
    "title": "Class ProcessSceneReferencePropertyUpdater | VR Builder Documentation",
    "keywords": "Class ProcessSceneReferencePropertyUpdater Assigns a value to a ProcessSceneReferenceBase property from an obsolete UniqueNameReference or SceneObjectTagBase . Inheritance System.Object PropertyUpdater < ProcessSceneReferenceBase , System.Object > ProcessSceneReferencePropertyUpdater Implements IUpdater Inherited Members PropertyUpdater<ProcessSceneReferenceBase, Object>.UpdatedType PropertyUpdater<ProcessSceneReferenceBase, Object>.ShouldBeUpdated(ProcessSceneReferenceBase) PropertyUpdater<ProcessSceneReferenceBase, Object>.PerformUpgrade(ProcessSceneReferenceBase, Object) PropertyUpdater<ProcessSceneReferenceBase, Object>.Update(MemberInfo, Object) PropertyUpdater<ProcessSceneReferenceBase, Object>.AttemptToUpdateProperty(MemberInfo, Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.dll Syntax public class ProcessSceneReferencePropertyUpdater : PropertyUpdater<ProcessSceneReferenceBase, object>, IUpdater Methods | Improve this Doc View Source PerformUpgrade(ref ProcessSceneReferenceBase, ref Object) Reads the value from the old property and assigns it to the new property. Declaration protected override bool PerformUpgrade(ref ProcessSceneReferenceBase newProperty, ref object oldProperty) Parameters Type Name Description ProcessSceneReferenceBase newProperty System.Object oldProperty Returns Type Description System.Boolean Overrides VRBuilder.Editor.ProcessUpgradeTool.PropertyUpdater<VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase, System.Object>.PerformUpgrade(VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase, System.Object) | Improve this Doc View Source ShouldBeUpdated(ProcessSceneReferenceBase) True if it is necessary to update the provided property. Declaration protected override bool ShouldBeUpdated(ProcessSceneReferenceBase property) Parameters Type Name Description ProcessSceneReferenceBase property Returns Type Description System.Boolean Overrides VRBuilder.Editor.ProcessUpgradeTool.PropertyUpdater<VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase, System.Object>.ShouldBeUpdated(VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase) Implements IUpdater"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.ProcessUpgradeTool.html",
    "title": "Class ProcessUpgradeTool | VR Builder Documentation",
    "keywords": "Class ProcessUpgradeTool Tool for upgrading an old process loaded in a scene to be compatible with the latest version of VR Builder. Inheritance System.Object ProcessUpgradeTool Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.dll Syntax public static class ProcessUpgradeTool Properties | Improve this Doc View Source Converters Converters available to this tool. Declaration public static IEnumerable<IConverter> Converters { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IConverter > | Improve this Doc View Source Updaters Updaters available to this tool. Declaration public static IEnumerable<IUpdater> Updaters { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IUpdater > Methods | Improve this Doc View Source GetUpdaterForType(Type) Returns a suitable updater for the provided type, or null if none is found. Declaration public static IUpdater GetUpdaterForType(Type type) Parameters Type Name Description System.Type type Returns Type Description IUpdater | Improve this Doc View Source UpdateDataOwnerRecursively(IDataOwner) Updates the provided data owner and all of its child data owners, if a suitable updater exists. Declaration public static void UpdateDataOwnerRecursively(IDataOwner dataOwner) Parameters Type Name Description IDataOwner dataOwner"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.ProcessVariableBoolUpdater.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.ProcessVariableBoolUpdater.html",
    "title": "Class ProcessVariableBoolUpdater | VR Builder Documentation",
    "keywords": "Class ProcessVariableBoolUpdater Concrete implementation of NestedUpdater<T> . Inheritance System.Object Updater < ProcessVariable < System.Boolean >> NestedUpdater < ProcessVariable < System.Boolean >> ProcessVariableBoolUpdater Implements IUpdater Inherited Members NestedUpdater<ProcessVariable<Boolean>>.Update(MemberInfo, Object) Updater<ProcessVariable<Boolean>>.UpdatedType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.dll Syntax public class ProcessVariableBoolUpdater : NestedUpdater<ProcessVariable<bool>>, IUpdater Implements IUpdater"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.ProcessVariableFloatUpdater.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.ProcessVariableFloatUpdater.html",
    "title": "Class ProcessVariableFloatUpdater | VR Builder Documentation",
    "keywords": "Class ProcessVariableFloatUpdater Concrete implementation of NestedUpdater<T> . Inheritance System.Object Updater < ProcessVariable < System.Single >> NestedUpdater < ProcessVariable < System.Single >> ProcessVariableFloatUpdater Implements IUpdater Inherited Members NestedUpdater<ProcessVariable<Single>>.Update(MemberInfo, Object) Updater<ProcessVariable<Single>>.UpdatedType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.dll Syntax public class ProcessVariableFloatUpdater : NestedUpdater<ProcessVariable<float>>, IUpdater Implements IUpdater"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.ProcessVariableStringUpdater.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.ProcessVariableStringUpdater.html",
    "title": "Class ProcessVariableStringUpdater | VR Builder Documentation",
    "keywords": "Class ProcessVariableStringUpdater Concrete implementation of NestedUpdater<T> . Inheritance System.Object Updater < ProcessVariable < System.String >> NestedUpdater < ProcessVariable < System.String >> ProcessVariableStringUpdater Implements IUpdater Inherited Members NestedUpdater<ProcessVariable<String>>.Update(MemberInfo, Object) Updater<ProcessVariable<String>>.UpdatedType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.dll Syntax public class ProcessVariableStringUpdater : NestedUpdater<ProcessVariable<string>>, IUpdater Implements IUpdater"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.PropertyUpdater-2.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.PropertyUpdater-2.html",
    "title": "Class PropertyUpdater<TNew, TOld> | VR Builder Documentation",
    "keywords": "Class PropertyUpdater<TNew, TOld> Generic implementation of IUpdater specific for properties that supersede obsolete properties of a different type. Inheritance System.Object PropertyUpdater<TNew, TOld> ProcessSceneReferencePropertyUpdater Implements IUpdater Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.dll Syntax public abstract class PropertyUpdater<TNew, TOld> : IUpdater Type Parameters Name Description TNew Type of the property whose value has to be updated. TOld Type of the obsolete property which should be read to get the value. Properties | Improve this Doc View Source UpdatedType Base type compatible with this updater. Declaration public Type UpdatedType { get; } Property Value Type Description System.Type Methods | Improve this Doc View Source AttemptToUpdateProperty(MemberInfo, Object) Declaration protected bool AttemptToUpdateProperty(MemberInfo memberInfo, object owner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object owner Returns Type Description System.Boolean | Improve this Doc View Source PerformUpgrade(ref TNew, ref TOld) Reads the value from the old property and assigns it to the new property. Declaration protected abstract bool PerformUpgrade(ref TNew newProperty, ref TOld oldProperty) Parameters Type Name Description TNew newProperty TOld oldProperty Returns Type Description System.Boolean | Improve this Doc View Source ShouldBeUpdated(TNew) True if it is necessary to update the provided property. Declaration protected abstract bool ShouldBeUpdated(TNew property) Parameters Type Name Description TNew property Returns Type Description System.Boolean | Improve this Doc View Source Update(MemberInfo, Object) Updates the provided field or property. Declaration public void Update(MemberInfo memberInfo, object owner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object owner Implements IUpdater"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.SetComponentEnabledByTagBehaviorConverter.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.SetComponentEnabledByTagBehaviorConverter.html",
    "title": "Class SetComponentEnabledByTagBehaviorConverter | VR Builder Documentation",
    "keywords": "Class SetComponentEnabledByTagBehaviorConverter Replaces an obsolete SetComponentEnabledByTagBehavior with a SetComponentEnabledBehavior with the same configuration. Inheritance System.Object Converter < SetComponentEnabledByTagBehavior , SetComponentEnabledBehavior > SetComponentEnabledByTagBehaviorConverter Implements IConverter Inherited Members Converter<SetComponentEnabledByTagBehavior, SetComponentEnabledBehavior>.ConvertedType Converter<SetComponentEnabledByTagBehavior, SetComponentEnabledBehavior>.PerformConversion(SetComponentEnabledByTagBehavior) Converter<SetComponentEnabledByTagBehavior, SetComponentEnabledBehavior>.Convert(Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.dll Syntax public class SetComponentEnabledByTagBehaviorConverter : Converter<SetComponentEnabledByTagBehavior, SetComponentEnabledBehavior>, IConverter Methods | Improve this Doc View Source PerformConversion(SetComponentEnabledByTagBehavior) Returns an object which can replace the provided object. Declaration protected override SetComponentEnabledBehavior PerformConversion(SetComponentEnabledByTagBehavior oldBehavior) Parameters Type Name Description SetComponentEnabledByTagBehavior oldBehavior Returns Type Description SetComponentEnabledBehavior Overrides VRBuilder.Editor.ProcessUpgradeTool.Converter<VRBuilder.Core.Behaviors.SetComponentEnabledByTagBehavior, VRBuilder.Core.Behaviors.SetComponentEnabledBehavior>.PerformConversion(VRBuilder.Core.Behaviors.SetComponentEnabledByTagBehavior) Implements IConverter"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.SetObjectsWithTagEnabledBehaviorConverter.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.SetObjectsWithTagEnabledBehaviorConverter.html",
    "title": "Class SetObjectsWithTagEnabledBehaviorConverter | VR Builder Documentation",
    "keywords": "Class SetObjectsWithTagEnabledBehaviorConverter Replaces an obsolete SetObjectsWithTagEnabledBehavior with a SetObjectsEnabledBehavior with the same configuration. Inheritance System.Object Converter < SetObjectsWithTagEnabledBehavior , SetObjectsEnabledBehavior > SetObjectsWithTagEnabledBehaviorConverter Implements IConverter Inherited Members Converter<SetObjectsWithTagEnabledBehavior, SetObjectsEnabledBehavior>.ConvertedType Converter<SetObjectsWithTagEnabledBehavior, SetObjectsEnabledBehavior>.PerformConversion(SetObjectsWithTagEnabledBehavior) Converter<SetObjectsWithTagEnabledBehavior, SetObjectsEnabledBehavior>.Convert(Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.dll Syntax public class SetObjectsWithTagEnabledBehaviorConverter : Converter<SetObjectsWithTagEnabledBehavior, SetObjectsEnabledBehavior>, IConverter Methods | Improve this Doc View Source PerformConversion(SetObjectsWithTagEnabledBehavior) Returns an object which can replace the provided object. Declaration protected override SetObjectsEnabledBehavior PerformConversion(SetObjectsWithTagEnabledBehavior oldBehavior) Parameters Type Name Description SetObjectsWithTagEnabledBehavior oldBehavior Returns Type Description SetObjectsEnabledBehavior Overrides VRBuilder.Editor.ProcessUpgradeTool.Converter<VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior, VRBuilder.Core.Behaviors.SetObjectsEnabledBehavior>.PerformConversion(VRBuilder.Core.Behaviors.SetObjectsWithTagEnabledBehavior) Implements IConverter"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.SnappedObjectWithTagConditionConverter.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.SnappedObjectWithTagConditionConverter.html",
    "title": "Class SnappedObjectWithTagConditionConverter | VR Builder Documentation",
    "keywords": "Class SnappedObjectWithTagConditionConverter Replaces an obsolete SnappedObjectWithTagCondition with a SnappedCondition with the same configuration. Inheritance System.Object Converter < SnappedObjectWithTagCondition , SnappedCondition > SnappedObjectWithTagConditionConverter Implements IConverter Inherited Members Converter<SnappedObjectWithTagCondition, SnappedCondition>.ConvertedType Converter<SnappedObjectWithTagCondition, SnappedCondition>.PerformConversion(SnappedObjectWithTagCondition) Converter<SnappedObjectWithTagCondition, SnappedCondition>.Convert(Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.BasicInteraction.dll Syntax public class SnappedObjectWithTagConditionConverter : Converter<SnappedObjectWithTagCondition, SnappedCondition>, IConverter Methods | Improve this Doc View Source PerformConversion(SnappedObjectWithTagCondition) Returns an object which can replace the provided object. Declaration protected override SnappedCondition PerformConversion(SnappedObjectWithTagCondition oldCondition) Parameters Type Name Description SnappedObjectWithTagCondition oldCondition Returns Type Description SnappedCondition Overrides VRBuilder.Editor.ProcessUpgradeTool.Converter<VRBuilder.BasicInteraction.Conditions.SnappedObjectWithTagCondition, VRBuilder.BasicInteraction.Conditions.SnappedCondition>.PerformConversion(VRBuilder.BasicInteraction.Conditions.SnappedObjectWithTagCondition) Implements IConverter"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.TriggerBoolEventByRefBehaviorConverter.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.TriggerBoolEventByRefBehaviorConverter.html",
    "title": "Class TriggerBoolEventByRefBehaviorConverter | VR Builder Documentation",
    "keywords": "Class TriggerBoolEventByRefBehaviorConverter Replaces an obsolete TriggerGenericEventByRefBehavior<T> with a TriggerGenericEventBehavior<T> with the same configuration. Inheritance System.Object Converter < TriggerGenericEventByRefBehavior < System.Boolean >, TriggerGenericEventBehavior < System.Boolean >> TriggerGenericEventByRefBehaviorConverter < System.Boolean > TriggerBoolEventByRefBehaviorConverter Implements IConverter Inherited Members TriggerGenericEventByRefBehaviorConverter<Boolean>.PerformConversion(TriggerGenericEventByRefBehavior<Boolean>) Converter<TriggerGenericEventByRefBehavior<Boolean>, TriggerGenericEventBehavior<Boolean>>.ConvertedType Converter<TriggerGenericEventByRefBehavior<Boolean>, TriggerGenericEventBehavior<Boolean>>.PerformConversion(TriggerGenericEventByRefBehavior<Boolean>) Converter<TriggerGenericEventByRefBehavior<Boolean>, TriggerGenericEventBehavior<Boolean>>.Convert(Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class TriggerBoolEventByRefBehaviorConverter : TriggerGenericEventByRefBehaviorConverter<bool>, IConverter Implements IConverter"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.TriggerBoolEventByTagBehaviorConverter.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.TriggerBoolEventByTagBehaviorConverter.html",
    "title": "Class TriggerBoolEventByTagBehaviorConverter | VR Builder Documentation",
    "keywords": "Class TriggerBoolEventByTagBehaviorConverter Replaces an obsolete TriggerGenericEventByTagBehavior<T> with a TriggerGenericEventBehavior<T> with the same configuration. Inheritance System.Object Converter < TriggerGenericEventByTagBehavior < System.Boolean >, TriggerGenericEventBehavior < System.Boolean >> TriggerGenericEventByTagBehaviorConverter < System.Boolean > TriggerBoolEventByTagBehaviorConverter Implements IConverter Inherited Members TriggerGenericEventByTagBehaviorConverter<Boolean>.PerformConversion(TriggerGenericEventByTagBehavior<Boolean>) Converter<TriggerGenericEventByTagBehavior<Boolean>, TriggerGenericEventBehavior<Boolean>>.ConvertedType Converter<TriggerGenericEventByTagBehavior<Boolean>, TriggerGenericEventBehavior<Boolean>>.PerformConversion(TriggerGenericEventByTagBehavior<Boolean>) Converter<TriggerGenericEventByTagBehavior<Boolean>, TriggerGenericEventBehavior<Boolean>>.Convert(Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class TriggerBoolEventByTagBehaviorConverter : TriggerGenericEventByTagBehaviorConverter<bool>, IConverter Implements IConverter"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.TriggerEventByRefBehaviorConverter.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.TriggerEventByRefBehaviorConverter.html",
    "title": "Class TriggerEventByRefBehaviorConverter | VR Builder Documentation",
    "keywords": "Class TriggerEventByRefBehaviorConverter Replaces an obsolete TriggerEventByRefBehavior with a TriggerEventBehavior with the same configuration. Inheritance System.Object Converter < TriggerEventByRefBehavior , TriggerEventBehavior > TriggerEventByRefBehaviorConverter Implements IConverter Inherited Members Converter<TriggerEventByRefBehavior, TriggerEventBehavior>.ConvertedType Converter<TriggerEventByRefBehavior, TriggerEventBehavior>.PerformConversion(TriggerEventByRefBehavior) Converter<TriggerEventByRefBehavior, TriggerEventBehavior>.Convert(Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class TriggerEventByRefBehaviorConverter : Converter<TriggerEventByRefBehavior, TriggerEventBehavior>, IConverter Methods | Improve this Doc View Source PerformConversion(TriggerEventByRefBehavior) Returns an object which can replace the provided object. Declaration protected override TriggerEventBehavior PerformConversion(TriggerEventByRefBehavior oldBehavior) Parameters Type Name Description TriggerEventByRefBehavior oldBehavior Returns Type Description TriggerEventBehavior Overrides VRBuilder.Editor.ProcessUpgradeTool.Converter<VRBuilder.StatesAndData.Behaviors.TriggerEventByRefBehavior, VRBuilder.StatesAndData.Behaviors.TriggerEventBehavior>.PerformConversion(VRBuilder.StatesAndData.Behaviors.TriggerEventByRefBehavior) Implements IConverter"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.TriggerEventByTagBehaviorConverter.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.TriggerEventByTagBehaviorConverter.html",
    "title": "Class TriggerEventByTagBehaviorConverter | VR Builder Documentation",
    "keywords": "Class TriggerEventByTagBehaviorConverter Replaces an obsolete TriggerEventByTagBehavior with a TriggerEventBehavior with the same configuration. Inheritance System.Object Converter < TriggerEventByTagBehavior , TriggerEventBehavior > TriggerEventByTagBehaviorConverter Implements IConverter Inherited Members Converter<TriggerEventByTagBehavior, TriggerEventBehavior>.ConvertedType Converter<TriggerEventByTagBehavior, TriggerEventBehavior>.PerformConversion(TriggerEventByTagBehavior) Converter<TriggerEventByTagBehavior, TriggerEventBehavior>.Convert(Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class TriggerEventByTagBehaviorConverter : Converter<TriggerEventByTagBehavior, TriggerEventBehavior>, IConverter Methods | Improve this Doc View Source PerformConversion(TriggerEventByTagBehavior) Returns an object which can replace the provided object. Declaration protected override TriggerEventBehavior PerformConversion(TriggerEventByTagBehavior oldBehavior) Parameters Type Name Description TriggerEventByTagBehavior oldBehavior Returns Type Description TriggerEventBehavior Overrides VRBuilder.Editor.ProcessUpgradeTool.Converter<VRBuilder.StatesAndData.Behaviors.TriggerEventByTagBehavior, VRBuilder.StatesAndData.Behaviors.TriggerEventBehavior>.PerformConversion(VRBuilder.StatesAndData.Behaviors.TriggerEventByTagBehavior) Implements IConverter"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.TriggerFloatEventByRefBehaviorConverter.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.TriggerFloatEventByRefBehaviorConverter.html",
    "title": "Class TriggerFloatEventByRefBehaviorConverter | VR Builder Documentation",
    "keywords": "Class TriggerFloatEventByRefBehaviorConverter Replaces an obsolete TriggerGenericEventByRefBehavior<T> with a TriggerGenericEventBehavior<T> with the same configuration. Inheritance System.Object Converter < TriggerGenericEventByRefBehavior < System.Single >, TriggerGenericEventBehavior < System.Single >> TriggerGenericEventByRefBehaviorConverter < System.Single > TriggerFloatEventByRefBehaviorConverter Implements IConverter Inherited Members TriggerGenericEventByRefBehaviorConverter<Single>.PerformConversion(TriggerGenericEventByRefBehavior<Single>) Converter<TriggerGenericEventByRefBehavior<Single>, TriggerGenericEventBehavior<Single>>.ConvertedType Converter<TriggerGenericEventByRefBehavior<Single>, TriggerGenericEventBehavior<Single>>.PerformConversion(TriggerGenericEventByRefBehavior<Single>) Converter<TriggerGenericEventByRefBehavior<Single>, TriggerGenericEventBehavior<Single>>.Convert(Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class TriggerFloatEventByRefBehaviorConverter : TriggerGenericEventByRefBehaviorConverter<float>, IConverter Implements IConverter"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.TriggerFloatEventByTagBehaviorConverter.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.TriggerFloatEventByTagBehaviorConverter.html",
    "title": "Class TriggerFloatEventByTagBehaviorConverter | VR Builder Documentation",
    "keywords": "Class TriggerFloatEventByTagBehaviorConverter Replaces an obsolete TriggerGenericEventByTagBehavior<T> with a TriggerGenericEventBehavior<T> with the same configuration. Inheritance System.Object Converter < TriggerGenericEventByTagBehavior < System.Single >, TriggerGenericEventBehavior < System.Single >> TriggerGenericEventByTagBehaviorConverter < System.Single > TriggerFloatEventByTagBehaviorConverter Implements IConverter Inherited Members TriggerGenericEventByTagBehaviorConverter<Single>.PerformConversion(TriggerGenericEventByTagBehavior<Single>) Converter<TriggerGenericEventByTagBehavior<Single>, TriggerGenericEventBehavior<Single>>.ConvertedType Converter<TriggerGenericEventByTagBehavior<Single>, TriggerGenericEventBehavior<Single>>.PerformConversion(TriggerGenericEventByTagBehavior<Single>) Converter<TriggerGenericEventByTagBehavior<Single>, TriggerGenericEventBehavior<Single>>.Convert(Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class TriggerFloatEventByTagBehaviorConverter : TriggerGenericEventByTagBehaviorConverter<float>, IConverter Implements IConverter"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.TriggerGenericEventByRefBehaviorConverter-1.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.TriggerGenericEventByRefBehaviorConverter-1.html",
    "title": "Class TriggerGenericEventByRefBehaviorConverter<T> | VR Builder Documentation",
    "keywords": "Class TriggerGenericEventByRefBehaviorConverter<T> Generic implementation to convert an obsolete TriggerGenericEventByRefBehavior<T> with a TriggerGenericEventBehavior<T> with the same configuration. Inheritance System.Object Converter < TriggerGenericEventByRefBehavior <T>, TriggerGenericEventBehavior <T>> TriggerGenericEventByRefBehaviorConverter<T> TriggerBoolEventByRefBehaviorConverter TriggerFloatEventByRefBehaviorConverter TriggerStringEventByRefBehaviorConverter Implements IConverter Inherited Members Converter<TriggerGenericEventByRefBehavior<T>, TriggerGenericEventBehavior<T>>.ConvertedType Converter<TriggerGenericEventByRefBehavior<T>, TriggerGenericEventBehavior<T>>.PerformConversion(TriggerGenericEventByRefBehavior<T>) Converter<TriggerGenericEventByRefBehavior<T>, TriggerGenericEventBehavior<T>>.Convert(Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public abstract class TriggerGenericEventByRefBehaviorConverter<T> : Converter<TriggerGenericEventByRefBehavior<T>, TriggerGenericEventBehavior<T>>, IConverter Type Parameters Name Description T Methods | Improve this Doc View Source PerformConversion(TriggerGenericEventByRefBehavior<T>) Returns an object which can replace the provided object. Declaration protected override TriggerGenericEventBehavior<T> PerformConversion(TriggerGenericEventByRefBehavior<T> oldBehavior) Parameters Type Name Description TriggerGenericEventByRefBehavior <T> oldBehavior Returns Type Description TriggerGenericEventBehavior <T> Overrides VRBuilder.Editor.ProcessUpgradeTool.Converter<VRBuilder.StatesAndData.Behaviors.TriggerGenericEventByRefBehavior<T>, VRBuilder.StatesAndData.Behaviors.TriggerGenericEventBehavior<T>>.PerformConversion(VRBuilder.StatesAndData.Behaviors.TriggerGenericEventByRefBehavior<T>) Implements IConverter"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.TriggerGenericEventByTagBehaviorConverter-1.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.TriggerGenericEventByTagBehaviorConverter-1.html",
    "title": "Class TriggerGenericEventByTagBehaviorConverter<T> | VR Builder Documentation",
    "keywords": "Class TriggerGenericEventByTagBehaviorConverter<T> Generic implementation to convert an obsolete TriggerGenericEventByTagBehavior<T> with a TriggerGenericEventBehavior<T> with the same configuration. Inheritance System.Object Converter < TriggerGenericEventByTagBehavior <T>, TriggerGenericEventBehavior <T>> TriggerGenericEventByTagBehaviorConverter<T> TriggerBoolEventByTagBehaviorConverter TriggerFloatEventByTagBehaviorConverter TriggerStringEventByTagBehaviorConverter Implements IConverter Inherited Members Converter<TriggerGenericEventByTagBehavior<T>, TriggerGenericEventBehavior<T>>.ConvertedType Converter<TriggerGenericEventByTagBehavior<T>, TriggerGenericEventBehavior<T>>.PerformConversion(TriggerGenericEventByTagBehavior<T>) Converter<TriggerGenericEventByTagBehavior<T>, TriggerGenericEventBehavior<T>>.Convert(Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public abstract class TriggerGenericEventByTagBehaviorConverter<T> : Converter<TriggerGenericEventByTagBehavior<T>, TriggerGenericEventBehavior<T>>, IConverter Type Parameters Name Description T Methods | Improve this Doc View Source PerformConversion(TriggerGenericEventByTagBehavior<T>) Returns an object which can replace the provided object. Declaration protected override TriggerGenericEventBehavior<T> PerformConversion(TriggerGenericEventByTagBehavior<T> oldBehavior) Parameters Type Name Description TriggerGenericEventByTagBehavior <T> oldBehavior Returns Type Description TriggerGenericEventBehavior <T> Overrides VRBuilder.Editor.ProcessUpgradeTool.Converter<VRBuilder.StatesAndData.Behaviors.TriggerGenericEventByTagBehavior<T>, VRBuilder.StatesAndData.Behaviors.TriggerGenericEventBehavior<T>>.PerformConversion(VRBuilder.StatesAndData.Behaviors.TriggerGenericEventByTagBehavior<T>) Implements IConverter"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.TriggerStringEventByRefBehaviorConverter.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.TriggerStringEventByRefBehaviorConverter.html",
    "title": "Class TriggerStringEventByRefBehaviorConverter | VR Builder Documentation",
    "keywords": "Class TriggerStringEventByRefBehaviorConverter Replaces an obsolete TriggerGenericEventByRefBehavior<T> with a TriggerGenericEventBehavior<T> with the same configuration. Inheritance System.Object Converter < TriggerGenericEventByRefBehavior < System.String >, TriggerGenericEventBehavior < System.String >> TriggerGenericEventByRefBehaviorConverter < System.String > TriggerStringEventByRefBehaviorConverter Implements IConverter Inherited Members TriggerGenericEventByRefBehaviorConverter<String>.PerformConversion(TriggerGenericEventByRefBehavior<String>) Converter<TriggerGenericEventByRefBehavior<String>, TriggerGenericEventBehavior<String>>.ConvertedType Converter<TriggerGenericEventByRefBehavior<String>, TriggerGenericEventBehavior<String>>.PerformConversion(TriggerGenericEventByRefBehavior<String>) Converter<TriggerGenericEventByRefBehavior<String>, TriggerGenericEventBehavior<String>>.Convert(Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class TriggerStringEventByRefBehaviorConverter : TriggerGenericEventByRefBehaviorConverter<string>, IConverter Implements IConverter"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.TriggerStringEventByTagBehaviorConverter.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.TriggerStringEventByTagBehaviorConverter.html",
    "title": "Class TriggerStringEventByTagBehaviorConverter | VR Builder Documentation",
    "keywords": "Class TriggerStringEventByTagBehaviorConverter Replaces an obsolete TriggerGenericEventByTagBehavior<T> with a TriggerGenericEventBehavior<T> with the same configuration. Inheritance System.Object Converter < TriggerGenericEventByTagBehavior < System.String >, TriggerGenericEventBehavior < System.String >> TriggerGenericEventByTagBehaviorConverter < System.String > TriggerStringEventByTagBehaviorConverter Implements IConverter Inherited Members TriggerGenericEventByTagBehaviorConverter<String>.PerformConversion(TriggerGenericEventByTagBehavior<String>) Converter<TriggerGenericEventByTagBehavior<String>, TriggerGenericEventBehavior<String>>.ConvertedType Converter<TriggerGenericEventByTagBehavior<String>, TriggerGenericEventBehavior<String>>.PerformConversion(TriggerGenericEventByTagBehavior<String>) Converter<TriggerGenericEventByTagBehavior<String>, TriggerGenericEventBehavior<String>>.Convert(Object) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class TriggerStringEventByTagBehaviorConverter : TriggerGenericEventByTagBehaviorConverter<string>, IConverter Implements IConverter"
  },
  "api/VRBuilder.Editor.ProcessUpgradeTool.Updater-1.html": {
    "href": "api/VRBuilder.Editor.ProcessUpgradeTool.Updater-1.html",
    "title": "Class Updater<T> | VR Builder Documentation",
    "keywords": "Class Updater<T> Generic implementation of IUpdater . Inheritance System.Object Updater<T> LockablePropertyReferenceUpdater NestedUpdater<T> Implements IUpdater Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessUpgradeTool Assembly : VRBuilder.Editor.dll Syntax public abstract class Updater<T> : IUpdater Type Parameters Name Description T Properties | Improve this Doc View Source UpdatedType Base type compatible with this updater. Declaration public Type UpdatedType { get; } Property Value Type Description System.Type Methods | Improve this Doc View Source Update(MemberInfo, Object) Updates the provided field or property. Declaration public abstract void Update(MemberInfo memberInfo, object owner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object owner Implements IUpdater"
  },
  "api/VRBuilder.Editor.ProcessValidation.EditorReportEntry.html": {
    "href": "api/VRBuilder.Editor.ProcessValidation.EditorReportEntry.html",
    "title": "Class EditorReportEntry | VR Builder Documentation",
    "keywords": "Class EditorReportEntry Report generated from validations of IValidator objects. Inheritance System.Object ReportEntry EditorReportEntry Inherited Members ReportEntry.ErrorLevel ReportEntry.Code ReportEntry.Message System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.ProcessValidation Assembly : VRBuilder.Editor.dll Syntax public class EditorReportEntry : ReportEntry Constructors | Improve this Doc View Source EditorReportEntry(IContext, IValidator, ReportEntry) Declaration public EditorReportEntry(IContext context, IValidator validator, ReportEntry entry) Parameters Type Name Description IContext context IValidator validator ReportEntry entry Fields | Improve this Doc View Source Context IContext where the issue is present. Declaration public readonly IContext Context Field Value Type Description IContext | Improve this Doc View Source Validator IValidator used to generate this EditorReportEntry . Declaration public readonly IValidator Validator Field Value Type Description IValidator Methods | Improve this Doc View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "api/VRBuilder.Editor.ProcessValidation.html": {
    "href": "api/VRBuilder.Editor.ProcessValidation.html",
    "title": "Namespace VRBuilder.Editor.ProcessValidation | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.ProcessValidation Classes EditorReportEntry Report generated from validations of IValidator objects. Interfaces IContext Context is used to indicate the position in the process structure. IContextResolver Retrieves IContext from any provided IData . IValidator Validator provides validation for a specific Type."
  },
  "api/VRBuilder.Editor.ProcessValidation.IContext.html": {
    "href": "api/VRBuilder.Editor.ProcessValidation.IContext.html",
    "title": "Interface IContext | VR Builder Documentation",
    "keywords": "Interface IContext Context is used to indicate the position in the process structure. Namespace : VRBuilder.Editor.ProcessValidation Assembly : VRBuilder.Editor.dll Syntax public interface IContext Properties | Improve this Doc View Source Parent Parent context, can be null. Declaration IContext Parent { get; } Property Value Type Description IContext Methods | Improve this Doc View Source ToString() Produces a readable string which allows us to find the context in editor. Declaration string ToString() Returns Type Description System.String"
  },
  "api/VRBuilder.Editor.ProcessValidation.IContextResolver.html": {
    "href": "api/VRBuilder.Editor.ProcessValidation.IContextResolver.html",
    "title": "Interface IContextResolver | VR Builder Documentation",
    "keywords": "Interface IContextResolver Retrieves IContext from any provided IData . Namespace : VRBuilder.Editor.ProcessValidation Assembly : VRBuilder.Editor.dll Syntax public interface IContextResolver Methods | Improve this Doc View Source FindContext(IData, IProcess) Resolves the fitting IContext for the given IData . Declaration IContext FindContext(IData data, IProcess process) Parameters Type Name Description IData data IProcess process Returns Type Description IContext"
  },
  "api/VRBuilder.Editor.ProcessValidation.IValidator.html": {
    "href": "api/VRBuilder.Editor.ProcessValidation.IValidator.html",
    "title": "Interface IValidator | VR Builder Documentation",
    "keywords": "Interface IValidator Validator provides validation for a specific Type. Namespace : VRBuilder.Editor.ProcessValidation Assembly : VRBuilder.Editor.dll Syntax public interface IValidator Properties | Improve this Doc View Source ValidatedContext Type of Context which is this is this validators scope. Declaration Type ValidatedContext { get; } Property Value Type Description System.Type | Improve this Doc View Source ValidatedType Type which is validated by this validator. Declaration Type ValidatedType { get; } Property Value Type Description System.Type Methods | Improve this Doc View Source CanValidate(Object) Will return true when the object can be validated by this validator. Declaration bool CanValidate(object validatableObject) Parameters Type Name Description System.Object validatableObject Object to validate. Returns Type Description System.Boolean True if object can be validated. | Improve this Doc View Source Validate(Object, IContext) Validates the given object. Declaration List<EditorReportEntry> Validate(object validatableObject, IContext context) Parameters Type Name Description System.Object validatableObject Object, which will be validated. IContext context Context of the validation. Returns Type Description System.Collections.Generic.List < EditorReportEntry > List of reports regarding invalid objects related to the validatableObject ."
  },
  "api/VRBuilder.Editor.Randomization.UI.Behaviors.html": {
    "href": "api/VRBuilder.Editor.Randomization.UI.Behaviors.html",
    "title": "Namespace VRBuilder.Editor.Randomization.UI.Behaviors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.Randomization.UI.Behaviors Classes ResetValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . SetBooleanValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . SetNumberValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . SetRandomBooleanMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . SetRandomNumberMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() ."
  },
  "api/VRBuilder.Editor.Randomization.UI.Behaviors.ResetValueMenuItem.html": {
    "href": "api/VRBuilder.Editor.Randomization.UI.Behaviors.ResetValueMenuItem.html",
    "title": "Class ResetValueMenuItem | VR Builder Documentation",
    "keywords": "Class ResetValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > ResetValueMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Randomization.UI.Behaviors Assembly : VRBuilder.Editor.Randomization.dll Syntax public class ResetValueMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.Randomization.UI.Behaviors.SetBooleanValueMenuItem.html": {
    "href": "api/VRBuilder.Editor.Randomization.UI.Behaviors.SetBooleanValueMenuItem.html",
    "title": "Class SetBooleanValueMenuItem | VR Builder Documentation",
    "keywords": "Class SetBooleanValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetBooleanValueMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Randomization.UI.Behaviors Assembly : VRBuilder.Editor.Randomization.dll Syntax public class SetBooleanValueMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.Randomization.UI.Behaviors.SetNumberValueMenuItem.html": {
    "href": "api/VRBuilder.Editor.Randomization.UI.Behaviors.SetNumberValueMenuItem.html",
    "title": "Class SetNumberValueMenuItem | VR Builder Documentation",
    "keywords": "Class SetNumberValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetNumberValueMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Randomization.UI.Behaviors Assembly : VRBuilder.Editor.Randomization.dll Syntax public class SetNumberValueMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.Randomization.UI.Behaviors.SetRandomBooleanMenuItem.html": {
    "href": "api/VRBuilder.Editor.Randomization.UI.Behaviors.SetRandomBooleanMenuItem.html",
    "title": "Class SetRandomBooleanMenuItem | VR Builder Documentation",
    "keywords": "Class SetRandomBooleanMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetRandomBooleanMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Randomization.UI.Behaviors Assembly : VRBuilder.Editor.Randomization.dll Syntax public class SetRandomBooleanMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.Randomization.UI.Behaviors.SetRandomNumberMenuItem.html": {
    "href": "api/VRBuilder.Editor.Randomization.UI.Behaviors.SetRandomNumberMenuItem.html",
    "title": "Class SetRandomNumberMenuItem | VR Builder Documentation",
    "keywords": "Class SetRandomNumberMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetRandomNumberMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Randomization.UI.Behaviors Assembly : VRBuilder.Editor.Randomization.dll Syntax public class SetRandomNumberMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.Randomization.UI.Conditions.CompareBooleansMenuItem.html": {
    "href": "api/VRBuilder.Editor.Randomization.UI.Conditions.CompareBooleansMenuItem.html",
    "title": "Class CompareBooleansMenuItem | VR Builder Documentation",
    "keywords": "Class CompareBooleansMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > CompareBooleansMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Randomization.UI.Conditions Assembly : VRBuilder.Editor.Randomization.dll Syntax public class CompareBooleansMenuItem : MenuItem<ICondition> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.Randomization.UI.Conditions.CompareNumbersMenuItem.html": {
    "href": "api/VRBuilder.Editor.Randomization.UI.Conditions.CompareNumbersMenuItem.html",
    "title": "Class CompareNumbersMenuItem | VR Builder Documentation",
    "keywords": "Class CompareNumbersMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > CompareNumbersMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Randomization.UI.Conditions Assembly : VRBuilder.Editor.Randomization.dll Syntax public class CompareNumbersMenuItem : MenuItem<ICondition> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.Randomization.UI.Conditions.html": {
    "href": "api/VRBuilder.Editor.Randomization.UI.Conditions.html",
    "title": "Namespace VRBuilder.Editor.Randomization.UI.Conditions | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.Randomization.UI.Conditions Classes CompareBooleansMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . CompareNumbersMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() ."
  },
  "api/VRBuilder.Editor.Randomization.UI.Graphics.html": {
    "href": "api/VRBuilder.Editor.Randomization.UI.Graphics.html",
    "title": "Namespace VRBuilder.Editor.Randomization.UI.Graphics | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.Randomization.UI.Graphics Classes RandomBranchGraphNode Graphical representation of a random branch node. RandomBranchNodeInstantiator Instantiator for a RandomBranchGraphNode ."
  },
  "api/VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.html": {
    "href": "api/VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchGraphNode.html",
    "title": "Class RandomBranchGraphNode | VR Builder Documentation",
    "keywords": "Class RandomBranchGraphNode Graphical representation of a random branch node. Inheritance System.Object ProcessGraphNode StepGraphNode RandomBranchGraphNode Inherited Members StepGraphNode.step StepGraphNode.Name StepGraphNode.EntryPoint StepGraphNode.Outputs StepGraphNode.Position StepGraphNode.Refresh() StepGraphNode.RemovePort(Port) StepGraphNode.RemovePortWithUndo(Port) StepGraphNode.OnSelected() StepGraphNode.SetOutput(Int32, IStep) StepGraphNode.AddToChapter(IChapter) StepGraphNode.RemoveFromChapter(IChapter) StepGraphNode.UpdateOutputPortName(Port, Node) ProcessGraphNode.deleteIconFileName ProcessGraphNode.editIconFileName ProcessGraphNode.defaultNodeSize ProcessGraphNode.IsEntryPoint ProcessGraphNode.CreatePort(Direction, Port.Capacity) ProcessGraphNode.GetIcon(String) ProcessGraphNode.OpenTextEditor() ProcessGraphNode.OnEditTextFinished(TextField) Namespace : VRBuilder.Editor.Randomization.UI.Graphics Assembly : VRBuilder.Editor.Randomization.dll Syntax public class RandomBranchGraphNode : StepGraphNode Constructors | Improve this Doc View Source RandomBranchGraphNode(IStep) Declaration public RandomBranchGraphNode(IStep step) Parameters Type Name Description IStep step Methods | Improve this Doc View Source AddTransitionPort(Boolean, Int32) Adds a potentially deletable transition port to this node. Declaration public override Port AddTransitionPort(bool isDeletablePort = true, int index = -1) Parameters Type Name Description System.Boolean isDeletablePort If true, a delete button is created which allows to delete the transition. System.Int32 index Index where to insert the port, if blank it will be added at the end of the list. Returns Type Description Port The created port. Overrides ProcessGraphNode.AddTransitionPort(Boolean, Int32) | Improve this Doc View Source CreatePortWithUndo() Creates a transition port supporting undo. Declaration protected override void CreatePortWithUndo() Overrides StepGraphNode.CreatePortWithUndo()"
  },
  "api/VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchNodeInstantiator.html": {
    "href": "api/VRBuilder.Editor.Randomization.UI.Graphics.RandomBranchNodeInstantiator.html",
    "title": "Class RandomBranchNodeInstantiator | VR Builder Documentation",
    "keywords": "Class RandomBranchNodeInstantiator Instantiator for a RandomBranchGraphNode . Inheritance System.Object RandomBranchNodeInstantiator Implements IStepNodeInstantiator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Randomization.UI.Graphics Assembly : VRBuilder.Editor.Randomization.dll Syntax public class RandomBranchNodeInstantiator : IStepNodeInstantiator Properties | Improve this Doc View Source IsInNodeMenu If true, it will appear in the node menu. Declaration public bool IsInNodeMenu { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Display name of the instantiated node. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Priority Nodes with a lower value will appear first in the menu. Declaration public int Priority { get; } Property Value Type Description System.Int32 | Improve this Doc View Source StepType Step type metadata. Declaration public string StepType { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetContextMenuStatus(IEventHandler, IChapter) Declaration public DropdownMenuAction.Status GetContextMenuStatus(IEventHandler target, IChapter currentChapter) Parameters Type Name Description IEventHandler target IChapter currentChapter Returns Type Description DropdownMenuAction.Status | Improve this Doc View Source InstantiateNode(IStep) Creates a graphview node of the corresponding type. Declaration public ProcessGraphNode InstantiateNode(IStep step) Parameters Type Name Description IStep step Returns Type Description ProcessGraphNode Implements IStepNodeInstantiator"
  },
  "api/VRBuilder.Editor.SceneSetup.html": {
    "href": "api/VRBuilder.Editor.SceneSetup.html",
    "title": "Class SceneSetup | VR Builder Documentation",
    "keywords": "Class SceneSetup This base class is supposed to be implemented by classes which will be called to setup the scene. Can be used to e.g. setup process classes or interaction frameworks. Inheritance System.Object SceneSetup InteractionFrameworkSceneSetup DefaultRigSceneSetup RigLoaderSceneSetup ProcessControllerSceneSetup Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor Assembly : VRBuilder.Editor.dll Syntax public abstract class SceneSetup Remarks See as a reference. Properties | Improve this Doc View Source Key Identifier key for specific scene setup types, e.g. for every interaction framework. Declaration public virtual string Key { get; } Property Value Type Description System.String | Improve this Doc View Source Priority Priority lets you tweak in which order different SceneSetup s will be performed. The priority is considered from lowest to highest. Declaration public virtual int Priority { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source FindPrefab(String) Finds and returns a prefab Declaration protected GameObject FindPrefab(string prefab) Parameters Type Name Description System.String prefab Name or path to the target resource to setup. Returns Type Description GameObject Remarks Extensions must be omitted. All asset names and paths in Unity use forward slashes, paths using backslashes will not work. Exceptions Type Condition System.IO.FileNotFoundException Exception thrown if no prefab can be found in project with given prefab . | Improve this Doc View Source IsPrefabMissingInScene(String) Returns true if given prefabName is missing in current scene. Declaration protected bool IsPrefabMissingInScene(string prefabName) Parameters Type Name Description System.String prefabName Returns Type Description System.Boolean | Improve this Doc View Source Setup(ISceneSetupConfiguration) Setup the scene with necessary objects and/or logic. Declaration public abstract void Setup(ISceneSetupConfiguration configuration) Parameters Type Name Description ISceneSetupConfiguration configuration | Improve this Doc View Source SetupPrefab(String) Sets up given prefab in current scene. Declaration protected GameObject SetupPrefab(string prefab) Parameters Type Name Description System.String prefab Name or path to the target resource to setup. Returns Type Description GameObject Remarks Extensions must be omitted. All asset names and paths in Unity use forward slashes, paths using backslashes will not work. Exceptions Type Condition System.IO.FileNotFoundException Exception thrown if no prefab can be found in project with given prefab ."
  },
  "api/VRBuilder.Editor.Serialization.html": {
    "href": "api/VRBuilder.Editor.Serialization.html",
    "title": "Namespace VRBuilder.Editor.Serialization | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.Serialization Classes JsonEditorConfigurationSerializer"
  },
  "api/VRBuilder.Editor.Serialization.JsonEditorConfigurationSerializer.html": {
    "href": "api/VRBuilder.Editor.Serialization.JsonEditorConfigurationSerializer.html",
    "title": "Class JsonEditorConfigurationSerializer | VR Builder Documentation",
    "keywords": "Class JsonEditorConfigurationSerializer Inheritance System.Object JsonEditorConfigurationSerializer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Serialization Assembly : VRBuilder.Editor.dll Syntax public static class JsonEditorConfigurationSerializer Properties | Improve this Doc View Source SerializerSettings Returns the json serializer settings used by the process editor configuration deserialization. Declaration public static JsonSerializerSettings SerializerSettings { get; } Property Value Type Description Newtonsoft.Json.JsonSerializerSettings Methods | Improve this Doc View Source Deserialize(String) Declaration public static AllowedMenuItemsSettings Deserialize(string serialized) Parameters Type Name Description System.String serialized Returns Type Description AllowedMenuItemsSettings | Improve this Doc View Source Serialize(AllowedMenuItemsSettings) Declaration public static string Serialize(AllowedMenuItemsSettings deserialized) Parameters Type Name Description AllowedMenuItemsSettings deserialized Returns Type Description System.String"
  },
  "api/VRBuilder.Editor.Settings.BuilderProjectSettings.html": {
    "href": "api/VRBuilder.Editor.Settings.BuilderProjectSettings.html",
    "title": "Class BuilderProjectSettings | VR Builder Documentation",
    "keywords": "Class BuilderProjectSettings Settings for a VR Builder Unity project. Inheritance System.Object BuilderProjectSettings Namespace : VRBuilder.Editor.Settings Assembly : VRBuilder.Editor.dll Syntax public class BuilderProjectSettings : ScriptableObject Fields | Improve this Doc View Source IsFirstTimeStarted Was VR Builder imported and therefore started for the first time. Declaration public bool IsFirstTimeStarted Field Value Type Description System.Boolean | Improve this Doc View Source OpenXRControllerProfiles Declaration public List<string> OpenXRControllerProfiles Field Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source ProjectBuilderVersion Builder version used last time this was checked. Declaration public string ProjectBuilderVersion Field Value Type Description System.String | Improve this Doc View Source XRSDKs Declaration public List<XRLoaderHelper.XRSDK> XRSDKs Field Value Type Description System.Collections.Generic.List < XRLoaderHelper.XRSDK > Methods | Improve this Doc View Source Load() Loads the VR Builder settings for this Unity project from Resources. Declaration public static BuilderProjectSettings Load() Returns Type Description BuilderProjectSettings Settings | Improve this Doc View Source Save() Saves the VR Builder settings. Declaration public void Save()"
  },
  "api/VRBuilder.Editor.Settings.html": {
    "href": "api/VRBuilder.Editor.Settings.html",
    "title": "Namespace VRBuilder.Editor.Settings | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.Settings Classes BuilderProjectSettings Settings for a VR Builder Unity project. InteractionComponentSettings Settings related to VR Builder's interaction component."
  },
  "api/VRBuilder.Editor.Settings.InteractionComponentSettings.html": {
    "href": "api/VRBuilder.Editor.Settings.InteractionComponentSettings.html",
    "title": "Class InteractionComponentSettings | VR Builder Documentation",
    "keywords": "Class InteractionComponentSettings Settings related to VR Builder's interaction component. Inheritance System.Object SettingsObject < InteractionComponentSettings > InteractionComponentSettings Inherited Members SettingsObject<InteractionComponentSettings>.Instance SettingsObject<InteractionComponentSettings>.Save() Namespace : VRBuilder.Editor.Settings Assembly : VRBuilder.Editor.dll Syntax public class InteractionComponentSettings : SettingsObject<InteractionComponentSettings> Fields | Improve this Doc View Source EnableXRInteractionComponent Declaration public bool EnableXRInteractionComponent Field Value Type Description System.Boolean"
  },
  "api/VRBuilder.Editor.Setup.DefaultSceneSetupConfiguration.html": {
    "href": "api/VRBuilder.Editor.Setup.DefaultSceneSetupConfiguration.html",
    "title": "Class DefaultSceneSetupConfiguration | VR Builder Documentation",
    "keywords": "Class DefaultSceneSetupConfiguration Default configuration. Inheritance System.Object DefaultSceneSetupConfiguration Implements ISceneSetupConfiguration Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Setup Assembly : VRBuilder.Editor.dll Syntax public class DefaultSceneSetupConfiguration : ISceneSetupConfiguration Properties | Improve this Doc View Source AllowedExtensionAssemblies Returns the names of the assemblies which contain allowed extensions. Declaration public IEnumerable<string> AllowedExtensionAssemblies { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > | Improve this Doc View Source DefaultConfettiPrefab Default resources prefab to use for Confetti behavior. Declaration public string DefaultConfettiPrefab { get; } Property Value Type Description System.String | Improve this Doc View Source DefaultProcessController Default process controller to use in this configuration. Declaration public string DefaultProcessController { get; } Property Value Type Description System.String | Improve this Doc View Source Description Detailed description of the configuration. Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Name Display name of the configuration. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Priority Priority of this configuration. Declaration public int Priority { get; } Property Value Type Description System.Int32 | Improve this Doc View Source RuntimeConfigurationName Name of the runtime configuration to use. Declaration public string RuntimeConfigurationName { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetSetupNames() Gets the required scene setup actions for this configuration. Declaration public IEnumerable<string> GetSetupNames() Returns Type Description System.Collections.Generic.IEnumerable < System.String > Implements ISceneSetupConfiguration"
  },
  "api/VRBuilder.Editor.Setup.html": {
    "href": "api/VRBuilder.Editor.Setup.html",
    "title": "Namespace VRBuilder.Editor.Setup | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.Setup Classes DefaultSceneSetupConfiguration Default configuration. InputSystemChecker RigLoaderSceneSetupConfiguration Basic configuration with rig loader. Interfaces ISceneSetupConfiguration Defines the configuration for a particular scene setup."
  },
  "api/VRBuilder.Editor.Setup.InputSystemChecker.html": {
    "href": "api/VRBuilder.Editor.Setup.InputSystemChecker.html",
    "title": "Class InputSystemChecker | VR Builder Documentation",
    "keywords": "Class InputSystemChecker Inheritance System.Object InputSystemChecker Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Setup Assembly : VRBuilder.Editor.dll Syntax public static class InputSystemChecker"
  },
  "api/VRBuilder.Editor.Setup.ISceneSetupConfiguration.html": {
    "href": "api/VRBuilder.Editor.Setup.ISceneSetupConfiguration.html",
    "title": "Interface ISceneSetupConfiguration | VR Builder Documentation",
    "keywords": "Interface ISceneSetupConfiguration Defines the configuration for a particular scene setup. Namespace : VRBuilder.Editor.Setup Assembly : VRBuilder.Editor.dll Syntax public interface ISceneSetupConfiguration Properties | Improve this Doc View Source AllowedExtensionAssemblies Returns the names of the assemblies which contain allowed extensions. Declaration IEnumerable<string> AllowedExtensionAssemblies { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > | Improve this Doc View Source DefaultConfettiPrefab Default resources prefab to use for Confetti behavior. Declaration string DefaultConfettiPrefab { get; } Property Value Type Description System.String | Improve this Doc View Source DefaultProcessController Default process controller to use in this configuration. Declaration string DefaultProcessController { get; } Property Value Type Description System.String | Improve this Doc View Source Description Detailed description of the configuration. Declaration string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Name Display name of the configuration. Declaration string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Priority Priority of this configuration. Declaration int Priority { get; } Property Value Type Description System.Int32 | Improve this Doc View Source RuntimeConfigurationName Name of the runtime configuration to use. Declaration string RuntimeConfigurationName { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetSetupNames() Gets the required scene setup actions for this configuration. Declaration IEnumerable<string> GetSetupNames() Returns Type Description System.Collections.Generic.IEnumerable < System.String >"
  },
  "api/VRBuilder.Editor.Setup.RigLoaderSceneSetupConfiguration.html": {
    "href": "api/VRBuilder.Editor.Setup.RigLoaderSceneSetupConfiguration.html",
    "title": "Class RigLoaderSceneSetupConfiguration | VR Builder Documentation",
    "keywords": "Class RigLoaderSceneSetupConfiguration Basic configuration with rig loader. Inheritance System.Object RigLoaderSceneSetupConfiguration Implements ISceneSetupConfiguration Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Setup Assembly : VRBuilder.Editor.dll Syntax public class RigLoaderSceneSetupConfiguration : ISceneSetupConfiguration Properties | Improve this Doc View Source AllowedExtensionAssemblies Returns the names of the assemblies which contain allowed extensions. Declaration public IEnumerable<string> AllowedExtensionAssemblies { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > | Improve this Doc View Source DefaultConfettiPrefab Default resources prefab to use for Confetti behavior. Declaration public string DefaultConfettiPrefab { get; } Property Value Type Description System.String | Improve this Doc View Source DefaultProcessController Default process controller to use in this configuration. Declaration public string DefaultProcessController { get; } Property Value Type Description System.String | Improve this Doc View Source Description Detailed description of the configuration. Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Name Display name of the configuration. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Priority Priority of this configuration. Declaration public int Priority { get; } Property Value Type Description System.Int32 | Improve this Doc View Source RuntimeConfigurationName Name of the runtime configuration to use. Declaration public string RuntimeConfigurationName { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetSetupNames() Gets the required scene setup actions for this configuration. Declaration public IEnumerable<string> GetSetupNames() Returns Type Description System.Collections.Generic.IEnumerable < System.String > Implements ISceneSetupConfiguration"
  },
  "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.html": {
    "href": "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.html",
    "title": "Namespace VRBuilder.Editor.StatesAndData.UI.Behaviors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.StatesAndData.UI.Behaviors Classes MathOperationMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . ResetValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . SetBooleanValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . SetNumberValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . SetStateValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . SetTextValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . TriggerBooleanEventByTagMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . TriggerEventMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . TriggerFloatEventMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . TriggerStringEventMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() ."
  },
  "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.MathOperationMenuItem.html": {
    "href": "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.MathOperationMenuItem.html",
    "title": "Class MathOperationMenuItem | VR Builder Documentation",
    "keywords": "Class MathOperationMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > MathOperationMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.StatesAndData.UI.Behaviors Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class MathOperationMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.ResetValueMenuItem.html": {
    "href": "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.ResetValueMenuItem.html",
    "title": "Class ResetValueMenuItem | VR Builder Documentation",
    "keywords": "Class ResetValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > ResetValueMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.StatesAndData.UI.Behaviors Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class ResetValueMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.SetBooleanValueMenuItem.html": {
    "href": "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.SetBooleanValueMenuItem.html",
    "title": "Class SetBooleanValueMenuItem | VR Builder Documentation",
    "keywords": "Class SetBooleanValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetBooleanValueMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.StatesAndData.UI.Behaviors Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class SetBooleanValueMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.SetNumberValueMenuItem.html": {
    "href": "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.SetNumberValueMenuItem.html",
    "title": "Class SetNumberValueMenuItem | VR Builder Documentation",
    "keywords": "Class SetNumberValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetNumberValueMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.StatesAndData.UI.Behaviors Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class SetNumberValueMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.SetStateValueMenuItem.html": {
    "href": "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.SetStateValueMenuItem.html",
    "title": "Class SetStateValueMenuItem | VR Builder Documentation",
    "keywords": "Class SetStateValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetStateValueMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.StatesAndData.UI.Behaviors Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class SetStateValueMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.SetTextValueMenuItem.html": {
    "href": "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.SetTextValueMenuItem.html",
    "title": "Class SetTextValueMenuItem | VR Builder Documentation",
    "keywords": "Class SetTextValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetTextValueMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.StatesAndData.UI.Behaviors Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class SetTextValueMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.TriggerBooleanEventByTagMenuItem.html": {
    "href": "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.TriggerBooleanEventByTagMenuItem.html",
    "title": "Class TriggerBooleanEventByTagMenuItem | VR Builder Documentation",
    "keywords": "Class TriggerBooleanEventByTagMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > TriggerBooleanEventByTagMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.StatesAndData.UI.Behaviors Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class TriggerBooleanEventByTagMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.TriggerEventMenuItem.html": {
    "href": "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.TriggerEventMenuItem.html",
    "title": "Class TriggerEventMenuItem | VR Builder Documentation",
    "keywords": "Class TriggerEventMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > TriggerEventMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.StatesAndData.UI.Behaviors Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class TriggerEventMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.TriggerFloatEventMenuItem.html": {
    "href": "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.TriggerFloatEventMenuItem.html",
    "title": "Class TriggerFloatEventMenuItem | VR Builder Documentation",
    "keywords": "Class TriggerFloatEventMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > TriggerFloatEventMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.StatesAndData.UI.Behaviors Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class TriggerFloatEventMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.TriggerStringEventMenuItem.html": {
    "href": "api/VRBuilder.Editor.StatesAndData.UI.Behaviors.TriggerStringEventMenuItem.html",
    "title": "Class TriggerStringEventMenuItem | VR Builder Documentation",
    "keywords": "Class TriggerStringEventMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > TriggerStringEventMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.StatesAndData.UI.Behaviors Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class TriggerStringEventMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.StatesAndData.UI.Conditions.CheckStateMenuItem.html": {
    "href": "api/VRBuilder.Editor.StatesAndData.UI.Conditions.CheckStateMenuItem.html",
    "title": "Class CheckStateMenuItem | VR Builder Documentation",
    "keywords": "Class CheckStateMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > CheckStateMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.StatesAndData.UI.Conditions Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class CheckStateMenuItem : MenuItem<ICondition> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.StatesAndData.UI.Conditions.CompareBooleansMenuItem.html": {
    "href": "api/VRBuilder.Editor.StatesAndData.UI.Conditions.CompareBooleansMenuItem.html",
    "title": "Class CompareBooleansMenuItem | VR Builder Documentation",
    "keywords": "Class CompareBooleansMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > CompareBooleansMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.StatesAndData.UI.Conditions Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class CompareBooleansMenuItem : MenuItem<ICondition> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.StatesAndData.UI.Conditions.CompareNumbersMenuItem.html": {
    "href": "api/VRBuilder.Editor.StatesAndData.UI.Conditions.CompareNumbersMenuItem.html",
    "title": "Class CompareNumbersMenuItem | VR Builder Documentation",
    "keywords": "Class CompareNumbersMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > CompareNumbersMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.StatesAndData.UI.Conditions Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class CompareNumbersMenuItem : MenuItem<ICondition> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.StatesAndData.UI.Conditions.CompareTextMenuItem.html": {
    "href": "api/VRBuilder.Editor.StatesAndData.UI.Conditions.CompareTextMenuItem.html",
    "title": "Class CompareTextMenuItem | VR Builder Documentation",
    "keywords": "Class CompareTextMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > CompareTextMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.StatesAndData.UI.Conditions Assembly : VRBuilder.Editor.StatesAndData.dll Syntax public class CompareTextMenuItem : MenuItem<ICondition> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.StatesAndData.UI.Conditions.html": {
    "href": "api/VRBuilder.Editor.StatesAndData.UI.Conditions.html",
    "title": "Namespace VRBuilder.Editor.StatesAndData.UI.Conditions | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.StatesAndData.UI.Conditions Classes CheckStateMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . CompareBooleansMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . CompareNumbersMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . CompareTextMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() ."
  },
  "api/VRBuilder.Editor.StatesAndData.UI.Drawers.CheckStateDrawer.html": {
    "href": "api/VRBuilder.Editor.StatesAndData.UI.Drawers.CheckStateDrawer.html",
    "title": "Class CheckStateDrawer | VR Builder Documentation",
    "keywords": "Class CheckStateDrawer Custom drawer for CheckStateCondition . Inheritance System.Object AbstractDrawer ObjectDrawer NameableDrawer CheckStateDrawer Implements IProcessDrawer Inherited Members NameableDrawer.DrawLabel(Rect, Object, Action<Object>, GUIContent) ObjectDrawer.CheckValidationForValue(Object, MemberInfo, GUIContent) ObjectDrawer.AddValidationInformation(GUIContent, List<EditorReportEntry>) ObjectDrawer.GetValidationReports(Object) ObjectDrawer.GetValidationReportsFor(IData, MemberInfo) ObjectDrawer.GetLabel(MemberInfo, Object) ObjectDrawer.GetLabel(Object, Type) ObjectDrawer.GetMembersToDraw(Object) ObjectDrawer.GetTypeNameLabel(Object, Type) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.StatesAndData.UI.Drawers Assembly : VRBuilder.Editor.StatesAndData.dll Syntax [DefaultProcessDrawer(typeof(CheckStateCondition.EntityData))] public class CheckStateDrawer : NameableDrawer, IProcessDrawer Methods | Improve this Doc View Source Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback GUIContent label Returns Type Description Rect Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.StatesAndData.UI.Drawers.html": {
    "href": "api/VRBuilder.Editor.StatesAndData.UI.Drawers.html",
    "title": "Namespace VRBuilder.Editor.StatesAndData.UI.Drawers | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.StatesAndData.UI.Drawers Classes CheckStateDrawer Custom drawer for CheckStateCondition . SetStateDrawer Custom drawer for SetStateBehavior ."
  },
  "api/VRBuilder.Editor.StatesAndData.UI.Drawers.SetStateDrawer.html": {
    "href": "api/VRBuilder.Editor.StatesAndData.UI.Drawers.SetStateDrawer.html",
    "title": "Class SetStateDrawer | VR Builder Documentation",
    "keywords": "Class SetStateDrawer Custom drawer for SetStateBehavior . Inheritance System.Object AbstractDrawer ObjectDrawer NameableDrawer SetStateDrawer Implements IProcessDrawer Inherited Members NameableDrawer.DrawLabel(Rect, Object, Action<Object>, GUIContent) ObjectDrawer.CheckValidationForValue(Object, MemberInfo, GUIContent) ObjectDrawer.AddValidationInformation(GUIContent, List<EditorReportEntry>) ObjectDrawer.GetValidationReports(Object) ObjectDrawer.GetValidationReportsFor(IData, MemberInfo) ObjectDrawer.GetLabel(MemberInfo, Object) ObjectDrawer.GetLabel(Object, Type) ObjectDrawer.GetMembersToDraw(Object) ObjectDrawer.GetTypeNameLabel(Object, Type) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.StatesAndData.UI.Drawers Assembly : VRBuilder.Editor.StatesAndData.dll Syntax [DefaultProcessDrawer(typeof(SetStateBehavior.EntityData))] public class SetStateDrawer : NameableDrawer, IProcessDrawer Methods | Improve this Doc View Source Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback GUIContent label Returns Type Description Rect Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.TestableEditorElements.DisabledMenuItem.html": {
    "href": "api/VRBuilder.Editor.TestableEditorElements.DisabledMenuItem.html",
    "title": "Class TestableEditorElements.DisabledMenuItem | VR Builder Documentation",
    "keywords": "Class TestableEditorElements.DisabledMenuItem Inheritance System.Object TestableEditorElements.MenuOption TestableEditorElements.DisabledMenuItem Inherited Members TestableEditorElements.MenuOption.Label System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor Assembly : VRBuilder.Editor.dll Syntax public sealed class DisabledMenuItem : TestableEditorElements.MenuOption Constructors | Improve this Doc View Source DisabledMenuItem(GUIContent) Declaration public DisabledMenuItem(GUIContent label) Parameters Type Name Description GUIContent label"
  },
  "api/VRBuilder.Editor.TestableEditorElements.DisplayMode.html": {
    "href": "api/VRBuilder.Editor.TestableEditorElements.DisplayMode.html",
    "title": "Enum TestableEditorElements.DisplayMode | VR Builder Documentation",
    "keywords": "Enum TestableEditorElements.DisplayMode Namespace : VRBuilder.Editor Assembly : VRBuilder.Editor.dll Syntax public enum DisplayMode Fields Name Description Normal Playback Recording"
  },
  "api/VRBuilder.Editor.TestableEditorElements.html": {
    "href": "api/VRBuilder.Editor.TestableEditorElements.html",
    "title": "Class TestableEditorElements | VR Builder Documentation",
    "keywords": "Class TestableEditorElements Inheritance System.Object TestableEditorElements Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor Assembly : VRBuilder.Editor.dll Syntax public static class TestableEditorElements Properties | Improve this Doc View Source Mode Declaration public static TestableEditorElements.DisplayMode Mode { get; } Property Value Type Description TestableEditorElements.DisplayMode Methods | Improve this Doc View Source ClearProgressBar() Declaration public static void ClearProgressBar() | Improve this Doc View Source DisplayCancelableProgressBar(String, String, Single) If you want to be able to test your editor windows, you should use EditorUtils instead of EditorUtility. If EditorUtils.Mode is set to Recording, it saves the user input. If EditorUtils.Mode is set to Playback, it returns a stored value instead of actually calling its EditorUtility counterpart. IF EditorUtils.Mode is set to Normal, it just calls its EditorUtility counterpart. Declaration public static bool DisplayCancelableProgressBar(string title, string info, float progress) Parameters Type Name Description System.String title System.String info System.Single progress Returns Type Description System.Boolean | Improve this Doc View Source DisplayContextMenu(IList<TestableEditorElements.MenuOption>) Declaration public static void DisplayContextMenu(IList<TestableEditorElements.MenuOption> options) Parameters Type Name Description System.Collections.Generic.IList < TestableEditorElements.MenuOption > options | Improve this Doc View Source DisplayDialog(String, String, String, String) DisplayCancelableProgressBar(String, String, Single) Declaration public static bool DisplayDialog(string title, string message, string ok, string cancel = \"\") Parameters Type Name Description System.String title System.String message System.String ok System.String cancel Returns Type Description System.Boolean | Improve this Doc View Source DisplayDialogComplex(String, String, String, String, String) DisplayCancelableProgressBar(String, String, Single) Declaration public static int DisplayDialogComplex(string title, string message, string ok, string cancel, string alt) Parameters Type Name Description System.String title System.String message System.String ok System.String cancel System.String alt Returns Type Description System.Int32 | Improve this Doc View Source DisplayDropdownMenu(Rect, IList<TestableEditorElements.MenuOption>) Declaration public static void DisplayDropdownMenu(Rect position, IList<TestableEditorElements.MenuOption> options) Parameters Type Name Description Rect position System.Collections.Generic.IList < TestableEditorElements.MenuOption > options | Improve this Doc View Source DisplayProgressBar(String, String, Single) DisplayCancelableProgressBar(String, String, Single) Declaration public static void DisplayProgressBar(string title, string info, float progress) Parameters Type Name Description System.String title System.String info System.Single progress | Improve this Doc View Source OpenFilePanel(String, String, String) DisplayCancelableProgressBar(String, String, Single) Declaration public static string OpenFilePanel(string title, string directory, string extension) Parameters Type Name Description System.String title System.String directory System.String extension Returns Type Description System.String | Improve this Doc View Source OpenFilePanelWithFilters(String, String, String[]) DisplayCancelableProgressBar(String, String, Single) Declaration public static string OpenFilePanelWithFilters(string title, string directory, string[] filters) Parameters Type Name Description System.String title System.String directory System.String [] filters Returns Type Description System.String | Improve this Doc View Source OpenFolderPanel(String, String, String) DisplayCancelableProgressBar(String, String, Single) Declaration public static string OpenFolderPanel(string title, string folder, string defaultName) Parameters Type Name Description System.String title System.String folder System.String defaultName Returns Type Description System.String | Improve this Doc View Source Panic() Stop recording/replaying user actions and clear the stack. Declaration public static void Panic() | Improve this Doc View Source SaveFilePanel(String, String, String, String) DisplayCancelableProgressBar(String, String, Single) Declaration public static string SaveFilePanel(string title, string directory, string defaultName, string extension) Parameters Type Name Description System.String title System.String directory System.String defaultName System.String extension Returns Type Description System.String | Improve this Doc View Source SaveFilePanelInProject(String, String, String, String) DisplayCancelableProgressBar(String, String, Single) Declaration public static string SaveFilePanelInProject(string title, string defaultName, string extension, string message) Parameters Type Name Description System.String title System.String defaultName System.String extension System.String message Returns Type Description System.String | Improve this Doc View Source SaveFolderPanel(String, String, String) DisplayCancelableProgressBar(String, String, Single) Declaration public static string SaveFolderPanel(string title, string folder, string defaultName) Parameters Type Name Description System.String title System.String folder System.String defaultName Returns Type Description System.String | Improve this Doc View Source StartPlayback(List<String>) Declaration public static void StartPlayback(List<string> selections) Parameters Type Name Description System.Collections.Generic.List < System.String > selections | Improve this Doc View Source StartRecording() Declaration public static void StartRecording() | Improve this Doc View Source StopPlayback() Declaration public static void StopPlayback() | Improve this Doc View Source StopRecording() Declaration public static List<string> StopRecording() Returns Type Description System.Collections.Generic.List < System.String >"
  },
  "api/VRBuilder.Editor.TestableEditorElements.MenuItem.html": {
    "href": "api/VRBuilder.Editor.TestableEditorElements.MenuItem.html",
    "title": "Class TestableEditorElements.MenuItem | VR Builder Documentation",
    "keywords": "Class TestableEditorElements.MenuItem Inheritance System.Object TestableEditorElements.MenuOption TestableEditorElements.MenuItem Inherited Members TestableEditorElements.MenuOption.Label System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor Assembly : VRBuilder.Editor.dll Syntax public sealed class MenuItem : TestableEditorElements.MenuOption Constructors | Improve this Doc View Source MenuItem(GUIContent, Boolean, GenericMenu.MenuFunction) Declaration public MenuItem(GUIContent label, bool on, GenericMenu.MenuFunction func) Parameters Type Name Description GUIContent label System.Boolean on GenericMenu.MenuFunction func | Improve this Doc View Source MenuItem(GUIContent, Boolean, GenericMenu.MenuFunction2, Object) Declaration public MenuItem(GUIContent label, bool on, GenericMenu.MenuFunction2 func, object userData) Parameters Type Name Description GUIContent label System.Boolean on GenericMenu.MenuFunction2 func System.Object userData Properties | Improve this Doc View Source Func Declaration public GenericMenu.MenuFunction Func { get; } Property Value Type Description GenericMenu.MenuFunction | Improve this Doc View Source Func2 Declaration public GenericMenu.MenuFunction2 Func2 { get; } Property Value Type Description GenericMenu.MenuFunction2 | Improve this Doc View Source On Declaration public bool On { get; } Property Value Type Description System.Boolean | Improve this Doc View Source UserData Declaration public object UserData { get; } Property Value Type Description System.Object"
  },
  "api/VRBuilder.Editor.TestableEditorElements.MenuOption.html": {
    "href": "api/VRBuilder.Editor.TestableEditorElements.MenuOption.html",
    "title": "Class TestableEditorElements.MenuOption | VR Builder Documentation",
    "keywords": "Class TestableEditorElements.MenuOption Inheritance System.Object TestableEditorElements.MenuOption TestableEditorElements.DisabledMenuItem TestableEditorElements.MenuItem TestableEditorElements.MenuSeparator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor Assembly : VRBuilder.Editor.dll Syntax public class MenuOption Constructors | Improve this Doc View Source MenuOption(GUIContent) Declaration protected MenuOption(GUIContent label) Parameters Type Name Description GUIContent label Properties | Improve this Doc View Source Label Declaration public GUIContent Label { get; } Property Value Type Description GUIContent"
  },
  "api/VRBuilder.Editor.TestableEditorElements.MenuSeparator.html": {
    "href": "api/VRBuilder.Editor.TestableEditorElements.MenuSeparator.html",
    "title": "Class TestableEditorElements.MenuSeparator | VR Builder Documentation",
    "keywords": "Class TestableEditorElements.MenuSeparator Inheritance System.Object TestableEditorElements.MenuOption TestableEditorElements.MenuSeparator Inherited Members TestableEditorElements.MenuOption.Label System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor Assembly : VRBuilder.Editor.dll Syntax public sealed class MenuSeparator : TestableEditorElements.MenuOption Constructors | Improve this Doc View Source MenuSeparator(String) Declaration public MenuSeparator(string pathToSubmenu) Parameters Type Name Description System.String pathToSubmenu"
  },
  "api/VRBuilder.Editor.TextToSpeech.DummyTextToSpeechProvider.html": {
    "href": "api/VRBuilder.Editor.TextToSpeech.DummyTextToSpeechProvider.html",
    "title": "Class DummyTextToSpeechProvider | VR Builder Documentation",
    "keywords": "Class DummyTextToSpeechProvider Dummy provider that creates empty files, useful in case of compatibility issues. Inheritance System.Object DummyTextToSpeechProvider Implements ITextToSpeechProvider Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.TextToSpeech Assembly : VRBuilder.Editor.TextToSpeech.dll Syntax public class DummyTextToSpeechProvider : ITextToSpeechProvider Methods | Improve this Doc View Source ConvertTextToSpeech(String, Locale) Declaration public Task<AudioClip> ConvertTextToSpeech(string text, Locale locale) Parameters Type Name Description System.String text UnityEngine.Localization.Locale locale Returns Type Description System.Threading.Tasks.Task < AudioClip > | Improve this Doc View Source SetConfig(TextToSpeechConfiguration) Used for setting the config file. Declaration public void SetConfig(TextToSpeechConfiguration configuration) Parameters Type Name Description TextToSpeechConfiguration configuration Implements ITextToSpeechProvider"
  },
  "api/VRBuilder.Editor.TextToSpeech.html": {
    "href": "api/VRBuilder.Editor.TextToSpeech.html",
    "title": "Namespace VRBuilder.Editor.TextToSpeech | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.TextToSpeech Classes DummyTextToSpeechProvider Dummy provider that creates empty files, useful in case of compatibility issues. MicrosoftSapiTextToSpeechProvider TTS provider which uses Microsoft SAPI to generate audio. TextToSpeechConfig.Voice has to be either \"male\", \"female\", or \"neutral\". TextToSpeechConfig.Language is a language code (\"de\" or \"de-DE\" for German, \"en\" or \"en-US\" for English). It runs the TTS synthesis in a separate thread, saving the result to a temporary cache file. NAudioConverter This AudioConverter uses NAudio to convert audios. TextToSpeechBuildPreprocessor Generates TTS files for all processes before a build. TextToSpeechEditorUtils WebTextToSpeechProvider Abstract WebTextToSpeechProvider which can be used for web based provider. WebTextToSpeechProvider.DownloadFailedException"
  },
  "api/VRBuilder.Editor.TextToSpeech.MicrosoftSapiTextToSpeechProvider.html": {
    "href": "api/VRBuilder.Editor.TextToSpeech.MicrosoftSapiTextToSpeechProvider.html",
    "title": "Class MicrosoftSapiTextToSpeechProvider | VR Builder Documentation",
    "keywords": "Class MicrosoftSapiTextToSpeechProvider TTS provider which uses Microsoft SAPI to generate audio. TextToSpeechConfig.Voice has to be either \"male\", \"female\", or \"neutral\". TextToSpeechConfig.Language is a language code (\"de\" or \"de-DE\" for German, \"en\" or \"en-US\" for English). It runs the TTS synthesis in a separate thread, saving the result to a temporary cache file. Inheritance System.Object MicrosoftSapiTextToSpeechProvider Implements ITextToSpeechProvider Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.TextToSpeech Assembly : VRBuilder.Editor.TextToSpeech.dll Syntax public class MicrosoftSapiTextToSpeechProvider : ITextToSpeechProvider Methods | Improve this Doc View Source ConvertTextToSpeech(String, Locale) Declaration public Task<AudioClip> ConvertTextToSpeech(string text, Locale locale) Parameters Type Name Description System.String text UnityEngine.Localization.Locale locale Returns Type Description System.Threading.Tasks.Task < AudioClip > | Improve this Doc View Source SetConfig(TextToSpeechConfiguration) Used for setting the config file. Declaration public void SetConfig(TextToSpeechConfiguration configuration) Parameters Type Name Description TextToSpeechConfiguration configuration Implements ITextToSpeechProvider"
  },
  "api/VRBuilder.Editor.TextToSpeech.NAudioConverter.html": {
    "href": "api/VRBuilder.Editor.TextToSpeech.NAudioConverter.html",
    "title": "Class NAudioConverter | VR Builder Documentation",
    "keywords": "Class NAudioConverter This AudioConverter uses NAudio to convert audios. Inheritance System.Object NAudioConverter Implements IAudioConverter Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.TextToSpeech Assembly : VRBuilder.Editor.TextToSpeech.dll Syntax public class NAudioConverter : IAudioConverter Methods | Improve this Doc View Source CreateAudioClipFromMp3(Byte[]) This method uses NAudio to convert a mp3 file given as byte array to an AudioClip in .wav format. Declaration public AudioClip CreateAudioClipFromMp3(byte[] data) Parameters Type Name Description System.Byte [] data Data are the bytes of an mp3 file Returns Type Description AudioClip | Improve this Doc View Source CreateAudioClipFromWAVE(Byte[]) Declaration public AudioClip CreateAudioClipFromWAVE(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description AudioClip | Improve this Doc View Source TryWriteAudioClipToFile(AudioClip, String) This method uses NAudio to create .wav file on disk using a given AudioClip. Declaration public bool TryWriteAudioClipToFile(AudioClip audio, string filePath) Parameters Type Name Description AudioClip audio AudioClip to export System.String filePath Path with filename Returns Type Description System.Boolean Returns if the AudioClip could was written to a file on disk. Implements IAudioConverter"
  },
  "api/VRBuilder.Editor.TextToSpeech.TextToSpeechBuildPreprocessor.html": {
    "href": "api/VRBuilder.Editor.TextToSpeech.TextToSpeechBuildPreprocessor.html",
    "title": "Class TextToSpeechBuildPreprocessor | VR Builder Documentation",
    "keywords": "Class TextToSpeechBuildPreprocessor Generates TTS files for all processes before a build. Inheritance System.Object TextToSpeechBuildPreprocessor Namespace : VRBuilder.Editor.TextToSpeech Assembly : VRBuilder.Editor.TextToSpeech.dll Syntax public class TextToSpeechBuildPreprocessor : IPreprocessBuildWithReport Properties | Improve this Doc View Source callbackOrder Declaration public int callbackOrder { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source OnPreprocessBuild(BuildReport) Generates TTS files for all processes before a build. Declaration public void OnPreprocessBuild(BuildReport report) Parameters Type Name Description BuildReport report"
  },
  "api/VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.html": {
    "href": "api/VRBuilder.Editor.TextToSpeech.TextToSpeechEditorUtils.html",
    "title": "Class TextToSpeechEditorUtils | VR Builder Documentation",
    "keywords": "Class TextToSpeechEditorUtils Inheritance System.Object TextToSpeechEditorUtils Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.TextToSpeech Assembly : VRBuilder.Editor.TextToSpeech.dll Syntax public static class TextToSpeechEditorUtils Methods | Improve this Doc View Source CacheAudioClip(String, Locale, TextToSpeechConfiguration) Generates TTS audio and creates a file. Declaration public static async Task CacheAudioClip(string text, Locale locale, TextToSpeechConfiguration configuration) Parameters Type Name Description System.String text UnityEngine.Localization.Locale locale TextToSpeechConfiguration configuration Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source CacheTextToSpeechClips(IEnumerable<ITextToSpeechContent>, Locale, String) Generates files for all TextToSpeechAudio passed. Declaration public static async Task<int> CacheTextToSpeechClips(IEnumerable<ITextToSpeechContent> clips, Locale locale, string localizationTable) Parameters Type Name Description System.Collections.Generic.IEnumerable < ITextToSpeechContent > clips UnityEngine.Localization.Locale locale System.String localizationTable Returns Type Description System.Threading.Tasks.Task < System.Int32 > | Improve this Doc View Source GenerateTextToSpeechForAllProcesses() Generates TTS audio files for all project locales for all processes. Declaration public static async void GenerateTextToSpeechForAllProcesses() | Improve this Doc View Source GenerateTextToSpeechForAllProcesses(Locale) Generates TTS audio files for all available processes for the specified locale . Declaration public static async Task GenerateTextToSpeechForAllProcesses(Locale locale) Parameters Type Name Description UnityEngine.Localization.Locale locale The locale for which audio files should be generated. Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source GenerateTextToSpeechForAllProcessesAndActiveOrDefaultLocale() Generates TTS audio files for the the active or default locale for all processes. Declaration public static async void GenerateTextToSpeechForAllProcessesAndActiveOrDefaultLocale()"
  },
  "api/VRBuilder.Editor.TextToSpeech.UI.Behaviors.html": {
    "href": "api/VRBuilder.Editor.TextToSpeech.UI.Behaviors.html",
    "title": "Namespace VRBuilder.Editor.TextToSpeech.UI.Behaviors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.TextToSpeech.UI.Behaviors Classes TextToSpeechMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() ."
  },
  "api/VRBuilder.Editor.TextToSpeech.UI.Behaviors.TextToSpeechMenuItem.html": {
    "href": "api/VRBuilder.Editor.TextToSpeech.UI.Behaviors.TextToSpeechMenuItem.html",
    "title": "Class TextToSpeechMenuItem | VR Builder Documentation",
    "keywords": "Class TextToSpeechMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > TextToSpeechMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.TextToSpeech.UI.Behaviors Assembly : VRBuilder.Editor.TextToSpeech.dll Syntax public class TextToSpeechMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.TextToSpeech.UI.html": {
    "href": "api/VRBuilder.Editor.TextToSpeech.UI.html",
    "title": "Namespace VRBuilder.Editor.TextToSpeech.UI | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.TextToSpeech.UI Classes TextToSpeechConfigurationEditor This class draws list of ITextToSpeechProvider in VRBuilder.Editor.TextToSpeech.UI.TextToSpeechConfigurationEditor.textToSpeechConfiguration ."
  },
  "api/VRBuilder.Editor.TextToSpeech.UI.ProjectSettings.html": {
    "href": "api/VRBuilder.Editor.TextToSpeech.UI.ProjectSettings.html",
    "title": "Namespace VRBuilder.Editor.TextToSpeech.UI.ProjectSettings | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.TextToSpeech.UI.ProjectSettings Classes TextToSpeechSectionProvider Provides text to speech settings."
  },
  "api/VRBuilder.Editor.TextToSpeech.UI.ProjectSettings.TextToSpeechSectionProvider.html": {
    "href": "api/VRBuilder.Editor.TextToSpeech.UI.ProjectSettings.TextToSpeechSectionProvider.html",
    "title": "Class TextToSpeechSectionProvider | VR Builder Documentation",
    "keywords": "Class TextToSpeechSectionProvider Provides text to speech settings. Inheritance System.Object TextToSpeechSectionProvider Implements IProjectSettingsSection Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.TextToSpeech.UI.ProjectSettings Assembly : VRBuilder.Editor.TextToSpeech.dll Syntax public class TextToSpeechSectionProvider : IProjectSettingsSection Properties | Improve this Doc View Source Priority Determines the draw order, lower priority will be drawn first. Declaration public int Priority { get; } Property Value Type Description System.Int32 | Improve this Doc View Source TargetPageProvider Type of the target setting provider. Declaration public Type TargetPageProvider { get; } Property Value Type Description System.Type | Improve this Doc View Source Title Title of this section. Declaration public string Title { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Finalize() Declaration protected void Finalize() | Improve this Doc View Source OnGUI(String) Your draw call. Declaration public void OnGUI(string searchContext) Parameters Type Name Description System.String searchContext Implements IProjectSettingsSection"
  },
  "api/VRBuilder.Editor.TextToSpeech.UI.TextToSpeechConfigurationEditor.html": {
    "href": "api/VRBuilder.Editor.TextToSpeech.UI.TextToSpeechConfigurationEditor.html",
    "title": "Class TextToSpeechConfigurationEditor | VR Builder Documentation",
    "keywords": "Class TextToSpeechConfigurationEditor This class draws list of ITextToSpeechProvider in VRBuilder.Editor.TextToSpeech.UI.TextToSpeechConfigurationEditor.textToSpeechConfiguration . Inheritance System.Object TextToSpeechConfigurationEditor Namespace : VRBuilder.Editor.TextToSpeech.UI Assembly : VRBuilder.Editor.TextToSpeech.dll Syntax public class TextToSpeechConfigurationEditor : Editor Methods | Improve this Doc View Source OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/VRBuilder.Editor.TextToSpeech.WebTextToSpeechProvider.DownloadFailedException.html": {
    "href": "api/VRBuilder.Editor.TextToSpeech.WebTextToSpeechProvider.DownloadFailedException.html",
    "title": "Class WebTextToSpeechProvider.DownloadFailedException | VR Builder Documentation",
    "keywords": "Class WebTextToSpeechProvider.DownloadFailedException Inheritance System.Object System.Exception WebTextToSpeechProvider.DownloadFailedException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.TextToSpeech Assembly : VRBuilder.Editor.TextToSpeech.dll Syntax public class DownloadFailedException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source DownloadFailedException(String) Declaration public DownloadFailedException(string msg) Parameters Type Name Description System.String msg | Improve this Doc View Source DownloadFailedException(String, Exception) Declaration public DownloadFailedException(string msg, Exception ex) Parameters Type Name Description System.String msg System.Exception ex Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/VRBuilder.Editor.TextToSpeech.WebTextToSpeechProvider.html": {
    "href": "api/VRBuilder.Editor.TextToSpeech.WebTextToSpeechProvider.html",
    "title": "Class WebTextToSpeechProvider | VR Builder Documentation",
    "keywords": "Class WebTextToSpeechProvider Abstract WebTextToSpeechProvider which can be used for web based provider. Inheritance System.Object WebTextToSpeechProvider Implements ITextToSpeechProvider Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.TextToSpeech Assembly : VRBuilder.Editor.TextToSpeech.dll Syntax public abstract class WebTextToSpeechProvider : ITextToSpeechProvider Constructors | Improve this Doc View Source WebTextToSpeechProvider() Declaration protected WebTextToSpeechProvider() | Improve this Doc View Source WebTextToSpeechProvider(UnityWebRequest) Declaration protected WebTextToSpeechProvider(UnityWebRequest unityWebRequest) Parameters Type Name Description UnityWebRequest unityWebRequest | Improve this Doc View Source WebTextToSpeechProvider(UnityWebRequest, IAudioConverter) Declaration protected WebTextToSpeechProvider(UnityWebRequest unityWebRequest, IAudioConverter audioConverter) Parameters Type Name Description UnityWebRequest unityWebRequest IAudioConverter audioConverter Fields | Improve this Doc View Source AudioConverter Declaration protected readonly IAudioConverter AudioConverter Field Value Type Description IAudioConverter | Improve this Doc View Source Configuration Declaration protected TextToSpeechConfiguration Configuration Field Value Type Description TextToSpeechConfiguration | Improve this Doc View Source UnityWebRequest Declaration protected readonly UnityWebRequest UnityWebRequest Field Value Type Description UnityWebRequest Properties | Improve this Doc View Source AudioType The type of audio encoding for the downloaded audio clip. Declaration protected AudioType AudioType { get; set; } Property Value Type Description AudioType Remarks Relevant for the Android platform. Methods | Improve this Doc View Source ConvertTextToSpeech(String, Locale) Declaration public async Task<AudioClip> ConvertTextToSpeech(string text, Locale locale) Parameters Type Name Description System.String text UnityEngine.Localization.Locale locale Returns Type Description System.Threading.Tasks.Task < AudioClip > | Improve this Doc View Source CreateAudioClip(Byte[]) This method converts an mp3 file from byte to an AudioClip. If you have a different format, override this method. Declaration protected virtual AudioClip CreateAudioClip(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description AudioClip Remarks The base implementation only works on Windows. | Improve this Doc View Source CreateRequest(String, String) Method to create the UnityWebRequest needed to get the file. If you have to add specific authorization or other header you can do it here. Declaration protected virtual UnityWebRequest CreateRequest(string url, string text) Parameters Type Name Description System.String url System.String text Returns Type Description UnityWebRequest | Improve this Doc View Source DownloadAudio(String, Locale, TaskCompletionSource<AudioClip>) This method should asynchronous download the audio file to an AudioClip and call task OnFinish with it. You can use the ParseAudio method to convert the file (mp3) into an AudioClip. Declaration protected virtual IEnumerator DownloadAudio(string text, Locale locale, TaskCompletionSource<AudioClip> task) Parameters Type Name Description System.String text UnityEngine.Localization.Locale locale System.Threading.Tasks.TaskCompletionSource < AudioClip > task Returns Type Description System.Collections.IEnumerator | Improve this Doc View Source GetAudioFileDownloadUrl(String) Creates the specific url for the given voice, language and text to download the voice file. Declaration protected abstract string GetAudioFileDownloadUrl(string text) Parameters Type Name Description System.String text The text that should be converted into an audio file. Returns Type Description System.String The full url required to receive the audio file for the given text message | Improve this Doc View Source SetConfig(TextToSpeechConfiguration) Used for setting the config file. Declaration public void SetConfig(TextToSpeechConfiguration configuration) Parameters Type Name Description TextToSpeechConfiguration configuration Implements ITextToSpeechProvider"
  },
  "api/VRBuilder.Editor.TrackAndMeasure.UI.Behaviors.html": {
    "href": "api/VRBuilder.Editor.TrackAndMeasure.UI.Behaviors.html",
    "title": "Namespace VRBuilder.Editor.TrackAndMeasure.UI.Behaviors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.TrackAndMeasure.UI.Behaviors Classes ResetValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . SetBooleanValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . SetNumberValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . StartTimerMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . StopTimerMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . UpdateScoreMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() ."
  },
  "api/VRBuilder.Editor.TrackAndMeasure.UI.Behaviors.ResetValueMenuItem.html": {
    "href": "api/VRBuilder.Editor.TrackAndMeasure.UI.Behaviors.ResetValueMenuItem.html",
    "title": "Class ResetValueMenuItem | VR Builder Documentation",
    "keywords": "Class ResetValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > ResetValueMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.TrackAndMeasure.UI.Behaviors Assembly : VRBuilder.Editor.TrackAndMeasure.dll Syntax public class ResetValueMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.TrackAndMeasure.UI.Behaviors.SetBooleanValueMenuItem.html": {
    "href": "api/VRBuilder.Editor.TrackAndMeasure.UI.Behaviors.SetBooleanValueMenuItem.html",
    "title": "Class SetBooleanValueMenuItem | VR Builder Documentation",
    "keywords": "Class SetBooleanValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetBooleanValueMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.TrackAndMeasure.UI.Behaviors Assembly : VRBuilder.Editor.TrackAndMeasure.dll Syntax public class SetBooleanValueMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.TrackAndMeasure.UI.Behaviors.SetNumberValueMenuItem.html": {
    "href": "api/VRBuilder.Editor.TrackAndMeasure.UI.Behaviors.SetNumberValueMenuItem.html",
    "title": "Class SetNumberValueMenuItem | VR Builder Documentation",
    "keywords": "Class SetNumberValueMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetNumberValueMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.TrackAndMeasure.UI.Behaviors Assembly : VRBuilder.Editor.TrackAndMeasure.dll Syntax public class SetNumberValueMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.TrackAndMeasure.UI.Behaviors.StartTimerMenuItem.html": {
    "href": "api/VRBuilder.Editor.TrackAndMeasure.UI.Behaviors.StartTimerMenuItem.html",
    "title": "Class StartTimerMenuItem | VR Builder Documentation",
    "keywords": "Class StartTimerMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > StartTimerMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.TrackAndMeasure.UI.Behaviors Assembly : VRBuilder.Editor.TrackAndMeasure.dll Syntax public class StartTimerMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.TrackAndMeasure.UI.Behaviors.StopTimerMenuItem.html": {
    "href": "api/VRBuilder.Editor.TrackAndMeasure.UI.Behaviors.StopTimerMenuItem.html",
    "title": "Class StopTimerMenuItem | VR Builder Documentation",
    "keywords": "Class StopTimerMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > StopTimerMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.TrackAndMeasure.UI.Behaviors Assembly : VRBuilder.Editor.TrackAndMeasure.dll Syntax public class StopTimerMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.TrackAndMeasure.UI.Behaviors.UpdateScoreMenuItem.html": {
    "href": "api/VRBuilder.Editor.TrackAndMeasure.UI.Behaviors.UpdateScoreMenuItem.html",
    "title": "Class UpdateScoreMenuItem | VR Builder Documentation",
    "keywords": "Class UpdateScoreMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > UpdateScoreMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.TrackAndMeasure.UI.Behaviors Assembly : VRBuilder.Editor.TrackAndMeasure.dll Syntax public class UpdateScoreMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.TrackAndMeasure.UI.Conditions.CompareBooleansMenuItem.html": {
    "href": "api/VRBuilder.Editor.TrackAndMeasure.UI.Conditions.CompareBooleansMenuItem.html",
    "title": "Class CompareBooleansMenuItem | VR Builder Documentation",
    "keywords": "Class CompareBooleansMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > CompareBooleansMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.TrackAndMeasure.UI.Conditions Assembly : VRBuilder.Editor.TrackAndMeasure.dll Syntax public class CompareBooleansMenuItem : MenuItem<ICondition> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.TrackAndMeasure.UI.Conditions.CompareNumbersMenuItem.html": {
    "href": "api/VRBuilder.Editor.TrackAndMeasure.UI.Conditions.CompareNumbersMenuItem.html",
    "title": "Class CompareNumbersMenuItem | VR Builder Documentation",
    "keywords": "Class CompareNumbersMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > CompareNumbersMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.TrackAndMeasure.UI.Conditions Assembly : VRBuilder.Editor.TrackAndMeasure.dll Syntax public class CompareNumbersMenuItem : MenuItem<ICondition> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.TrackAndMeasure.UI.Conditions.html": {
    "href": "api/VRBuilder.Editor.TrackAndMeasure.UI.Conditions.html",
    "title": "Namespace VRBuilder.Editor.TrackAndMeasure.UI.Conditions | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.TrackAndMeasure.UI.Conditions Classes CompareBooleansMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . CompareNumbersMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() ."
  },
  "api/VRBuilder.Editor.UI.BaseSettingsProvider.html": {
    "href": "api/VRBuilder.Editor.UI.BaseSettingsProvider.html",
    "title": "Class BaseSettingsProvider | VR Builder Documentation",
    "keywords": "Class BaseSettingsProvider Base Settings provider which allows to inject additional sections which implement IProjectSettingsSection . Inheritance System.Object BaseSettingsProvider VoiceChatSettingsProvider LanguageSettingsProvider SceneObjectGroupsSettingsProvider SpectatorSettingsProvider Namespace : VRBuilder.Editor.UI Assembly : VRBuilder.Editor.dll Syntax public abstract class BaseSettingsProvider : SettingsProvider Constructors | Improve this Doc View Source BaseSettingsProvider(String, SettingsScope, IEnumerable<String>) Declaration protected BaseSettingsProvider(string path, SettingsScope scopes, IEnumerable<string> keywords = null) Parameters Type Name Description System.String path SettingsScope scopes System.Collections.Generic.IEnumerable < System.String > keywords Fields | Improve this Doc View Source sections Declaration protected List<IProjectSettingsSection> sections Field Value Type Description System.Collections.Generic.List < IProjectSettingsSection > Methods | Improve this Doc View Source InternalDraw(String) Your draw implementation, will be drawn above the injected sections. Declaration protected abstract void InternalDraw(string searchContext) Parameters Type Name Description System.String searchContext | Improve this Doc View Source OnGUI(String) Draw call. Declaration public override void OnGUI(string searchContext) Parameters Type Name Description System.String searchContext"
  },
  "api/VRBuilder.Editor.UI.Behaviors.BehaviorSequenceMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Behaviors.BehaviorSequenceMenuItem.html",
    "title": "Class BehaviorSequenceMenuItem | VR Builder Documentation",
    "keywords": "Class BehaviorSequenceMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > BehaviorSequenceMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Behaviors Assembly : VRBuilder.Editor.dll Syntax public class BehaviorSequenceMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Behaviors.ConfettiMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Behaviors.ConfettiMenuItem.html",
    "title": "Class ConfettiMenuItem | VR Builder Documentation",
    "keywords": "Class ConfettiMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > ConfettiMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Behaviors Assembly : VRBuilder.Editor.dll Syntax public class ConfettiMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Behaviors.DelayMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Behaviors.DelayMenuItem.html",
    "title": "Class DelayMenuItem | VR Builder Documentation",
    "keywords": "Class DelayMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > DelayMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Behaviors Assembly : VRBuilder.Editor.dll Syntax public class DelayMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Behaviors.DisableComponentMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Behaviors.DisableComponentMenuItem.html",
    "title": "Class DisableComponentMenuItem | VR Builder Documentation",
    "keywords": "Class DisableComponentMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > DisableComponentMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Behaviors Assembly : VRBuilder.Editor.dll Syntax public class DisableComponentMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Behaviors.DisableObjectsMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Behaviors.DisableObjectsMenuItem.html",
    "title": "Class DisableObjectsMenuItem | VR Builder Documentation",
    "keywords": "Class DisableObjectsMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > DisableObjectsMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Behaviors Assembly : VRBuilder.Editor.dll Syntax public class DisableObjectsMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Behaviors.EnableComponentMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Behaviors.EnableComponentMenuItem.html",
    "title": "Class EnableComponentMenuItem | VR Builder Documentation",
    "keywords": "Class EnableComponentMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > EnableComponentMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Behaviors Assembly : VRBuilder.Editor.dll Syntax public class EnableComponentMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Behaviors.EnableObjectsMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Behaviors.EnableObjectsMenuItem.html",
    "title": "Class EnableObjectsMenuItem | VR Builder Documentation",
    "keywords": "Class EnableObjectsMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > EnableObjectsMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Behaviors Assembly : VRBuilder.Editor.dll Syntax public class EnableObjectsMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Behaviors.HighlightObjectMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Behaviors.HighlightObjectMenuItem.html",
    "title": "Class HighlightObjectMenuItem | VR Builder Documentation",
    "keywords": "Class HighlightObjectMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > HighlightObjectMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Behaviors Assembly : VRBuilder.Editor.dll Syntax public class HighlightObjectMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Behaviors.html": {
    "href": "api/VRBuilder.Editor.UI.Behaviors.html",
    "title": "Namespace VRBuilder.Editor.UI.Behaviors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.UI.Behaviors Classes BehaviorSequenceMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . ConfettiMenuItem DelayMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . DisableComponentMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . DisableObjectsMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . EnableComponentMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . EnableObjectsMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . HighlightObjectMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . LoadSceneMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . MoveObjectMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . MultipleChoiceBehaviorMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . NumPadBehaviorMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . OptionalInfoBoxMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . PlayResourceAudioMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . ScalingMenuItem SetLocalizedTextMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . StartParticleEmissionMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . StopParticleEmissionMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . UiOutlineMenuItem"
  },
  "api/VRBuilder.Editor.UI.Behaviors.LoadSceneMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Behaviors.LoadSceneMenuItem.html",
    "title": "Class LoadSceneMenuItem | VR Builder Documentation",
    "keywords": "Class LoadSceneMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > LoadSceneMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Behaviors Assembly : VRBuilder.Editor.dll Syntax public class LoadSceneMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Behaviors.MoveObjectMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Behaviors.MoveObjectMenuItem.html",
    "title": "Class MoveObjectMenuItem | VR Builder Documentation",
    "keywords": "Class MoveObjectMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > MoveObjectMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Behaviors Assembly : VRBuilder.Editor.dll Syntax public class MoveObjectMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Behaviors.MultipleChoiceBehaviorMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Behaviors.MultipleChoiceBehaviorMenuItem.html",
    "title": "Class MultipleChoiceBehaviorMenuItem | VR Builder Documentation",
    "keywords": "Class MultipleChoiceBehaviorMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > MultipleChoiceBehaviorMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Behaviors Assembly : VRBuilder.Editor.UserInterface.AddOn.dll Syntax public class MultipleChoiceBehaviorMenuItem : MenuItem<IBehavior> Properties | Improve this Doc DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Behaviors.NumPadBehaviorMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Behaviors.NumPadBehaviorMenuItem.html",
    "title": "Class NumPadBehaviorMenuItem | VR Builder Documentation",
    "keywords": "Class NumPadBehaviorMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > NumPadBehaviorMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Behaviors Assembly : VRBuilder.Editor.UserInterface.AddOn.dll Syntax public class NumPadBehaviorMenuItem : MenuItem<IBehavior> Properties | Improve this Doc DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Behaviors.OptionalInfoBoxMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Behaviors.OptionalInfoBoxMenuItem.html",
    "title": "Class OptionalInfoBoxMenuItem | VR Builder Documentation",
    "keywords": "Class OptionalInfoBoxMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > OptionalInfoBoxMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Behaviors Assembly : VRBuilder.Editor.UserInterface.AddOn.dll Syntax public class OptionalInfoBoxMenuItem : MenuItem<IBehavior> Properties | Improve this Doc DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Behaviors.PlayResourceAudioMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Behaviors.PlayResourceAudioMenuItem.html",
    "title": "Class PlayResourceAudioMenuItem | VR Builder Documentation",
    "keywords": "Class PlayResourceAudioMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > PlayResourceAudioMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Behaviors Assembly : VRBuilder.Editor.dll Syntax public class PlayResourceAudioMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Behaviors.ScalingMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Behaviors.ScalingMenuItem.html",
    "title": "Class ScalingMenuItem | VR Builder Documentation",
    "keywords": "Class ScalingMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > ScalingMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Behaviors Assembly : VRBuilder.Editor.dll Syntax public class ScalingMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Behaviors.SetLocalizedTextMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Behaviors.SetLocalizedTextMenuItem.html",
    "title": "Class SetLocalizedTextMenuItem | VR Builder Documentation",
    "keywords": "Class SetLocalizedTextMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetLocalizedTextMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Behaviors Assembly : VRBuilder.Editor.UserInterface.AddOn.dll Syntax public class SetLocalizedTextMenuItem : MenuItem<IBehavior> Properties | Improve this Doc DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Behaviors.StartParticleEmissionMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Behaviors.StartParticleEmissionMenuItem.html",
    "title": "Class StartParticleEmissionMenuItem | VR Builder Documentation",
    "keywords": "Class StartParticleEmissionMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > StartParticleEmissionMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Behaviors Assembly : VRBuilder.Editor.dll Syntax public class StartParticleEmissionMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Behaviors.StopParticleEmissionMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Behaviors.StopParticleEmissionMenuItem.html",
    "title": "Class StopParticleEmissionMenuItem | VR Builder Documentation",
    "keywords": "Class StopParticleEmissionMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > StopParticleEmissionMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Behaviors Assembly : VRBuilder.Editor.dll Syntax public class StopParticleEmissionMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Behaviors.UiOutlineMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Behaviors.UiOutlineMenuItem.html",
    "title": "Class UiOutlineMenuItem | VR Builder Documentation",
    "keywords": "Class UiOutlineMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > UiOutlineMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Behaviors Assembly : VRBuilder.Editor.UserInterface.AddOn.dll Syntax public class UiOutlineMenuItem : MenuItem<IBehavior> Properties | Improve this Doc DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.BuilderEditorStyles.html": {
    "href": "api/VRBuilder.Editor.UI.BuilderEditorStyles.html",
    "title": "Class BuilderEditorStyles | VR Builder Documentation",
    "keywords": "Class BuilderEditorStyles Inheritance System.Object BuilderEditorStyles Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI Assembly : VRBuilder.Editor.dll Syntax public static class BuilderEditorStyles Fields | Improve this Doc View Source BaseIndent Declaration public const int BaseIndent = 2 Field Value Type Description System.Int32 | Improve this Doc View Source HighlightTextColor Declaration public static Color HighlightTextColor Field Value Type Description Color | Improve this Doc View Source Indent Declaration public const int Indent = 12 Field Value Type Description System.Int32 | Improve this Doc View Source IndentLarge Declaration public const int IndentLarge = 36 Field Value Type Description System.Int32 Properties | Improve this Doc View Source Button Declaration public static GUIStyle Button { get; } Property Value Type Description GUIStyle | Improve this Doc View Source Header Declaration public static GUIStyle Header { get; } Property Value Type Description GUIStyle | Improve this Doc View Source HelpBox Declaration public static GUIStyle HelpBox { get; } Property Value Type Description GUIStyle | Improve this Doc View Source Label Declaration public static GUIStyle Label { get; } Property Value Type Description GUIStyle | Improve this Doc View Source Link Declaration public static GUIStyle Link { get; } Property Value Type Description GUIStyle | Improve this Doc View Source Paragraph Declaration public static GUIStyle Paragraph { get; } Property Value Type Description GUIStyle | Improve this Doc View Source ParagraphNoPadding Declaration public static GUIStyle ParagraphNoPadding { get; } Property Value Type Description GUIStyle | Improve this Doc View Source Popup Declaration public static GUIStyle Popup { get; } Property Value Type Description GUIStyle | Improve this Doc View Source RadioButton Declaration public static GUIStyle RadioButton { get; } Property Value Type Description GUIStyle | Improve this Doc View Source SubText Declaration public static GUIStyle SubText { get; } Property Value Type Description GUIStyle | Improve this Doc View Source TextField Declaration public static GUIStyle TextField { get; } Property Value Type Description GUIStyle | Improve this Doc View Source Title Declaration public static GUIStyle Title { get; } Property Value Type Description GUIStyle | Improve this Doc View Source TitleNoPadding Declaration public static GUIStyle TitleNoPadding { get; } Property Value Type Description GUIStyle | Improve this Doc View Source Toggle Declaration public static GUIStyle Toggle { get; } Property Value Type Description GUIStyle Methods | Improve this Doc View Source ApplyMargin(GUIStyle, RectOffset) Declaration public static GUIStyle ApplyMargin(GUIStyle style, RectOffset indent) Parameters Type Name Description GUIStyle style RectOffset indent Returns Type Description GUIStyle | Improve this Doc View Source ApplyMargin(GUIStyle, Int32) Declaration public static GUIStyle ApplyMargin(GUIStyle style, int ident = 12) Parameters Type Name Description GUIStyle style System.Int32 ident Returns Type Description GUIStyle | Improve this Doc View Source ApplyPadding(GUIStyle, RectOffset) Declaration public static GUIStyle ApplyPadding(GUIStyle style, RectOffset indent) Parameters Type Name Description GUIStyle style RectOffset indent Returns Type Description GUIStyle | Improve this Doc View Source ApplyPadding(GUIStyle, Int32) Declaration public static GUIStyle ApplyPadding(GUIStyle style, int ident = 12) Parameters Type Name Description GUIStyle style System.Int32 ident Returns Type Description GUIStyle"
  },
  "api/VRBuilder.Editor.UI.BuilderGUILayout.html": {
    "href": "api/VRBuilder.Editor.UI.BuilderGUILayout.html",
    "title": "Class BuilderGUILayout | VR Builder Documentation",
    "keywords": "Class BuilderGUILayout Layout extension for VR Builder. Inheritance System.Object BuilderGUILayout Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI Assembly : VRBuilder.Editor.dll Syntax public static class BuilderGUILayout Methods | Improve this Doc View Source DrawCheckBoxList<T>(IEnumerable<T>, List<T>, List<String>, List<T>) Declaration public static IEnumerable<T> DrawCheckBoxList<T>(IEnumerable<T> selection, List<T> entries, List<string> content, List<T> disabledEntries) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> selection System.Collections.Generic.List <T> entries System.Collections.Generic.List < System.String > content System.Collections.Generic.List <T> disabledEntries Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source DrawLink(String, Action, Int32) Draws a clickable link which looks like a hyperlink. Declaration public static void DrawLink(string text, Action action, int indent = 12) Parameters Type Name Description System.String text Text to be displayed System.Action action action done on click System.Int32 indent Intend on the left | Improve this Doc View Source DrawLink(String, String, Int32) Draws a clickable link which opens a website. Declaration public static void DrawLink(string text, string url, int indent = 12) Parameters Type Name Description System.String text Text to be displayed System.String url url to be opened inside the browser System.Int32 indent Intend on the left | Improve this Doc View Source DrawTextField(String, Int32, GUILayoutOption[]) Declaration public static string DrawTextField(string content, int charLimit = -1, params GUILayoutOption[] options) Parameters Type Name Description System.String content System.Int32 charLimit GUILayoutOption [] options Returns Type Description System.String | Improve this Doc View Source DrawTextField(String, Int32, Int32, GUILayoutOption[]) Declaration public static string DrawTextField(string content, int charLimit = -1, int indent = 0, params GUILayoutOption[] options) Parameters Type Name Description System.String content System.Int32 charLimit System.Int32 indent GUILayoutOption [] options Returns Type Description System.String | Improve this Doc View Source DrawToggleGroup<T>(T, List<T>, List<GUIContent>, List<T>) Declaration public static T DrawToggleGroup<T>(T selection, List<T> entries, List<GUIContent> content, List<T> disabledEntries) Parameters Type Name Description T selection System.Collections.Generic.List <T> entries System.Collections.Generic.List < GUIContent > content System.Collections.Generic.List <T> disabledEntries Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source DrawToggleGroup<T>(T, List<T>, List<String>, List<T>) Declaration public static T DrawToggleGroup<T>(T selection, List<T> entries, List<string> content, List<T> disabledEntries) Parameters Type Name Description T selection System.Collections.Generic.List <T> entries System.Collections.Generic.List < System.String > content System.Collections.Generic.List <T> disabledEntries Returns Type Description T Type Parameters Name Description T"
  },
  "api/VRBuilder.Editor.UI.Conditions.html": {
    "href": "api/VRBuilder.Editor.UI.Conditions.html",
    "title": "Namespace VRBuilder.Editor.UI.Conditions | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.UI.Conditions Classes MandatoryInfoBoxMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . MultipleChoiceConditionMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . NumPadCompareConditionMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . NumPadConditionMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . ObjectInColliderMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . ObjectInRangeMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . SetParentMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . TimeoutMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . UiButtonMenuItem"
  },
  "api/VRBuilder.Editor.UI.Conditions.MandatoryInfoBoxMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Conditions.MandatoryInfoBoxMenuItem.html",
    "title": "Class MandatoryInfoBoxMenuItem | VR Builder Documentation",
    "keywords": "Class MandatoryInfoBoxMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > MandatoryInfoBoxMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Conditions Assembly : VRBuilder.Editor.UserInterface.AddOn.dll Syntax public class MandatoryInfoBoxMenuItem : MenuItem<ICondition> Properties | Improve this Doc DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Conditions.MultipleChoiceConditionMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Conditions.MultipleChoiceConditionMenuItem.html",
    "title": "Class MultipleChoiceConditionMenuItem | VR Builder Documentation",
    "keywords": "Class MultipleChoiceConditionMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > MultipleChoiceConditionMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Conditions Assembly : VRBuilder.Editor.UserInterface.AddOn.dll Syntax public class MultipleChoiceConditionMenuItem : MenuItem<ICondition> Properties | Improve this Doc DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Conditions.NumPadCompareConditionMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Conditions.NumPadCompareConditionMenuItem.html",
    "title": "Class NumPadCompareConditionMenuItem | VR Builder Documentation",
    "keywords": "Class NumPadCompareConditionMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > NumPadCompareConditionMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Conditions Assembly : VRBuilder.Editor.UserInterface.AddOn.dll Syntax public class NumPadCompareConditionMenuItem : MenuItem<ICondition> Properties | Improve this Doc DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Conditions.NumPadConditionMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Conditions.NumPadConditionMenuItem.html",
    "title": "Class NumPadConditionMenuItem | VR Builder Documentation",
    "keywords": "Class NumPadConditionMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > NumPadConditionMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Conditions Assembly : VRBuilder.Editor.UserInterface.AddOn.dll Syntax public class NumPadConditionMenuItem : MenuItem<ICondition> Properties | Improve this Doc DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Conditions.ObjectInColliderMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Conditions.ObjectInColliderMenuItem.html",
    "title": "Class ObjectInColliderMenuItem | VR Builder Documentation",
    "keywords": "Class ObjectInColliderMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > ObjectInColliderMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Conditions Assembly : VRBuilder.Editor.dll Syntax public class ObjectInColliderMenuItem : MenuItem<ICondition> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Conditions.ObjectInRangeMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Conditions.ObjectInRangeMenuItem.html",
    "title": "Class ObjectInRangeMenuItem | VR Builder Documentation",
    "keywords": "Class ObjectInRangeMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > ObjectInRangeMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Conditions Assembly : VRBuilder.Editor.dll Syntax public class ObjectInRangeMenuItem : MenuItem<ICondition> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Conditions.SetParentMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Conditions.SetParentMenuItem.html",
    "title": "Class SetParentMenuItem | VR Builder Documentation",
    "keywords": "Class SetParentMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetParentMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Conditions Assembly : VRBuilder.Editor.dll Syntax public class SetParentMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Conditions.TimeoutMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Conditions.TimeoutMenuItem.html",
    "title": "Class TimeoutMenuItem | VR Builder Documentation",
    "keywords": "Class TimeoutMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > TimeoutMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Conditions Assembly : VRBuilder.Editor.dll Syntax public class TimeoutMenuItem : MenuItem<ICondition> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Conditions.UiButtonMenuItem.html": {
    "href": "api/VRBuilder.Editor.UI.Conditions.UiButtonMenuItem.html",
    "title": "Class UiButtonMenuItem | VR Builder Documentation",
    "keywords": "Class UiButtonMenuItem Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > UiButtonMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Conditions Assembly : VRBuilder.Editor.UserInterface.AddOn.dll Syntax public class UiButtonMenuItem : MenuItem<ICondition> Properties | Improve this Doc DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc GetNewItem() Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.UI.Drawers.AbstractDrawer.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.AbstractDrawer.html",
    "title": "Class AbstractDrawer | VR Builder Documentation",
    "keywords": "Class AbstractDrawer Simple base drawer class. Inheritance System.Object AbstractDrawer DropdownDrawer<T> ObjectDrawer ProcessSceneReferenceDrawer ResourcePathDrawer<T> SceneObjectTagDrawer SelectableValueDrawer<TFirst, TSecond> UniqueNameReferenceDrawer UserTagDropdownDrawer Implements IProcessDrawer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax public abstract class AbstractDrawer : IProcessDrawer Methods | Improve this Doc View Source ChangeValue(Func<Object>, Func<Object>, Action<Object>) Call when the value has changed; it will create proper to handle Do/Undo logic. AbstractDrawer for a proper implementation. A delegate that returns a new value for the drawn entity. Invoked during the call. The result is passed to the assignValueCallback . A delegate that returns an old value for the drawn entity. Invoked during the call. The result is passed to the assignValueCallback . A delegate that actually assigns a value to the property/field. Declaration public void ChangeValue(Func<object> getNewValueCallback, Func<object> getOldValueCallback, Action<object> assignValueCallback) Parameters Type Name Description System.Func < System.Object > getNewValueCallback System.Func < System.Object > getOldValueCallback System.Action < System.Object > assignValueCallback | Improve this Doc View Source Draw(Rect, Object, Action<Object>, GUIContent) Draw editor view in given Rect. Declaration public abstract Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect A rectangle in which editor view should fit. The height value is ignored. System.Object currentValue Current value of a member. System.Action < System.Object > changeValueCallback Delegate for a method that changes value of a member. Done that way to allow non-instantaneous assignments (for example, from generic menus). Invoke only when child member's value has changed; Otherwise, if the value itself has changed, call ChangeValue(Func<Object>, Func<Object>, Action<Object>) so it could manage Do/Undo stack in a proper way. GUIContent label Label content to display. Returns Type Description Rect The area that was taken by the property. | Improve this Doc View Source Draw(Rect, Object, Action<Object>, String) Draw editor view in given Rect. Declaration public Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, string label) Parameters Type Name Description Rect rect A rectangle in which editor view should fit. The height value is ignored. System.Object currentValue Current value of a member. System.Action < System.Object > changeValueCallback Delegate for a method that changes value of a member. Done that way to allow non-instantaneous assignments (for example, from generic menus). Invoke only when the value (or values of child members) has actually changed. System.String label Label text to display. Returns Type Description Rect The area that was taken by the property. | Improve this Doc View Source GetLabel(Object, Type) Declaration public virtual GUIContent GetLabel(object value, Type declaredType) Parameters Type Name Description System.Object value System.Type declaredType Returns Type Description GUIContent | Improve this Doc View Source GetLabel(MemberInfo, Object) Declaration public virtual GUIContent GetLabel(MemberInfo memberInfo, object memberOwner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object memberOwner Returns Type Description GUIContent Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.Drawers.AnimationClipResourceDrawer.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.AnimationClipResourceDrawer.html",
    "title": "Class AnimationClipResourceDrawer | VR Builder Documentation",
    "keywords": "Class AnimationClipResourceDrawer Implementation of asset path drawer for assets. Inheritance System.Object AbstractDrawer ResourcePathDrawer < AnimationClip > AnimationClipResourceDrawer Implements IProcessDrawer Inherited Members ResourcePathDrawer<AnimationClip>.Draw(Rect, Object, Action<Object>, GUIContent) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax public class AnimationClipResourceDrawer : ResourcePathDrawer<AnimationClip>, IProcessDrawer Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.Drawers.DefaultProcessDrawerAttribute.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.DefaultProcessDrawerAttribute.html",
    "title": "Class DefaultProcessDrawerAttribute | VR Builder Documentation",
    "keywords": "Class DefaultProcessDrawerAttribute Marks a Process drawer as a default drawer for a given type. Inheritance System.Object System.Attribute DefaultProcessDrawerAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false)] public class DefaultProcessDrawerAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source DefaultProcessDrawerAttribute(Type) Declaration public DefaultProcessDrawerAttribute(Type type) Parameters Type Name Description System.Type type Properties | Improve this Doc View Source DrawableType Objects of which type can be processed by this Process drawer. Declaration public Type DrawableType { get; } Property Value Type Description System.Type Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Editor.UI.Drawers.DrawerLocator.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.DrawerLocator.html",
    "title": "Class DrawerLocator | VR Builder Documentation",
    "keywords": "Class DrawerLocator Inheritance System.Object DrawerLocator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax public static class DrawerLocator Methods | Improve this Doc View Source GetDrawerForMember(MemberInfo, Object) Returns required drawer for a given object member. If the member has a UsesSpecificProcessDrawerAttribute , returns the drawer defined in that attribute. If the member contains non-null value, tries to find drawers from most concrete type definition (which is actual value's type) and up through inheritance tree. If member's value is null, does the same starting from the property declared type instead. If drawer is still not found, checks drawers for interfaces. If everything else fails, returns the drawer for System.Object. Declaration public static IProcessDrawer GetDrawerForMember(MemberInfo memberInfo, object owner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo Reflection information about the member for which drawer is needed. System.Object owner Object to which this member belongs to. Returns Type Description IProcessDrawer Returns suitable Process drawer. Returns null only if the member is not a property or field, or the specified custom drawer is not found. | Improve this Doc View Source GetDrawerForValue(Object, Type) Returns required drawer for a given value. If the value is not null, try to find drawers from most concrete type definition (which is actual value's type) and up through inheritance tree. If the value is null, does the same starting from the member declaring type instead. If drawer is still not found, checks drawers for interfaces. If everything else fails, returns the drawer for System.Object. Declaration public static IProcessDrawer GetDrawerForValue(object value, Type declaredType) Parameters Type Name Description System.Object value Value to get drawer for. System.Type declaredType Declaring type of the class member that contains the value. Returns Type Description IProcessDrawer Returns suitable Process drawer. | Improve this Doc View Source GetInstantiatorDrawer(Type) Get a drawer for a view that creates a new instance of declaredType Declaration public static IProcessDrawer GetInstantiatorDrawer(Type declaredType) Parameters Type Name Description System.Type declaredType Returns Type Description IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.Drawers.DropdownDrawer-1.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.DropdownDrawer-1.html",
    "title": "Class DropdownDrawer<T> | VR Builder Documentation",
    "keywords": "Class DropdownDrawer<T> Generic drawer for dropdowns. Implement by providing your possible options. Inheritance System.Object AbstractDrawer DropdownDrawer<T> SceneDropdownDrawer Implements IProcessDrawer Inherited Members AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax public abstract class DropdownDrawer<T> : AbstractDrawer, IProcessDrawer where T : IEquatable<T> Type Parameters Name Description T Type of value provided by the dropdown. Remarks In case of a null or invalid value, the drawer will automatically select the first available value. You can create a null entry for the first value if you want it to default to null. Properties | Improve this Doc View Source PossibleOptions List of elements displayed in the dropdown. Declaration protected abstract IList<DropDownElement<T>> PossibleOptions { get; } Property Value Type Description System.Collections.Generic.IList < DropDownElement <T>> Methods | Improve this Doc View Source Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback GUIContent label Returns Type Description Rect Overrides AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.Drawers.DropDownElement-1.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.DropDownElement-1.html",
    "title": "Struct DropDownElement<T> | VR Builder Documentation",
    "keywords": "Struct DropDownElement<T> An element in a dropdown. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax public struct DropDownElement<T> where T : IEquatable<T> Type Parameters Name Description T Type of value returned by the dropdown. Constructors | Improve this Doc View Source DropDownElement(T) Declaration public DropDownElement(T value) Parameters Type Name Description T value | Improve this Doc View Source DropDownElement(T, GUIContent) Declaration public DropDownElement(T value, GUIContent label) Parameters Type Name Description T value GUIContent label | Improve this Doc View Source DropDownElement(T, String) Declaration public DropDownElement(T value, string label) Parameters Type Name Description T value System.String label Properties | Improve this Doc View Source Label Display name of the element. Declaration public GUIContent Label { readonly get; set; } Property Value Type Description GUIContent | Improve this Doc View Source Value Selectable value. Declaration public T Value { readonly get; set; } Property Value Type Description T"
  },
  "api/VRBuilder.Editor.UI.Drawers.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.html",
    "title": "Namespace VRBuilder.Editor.UI.Drawers | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.UI.Drawers Classes AbstractDrawer Simple base drawer class. AnimationClipResourceDrawer Implementation of asset path drawer for assets. DefaultProcessDrawerAttribute Marks a Process drawer as a default drawer for a given type. DrawerLocator DropdownDrawer<T> Generic drawer for dropdowns. Implement by providing your possible options. LocalizedStringPropertyDrawer NameableDrawer Drawer for values implementing INameable interface. Instead of drawing a plain text as a label, it draws a TextField with the name. NumPadCompareDrawer Custom drawer for NumPadCompareCondition . ObjectDrawer Process drawer for object properties. Used when everything else does not fit. ParticleSystemPropertySelectableValueDrawer Concrete implementation of SelectableValue<TFirst, TSecond> for IParticleSystemProperty . ProcessSceneReferenceDrawer Drawer for ProcessSceneReferenceBase . ProcessVariableBoolSelectableValueDrawer Concrete implementation of process variable selectable value drawer. ProcessVariableFloatSelectableValueDrawer Concrete implementation of process variable selectable value drawer. ProcessVariableStringSelectableValueDrawer Concrete implementation of process variable selectable value drawer. ResourcePathDrawer<T> Draws an object field and sets the Resources path of the dragged object. SceneDropdownDrawer Drawer for a dropdown listing all the scenes in the build settings and allowing to select one by index. SceneObjectTagDrawer Drawer for SceneObjectTagBase . SelectableValueDrawer<TFirst, TSecond> Template drawer for selectable values. A concrete implementation of this drawer is required for each use case. StringsSelectableValueDrawer Selectable value drawer letting the user choose between two string values. UniqueNameReferenceDrawer Process drawer for UniqueNameReference members. UserTagDropdownDrawer Drawer for SceneObjectTagBase . VideoClipResourceDrawer Implementation of asset path drawer for assets. Structs DropDownElement<T> An element in a dropdown. Interfaces IProcessDrawer Interface of a drawer for process members."
  },
  "api/VRBuilder.Editor.UI.Drawers.IProcessDrawer.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.IProcessDrawer.html",
    "title": "Interface IProcessDrawer | VR Builder Documentation",
    "keywords": "Interface IProcessDrawer Interface of a drawer for process members. Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax public interface IProcessDrawer Methods | Improve this Doc View Source ChangeValue(Func<Object>, Func<Object>, Action<Object>) Call when the value has changed; it will create proper to handle Do/Undo logic. AbstractDrawer for a proper implementation. A delegate that returns a new value for the drawn entity. Invoked during the call. The result is passed to the assignValueCallback . A delegate that returns an old value for the drawn entity. Invoked during the call. The result is passed to the assignValueCallback . A delegate that actually assigns a value to the property/field. Declaration void ChangeValue(Func<object> getNewValueCallback, Func<object> getOldValueCallback, Action<object> assignValueCallback) Parameters Type Name Description System.Func < System.Object > getNewValueCallback System.Func < System.Object > getOldValueCallback System.Action < System.Object > assignValueCallback | Improve this Doc View Source Draw(Rect, Object, Action<Object>, GUIContent) Draw editor view in given Rect. Declaration Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect A rectangle in which editor view should fit. The height value is ignored. System.Object currentValue Current value of a member. System.Action < System.Object > changeValueCallback Delegate for a method that changes value of a member. Done that way to allow non-instantaneous assignments (for example, from generic menus). Invoke only when child member's value has changed; Otherwise, if the value itself has changed, call ChangeValue(Func<Object>, Func<Object>, Action<Object>) so it could manage Do/Undo stack in a proper way. GUIContent label Label content to display. Returns Type Description Rect The area that was taken by the property. | Improve this Doc View Source Draw(Rect, Object, Action<Object>, String) Draw editor view in given Rect. Declaration Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, string label) Parameters Type Name Description Rect rect A rectangle in which editor view should fit. The height value is ignored. System.Object currentValue Current value of a member. System.Action < System.Object > changeValueCallback Delegate for a method that changes value of a member. Done that way to allow non-instantaneous assignments (for example, from generic menus). Invoke only when the value (or values of child members) has actually changed. System.String label Label text to display. Returns Type Description Rect The area that was taken by the property. | Improve this Doc View Source GetLabel(Object, Type) Return a label for a value of declaredType . Declaration GUIContent GetLabel(object value, Type declaredType) Parameters Type Name Description System.Object value System.Type declaredType Returns Type Description GUIContent | Improve this Doc View Source GetLabel(MemberInfo, Object) Return a label for a property/field memberInfo of an object memberOwner . Declaration GUIContent GetLabel(MemberInfo memberInfo, object memberOwner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object memberOwner Returns Type Description GUIContent"
  },
  "api/VRBuilder.Editor.UI.Drawers.LocalizedStringPropertyDrawer.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.LocalizedStringPropertyDrawer.html",
    "title": "Class LocalizedStringPropertyDrawer | VR Builder Documentation",
    "keywords": "Class LocalizedStringPropertyDrawer Inheritance System.Object AbstractDrawer ObjectDrawer LocalizedStringPropertyDrawer Implements IProcessDrawer Inherited Members ObjectDrawer.CheckValidationForValue(Object, MemberInfo, GUIContent) ObjectDrawer.AddValidationInformation(GUIContent, List<EditorReportEntry>) ObjectDrawer.GetValidationReports(Object) ObjectDrawer.GetValidationReportsFor(IData, MemberInfo) ObjectDrawer.DrawLabel(Rect, Object, Action<Object>, GUIContent) ObjectDrawer.GetLabel(MemberInfo, Object) ObjectDrawer.GetLabel(Object, Type) ObjectDrawer.GetTypeNameLabel(Object, Type) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.UserInterface.AddOn.dll Syntax [DefaultProcessDrawer(typeof(SetLocalizedTextBehavior.EntityData))] public class LocalizedStringPropertyDrawer : ObjectDrawer, IProcessDrawer Methods | Improve this Doc Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback GUIContent label Returns Type Description Rect | Improve this Doc GetMembersToDraw(Object) Declaration protected override IEnumerable<MemberInfo> GetMembersToDraw(object value) Parameters Type Name Description System.Object value Returns Type Description System.Collections.Generic.IEnumerable < System.Reflection.MemberInfo > Overrides ObjectDrawer.GetMembersToDraw(Object) Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.Drawers.NameableDrawer.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.NameableDrawer.html",
    "title": "Class NameableDrawer | VR Builder Documentation",
    "keywords": "Class NameableDrawer Drawer for values implementing INameable interface. Instead of drawing a plain text as a label, it draws a TextField with the name. Inheritance System.Object AbstractDrawer ObjectDrawer NameableDrawer CompareValuesDrawer<T> CompareValueToConstDrawer<T> PlayAudioBehaviorDrawer SetComponentEnabledBehaviorDrawer SetComponentEnabledByTagBehaviorDrawer CheckStateDrawer SetStateDrawer NumPadCompareDrawer Implements IProcessDrawer Inherited Members ObjectDrawer.Draw(Rect, Object, Action<Object>, GUIContent) ObjectDrawer.CheckValidationForValue(Object, MemberInfo, GUIContent) ObjectDrawer.AddValidationInformation(GUIContent, List<EditorReportEntry>) ObjectDrawer.GetValidationReports(Object) ObjectDrawer.GetValidationReportsFor(IData, MemberInfo) ObjectDrawer.GetLabel(MemberInfo, Object) ObjectDrawer.GetLabel(Object, Type) ObjectDrawer.GetMembersToDraw(Object) ObjectDrawer.GetTypeNameLabel(Object, Type) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax [DefaultProcessDrawer(typeof(INamedData))] public class NameableDrawer : ObjectDrawer, IProcessDrawer Methods | Improve this Doc View Source DrawLabel(Rect, Object, Action<Object>, GUIContent) Draw a label for an object. Declaration protected override float DrawLabel(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback GUIContent label Returns Type Description System.Single Overrides ObjectDrawer.DrawLabel(Rect, Object, Action<Object>, GUIContent) Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.Drawers.NumPadCompareDrawer.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.NumPadCompareDrawer.html",
    "title": "Class NumPadCompareDrawer | VR Builder Documentation",
    "keywords": "Class NumPadCompareDrawer Custom drawer for NumPadCompareCondition . Inheritance System.Object AbstractDrawer ObjectDrawer NameableDrawer NumPadCompareDrawer Implements IProcessDrawer Inherited Members NameableDrawer.DrawLabel(Rect, Object, Action<Object>, GUIContent) ObjectDrawer.CheckValidationForValue(Object, MemberInfo, GUIContent) ObjectDrawer.AddValidationInformation(GUIContent, List<EditorReportEntry>) ObjectDrawer.GetValidationReports(Object) ObjectDrawer.GetValidationReportsFor(IData, MemberInfo) ObjectDrawer.GetLabel(MemberInfo, Object) ObjectDrawer.GetLabel(Object, Type) ObjectDrawer.GetMembersToDraw(Object) ObjectDrawer.GetTypeNameLabel(Object, Type) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.UserInterface.AddOn.dll Syntax [DefaultProcessDrawer(typeof(NumPadCompareCondition.EntityData))] public class NumPadCompareDrawer : NameableDrawer, IProcessDrawer Methods | Improve this Doc Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback GUIContent label Returns Type Description Rect Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.Drawers.ObjectDrawer.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.ObjectDrawer.html",
    "title": "Class ObjectDrawer | VR Builder Documentation",
    "keywords": "Class ObjectDrawer Process drawer for object properties. Used when everything else does not fit. Inheritance System.Object AbstractDrawer ObjectDrawer LocalizationTableDrawer LocalizedStringPropertyDrawer NameableDrawer Implements IProcessDrawer Inherited Members AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax [DefaultProcessDrawer(typeof(object))] public class ObjectDrawer : AbstractDrawer, IProcessDrawer Methods | Improve this Doc View Source AddValidationInformation(GUIContent, List<EditorReportEntry>) Declaration protected virtual GUIContent AddValidationInformation(GUIContent guiContent, List<EditorReportEntry> entries) Parameters Type Name Description GUIContent guiContent System.Collections.Generic.List < EditorReportEntry > entries Returns Type Description GUIContent | Improve this Doc View Source CheckValidationForValue(Object, MemberInfo, GUIContent) Declaration protected virtual void CheckValidationForValue(object currentValue, MemberInfo info, GUIContent label) Parameters Type Name Description System.Object currentValue System.Reflection.MemberInfo info GUIContent label | Improve this Doc View Source Draw(Rect, Object, Action<Object>, GUIContent) Draw editor view in given Rect. Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect A rectangle in which editor view should fit. The height value is ignored. System.Object currentValue Current value of a member. System.Action < System.Object > changeValueCallback Delegate for a method that changes value of a member. Done that way to allow non-instantaneous assignments (for example, from generic menus). Invoke only when child member's value has changed; Otherwise, if the value itself has changed, call ChangeValue(Func<Object>, Func<Object>, Action<Object>) so it could manage Do/Undo stack in a proper way. GUIContent label Label content to display. Returns Type Description Rect The area that was taken by the property. Overrides AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) | Improve this Doc View Source DrawLabel(Rect, Object, Action<Object>, GUIContent) Draw a label for an object. Declaration protected virtual float DrawLabel(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback GUIContent label Returns Type Description System.Single | Improve this Doc View Source GetLabel(Object, Type) Declaration public override GUIContent GetLabel(object value, Type declaredType) Parameters Type Name Description System.Object value System.Type declaredType Returns Type Description GUIContent Overrides AbstractDrawer.GetLabel(Object, Type) | Improve this Doc View Source GetLabel(MemberInfo, Object) Declaration public override GUIContent GetLabel(MemberInfo memberInfo, object memberOwner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object memberOwner Returns Type Description GUIContent Overrides AbstractDrawer.GetLabel(MemberInfo, Object) | Improve this Doc View Source GetMembersToDraw(Object) Declaration protected virtual IEnumerable<MemberInfo> GetMembersToDraw(object value) Parameters Type Name Description System.Object value Returns Type Description System.Collections.Generic.IEnumerable < System.Reflection.MemberInfo > | Improve this Doc View Source GetTypeNameLabel(Object, Type) Declaration protected virtual GUIContent GetTypeNameLabel(object value, Type declaredType) Parameters Type Name Description System.Object value System.Type declaredType Returns Type Description GUIContent | Improve this Doc View Source GetValidationReports(Object) Declaration protected virtual List<EditorReportEntry> GetValidationReports(object value) Parameters Type Name Description System.Object value Returns Type Description System.Collections.Generic.List < EditorReportEntry > | Improve this Doc View Source GetValidationReportsFor(IData, MemberInfo) Declaration protected virtual List<EditorReportEntry> GetValidationReportsFor(IData data, MemberInfo memberInfo) Parameters Type Name Description IData data System.Reflection.MemberInfo memberInfo Returns Type Description System.Collections.Generic.List < EditorReportEntry > Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.Drawers.ParticleSystemPropertySelectableValueDrawer.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.ParticleSystemPropertySelectableValueDrawer.html",
    "title": "Class ParticleSystemPropertySelectableValueDrawer | VR Builder Documentation",
    "keywords": "Class ParticleSystemPropertySelectableValueDrawer Concrete implementation of SelectableValue<TFirst, TSecond> for IParticleSystemProperty . Inheritance System.Object AbstractDrawer SelectableValueDrawer < ScenePropertyReference < IParticleSystemProperty >, SceneObjectTag < IParticleSystemProperty >> ParticleSystemPropertySelectableValueDrawer Implements IProcessDrawer Inherited Members SelectableValueDrawer<ScenePropertyReference<IParticleSystemProperty>, SceneObjectTag<IParticleSystemProperty>>.Draw(Rect, Object, Action<Object>, GUIContent) SelectableValueDrawer<ScenePropertyReference<IParticleSystemProperty>, SceneObjectTag<IParticleSystemProperty>>.AddNewRectLine(Rect) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax [Obsolete(\"This drawer is obsolete and will be removed in the next major version.\")] [DefaultProcessDrawer(typeof(PropertyReferenceOrTagSelectableValue<IParticleSystemProperty>))] public class ParticleSystemPropertySelectableValueDrawer : SelectableValueDrawer<ScenePropertyReference<IParticleSystemProperty>, SceneObjectTag<IParticleSystemProperty>>, IProcessDrawer Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.ProcessSceneReferenceDrawer.html",
    "title": "Class ProcessSceneReferenceDrawer | VR Builder Documentation",
    "keywords": "Class ProcessSceneReferenceDrawer Drawer for ProcessSceneReferenceBase . Inheritance System.Object AbstractDrawer ProcessSceneReferenceDrawer Implements IProcessDrawer Inherited Members AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax [DefaultProcessDrawer(typeof(ProcessSceneReferenceBase))] public class ProcessSceneReferenceDrawer : AbstractDrawer, IProcessDrawer Fields | Improve this Doc View Source dropBoxStyle Declaration protected GUIStyle dropBoxStyle Field Value Type Description GUIStyle | Improve this Doc View Source isExpanded Declaration protected bool isExpanded Field Value Type Description System.Boolean | Improve this Doc View Source isUndoOperation Declaration protected bool isUndoOperation Field Value Type Description System.Boolean | Improve this Doc View Source richTextLabelStyle Declaration protected GUIStyle richTextLabelStyle Field Value Type Description GUIStyle Methods | Improve this Doc View Source AddFixItAllButton(IEnumerable<GameObject>, Type, ref Rect, ref Rect) Declaration protected void AddFixItAllButton(IEnumerable<GameObject> selectedSceneObject, Type valueType, ref Rect originalRect, ref Rect guiLineRect) Parameters Type Name Description System.Collections.Generic.IEnumerable < GameObject > selectedSceneObject System.Type valueType Rect originalRect Rect guiLineRect | Improve this Doc View Source AddFixItButton(GameObject, Type, ref Rect, ref Rect) Declaration protected void AddFixItButton(GameObject selectedSceneObject, Type valueType, ref Rect originalRect, ref Rect guiLineRect) Parameters Type Name Description GameObject selectedSceneObject System.Type valueType Rect originalRect Rect guiLineRect | Improve this Doc View Source AddNewRectLine(ref Rect, Single) Declaration protected Rect AddNewRectLine(ref Rect currentRect, float height = -3.40282347E+38F) Parameters Type Name Description Rect currentRect System.Single height Returns Type Description Rect | Improve this Doc View Source CreateProcessSceneObject(GameObject) Declaration protected Guid CreateProcessSceneObject(GameObject selectedSceneObject) Parameters Type Name Description GameObject selectedSceneObject Returns Type Description System.Guid | Improve this Doc View Source Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback GUIContent label Returns Type Description Rect Overrides AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) | Improve this Doc View Source DropAreaGUI(ref Rect, ref Rect, ProcessSceneReferenceBase, Action<GameObject, Rect>, Action<Object>, GUIContent) Renders a drop area GUI for assigning groups to the behavior or condition. Declaration protected void DropAreaGUI(ref Rect originalRect, ref Rect guiLineRect, ProcessSceneReferenceBase reference, Action<GameObject, Rect> dropAction, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect originalRect The rect of the whole behavior or condition. Rect guiLineRect The rect of the last drawn line. ProcessSceneReferenceBase reference System.Action < GameObject , Rect > dropAction The action to perform when a game object is dropped. System.Action < System.Object > changeValueCallback GUIContent label | Improve this Doc View Source SceneObjectAutomaticSetup(GameObject, Type) Declaration protected void SceneObjectAutomaticSetup(GameObject selectedSceneObject, Type valueType) Parameters Type Name Description GameObject selectedSceneObject System.Type valueType Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.Drawers.ProcessVariableBoolSelectableValueDrawer.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.ProcessVariableBoolSelectableValueDrawer.html",
    "title": "Class ProcessVariableBoolSelectableValueDrawer | VR Builder Documentation",
    "keywords": "Class ProcessVariableBoolSelectableValueDrawer Concrete implementation of process variable selectable value drawer. Inheritance System.Object AbstractDrawer SelectableValueDrawer < System.Boolean , SingleScenePropertyReference < IDataProperty < System.Boolean >>> ProcessVariableBoolSelectableValueDrawer Implements IProcessDrawer Inherited Members SelectableValueDrawer<Boolean, SingleScenePropertyReference<IDataProperty<Boolean>>>.Draw(Rect, Object, Action<Object>, GUIContent) SelectableValueDrawer<Boolean, SingleScenePropertyReference<IDataProperty<Boolean>>>.AddNewRectLine(Rect) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax [DefaultProcessDrawer(typeof(ProcessVariableSelectableValue<bool>))] public class ProcessVariableBoolSelectableValueDrawer : SelectableValueDrawer<bool, SingleScenePropertyReference<IDataProperty<bool>>>, IProcessDrawer Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.Drawers.ProcessVariableFloatSelectableValueDrawer.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.ProcessVariableFloatSelectableValueDrawer.html",
    "title": "Class ProcessVariableFloatSelectableValueDrawer | VR Builder Documentation",
    "keywords": "Class ProcessVariableFloatSelectableValueDrawer Concrete implementation of process variable selectable value drawer. Inheritance System.Object AbstractDrawer SelectableValueDrawer < System.Single , SingleScenePropertyReference < IDataProperty < System.Single >>> ProcessVariableFloatSelectableValueDrawer Implements IProcessDrawer Inherited Members SelectableValueDrawer<Single, SingleScenePropertyReference<IDataProperty<Single>>>.Draw(Rect, Object, Action<Object>, GUIContent) SelectableValueDrawer<Single, SingleScenePropertyReference<IDataProperty<Single>>>.AddNewRectLine(Rect) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax [DefaultProcessDrawer(typeof(ProcessVariableSelectableValue<float>))] public class ProcessVariableFloatSelectableValueDrawer : SelectableValueDrawer<float, SingleScenePropertyReference<IDataProperty<float>>>, IProcessDrawer Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.Drawers.ProcessVariableStringSelectableValueDrawer.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.ProcessVariableStringSelectableValueDrawer.html",
    "title": "Class ProcessVariableStringSelectableValueDrawer | VR Builder Documentation",
    "keywords": "Class ProcessVariableStringSelectableValueDrawer Concrete implementation of process variable selectable value drawer. Inheritance System.Object AbstractDrawer SelectableValueDrawer < System.String , SingleScenePropertyReference < IDataProperty < System.String >>> ProcessVariableStringSelectableValueDrawer Implements IProcessDrawer Inherited Members SelectableValueDrawer<String, SingleScenePropertyReference<IDataProperty<String>>>.Draw(Rect, Object, Action<Object>, GUIContent) SelectableValueDrawer<String, SingleScenePropertyReference<IDataProperty<String>>>.AddNewRectLine(Rect) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax [DefaultProcessDrawer(typeof(ProcessVariableSelectableValue<string>))] public class ProcessVariableStringSelectableValueDrawer : SelectableValueDrawer<string, SingleScenePropertyReference<IDataProperty<string>>>, IProcessDrawer Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.Drawers.ResourcePathDrawer-1.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.ResourcePathDrawer-1.html",
    "title": "Class ResourcePathDrawer<T> | VR Builder Documentation",
    "keywords": "Class ResourcePathDrawer<T> Draws an object field and sets the Resources path of the dragged object. Inheritance System.Object AbstractDrawer ResourcePathDrawer<T> AnimationClipResourceDrawer VideoClipResourceDrawer Implements IProcessDrawer Inherited Members AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax public abstract class ResourcePathDrawer<T> : AbstractDrawer, IProcessDrawer where T : Object Type Parameters Name Description T Methods | Improve this Doc View Source Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback GUIContent label Returns Type Description Rect Overrides AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.Drawers.SceneDropdownDrawer.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.SceneDropdownDrawer.html",
    "title": "Class SceneDropdownDrawer | VR Builder Documentation",
    "keywords": "Class SceneDropdownDrawer Drawer for a dropdown listing all the scenes in the build settings and allowing to select one by index. Inheritance System.Object AbstractDrawer DropdownDrawer < System.String > SceneDropdownDrawer Implements IProcessDrawer Inherited Members DropdownDrawer<String>.Draw(Rect, Object, Action<Object>, GUIContent) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax public class SceneDropdownDrawer : DropdownDrawer<string>, IProcessDrawer Constructors | Improve this Doc View Source SceneDropdownDrawer() Declaration public SceneDropdownDrawer() Properties | Improve this Doc View Source PossibleOptions List of elements displayed in the dropdown. Declaration protected override IList<DropDownElement<string>> PossibleOptions { get; } Property Value Type Description System.Collections.Generic.IList < DropDownElement < System.String >> Overrides VRBuilder.Editor.UI.Drawers.DropdownDrawer<System.String>.PossibleOptions Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.Drawers.SceneObjectTagDrawer.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.SceneObjectTagDrawer.html",
    "title": "Class SceneObjectTagDrawer | VR Builder Documentation",
    "keywords": "Class SceneObjectTagDrawer Drawer for SceneObjectTagBase . Inheritance System.Object AbstractDrawer SceneObjectTagDrawer Implements IProcessDrawer Inherited Members AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax [DefaultProcessDrawer(typeof(SceneObjectTagBase))] [Obsolete(\"This drawer is obsolete and will be removed in the next major version.\")] public class SceneObjectTagDrawer : AbstractDrawer, IProcessDrawer Fields | Improve this Doc View Source isUndoOperation Declaration protected bool isUndoOperation Field Value Type Description System.Boolean Methods | Improve this Doc View Source AddNewRectLine(ref Rect) Declaration protected Rect AddNewRectLine(ref Rect currentRect) Parameters Type Name Description Rect currentRect Returns Type Description Rect | Improve this Doc View Source CheckForMisconfigurationIssues(GameObject, Type, ref Rect, ref Rect) Declaration protected void CheckForMisconfigurationIssues(GameObject selectedSceneObject, Type valueType, ref Rect originalRect, ref Rect guiLineRect) Parameters Type Name Description GameObject selectedSceneObject System.Type valueType Rect originalRect Rect guiLineRect | Improve this Doc View Source Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback GUIContent label Returns Type Description Rect Overrides AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) | Improve this Doc View Source SceneObjectAutomaticSetup(GameObject, Type) Declaration protected void SceneObjectAutomaticSetup(GameObject selectedSceneObject, Type valueType) Parameters Type Name Description GameObject selectedSceneObject System.Type valueType Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.Drawers.SelectableValueDrawer-2.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.SelectableValueDrawer-2.html",
    "title": "Class SelectableValueDrawer<TFirst, TSecond> | VR Builder Documentation",
    "keywords": "Class SelectableValueDrawer<TFirst, TSecond> Template drawer for selectable values. A concrete implementation of this drawer is required for each use case. Inheritance System.Object AbstractDrawer SelectableValueDrawer<TFirst, TSecond> ParticleSystemPropertySelectableValueDrawer ProcessVariableBoolSelectableValueDrawer ProcessVariableFloatSelectableValueDrawer ProcessVariableStringSelectableValueDrawer StringsSelectableValueDrawer Implements IProcessDrawer Inherited Members AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax public abstract class SelectableValueDrawer<TFirst, TSecond> : AbstractDrawer, IProcessDrawer Type Parameters Name Description TFirst TSecond Methods | Improve this Doc View Source AddNewRectLine(ref Rect) Declaration protected Rect AddNewRectLine(ref Rect currentRect) Parameters Type Name Description Rect currentRect Returns Type Description Rect | Improve this Doc View Source Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback GUIContent label Returns Type Description Rect Overrides AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.Drawers.StringsSelectableValueDrawer.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.StringsSelectableValueDrawer.html",
    "title": "Class StringsSelectableValueDrawer | VR Builder Documentation",
    "keywords": "Class StringsSelectableValueDrawer Selectable value drawer letting the user choose between two string values. Inheritance System.Object AbstractDrawer SelectableValueDrawer < System.String , System.String > StringsSelectableValueDrawer Implements IProcessDrawer Inherited Members SelectableValueDrawer<String, String>.Draw(Rect, Object, Action<Object>, GUIContent) SelectableValueDrawer<String, String>.AddNewRectLine(Rect) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax public class StringsSelectableValueDrawer : SelectableValueDrawer<string, string>, IProcessDrawer Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.Drawers.UniqueNameReferenceDrawer.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.UniqueNameReferenceDrawer.html",
    "title": "Class UniqueNameReferenceDrawer | VR Builder Documentation",
    "keywords": "Class UniqueNameReferenceDrawer Process drawer for UniqueNameReference members. Inheritance System.Object AbstractDrawer UniqueNameReferenceDrawer Implements IProcessDrawer Inherited Members AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax [Obsolete(\"This drawer is obsolete and will be removed in the next major version.\")] [DefaultProcessDrawer(typeof(UniqueNameReference))] public class UniqueNameReferenceDrawer : AbstractDrawer, IProcessDrawer Fields | Improve this Doc View Source isUndoOperation Declaration protected bool isUndoOperation Field Value Type Description System.Boolean | Improve this Doc View Source missingUniqueNames Declaration protected readonly HashSet<string> missingUniqueNames Field Value Type Description System.Collections.Generic.HashSet < System.String > | Improve this Doc View Source undoGroupName Declaration protected const string undoGroupName = \"brotcat\" Field Value Type Description System.String Methods | Improve this Doc View Source AddNewRectLine(ref Rect) Declaration protected Rect AddNewRectLine(ref Rect currentRect) Parameters Type Name Description Rect currentRect Returns Type Description Rect | Improve this Doc View Source CheckForMisconfigurationIssues(GameObject, Type, ref Rect, ref Rect) Declaration protected void CheckForMisconfigurationIssues(GameObject selectedSceneObject, Type valueType, ref Rect originalRect, ref Rect guiLineRect) Parameters Type Name Description GameObject selectedSceneObject System.Type valueType Rect originalRect Rect guiLineRect | Improve this Doc View Source Draw(Rect, Object, Action<Object>, GUIContent) Draw editor view in given Rect. Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect A rectangle in which editor view should fit. The height value is ignored. System.Object currentValue Current value of a member. System.Action < System.Object > changeValueCallback Delegate for a method that changes value of a member. Done that way to allow non-instantaneous assignments (for example, from generic menus). Invoke only when child member's value has changed; Otherwise, if the value itself has changed, call ChangeValue(Func<Object>, Func<Object>, Action<Object>) so it could manage Do/Undo stack in a proper way. GUIContent label Label content to display. Returns Type Description Rect The area that was taken by the property. Overrides AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) | Improve this Doc View Source GetGameObjectFromID(String) Declaration protected GameObject GetGameObjectFromID(string objectUniqueName) Parameters Type Name Description System.String objectUniqueName Returns Type Description GameObject | Improve this Doc View Source GetIDFromSelectedObject(GameObject, Type, String) Declaration protected string GetIDFromSelectedObject(GameObject selectedSceneObject, Type valueType, string oldUniqueName) Parameters Type Name Description GameObject selectedSceneObject System.Type valueType System.String oldUniqueName Returns Type Description System.String | Improve this Doc View Source SceneObjectAutomaticSetup(GameObject, Type) Declaration protected void SceneObjectAutomaticSetup(GameObject selectedSceneObject, Type valueType) Parameters Type Name Description GameObject selectedSceneObject System.Type valueType Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.Drawers.UserTagDropdownDrawer.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.UserTagDropdownDrawer.html",
    "title": "Class UserTagDropdownDrawer | VR Builder Documentation",
    "keywords": "Class UserTagDropdownDrawer Drawer for SceneObjectTagBase . Inheritance System.Object AbstractDrawer UserTagDropdownDrawer Implements IProcessDrawer Inherited Members AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax [Obsolete(\"This drawer is obsolete and will be removed in the next major version.\")] public class UserTagDropdownDrawer : AbstractDrawer, IProcessDrawer Fields | Improve this Doc View Source isUndoOperation Declaration protected bool isUndoOperation Field Value Type Description System.Boolean Methods | Improve this Doc View Source AddNewRectLine(ref Rect) Declaration protected Rect AddNewRectLine(ref Rect currentRect) Parameters Type Name Description Rect currentRect Returns Type Description Rect | Improve this Doc View Source CheckForMisconfigurationIssues(GameObject, Type, ref Rect, ref Rect) Declaration protected void CheckForMisconfigurationIssues(GameObject selectedSceneObject, Type valueType, ref Rect originalRect, ref Rect guiLineRect) Parameters Type Name Description GameObject selectedSceneObject System.Type valueType Rect originalRect Rect guiLineRect | Improve this Doc View Source Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback GUIContent label Returns Type Description Rect Overrides AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) | Improve this Doc View Source SceneObjectAutomaticSetup(GameObject, Type) Declaration protected void SceneObjectAutomaticSetup(GameObject selectedSceneObject, Type valueType) Parameters Type Name Description GameObject selectedSceneObject System.Type valueType Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.Drawers.VideoClipResourceDrawer.html": {
    "href": "api/VRBuilder.Editor.UI.Drawers.VideoClipResourceDrawer.html",
    "title": "Class VideoClipResourceDrawer | VR Builder Documentation",
    "keywords": "Class VideoClipResourceDrawer Implementation of asset path drawer for assets. Inheritance System.Object AbstractDrawer ResourcePathDrawer < VideoClip > VideoClipResourceDrawer Implements IProcessDrawer Inherited Members ResourcePathDrawer<VideoClip>.Draw(Rect, Object, Action<Object>, GUIContent) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Drawers Assembly : VRBuilder.Editor.dll Syntax public class VideoClipResourceDrawer : ResourcePathDrawer<VideoClip>, IProcessDrawer Implements IProcessDrawer"
  },
  "api/VRBuilder.Editor.UI.EditorDrawingHelper.html": {
    "href": "api/VRBuilder.Editor.UI.EditorDrawingHelper.html",
    "title": "Class EditorDrawingHelper | VR Builder Documentation",
    "keywords": "Class EditorDrawingHelper Helper class for drawing primitives in custom editors. Inheritance System.Object EditorDrawingHelper Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI Assembly : VRBuilder.Editor.dll Syntax public static class EditorDrawingHelper Fields | Improve this Doc View Source ButtonHeight Height of one button in the Step Inspector. Declaration public static float ButtonHeight Field Value Type Description System.Single Remarks There isn't a constant for this in Unity. This is the same as the height of the \"Add Behavior\" Unity button. | Improve this Doc View Source IndentationWidth Width of one indentation step in the Step Inspector. Declaration public const float IndentationWidth = 16F Field Value Type Description System.Single | Improve this Doc View Source VerticalSpacing Default spacing between Step Inspector elements. Declaration public const float VerticalSpacing = 6F Field Value Type Description System.Single Properties | Improve this Doc View Source HeaderLineHeight Height of slightly bigger line in the Step Inspector. Declaration public static float HeaderLineHeight { get; } Property Value Type Description System.Single | Improve this Doc View Source SingleLineHeight Height of one line in the Step Inspector. Declaration public static float SingleLineHeight { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source CalculateAddButtonRect(ref Rect) Draw button which is similar to default \"Add Component\" Unity button. Declaration public static Rect CalculateAddButtonRect(ref Rect rect) Parameters Type Name Description Rect rect Returns Type Description Rect | Improve this Doc View Source DrawAddButton(ref Rect, String) Draw button which is similar to default \"Add Component\" Unity button. Declaration public static bool DrawAddButton(ref Rect rect, string label) Parameters Type Name Description Rect rect System.String label Returns Type Description System.Boolean | Improve this Doc View Source DrawArrow(Vector2, Vector2, Color, Single, Single) Draw an arrow. Declaration public static void DrawArrow(Vector2 from, Vector2 to, Color color, float arrowheadAngleInDegrees, float arrowheadLength) Parameters Type Name Description Vector2 from Position from which arrow begins. Vector2 to Position at which arrow is pointing. Color color Arrow color. System.Single arrowheadAngleInDegrees How wide is the arrow's end in degrees. System.Single arrowheadLength How long is the arrow head in pixels. | Improve this Doc View Source DrawCircle(Vector2, Single, Color) Draw a circle. Declaration public static void DrawCircle(Vector2 position, float radius, Color color) Parameters Type Name Description Vector2 position Center of the circle. System.Single radius Radius of the circle. Color color Color of the circle. | Improve this Doc View Source DrawFoldoutWithReducedFocusArea(Rect, Boolean, GUIContent, GUIStyle, GUIStyle) Draws EditorGUI.Foldout with focus area located only around triangle-shaped button. Declaration public static bool DrawFoldoutWithReducedFocusArea(Rect rect, bool currentState, GUIContent foldoutLabel, GUIStyle foldoutStyle = null, GUIStyle labelStyle = null) Parameters Type Name Description Rect rect Rectangle in which foldout view is drawn. System.Boolean currentState Are contents folded out. GUIContent foldoutLabel Foldout text. GUIStyle foldoutStyle Foldout style. GUIStyle labelStyle Returns Type Description System.Boolean result of EditorGUI.Foldout (is foldout expanded or not). | Improve this Doc View Source DrawHelpButton(ref Rect) Draw a paste button next to the DrawPasteButton(ref Rect) button. Declaration public static bool DrawHelpButton(ref Rect rect) Parameters Type Name Description Rect rect Returns Type Description System.Boolean | Improve this Doc View Source DrawHollowRectangle(Rect, Color, Single) Draws a rectangle which is hollow inside. Declaration public static void DrawHollowRectangle(Rect rect, Color color, float lineWidth) Parameters Type Name Description Rect rect Rect that defines outer bounds of rectangle. Color color Color of rectangle borders. System.Single lineWidth Thickness of the rect border. | Improve this Doc View Source DrawHorizontalLine(Vector2, Single, Color) Draws a horizontal line starting at startPoint with given length . Declaration public static void DrawHorizontalLine(Vector2 startPoint, float length, Color color) Parameters Type Name Description Vector2 startPoint Origin of line. System.Single length Length of line. Color color Color or line. | Improve this Doc View Source DrawPasteButton(ref Rect) Draw a paste button next to the DrawAddButton(ref Rect, String) button. Declaration public static bool DrawPasteButton(ref Rect rect) Parameters Type Name Description Rect rect Returns Type Description System.Boolean | Improve this Doc View Source DrawPolyline(IList<Vector2>, Color) Draws a curve by connecting the given points with lines. Declaration public static void DrawPolyline(IList<Vector2> points, Color color) Parameters Type Name Description System.Collections.Generic.IList < Vector2 > points Color color Color of the curve. | Improve this Doc View Source DrawRect(Rect, Color) Draw a rect. Declaration public static void DrawRect(Rect rect, Color color) Parameters Type Name Description Rect rect Rect size and position to draw. Color color Color of the rect. | Improve this Doc View Source DrawRoundedRect(Rect, Color, Single) Draw a rectangle with rounded corners. Declaration public static void DrawRoundedRect(Rect rect, Color color, float cornerRadius) Parameters Type Name Description Rect rect Rect size and position to draw. Color color Color of the rect. System.Single cornerRadius Corners are drawn as quarters of a circle with radius equal to cornerRadius. If the radius is too small (less than one pixel) or too big (bigger than a half of any side), simple rect is drawn. | Improve this Doc View Source DrawTexture(Rect, Texture, Color) Draws a texture in a specific color Declaration public static void DrawTexture(Rect iconRect, Texture texture, Color color) Parameters Type Name Description Rect iconRect Position and size of the texture. Texture texture The texture to paint. Color color The color it should be painted in. | Improve this Doc View Source DrawTriangle(IList<Vector2>, Color) Draw a triangle. Declaration public static void DrawTriangle(IList<Vector2> points, Color color) Parameters Type Name Description System.Collections.Generic.IList < Vector2 > points List of points Color color Fill color of triangle | Improve this Doc View Source DrawVerticalLine(Vector2, Single, Color) Draws a vertical line starting at startPoint with given length . Declaration public static void DrawVerticalLine(Vector2 startPoint, float length, Color color) Parameters Type Name Description Vector2 startPoint Origin of line. System.Single length Length of line. Color color Color or line. | Improve this Doc View Source GetNextLineRect(Rect) Returns Rect which is one EditorGUIUtility.singleLineHeight lower and one EditorGUIUtility.singleLineHeight shorter than origin Rect. Declaration public static Rect GetNextLineRect(Rect origin) Parameters Type Name Description Rect origin Returns Type Description Rect | Improve this Doc View Source TruncateText(String, GUIStyle, Single, String) Truncate given text. Applies truncatingSequence at the end of truncated text. Space characters at the end of the line are discarded. Designed for a single-line string, no clue how well would it work with multi-line. Declaration public static string TruncateText(string text, GUIStyle style, float maxWidth, string truncatingSequence = \"...\") Parameters Type Name Description System.String text Initial text. GUIStyle style Style in which text width is calculated. System.Single maxWidth Maximal width allowed in pixels. System.String truncatingSequence Text to be appended at the end of the truncated text. Returns Type Description System.String Truncated text that is not wider than maximal width."
  },
  "api/VRBuilder.Editor.UI.EditorIcon.html": {
    "href": "api/VRBuilder.Editor.UI.EditorIcon.html",
    "title": "Class EditorIcon | VR Builder Documentation",
    "keywords": "Class EditorIcon Utility class to help with different unity color schemes (dark/light). Takes care about loading the given icon, will add _light or _dark to the given path. If only one icon is found it will be used for both skins. If no icon is found there will be an NullReferenceException thrown. DO NOT ADD FILE ENDINGS TO THE PATH! Inheritance System.Object EditorIcon Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI Assembly : VRBuilder.Editor.dll Syntax public class EditorIcon Constructors | Improve this Doc View Source EditorIcon(String) Declaration public EditorIcon(string path) Parameters Type Name Description System.String path Properties | Improve this Doc View Source Texture Returns the texture of the icon, depending on the skin used. Declaration public Texture Texture { get; } Property Value Type Description Texture"
  },
  "api/VRBuilder.Editor.UI.Graphics.DefaultStepNodeInstantiator.html": {
    "href": "api/VRBuilder.Editor.UI.Graphics.DefaultStepNodeInstantiator.html",
    "title": "Class DefaultStepNodeInstantiator | VR Builder Documentation",
    "keywords": "Class DefaultStepNodeInstantiator Instantiator for a default IStep node. Inheritance System.Object DefaultStepNodeInstantiator Implements IStepNodeInstantiator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Graphics Assembly : VRBuilder.Editor.dll Syntax public class DefaultStepNodeInstantiator : IStepNodeInstantiator Properties | Improve this Doc View Source IsInNodeMenu If true, it will appear in the node menu. Declaration public bool IsInNodeMenu { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Display name of the instantiated node. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Priority Nodes with a lower value will appear first in the menu. Declaration public int Priority { get; } Property Value Type Description System.Int32 | Improve this Doc View Source StepType Step type metadata. Declaration public string StepType { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetContextMenuStatus(IEventHandler, IChapter) Returns the status for the context menu entry to instantiate the node. Declaration public DropdownMenuAction.Status GetContextMenuStatus(IEventHandler target, IChapter currentChapter) Parameters Type Name Description IEventHandler target IChapter currentChapter Returns Type Description DropdownMenuAction.Status | Improve this Doc View Source InstantiateNode(IStep) Creates a graphview node of the corresponding type. Declaration public ProcessGraphNode InstantiateNode(IStep step) Parameters Type Name Description IStep step Returns Type Description ProcessGraphNode Implements IStepNodeInstantiator"
  },
  "api/VRBuilder.Editor.UI.Graphics.EndChapterNode.html": {
    "href": "api/VRBuilder.Editor.UI.Graphics.EndChapterNode.html",
    "title": "Class EndChapterNode | VR Builder Documentation",
    "keywords": "Class EndChapterNode Node representation for the End Chapter node. Inheritance System.Object ProcessGraphNode StepGraphNode EndChapterNode Inherited Members StepGraphNode.step StepGraphNode.Name StepGraphNode.EntryPoint StepGraphNode.Outputs StepGraphNode.Position StepGraphNode.Refresh() StepGraphNode.CreatePortWithUndo() StepGraphNode.RemovePort(Port) StepGraphNode.RemovePortWithUndo(Port) StepGraphNode.SetOutput(Int32, IStep) StepGraphNode.AddToChapter(IChapter) StepGraphNode.RemoveFromChapter(IChapter) StepGraphNode.UpdateOutputPortName(Port, Node) ProcessGraphNode.deleteIconFileName ProcessGraphNode.editIconFileName ProcessGraphNode.defaultNodeSize ProcessGraphNode.IsEntryPoint ProcessGraphNode.CreatePort(Direction, Port.Capacity) ProcessGraphNode.GetIcon(String) ProcessGraphNode.OpenTextEditor() ProcessGraphNode.OnEditTextFinished(TextField) Namespace : VRBuilder.Editor.UI.Graphics Assembly : VRBuilder.Editor.dll Syntax public class EndChapterNode : StepGraphNode Constructors | Improve this Doc View Source EndChapterNode(IStep) Declaration public EndChapterNode(IStep step) Parameters Type Name Description IStep step Fields | Improve this Doc View Source DefaultPadding Declaration protected const float DefaultPadding = 8F Field Value Type Description System.Single | Improve this Doc View Source DropDownPadding Declaration protected const float DropDownPadding = 4F Field Value Type Description System.Single | Improve this Doc View Source ElementWidth Declaration protected const float ElementWidth = 128F Field Value Type Description System.Single Properties | Improve this Doc View Source Behavior Declaration protected GoToChapterBehavior Behavior { get; } Property Value Type Description GoToChapterBehavior Methods | Improve this Doc View Source AddTransitionPort(Boolean, Int32) Declaration public override Port AddTransitionPort(bool isDeletablePort = true, int index = -1) Parameters Type Name Description System.Boolean isDeletablePort System.Int32 index Returns Type Description Port Overrides ProcessGraphNode.AddTransitionPort(Boolean, Int32) | Improve this Doc View Source OnSelected() Declaration public override void OnSelected() Overrides StepGraphNode.OnSelected()"
  },
  "api/VRBuilder.Editor.UI.Graphics.EndChapterNodeInstantiator.html": {
    "href": "api/VRBuilder.Editor.UI.Graphics.EndChapterNodeInstantiator.html",
    "title": "Class EndChapterNodeInstantiator | VR Builder Documentation",
    "keywords": "Class EndChapterNodeInstantiator Instantiator for the End Chapter node. Inheritance System.Object EndChapterNodeInstantiator Implements IStepNodeInstantiator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Graphics Assembly : VRBuilder.Editor.dll Syntax public class EndChapterNodeInstantiator : IStepNodeInstantiator Properties | Improve this Doc View Source IsInNodeMenu If true, it will appear in the node menu. Declaration public bool IsInNodeMenu { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Display name of the instantiated node. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Priority Nodes with a lower value will appear first in the menu. Declaration public int Priority { get; } Property Value Type Description System.Int32 | Improve this Doc View Source StepType Step type metadata. Declaration public string StepType { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetContextMenuStatus(IEventHandler, IChapter) Returns the status for the context menu entry to instantiate the node. Declaration public DropdownMenuAction.Status GetContextMenuStatus(IEventHandler target, IChapter currentChapter) Parameters Type Name Description IEventHandler target IChapter currentChapter Returns Type Description DropdownMenuAction.Status | Improve this Doc View Source InstantiateNode(IStep) Creates a graphview node of the corresponding type. Declaration public ProcessGraphNode InstantiateNode(IStep step) Parameters Type Name Description IStep step Returns Type Description ProcessGraphNode Implements IStepNodeInstantiator"
  },
  "api/VRBuilder.Editor.UI.Graphics.EntryPointNode.html": {
    "href": "api/VRBuilder.Editor.UI.Graphics.EntryPointNode.html",
    "title": "Class EntryPointNode | VR Builder Documentation",
    "keywords": "Class EntryPointNode Entry point node in a graph view editor. Inheritance System.Object ProcessGraphNode EntryPointNode Inherited Members ProcessGraphNode.deleteIconFileName ProcessGraphNode.editIconFileName ProcessGraphNode.defaultNodeSize ProcessGraphNode.IsEntryPoint ProcessGraphNode.UpdateOutputPortName(Port, Node) ProcessGraphNode.AddTransitionPort(Boolean, Int32) ProcessGraphNode.CreatePort(Direction, Port.Capacity) ProcessGraphNode.GetIcon(String) ProcessGraphNode.OpenTextEditor() ProcessGraphNode.OnEditTextFinished(TextField) Namespace : VRBuilder.Editor.UI.Graphics Assembly : VRBuilder.Editor.dll Syntax public class EntryPointNode : ProcessGraphNode Constructors | Improve this Doc View Source EntryPointNode() Declaration public EntryPointNode() Properties | Improve this Doc View Source EntryPoint Step other nodes connect to. Declaration public override IStep EntryPoint { get; } Property Value Type Description IStep Overrides ProcessGraphNode.EntryPoint | Improve this Doc View Source Name Name of the node. Declaration public override string Name { get; set; } Property Value Type Description System.String Overrides ProcessGraphNode.Name | Improve this Doc View Source Outputs Steps this node leads to. Declaration public override IStep[] Outputs { get; } Property Value Type Description IStep [] Overrides ProcessGraphNode.Outputs | Improve this Doc View Source Position Position in the graph. Declaration public override Vector2 Position { get; set; } Property Value Type Description Vector2 Overrides ProcessGraphNode.Position Methods | Improve this Doc View Source AddToChapter(IChapter) Adds node to specified chapter. Declaration public override void AddToChapter(IChapter chapter) Parameters Type Name Description IChapter chapter Overrides ProcessGraphNode.AddToChapter(IChapter) | Improve this Doc View Source OnSelected() Declaration public override void OnSelected() | Improve this Doc View Source Refresh() Refreshes the node's graphics. Declaration public override void Refresh() Overrides ProcessGraphNode.Refresh() | Improve this Doc View Source RemoveFromChapter(IChapter) Removes node from specified chapter. Declaration public override void RemoveFromChapter(IChapter chapter) Parameters Type Name Description IChapter chapter Overrides ProcessGraphNode.RemoveFromChapter(IChapter) | Improve this Doc View Source RemovePortWithUndo(Port) Remove port with undo. Declaration protected override void RemovePortWithUndo(Port port) Parameters Type Name Description Port port Overrides ProcessGraphNode.RemovePortWithUndo(Port) | Improve this Doc View Source SetOutput(Int32, IStep) Sets an output to the specified step. Declaration public override void SetOutput(int index, IStep output) Parameters Type Name Description System.Int32 index IStep output Overrides ProcessGraphNode.SetOutput(Int32, IStep)"
  },
  "api/VRBuilder.Editor.UI.Graphics.html": {
    "href": "api/VRBuilder.Editor.UI.Graphics.html",
    "title": "Namespace VRBuilder.Editor.UI.Graphics | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.UI.Graphics Classes DefaultStepNodeInstantiator Instantiator for a default IStep node. EndChapterNode Node representation for the End Chapter node. EndChapterNodeInstantiator Instantiator for the End Chapter node. EntryPointNode Entry point node in a graph view editor. ParallelExecutionNode Graphical representation of a Parallel Execution node. ParallelExecutionNodeInstantiator Instantiator for the Step Group node. ProcessExec Type that connects step nodes in the graph view editor. ProcessGraphNode Process node in a graph view editor. ProcessGraphView Graphical representation of a process chapter. ProcessGraphViewWindow Editor windows that displays the process using a graphview. StepGraphNode Step node in a graph view editor. StepGroupNode Graphical representation of a Step Group node. StepGroupNodeInstantiator Instantiator for the Step Group node. Interfaces IContextMenuActions Interface for a process graph object having custom context menu actions. IStepNodeInstantiator Instantiates a node matching the"
  },
  "api/VRBuilder.Editor.UI.Graphics.IContextMenuActions.html": {
    "href": "api/VRBuilder.Editor.UI.Graphics.IContextMenuActions.html",
    "title": "Interface IContextMenuActions | VR Builder Documentation",
    "keywords": "Interface IContextMenuActions Interface for a process graph object having custom context menu actions. Namespace : VRBuilder.Editor.UI.Graphics Assembly : VRBuilder.Editor.dll Syntax public interface IContextMenuActions Methods | Improve this Doc View Source AddContextMenuActions(DropdownMenu) Adds custom actions to the context menu. Declaration void AddContextMenuActions(DropdownMenu menu) Parameters Type Name Description DropdownMenu menu"
  },
  "api/VRBuilder.Editor.UI.Graphics.IStepNodeInstantiator.html": {
    "href": "api/VRBuilder.Editor.UI.Graphics.IStepNodeInstantiator.html",
    "title": "Interface IStepNodeInstantiator | VR Builder Documentation",
    "keywords": "Interface IStepNodeInstantiator Instantiates a node matching the Namespace : VRBuilder.Editor.UI.Graphics Assembly : VRBuilder.Editor.dll Syntax public interface IStepNodeInstantiator Properties | Improve this Doc View Source IsInNodeMenu If true, it will appear in the node menu. Declaration bool IsInNodeMenu { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Display name of the instantiated node. Declaration string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Priority Nodes with a lower value will appear first in the menu. Declaration int Priority { get; } Property Value Type Description System.Int32 | Improve this Doc View Source StepType Step type metadata. Declaration string StepType { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetContextMenuStatus(IEventHandler, IChapter) Returns the status for the context menu entry to instantiate the node. Declaration DropdownMenuAction.Status GetContextMenuStatus(IEventHandler target, IChapter currentChapter) Parameters Type Name Description IEventHandler target IChapter currentChapter Returns Type Description DropdownMenuAction.Status | Improve this Doc View Source InstantiateNode(IStep) Creates a graphview node of the corresponding type. Declaration ProcessGraphNode InstantiateNode(IStep step) Parameters Type Name Description IStep step Returns Type Description ProcessGraphNode"
  },
  "api/VRBuilder.Editor.UI.Graphics.ParallelExecutionNode.html": {
    "href": "api/VRBuilder.Editor.UI.Graphics.ParallelExecutionNode.html",
    "title": "Class ParallelExecutionNode | VR Builder Documentation",
    "keywords": "Class ParallelExecutionNode Graphical representation of a Parallel Execution node. Inheritance System.Object ProcessGraphNode StepGraphNode ParallelExecutionNode Inherited Members StepGraphNode.step StepGraphNode.Name StepGraphNode.EntryPoint StepGraphNode.Outputs StepGraphNode.Position StepGraphNode.CreatePortWithUndo() StepGraphNode.RemovePort(Port) StepGraphNode.RemovePortWithUndo(Port) StepGraphNode.SetOutput(Int32, IStep) StepGraphNode.AddToChapter(IChapter) StepGraphNode.RemoveFromChapter(IChapter) StepGraphNode.UpdateOutputPortName(Port, Node) ProcessGraphNode.deleteIconFileName ProcessGraphNode.editIconFileName ProcessGraphNode.defaultNodeSize ProcessGraphNode.IsEntryPoint ProcessGraphNode.AddTransitionPort(Boolean, Int32) ProcessGraphNode.CreatePort(Direction, Port.Capacity) ProcessGraphNode.GetIcon(String) ProcessGraphNode.OpenTextEditor() ProcessGraphNode.OnEditTextFinished(TextField) Namespace : VRBuilder.Editor.UI.Graphics Assembly : VRBuilder.Editor.dll Syntax public class ParallelExecutionNode : StepGraphNode Constructors | Improve this Doc View Source ParallelExecutionNode(IStep) Declaration public ParallelExecutionNode(IStep step) Parameters Type Name Description IStep step Fields | Improve this Doc View Source DefaultThreadName Declaration public static string DefaultThreadName Field Value Type Description System.String Properties | Improve this Doc View Source Behavior Declaration protected ExecuteChaptersBehavior Behavior { get; } Property Value Type Description ExecuteChaptersBehavior Methods | Improve this Doc View Source OnSelected() Declaration public override void OnSelected() Overrides StepGraphNode.OnSelected() | Improve this Doc View Source Refresh() Declaration public override void Refresh() Overrides StepGraphNode.Refresh()"
  },
  "api/VRBuilder.Editor.UI.Graphics.ParallelExecutionNodeInstantiator.html": {
    "href": "api/VRBuilder.Editor.UI.Graphics.ParallelExecutionNodeInstantiator.html",
    "title": "Class ParallelExecutionNodeInstantiator | VR Builder Documentation",
    "keywords": "Class ParallelExecutionNodeInstantiator Instantiator for the Step Group node. Inheritance System.Object ParallelExecutionNodeInstantiator Implements IStepNodeInstantiator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Graphics Assembly : VRBuilder.Editor.dll Syntax public class ParallelExecutionNodeInstantiator : IStepNodeInstantiator Properties | Improve this Doc View Source IsInNodeMenu If true, it will appear in the node menu. Declaration public bool IsInNodeMenu { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Display name of the instantiated node. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Priority Nodes with a lower value will appear first in the menu. Declaration public int Priority { get; } Property Value Type Description System.Int32 | Improve this Doc View Source StepType Step type metadata. Declaration public string StepType { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetContextMenuStatus(IEventHandler, IChapter) Returns the status for the context menu entry to instantiate the node. Declaration public DropdownMenuAction.Status GetContextMenuStatus(IEventHandler target, IChapter currentChapter) Parameters Type Name Description IEventHandler target IChapter currentChapter Returns Type Description DropdownMenuAction.Status | Improve this Doc View Source InstantiateNode(IStep) Creates a graphview node of the corresponding type. Declaration public ProcessGraphNode InstantiateNode(IStep step) Parameters Type Name Description IStep step Returns Type Description ProcessGraphNode Implements IStepNodeInstantiator"
  },
  "api/VRBuilder.Editor.UI.Graphics.ProcessExec.html": {
    "href": "api/VRBuilder.Editor.UI.Graphics.ProcessExec.html",
    "title": "Class ProcessExec | VR Builder Documentation",
    "keywords": "Class ProcessExec Type that connects step nodes in the graph view editor. Inheritance System.Object ProcessExec Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Graphics Assembly : VRBuilder.Editor.dll Syntax public class ProcessExec"
  },
  "api/VRBuilder.Editor.UI.Graphics.ProcessGraphNode.html": {
    "href": "api/VRBuilder.Editor.UI.Graphics.ProcessGraphNode.html",
    "title": "Class ProcessGraphNode | VR Builder Documentation",
    "keywords": "Class ProcessGraphNode Process node in a graph view editor. Inheritance System.Object ProcessGraphNode EntryPointNode StepGraphNode Namespace : VRBuilder.Editor.UI.Graphics Assembly : VRBuilder.Editor.dll Syntax public abstract class ProcessGraphNode : Node Constructors | Improve this Doc View Source ProcessGraphNode() Declaration public ProcessGraphNode() Fields | Improve this Doc View Source defaultNodeSize Declaration protected Vector2 defaultNodeSize Field Value Type Description Vector2 | Improve this Doc View Source deleteIconFileName Declaration protected const string deleteIconFileName = \"icon_delete\" Field Value Type Description System.String | Improve this Doc View Source editIconFileName Declaration protected const string editIconFileName = \"icon_edit\" Field Value Type Description System.String Properties | Improve this Doc View Source EntryPoint Step other nodes connect to. Declaration public abstract IStep EntryPoint { get; } Property Value Type Description IStep | Improve this Doc View Source IsEntryPoint True if this is the \"Start\" node. Declaration public bool IsEntryPoint { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Name of the node. Declaration public abstract string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Outputs Steps this node leads to. Declaration public abstract IStep[] Outputs { get; } Property Value Type Description IStep [] | Improve this Doc View Source Position Position in the graph. Declaration public abstract Vector2 Position { get; set; } Property Value Type Description Vector2 Methods | Improve this Doc View Source AddToChapter(IChapter) Adds node to specified chapter. Declaration public abstract void AddToChapter(IChapter chapter) Parameters Type Name Description IChapter chapter | Improve this Doc View Source AddTransitionPort(Boolean, Int32) Adds a potentially deletable transition port to this node. Declaration public virtual Port AddTransitionPort(bool isDeletablePort = true, int index = -1) Parameters Type Name Description System.Boolean isDeletablePort If true, a delete button is created which allows to delete the transition. System.Int32 index Index where to insert the port, if blank it will be added at the end of the list. Returns Type Description Port The created port. | Improve this Doc View Source CreatePort(Direction, Port.Capacity) Declaration protected Port CreatePort(Direction direction, Port.Capacity capacity = null) Parameters Type Name Description Direction direction Port.Capacity capacity Returns Type Description Port | Improve this Doc View Source GetIcon(String) Declaration protected Image GetIcon(string fileName) Parameters Type Name Description System.String fileName Returns Type Description Image | Improve this Doc View Source OnEditTextFinished(TextField) Declaration protected virtual void OnEditTextFinished(TextField textField) Parameters Type Name Description TextField textField | Improve this Doc View Source OpenTextEditor() Declaration protected virtual void OpenTextEditor() | Improve this Doc View Source Refresh() Refreshes the node's graphics. Declaration public virtual void Refresh() | Improve this Doc View Source RemoveFromChapter(IChapter) Removes node from specified chapter. Declaration public abstract void RemoveFromChapter(IChapter chapter) Parameters Type Name Description IChapter chapter | Improve this Doc View Source RemovePortWithUndo(Port) Remove port with undo. Declaration protected abstract void RemovePortWithUndo(Port port) Parameters Type Name Description Port port | Improve this Doc View Source SetOutput(Int32, IStep) Sets an output to the specified step. Declaration public abstract void SetOutput(int index, IStep output) Parameters Type Name Description System.Int32 index IStep output | Improve this Doc View Source UpdateOutputPortName(Port, Node) Updates the name of the output port depending on the node it is connected with. Declaration public virtual void UpdateOutputPortName(Port outputPort, Node input) Parameters Type Name Description Port outputPort Node input"
  },
  "api/VRBuilder.Editor.UI.Graphics.ProcessGraphView.html": {
    "href": "api/VRBuilder.Editor.UI.Graphics.ProcessGraphView.html",
    "title": "Class ProcessGraphView | VR Builder Documentation",
    "keywords": "Class ProcessGraphView Graphical representation of a process chapter. Inheritance System.Object ProcessGraphView Namespace : VRBuilder.Editor.UI.Graphics Assembly : VRBuilder.Editor.dll Syntax public class ProcessGraphView : GraphView Constructors | Improve this Doc View Source ProcessGraphView() Declaration public ProcessGraphView() Methods | Improve this Doc View Source BuildContextualMenu(ContextualMenuPopulateEvent) Declaration public override void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt | Improve this Doc View Source GetCompatiblePorts(Port, NodeAdapter) Declaration public override List<Port> GetCompatiblePorts(Port startPort, NodeAdapter nodeAdapter) Parameters Type Name Description Port startPort NodeAdapter nodeAdapter Returns Type Description System.Collections.Generic.List < Port > | Improve this Doc View Source RefreshSelectedNode() Updates visualization of the node selected in the step inspector. Declaration public void RefreshSelectedNode() | Improve this Doc View Source SetChapter(IChapter) Displays the specified chapter. Declaration public void SetChapter(IChapter chapter) Parameters Type Name Description IChapter chapter"
  },
  "api/VRBuilder.Editor.UI.Graphics.ProcessGraphViewWindow.html": {
    "href": "api/VRBuilder.Editor.UI.Graphics.ProcessGraphViewWindow.html",
    "title": "Class ProcessGraphViewWindow | VR Builder Documentation",
    "keywords": "Class ProcessGraphViewWindow Editor windows that displays the process using a graphview. Inheritance System.Object ProcessEditorWindow ProcessGraphViewWindow Namespace : VRBuilder.Editor.UI.Graphics Assembly : VRBuilder.Editor.dll Syntax public class ProcessGraphViewWindow : ProcessEditorWindow"
  },
  "api/VRBuilder.Editor.UI.Graphics.Renderers.GraphicalElementRenderer.html": {
    "href": "api/VRBuilder.Editor.UI.Graphics.Renderers.GraphicalElementRenderer.html",
    "title": "Class GraphicalElementRenderer | VR Builder Documentation",
    "keywords": "Class GraphicalElementRenderer Inheritance System.Object GraphicalElementRenderer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Graphics.Renderers Assembly : VRBuilder.Editor.dll Syntax public abstract class GraphicalElementRenderer Methods | Improve this Doc View Source Draw() Called once in the end of the frame. Use it to draw elements in the editor window. Declaration public abstract void Draw()"
  },
  "api/VRBuilder.Editor.UI.Graphics.Renderers.html": {
    "href": "api/VRBuilder.Editor.UI.Graphics.Renderers.html",
    "title": "Namespace VRBuilder.Editor.UI.Graphics.Renderers | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.UI.Graphics.Renderers Classes GraphicalElementRenderer"
  },
  "api/VRBuilder.Editor.UI.Graphics.StepGraphNode.html": {
    "href": "api/VRBuilder.Editor.UI.Graphics.StepGraphNode.html",
    "title": "Class StepGraphNode | VR Builder Documentation",
    "keywords": "Class StepGraphNode Step node in a graph view editor. Inheritance System.Object ProcessGraphNode StepGraphNode RandomBranchGraphNode EndChapterNode ParallelExecutionNode StepGroupNode Inherited Members ProcessGraphNode.deleteIconFileName ProcessGraphNode.editIconFileName ProcessGraphNode.defaultNodeSize ProcessGraphNode.IsEntryPoint ProcessGraphNode.AddTransitionPort(Boolean, Int32) ProcessGraphNode.CreatePort(Direction, Port.Capacity) ProcessGraphNode.GetIcon(String) ProcessGraphNode.OpenTextEditor() ProcessGraphNode.OnEditTextFinished(TextField) Namespace : VRBuilder.Editor.UI.Graphics Assembly : VRBuilder.Editor.dll Syntax public class StepGraphNode : ProcessGraphNode Constructors | Improve this Doc View Source StepGraphNode(IStep) Declaration public StepGraphNode(IStep step) Parameters Type Name Description IStep step Fields | Improve this Doc View Source step Declaration protected IStep step Field Value Type Description IStep Properties | Improve this Doc View Source EntryPoint Step other nodes connect to. Declaration public override IStep EntryPoint { get; } Property Value Type Description IStep Overrides ProcessGraphNode.EntryPoint | Improve this Doc View Source Name Name of the node. Declaration public override string Name { get; set; } Property Value Type Description System.String Overrides ProcessGraphNode.Name | Improve this Doc View Source Outputs Steps this node leads to. Declaration public override IStep[] Outputs { get; } Property Value Type Description IStep [] Overrides ProcessGraphNode.Outputs | Improve this Doc View Source Position Position in the graph. Declaration public override Vector2 Position { get; set; } Property Value Type Description Vector2 Overrides ProcessGraphNode.Position Methods | Improve this Doc View Source AddToChapter(IChapter) Adds node to specified chapter. Declaration public override void AddToChapter(IChapter chapter) Parameters Type Name Description IChapter chapter Overrides ProcessGraphNode.AddToChapter(IChapter) | Improve this Doc View Source CreatePortWithUndo() Creates a transition port supporting undo. Declaration protected virtual void CreatePortWithUndo() | Improve this Doc View Source OnSelected() Declaration public override void OnSelected() | Improve this Doc View Source Refresh() Refreshes the node's graphics. Declaration public override void Refresh() Overrides ProcessGraphNode.Refresh() | Improve this Doc View Source RemoveFromChapter(IChapter) Removes node from specified chapter. Declaration public override void RemoveFromChapter(IChapter chapter) Parameters Type Name Description IChapter chapter Overrides ProcessGraphNode.RemoveFromChapter(IChapter) | Improve this Doc View Source RemovePort(Port) Removes the specified output port. Declaration protected void RemovePort(Port port) Parameters Type Name Description Port port | Improve this Doc View Source RemovePortWithUndo(Port) Removes the specified output port supporting undo. Declaration protected override void RemovePortWithUndo(Port port) Parameters Type Name Description Port port Overrides ProcessGraphNode.RemovePortWithUndo(Port) | Improve this Doc View Source SetOutput(Int32, IStep) Sets an output to the specified step. Declaration public override void SetOutput(int index, IStep output) Parameters Type Name Description System.Int32 index IStep output Overrides ProcessGraphNode.SetOutput(Int32, IStep) | Improve this Doc View Source UpdateOutputPortName(Port, Node) Updates the name of the output port depending on the node it is connected with. Declaration public override void UpdateOutputPortName(Port outputPort, Node input) Parameters Type Name Description Port outputPort Node input Overrides ProcessGraphNode.UpdateOutputPortName(Port, Node)"
  },
  "api/VRBuilder.Editor.UI.Graphics.StepGroupNode.html": {
    "href": "api/VRBuilder.Editor.UI.Graphics.StepGroupNode.html",
    "title": "Class StepGroupNode | VR Builder Documentation",
    "keywords": "Class StepGroupNode Graphical representation of a Step Group node. Inheritance System.Object ProcessGraphNode StepGraphNode StepGroupNode Implements IContextMenuActions Inherited Members StepGraphNode.step StepGraphNode.Name StepGraphNode.EntryPoint StepGraphNode.Outputs StepGraphNode.Position StepGraphNode.Refresh() StepGraphNode.CreatePortWithUndo() StepGraphNode.RemovePort(Port) StepGraphNode.RemovePortWithUndo(Port) StepGraphNode.SetOutput(Int32, IStep) StepGraphNode.AddToChapter(IChapter) StepGraphNode.RemoveFromChapter(IChapter) StepGraphNode.UpdateOutputPortName(Port, Node) ProcessGraphNode.deleteIconFileName ProcessGraphNode.editIconFileName ProcessGraphNode.defaultNodeSize ProcessGraphNode.IsEntryPoint ProcessGraphNode.AddTransitionPort(Boolean, Int32) ProcessGraphNode.CreatePort(Direction, Port.Capacity) ProcessGraphNode.GetIcon(String) ProcessGraphNode.OpenTextEditor() Namespace : VRBuilder.Editor.UI.Graphics Assembly : VRBuilder.Editor.dll Syntax public class StepGroupNode : StepGraphNode, IContextMenuActions Constructors | Improve this Doc View Source StepGroupNode(IStep) Declaration public StepGroupNode(IStep step) Parameters Type Name Description IStep step Properties | Improve this Doc View Source Behavior Declaration protected ExecuteChapterBehavior Behavior { get; } Property Value Type Description ExecuteChapterBehavior Methods | Improve this Doc View Source AddContextMenuActions(DropdownMenu) Declaration public void AddContextMenuActions(DropdownMenu menu) Parameters Type Name Description DropdownMenu menu | Improve this Doc View Source GroupSteps(IChapter, IEnumerable<IStep>) Declaration public void GroupSteps(IChapter currentChapter, IEnumerable<IStep> steps) Parameters Type Name Description IChapter currentChapter System.Collections.Generic.IEnumerable < IStep > steps | Improve this Doc View Source OnEditTextFinished(TextField) Declaration protected override void OnEditTextFinished(TextField textField) Parameters Type Name Description TextField textField Overrides ProcessGraphNode.OnEditTextFinished(TextField) | Improve this Doc View Source OnSelected() Declaration public override void OnSelected() Overrides StepGraphNode.OnSelected() Implements IContextMenuActions"
  },
  "api/VRBuilder.Editor.UI.Graphics.StepGroupNodeInstantiator.html": {
    "href": "api/VRBuilder.Editor.UI.Graphics.StepGroupNodeInstantiator.html",
    "title": "Class StepGroupNodeInstantiator | VR Builder Documentation",
    "keywords": "Class StepGroupNodeInstantiator Instantiator for the Step Group node. Inheritance System.Object StepGroupNodeInstantiator Implements IStepNodeInstantiator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Graphics Assembly : VRBuilder.Editor.dll Syntax public class StepGroupNodeInstantiator : IStepNodeInstantiator Properties | Improve this Doc View Source IsInNodeMenu If true, it will appear in the node menu. Declaration public bool IsInNodeMenu { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Display name of the instantiated node. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Priority Nodes with a lower value will appear first in the menu. Declaration public int Priority { get; } Property Value Type Description System.Int32 | Improve this Doc View Source StepType Step type metadata. Declaration public string StepType { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetContextMenuStatus(IEventHandler, IChapter) Returns the status for the context menu entry to instantiate the node. Declaration public DropdownMenuAction.Status GetContextMenuStatus(IEventHandler target, IChapter currentChapter) Parameters Type Name Description IEventHandler target IChapter currentChapter Returns Type Description DropdownMenuAction.Status | Improve this Doc View Source InstantiateNode(IStep) Creates a graphview node of the corresponding type. Declaration public ProcessGraphNode InstantiateNode(IStep step) Parameters Type Name Description IStep step Returns Type Description ProcessGraphNode Implements IStepNodeInstantiator"
  },
  "api/VRBuilder.Editor.UI.html": {
    "href": "api/VRBuilder.Editor.UI.html",
    "title": "Namespace VRBuilder.Editor.UI | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.UI Classes BaseSettingsProvider Base Settings provider which allows to inject additional sections which implement IProjectSettingsSection . BuilderEditorStyles BuilderGUILayout Layout extension for VR Builder. EditorDrawingHelper Helper class for drawing primitives in custom editors. EditorIcon Utility class to help with different unity color schemes (dark/light). Takes care about loading the given icon, will add _light or _dark to the given path. If only one icon is found it will be used for both skins. If no icon is found there will be an NullReferenceException thrown. DO NOT ADD FILE ENDINGS TO THE PATH! LanguageSettingsProvider ProcessSceneObjectEditor Custom editor for ProcessSceneObject . SceneObjectGroupsSettingsProvider Provider for a list of scene object groups. SceneObjectGroupsSettingsSection Settings section to manage groups that scene objects can belong to. SpectatorSettingsProvider WorkflowEditorColorPalette Class to provide convenient access to all colors used in the Workflow window. Interfaces IProjectSettingsSection Allows to inject a settings section into a setting provider. Enums LogoStyle"
  },
  "api/VRBuilder.Editor.UI.Interaction.html": {
    "href": "api/VRBuilder.Editor.UI.Interaction.html",
    "title": "Namespace VRBuilder.Editor.UI.Interaction | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.UI.Interaction Classes InfoBoxControllerEditor Custom Editor for InfoBoxController . Texture2DExtensions"
  },
  "api/VRBuilder.Editor.UI.Interaction.InfoBoxControllerEditor.html": {
    "href": "api/VRBuilder.Editor.UI.Interaction.InfoBoxControllerEditor.html",
    "title": "Class InfoBoxControllerEditor | VR Builder Documentation",
    "keywords": "Class InfoBoxControllerEditor Custom Editor for InfoBoxController . Inheritance System.Object InfoBoxControllerEditor Namespace : VRBuilder.Editor.UI.Interaction Assembly : VRBuilder.Editor.UserInterface.AddOn.dll Syntax public class InfoBoxControllerEditor : Editor Fields | Improve this Doc _infoBoxSize Declaration protected float _infoBoxSize Field Value Type Description System.Single | Improve this Doc _showAdvancedSettings Declaration protected bool _showAdvancedSettings Field Value Type Description System.Boolean | Improve this Doc _showDescription Declaration protected bool _showDescription Field Value Type Description System.Boolean | Improve this Doc _showImage Declaration protected bool _showImage Field Value Type Description System.Boolean | Improve this Doc _showImpact Declaration protected bool _showImpact Field Value Type Description System.Boolean | Improve this Doc _showTitle Declaration protected bool _showTitle Field Value Type Description System.Boolean Methods | Improve this Doc OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/VRBuilder.Editor.UI.Interaction.Texture2DExtensions.html": {
    "href": "api/VRBuilder.Editor.UI.Interaction.Texture2DExtensions.html",
    "title": "Class Texture2DExtensions | VR Builder Documentation",
    "keywords": "Class Texture2DExtensions Inheritance System.Object Texture2DExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Interaction Assembly : VRBuilder.Editor.UserInterface.AddOn.dll Syntax public static class Texture2DExtensions Methods | Improve this Doc SetColor(Texture2D, Color32) Declaration public static void SetColor(this Texture2D tex2, Color32 color) Parameters Type Name Description Texture2D tex2 Color32 color"
  },
  "api/VRBuilder.Editor.UI.IProjectSettingsSection.html": {
    "href": "api/VRBuilder.Editor.UI.IProjectSettingsSection.html",
    "title": "Interface IProjectSettingsSection | VR Builder Documentation",
    "keywords": "Interface IProjectSettingsSection Allows to inject a settings section into a setting provider. Namespace : VRBuilder.Editor.UI Assembly : VRBuilder.Editor.dll Syntax public interface IProjectSettingsSection Properties | Improve this Doc View Source Priority Determines the draw order, lower priority will be drawn first. Declaration int Priority { get; } Property Value Type Description System.Int32 | Improve this Doc View Source TargetPageProvider Type of the target setting provider. Declaration Type TargetPageProvider { get; } Property Value Type Description System.Type | Improve this Doc View Source Title Title of this section. Declaration string Title { get; } Property Value Type Description System.String Methods | Improve this Doc View Source OnGUI(String) Your draw call. Declaration void OnGUI(string searchContext) Parameters Type Name Description System.String searchContext"
  },
  "api/VRBuilder.Editor.UI.LanguageSettingsProvider.html": {
    "href": "api/VRBuilder.Editor.UI.LanguageSettingsProvider.html",
    "title": "Class LanguageSettingsProvider | VR Builder Documentation",
    "keywords": "Class LanguageSettingsProvider Inheritance System.Object BaseSettingsProvider LanguageSettingsProvider Inherited Members BaseSettingsProvider.sections BaseSettingsProvider.OnGUI(String) Namespace : VRBuilder.Editor.UI Assembly : VRBuilder.Editor.dll Syntax public class LanguageSettingsProvider : BaseSettingsProvider Constructors | Improve this Doc View Source LanguageSettingsProvider() Declaration public LanguageSettingsProvider() Methods | Improve this Doc View Source InternalDraw(String) Declaration protected override void InternalDraw(string searchContext) Parameters Type Name Description System.String searchContext Overrides BaseSettingsProvider.InternalDraw(String) | Improve this Doc View Source OnDeactivate() Declaration public override void OnDeactivate() | Improve this Doc View Source Provider() Declaration public static SettingsProvider Provider() Returns Type Description SettingsProvider"
  },
  "api/VRBuilder.Editor.UI.LogoStyle.html": {
    "href": "api/VRBuilder.Editor.UI.LogoStyle.html",
    "title": "Enum LogoStyle | VR Builder Documentation",
    "keywords": "Enum LogoStyle Namespace : VRBuilder.Editor.UI Assembly : VRBuilder.Editor.dll Syntax public enum LogoStyle Fields Name Description Icon SideBySide TopBottom"
  },
  "api/VRBuilder.Editor.UI.ProcessSceneObjectEditor.html": {
    "href": "api/VRBuilder.Editor.UI.ProcessSceneObjectEditor.html",
    "title": "Class ProcessSceneObjectEditor | VR Builder Documentation",
    "keywords": "Class ProcessSceneObjectEditor Custom editor for ProcessSceneObject . Inheritance System.Object ProcessSceneObjectEditor Namespace : VRBuilder.Editor.UI Assembly : VRBuilder.Editor.dll Syntax public class ProcessSceneObjectEditor : Editor Fields | Improve this Doc View Source AssetOnDiskText Declaration public const string AssetOnDiskText = \"[Asset on disk]\" Field Value Type Description System.String | Improve this Doc View Source MultipleValuesSelectedText Declaration public const string MultipleValuesSelectedText = \"[Multiple values selected]\" Field Value Type Description System.String | Improve this Doc View Source UniqueIdDisplayName Declaration public const string UniqueIdDisplayName = \"Object ID\" Field Value Type Description System.String Methods | Improve this Doc View Source CreateInspectorGUI() Declaration public override VisualElement CreateInspectorGUI() Returns Type Description VisualElement"
  },
  "api/VRBuilder.Editor.UI.SceneObjectGroupsSettingsProvider.html": {
    "href": "api/VRBuilder.Editor.UI.SceneObjectGroupsSettingsProvider.html",
    "title": "Class SceneObjectGroupsSettingsProvider | VR Builder Documentation",
    "keywords": "Class SceneObjectGroupsSettingsProvider Provider for a list of scene object groups. Inheritance System.Object BaseSettingsProvider SceneObjectGroupsSettingsProvider Inherited Members BaseSettingsProvider.sections BaseSettingsProvider.OnGUI(String) Namespace : VRBuilder.Editor.UI Assembly : VRBuilder.Editor.dll Syntax public class SceneObjectGroupsSettingsProvider : BaseSettingsProvider Constructors | Improve this Doc View Source SceneObjectGroupsSettingsProvider() Declaration public SceneObjectGroupsSettingsProvider() Methods | Improve this Doc View Source InternalDraw(String) Declaration protected override void InternalDraw(string searchContext) Parameters Type Name Description System.String searchContext Overrides BaseSettingsProvider.InternalDraw(String) | Improve this Doc View Source OnDeactivate() Declaration public override void OnDeactivate() | Improve this Doc View Source Provider() Declaration public static SettingsProvider Provider() Returns Type Description SettingsProvider"
  },
  "api/VRBuilder.Editor.UI.SceneObjectGroupsSettingsSection.html": {
    "href": "api/VRBuilder.Editor.UI.SceneObjectGroupsSettingsSection.html",
    "title": "Class SceneObjectGroupsSettingsSection | VR Builder Documentation",
    "keywords": "Class SceneObjectGroupsSettingsSection Settings section to manage groups that scene objects can belong to. Inheritance System.Object SceneObjectGroupsSettingsSection Implements IProjectSettingsSection Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI Assembly : VRBuilder.Editor.dll Syntax public class SceneObjectGroupsSettingsSection : IProjectSettingsSection Properties | Improve this Doc View Source Priority Determines the draw order, lower priority will be drawn first. Declaration public int Priority { get; } Property Value Type Description System.Int32 | Improve this Doc View Source TargetPageProvider Type of the target setting provider. Declaration public Type TargetPageProvider { get; } Property Value Type Description System.Type | Improve this Doc View Source Title Title of this section. Declaration public string Title { get; } Property Value Type Description System.String Methods | Improve this Doc View Source OnGUI(String) Your draw call. Declaration public void OnGUI(string searchContext) Parameters Type Name Description System.String searchContext Implements IProjectSettingsSection"
  },
  "api/VRBuilder.Editor.UI.SpectatorSettingsProvider.html": {
    "href": "api/VRBuilder.Editor.UI.SpectatorSettingsProvider.html",
    "title": "Class SpectatorSettingsProvider | VR Builder Documentation",
    "keywords": "Class SpectatorSettingsProvider Inheritance System.Object BaseSettingsProvider SpectatorSettingsProvider Inherited Members BaseSettingsProvider.sections BaseSettingsProvider.OnGUI(String) Namespace : VRBuilder.Editor.UI Assembly : VRBuilder.Editor.dll Syntax public class SpectatorSettingsProvider : BaseSettingsProvider Constructors | Improve this Doc View Source SpectatorSettingsProvider() Declaration public SpectatorSettingsProvider() Methods | Improve this Doc View Source InternalDraw(String) Declaration protected override void InternalDraw(string searchContext) Parameters Type Name Description System.String searchContext Overrides BaseSettingsProvider.InternalDraw(String) | Improve this Doc View Source Provider() Declaration public static SettingsProvider Provider() Returns Type Description SettingsProvider"
  },
  "api/VRBuilder.Editor.UI.StepInspector.Menu.DisabledMenuItem-1.html": {
    "href": "api/VRBuilder.Editor.UI.StepInspector.Menu.DisabledMenuItem-1.html",
    "title": "Class DisabledMenuItem<T> | VR Builder Documentation",
    "keywords": "Class DisabledMenuItem<T> The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it as a disabled option with . Inheritance System.Object MenuOption <T> DisabledMenuItem<T> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.StepInspector.Menu Assembly : VRBuilder.Editor.dll Syntax public class DisabledMenuItem<T> : MenuOption<T> Type Parameters Name Description T Constructors | Improve this Doc View Source DisabledMenuItem(String) Declaration public DisabledMenuItem(string label) Parameters Type Name Description System.String label The displayed text. Properties | Improve this Doc View Source Label A name displayed in the Step Inspector. Declaration public string Label { get; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Editor.UI.StepInspector.Menu.html": {
    "href": "api/VRBuilder.Editor.UI.StepInspector.Menu.html",
    "title": "Namespace VRBuilder.Editor.UI.StepInspector.Menu | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.UI.StepInspector.Menu Classes DisabledMenuItem<T> The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it as a disabled option with . MenuItem<T> The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . MenuOption<T> A base class for options displayed in the \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus. MenuSeparator<T> This class adds a separator in the \"Add Behavior\"/\"Add Condition\" dropdown menus."
  },
  "api/VRBuilder.Editor.UI.StepInspector.Menu.MenuItem-1.html": {
    "href": "api/VRBuilder.Editor.UI.StepInspector.Menu.MenuItem-1.html",
    "title": "Class MenuItem<T> | VR Builder Documentation",
    "keywords": "Class MenuItem<T> The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption <T> MenuItem<T> AnimateTransformMenuItem ChildExplosionViewMenuItem FollowPathMenuItem PlayAnimationClipMenuItem RotateAroundAxisMenuItem SetAnimatorBoolMenuItem SetAnimatorFloatMenuItem SetAnimatorIntMenuItem SetAnimatorTriggerMenuItem UnsnapMenuItem GrabbedMenuItem ReleasedMenuItem SnappedMenuItem TeleportMenuItem TouchedMenuItem UsedMenuItem ResetValueMenuItem SetBooleanValueMenuItem SetNumberValueMenuItem SetRandomBooleanMenuItem SetRandomNumberMenuItem CompareBooleansMenuItem CompareNumbersMenuItem MathOperationMenuItem ResetValueMenuItem SetBooleanValueMenuItem SetNumberValueMenuItem SetStateValueMenuItem SetTextValueMenuItem TriggerBooleanEventByTagMenuItem TriggerEventMenuItem TriggerFloatEventMenuItem TriggerStringEventMenuItem CheckStateMenuItem CompareBooleansMenuItem CompareNumbersMenuItem CompareTextMenuItem TextToSpeechMenuItem ResetValueMenuItem SetBooleanValueMenuItem SetNumberValueMenuItem StartTimerMenuItem StopTimerMenuItem UpdateScoreMenuItem CompareBooleansMenuItem CompareNumbersMenuItem BehaviorSequenceMenuItem ConfettiMenuItem DelayMenuItem DisableComponentMenuItem DisableObjectsMenuItem EnableComponentMenuItem EnableObjectsMenuItem HighlightObjectMenuItem LoadSceneMenuItem MoveObjectMenuItem MultipleChoiceBehaviorMenuItem NumPadBehaviorMenuItem OptionalInfoBoxMenuItem PlayResourceAudioMenuItem ScalingMenuItem SetLocalizedTextMenuItem StartParticleEmissionMenuItem StopParticleEmissionMenuItem UiOutlineMenuItem MandatoryInfoBoxMenuItem MultipleChoiceConditionMenuItem NumPadCompareConditionMenuItem NumPadConditionMenuItem ObjectInColliderMenuItem ObjectInRangeMenuItem SetParentMenuItem TimeoutMenuItem UiButtonMenuItem PlayVideoBehaviorMenuItem DrillHolesConditionMenuItem Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.StepInspector.Menu Assembly : VRBuilder.Editor.dll Syntax public abstract class MenuItem<T> : MenuOption<T> Type Parameters Name Description T A type of an object to create. Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public abstract string DisplayedName { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetItemType() Returns the Type of the item created in GetNewItem() Declaration public virtual Type GetItemType() Returns Type Description System.Type | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public abstract T GetNewItem() Returns Type Description T"
  },
  "api/VRBuilder.Editor.UI.StepInspector.Menu.MenuOption-1.html": {
    "href": "api/VRBuilder.Editor.UI.StepInspector.Menu.MenuOption-1.html",
    "title": "Class MenuOption<T> | VR Builder Documentation",
    "keywords": "Class MenuOption<T> A base class for options displayed in the \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus. Inheritance System.Object MenuOption<T> DisabledMenuItem<T> MenuItem<T> MenuSeparator<T> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.StepInspector.Menu Assembly : VRBuilder.Editor.dll Syntax public abstract class MenuOption<T> Type Parameters Name Description T"
  },
  "api/VRBuilder.Editor.UI.StepInspector.Menu.MenuSeparator-1.html": {
    "href": "api/VRBuilder.Editor.UI.StepInspector.Menu.MenuSeparator-1.html",
    "title": "Class MenuSeparator<T> | VR Builder Documentation",
    "keywords": "Class MenuSeparator<T> This class adds a separator in the \"Add Behavior\"/\"Add Condition\" dropdown menus. Inheritance System.Object MenuOption <T> MenuSeparator<T> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.StepInspector.Menu Assembly : VRBuilder.Editor.dll Syntax public sealed class MenuSeparator<T> : MenuOption<T> Type Parameters Name Description T Constructors | Improve this Doc View Source MenuSeparator(String) Declaration public MenuSeparator(string pathToSubmenu = \"\") Parameters Type Name Description System.String pathToSubmenu Properties | Improve this Doc View Source PathToSubmenu The submenu where separator will be displayed. Declaration public string PathToSubmenu { get; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Editor.UI.Views.html": {
    "href": "api/VRBuilder.Editor.UI.Views.html",
    "title": "Namespace VRBuilder.Editor.UI.Views | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.UI.Views Classes ViewDictionary A static class that holds the path to UXML files mapped by an enum containing the UXML file names Enums ViewDictionary.EnumType"
  },
  "api/VRBuilder.Editor.UI.Views.ViewDictionary.EnumType.html": {
    "href": "api/VRBuilder.Editor.UI.Views.ViewDictionary.EnumType.html",
    "title": "Enum ViewDictionary.EnumType | VR Builder Documentation",
    "keywords": "Enum ViewDictionary.EnumType Namespace : VRBuilder.Editor.UI.Views Assembly : VRBuilder.Editor.dll Syntax public enum EnumType Fields Name Description GroupListItem SceneReferencesGroupItem SceneReferencesList SceneReferencesObjectItem SearchableList"
  },
  "api/VRBuilder.Editor.UI.Views.ViewDictionary.html": {
    "href": "api/VRBuilder.Editor.UI.Views.ViewDictionary.html",
    "title": "Class ViewDictionary | VR Builder Documentation",
    "keywords": "Class ViewDictionary A static class that holds the path to UXML files mapped by an enum containing the UXML file names Inheritance System.Object ViewDictionary Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Views Assembly : VRBuilder.Editor.dll Syntax public class ViewDictionary Methods | Improve this Doc View Source GetPath(ViewDictionary.EnumType) Retrieves the path associated with the specified enum value. Declaration public static string GetPath(ViewDictionary.EnumType enumValue) Parameters Type Name Description ViewDictionary.EnumType enumValue The enum value to retrieve the path for. Returns Type Description System.String The path associated with the enum value, or null if the path is not found. | Improve this Doc View Source LoadAsset(ViewDictionary.EnumType) Loads a VisualTreeAsset based on the provided enum value. Declaration public static VisualTreeAsset LoadAsset(ViewDictionary.EnumType enumValue) Parameters Type Name Description ViewDictionary.EnumType enumValue The enum value representing the desired asset. Returns Type Description VisualTreeAsset The loaded VisualTreeAsset, or null if the asset could not be found."
  },
  "api/VRBuilder.Editor.UI.Windows.html": {
    "href": "api/VRBuilder.Editor.UI.Windows.html",
    "title": "Namespace VRBuilder.Editor.UI.Windows | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.UI.Windows Classes ProcessEditorWindow Base class for a process GUI editor window. ProcessWindow This class draws the Workflow window.. SceneReferencesEditorPopup SearchableGroupListPopup Popup window that displays a searchable list of all VR Builder SceneObjectGroups . WindowUtils Interfaces IStepView Interface for GUI step view."
  },
  "api/VRBuilder.Editor.UI.Windows.IStepView.html": {
    "href": "api/VRBuilder.Editor.UI.Windows.IStepView.html",
    "title": "Interface IStepView | VR Builder Documentation",
    "keywords": "Interface IStepView Interface for GUI step view. Namespace : VRBuilder.Editor.UI.Windows Assembly : VRBuilder.Editor.dll Syntax public interface IStepView Methods | Improve this Doc View Source ResetStepView() Resets the step view. Declaration void ResetStepView() | Improve this Doc View Source SetStep(IStep) Sets a new step. Declaration void SetStep(IStep newStep) Parameters Type Name Description IStep newStep"
  },
  "api/VRBuilder.Editor.UI.Windows.ProcessEditorWindow.html": {
    "href": "api/VRBuilder.Editor.UI.Windows.ProcessEditorWindow.html",
    "title": "Class ProcessEditorWindow | VR Builder Documentation",
    "keywords": "Class ProcessEditorWindow Base class for a process GUI editor window. Inheritance System.Object ProcessEditorWindow ProcessGraphViewWindow ProcessWindow Namespace : VRBuilder.Editor.UI.Windows Assembly : VRBuilder.Editor.dll Syntax public abstract class ProcessEditorWindow : EditorWindow"
  },
  "api/VRBuilder.Editor.UI.Windows.ProcessWindow.html": {
    "href": "api/VRBuilder.Editor.UI.Windows.ProcessWindow.html",
    "title": "Class ProcessWindow | VR Builder Documentation",
    "keywords": "Class ProcessWindow This class draws the Workflow window.. Inheritance System.Object ProcessEditorWindow ProcessWindow Namespace : VRBuilder.Editor.UI.Windows Assembly : VRBuilder.Editor.dll Syntax [Obsolete(\"This class is not used anymore and will be removed in the next major version.\")] public class ProcessWindow : ProcessEditorWindow"
  },
  "api/VRBuilder.Editor.UI.Windows.SceneReferencesEditorPopup.html": {
    "href": "api/VRBuilder.Editor.UI.Windows.SceneReferencesEditorPopup.html",
    "title": "Class SceneReferencesEditorPopup | VR Builder Documentation",
    "keywords": "Class SceneReferencesEditorPopup Inheritance System.Object SceneReferencesEditorPopup Namespace : VRBuilder.Editor.UI.Windows Assembly : VRBuilder.Editor.dll Syntax public class SceneReferencesEditorPopup : PopupWindowContent Constructors | Improve this Doc View Source SceneReferencesEditorPopup(ProcessSceneReferenceBase, Action<Object>) Declaration public SceneReferencesEditorPopup(ProcessSceneReferenceBase reference, Action<object> changeValueCallback) Parameters Type Name Description ProcessSceneReferenceBase reference System.Action < System.Object > changeValueCallback Methods | Improve this Doc View Source GetWindowSize() Declaration public override Vector2 GetWindowSize() Returns Type Description Vector2 | Improve this Doc View Source OnGUI(Rect) Declaration public override void OnGUI(Rect rect) Parameters Type Name Description Rect rect | Improve this Doc View Source OnOpen() Declaration public override void OnOpen() | Improve this Doc View Source SetWindowSize(Single, Single) Set the with and or height of the window. If the given value is smaller than the minimum size, the minimum size will be used. Declaration public void SetWindowSize(float windowWith = -1F, float windowHeight = -1F) Parameters Type Name Description System.Single windowWith System.Single windowHeight"
  },
  "api/VRBuilder.Editor.UI.Windows.SearchableGroupListPopup.html": {
    "href": "api/VRBuilder.Editor.UI.Windows.SearchableGroupListPopup.html",
    "title": "Class SearchableGroupListPopup | VR Builder Documentation",
    "keywords": "Class SearchableGroupListPopup Popup window that displays a searchable list of all VR Builder SceneObjectGroups . Inheritance System.Object SearchableGroupListPopup Namespace : VRBuilder.Editor.UI.Windows Assembly : VRBuilder.Editor.dll Syntax public class SearchableGroupListPopup : PopupWindowContent Remarks This class provides functionality for displaying a a searchable list of all VR Builder SceneObjectGroups in a popup window, where the groups can be filtered based on a search query. The class supports partial word matching in the search. Constructors | Improve this Doc View Source SearchableGroupListPopup(Action<SceneObjectGroups.SceneObjectGroup>, VisualTreeAsset, VisualTreeAsset) Declaration public SearchableGroupListPopup(Action<SceneObjectGroups.SceneObjectGroup> onItemSelected, VisualTreeAsset searchableList, VisualTreeAsset listItem) Parameters Type Name Description System.Action < SceneObjectGroups.SceneObjectGroup > onItemSelected VisualTreeAsset searchableList VisualTreeAsset listItem Methods | Improve this Doc View Source GetWindowSize() Declaration public override Vector2 GetWindowSize() Returns Type Description Vector2 | Improve this Doc View Source OnGUI(Rect) Declaration public override void OnGUI(Rect rect) Parameters Type Name Description Rect rect | Improve this Doc View Source OnOpen() Declaration public override void OnOpen() | Improve this Doc View Source SetAvailableGroups(IEnumerable<SceneObjectGroups.SceneObjectGroup>, Boolean) Set the groups to be displayed in the list. Declaration public void SetAvailableGroups(IEnumerable<SceneObjectGroups.SceneObjectGroup> availableGroups, bool firstItemIsProcessSceneObject = false) Parameters Type Name Description System.Collections.Generic.IEnumerable < SceneObjectGroups.SceneObjectGroup > availableGroups System.Boolean firstItemIsProcessSceneObject | Improve this Doc View Source SetContext(Boolean) Sets the context of weather GroupListItem.GroupCountNotAvailableText should be displayed instead of the group reference count. Declaration public void SetContext(bool isInPreviewContext) Parameters Type Name Description System.Boolean isInPreviewContext If true GroupListItem.GroupCountNotAvailableText will be displayed instead of a the group reference count. | Improve this Doc View Source SetWindowSize(Single, Single) Set the with and or height of the window. If the given value is smaller than the minimum size, the minimum size will be used. Declaration public void SetWindowSize(float windowWith = -1F, float windowHeight = -1F) Parameters Type Name Description System.Single windowWith System.Single windowHeight"
  },
  "api/VRBuilder.Editor.UI.Windows.WindowUtils.html": {
    "href": "api/VRBuilder.Editor.UI.Windows.WindowUtils.html",
    "title": "Class WindowUtils | VR Builder Documentation",
    "keywords": "Class WindowUtils Inheritance System.Object WindowUtils Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Windows Assembly : VRBuilder.Editor.dll Syntax public class WindowUtils"
  },
  "api/VRBuilder.Editor.UI.Wizard.html": {
    "href": "api/VRBuilder.Editor.UI.Wizard.html",
    "title": "Namespace VRBuilder.Editor.UI.Wizard | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.UI.Wizard Classes MultipleChoiceWizard ProjectSetupWizard Wizard which guides the user through setting up a new project, including a process, scene and XR hardware. SceneSetupWizard Wizard which guides the user through creating a new process in a new or existing scene."
  },
  "api/VRBuilder.Editor.UI.Wizard.MultipleChoiceWizard.html": {
    "href": "api/VRBuilder.Editor.UI.Wizard.MultipleChoiceWizard.html",
    "title": "Class MultipleChoiceWizard | VR Builder Documentation",
    "keywords": "Class MultipleChoiceWizard Inheritance System.Object MultipleChoiceWizard Namespace : VRBuilder.Editor.UI.Wizard Assembly : VRBuilder.Editor.UserInterface.AddOn.dll Syntax public class MultipleChoiceWizard : EditorWindow Fields | Improve this Doc answers Declaration protected string[] answers Field Value Type Description System.String [] | Improve this Doc numberOfAnswers Declaration protected int numberOfAnswers Field Value Type Description System.Int32 | Improve this Doc question Declaration protected string question Field Value Type Description System.String | Improve this Doc verticalLayout Declaration protected bool verticalLayout Field Value Type Description System.Boolean Methods | Improve this Doc FindValidMultipleChoiceBox() Declaration protected static IMultipleChoiceProperty FindValidMultipleChoiceBox() Returns Type Description IMultipleChoiceProperty"
  },
  "api/VRBuilder.Editor.UI.Wizard.ProjectSetupWizard.html": {
    "href": "api/VRBuilder.Editor.UI.Wizard.ProjectSetupWizard.html",
    "title": "Class ProjectSetupWizard | VR Builder Documentation",
    "keywords": "Class ProjectSetupWizard Wizard which guides the user through setting up a new project, including a process, scene and XR hardware. Inheritance System.Object ProjectSetupWizard Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Wizard Assembly : VRBuilder.Editor.dll Syntax public static class ProjectSetupWizard Events | Improve this Doc View Source SetupFinished Will be called when the VR Builder Setup wizard is closed. Declaration public static event EventHandler<EventArgs> SetupFinished Event Type Type Description System.EventHandler < System.EventArgs >"
  },
  "api/VRBuilder.Editor.UI.Wizard.SceneSetupWizard.html": {
    "href": "api/VRBuilder.Editor.UI.Wizard.SceneSetupWizard.html",
    "title": "Class SceneSetupWizard | VR Builder Documentation",
    "keywords": "Class SceneSetupWizard Wizard which guides the user through creating a new process in a new or existing scene. Inheritance System.Object SceneSetupWizard Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI.Wizard Assembly : VRBuilder.Editor.dll Syntax public static class SceneSetupWizard Events | Improve this Doc View Source SetupFinished Will be called when the Process Setup wizard is closed. Declaration public static event EventHandler<EventArgs> SetupFinished Event Type Type Description System.EventHandler < System.EventArgs >"
  },
  "api/VRBuilder.Editor.UI.WorkflowEditorColorPalette.html": {
    "href": "api/VRBuilder.Editor.UI.WorkflowEditorColorPalette.html",
    "title": "Class WorkflowEditorColorPalette | VR Builder Documentation",
    "keywords": "Class WorkflowEditorColorPalette Class to provide convenient access to all colors used in the Workflow window. Inheritance System.Object WorkflowEditorColorPalette Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UI Assembly : VRBuilder.Editor.dll Syntax [DataContract] public class WorkflowEditorColorPalette Properties | Improve this Doc View Source EditorBackground Returns background color of the editor based on current editor skin. Declaration public static Color EditorBackground { get; } Property Value Type Description Color | Improve this Doc View Source ElementBackground Background color for graphical elements (step nodes, buttons...) Declaration [DataMember] public Color ElementBackground { get; } Property Value Type Description Color | Improve this Doc View Source Primary Primary color for selected elements. Declaration [DataMember] public Color Primary { get; } Property Value Type Description Color | Improve this Doc View Source Secondary Secondary color (for highlights). Declaration [DataMember] public Color Secondary { get; } Property Value Type Description Color | Improve this Doc View Source Text Text color easily readable at ElementBackground color. Declaration [DataMember] public Color Text { get; } Property Value Type Description Color | Improve this Doc View Source Transition Color of transition arrows between steps. Declaration [DataMember] public Color Transition { get; } Property Value Type Description Color Methods | Improve this Doc View Source GetDefaultPalette() Declaration public static WorkflowEditorColorPalette GetDefaultPalette() Returns Type Description WorkflowEditorColorPalette | Improve this Doc View Source LoadPaletteFrom(String) Load palette from a json file. Declaration public static WorkflowEditorColorPalette LoadPaletteFrom(string paletteSubpath) Parameters Type Name Description System.String paletteSubpath Subpath to file. If file is not found, use default palette. If more than one possible candidate is found, use default palette. If there was a serialization error, use default palette. Returns Type Description WorkflowEditorColorPalette"
  },
  "api/VRBuilder.Editor.UndoRedo.CallbackCommand.html": {
    "href": "api/VRBuilder.Editor.UndoRedo.CallbackCommand.html",
    "title": "Class CallbackCommand | VR Builder Documentation",
    "keywords": "Class CallbackCommand A revertable command which defines Do/Undo logic through callbacks. Inheritance System.Object CallbackCommand ProcessCommand Implements IRevertableCommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UndoRedo Assembly : VRBuilder.Editor.dll Syntax public class CallbackCommand : IRevertableCommand Constructors | Improve this Doc View Source CallbackCommand(Action, Action) Declaration public CallbackCommand(Action doCallback, Action undoCallback) Parameters Type Name Description System.Action doCallback System.Action undoCallback Methods | Improve this Doc View Source Do() Perform some revertable action. Declaration public virtual void Do() | Improve this Doc View Source Undo() Revert the changes done during by Do() method. Declaration public virtual void Undo() Implements IRevertableCommand"
  },
  "api/VRBuilder.Editor.UndoRedo.html": {
    "href": "api/VRBuilder.Editor.UndoRedo.html",
    "title": "Namespace VRBuilder.Editor.UndoRedo | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.UndoRedo Classes CallbackCommand A revertable command which defines Do/Undo logic through callbacks. ProcessCommand A CallbackCommand which notifies the VRBuilder.Editor.GlobalEditorHandler class that the current process was modified. RevertableChangesHandler Utility class to hook up non-serializeable changes to Unity's Undo . Interfaces IRevertableCommand An interface for a method object,"
  },
  "api/VRBuilder.Editor.UndoRedo.IRevertableCommand.html": {
    "href": "api/VRBuilder.Editor.UndoRedo.IRevertableCommand.html",
    "title": "Interface IRevertableCommand | VR Builder Documentation",
    "keywords": "Interface IRevertableCommand An interface for a method object, Namespace : VRBuilder.Editor.UndoRedo Assembly : VRBuilder.Editor.dll Syntax public interface IRevertableCommand Methods | Improve this Doc View Source Do() Perform some revertable action. Declaration void Do() | Improve this Doc View Source Undo() Revert the changes done during by Do() method. Declaration void Undo()"
  },
  "api/VRBuilder.Editor.UndoRedo.ProcessCommand.html": {
    "href": "api/VRBuilder.Editor.UndoRedo.ProcessCommand.html",
    "title": "Class ProcessCommand | VR Builder Documentation",
    "keywords": "Class ProcessCommand A CallbackCommand which notifies the VRBuilder.Editor.GlobalEditorHandler class that the current process was modified. Inheritance System.Object CallbackCommand ProcessCommand Implements IRevertableCommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UndoRedo Assembly : VRBuilder.Editor.dll Syntax public class ProcessCommand : CallbackCommand, IRevertableCommand Constructors | Improve this Doc View Source ProcessCommand(Action, Action) Declaration public ProcessCommand(Action doCallback, Action undoCallback) Parameters Type Name Description System.Action doCallback System.Action undoCallback Methods | Improve this Doc View Source Do() Perform some revertable action. Declaration public override void Do() Overrides CallbackCommand.Do() | Improve this Doc View Source Undo() Revert the changes done during by Do() method. Declaration public override void Undo() Overrides CallbackCommand.Undo() Implements IRevertableCommand"
  },
  "api/VRBuilder.Editor.UndoRedo.RevertableChangesHandler.html": {
    "href": "api/VRBuilder.Editor.UndoRedo.RevertableChangesHandler.html",
    "title": "Class RevertableChangesHandler | VR Builder Documentation",
    "keywords": "Class RevertableChangesHandler Utility class to hook up non-serializeable changes to Unity's Undo . Inheritance System.Object RevertableChangesHandler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UndoRedo Assembly : VRBuilder.Editor.dll Syntax public static class RevertableChangesHandler Methods | Improve this Doc View Source CollapseUndoOperations(String) Collapses all undo operation up to group index together into the main stack. Declaration public static void CollapseUndoOperations(string groupName) Parameters Type Name Description System.String groupName | Improve this Doc View Source Do(IRevertableCommand, String) Registers revertableCommand and executes it. Declaration public static void Do(IRevertableCommand revertableCommand, string commandGroup = \"\") Parameters Type Name Description IRevertableCommand revertableCommand System.String commandGroup Remarks If commandGroup is empty, revertableCommand will be added to the main stack, otherwise, it will remind in a group called as commandGroup content until CollapseUndoOperations(String) is called. | Improve this Doc View Source FlushStack() Clear Unity's Undo stack and reset the command handler. Declaration public static void FlushStack()"
  },
  "api/VRBuilder.Editor.UX.html": {
    "href": "api/VRBuilder.Editor.UX.html",
    "title": "Namespace VRBuilder.Editor.UX | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.UX Classes ProcessControllerSceneSetup Will be called on OnSceneSetup to add the process controller menu."
  },
  "api/VRBuilder.Editor.UX.ProcessControllerSceneSetup.html": {
    "href": "api/VRBuilder.Editor.UX.ProcessControllerSceneSetup.html",
    "title": "Class ProcessControllerSceneSetup | VR Builder Documentation",
    "keywords": "Class ProcessControllerSceneSetup Will be called on OnSceneSetup to add the process controller menu. Inheritance System.Object SceneSetup ProcessControllerSceneSetup Inherited Members SceneSetup.SetupPrefab(String) SceneSetup.FindPrefab(String) SceneSetup.IsPrefabMissingInScene(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.UX Assembly : VRBuilder.Editor.dll Syntax public class ProcessControllerSceneSetup : SceneSetup Properties | Improve this Doc View Source Key Identifier key for specific scene setup types, e.g. for every interaction framework. Declaration public override string Key { get; } Property Value Type Description System.String Overrides SceneSetup.Key | Improve this Doc View Source Priority Priority lets you tweak in which order different SceneSetup s will be performed. The priority is considered from lowest to highest. Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides SceneSetup.Priority Methods | Improve this Doc View Source Setup(ISceneSetupConfiguration) Setup the scene with necessary objects and/or logic. Declaration public override void Setup(ISceneSetupConfiguration configuration) Parameters Type Name Description ISceneSetupConfiguration configuration Overrides SceneSetup.Setup(ISceneSetupConfiguration)"
  },
  "api/VRBuilder.Editor.VideoTools.UI.html": {
    "href": "api/VRBuilder.Editor.VideoTools.UI.html",
    "title": "Namespace VRBuilder.Editor.VideoTools.UI | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.VideoTools.UI Classes PlayVideoBehaviorMenuItem Menu item for PlayVideoBehavior . VideoPlayerPropertyEditor Editor UI for VideoPlayerProperty ."
  },
  "api/VRBuilder.Editor.VideoTools.UI.PlayVideoBehaviorMenuItem.html": {
    "href": "api/VRBuilder.Editor.VideoTools.UI.PlayVideoBehaviorMenuItem.html",
    "title": "Class PlayVideoBehaviorMenuItem | VR Builder Documentation",
    "keywords": "Class PlayVideoBehaviorMenuItem Menu item for PlayVideoBehavior . Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > PlayVideoBehaviorMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.VideoTools.UI Assembly : VRBuilder.Editor.VideoTools.dll Syntax public class PlayVideoBehaviorMenuItem : MenuItem<IBehavior> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Editor.VideoTools.UI.VideoPlayerPropertyEditor.html": {
    "href": "api/VRBuilder.Editor.VideoTools.UI.VideoPlayerPropertyEditor.html",
    "title": "Class VideoPlayerPropertyEditor | VR Builder Documentation",
    "keywords": "Class VideoPlayerPropertyEditor Editor UI for VideoPlayerProperty . Inheritance System.Object VideoPlayerPropertyEditor Namespace : VRBuilder.Editor.VideoTools.UI Assembly : VRBuilder.Editor.VideoTools.dll Syntax public class VideoPlayerPropertyEditor : Editor Methods | Improve this Doc View Source OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/VRBuilder.Editor.VIRTOSHA.UI.Conditions.DrillHolesConditionMenuItem.html": {
    "href": "api/VRBuilder.Editor.VIRTOSHA.UI.Conditions.DrillHolesConditionMenuItem.html",
    "title": "Class DrillHolesConditionMenuItem | VR Builder Documentation",
    "keywords": "Class DrillHolesConditionMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() . Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > DrillHolesConditionMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.VIRTOSHA.UI.Conditions Assembly : VRBuilder.Editor.VIRTOSHA.dll Syntax public class DrillHolesConditionMenuItem : MenuItem<ICondition> Properties | Improve this Doc View Source DisplayedName A name displayed in the Step Inspector. Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods | Improve this Doc View Source GetNewItem() Returns a new instance of an object (behavior or condition). Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Editor.VIRTOSHA.UI.Conditions.html": {
    "href": "api/VRBuilder.Editor.VIRTOSHA.UI.Conditions.html",
    "title": "Namespace VRBuilder.Editor.VIRTOSHA.UI.Conditions | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.VIRTOSHA.UI.Conditions Classes DrillHolesConditionMenuItem The Step Inspector populates \"Add Behavior\" and \"Add Condition\" buttons' dropdown menus with implementations of this class. Use either or as the generic parameter. The Step Inspector will display it with VRBuilder.Editor.UI.StepInspector.Menu.MenuItem`1.get_DisplayedName . If clicked, it will use the result of GetNewItem() ."
  },
  "api/VRBuilder.Editor.Vivox.AuthenticationPackageEnabler.html": {
    "href": "api/VRBuilder.Editor.Vivox.AuthenticationPackageEnabler.html",
    "title": "Class AuthenticationPackageEnabler | VR Builder Documentation",
    "keywords": "Class AuthenticationPackageEnabler Adds the Authentication package as a dependency. Inheritance System.Object Dependency AuthenticationPackageEnabler Inherited Members Dependency.Version Dependency.Priority Dependency.Samples Dependency.Layers Dependency.OnPackageEnabled Dependency.OnPackageDisabled Dependency.EmitOnEnabled() Dependency.EmitOnDisabled() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Vivox Assembly : VRBuilder.Editor.dll Syntax public class AuthenticationPackageEnabler : Dependency Properties | Improve this Doc View Source Package A string representing the package to be added. Declaration public override string Package { get; } Property Value Type Description System.String Overrides Dependency.Package"
  },
  "api/VRBuilder.Editor.Vivox.html": {
    "href": "api/VRBuilder.Editor.Vivox.html",
    "title": "Namespace VRBuilder.Editor.Vivox | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.Vivox Classes AuthenticationPackageEnabler Adds the Authentication package as a dependency. VivoxPackageEnabler Adds the Vivox package as a dependency."
  },
  "api/VRBuilder.Editor.Vivox.VivoxPackageEnabler.html": {
    "href": "api/VRBuilder.Editor.Vivox.VivoxPackageEnabler.html",
    "title": "Class VivoxPackageEnabler | VR Builder Documentation",
    "keywords": "Class VivoxPackageEnabler Adds the Vivox package as a dependency. Inheritance System.Object Dependency VivoxPackageEnabler Inherited Members Dependency.Priority Dependency.Samples Dependency.Layers Dependency.OnPackageEnabled Dependency.OnPackageDisabled Dependency.EmitOnEnabled() Dependency.EmitOnDisabled() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Vivox Assembly : VRBuilder.Editor.dll Syntax public class VivoxPackageEnabler : Dependency Properties | Improve this Doc View Source Package A string representing the package to be added. Declaration public override string Package { get; } Property Value Type Description System.String Overrides Dependency.Package | Improve this Doc View Source Version A string representing the version of the package. Declaration public override string Version { get; } Property Value Type Description System.String Overrides Dependency.Version"
  },
  "api/VRBuilder.Editor.VRBuilderEditorHelper.html": {
    "href": "api/VRBuilder.Editor.VRBuilderEditorHelper.html",
    "title": "Class VRBuilderEditorHelper | VR Builder Documentation",
    "keywords": "Class VRBuilderEditorHelper Inheritance System.Object VRBuilderEditorHelper Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor Assembly : VRBuilder.Editor.dll Syntax public static class VRBuilderEditorHelper Methods | Improve this Doc AddBehaviorToStep(IStep, IBehavior) Declaration public static void AddBehaviorToStep(IStep step, IBehavior item) Parameters Type Name Description IStep step IBehavior item | Improve this Doc AddConditionToTransition(ITransition, ICondition) Declaration public static void AddConditionToTransition(ITransition transition, ICondition item) Parameters Type Name Description ITransition transition ICondition item | Improve this Doc AddTransationToStep(IStep) Declaration public static ITransition AddTransationToStep(IStep step) Parameters Type Name Description IStep step Returns Type Description ITransition | Improve this Doc ClearTransationsOfStep(IStep) Declaration public static void ClearTransationsOfStep(IStep step) Parameters Type Name Description IStep step | Improve this Doc CreateStep(String) Declaration public static IStep CreateStep(string stepName) Parameters Type Name Description System.String stepName Returns Type Description IStep | Improve this Doc FindStepsWithCondition(ICondition) Declaration public static IEnumerable<IStep> FindStepsWithCondition(ICondition item) Parameters Type Name Description ICondition item Returns Type Description System.Collections.Generic.IEnumerable < IStep > | Improve this Doc GetChapterList() Declaration public static List<Chapter> GetChapterList() Returns Type Description System.Collections.Generic.List < Chapter > | Improve this Doc GetLastSelectedStep() Declaration public static IStep GetLastSelectedStep() Returns Type Description IStep | Improve this Doc GetStepBehaviors(IStep) Declaration public static IList<IBehavior> GetStepBehaviors(IStep step) Parameters Type Name Description IStep step Returns Type Description System.Collections.Generic.IList < IBehavior > | Improve this Doc GetStepList(IChapter) Declaration public static List<Step> GetStepList(IChapter chapter) Parameters Type Name Description IChapter chapter Returns Type Description System.Collections.Generic.List < Step > | Improve this Doc RefreshProcessGraphViewWindowWindow() Declaration public static void RefreshProcessGraphViewWindowWindow() | Improve this Doc RefreshProcessWindow() Declaration public static void RefreshProcessWindow()"
  },
  "api/VRBuilder.Editor.XRInteraction.html": {
    "href": "api/VRBuilder.Editor.XRInteraction.html",
    "title": "Namespace VRBuilder.Editor.XRInteraction | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.XRInteraction Classes SnapZoneSettings Settings for SnapZone s for e.g. automatic creation of such snap zones. TeleportationAnchorVRBuilderEditor TeleportationAreaVRBuilderEditor XRInteractionSceneSetup Scene setup for XR-Interaction."
  },
  "api/VRBuilder.Editor.XRInteraction.SnapZoneSettings.html": {
    "href": "api/VRBuilder.Editor.XRInteraction.SnapZoneSettings.html",
    "title": "Class SnapZoneSettings | VR Builder Documentation",
    "keywords": "Class SnapZoneSettings Settings for SnapZone s for e.g. automatic creation of such snap zones. Inheritance System.Object SettingsObject < SnapZoneSettings > SnapZoneSettings Inherited Members SettingsObject<SnapZoneSettings>.Instance SettingsObject<SnapZoneSettings>.Save() Namespace : VRBuilder.Editor.XRInteraction Assembly : VRBuilder.Editor.XRInteraction.dll Syntax public class SnapZoneSettings : SettingsObject<SnapZoneSettings> Fields | Improve this Doc View Source HighlightColor This color is used as the snap zone highlight color when no object is hovering a SnapZone . Declaration public Color HighlightColor Field Value Type Description Color | Improve this Doc View Source InteractionLayerMask Only Interactables with this LayerMask will interact with this SnapZone . Declaration public InteractionLayerMask InteractionLayerMask Field Value Type Description UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask | Improve this Doc View Source InvalidColor This color is used when an invalid InteractableObject is hovering a SnapZone . Declaration public Color InvalidColor Field Value Type Description Color | Improve this Doc View Source ValidationColor This color is used when a valid InteractableObject is hovering a SnapZone . Declaration public Color ValidationColor Field Value Type Description Color Properties | Improve this Doc View Source HighlightMaterial The material used for drawing when an InteractableObject is hovering a SnapZone . Should be transparent. Declaration public Material HighlightMaterial { get; } Property Value Type Description Material | Improve this Doc View Source InvalidMaterial The material used for the highlight object, when an invalid object is hovering. Should be transparent. Declaration public Material InvalidMaterial { get; } Property Value Type Description Material | Improve this Doc View Source Settings Loads the first existing SnapZoneSettings found in the project. If non are found, it creates and saves a new instance with default values. Declaration public static SnapZoneSettings Settings { get; } Property Value Type Description SnapZoneSettings | Improve this Doc View Source ValidationMaterial The material used for the highlight object, when a valid object is hovering. Should be transparent. Declaration public Material ValidationMaterial { get; } Property Value Type Description Material Methods | Improve this Doc View Source ApplySettingsToSnapZone(SnapZone) Applies current settings to provided SnapZone . Declaration public void ApplySettingsToSnapZone(SnapZone snapZone) Parameters Type Name Description SnapZone snapZone"
  },
  "api/VRBuilder.Editor.XRInteraction.TeleportationAnchorVRBuilderEditor.html": {
    "href": "api/VRBuilder.Editor.XRInteraction.TeleportationAnchorVRBuilderEditor.html",
    "title": "Class TeleportationAnchorVRBuilderEditor | VR Builder Documentation",
    "keywords": "Class TeleportationAnchorVRBuilderEditor Inheritance System.Object UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor UnityEditor.XR.Interaction.Toolkit.TeleportationAnchorEditor TeleportationAnchorVRBuilderEditor Inherited Members UnityEditor.XR.Interaction.Toolkit.TeleportationAnchorEditor.m_TeleportAnchorTransform UnityEditor.XR.Interaction.Toolkit.TeleportationAnchorEditor.OnEnable() UnityEditor.XR.Interaction.Toolkit.TeleportationAnchorEditor.DrawCoreConfiguration() UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.m_TeleportationProvider UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.m_MatchOrientation UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.m_MatchDirectionalInput UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.m_TeleportTrigger UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.m_FilterSelectionByHitNormal UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.m_UpNormalToleranceDegrees UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.m_Teleporting UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.DrawProperties() UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.DrawTeleportationConfiguration() UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.DrawTeleportationConfigurationNested() UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.DrawInteractableEventsNested() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_InteractionManager UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_Colliders UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_InteractionLayerMask UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_InteractionLayers UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_DistanceCalculationMode UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_SelectMode UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_FocusMode UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_StartingHoverFilters UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_StartingSelectFilters UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_StartingInteractionStrengthFilters UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_CustomReticle UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_AllowGazeInteraction UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_AllowGazeSelect UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OverrideGazeTimeToSelect UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_GazeTimeToSelect UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_AllowGazeAssistance UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OverrideTimeToAutoDeselectGaze UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_TimeToAutoDeselectGaze UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_FirstHoverEntered UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_LastHoverExited UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_HoverEntered UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_HoverExited UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_FirstSelectEntered UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_LastSelectExited UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_SelectEntered UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_SelectExited UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_FirstFocusEntered UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_LastFocusExited UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_FocusEntered UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_FocusExited UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_Activated UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_Deactivated UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnFirstHoverEntered UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnLastHoverExited UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnHoverEntered UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnHoverExited UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnSelectEntered UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnSelectExited UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnSelectCanceled UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnActivate UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnDeactivate UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnFirstHoverEnteredCalls UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnLastHoverExitedCalls UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnHoverEnteredCalls UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnHoverExitedCalls UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnSelectEnteredCalls UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnSelectExitedCalls UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnSelectCanceledCalls UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnActivateCalls UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnDeactivateCalls UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.selectMultipleAllowed UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.focusMultipleAllowed UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawInspector() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawBeforeProperties() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawEvents() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawGazeConfiguration() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawSelectionConfiguration() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawFocusConfiguration() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawFilters() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawFiltersNested() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawInteractionManagement() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawDistanceCalculationMode() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawInteractableEvents() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.IsDeprecatedEventsInUse() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.MigrateEvents(SerializedObject) UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.MigrateEvents(UnityEngine.Object[]) UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.knownSerializedPropertyNames UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.InitializeKnownSerializedPropertyNames() UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.GetDerivedSerializedPropertyNames() UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.DrawDerivedProperties() UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.DrawScript() Namespace : VRBuilder.Editor.XRInteraction Assembly : VRBuilder.Editor.XRInteraction.dll Syntax public class TeleportationAnchorVRBuilderEditor : TeleportationAnchorEditor Methods | Improve this Doc View Source ConfigureDefaultTeleportationAnchor(TeleportationAnchorVRBuilder) Declaration protected void ConfigureDefaultTeleportationAnchor(TeleportationAnchorVRBuilder teleportationAnchor) Parameters Type Name Description TeleportationAnchorVRBuilder teleportationAnchor | Improve this Doc View Source ConfigureTeleportationProximityEntry(TeleportationAnchorVRBuilder) Declaration protected virtual void ConfigureTeleportationProximityEntry(TeleportationAnchorVRBuilder teleportationAnchor) Parameters Type Name Description TeleportationAnchorVRBuilder teleportationAnchor | Improve this Doc View Source ConfigureVRBuilderDefaults(TeleportationAnchorVRBuilder) Declaration protected virtual void ConfigureVRBuilderDefaults(TeleportationAnchorVRBuilder teleportationAnchor) Parameters Type Name Description TeleportationAnchorVRBuilder teleportationAnchor | Improve this Doc View Source OnInspectorGUI() Declaration public override void OnInspectorGUI() Overrides UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.OnInspectorGUI()"
  },
  "api/VRBuilder.Editor.XRInteraction.TeleportationAreaVRBuilderEditor.html": {
    "href": "api/VRBuilder.Editor.XRInteraction.TeleportationAreaVRBuilderEditor.html",
    "title": "Class TeleportationAreaVRBuilderEditor | VR Builder Documentation",
    "keywords": "Class TeleportationAreaVRBuilderEditor Inheritance System.Object UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor UnityEditor.XR.Interaction.Toolkit.TeleportationAreaEditor TeleportationAreaVRBuilderEditor Inherited Members UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.m_TeleportationProvider UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.m_MatchOrientation UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.m_MatchDirectionalInput UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.m_TeleportTrigger UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.m_FilterSelectionByHitNormal UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.m_UpNormalToleranceDegrees UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.m_Teleporting UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.OnEnable() UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.DrawProperties() UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.DrawTeleportationConfiguration() UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.DrawTeleportationConfigurationNested() UnityEditor.XR.Interaction.Toolkit.BaseTeleportationInteractableEditor.DrawInteractableEventsNested() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_InteractionManager UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_Colliders UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_InteractionLayerMask UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_InteractionLayers UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_DistanceCalculationMode UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_SelectMode UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_FocusMode UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_StartingHoverFilters UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_StartingSelectFilters UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_StartingInteractionStrengthFilters UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_CustomReticle UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_AllowGazeInteraction UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_AllowGazeSelect UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OverrideGazeTimeToSelect UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_GazeTimeToSelect UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_AllowGazeAssistance UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OverrideTimeToAutoDeselectGaze UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_TimeToAutoDeselectGaze UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_FirstHoverEntered UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_LastHoverExited UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_HoverEntered UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_HoverExited UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_FirstSelectEntered UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_LastSelectExited UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_SelectEntered UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_SelectExited UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_FirstFocusEntered UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_LastFocusExited UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_FocusEntered UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_FocusExited UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_Activated UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_Deactivated UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnFirstHoverEntered UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnLastHoverExited UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnHoverEntered UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnHoverExited UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnSelectEntered UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnSelectExited UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnSelectCanceled UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnActivate UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnDeactivate UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnFirstHoverEnteredCalls UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnLastHoverExitedCalls UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnHoverEnteredCalls UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnHoverExitedCalls UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnSelectEnteredCalls UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnSelectExitedCalls UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnSelectCanceledCalls UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnActivateCalls UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.m_OnDeactivateCalls UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.selectMultipleAllowed UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.focusMultipleAllowed UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawInspector() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawBeforeProperties() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawEvents() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawCoreConfiguration() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawGazeConfiguration() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawSelectionConfiguration() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawFocusConfiguration() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawFilters() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawFiltersNested() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawInteractionManagement() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawDistanceCalculationMode() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.DrawInteractableEvents() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.IsDeprecatedEventsInUse() UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.MigrateEvents(SerializedObject) UnityEditor.XR.Interaction.Toolkit.XRBaseInteractableEditor.MigrateEvents(UnityEngine.Object[]) UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.knownSerializedPropertyNames UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.InitializeKnownSerializedPropertyNames() UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.GetDerivedSerializedPropertyNames() UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.DrawDerivedProperties() UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.DrawScript() Namespace : VRBuilder.Editor.XRInteraction Assembly : VRBuilder.Editor.XRInteraction.dll Syntax public class TeleportationAreaVRBuilderEditor : TeleportationAreaEditor Methods | Improve this Doc View Source ConfigureVRBuilderDefaults(TeleportationAreaVRBuilder) Declaration protected virtual void ConfigureVRBuilderDefaults(TeleportationAreaVRBuilder teleportationArea) Parameters Type Name Description TeleportationAreaVRBuilder teleportationArea | Improve this Doc View Source OnInspectorGUI() Declaration public override void OnInspectorGUI() Overrides UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.OnInspectorGUI()"
  },
  "api/VRBuilder.Editor.XRInteraction.XRInteractionSceneSetup.html": {
    "href": "api/VRBuilder.Editor.XRInteraction.XRInteractionSceneSetup.html",
    "title": "Class XRInteractionSceneSetup | VR Builder Documentation",
    "keywords": "Class XRInteractionSceneSetup Scene setup for XR-Interaction. Inheritance System.Object SceneSetup InteractionFrameworkSceneSetup XRInteractionSceneSetup Inherited Members InteractionFrameworkSceneSetup.Priority InteractionFrameworkSceneSetup.RemoveMainCamera() SceneSetup.SetupPrefab(String) SceneSetup.FindPrefab(String) SceneSetup.IsPrefabMissingInScene(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.XRInteraction Assembly : VRBuilder.Editor.XRInteraction.dll Syntax public class XRInteractionSceneSetup : InteractionFrameworkSceneSetup Properties | Improve this Doc View Source Key Identifier key for specific scene setup types, e.g. for every interaction framework. Declaration public override string Key { get; } Property Value Type Description System.String Overrides InteractionFrameworkSceneSetup.Key Methods | Improve this Doc View Source Setup(ISceneSetupConfiguration) Setup the scene with necessary objects and/or logic. Declaration public override void Setup(ISceneSetupConfiguration configuration) Parameters Type Name Description ISceneSetupConfiguration configuration Overrides SceneSetup.Setup(ISceneSetupConfiguration)"
  },
  "api/VRBuilder.Editor.XRUtils.html": {
    "href": "api/VRBuilder.Editor.XRUtils.html",
    "title": "Namespace VRBuilder.Editor.XRUtils | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.XRUtils Classes XRLoaderHelper Utility class that allows to load XR packages. Enums XRLoaderHelper.XRConfiguration XRLoaderHelper.XRSDK"
  },
  "api/VRBuilder.Editor.XRUtils.XRLoaderHelper.html": {
    "href": "api/VRBuilder.Editor.XRUtils.XRLoaderHelper.html",
    "title": "Class XRLoaderHelper | VR Builder Documentation",
    "keywords": "Class XRLoaderHelper Utility class that allows to load XR packages. Inheritance System.Object XRLoaderHelper Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.XRUtils Assembly : VRBuilder.Editor.dll Syntax public class XRLoaderHelper Methods | Improve this Doc View Source GetCurrentXRConfiguration() Returns a list with all XR SDKs enabled in this project. Declaration public static IEnumerable<XRLoaderHelper.XRConfiguration> GetCurrentXRConfiguration() Returns Type Description System.Collections.Generic.IEnumerable < XRLoaderHelper.XRConfiguration > | Improve this Doc View Source LoadOculus() Retrieves and loads the Oculus XR package. Declaration public static void LoadOculus() | Improve this Doc View Source LoadOpenVR() Retrieves and loads the OpenVR XR package. Declaration public static void LoadOpenVR() | Improve this Doc View Source LoadOpenXR() Retrieves and loads the OpenXR package. Declaration public static void LoadOpenXR() | Improve this Doc View Source LoadWindowsMR() Retrieves and loads the Windows MR package. Declaration public static void LoadWindowsMR()"
  },
  "api/VRBuilder.Editor.XRUtils.XRLoaderHelper.XRConfiguration.html": {
    "href": "api/VRBuilder.Editor.XRUtils.XRLoaderHelper.XRConfiguration.html",
    "title": "Enum XRLoaderHelper.XRConfiguration | VR Builder Documentation",
    "keywords": "Enum XRLoaderHelper.XRConfiguration Namespace : VRBuilder.Editor.XRUtils Assembly : VRBuilder.Editor.dll Syntax public enum XRConfiguration Fields Name Description None OculusLegacy OculusXR OpenVRLegacy OpenVRXR WindowsMR XRLegacy XRManagement"
  },
  "api/VRBuilder.Editor.XRUtils.XRLoaderHelper.XRSDK.html": {
    "href": "api/VRBuilder.Editor.XRUtils.XRLoaderHelper.XRSDK.html",
    "title": "Enum XRLoaderHelper.XRSDK | VR Builder Documentation",
    "keywords": "Enum XRLoaderHelper.XRSDK Namespace : VRBuilder.Editor.XRUtils Assembly : VRBuilder.Editor.dll Syntax public enum XRSDK Fields Name Description None Oculus OpenVR OpenXR WindowsMR"
  },
  "api/VRBuilder.Netcode.CommandLineConnectionManager.html": {
    "href": "api/VRBuilder.Netcode.CommandLineConnectionManager.html",
    "title": "Class CommandLineConnectionManager | VR Builder Documentation",
    "keywords": "Class CommandLineConnectionManager Sets up the connection based on command line parameters. Inheritance System.Object CommandLineConnectionManager Namespace : VRBuilder.Netcode Assembly : VRBuilder.Netcode.dll Syntax public class CommandLineConnectionManager : MonoBehaviour"
  },
  "api/VRBuilder.Netcode.ConfettiMachineNetcode.html": {
    "href": "api/VRBuilder.Netcode.ConfettiMachineNetcode.html",
    "title": "Class ConfettiMachineNetcode | VR Builder Documentation",
    "keywords": "Class ConfettiMachineNetcode Confetti machine that spawns confetti on all connected clients. Inheritance System.Object Unity.Netcode.NetworkBehaviour ConfettiMachineNetcode Implements IParticleMachine Inherited Members Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode Assembly : VRBuilder.Netcode.dll Syntax public class ConfettiMachineNetcode : NetworkBehaviour, IParticleMachine Properties | Improve this Doc View Source EmissionDuration Duration in seconds after the machine finishes to emit confetti. Declaration public float EmissionDuration { get; } Property Value Type Description System.Single | Improve this Doc View Source IsActive Declaration public bool IsActive { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Activate() Declaration public void Activate() | Improve this Doc View Source Activate(Single, Single) Declaration public void Activate(float radius, float duration) Parameters Type Name Description System.Single radius System.Single duration | Improve this Doc View Source ChangeAreaRadius(Single) Declaration public void ChangeAreaRadius(float radius) Parameters Type Name Description System.Single radius | Improve this Doc View Source ChangeEmissionDuration(Single) Declaration public void ChangeEmissionDuration(float duration) Parameters Type Name Description System.Single duration | Improve this Doc View Source Deactivate() Declaration public void Deactivate() | Improve this Doc View Source OnDestroy() Declaration public override void OnDestroy() Overrides Unity.Netcode.NetworkBehaviour.OnDestroy() Implements IParticleMachine"
  },
  "api/VRBuilder.Netcode.Configuration.html": {
    "href": "api/VRBuilder.Netcode.Configuration.html",
    "title": "Namespace VRBuilder.Netcode.Configuration | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.Configuration Classes MultiUserAudioPlayer Process audio player implementation that plays audio to all users. MultiUserSceneObjectManager Multiuser implementation of ISceneObjectManager . NetcodeRuntimeConfiguration Runtime configuration for the Netcode multiuser implementation."
  },
  "api/VRBuilder.Netcode.Configuration.MultiUserAudioPlayer.html": {
    "href": "api/VRBuilder.Netcode.Configuration.MultiUserAudioPlayer.html",
    "title": "Class MultiUserAudioPlayer | VR Builder Documentation",
    "keywords": "Class MultiUserAudioPlayer Process audio player implementation that plays audio to all users. Inheritance System.Object Unity.Netcode.NetworkBehaviour MultiUserAudioPlayer Implements IProcessAudioPlayer Inherited Members Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.Configuration Assembly : VRBuilder.Netcode.dll Syntax public class MultiUserAudioPlayer : NetworkBehaviour, IProcessAudioPlayer Properties | Improve this Doc View Source FallbackAudioSource Declaration public AudioSource FallbackAudioSource { get; } Property Value Type Description AudioSource | Improve this Doc View Source IsPlaying Declaration public bool IsPlaying { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LocalAudioSource Declaration public AudioSource LocalAudioSource { get; } Property Value Type Description AudioSource Methods | Improve this Doc View Source PlayAudio(IAudioData, Single, Single) Declaration public void PlayAudio(IAudioData audioData, float volume = 1F, float pitch = 1F) Parameters Type Name Description IAudioData audioData System.Single volume System.Single pitch | Improve this Doc View Source Reset() Declaration public void Reset() | Improve this Doc View Source Stop() Declaration public void Stop() Implements IProcessAudioPlayer"
  },
  "api/VRBuilder.Netcode.Configuration.MultiUserSceneObjectManager.html": {
    "href": "api/VRBuilder.Netcode.Configuration.MultiUserSceneObjectManager.html",
    "title": "Class MultiUserSceneObjectManager | VR Builder Documentation",
    "keywords": "Class MultiUserSceneObjectManager Multiuser implementation of ISceneObjectManager . Inheritance System.Object Unity.Netcode.NetworkBehaviour MultiUserSceneObjectManager Implements ISceneObjectManager Inherited Members Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.Configuration Assembly : VRBuilder.Netcode.dll Syntax public class MultiUserSceneObjectManager : NetworkBehaviour, ISceneObjectManager Methods | Improve this Doc View Source InstantiatePrefab(GameObject, Vector3, Quaternion) Declaration public GameObject InstantiatePrefab(GameObject prefab, Vector3 position, Quaternion rotation) Parameters Type Name Description GameObject prefab Vector3 position Quaternion rotation Returns Type Description GameObject | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() | Improve this Doc View Source RequestAuthority(ISceneObject) Declaration public void RequestAuthority(ISceneObject sceneObject) Parameters Type Name Description ISceneObject sceneObject | Improve this Doc View Source SetComponentActive(ISceneObject, String, Boolean) Declaration public void SetComponentActive(ISceneObject sceneObject, string componentTypeName, bool isActive) Parameters Type Name Description ISceneObject sceneObject System.String componentTypeName System.Boolean isActive | Improve this Doc View Source SetSceneObjectActive(ISceneObject, Boolean) Declaration public void SetSceneObjectActive(ISceneObject sceneObject, bool isActive) Parameters Type Name Description ISceneObject sceneObject System.Boolean isActive Implements ISceneObjectManager"
  },
  "api/VRBuilder.Netcode.Configuration.NetcodeRuntimeConfiguration.html": {
    "href": "api/VRBuilder.Netcode.Configuration.NetcodeRuntimeConfiguration.html",
    "title": "Class NetcodeRuntimeConfiguration | VR Builder Documentation",
    "keywords": "Class NetcodeRuntimeConfiguration Runtime configuration for the Netcode multiuser implementation. Inheritance System.Object BaseRuntimeConfiguration NetcodeRuntimeConfiguration Inherited Members BaseRuntimeConfiguration.ManifestFileName BaseRuntimeConfiguration.SceneObjectRegistry BaseRuntimeConfiguration.Serializer BaseRuntimeConfiguration.DefaultInputActionAssetPath BaseRuntimeConfiguration.CustomInputActionAssetPath BaseRuntimeConfiguration.Modes BaseRuntimeConfiguration.StepLockHandling BaseRuntimeConfiguration.SceneConfiguration BaseRuntimeConfiguration.LoadProcess(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Netcode.Configuration Assembly : VRBuilder.Netcode.dll Syntax public class NetcodeRuntimeConfiguration : BaseRuntimeConfiguration Constructors | Improve this Doc View Source NetcodeRuntimeConfiguration() Declaration public NetcodeRuntimeConfiguration() Fields | Improve this Doc View Source DefaultMode Default mode which white lists everything. Declaration public static readonly IMode DefaultMode Field Value Type Description IMode Properties | Improve this Doc View Source InstructionPlayer Declaration public override AudioSource InstructionPlayer { get; } Property Value Type Description AudioSource Overrides BaseRuntimeConfiguration.InstructionPlayer | Improve this Doc View Source LocalUser Declaration public override UserSceneObject LocalUser { get; } Property Value Type Description UserSceneObject Overrides BaseRuntimeConfiguration.LocalUser | Improve this Doc View Source ProcessAudioPlayer Declaration public override IProcessAudioPlayer ProcessAudioPlayer { get; } Property Value Type Description IProcessAudioPlayer Overrides BaseRuntimeConfiguration.ProcessAudioPlayer | Improve this Doc View Source SceneObjectManager Declaration public override ISceneObjectManager SceneObjectManager { get; } Property Value Type Description ISceneObjectManager Overrides BaseRuntimeConfiguration.SceneObjectManager | Improve this Doc View Source User Declaration public override ProcessSceneObject User { get; } Property Value Type Description ProcessSceneObject Overrides BaseRuntimeConfiguration.User | Improve this Doc View Source Users Declaration public override IEnumerable<UserSceneObject> Users { get; } Property Value Type Description System.Collections.Generic.IEnumerable < UserSceneObject > Overrides BaseRuntimeConfiguration.Users Extension Methods RuntimeConfigurationExtensions.GetTextToSpeechConfiguration(BaseRuntimeConfiguration) RuntimeConfigurationExtensions.SetTextToSpeechConfiguration(BaseRuntimeConfiguration, TextToSpeechConfiguration)"
  },
  "api/VRBuilder.Netcode.html": {
    "href": "api/VRBuilder.Netcode.html",
    "title": "Namespace VRBuilder.Netcode | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode Classes CommandLineConnectionManager Sets up the connection based on command line parameters. ConfettiMachineNetcode Confetti machine that spawns confetti on all connected clients."
  },
  "api/VRBuilder.Netcode.ProcessController.html": {
    "href": "api/VRBuilder.Netcode.ProcessController.html",
    "title": "Namespace VRBuilder.Netcode.ProcessController | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.ProcessController Classes NetcodeProcessLoader"
  },
  "api/VRBuilder.Netcode.ProcessController.NetcodeProcessLoader.html": {
    "href": "api/VRBuilder.Netcode.ProcessController.NetcodeProcessLoader.html",
    "title": "Class NetcodeProcessLoader | VR Builder Documentation",
    "keywords": "Class NetcodeProcessLoader Inheritance System.Object Unity.Netcode.NetworkBehaviour NetcodeProcessLoader Implements IConfigurableProcessController Inherited Members Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.ProcessController Assembly : VRBuilder.Netcode.dll Syntax public class NetcodeProcessLoader : NetworkBehaviour, IConfigurableProcessController Properties | Improve this Doc View Source AutoStartProcess Declaration public bool AutoStartProcess { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() Implements IConfigurableProcessController"
  },
  "api/VRBuilder.Netcode.Properties.BooleanDataPropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.BooleanDataPropertyNetcode.html",
    "title": "Class BooleanDataPropertyNetcode | VR Builder Documentation",
    "keywords": "Class BooleanDataPropertyNetcode Netcode for synchronizing data properties of type bool. Inheritance System.Object Unity.Netcode.NetworkBehaviour DataPropertyNetcode < System.Boolean > BooleanDataPropertyNetcode Implements ISceneObjectPropertyExtension < BooleanDataProperty > Inherited Members DataPropertyNetcode<Boolean>.DataProperty Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class BooleanDataPropertyNetcode : DataPropertyNetcode<bool>, ISceneObjectPropertyExtension<BooleanDataProperty> Properties | Improve this Doc View Source DataPropertyNetwork Declaration protected override bool DataPropertyNetwork { get; set; } Property Value Type Description System.Boolean Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Boolean>.DataPropertyNetwork Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Boolean>.OnNetworkSpawn() | Improve this Doc View Source RequestDataPropertyChange(Boolean) Declaration protected override void RequestDataPropertyChange(bool value) Parameters Type Name Description System.Boolean value Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Boolean>.RequestDataPropertyChange(System.Boolean) Events | Improve this Doc View Source NetworkValueChanged Declaration protected override event EventHandler<NetworkValueChangedEventArgs<bool>> NetworkValueChanged Event Type Type Description System.EventHandler < NetworkValueChangedEventArgs < System.Boolean >> Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Boolean>.NetworkValueChanged Implements ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Netcode.Properties.DataPropertyNetcode-1.html": {
    "href": "api/VRBuilder.Netcode.Properties.DataPropertyNetcode-1.html",
    "title": "Class DataPropertyNetcode<T> | VR Builder Documentation",
    "keywords": "Class DataPropertyNetcode<T> Generic network implementation for data properties. Inheritance System.Object Unity.Netcode.NetworkBehaviour DataPropertyNetcode<T> BooleanDataPropertyNetcode IntegerDataPropertyNetcode NumberDataPropertyNetcode TextDataPropertyNetcode Inherited Members Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public abstract class DataPropertyNetcode<T> : NetworkBehaviour Type Parameters Name Description T Fields | Improve this Doc View Source DataProperty Declaration protected IDataProperty<T> DataProperty Field Value Type Description IDataProperty <T> Properties | Improve this Doc View Source DataPropertyNetwork Value of the data property that is synced over the network. Declaration protected abstract T DataPropertyNetwork { get; set; } Property Value Type Description T Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() | Improve this Doc View Source RequestDataPropertyChange(T) Requests the server to update the value of the data property. Declaration protected abstract void RequestDataPropertyChange(T value) Parameters Type Name Description T value Events | Improve this Doc View Source NetworkValueChanged Called when the value of the network-synced variable changes. Declaration protected abstract event EventHandler<NetworkValueChangedEventArgs<T>> NetworkValueChanged Event Type Type Description System.EventHandler < NetworkValueChangedEventArgs <T>>"
  },
  "api/VRBuilder.Netcode.Properties.GrabbablePropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.GrabbablePropertyNetcode.html",
    "title": "Class GrabbablePropertyNetcode | VR Builder Documentation",
    "keywords": "Class GrabbablePropertyNetcode Network code for grabbable properties. Inheritance System.Object Unity.Netcode.NetworkBehaviour LockablePropertyNetcode GrabbablePropertyNetcode Implements ISceneObjectPropertyExtension < IGrabbableProperty > Inherited Members LockablePropertyNetcode.isLocked Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class GrabbablePropertyNetcode : LockablePropertyNetcode, ISceneObjectPropertyExtension<IGrabbableProperty> Fields | Improve this Doc View Source grabbableProperty Declaration protected IGrabbableProperty grabbableProperty Field Value Type Description IGrabbableProperty Properties | Improve this Doc View Source LockableProperty Declaration protected override ILockable LockableProperty { get; } Property Value Type Description ILockable Overrides LockablePropertyNetcode.LockableProperty Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides LockablePropertyNetcode.OnNetworkSpawn() Implements ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Netcode.Properties.HighlightPropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.HighlightPropertyNetcode.html",
    "title": "Class HighlightPropertyNetcode | VR Builder Documentation",
    "keywords": "Class HighlightPropertyNetcode Network code for the IHighlightProperty Inheritance System.Object Unity.Netcode.NetworkBehaviour HighlightPropertyNetcode Implements ISceneObjectPropertyExtension < IHighlightProperty > Inherited Members Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class HighlightPropertyNetcode : NetworkBehaviour, ISceneObjectPropertyExtension<IHighlightProperty> Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() Implements ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Netcode.Properties.html": {
    "href": "api/VRBuilder.Netcode.Properties.html",
    "title": "Namespace VRBuilder.Netcode.Properties | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.Properties Classes BooleanDataPropertyNetcode Netcode for synchronizing data properties of type bool. DataPropertyNetcode<T> Generic network implementation for data properties. GrabbablePropertyNetcode Network code for grabbable properties. HighlightPropertyNetcode Network code for the IHighlightProperty IntegerDataPropertyNetcode Netcode for synchronizing data properties of type int. NetworkValueChangedEventArgs<T> Event args for data property network value updates. NumberDataPropertyNetcode Netcode for synchronizing data properties of type float. SnappablePropertyNetcode Network code for the ISnappableProperty . SnapZoneNetworkValidator Validator required for networked snap zones. SnapZonePropertyNetcode Netcode for the ISnapZoneProperty . TeleportationPropertyNetcode Netcode implementation of ITeleportationProperty . TextDataPropertyNetcode Netcode for synchronizing data properties of type string. TouchablePropertyNetcode Network code for touchable properties. UsablePropertyNetcode Network code for usable properties."
  },
  "api/VRBuilder.Netcode.Properties.IntegerDataPropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.IntegerDataPropertyNetcode.html",
    "title": "Class IntegerDataPropertyNetcode | VR Builder Documentation",
    "keywords": "Class IntegerDataPropertyNetcode Netcode for synchronizing data properties of type int. Inheritance System.Object Unity.Netcode.NetworkBehaviour DataPropertyNetcode < System.Int32 > IntegerDataPropertyNetcode Inherited Members DataPropertyNetcode<Int32>.DataProperty Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class IntegerDataPropertyNetcode : DataPropertyNetcode<int> Properties | Improve this Doc View Source DataPropertyNetwork Declaration protected override int DataPropertyNetwork { get; set; } Property Value Type Description System.Int32 Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Int32>.DataPropertyNetwork Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Int32>.OnNetworkSpawn() | Improve this Doc View Source RequestDataPropertyChange(Int32) Declaration protected override void RequestDataPropertyChange(int value) Parameters Type Name Description System.Int32 value Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Int32>.RequestDataPropertyChange(System.Int32) Events | Improve this Doc View Source NetworkValueChanged Declaration protected override event EventHandler<NetworkValueChangedEventArgs<int>> NetworkValueChanged Event Type Type Description System.EventHandler < NetworkValueChangedEventArgs < System.Int32 >> Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Int32>.NetworkValueChanged"
  },
  "api/VRBuilder.Netcode.Properties.NetworkValueChangedEventArgs-1.html": {
    "href": "api/VRBuilder.Netcode.Properties.NetworkValueChangedEventArgs-1.html",
    "title": "Class NetworkValueChangedEventArgs<T> | VR Builder Documentation",
    "keywords": "Class NetworkValueChangedEventArgs<T> Event args for data property network value updates. Inheritance System.Object System.EventArgs NetworkValueChangedEventArgs<T> Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class NetworkValueChangedEventArgs<T> : EventArgs Type Parameters Name Description T Constructors | Improve this Doc View Source NetworkValueChangedEventArgs(T, T) Declaration public NetworkValueChangedEventArgs(T oldValue, T newValue) Parameters Type Name Description T oldValue T newValue Fields | Improve this Doc View Source NewValue Declaration public readonly T NewValue Field Value Type Description T | Improve this Doc View Source OldValue Declaration public readonly T OldValue Field Value Type Description T"
  },
  "api/VRBuilder.Netcode.Properties.NumberDataPropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.NumberDataPropertyNetcode.html",
    "title": "Class NumberDataPropertyNetcode | VR Builder Documentation",
    "keywords": "Class NumberDataPropertyNetcode Netcode for synchronizing data properties of type float. Inheritance System.Object Unity.Netcode.NetworkBehaviour DataPropertyNetcode < System.Single > NumberDataPropertyNetcode Implements ISceneObjectPropertyExtension < NumberDataProperty > Inherited Members DataPropertyNetcode<Single>.DataProperty Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class NumberDataPropertyNetcode : DataPropertyNetcode<float>, ISceneObjectPropertyExtension<NumberDataProperty> Properties | Improve this Doc View Source DataPropertyNetwork Declaration protected override float DataPropertyNetwork { get; set; } Property Value Type Description System.Single Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Single>.DataPropertyNetwork Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Single>.OnNetworkSpawn() | Improve this Doc View Source RequestDataPropertyChange(Single) Declaration protected override void RequestDataPropertyChange(float value) Parameters Type Name Description System.Single value Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Single>.RequestDataPropertyChange(System.Single) Events | Improve this Doc View Source NetworkValueChanged Declaration protected override event EventHandler<NetworkValueChangedEventArgs<float>> NetworkValueChanged Event Type Type Description System.EventHandler < NetworkValueChangedEventArgs < System.Single >> Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Single>.NetworkValueChanged Implements ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Netcode.Properties.SnappablePropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.SnappablePropertyNetcode.html",
    "title": "Class SnappablePropertyNetcode | VR Builder Documentation",
    "keywords": "Class SnappablePropertyNetcode Network code for the ISnappableProperty . Inheritance System.Object Unity.Netcode.NetworkBehaviour LockablePropertyNetcode SnappablePropertyNetcode Implements ISceneObjectPropertyExtension < ISnappableProperty > Inherited Members LockablePropertyNetcode.isLocked Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class SnappablePropertyNetcode : LockablePropertyNetcode, ISceneObjectPropertyExtension<ISnappableProperty> Fields | Improve this Doc View Source snappableProperty Declaration protected ISnappableProperty snappableProperty Field Value Type Description ISnappableProperty Properties | Improve this Doc View Source LockableProperty Declaration protected override ILockable LockableProperty { get; } Property Value Type Description ILockable Overrides LockablePropertyNetcode.LockableProperty Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides LockablePropertyNetcode.OnNetworkSpawn() Implements ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Netcode.Properties.SnapZoneNetworkValidator.html": {
    "href": "api/VRBuilder.Netcode.Properties.SnapZoneNetworkValidator.html",
    "title": "Class SnapZoneNetworkValidator | VR Builder Documentation",
    "keywords": "Class SnapZoneNetworkValidator Validator required for networked snap zones. Inheritance System.Object Validator SnapZoneNetworkValidator Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class SnapZoneNetworkValidator : Validator Methods | Improve this Doc View Source Validate(GameObject) Declaration public override bool Validate(GameObject obj) Parameters Type Name Description GameObject obj Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Netcode.Properties.SnapZonePropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.SnapZonePropertyNetcode.html",
    "title": "Class SnapZonePropertyNetcode | VR Builder Documentation",
    "keywords": "Class SnapZonePropertyNetcode Netcode for the ISnapZoneProperty . Inheritance System.Object Unity.Netcode.NetworkBehaviour LockablePropertyNetcode SnapZonePropertyNetcode Implements ISceneObjectPropertyExtension < ISnapZoneProperty > Inherited Members LockablePropertyNetcode.isLocked Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class SnapZonePropertyNetcode : LockablePropertyNetcode, ISceneObjectPropertyExtension<ISnapZoneProperty> Fields | Improve this Doc View Source snapZoneProperty Declaration protected ISnapZoneProperty snapZoneProperty Field Value Type Description ISnapZoneProperty Properties | Improve this Doc View Source LockableProperty Declaration protected override ILockable LockableProperty { get; } Property Value Type Description ILockable Overrides LockablePropertyNetcode.LockableProperty Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides LockablePropertyNetcode.OnNetworkSpawn() Implements ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Netcode.Properties.TeleportationPropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.TeleportationPropertyNetcode.html",
    "title": "Class TeleportationPropertyNetcode | VR Builder Documentation",
    "keywords": "Class TeleportationPropertyNetcode Netcode implementation of ITeleportationProperty . Inheritance System.Object Unity.Netcode.NetworkBehaviour LockablePropertyNetcode TeleportationPropertyNetcode Implements ISceneObjectPropertyExtension < ITeleportationProperty > Inherited Members LockablePropertyNetcode.isLocked Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class TeleportationPropertyNetcode : LockablePropertyNetcode, ISceneObjectPropertyExtension<ITeleportationProperty> Properties | Improve this Doc View Source LockableProperty Declaration protected override ILockable LockableProperty { get; } Property Value Type Description ILockable Overrides LockablePropertyNetcode.LockableProperty Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides LockablePropertyNetcode.OnNetworkSpawn() Implements ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Netcode.Properties.TextDataPropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.TextDataPropertyNetcode.html",
    "title": "Class TextDataPropertyNetcode | VR Builder Documentation",
    "keywords": "Class TextDataPropertyNetcode Netcode for synchronizing data properties of type string. Inheritance System.Object Unity.Netcode.NetworkBehaviour DataPropertyNetcode < System.String > TextDataPropertyNetcode Implements ISceneObjectPropertyExtension < TextDataProperty > Inherited Members DataPropertyNetcode<String>.DataProperty Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class TextDataPropertyNetcode : DataPropertyNetcode<string>, ISceneObjectPropertyExtension<TextDataProperty> Properties | Improve this Doc View Source DataPropertyNetwork Declaration protected override string DataPropertyNetwork { get; set; } Property Value Type Description System.String Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.String>.DataPropertyNetwork Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.String>.OnNetworkSpawn() | Improve this Doc View Source RequestDataPropertyChange(String) Declaration protected override void RequestDataPropertyChange(string value) Parameters Type Name Description System.String value Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.String>.RequestDataPropertyChange(System.String) Events | Improve this Doc View Source NetworkValueChanged Declaration protected override event EventHandler<NetworkValueChangedEventArgs<string>> NetworkValueChanged Event Type Type Description System.EventHandler < NetworkValueChangedEventArgs < System.String >> Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.String>.NetworkValueChanged Implements ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Netcode.Properties.TouchablePropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.TouchablePropertyNetcode.html",
    "title": "Class TouchablePropertyNetcode | VR Builder Documentation",
    "keywords": "Class TouchablePropertyNetcode Network code for touchable properties. Inheritance System.Object Unity.Netcode.NetworkBehaviour LockablePropertyNetcode TouchablePropertyNetcode Implements ISceneObjectPropertyExtension < ITouchableProperty > Inherited Members LockablePropertyNetcode.isLocked Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class TouchablePropertyNetcode : LockablePropertyNetcode, ISceneObjectPropertyExtension<ITouchableProperty> Fields | Improve this Doc View Source touchableProperty Declaration protected ITouchableProperty touchableProperty Field Value Type Description ITouchableProperty Properties | Improve this Doc View Source LockableProperty Declaration protected override ILockable LockableProperty { get; } Property Value Type Description ILockable Overrides LockablePropertyNetcode.LockableProperty Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides LockablePropertyNetcode.OnNetworkSpawn() Implements ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Netcode.Properties.UsablePropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.UsablePropertyNetcode.html",
    "title": "Class UsablePropertyNetcode | VR Builder Documentation",
    "keywords": "Class UsablePropertyNetcode Network code for usable properties. Inheritance System.Object Unity.Netcode.NetworkBehaviour LockablePropertyNetcode UsablePropertyNetcode Implements ISceneObjectPropertyExtension < IUsableProperty > Inherited Members LockablePropertyNetcode.isLocked Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class UsablePropertyNetcode : LockablePropertyNetcode, ISceneObjectPropertyExtension<IUsableProperty> Fields | Improve this Doc View Source usableProperty Declaration protected IUsableProperty usableProperty Field Value Type Description IUsableProperty Properties | Improve this Doc View Source LockableProperty Declaration protected override ILockable LockableProperty { get; } Property Value Type Description ILockable Overrides LockablePropertyNetcode.LockableProperty Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides LockablePropertyNetcode.OnNetworkSpawn() Implements ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Netcode.User.AutoConfigureInteractionLayers.html": {
    "href": "api/VRBuilder.Netcode.User.AutoConfigureInteractionLayers.html",
    "title": "Class AutoConfigureInteractionLayers | VR Builder Documentation",
    "keywords": "Class AutoConfigureInteractionLayers Automatically configures interaction layers on start on a ILayerConfigurator on the same game object. Inheritance System.Object AutoConfigureInteractionLayers Namespace : VRBuilder.Netcode.User Assembly : VRBuilder.Netcode.dll Syntax public class AutoConfigureInteractionLayers : MonoBehaviour"
  },
  "api/VRBuilder.Netcode.User.CommandLineColorSelector.html": {
    "href": "api/VRBuilder.Netcode.User.CommandLineColorSelector.html",
    "title": "Class CommandLineColorSelector | VR Builder Documentation",
    "keywords": "Class CommandLineColorSelector Allows to assign a color to the specified components via a command line parameter. Inheritance System.Object Unity.Netcode.NetworkBehaviour CommandLineColorSelector Inherited Members Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.User Assembly : VRBuilder.Netcode.dll Syntax public class CommandLineColorSelector : NetworkBehaviour Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() | Improve this Doc View Source RequestNewAvatarColorServerRpc(Color) Declaration [ServerRpc] public void RequestNewAvatarColorServerRpc(Color requestedColor) Parameters Type Name Description Color requestedColor"
  },
  "api/VRBuilder.Netcode.User.CommandLineUserNameProvider.html": {
    "href": "api/VRBuilder.Netcode.User.CommandLineUserNameProvider.html",
    "title": "Class CommandLineUserNameProvider | VR Builder Documentation",
    "keywords": "Class CommandLineUserNameProvider Lets the user set their name via a command line argument. Inheritance System.Object Unity.Netcode.NetworkBehaviour CommandLineUserNameProvider Implements IUserNameProvider Inherited Members Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.User Assembly : VRBuilder.Netcode.dll Syntax public class CommandLineUserNameProvider : NetworkBehaviour, IUserNameProvider Properties | Improve this Doc View Source UserName Declaration public string UserName { get; } Property Value Type Description System.String Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() | Improve this Doc View Source RequestNewUserNameServerRpc(String) Declaration [ServerRpc] public void RequestNewUserNameServerRpc(string newUserName) Parameters Type Name Description System.String newUserName Events | Improve this Doc View Source UserNameChanged Declaration public event EventHandler<UserNameProviderEventArgs> UserNameChanged Event Type Type Description System.EventHandler < UserNameProviderEventArgs > Implements IUserNameProvider"
  },
  "api/VRBuilder.Netcode.User.DestroyComponentsWhenRemote.html": {
    "href": "api/VRBuilder.Netcode.User.DestroyComponentsWhenRemote.html",
    "title": "Class DestroyComponentsWhenRemote | VR Builder Documentation",
    "keywords": "Class DestroyComponentsWhenRemote Destroys the specified components on a remote rig. Inheritance System.Object Unity.Netcode.NetworkBehaviour DestroyComponentsWhenRemote Inherited Members Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.User Assembly : VRBuilder.Netcode.dll Syntax public class DestroyComponentsWhenRemote : NetworkBehaviour Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn()"
  },
  "api/VRBuilder.Netcode.User.HandAnimatorNetcode.html": {
    "href": "api/VRBuilder.Netcode.User.HandAnimatorNetcode.html",
    "title": "Class HandAnimatorNetcode | VR Builder Documentation",
    "keywords": "Class HandAnimatorNetcode Syncs hand animations over the network. Inheritance System.Object Unity.Netcode.NetworkBehaviour HandAnimatorNetcode Inherited Members Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.User Assembly : VRBuilder.Netcode.dll Syntax public class HandAnimatorNetcode : NetworkBehaviour Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn()"
  },
  "api/VRBuilder.Netcode.User.html": {
    "href": "api/VRBuilder.Netcode.User.html",
    "title": "Namespace VRBuilder.Netcode.User | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.User Classes AutoConfigureInteractionLayers Automatically configures interaction layers on start on a ILayerConfigurator on the same game object. CommandLineColorSelector Allows to assign a color to the specified components via a command line parameter. CommandLineUserNameProvider Lets the user set their name via a command line argument. DestroyComponentsWhenRemote Destroys the specified components on a remote rig. HandAnimatorNetcode Syncs hand animations over the network. PointTowardsMainCamera Rotates the transform of the object so that the forward vector points towards the main camera and the up vector points up. SpawnPointSelector Places the current game object on a spawn point chosen based on its clientId. UserNameProviderEventArgs Event args for the IUserNameProvider . UserSpawnPoint Defines a game object as a possible spawn point for user rigs. Interfaces IUserNameProvider Class storing the name of the local user."
  },
  "api/VRBuilder.Netcode.User.IUserNameProvider.html": {
    "href": "api/VRBuilder.Netcode.User.IUserNameProvider.html",
    "title": "Interface IUserNameProvider | VR Builder Documentation",
    "keywords": "Interface IUserNameProvider Class storing the name of the local user. Namespace : VRBuilder.Netcode.User Assembly : VRBuilder.Netcode.dll Syntax public interface IUserNameProvider Properties | Improve this Doc View Source UserName Current user name. Declaration string UserName { get; } Property Value Type Description System.String Events | Improve this Doc View Source UserNameChanged Raised when the user name is changed. Declaration event EventHandler<UserNameProviderEventArgs> UserNameChanged Event Type Type Description System.EventHandler < UserNameProviderEventArgs >"
  },
  "api/VRBuilder.Netcode.User.PointTowardsMainCamera.html": {
    "href": "api/VRBuilder.Netcode.User.PointTowardsMainCamera.html",
    "title": "Class PointTowardsMainCamera | VR Builder Documentation",
    "keywords": "Class PointTowardsMainCamera Rotates the transform of the object so that the forward vector points towards the main camera and the up vector points up. Inheritance System.Object PointTowardsMainCamera Namespace : VRBuilder.Netcode.User Assembly : VRBuilder.Netcode.dll Syntax public class PointTowardsMainCamera : MonoBehaviour"
  },
  "api/VRBuilder.Netcode.User.SpawnPointSelector.html": {
    "href": "api/VRBuilder.Netcode.User.SpawnPointSelector.html",
    "title": "Class SpawnPointSelector | VR Builder Documentation",
    "keywords": "Class SpawnPointSelector Places the current game object on a spawn point chosen based on its clientId. Inheritance System.Object Unity.Netcode.NetworkBehaviour SpawnPointSelector Inherited Members Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.User Assembly : VRBuilder.Netcode.dll Syntax public class SpawnPointSelector : NetworkBehaviour Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn()"
  },
  "api/VRBuilder.Netcode.User.UI.html": {
    "href": "api/VRBuilder.Netcode.User.UI.html",
    "title": "Namespace VRBuilder.Netcode.User.UI | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.User.UI Classes TextMeshProUserNameDisplay Displays the user's name on a provided TextMeshPro."
  },
  "api/VRBuilder.Netcode.User.UI.TextMeshProUserNameDisplay.html": {
    "href": "api/VRBuilder.Netcode.User.UI.TextMeshProUserNameDisplay.html",
    "title": "Class TextMeshProUserNameDisplay | VR Builder Documentation",
    "keywords": "Class TextMeshProUserNameDisplay Displays the user's name on a provided TextMeshPro. Inheritance System.Object TextMeshProUserNameDisplay Namespace : VRBuilder.Netcode.User.UI Assembly : VRBuilder.Netcode.dll Syntax public class TextMeshProUserNameDisplay : MonoBehaviour"
  },
  "api/VRBuilder.Netcode.User.UserNameProviderEventArgs.html": {
    "href": "api/VRBuilder.Netcode.User.UserNameProviderEventArgs.html",
    "title": "Class UserNameProviderEventArgs | VR Builder Documentation",
    "keywords": "Class UserNameProviderEventArgs Event args for the IUserNameProvider . Inheritance System.Object System.EventArgs UserNameProviderEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Netcode.User Assembly : VRBuilder.Netcode.dll Syntax public class UserNameProviderEventArgs : EventArgs Constructors | Improve this Doc View Source UserNameProviderEventArgs(String, String) Declaration public UserNameProviderEventArgs(string newValue, string oldValue) Parameters Type Name Description System.String newValue System.String oldValue Fields | Improve this Doc View Source NewValue Declaration public readonly string NewValue Field Value Type Description System.String | Improve this Doc View Source OldValue Declaration public readonly string OldValue Field Value Type Description System.String"
  },
  "api/VRBuilder.Netcode.User.UserSpawnPoint.html": {
    "href": "api/VRBuilder.Netcode.User.UserSpawnPoint.html",
    "title": "Class UserSpawnPoint | VR Builder Documentation",
    "keywords": "Class UserSpawnPoint Defines a game object as a possible spawn point for user rigs. Inheritance System.Object UserSpawnPoint Namespace : VRBuilder.Netcode.User Assembly : VRBuilder.Netcode.dll Syntax public class UserSpawnPoint : MonoBehaviour Properties | Improve this Doc View Source Id Numeric identifier for this spawn point. Declaration public int Id { get; } Property Value Type Description System.Int32"
  },
  "api/VRBuilder.Netcode.UX.html": {
    "href": "api/VRBuilder.Netcode.UX.html",
    "title": "Namespace VRBuilder.Netcode.UX | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.UX Classes NetcodeProcessController Process controller to be used in Netcode-enabled processes."
  },
  "api/VRBuilder.Netcode.UX.NetcodeProcessController.html": {
    "href": "api/VRBuilder.Netcode.UX.NetcodeProcessController.html",
    "title": "Class NetcodeProcessController | VR Builder Documentation",
    "keywords": "Class NetcodeProcessController Process controller to be used in Netcode-enabled processes. Inheritance System.Object BaseProcessController NetcodeProcessController Implements IProcessController Inherited Members BaseProcessController.GetProcessControllerPrefab() BaseProcessController.HandlePostSetup(GameObject) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Netcode.UX Assembly : VRBuilder.Netcode.dll Syntax public class NetcodeProcessController : BaseProcessController, IProcessController Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides BaseProcessController.Name | Improve this Doc View Source PrefabName Declaration protected override string PrefabName { get; } Property Value Type Description System.String Overrides BaseProcessController.PrefabName | Improve this Doc View Source Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides BaseProcessController.Priority Methods | Improve this Doc View Source GetRequiredSetupComponents() Declaration public override List<Type> GetRequiredSetupComponents() Returns Type Description System.Collections.Generic.List < System.Type > Overrides BaseProcessController.GetRequiredSetupComponents() Implements IProcessController"
  },
  "api/VRBuilder.Netcode.VoiceChat.Dissonance.DissonanceVoiceChatService.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.Dissonance.DissonanceVoiceChatService.html",
    "title": "Class DissonanceVoiceChatService | VR Builder Documentation",
    "keywords": "Class DissonanceVoiceChatService Inheritance System.Object DissonanceVoiceChatService Implements IVoiceChatService Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Netcode.VoiceChat.Dissonance Assembly : VRBuilder.Dissonance.dll Syntax public class DissonanceVoiceChatService : IVoiceChatService Properties | Improve this Doc View Source EditorDisplayName Declaration public string EditorDisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source InputDevice Declaration public string InputDevice { get; } Property Value Type Description System.String | Improve this Doc View Source IsPositionalAudio Declaration public bool IsPositionalAudio { get; } Property Value Type Description System.Boolean | Improve this Doc View Source OutputDevice Declaration public string OutputDevice { get; } Property Value Type Description System.String | Improve this Doc View Source Status Declaration public IVoiceChatService.VoiceChatServiceStatus Status { get; } Property Value Type Description IVoiceChatService.VoiceChatServiceStatus | Improve this Doc View Source Users Declaration public IEnumerable<IVoiceChatUser> Users { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IVoiceChatUser > Methods | Improve this Doc View Source MuteLocalUser(Boolean) Declaration public void MuteLocalUser(bool isMuted) Parameters Type Name Description System.Boolean isMuted | Improve this Doc View Source SetPosition(Vector3, Vector3, Vector3, Vector3) Declaration public void SetPosition(Vector3 speaker, Vector3 listener, Vector3 listenerForward, Vector3 listenerUp) Parameters Type Name Description Vector3 speaker Vector3 listener Vector3 listenerForward Vector3 listenerUp | Improve this Doc View Source Setup() Declaration public void Setup() | Improve this Doc View Source SignInWithName(String, String) Declaration public void SignInWithName(string displayName, string channelName) Parameters Type Name Description System.String displayName System.String channelName | Improve this Doc View Source StartDedicatedServer(String) Declaration public void StartDedicatedServer(string channelName) Parameters Type Name Description System.String channelName Events | Improve this Doc View Source BeginSpeaking Declaration public event EventHandler<VoiceChatServiceEventArgs> BeginSpeaking Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > | Improve this Doc View Source ConnectionStatusChanged Declaration public event EventHandler ConnectionStatusChanged Event Type Type Description System.EventHandler | Improve this Doc View Source EndSpeaking Declaration public event EventHandler<VoiceChatServiceEventArgs> EndSpeaking Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > | Improve this Doc View Source LocalUserMuted Declaration public event EventHandler LocalUserMuted Event Type Type Description System.EventHandler | Improve this Doc View Source LocalUserUnmuted Declaration public event EventHandler LocalUserUnmuted Event Type Type Description System.EventHandler | Improve this Doc View Source ServiceInitialized Declaration public event EventHandler ServiceInitialized Event Type Type Description System.EventHandler | Improve this Doc View Source UserJoined Declaration public event EventHandler<VoiceChatServiceEventArgs> UserJoined Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > | Improve this Doc View Source UserLeft Declaration public event EventHandler<VoiceChatServiceEventArgs> UserLeft Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > Implements IVoiceChatService"
  },
  "api/VRBuilder.Netcode.VoiceChat.Dissonance.DissonanceVoiceChatUser.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.Dissonance.DissonanceVoiceChatUser.html",
    "title": "Class DissonanceVoiceChatUser | VR Builder Documentation",
    "keywords": "Class DissonanceVoiceChatUser Inheritance System.Object DissonanceVoiceChatUser Implements IVoiceChatUser Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Netcode.VoiceChat.Dissonance Assembly : VRBuilder.Dissonance.dll Syntax public class DissonanceVoiceChatUser : IVoiceChatUser Constructors | Improve this Doc View Source DissonanceVoiceChatUser(VoicePlayerState) Declaration public DissonanceVoiceChatUser(VoicePlayerState player) Parameters Type Name Description Dissonance.VoicePlayerState player Properties | Improve this Doc View Source AudioLevel Declaration public double AudioLevel { get; } Property Value Type Description System.Double | Improve this Doc View Source IsLocalUser Declaration public bool IsLocalUser { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSpeaking Declaration public bool IsSpeaking { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name The display name is equal to the unique name minus the GUID at the end. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source UniqueId Declaration public string UniqueId { get; } Property Value Type Description System.String Implements IVoiceChatUser"
  },
  "api/VRBuilder.Netcode.VoiceChat.Dissonance.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.Dissonance.html",
    "title": "Namespace VRBuilder.Netcode.VoiceChat.Dissonance | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.VoiceChat.Dissonance Classes DissonanceVoiceChatService DissonanceVoiceChatUser"
  },
  "api/VRBuilder.Netcode.VoiceChat.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.html",
    "title": "Namespace VRBuilder.Netcode.VoiceChat | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.VoiceChat Classes VoiceChatInfo Feeds to the UI information on the voice chat service. VoiceChatManager VoiceChatServiceEventArgs Event args for voice chat services. VoiceChatSettings Settings object for the voice chat service. VoiceChatUserData Components that stores data about a voice chat user. VoiceUserInfo Feeds the UI information about a single voice chat user. Interfaces IVoiceChatService Defines a voice chat service that can be used by VR Builder. IVoiceChatUser Defines a user in a IVoiceChatService . IVoiceChatUserData Stores voice chat data for a specific user. Enums IVoiceChatService.VoiceChatServiceStatus Possible statuses of the voice chat service."
  },
  "api/VRBuilder.Netcode.VoiceChat.IVoiceChatService.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.IVoiceChatService.html",
    "title": "Interface IVoiceChatService | VR Builder Documentation",
    "keywords": "Interface IVoiceChatService Defines a voice chat service that can be used by VR Builder. Namespace : VRBuilder.Netcode.VoiceChat Assembly : VRBuilder.Netcode.dll Syntax public interface IVoiceChatService Properties | Improve this Doc View Source EditorDisplayName Display name of the service in editor settings. Declaration string EditorDisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source InputDevice Name of the input device currently in use by the service. Declaration string InputDevice { get; } Property Value Type Description System.String | Improve this Doc View Source IsPositionalAudio True if the voice channel supports positional audio. Declaration bool IsPositionalAudio { get; } Property Value Type Description System.Boolean | Improve this Doc View Source OutputDevice Name of the output device currently in use by the service. Declaration string OutputDevice { get; } Property Value Type Description System.String | Improve this Doc View Source Status Current status of the voice chat service. Declaration IVoiceChatService.VoiceChatServiceStatus Status { get; } Property Value Type Description IVoiceChatService.VoiceChatServiceStatus | Improve this Doc View Source Users Lists all users connected to the service. Declaration IEnumerable<IVoiceChatUser> Users { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IVoiceChatUser > Methods | Improve this Doc View Source MuteLocalUser(Boolean) Globally mutes or unmutes the specified user. Declaration void MuteLocalUser(bool isMuted) Parameters Type Name Description System.Boolean isMuted | Improve this Doc View Source SetPosition(Vector3, Vector3, Vector3, Vector3) Set the position of the user in the voice chat service, so that it can be used by positional audio. Declaration void SetPosition(Vector3 speaker, Vector3 listener, Vector3 listenerForward, Vector3 listenerUp) Parameters Type Name Description Vector3 speaker Vector3 listener Vector3 listenerForward Vector3 listenerUp | Improve this Doc View Source Setup() Performs service-specific setup at runtime. This is called before the Network Manager is initialized and can be used to add network prefabs to its list. Declaration void Setup() | Improve this Doc View Source SignInWithName(String, String) Sign in to the service anonymously. Declaration void SignInWithName(string displayName, string channelName) Parameters Type Name Description System.String displayName System.String channelName | Improve this Doc View Source StartDedicatedServer(String) Starts the service on a dedicated server, without connecting a user. Declaration void StartDedicatedServer(string channelName) Parameters Type Name Description System.String channelName Events | Improve this Doc View Source BeginSpeaking Called when a user begins speaking. Declaration event EventHandler<VoiceChatServiceEventArgs> BeginSpeaking Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > | Improve this Doc View Source ConnectionStatusChanged Called when the connection status changes. Declaration event EventHandler ConnectionStatusChanged Event Type Type Description System.EventHandler | Improve this Doc View Source EndSpeaking Called when a user stops speaking. Declaration event EventHandler<VoiceChatServiceEventArgs> EndSpeaking Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > | Improve this Doc View Source LocalUserMuted Called when a user is muted. Declaration event EventHandler LocalUserMuted Event Type Type Description System.EventHandler | Improve this Doc View Source LocalUserUnmuted Called when a user is unmuted. Declaration event EventHandler LocalUserUnmuted Event Type Type Description System.EventHandler | Improve this Doc View Source ServiceInitialized Called when the service is initialized and can therefore be accessed. Declaration event EventHandler ServiceInitialized Event Type Type Description System.EventHandler | Improve this Doc View Source UserJoined Called when a user joins the voice channel. Declaration event EventHandler<VoiceChatServiceEventArgs> UserJoined Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > | Improve this Doc View Source UserLeft Called when a user leaves the voice channel. Declaration event EventHandler<VoiceChatServiceEventArgs> UserLeft Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs >"
  },
  "api/VRBuilder.Netcode.VoiceChat.IVoiceChatService.VoiceChatServiceStatus.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.IVoiceChatService.VoiceChatServiceStatus.html",
    "title": "Enum IVoiceChatService.VoiceChatServiceStatus | VR Builder Documentation",
    "keywords": "Enum IVoiceChatService.VoiceChatServiceStatus Possible statuses of the voice chat service. Namespace : VRBuilder.Netcode.VoiceChat Assembly : VRBuilder.Netcode.dll Syntax public enum VoiceChatServiceStatus Fields Name Description Connected Connecting Disconnected Disconnecting Error Inactive"
  },
  "api/VRBuilder.Netcode.VoiceChat.IVoiceChatUser.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.IVoiceChatUser.html",
    "title": "Interface IVoiceChatUser | VR Builder Documentation",
    "keywords": "Interface IVoiceChatUser Defines a user in a IVoiceChatService . Namespace : VRBuilder.Netcode.VoiceChat Assembly : VRBuilder.Netcode.dll Syntax public interface IVoiceChatUser Properties | Improve this Doc View Source AudioLevel Normalized speaking level of the user. Declaration double AudioLevel { get; } Property Value Type Description System.Double | Improve this Doc View Source IsLocalUser True if the user is the local user. Declaration bool IsLocalUser { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSpeaking True if the user is speaking. Declaration bool IsSpeaking { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Name of the user. Declaration string Name { get; } Property Value Type Description System.String | Improve this Doc View Source UniqueId Unique identifier for the user. Declaration string UniqueId { get; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Netcode.VoiceChat.IVoiceChatUserData.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.IVoiceChatUserData.html",
    "title": "Interface IVoiceChatUserData | VR Builder Documentation",
    "keywords": "Interface IVoiceChatUserData Stores voice chat data for a specific user. Namespace : VRBuilder.Netcode.VoiceChat Assembly : VRBuilder.Netcode.dll Syntax public interface IVoiceChatUserData Properties | Improve this Doc View Source IsConnected True if the user is currently connected to the voice chat service. Declaration bool IsConnected { get; } Property Value Type Description System.Boolean | Improve this Doc View Source User Voice chat user that is being tracked. Declaration IVoiceChatUser User { get; } Property Value Type Description IVoiceChatUser"
  },
  "api/VRBuilder.Netcode.VoiceChat.UI.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.UI.html",
    "title": "Namespace VRBuilder.Netcode.VoiceChat.UI | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.VoiceChat.UI Classes VoiceChatStatusIndicator"
  },
  "api/VRBuilder.Netcode.VoiceChat.UI.VoiceChatStatusIndicator.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.UI.VoiceChatStatusIndicator.html",
    "title": "Class VoiceChatStatusIndicator | VR Builder Documentation",
    "keywords": "Class VoiceChatStatusIndicator Inheritance System.Object VoiceChatStatusIndicator Namespace : VRBuilder.Netcode.VoiceChat.UI Assembly : VRBuilder.Netcode.dll Syntax public class VoiceChatStatusIndicator : MonoBehaviour"
  },
  "api/VRBuilder.Netcode.VoiceChat.Vivox.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.Vivox.html",
    "title": "Namespace VRBuilder.Netcode.VoiceChat.Vivox | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.VoiceChat.Vivox Classes VivoxVoiceChatService Voice chat service implementation for Vivox for Unity. VivoxVoiceChatUser User object for the Vivox voice chat service."
  },
  "api/VRBuilder.Netcode.VoiceChat.Vivox.VivoxVoiceChatService.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.Vivox.VivoxVoiceChatService.html",
    "title": "Class VivoxVoiceChatService | VR Builder Documentation",
    "keywords": "Class VivoxVoiceChatService Voice chat service implementation for Vivox for Unity. Inheritance System.Object VivoxVoiceChatService Implements IVoiceChatService Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Netcode.VoiceChat.Vivox Assembly : VRBuilder.Vivox.dll Syntax public class VivoxVoiceChatService : IVoiceChatService Constructors | Improve this Doc View Source VivoxVoiceChatService() Declaration public VivoxVoiceChatService() | Improve this Doc View Source VivoxVoiceChatService(Boolean) Declaration public VivoxVoiceChatService(bool isPositionalAudio = false) Parameters Type Name Description System.Boolean isPositionalAudio Properties | Improve this Doc View Source EditorDisplayName Declaration public string EditorDisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source InputDevice Declaration public string InputDevice { get; } Property Value Type Description System.String | Improve this Doc View Source IsPositionalAudio Declaration public bool IsPositionalAudio { get; } Property Value Type Description System.Boolean | Improve this Doc View Source OutputDevice Declaration public string OutputDevice { get; } Property Value Type Description System.String | Improve this Doc View Source Status Declaration public IVoiceChatService.VoiceChatServiceStatus Status { get; } Property Value Type Description IVoiceChatService.VoiceChatServiceStatus | Improve this Doc View Source Users Declaration public IEnumerable<IVoiceChatUser> Users { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IVoiceChatUser > Methods | Improve this Doc View Source JoinChannel() Declaration public void JoinChannel() | Improve this Doc View Source MuteLocalUser(Boolean) Declaration public void MuteLocalUser(bool isMuted) Parameters Type Name Description System.Boolean isMuted | Improve this Doc View Source SetPosition(Vector3, Vector3, Vector3, Vector3) Declaration public void SetPosition(Vector3 speaker, Vector3 listener, Vector3 listenerForward, Vector3 listenerUp) Parameters Type Name Description Vector3 speaker Vector3 listener Vector3 listenerForward Vector3 listenerUp | Improve this Doc View Source Setup() Declaration public void Setup() | Improve this Doc View Source SignInWithName(String, String) Declaration public async void SignInWithName(string displayName, string channelName) Parameters Type Name Description System.String displayName System.String channelName | Improve this Doc View Source StartDedicatedServer(String) Declaration public void StartDedicatedServer(string channelName) Parameters Type Name Description System.String channelName Events | Improve this Doc View Source BeginSpeaking Declaration public event EventHandler<VoiceChatServiceEventArgs> BeginSpeaking Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > | Improve this Doc View Source ConnectionStatusChanged Declaration public event EventHandler ConnectionStatusChanged Event Type Type Description System.EventHandler | Improve this Doc View Source EndSpeaking Declaration public event EventHandler<VoiceChatServiceEventArgs> EndSpeaking Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > | Improve this Doc View Source LocalUserMuted Declaration public event EventHandler LocalUserMuted Event Type Type Description System.EventHandler | Improve this Doc View Source LocalUserUnmuted Declaration public event EventHandler LocalUserUnmuted Event Type Type Description System.EventHandler | Improve this Doc View Source ServiceInitialized Declaration public event EventHandler ServiceInitialized Event Type Type Description System.EventHandler | Improve this Doc View Source UserJoined Declaration public event EventHandler<VoiceChatServiceEventArgs> UserJoined Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > | Improve this Doc View Source UserLeft Declaration public event EventHandler<VoiceChatServiceEventArgs> UserLeft Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > Implements IVoiceChatService"
  },
  "api/VRBuilder.Netcode.VoiceChat.Vivox.VivoxVoiceChatUser.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.Vivox.VivoxVoiceChatUser.html",
    "title": "Class VivoxVoiceChatUser | VR Builder Documentation",
    "keywords": "Class VivoxVoiceChatUser User object for the Vivox voice chat service. Inheritance System.Object VivoxVoiceChatUser Implements IVoiceChatUser Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Netcode.VoiceChat.Vivox Assembly : VRBuilder.Vivox.dll Syntax public class VivoxVoiceChatUser : IVoiceChatUser Constructors | Improve this Doc View Source VivoxVoiceChatUser(IParticipant) Declaration public VivoxVoiceChatUser(IParticipant participant) Parameters Type Name Description VivoxUnity.IParticipant participant Properties | Improve this Doc View Source AudioLevel Declaration public double AudioLevel { get; } Property Value Type Description System.Double | Improve this Doc View Source IsLocalUser Declaration public bool IsLocalUser { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSpeaking Declaration public bool IsSpeaking { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source UniqueId Declaration public string UniqueId { get; } Property Value Type Description System.String Implements IVoiceChatUser"
  },
  "api/VRBuilder.Netcode.VoiceChat.VoiceChatInfo.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.VoiceChatInfo.html",
    "title": "Class VoiceChatInfo | VR Builder Documentation",
    "keywords": "Class VoiceChatInfo Feeds to the UI information on the voice chat service. Inheritance System.Object Unity.Netcode.NetworkBehaviour VoiceChatInfo Inherited Members Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.VoiceChat Assembly : VRBuilder.Netcode.dll Syntax public class VoiceChatInfo : NetworkBehaviour"
  },
  "api/VRBuilder.Netcode.VoiceChat.VoiceChatManager.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.VoiceChatManager.html",
    "title": "Class VoiceChatManager | VR Builder Documentation",
    "keywords": "Class VoiceChatManager Inheritance System.Object Unity.Netcode.NetworkBehaviour VoiceChatManager Inherited Members Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.VoiceChat Assembly : VRBuilder.Netcode.dll Syntax public class VoiceChatManager : NetworkBehaviour Properties | Improve this Doc View Source Instance Declaration public static VoiceChatManager Instance { get; } Property Value Type Description VoiceChatManager | Improve this Doc View Source VoiceChatService Currently used voice chat service. Declaration public IVoiceChatService VoiceChatService { get; } Property Value Type Description IVoiceChatService | Improve this Doc View Source VoiceChatServiceCreated Called when the voice chat service has been instantiated. Declaration public UnityEvent VoiceChatServiceCreated { get; } Property Value Type Description UnityEvent | Improve this Doc View Source VoiceChatServiceInitialized Called when the voice chat service has been initialized. Declaration public UnityEvent VoiceChatServiceInitialized { get; } Property Value Type Description UnityEvent Methods | Improve this Doc View Source IsUserMuted(String) True if the user with the given unique id is muted on their client. Declaration public bool IsUserMuted(string userUniqueId) Parameters Type Name Description System.String userUniqueId Returns Type Description System.Boolean | Improve this Doc View Source MuteUser(String, Boolean) Attempts to mute the user with the provided unique id. Declaration public void MuteUser(string userUniqueId, bool isMuted) Parameters Type Name Description System.String userUniqueId System.Boolean isMuted | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn()"
  },
  "api/VRBuilder.Netcode.VoiceChat.VoiceChatServiceEventArgs.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.VoiceChatServiceEventArgs.html",
    "title": "Class VoiceChatServiceEventArgs | VR Builder Documentation",
    "keywords": "Class VoiceChatServiceEventArgs Event args for voice chat services. Inheritance System.Object System.EventArgs VoiceChatServiceEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Netcode.VoiceChat Assembly : VRBuilder.Netcode.dll Syntax public class VoiceChatServiceEventArgs : EventArgs Constructors | Improve this Doc View Source VoiceChatServiceEventArgs(IVoiceChatUser) Declaration public VoiceChatServiceEventArgs(IVoiceChatUser user) Parameters Type Name Description IVoiceChatUser user Fields | Improve this Doc View Source User Declaration public readonly IVoiceChatUser User Field Value Type Description IVoiceChatUser"
  },
  "api/VRBuilder.Netcode.VoiceChat.VoiceChatSettings.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.VoiceChatSettings.html",
    "title": "Class VoiceChatSettings | VR Builder Documentation",
    "keywords": "Class VoiceChatSettings Settings object for the voice chat service. Inheritance System.Object SettingsObject < VoiceChatSettings > VoiceChatSettings Inherited Members SettingsObject<VoiceChatSettings>.Instance SettingsObject<VoiceChatSettings>.Save() Namespace : VRBuilder.Netcode.VoiceChat Assembly : VRBuilder.Netcode.dll Syntax public class VoiceChatSettings : SettingsObject<VoiceChatSettings> Properties | Improve this Doc View Source PositionUpdateFrequency Frequency of position updates for positional audio. Declaration public float PositionUpdateFrequency { get; } Property Value Type Description System.Single | Improve this Doc View Source VoiceChatServiceTypeName Name of the selected voice chat service class. Declaration public string VoiceChatServiceTypeName { get; set; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Netcode.VoiceChat.VoiceChatUserData.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.VoiceChatUserData.html",
    "title": "Class VoiceChatUserData | VR Builder Documentation",
    "keywords": "Class VoiceChatUserData Components that stores data about a voice chat user. Inheritance System.Object Unity.Netcode.NetworkBehaviour VoiceChatUserData Implements IVoiceChatUserData Inherited Members Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.VoiceChat Assembly : VRBuilder.Netcode.dll Syntax public class VoiceChatUserData : NetworkBehaviour, IVoiceChatUserData Properties | Improve this Doc View Source IsConnected Declaration public bool IsConnected { get; } Property Value Type Description System.Boolean | Improve this Doc View Source User Declaration public IVoiceChatUser User { get; } Property Value Type Description IVoiceChatUser Implements IVoiceChatUserData"
  },
  "api/VRBuilder.Netcode.VoiceChat.VoiceUserInfo.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.VoiceUserInfo.html",
    "title": "Class VoiceUserInfo | VR Builder Documentation",
    "keywords": "Class VoiceUserInfo Feeds the UI information about a single voice chat user. Inheritance System.Object VoiceUserInfo Namespace : VRBuilder.Netcode.VoiceChat Assembly : VRBuilder.Netcode.dll Syntax public class VoiceUserInfo : MonoBehaviour Properties | Improve this Doc View Source User Declaration public IVoiceChatUser User { get; } Property Value Type Description IVoiceChatUser Methods | Improve this Doc View Source InitializeUser(IVoiceChatUser) Initialize the user to be tracked. Declaration public void InitializeUser(IVoiceChatUser user) Parameters Type Name Description IVoiceChatUser user | Improve this Doc View Source VisualizeMuted(Boolean) Sets the muted toggle to the desired value, without raising events. Declaration public void VisualizeMuted(bool isMuted) Parameters Type Name Description System.Boolean isMuted"
  },
  "api/VRBuilder.Netcode.XRI.html": {
    "href": "api/VRBuilder.Netcode.XRI.html",
    "title": "Namespace VRBuilder.Netcode.XRI | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.XRI Classes InteractorNetcode Network code for interactors. SnapZoneNetcode Network code syncing objects snapped to snap zones. XRINetworkRigConfigurator Configures the parented XRI rig in host/client configuration."
  },
  "api/VRBuilder.Netcode.XRI.InteractorNetcode.html": {
    "href": "api/VRBuilder.Netcode.XRI.InteractorNetcode.html",
    "title": "Class InteractorNetcode | VR Builder Documentation",
    "keywords": "Class InteractorNetcode Network code for interactors. Inheritance System.Object Unity.Netcode.NetworkBehaviour InteractorNetcode Inherited Members Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.XRI Assembly : VRBuilder.Netcode.dll Syntax public class InteractorNetcode : NetworkBehaviour Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() | Improve this Doc View Source RequestOwnershipServerRpc(UInt64, NetworkObjectReference) Declaration [ServerRpc] public void RequestOwnershipServerRpc(ulong ownerID, NetworkObjectReference selectedObjectReference) Parameters Type Name Description System.UInt64 ownerID Unity.Netcode.NetworkObjectReference selectedObjectReference"
  },
  "api/VRBuilder.Netcode.XRI.SnapZoneNetcode.html": {
    "href": "api/VRBuilder.Netcode.XRI.SnapZoneNetcode.html",
    "title": "Class SnapZoneNetcode | VR Builder Documentation",
    "keywords": "Class SnapZoneNetcode Network code syncing objects snapped to snap zones. Inheritance System.Object Unity.Netcode.NetworkBehaviour SnapZoneNetcode Inherited Members Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.XRI Assembly : VRBuilder.Netcode.dll Syntax public class SnapZoneNetcode : NetworkBehaviour Properties | Improve this Doc View Source SnappedObject Object snapped to this snap zone. Declaration public ISnappableProperty SnappedObject { get; } Property Value Type Description ISnappableProperty Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn()"
  },
  "api/VRBuilder.Netcode.XRI.XRINetworkRigConfigurator.html": {
    "href": "api/VRBuilder.Netcode.XRI.XRINetworkRigConfigurator.html",
    "title": "Class XRINetworkRigConfigurator | VR Builder Documentation",
    "keywords": "Class XRINetworkRigConfigurator Configures the parented XRI rig in host/client configuration. Inheritance System.Object Unity.Netcode.NetworkBehaviour XRINetworkRigConfigurator Inherited Members Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Unity.Netcode.NetworkBehaviour.OnDestroy() Namespace : VRBuilder.Netcode.XRI Assembly : VRBuilder.Netcode.dll Syntax public class XRINetworkRigConfigurator : NetworkBehaviour Methods | Improve this Doc View Source OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn()"
  },
  "api/VRBuilder.ProcessController.AttachToUserView.html": {
    "href": "api/VRBuilder.ProcessController.AttachToUserView.html",
    "title": "Class AttachToUserView | VR Builder Documentation",
    "keywords": "Class AttachToUserView Puts the parent GameObject to the same position and rotation of the user camera. Inheritance System.Object AttachToUserView Namespace : VRBuilder.ProcessController Assembly : VRBuilder.Core.dll Syntax public class AttachToUserView : MonoBehaviour Fields | Improve this Doc View Source font Declaration protected Font font Field Value Type Description Font | Improve this Doc View Source fontSize Declaration protected int fontSize Field Value Type Description System.Int32 Methods | Improve this Doc View Source LateUpdate() Declaration protected void LateUpdate() | Improve this Doc View Source Start() Declaration protected void Start()"
  },
  "api/VRBuilder.ProcessController.BasicProcessLoader.html": {
    "href": "api/VRBuilder.ProcessController.BasicProcessLoader.html",
    "title": "Class BasicProcessLoader | VR Builder Documentation",
    "keywords": "Class BasicProcessLoader Loads and starts the process currently selected in the 'PROCESS_CONFIGURATION' gameObject. Inheritance System.Object BasicProcessLoader Implements IConfigurableProcessController Namespace : VRBuilder.ProcessController Assembly : VRBuilder.Core.dll Syntax public class BasicProcessLoader : MonoBehaviour, IConfigurableProcessController Properties | Improve this Doc View Source AutoStartProcess Declaration public bool AutoStartProcess { get; set; } Property Value Type Description System.Boolean Implements IConfigurableProcessController"
  },
  "api/VRBuilder.ProcessController.html": {
    "href": "api/VRBuilder.ProcessController.html",
    "title": "Namespace VRBuilder.ProcessController | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.ProcessController Classes AttachToUserView Puts the parent GameObject to the same position and rotation of the user camera. BasicProcessLoader Loads and starts the process currently selected in the 'PROCESS_CONFIGURATION' gameObject. Interfaces IConfigurableProcessController Interface for a process controller that can be configured in the setup object."
  },
  "api/VRBuilder.ProcessController.IConfigurableProcessController.html": {
    "href": "api/VRBuilder.ProcessController.IConfigurableProcessController.html",
    "title": "Interface IConfigurableProcessController | VR Builder Documentation",
    "keywords": "Interface IConfigurableProcessController Interface for a process controller that can be configured in the setup object. Namespace : VRBuilder.ProcessController Assembly : VRBuilder.Core.dll Syntax public interface IConfigurableProcessController Properties | Improve this Doc View Source AutoStartProcess If true, the process will start automatically as soon as the process controller is loaded. Declaration bool AutoStartProcess { get; set; } Property Value Type Description System.Boolean"
  },
  "api/VRBuilder.ProcessMenu.BaseProcessControllerMenu.html": {
    "href": "api/VRBuilder.ProcessMenu.BaseProcessControllerMenu.html",
    "title": "Class BaseProcessControllerMenu | VR Builder Documentation",
    "keywords": "Class BaseProcessControllerMenu Base class for the course controller menu. Inheritance System.Object BaseProcessControllerMenu DesktopProcessMenu StandaloneProcessMenu Namespace : VRBuilder.ProcessMenu Assembly : VRBuilder.ProcessMenu.dll Syntax public abstract class BaseProcessControllerMenu : MonoBehaviour"
  },
  "api/VRBuilder.ProcessMenu.DesktopProcessMenu.html": {
    "href": "api/VRBuilder.ProcessMenu.DesktopProcessMenu.html",
    "title": "Class DesktopProcessMenu | VR Builder Documentation",
    "keywords": "Class DesktopProcessMenu Controller class for an example of a custom overlay. Inheritance System.Object BaseProcessControllerMenu DesktopProcessMenu Namespace : VRBuilder.ProcessMenu Assembly : VRBuilder.ProcessMenu.dll Syntax public class DesktopProcessMenu : BaseProcessControllerMenu Fields | Improve this Doc View Source selectedLanguage Declaration protected string selectedLanguage Field Value Type Description System.String Methods | Improve this Doc View Source Awake() Declaration protected virtual void Awake() | Improve this Doc View Source OnDisable() Declaration protected virtual void OnDisable() | Improve this Doc View Source OnProcessFinished(Object, ProcessEventArgs) Is called when the process finished event is triggered. Declaration protected virtual void OnProcessFinished(object sender, ProcessEventArgs eventArgs) Parameters Type Name Description System.Object sender Sender of the event. ProcessEventArgs eventArgs Event arguments. | Improve this Doc View Source OnProcessStarted(Object, ProcessEventArgs) Is called when the process started event is triggered. Declaration protected virtual void OnProcessStarted(object sender, ProcessEventArgs eventArgs) Parameters Type Name Description System.Object sender Sender of the event. ProcessEventArgs eventArgs Event arguments. | Improve this Doc View Source SetupMenu(Object, ProcessEventArgs) Declaration protected virtual void SetupMenu(object sender, ProcessEventArgs e) Parameters Type Name Description System.Object sender ProcessEventArgs e | Improve this Doc View Source SubscribeToControllerEvents() Subscribes to events of the process controller. Declaration protected virtual void SubscribeToControllerEvents() | Improve this Doc View Source SubscribeToProcessEvents() Subscribes to process events. Declaration protected virtual void SubscribeToProcessEvents() | Improve this Doc View Source UnsubscribeFromControllerEvents() Unsubscribes from events of the process controller. Declaration protected virtual void UnsubscribeFromControllerEvents() | Improve this Doc View Source UnsubscribeFromProcessEvents() Unsubscribes from process events. Declaration protected virtual void UnsubscribeFromProcessEvents() | Improve this Doc View Source Update() Declaration protected virtual void Update()"
  },
  "api/VRBuilder.ProcessMenu.html": {
    "href": "api/VRBuilder.ProcessMenu.html",
    "title": "Namespace VRBuilder.ProcessMenu | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.ProcessMenu Classes BaseProcessControllerMenu Base class for the course controller menu. DesktopProcessMenu Controller class for an example of a custom overlay. StandaloneMenuHandler Shows and hides the StandaloneProcessController prefab. StandaloneProcessMenu Standalone controller class for an example of a custom overlay with audio. VR_Dropdown Extension of the TextMeshPro Dropdown that prevents the dropdown canvas from being drawn in front of everything."
  },
  "api/VRBuilder.ProcessMenu.StandaloneMenuHandler.html": {
    "href": "api/VRBuilder.ProcessMenu.StandaloneMenuHandler.html",
    "title": "Class StandaloneMenuHandler | VR Builder Documentation",
    "keywords": "Class StandaloneMenuHandler Shows and hides the StandaloneProcessController prefab. Inheritance System.Object StandaloneMenuHandler Namespace : VRBuilder.ProcessMenu Assembly : VRBuilder.ProcessMenu.dll Syntax public class StandaloneMenuHandler : MonoBehaviour Fields | Improve this Doc View Source appearanceDistance Declaration protected float appearanceDistance Field Value Type Description System.Single | Improve this Doc View Source menuHiddenOnStart Declaration protected bool menuHiddenOnStart Field Value Type Description System.Boolean | Improve this Doc View Source toggleMenuAction Declaration protected InputAction toggleMenuAction Field Value Type Description UnityEngine.InputSystem.InputAction"
  },
  "api/VRBuilder.ProcessMenu.StandaloneProcessMenu.html": {
    "href": "api/VRBuilder.ProcessMenu.StandaloneProcessMenu.html",
    "title": "Class StandaloneProcessMenu | VR Builder Documentation",
    "keywords": "Class StandaloneProcessMenu Standalone controller class for an example of a custom overlay with audio. Inheritance System.Object BaseProcessControllerMenu StandaloneProcessMenu Namespace : VRBuilder.ProcessMenu Assembly : VRBuilder.ProcessMenu.dll Syntax public class StandaloneProcessMenu : BaseProcessControllerMenu Methods | Improve this Doc View Source OnProcessFinished(Object, ProcessEventArgs) Is called when the process finished event is triggered. Declaration protected virtual void OnProcessFinished(object sender, ProcessEventArgs eventArgs) Parameters Type Name Description System.Object sender Sender of the event. ProcessEventArgs eventArgs Event arguments. | Improve this Doc View Source OnProcessStarted(Object, ProcessEventArgs) Is called when the process started event is triggered. Declaration protected virtual void OnProcessStarted(object sender, ProcessEventArgs eventArgs) Parameters Type Name Description System.Object sender Sender of the event. ProcessEventArgs eventArgs Event arguments. | Improve this Doc View Source SubscribeToProcessEvents() Subscribes to process events. Declaration protected virtual void SubscribeToProcessEvents() | Improve this Doc View Source UnsubscribeFromProcessEvents() Unsubscribes from process events. Declaration protected virtual void UnsubscribeFromProcessEvents()"
  },
  "api/VRBuilder.ProcessMenu.VR_Dropdown.html": {
    "href": "api/VRBuilder.ProcessMenu.VR_Dropdown.html",
    "title": "Class VR_Dropdown | VR Builder Documentation",
    "keywords": "Class VR_Dropdown Extension of the TextMeshPro Dropdown that prevents the dropdown canvas from being drawn in front of everything. Inheritance System.Object UnityEngine.EventSystems.UIBehaviour UnityEngine.UI.Selectable TMPro.TMP_Dropdown VR_Dropdown Implements UnityEngine.EventSystems.IMoveHandler UnityEngine.EventSystems.IPointerDownHandler UnityEngine.EventSystems.IPointerUpHandler UnityEngine.EventSystems.IPointerEnterHandler UnityEngine.EventSystems.IPointerExitHandler UnityEngine.EventSystems.ISelectHandler UnityEngine.EventSystems.IDeselectHandler UnityEngine.EventSystems.IPointerClickHandler UnityEngine.EventSystems.ISubmitHandler UnityEngine.EventSystems.ICancelHandler UnityEngine.EventSystems.IEventSystemHandler Inherited Members TMPro.TMP_Dropdown.template TMPro.TMP_Dropdown.captionText TMPro.TMP_Dropdown.captionImage TMPro.TMP_Dropdown.placeholder TMPro.TMP_Dropdown.itemText TMPro.TMP_Dropdown.itemImage TMPro.TMP_Dropdown.options TMPro.TMP_Dropdown.onValueChanged TMPro.TMP_Dropdown.alphaFadeSpeed TMPro.TMP_Dropdown.value TMPro.TMP_Dropdown.SetValueWithoutNotify(System.Int32) TMPro.TMP_Dropdown.IsExpanded TMPro.TMP_Dropdown.Awake() TMPro.TMP_Dropdown.Start() TMPro.TMP_Dropdown.OnDisable() TMPro.TMP_Dropdown.RefreshShownValue() TMPro.TMP_Dropdown.AddOptions(System.Collections.Generic.List<TMPro.TMP_Dropdown.OptionData>) TMPro.TMP_Dropdown.AddOptions(System.Collections.Generic.List<System.String>) TMPro.TMP_Dropdown.AddOptions(System.Collections.Generic.List<Sprite>) TMPro.TMP_Dropdown.ClearOptions() TMPro.TMP_Dropdown.Show() TMPro.TMP_Dropdown.CreateBlocker(Canvas) TMPro.TMP_Dropdown.DestroyBlocker(GameObject) TMPro.TMP_Dropdown.CreateDropdownList(GameObject) TMPro.TMP_Dropdown.DestroyDropdownList(GameObject) TMPro.TMP_Dropdown.CreateItem(TMPro.TMP_Dropdown.DropdownItem) TMPro.TMP_Dropdown.DestroyItem(TMPro.TMP_Dropdown.DropdownItem) TMPro.TMP_Dropdown.Hide() UnityEngine.UI.Selectable.s_Selectables UnityEngine.UI.Selectable.s_SelectableCount UnityEngine.UI.Selectable.m_CurrentIndex UnityEngine.UI.Selectable.AllSelectablesNoAlloc(UnityEngine.UI.Selectable[]) UnityEngine.UI.Selectable.OnCanvasGroupChanged() UnityEngine.UI.Selectable.IsInteractable() UnityEngine.UI.Selectable.OnDidApplyAnimationProperties() UnityEngine.UI.Selectable.OnEnable() UnityEngine.UI.Selectable.OnTransformParentChanged() UnityEngine.UI.Selectable.OnValidate() UnityEngine.UI.Selectable.Reset() UnityEngine.UI.Selectable.InstantClearState() UnityEngine.UI.Selectable.DoStateTransition(UnityEngine.UI.Selectable.SelectionState, System.Boolean) UnityEngine.UI.Selectable.FindSelectable(UnityEngine.Vector3) UnityEngine.UI.Selectable.FindSelectableOnLeft() UnityEngine.UI.Selectable.FindSelectableOnRight() UnityEngine.UI.Selectable.FindSelectableOnUp() UnityEngine.UI.Selectable.FindSelectableOnDown() UnityEngine.UI.Selectable.OnMove(UnityEngine.EventSystems.AxisEventData) UnityEngine.UI.Selectable.IsHighlighted() UnityEngine.UI.Selectable.IsPressed() UnityEngine.UI.Selectable.OnPointerDown(UnityEngine.EventSystems.PointerEventData) UnityEngine.UI.Selectable.OnPointerUp(UnityEngine.EventSystems.PointerEventData) UnityEngine.UI.Selectable.OnPointerEnter(UnityEngine.EventSystems.PointerEventData) UnityEngine.UI.Selectable.OnPointerExit(UnityEngine.EventSystems.PointerEventData) UnityEngine.UI.Selectable.OnSelect(UnityEngine.EventSystems.BaseEventData) UnityEngine.UI.Selectable.OnDeselect(UnityEngine.EventSystems.BaseEventData) UnityEngine.UI.Selectable.Select() UnityEngine.UI.Selectable.allSelectablesArray UnityEngine.UI.Selectable.allSelectableCount UnityEngine.UI.Selectable.allSelectables UnityEngine.UI.Selectable.navigation UnityEngine.UI.Selectable.transition UnityEngine.UI.Selectable.colors UnityEngine.UI.Selectable.spriteState UnityEngine.UI.Selectable.animationTriggers UnityEngine.UI.Selectable.targetGraphic UnityEngine.UI.Selectable.interactable UnityEngine.UI.Selectable.image UnityEngine.UI.Selectable.animator UnityEngine.UI.Selectable.currentSelectionState UnityEngine.EventSystems.UIBehaviour.OnDestroy() UnityEngine.EventSystems.UIBehaviour.IsActive() UnityEngine.EventSystems.UIBehaviour.OnRectTransformDimensionsChange() UnityEngine.EventSystems.UIBehaviour.OnBeforeTransformParentChanged() UnityEngine.EventSystems.UIBehaviour.OnCanvasHierarchyChanged() UnityEngine.EventSystems.UIBehaviour.IsDestroyed() Namespace : VRBuilder.ProcessMenu Assembly : VRBuilder.ProcessMenu.dll Syntax public class VR_Dropdown : TMP_Dropdown, IMoveHandler, IPointerDownHandler, IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler, ISelectHandler, IDeselectHandler, IPointerClickHandler, ISubmitHandler, ICancelHandler, IEventSystemHandler Methods | Improve this Doc View Source OnCancel(BaseEventData) Declaration public override void OnCancel(BaseEventData eventData) Parameters Type Name Description UnityEngine.EventSystems.BaseEventData eventData Overrides TMPro.TMP_Dropdown.OnCancel(UnityEngine.EventSystems.BaseEventData) | Improve this Doc View Source OnPointerClick(PointerEventData) Declaration public override void OnPointerClick(PointerEventData eventData) Parameters Type Name Description UnityEngine.EventSystems.PointerEventData eventData Overrides TMPro.TMP_Dropdown.OnPointerClick(UnityEngine.EventSystems.PointerEventData) | Improve this Doc View Source OnSubmit(BaseEventData) Declaration public override void OnSubmit(BaseEventData eventData) Parameters Type Name Description UnityEngine.EventSystems.BaseEventData eventData Overrides TMPro.TMP_Dropdown.OnSubmit(UnityEngine.EventSystems.BaseEventData) Implements UnityEngine.EventSystems.IMoveHandler UnityEngine.EventSystems.IPointerDownHandler UnityEngine.EventSystems.IPointerUpHandler UnityEngine.EventSystems.IPointerEnterHandler UnityEngine.EventSystems.IPointerExitHandler UnityEngine.EventSystems.ISelectHandler UnityEngine.EventSystems.IDeselectHandler UnityEngine.EventSystems.IPointerClickHandler UnityEngine.EventSystems.ISubmitHandler UnityEngine.EventSystems.ICancelHandler UnityEngine.EventSystems.IEventSystemHandler"
  },
  "api/VRBuilder.Randomization.Behaviors.html": {
    "href": "api/VRBuilder.Randomization.Behaviors.html",
    "title": "Namespace VRBuilder.Randomization.Behaviors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Randomization.Behaviors Classes SelectRandomTransitionBehavior A behavior that completes a random RandomlySelectedCondition on the same step. SelectRandomTransitionBehavior.EntityData The SelectRandomTransitionBehavior behavior data. SetRandomBooleanBehavior A behavior that sets a boolean data property to a random value. SetRandomBooleanBehavior.EntityData The SetRandomBooleanBehavior behavior data. SetRandomNumberBehavior A behavior that sets a boolean data property to a random value. SetRandomNumberBehavior.EntityData The SetRandomNumberBehavior behavior data."
  },
  "api/VRBuilder.Randomization.Behaviors.SelectRandomTransitionBehavior.EntityData.html": {
    "href": "api/VRBuilder.Randomization.Behaviors.SelectRandomTransitionBehavior.EntityData.html",
    "title": "Class SelectRandomTransitionBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SelectRandomTransitionBehavior.EntityData The SelectRandomTransitionBehavior behavior data. Inheritance System.Object SelectRandomTransitionBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Randomization.Behaviors Assembly : VRBuilder.Randomization.dll Syntax [DisplayName(\"Select Random Transition\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Randomization.Behaviors.SelectRandomTransitionBehavior.html": {
    "href": "api/VRBuilder.Randomization.Behaviors.SelectRandomTransitionBehavior.html",
    "title": "Class SelectRandomTransitionBehavior | VR Builder Documentation",
    "keywords": "Class SelectRandomTransitionBehavior A behavior that completes a random RandomlySelectedCondition on the same step. Inheritance System.Object Entity < SelectRandomTransitionBehavior.EntityData > Behavior < SelectRandomTransitionBehavior.EntityData > SelectRandomTransitionBehavior Implements IDataOwner < SelectRandomTransitionBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SelectRandomTransitionBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<SelectRandomTransitionBehavior.EntityData>.Clone() Entity<SelectRandomTransitionBehavior.EntityData>.Data Entity<SelectRandomTransitionBehavior.EntityData>.IDataOwner.Data Entity<SelectRandomTransitionBehavior.EntityData>.LifeCycle Entity<SelectRandomTransitionBehavior.EntityData>.Parent Entity<SelectRandomTransitionBehavior.EntityData>.GetActiveProcess() Entity<SelectRandomTransitionBehavior.EntityData>.GetDeactivatingProcess() Entity<SelectRandomTransitionBehavior.EntityData>.GetConfigurator() Entity<SelectRandomTransitionBehavior.EntityData>.Configure(IMode) Entity<SelectRandomTransitionBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Randomization.Behaviors Assembly : VRBuilder.Randomization.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/randomization-add-on\")] public class SelectRandomTransitionBehavior : Behavior<SelectRandomTransitionBehavior.EntityData>, IDataOwner<SelectRandomTransitionBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source SelectRandomTransitionBehavior() Declaration [JsonConstructor] public SelectRandomTransitionBehavior() Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Randomization.Behaviors.SelectRandomTransitionBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Randomization.Behaviors.SetRandomBooleanBehavior.EntityData.html": {
    "href": "api/VRBuilder.Randomization.Behaviors.SetRandomBooleanBehavior.EntityData.html",
    "title": "Class SetRandomBooleanBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetRandomBooleanBehavior.EntityData The SetRandomBooleanBehavior behavior data. Inheritance System.Object SetRandomBooleanBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Randomization.Behaviors Assembly : VRBuilder.Randomization.dll Syntax [DisplayName(\"Set Random Boolean\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source DataProperties Declaration [DataMember] [DisplayName(\"Data Properties\")] public MultipleScenePropertyReference<IDataProperty<bool>> DataProperties { get; set; } Property Value Type Description MultipleScenePropertyReference < IDataProperty < System.Boolean >> | Improve this Doc View Source DataProperty Declaration [DataMember] [Obsolete(\"Use DataProperties instead.\")] [LegacyProperty(\"DataProperties\")] public ScenePropertyReference<IDataProperty<bool>> DataProperty { get; set; } Property Value Type Description ScenePropertyReference < IDataProperty < System.Boolean >> | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source TrueProbability Declaration [DataMember] [DisplayName(\"Probability to be True\")] [UsesSpecificProcessDrawer(\"NormalizedFloatDrawer\")] public float TrueProbability { get; set; } Property Value Type Description System.Single Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Randomization.Behaviors.SetRandomBooleanBehavior.html": {
    "href": "api/VRBuilder.Randomization.Behaviors.SetRandomBooleanBehavior.html",
    "title": "Class SetRandomBooleanBehavior | VR Builder Documentation",
    "keywords": "Class SetRandomBooleanBehavior A behavior that sets a boolean data property to a random value. Inheritance System.Object Entity < SetRandomBooleanBehavior.EntityData > Behavior < SetRandomBooleanBehavior.EntityData > SetRandomBooleanBehavior Implements IDataOwner < SetRandomBooleanBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetRandomBooleanBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<SetRandomBooleanBehavior.EntityData>.Clone() Entity<SetRandomBooleanBehavior.EntityData>.Data Entity<SetRandomBooleanBehavior.EntityData>.IDataOwner.Data Entity<SetRandomBooleanBehavior.EntityData>.LifeCycle Entity<SetRandomBooleanBehavior.EntityData>.Parent Entity<SetRandomBooleanBehavior.EntityData>.GetActiveProcess() Entity<SetRandomBooleanBehavior.EntityData>.GetDeactivatingProcess() Entity<SetRandomBooleanBehavior.EntityData>.GetConfigurator() Entity<SetRandomBooleanBehavior.EntityData>.Configure(IMode) Entity<SetRandomBooleanBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Randomization.Behaviors Assembly : VRBuilder.Randomization.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/randomization-add-on\")] public class SetRandomBooleanBehavior : Behavior<SetRandomBooleanBehavior.EntityData>, IDataOwner<SetRandomBooleanBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source SetRandomBooleanBehavior() Declaration [JsonConstructor] public SetRandomBooleanBehavior() | Improve this Doc View Source SetRandomBooleanBehavior(Guid, Single) Declaration public SetRandomBooleanBehavior(Guid propertyGuid, float trueProbability = 0.5F) Parameters Type Name Description System.Guid propertyGuid System.Single trueProbability | Improve this Doc View Source SetRandomBooleanBehavior(IDataProperty<Boolean>, Single) Declaration public SetRandomBooleanBehavior(IDataProperty<bool> property, float trueProbability) Parameters Type Name Description IDataProperty < System.Boolean > property System.Single trueProbability Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Randomization.Behaviors.SetRandomBooleanBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Randomization.Behaviors.SetRandomNumberBehavior.EntityData.html": {
    "href": "api/VRBuilder.Randomization.Behaviors.SetRandomNumberBehavior.EntityData.html",
    "title": "Class SetRandomNumberBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetRandomNumberBehavior.EntityData The SetRandomNumberBehavior behavior data. Inheritance System.Object SetRandomNumberBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Randomization.Behaviors Assembly : VRBuilder.Randomization.dll Syntax [DisplayName(\"Set Random Number\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source DataProperties Declaration [DataMember] [DisplayName(\"Data Property\")] public MultipleScenePropertyReference<IDataProperty<float>> DataProperties { get; set; } Property Value Type Description MultipleScenePropertyReference < IDataProperty < System.Single >> | Improve this Doc View Source DataProperty Declaration [DataMember] [Obsolete(\"Use DataProperties instead.\")] [LegacyProperty(\"DataProperties\")] public ScenePropertyReference<IDataProperty<float>> DataProperty { get; set; } Property Value Type Description ScenePropertyReference < IDataProperty < System.Single >> | Improve this Doc View Source MaxValue Declaration [DataMember] [DisplayName(\"Max Value\")] public float MaxValue { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source MinValue Declaration [DataMember] [DisplayName(\"Min Value\")] public float MinValue { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source RandomizeInteger Declaration [DataMember] [DisplayName(\"Randomize Integer\")] public bool RandomizeInteger { get; set; } Property Value Type Description System.Boolean Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Randomization.Behaviors.SetRandomNumberBehavior.html": {
    "href": "api/VRBuilder.Randomization.Behaviors.SetRandomNumberBehavior.html",
    "title": "Class SetRandomNumberBehavior | VR Builder Documentation",
    "keywords": "Class SetRandomNumberBehavior A behavior that sets a boolean data property to a random value. Inheritance System.Object Entity < SetRandomNumberBehavior.EntityData > Behavior < SetRandomNumberBehavior.EntityData > SetRandomNumberBehavior Implements IDataOwner < SetRandomNumberBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetRandomNumberBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<SetRandomNumberBehavior.EntityData>.Clone() Entity<SetRandomNumberBehavior.EntityData>.Data Entity<SetRandomNumberBehavior.EntityData>.IDataOwner.Data Entity<SetRandomNumberBehavior.EntityData>.LifeCycle Entity<SetRandomNumberBehavior.EntityData>.Parent Entity<SetRandomNumberBehavior.EntityData>.GetActiveProcess() Entity<SetRandomNumberBehavior.EntityData>.GetDeactivatingProcess() Entity<SetRandomNumberBehavior.EntityData>.GetConfigurator() Entity<SetRandomNumberBehavior.EntityData>.Configure(IMode) Entity<SetRandomNumberBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Randomization.Behaviors Assembly : VRBuilder.Randomization.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/randomization-add-on\")] public class SetRandomNumberBehavior : Behavior<SetRandomNumberBehavior.EntityData>, IDataOwner<SetRandomNumberBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source SetRandomNumberBehavior() Declaration [JsonConstructor] public SetRandomNumberBehavior() | Improve this Doc View Source SetRandomNumberBehavior(Guid, Single, Single, Boolean) Declaration public SetRandomNumberBehavior(Guid propertyGuid, float minValue, float maxValue, bool randomizeInteger) Parameters Type Name Description System.Guid propertyGuid System.Single minValue System.Single maxValue System.Boolean randomizeInteger | Improve this Doc View Source SetRandomNumberBehavior(IDataProperty<Single>, Single, Single, Boolean) Declaration public SetRandomNumberBehavior(IDataProperty<float> property, float minValue, float maxValue, bool randomizeInteger) Parameters Type Name Description IDataProperty < System.Single > property System.Single minValue System.Single maxValue System.Boolean randomizeInteger Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Randomization.Behaviors.SetRandomNumberBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Randomization.Conditions.html": {
    "href": "api/VRBuilder.Randomization.Conditions.html",
    "title": "Namespace VRBuilder.Randomization.Conditions | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Randomization.Conditions Classes RandomlySelectedCondition Condition that can be triggered directly. Used internally. RandomlySelectedCondition.EntityData The data for a"
  },
  "api/VRBuilder.Randomization.Conditions.RandomlySelectedCondition.EntityData.html": {
    "href": "api/VRBuilder.Randomization.Conditions.RandomlySelectedCondition.EntityData.html",
    "title": "Class RandomlySelectedCondition.EntityData | VR Builder Documentation",
    "keywords": "Class RandomlySelectedCondition.EntityData The data for a Inheritance System.Object RandomlySelectedCondition.EntityData Implements IConditionData ICompletableData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Randomization.Conditions Assembly : VRBuilder.Randomization.dll Syntax [DisplayName(\"Randomly Selected\")] public class EntityData : IConditionData, ICompletableData, INamedData, IData Properties | Improve this Doc View Source IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [DataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Weight The higher the value, the more likely for this condition to be completed. Declaration [DataMember] public float Weight { get; set; } Property Value Type Description System.Single Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.Randomization.Conditions.RandomlySelectedCondition.html": {
    "href": "api/VRBuilder.Randomization.Conditions.RandomlySelectedCondition.html",
    "title": "Class RandomlySelectedCondition | VR Builder Documentation",
    "keywords": "Class RandomlySelectedCondition Condition that can be triggered directly. Used internally. Inheritance System.Object Entity < RandomlySelectedCondition.EntityData > CompletableEntity < RandomlySelectedCondition.EntityData > Condition < RandomlySelectedCondition.EntityData > RandomlySelectedCondition Implements IDataOwner < RandomlySelectedCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<RandomlySelectedCondition.EntityData>.IDataOwner<IConditionData>.Data Condition<RandomlySelectedCondition.EntityData>.Clone() Condition<RandomlySelectedCondition.EntityData>.GetLockableProperties() CompletableEntity<RandomlySelectedCondition.EntityData>.GetAutocompleter() CompletableEntity<RandomlySelectedCondition.EntityData>.IsCompleted CompletableEntity<RandomlySelectedCondition.EntityData>.Autocomplete() Entity<RandomlySelectedCondition.EntityData>.Data Entity<RandomlySelectedCondition.EntityData>.IDataOwner.Data Entity<RandomlySelectedCondition.EntityData>.LifeCycle Entity<RandomlySelectedCondition.EntityData>.Parent Entity<RandomlySelectedCondition.EntityData>.GetActivatingProcess() Entity<RandomlySelectedCondition.EntityData>.GetDeactivatingProcess() Entity<RandomlySelectedCondition.EntityData>.GetConfigurator() Entity<RandomlySelectedCondition.EntityData>.Configure(IMode) Entity<RandomlySelectedCondition.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Randomization.Conditions Assembly : VRBuilder.Randomization.dll Syntax [DataContract(IsReference = true)] public class RandomlySelectedCondition : Condition<RandomlySelectedCondition.EntityData>, IDataOwner<RandomlySelectedCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors | Improve this Doc View Source RandomlySelectedCondition(Single) Declaration [JsonConstructor] public RandomlySelectedCondition(float weight = 1F) Parameters Type Name Description System.Single weight Properties | Improve this Doc View Source IsSetToComplete Declaration public bool IsSetToComplete { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Randomization.Conditions.RandomlySelectedCondition.EntityData>.GetActiveProcess() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.StatesAndData.Behaviors.html": {
    "href": "api/VRBuilder.StatesAndData.Behaviors.html",
    "title": "Namespace VRBuilder.StatesAndData.Behaviors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.StatesAndData.Behaviors Classes MathOperationBehavior A behavior that performs an operation on a NumberDataProperty and sets it to the new value. MathOperationBehavior.EntityData The MathOperationBehavior behavior data. SetStateBehavior Behavior that sets a StateDataProperty<T> to a specific value. SetStateBehavior.EntityData The SetValueBehavior<T> behavior data. TriggerEventBehavior Behavior that triggers a Unity event on a property. TriggerEventBehavior.EntityData The TriggerEventBehavior behavior data. TriggerEventByRefBehavior Behavior that triggers a Unity event on a property. TriggerEventByRefBehavior.EntityData The TriggerEventByRefBehavior behavior data. TriggerEventByTagBehavior Behavior that triggers a Unity event on a property. TriggerEventByTagBehavior.EntityData The TriggerEventByTagBehavior behavior data. TriggerGenericEventBehavior<T> Behavior that triggers a Unity event on a property. TriggerGenericEventBehavior<T>.EntityData The behavior data. TriggerGenericEventByRefBehavior<T> Behavior that triggers a Unity event on a property. TriggerGenericEventByRefBehavior<T>.EntityData The behavior data. TriggerGenericEventByTagBehavior<T> Behavior that triggers a Unity event on a property. TriggerGenericEventByTagBehavior<T>.EntityData The behavior data."
  },
  "api/VRBuilder.StatesAndData.Behaviors.MathOperationBehavior.EntityData.html": {
    "href": "api/VRBuilder.StatesAndData.Behaviors.MathOperationBehavior.EntityData.html",
    "title": "Class MathOperationBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class MathOperationBehavior.EntityData The MathOperationBehavior behavior data. Inheritance System.Object MathOperationBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.Behaviors Assembly : VRBuilder.StatesAndData.dll Syntax [DisplayName(\"Math Operation\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source IsModifierConst Declaration [DataMember] public bool IsModifierConst { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Modified Declaration [DataMember] [UsesSpecificProcessDrawer(\"ValuePropertyDrawer\")] public SingleScenePropertyReference<IDataProperty<float>> Modified { get; set; } Property Value Type Description SingleScenePropertyReference < IDataProperty < System.Single >> | Improve this Doc View Source ModifiedProperty Declaration [DataMember] [Obsolete(\"Use Modified instead.\")] [LegacyProperty(\"Modified\")] public ScenePropertyReference<IDataProperty<float>> ModifiedProperty { get; set; } Property Value Type Description ScenePropertyReference < IDataProperty < System.Single >> | Improve this Doc View Source Modifier Declaration [DataMember] public SingleScenePropertyReference<IDataProperty<float>> Modifier { get; set; } Property Value Type Description SingleScenePropertyReference < IDataProperty < System.Single >> | Improve this Doc View Source ModifierConst Declaration [DataMember] public float ModifierConst { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ModifierProperty Declaration [DataMember] [Obsolete(\"Use Modifier instead.\")] [LegacyProperty(\"Modifier\")] public ScenePropertyReference<IDataProperty<float>> ModifierProperty { get; set; } Property Value Type Description ScenePropertyReference < IDataProperty < System.Single >> | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Operation Declaration [DataMember] public IOperationCommand<float, float> Operation { get; set; } Property Value Type Description IOperationCommand < System.Single , System.Single > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.StatesAndData.Behaviors.MathOperationBehavior.html": {
    "href": "api/VRBuilder.StatesAndData.Behaviors.MathOperationBehavior.html",
    "title": "Class MathOperationBehavior | VR Builder Documentation",
    "keywords": "Class MathOperationBehavior A behavior that performs an operation on a NumberDataProperty and sets it to the new value. Inheritance System.Object Entity < MathOperationBehavior.EntityData > Behavior < MathOperationBehavior.EntityData > MathOperationBehavior Implements IDataOwner < MathOperationBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<MathOperationBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<MathOperationBehavior.EntityData>.Clone() Entity<MathOperationBehavior.EntityData>.Data Entity<MathOperationBehavior.EntityData>.IDataOwner.Data Entity<MathOperationBehavior.EntityData>.LifeCycle Entity<MathOperationBehavior.EntityData>.Parent Entity<MathOperationBehavior.EntityData>.GetActiveProcess() Entity<MathOperationBehavior.EntityData>.GetDeactivatingProcess() Entity<MathOperationBehavior.EntityData>.GetConfigurator() Entity<MathOperationBehavior.EntityData>.Configure(IMode) Entity<MathOperationBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.Behaviors Assembly : VRBuilder.StatesAndData.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/states-data-add-on\")] public class MathOperationBehavior : Behavior<MathOperationBehavior.EntityData>, IDataOwner<MathOperationBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source MathOperationBehavior() Declaration [JsonConstructor] public MathOperationBehavior() | Improve this Doc View Source MathOperationBehavior(Guid, Guid, Single, Boolean, IOperationCommand<Single, Single>) Declaration public MathOperationBehavior(Guid modifiedPropertyGuid, Guid modifierPropertyGuid, float modifierValue, bool isModifierConst, IOperationCommand<float, float> operation) Parameters Type Name Description System.Guid modifiedPropertyGuid System.Guid modifierPropertyGuid System.Single modifierValue System.Boolean isModifierConst IOperationCommand < System.Single , System.Single > operation | Improve this Doc View Source MathOperationBehavior(IDataProperty<Single>, IDataProperty<Single>, Single, Boolean, IOperationCommand<Single, Single>) Declaration public MathOperationBehavior(IDataProperty<float> modifiedProperty, IDataProperty<float> modifierProperty, float value, bool isModifierConst, IOperationCommand<float, float> operation) Parameters Type Name Description IDataProperty < System.Single > modifiedProperty IDataProperty < System.Single > modifierProperty System.Single value System.Boolean isModifierConst IOperationCommand < System.Single , System.Single > operation Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.StatesAndData.Behaviors.MathOperationBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.StatesAndData.Behaviors.SetStateBehavior.EntityData.html": {
    "href": "api/VRBuilder.StatesAndData.Behaviors.SetStateBehavior.EntityData.html",
    "title": "Class SetStateBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetStateBehavior.EntityData The SetValueBehavior<T> behavior data. Inheritance System.Object SetStateBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.Behaviors Assembly : VRBuilder.StatesAndData.dll Syntax [DisplayName(\"Set State\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source DataProperties Declaration [DataMember] public MultipleScenePropertyReference<StateDataPropertyBase> DataProperties { get; set; } Property Value Type Description MultipleScenePropertyReference < StateDataPropertyBase > | Improve this Doc View Source DataProperty Declaration [DataMember] [Obsolete(\"Use DataProperties instead.\")] [LegacyProperty(\"DataProperties\")] public ScenePropertyReference<StateDataPropertyBase> DataProperty { get; set; } Property Value Type Description ScenePropertyReference < StateDataPropertyBase > | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source NewValue Declaration [DataMember] public int NewValue { get; set; } Property Value Type Description System.Int32 Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.StatesAndData.Behaviors.SetStateBehavior.html": {
    "href": "api/VRBuilder.StatesAndData.Behaviors.SetStateBehavior.html",
    "title": "Class SetStateBehavior | VR Builder Documentation",
    "keywords": "Class SetStateBehavior Behavior that sets a StateDataProperty<T> to a specific value. Inheritance System.Object Entity < SetStateBehavior.EntityData > Behavior < SetStateBehavior.EntityData > SetStateBehavior Implements IDataOwner < SetStateBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetStateBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<SetStateBehavior.EntityData>.Clone() Entity<SetStateBehavior.EntityData>.Data Entity<SetStateBehavior.EntityData>.IDataOwner.Data Entity<SetStateBehavior.EntityData>.LifeCycle Entity<SetStateBehavior.EntityData>.Parent Entity<SetStateBehavior.EntityData>.GetActiveProcess() Entity<SetStateBehavior.EntityData>.GetDeactivatingProcess() Entity<SetStateBehavior.EntityData>.GetConfigurator() Entity<SetStateBehavior.EntityData>.Configure(IMode) Entity<SetStateBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.Behaviors Assembly : VRBuilder.StatesAndData.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/states-data-add-on\")] public class SetStateBehavior : Behavior<SetStateBehavior.EntityData>, IDataOwner<SetStateBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source SetStateBehavior() Declaration [JsonConstructor] public SetStateBehavior() | Improve this Doc View Source SetStateBehavior(Guid, Int32) Declaration public SetStateBehavior(Guid propertyGuid, int value) Parameters Type Name Description System.Guid propertyGuid System.Int32 value | Improve this Doc View Source SetStateBehavior(StateDataPropertyBase, Int32) Declaration public SetStateBehavior(StateDataPropertyBase property, int value) Parameters Type Name Description StateDataPropertyBase property System.Int32 value Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.StatesAndData.Behaviors.SetStateBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.StatesAndData.Behaviors.TriggerEventBehavior.EntityData.html": {
    "href": "api/VRBuilder.StatesAndData.Behaviors.TriggerEventBehavior.EntityData.html",
    "title": "Class TriggerEventBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class TriggerEventBehavior.EntityData The TriggerEventBehavior behavior data. Inheritance System.Object TriggerEventBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.Behaviors Assembly : VRBuilder.StatesAndData.dll Syntax [DisplayName(\"Trigger Event (Group)\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source ExecutionStages A property that determines if the event should trigger at activation or deactivation (or both). Declaration [DataMember] [DisplayName(\"Execution stages\")] public BehaviorExecutionStages ExecutionStages { get; set; } Property Value Type Description BehaviorExecutionStages | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Targets The group of objects that will trigger the event. Declaration [DataMember] [DisplayName(\"Targets\")] public MultipleScenePropertyReference<IEventProperty> Targets { get; set; } Property Value Type Description MultipleScenePropertyReference < IEventProperty > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.StatesAndData.Behaviors.TriggerEventBehavior.html": {
    "href": "api/VRBuilder.StatesAndData.Behaviors.TriggerEventBehavior.html",
    "title": "Class TriggerEventBehavior | VR Builder Documentation",
    "keywords": "Class TriggerEventBehavior Behavior that triggers a Unity event on a property. Inheritance System.Object Entity < TriggerEventBehavior.EntityData > Behavior < TriggerEventBehavior.EntityData > TriggerEventBehavior Implements IDataOwner < TriggerEventBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<TriggerEventBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<TriggerEventBehavior.EntityData>.Clone() Entity<TriggerEventBehavior.EntityData>.Data Entity<TriggerEventBehavior.EntityData>.IDataOwner.Data Entity<TriggerEventBehavior.EntityData>.LifeCycle Entity<TriggerEventBehavior.EntityData>.Parent Entity<TriggerEventBehavior.EntityData>.GetActiveProcess() Entity<TriggerEventBehavior.EntityData>.GetConfigurator() Entity<TriggerEventBehavior.EntityData>.Configure(IMode) Entity<TriggerEventBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.Behaviors Assembly : VRBuilder.StatesAndData.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/states-data-add-on\")] public class TriggerEventBehavior : Behavior<TriggerEventBehavior.EntityData>, IDataOwner<TriggerEventBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source TriggerEventBehavior() Declaration [JsonConstructor] public TriggerEventBehavior() | Improve this Doc View Source TriggerEventBehavior(Guid, BehaviorExecutionStages) Declaration public TriggerEventBehavior(Guid guid, BehaviorExecutionStages executionStages) Parameters Type Name Description System.Guid guid BehaviorExecutionStages executionStages Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.StatesAndData.Behaviors.TriggerEventBehavior.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.StatesAndData.Behaviors.TriggerEventBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.StatesAndData.Behaviors.TriggerEventByRefBehavior.EntityData.html": {
    "href": "api/VRBuilder.StatesAndData.Behaviors.TriggerEventByRefBehavior.EntityData.html",
    "title": "Class TriggerEventByRefBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class TriggerEventByRefBehavior.EntityData The TriggerEventByRefBehavior behavior data. Inheritance System.Object TriggerEventByRefBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.Behaviors Assembly : VRBuilder.StatesAndData.dll Syntax [DisplayName(\"Trigger Event (Ref)\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source EventProperty The property that will trigger the event. Declaration [DataMember] [DisplayName(\"Event property\")] public ScenePropertyReference<IEventProperty> EventProperty { get; set; } Property Value Type Description ScenePropertyReference < IEventProperty > | Improve this Doc View Source ExecutionStages A property that determines if the event should trigger at activation or deactivation (or both). Declaration [DataMember] [DisplayName(\"Execution stages\")] public BehaviorExecutionStages ExecutionStages { get; set; } Property Value Type Description BehaviorExecutionStages | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.StatesAndData.Behaviors.TriggerEventByRefBehavior.html": {
    "href": "api/VRBuilder.StatesAndData.Behaviors.TriggerEventByRefBehavior.html",
    "title": "Class TriggerEventByRefBehavior | VR Builder Documentation",
    "keywords": "Class TriggerEventByRefBehavior Behavior that triggers a Unity event on a property. Inheritance System.Object Entity < TriggerEventByRefBehavior.EntityData > Behavior < TriggerEventByRefBehavior.EntityData > TriggerEventByRefBehavior Implements IDataOwner < TriggerEventByRefBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<TriggerEventByRefBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<TriggerEventByRefBehavior.EntityData>.Clone() Entity<TriggerEventByRefBehavior.EntityData>.Data Entity<TriggerEventByRefBehavior.EntityData>.IDataOwner.Data Entity<TriggerEventByRefBehavior.EntityData>.LifeCycle Entity<TriggerEventByRefBehavior.EntityData>.Parent Entity<TriggerEventByRefBehavior.EntityData>.GetActiveProcess() Entity<TriggerEventByRefBehavior.EntityData>.GetConfigurator() Entity<TriggerEventByRefBehavior.EntityData>.Configure(IMode) Entity<TriggerEventByRefBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.Behaviors Assembly : VRBuilder.StatesAndData.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/states-data-add-on\")] [Obsolete(\"Use TriggerEventBehavior instead.\")] public class TriggerEventByRefBehavior : Behavior<TriggerEventByRefBehavior.EntityData>, IDataOwner<TriggerEventByRefBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source TriggerEventByRefBehavior() Declaration [JsonConstructor] public TriggerEventByRefBehavior() | Improve this Doc View Source TriggerEventByRefBehavior(String, BehaviorExecutionStages) Declaration public TriggerEventByRefBehavior(string propertyName, BehaviorExecutionStages executionStages) Parameters Type Name Description System.String propertyName BehaviorExecutionStages executionStages | Improve this Doc View Source TriggerEventByRefBehavior(IEventProperty, BehaviorExecutionStages) Declaration public TriggerEventByRefBehavior(IEventProperty property, BehaviorExecutionStages executionStages) Parameters Type Name Description IEventProperty property BehaviorExecutionStages executionStages Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.StatesAndData.Behaviors.TriggerEventByRefBehavior.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.StatesAndData.Behaviors.TriggerEventByRefBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.StatesAndData.Behaviors.TriggerEventByTagBehavior.EntityData.html": {
    "href": "api/VRBuilder.StatesAndData.Behaviors.TriggerEventByTagBehavior.EntityData.html",
    "title": "Class TriggerEventByTagBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class TriggerEventByTagBehavior.EntityData The TriggerEventByTagBehavior behavior data. Inheritance System.Object TriggerEventByTagBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.Behaviors Assembly : VRBuilder.StatesAndData.dll Syntax [DisplayName(\"Trigger Event (Tag)\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source EventObjectTag The tag of objects that will trigger the event. Declaration [DataMember] [DisplayName(\"Tag\")] public SceneObjectTag<IEventProperty> EventObjectTag { get; set; } Property Value Type Description SceneObjectTag < IEventProperty > | Improve this Doc View Source ExecutionStages A property that determines if the event should trigger at activation or deactivation (or both). Declaration [DataMember] [DisplayName(\"Execution stages\")] public BehaviorExecutionStages ExecutionStages { get; set; } Property Value Type Description BehaviorExecutionStages | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.StatesAndData.Behaviors.TriggerEventByTagBehavior.html": {
    "href": "api/VRBuilder.StatesAndData.Behaviors.TriggerEventByTagBehavior.html",
    "title": "Class TriggerEventByTagBehavior | VR Builder Documentation",
    "keywords": "Class TriggerEventByTagBehavior Behavior that triggers a Unity event on a property. Inheritance System.Object Entity < TriggerEventByTagBehavior.EntityData > Behavior < TriggerEventByTagBehavior.EntityData > TriggerEventByTagBehavior Implements IDataOwner < TriggerEventByTagBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<TriggerEventByTagBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<TriggerEventByTagBehavior.EntityData>.Clone() Entity<TriggerEventByTagBehavior.EntityData>.Data Entity<TriggerEventByTagBehavior.EntityData>.IDataOwner.Data Entity<TriggerEventByTagBehavior.EntityData>.LifeCycle Entity<TriggerEventByTagBehavior.EntityData>.Parent Entity<TriggerEventByTagBehavior.EntityData>.GetActiveProcess() Entity<TriggerEventByTagBehavior.EntityData>.GetConfigurator() Entity<TriggerEventByTagBehavior.EntityData>.Configure(IMode) Entity<TriggerEventByTagBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.Behaviors Assembly : VRBuilder.StatesAndData.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/states-data-add-on\")] [Obsolete(\"Use TriggerEventBehavior instead.\")] public class TriggerEventByTagBehavior : Behavior<TriggerEventByTagBehavior.EntityData>, IDataOwner<TriggerEventByTagBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source TriggerEventByTagBehavior() Declaration [JsonConstructor] public TriggerEventByTagBehavior() | Improve this Doc View Source TriggerEventByTagBehavior(Guid, BehaviorExecutionStages) Declaration public TriggerEventByTagBehavior(Guid guid, BehaviorExecutionStages executionStages) Parameters Type Name Description System.Guid guid BehaviorExecutionStages executionStages Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.StatesAndData.Behaviors.TriggerEventByTagBehavior.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.StatesAndData.Behaviors.TriggerEventByTagBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.StatesAndData.Behaviors.TriggerGenericEventBehavior-1.EntityData.html": {
    "href": "api/VRBuilder.StatesAndData.Behaviors.TriggerGenericEventBehavior-1.EntityData.html",
    "title": "Class TriggerGenericEventBehavior<T>.EntityData | VR Builder Documentation",
    "keywords": "Class TriggerGenericEventBehavior<T>.EntityData The behavior data. Inheritance System.Object TriggerGenericEventBehavior<T>.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.Behaviors Assembly : VRBuilder.StatesAndData.dll Syntax [DisplayName(\"Trigger Event (Group)\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source Argument The data to be passed to the event. Declaration [DataMember] public ProcessVariable<T> Argument { get; set; } Property Value Type Description ProcessVariable <T> | Improve this Doc View Source ExecutionStages A property that determines if the event should trigger at activation or deactivation (or both). Declaration [DataMember] [DisplayName(\"Execution stages\")] public BehaviorExecutionStages ExecutionStages { get; set; } Property Value Type Description BehaviorExecutionStages | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Targets The group of objects that will trigger the event. Declaration [DataMember] public MultipleScenePropertyReference<IGenericEventProperty<T>> Targets { get; set; } Property Value Type Description MultipleScenePropertyReference < IGenericEventProperty <T>> Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.StatesAndData.Behaviors.TriggerGenericEventBehavior-1.html": {
    "href": "api/VRBuilder.StatesAndData.Behaviors.TriggerGenericEventBehavior-1.html",
    "title": "Class TriggerGenericEventBehavior<T> | VR Builder Documentation",
    "keywords": "Class TriggerGenericEventBehavior<T> Behavior that triggers a Unity event on a property. Inheritance System.Object Entity < TriggerGenericEventBehavior.EntityData <>> Behavior < TriggerGenericEventBehavior.EntityData <>> TriggerGenericEventBehavior<T> Implements IDataOwner < TriggerGenericEventBehavior.EntityData <>> IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<TriggerGenericEventBehavior<T>.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<TriggerGenericEventBehavior<T>.EntityData>.Clone() Entity<TriggerGenericEventBehavior<T>.EntityData>.Data Entity<TriggerGenericEventBehavior<T>.EntityData>.IDataOwner.Data Entity<TriggerGenericEventBehavior<T>.EntityData>.LifeCycle Entity<TriggerGenericEventBehavior<T>.EntityData>.Parent Entity<TriggerGenericEventBehavior<T>.EntityData>.GetActiveProcess() Entity<TriggerGenericEventBehavior<T>.EntityData>.GetConfigurator() Entity<TriggerGenericEventBehavior<T>.EntityData>.Configure(IMode) Entity<TriggerGenericEventBehavior<T>.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.Behaviors Assembly : VRBuilder.StatesAndData.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/states-data-add-on\")] public class TriggerGenericEventBehavior<T> : Behavior<TriggerGenericEventBehavior<T>.EntityData>, IDataOwner<TriggerGenericEventBehavior<T>.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Type Parameters Name Description T Constructors | Improve this Doc View Source TriggerGenericEventBehavior() Declaration [JsonConstructor] public TriggerGenericEventBehavior() Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.StatesAndData.Behaviors.TriggerGenericEventBehavior<T>.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.StatesAndData.Behaviors.TriggerGenericEventBehavior<T>.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.StatesAndData.Behaviors.TriggerGenericEventByRefBehavior-1.EntityData.html": {
    "href": "api/VRBuilder.StatesAndData.Behaviors.TriggerGenericEventByRefBehavior-1.EntityData.html",
    "title": "Class TriggerGenericEventByRefBehavior<T>.EntityData | VR Builder Documentation",
    "keywords": "Class TriggerGenericEventByRefBehavior<T>.EntityData The behavior data. Inheritance System.Object TriggerGenericEventByRefBehavior<T>.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.Behaviors Assembly : VRBuilder.StatesAndData.dll Syntax [DisplayName(\"Trigger Event (Ref)\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source Argument The data to be passed to the event. Declaration [DataMember] public ProcessVariable<T> Argument { get; set; } Property Value Type Description ProcessVariable <T> | Improve this Doc View Source EventProperty The property that will trigger the event. Declaration [DataMember] [DisplayName(\"Event property\")] public ScenePropertyReference<IGenericEventProperty<T>> EventProperty { get; set; } Property Value Type Description ScenePropertyReference < IGenericEventProperty <T>> | Improve this Doc View Source ExecutionStages A property that determines if the event should trigger at activation or deactivation (or both). Declaration [DataMember] [DisplayName(\"Execution stages\")] public BehaviorExecutionStages ExecutionStages { get; set; } Property Value Type Description BehaviorExecutionStages | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.StatesAndData.Behaviors.TriggerGenericEventByRefBehavior-1.html": {
    "href": "api/VRBuilder.StatesAndData.Behaviors.TriggerGenericEventByRefBehavior-1.html",
    "title": "Class TriggerGenericEventByRefBehavior<T> | VR Builder Documentation",
    "keywords": "Class TriggerGenericEventByRefBehavior<T> Behavior that triggers a Unity event on a property. Inheritance System.Object Entity < TriggerGenericEventByRefBehavior.EntityData <>> Behavior < TriggerGenericEventByRefBehavior.EntityData <>> TriggerGenericEventByRefBehavior<T> Implements IDataOwner < TriggerGenericEventByRefBehavior.EntityData <>> IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<TriggerGenericEventByRefBehavior<T>.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<TriggerGenericEventByRefBehavior<T>.EntityData>.Clone() Entity<TriggerGenericEventByRefBehavior<T>.EntityData>.Data Entity<TriggerGenericEventByRefBehavior<T>.EntityData>.IDataOwner.Data Entity<TriggerGenericEventByRefBehavior<T>.EntityData>.LifeCycle Entity<TriggerGenericEventByRefBehavior<T>.EntityData>.Parent Entity<TriggerGenericEventByRefBehavior<T>.EntityData>.GetActiveProcess() Entity<TriggerGenericEventByRefBehavior<T>.EntityData>.GetConfigurator() Entity<TriggerGenericEventByRefBehavior<T>.EntityData>.Configure(IMode) Entity<TriggerGenericEventByRefBehavior<T>.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.Behaviors Assembly : VRBuilder.StatesAndData.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/states-data-add-on\")] [Obsolete(\"Use TriggerGenericEventBehavior instead.\")] public class TriggerGenericEventByRefBehavior<T> : Behavior<TriggerGenericEventByRefBehavior<T>.EntityData>, IDataOwner<TriggerGenericEventByRefBehavior<T>.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Type Parameters Name Description T Constructors | Improve this Doc View Source TriggerGenericEventByRefBehavior() Declaration [JsonConstructor] public TriggerGenericEventByRefBehavior() | Improve this Doc View Source TriggerGenericEventByRefBehavior(String, String, T, Boolean, BehaviorExecutionStages) Declaration [Obsolete(\"This constructor is obsolete and will be removed in the next major version.\")] public TriggerGenericEventByRefBehavior(string propertyName, string propertyArgName, T constArg, bool isConst, BehaviorExecutionStages executionStages) Parameters Type Name Description System.String propertyName System.String propertyArgName T constArg System.Boolean isConst BehaviorExecutionStages executionStages | Improve this Doc View Source TriggerGenericEventByRefBehavior(IGenericEventProperty<T>, IDataProperty<T>, T, Boolean, BehaviorExecutionStages) Declaration public TriggerGenericEventByRefBehavior(IGenericEventProperty<T> property, IDataProperty<T> propertyArg, T constArg, bool isConst, BehaviorExecutionStages executionStages) Parameters Type Name Description IGenericEventProperty <T> property IDataProperty <T> propertyArg T constArg System.Boolean isConst BehaviorExecutionStages executionStages Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.StatesAndData.Behaviors.TriggerGenericEventByRefBehavior<T>.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.StatesAndData.Behaviors.TriggerGenericEventByRefBehavior<T>.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.StatesAndData.Behaviors.TriggerGenericEventByTagBehavior-1.EntityData.html": {
    "href": "api/VRBuilder.StatesAndData.Behaviors.TriggerGenericEventByTagBehavior-1.EntityData.html",
    "title": "Class TriggerGenericEventByTagBehavior<T>.EntityData | VR Builder Documentation",
    "keywords": "Class TriggerGenericEventByTagBehavior<T>.EntityData The behavior data. Inheritance System.Object TriggerGenericEventByTagBehavior<T>.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.Behaviors Assembly : VRBuilder.StatesAndData.dll Syntax [DisplayName(\"Trigger Event (Tag)\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source Argument The data to be passed to the event. Declaration [DataMember] public ProcessVariable<T> Argument { get; set; } Property Value Type Description ProcessVariable <T> | Improve this Doc View Source EventTag The tag of objects that will trigger the event. Declaration [DataMember] [DisplayName(\"Tag\")] public SceneObjectTag<IGenericEventProperty<T>> EventTag { get; set; } Property Value Type Description SceneObjectTag < IGenericEventProperty <T>> | Improve this Doc View Source ExecutionStages A property that determines if the event should trigger at activation or deactivation (or both). Declaration [DataMember] [DisplayName(\"Execution stages\")] public BehaviorExecutionStages ExecutionStages { get; set; } Property Value Type Description BehaviorExecutionStages | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.StatesAndData.Behaviors.TriggerGenericEventByTagBehavior-1.html": {
    "href": "api/VRBuilder.StatesAndData.Behaviors.TriggerGenericEventByTagBehavior-1.html",
    "title": "Class TriggerGenericEventByTagBehavior<T> | VR Builder Documentation",
    "keywords": "Class TriggerGenericEventByTagBehavior<T> Behavior that triggers a Unity event on a property. Inheritance System.Object Entity < TriggerGenericEventByTagBehavior.EntityData <>> Behavior < TriggerGenericEventByTagBehavior.EntityData <>> TriggerGenericEventByTagBehavior<T> Implements IDataOwner < TriggerGenericEventByTagBehavior.EntityData <>> IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<TriggerGenericEventByTagBehavior<T>.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<TriggerGenericEventByTagBehavior<T>.EntityData>.Clone() Entity<TriggerGenericEventByTagBehavior<T>.EntityData>.Data Entity<TriggerGenericEventByTagBehavior<T>.EntityData>.IDataOwner.Data Entity<TriggerGenericEventByTagBehavior<T>.EntityData>.LifeCycle Entity<TriggerGenericEventByTagBehavior<T>.EntityData>.Parent Entity<TriggerGenericEventByTagBehavior<T>.EntityData>.GetActiveProcess() Entity<TriggerGenericEventByTagBehavior<T>.EntityData>.GetConfigurator() Entity<TriggerGenericEventByTagBehavior<T>.EntityData>.Configure(IMode) Entity<TriggerGenericEventByTagBehavior<T>.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.Behaviors Assembly : VRBuilder.StatesAndData.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/states-data-add-on\")] [Obsolete(\"Use TriggerGenericEventBehavior instead.\")] public class TriggerGenericEventByTagBehavior<T> : Behavior<TriggerGenericEventByTagBehavior<T>.EntityData>, IDataOwner<TriggerGenericEventByTagBehavior<T>.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Type Parameters Name Description T Constructors | Improve this Doc View Source TriggerGenericEventByTagBehavior() Declaration [JsonConstructor] public TriggerGenericEventByTagBehavior() | Improve this Doc View Source TriggerGenericEventByTagBehavior(Guid, String, T, Boolean, BehaviorExecutionStages) Declaration [Obsolete(\"This constructor is obsolete and will be removed in the next major version.\")] public TriggerGenericEventByTagBehavior(Guid guid, string argumentPropertyName, T constValue, bool isConst, BehaviorExecutionStages executionStages) Parameters Type Name Description System.Guid guid System.String argumentPropertyName T constValue System.Boolean isConst BehaviorExecutionStages executionStages | Improve this Doc View Source TriggerGenericEventByTagBehavior(Guid, IDataProperty<T>, T, Boolean, BehaviorExecutionStages) Declaration public TriggerGenericEventByTagBehavior(Guid guid, IDataProperty<T> argumentProperty, T constValue, bool isConst, BehaviorExecutionStages executionStages) Parameters Type Name Description System.Guid guid IDataProperty <T> argumentProperty T constValue System.Boolean isConst BehaviorExecutionStages executionStages Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.StatesAndData.Behaviors.TriggerGenericEventByTagBehavior<T>.EntityData>.GetActivatingProcess() | Improve this Doc View Source GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.StatesAndData.Behaviors.TriggerGenericEventByTagBehavior<T>.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.StatesAndData.Conditions.CheckStateCondition.EntityData.html": {
    "href": "api/VRBuilder.StatesAndData.Conditions.CheckStateCondition.EntityData.html",
    "title": "Class CheckStateCondition.EntityData | VR Builder Documentation",
    "keywords": "Class CheckStateCondition.EntityData The data for a CheckStateCondition Inheritance System.Object CheckStateCondition.EntityData Implements IConditionData ICompletableData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.Conditions Assembly : VRBuilder.StatesAndData.dll Syntax [DisplayName(\"Check State\")] public class EntityData : IConditionData, ICompletableData, INamedData, IData Properties | Improve this Doc View Source CompareValue Declaration [DataMember] public int CompareValue { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source DataProperty Declaration [DataMember] [Obsolete(\"Use StateDataProperty instead.\")] [LegacyProperty(\"StateDataProperty\")] public ScenePropertyReference<StateDataPropertyBase> DataProperty { get; set; } Property Value Type Description ScenePropertyReference < StateDataPropertyBase > | Improve this Doc View Source IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Operation Declaration [DataMember] public IOperationCommand<int, bool> Operation { get; set; } Property Value Type Description IOperationCommand < System.Int32 , System.Boolean > | Improve this Doc View Source StateDataProperty Declaration [DataMember] public SingleScenePropertyReference<StateDataPropertyBase> StateDataProperty { get; set; } Property Value Type Description SingleScenePropertyReference < StateDataPropertyBase > Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.StatesAndData.Conditions.CheckStateCondition.html": {
    "href": "api/VRBuilder.StatesAndData.Conditions.CheckStateCondition.html",
    "title": "Class CheckStateCondition | VR Builder Documentation",
    "keywords": "Class CheckStateCondition A condition that compares a StateDataProperty<T> to a specified value and completes when the comparison returns true. Inheritance System.Object Entity < CheckStateCondition.EntityData > CompletableEntity < CheckStateCondition.EntityData > Condition < CheckStateCondition.EntityData > CheckStateCondition Implements IDataOwner < CheckStateCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<CheckStateCondition.EntityData>.IDataOwner<IConditionData>.Data Condition<CheckStateCondition.EntityData>.Clone() Condition<CheckStateCondition.EntityData>.GetLockableProperties() CompletableEntity<CheckStateCondition.EntityData>.GetAutocompleter() CompletableEntity<CheckStateCondition.EntityData>.IsCompleted CompletableEntity<CheckStateCondition.EntityData>.Autocomplete() Entity<CheckStateCondition.EntityData>.Data Entity<CheckStateCondition.EntityData>.IDataOwner.Data Entity<CheckStateCondition.EntityData>.LifeCycle Entity<CheckStateCondition.EntityData>.Parent Entity<CheckStateCondition.EntityData>.GetActivatingProcess() Entity<CheckStateCondition.EntityData>.GetDeactivatingProcess() Entity<CheckStateCondition.EntityData>.GetConfigurator() Entity<CheckStateCondition.EntityData>.Configure(IMode) Entity<CheckStateCondition.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.Conditions Assembly : VRBuilder.StatesAndData.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/states-data-add-on\")] public class CheckStateCondition : Condition<CheckStateCondition.EntityData>, IDataOwner<CheckStateCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors | Improve this Doc View Source CheckStateCondition() Declaration [JsonConstructor] public CheckStateCondition() | Improve this Doc View Source CheckStateCondition(Guid, Int32, IOperationCommand<Int32, Boolean>) Declaration public CheckStateCondition(Guid dataProperty, int compareValue, IOperationCommand<int, bool> operation) Parameters Type Name Description System.Guid dataProperty System.Int32 compareValue IOperationCommand < System.Int32 , System.Boolean > operation | Improve this Doc View Source CheckStateCondition(StateDataPropertyBase, Int32, IOperationCommand<Int32, Boolean>) Declaration public CheckStateCondition(StateDataPropertyBase dataProperty, int compareValue, IOperationCommand<int, bool> operation) Parameters Type Name Description StateDataPropertyBase dataProperty System.Int32 compareValue IOperationCommand < System.Int32 , System.Boolean > operation Methods | Improve this Doc View Source GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.StatesAndData.Conditions.CheckStateCondition.EntityData>.GetActiveProcess() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.StatesAndData.Conditions.html": {
    "href": "api/VRBuilder.StatesAndData.Conditions.html",
    "title": "Namespace VRBuilder.StatesAndData.Conditions | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.StatesAndData.Conditions Classes CheckStateCondition A condition that compares a StateDataProperty<T> to a specified value and completes when the comparison returns true. CheckStateCondition.EntityData The data for a CheckStateCondition"
  },
  "api/VRBuilder.StatesAndData.ProcessUtils.DivideOperation.html": {
    "href": "api/VRBuilder.StatesAndData.ProcessUtils.DivideOperation.html",
    "title": "Class DivideOperation | VR Builder Documentation",
    "keywords": "Class DivideOperation Divides left by right. Inheritance System.Object DivideOperation Implements IOperationCommand < System.Single , System.Single > System.IFormattable Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.ProcessUtils Assembly : VRBuilder.StatesAndData.dll Syntax public class DivideOperation : IOperationCommand<float, float>, IFormattable Methods | Improve this Doc View Source Execute(Single, Single) Declaration public float Execute(float leftOperand, float rightOperand) Parameters Type Name Description System.Single leftOperand System.Single rightOperand Returns Type Description System.Single | Improve this Doc View Source ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.StatesAndData.ProcessUtils.html": {
    "href": "api/VRBuilder.StatesAndData.ProcessUtils.html",
    "title": "Namespace VRBuilder.StatesAndData.ProcessUtils | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.StatesAndData.ProcessUtils Classes DivideOperation Divides left by right. MaxOperation Multiplies left by right. MinOperation Multiplies left by right. MultiplyOperation Multiplies left by right. SubtractOperation Subtracts right from left. SumOperation Sums left and right."
  },
  "api/VRBuilder.StatesAndData.ProcessUtils.MaxOperation.html": {
    "href": "api/VRBuilder.StatesAndData.ProcessUtils.MaxOperation.html",
    "title": "Class MaxOperation | VR Builder Documentation",
    "keywords": "Class MaxOperation Multiplies left by right. Inheritance System.Object MaxOperation Implements IOperationCommand < System.Single , System.Single > System.IFormattable Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.ProcessUtils Assembly : VRBuilder.StatesAndData.dll Syntax public class MaxOperation : IOperationCommand<float, float>, IFormattable Methods | Improve this Doc View Source Execute(Single, Single) Declaration public float Execute(float leftOperand, float rightOperand) Parameters Type Name Description System.Single leftOperand System.Single rightOperand Returns Type Description System.Single | Improve this Doc View Source ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.StatesAndData.ProcessUtils.MinOperation.html": {
    "href": "api/VRBuilder.StatesAndData.ProcessUtils.MinOperation.html",
    "title": "Class MinOperation | VR Builder Documentation",
    "keywords": "Class MinOperation Multiplies left by right. Inheritance System.Object MinOperation Implements IOperationCommand < System.Single , System.Single > System.IFormattable Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.ProcessUtils Assembly : VRBuilder.StatesAndData.dll Syntax public class MinOperation : IOperationCommand<float, float>, IFormattable Methods | Improve this Doc View Source Execute(Single, Single) Declaration public float Execute(float leftOperand, float rightOperand) Parameters Type Name Description System.Single leftOperand System.Single rightOperand Returns Type Description System.Single | Improve this Doc View Source ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.StatesAndData.ProcessUtils.MultiplyOperation.html": {
    "href": "api/VRBuilder.StatesAndData.ProcessUtils.MultiplyOperation.html",
    "title": "Class MultiplyOperation | VR Builder Documentation",
    "keywords": "Class MultiplyOperation Multiplies left by right. Inheritance System.Object MultiplyOperation Implements IOperationCommand < System.Single , System.Single > System.IFormattable Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.ProcessUtils Assembly : VRBuilder.StatesAndData.dll Syntax public class MultiplyOperation : IOperationCommand<float, float>, IFormattable Methods | Improve this Doc View Source Execute(Single, Single) Declaration public float Execute(float leftOperand, float rightOperand) Parameters Type Name Description System.Single leftOperand System.Single rightOperand Returns Type Description System.Single | Improve this Doc View Source ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.StatesAndData.ProcessUtils.SubtractOperation.html": {
    "href": "api/VRBuilder.StatesAndData.ProcessUtils.SubtractOperation.html",
    "title": "Class SubtractOperation | VR Builder Documentation",
    "keywords": "Class SubtractOperation Subtracts right from left. Inheritance System.Object SubtractOperation Implements IOperationCommand < System.Single , System.Single > System.IFormattable Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.ProcessUtils Assembly : VRBuilder.StatesAndData.dll Syntax public class SubtractOperation : IOperationCommand<float, float>, IFormattable Methods | Improve this Doc View Source Execute(Single, Single) Declaration public float Execute(float leftOperand, float rightOperand) Parameters Type Name Description System.Single leftOperand System.Single rightOperand Returns Type Description System.Single | Improve this Doc View Source ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.StatesAndData.ProcessUtils.SumOperation.html": {
    "href": "api/VRBuilder.StatesAndData.ProcessUtils.SumOperation.html",
    "title": "Class SumOperation | VR Builder Documentation",
    "keywords": "Class SumOperation Sums left and right. Inheritance System.Object SumOperation Implements IOperationCommand < System.Single , System.Single > System.IFormattable Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.StatesAndData.ProcessUtils Assembly : VRBuilder.StatesAndData.dll Syntax public class SumOperation : IOperationCommand<float, float>, IFormattable Methods | Improve this Doc View Source Execute(Single, Single) Declaration public float Execute(float leftOperand, float rightOperand) Parameters Type Name Description System.Single leftOperand System.Single rightOperand Returns Type Description System.Single | Improve this Doc View Source ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.StatesAndData.Properties.BooleanEventProperty.html": {
    "href": "api/VRBuilder.StatesAndData.Properties.BooleanEventProperty.html",
    "title": "Class BooleanEventProperty | VR Builder Documentation",
    "keywords": "Class BooleanEventProperty GenericEventProperty<T> implementation with boolean argument. Inheritance System.Object ProcessSceneObjectProperty GenericEventProperty < System.Boolean > BooleanEventProperty Implements IGenericEventProperty < System.Boolean > ISceneObjectProperty Inherited Members GenericEventProperty<Boolean>.TriggerEvent(Boolean) ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.StatesAndData.Properties Assembly : VRBuilder.StatesAndData.dll Syntax public class BooleanEventProperty : GenericEventProperty<bool>, IGenericEventProperty<bool>, ISceneObjectProperty Implements IGenericEventProperty<T> ISceneObjectProperty"
  },
  "api/VRBuilder.StatesAndData.Properties.EventProperty.html": {
    "href": "api/VRBuilder.StatesAndData.Properties.EventProperty.html",
    "title": "Class EventProperty | VR Builder Documentation",
    "keywords": "Class EventProperty Inheritance System.Object ProcessSceneObjectProperty EventProperty Implements IEventProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.StatesAndData.Properties Assembly : VRBuilder.StatesAndData.dll Syntax public class EventProperty : ProcessSceneObjectProperty, IEventProperty, ISceneObjectProperty Methods | Improve this Doc View Source TriggerEvent() Declaration public void TriggerEvent() Implements IEventProperty ISceneObjectProperty"
  },
  "api/VRBuilder.StatesAndData.Properties.GenericEventProperty-1.html": {
    "href": "api/VRBuilder.StatesAndData.Properties.GenericEventProperty-1.html",
    "title": "Class GenericEventProperty<T> | VR Builder Documentation",
    "keywords": "Class GenericEventProperty<T> Abstract implementation of the generic event property. Inheritance System.Object ProcessSceneObjectProperty GenericEventProperty<T> BooleanEventProperty NumberEventProperty TextEventProperty Implements IGenericEventProperty <T> ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.StatesAndData.Properties Assembly : VRBuilder.StatesAndData.dll Syntax public abstract class GenericEventProperty<T> : ProcessSceneObjectProperty, IGenericEventProperty<T>, ISceneObjectProperty Type Parameters Name Description T Methods | Improve this Doc View Source TriggerEvent(T) Declaration public void TriggerEvent(T arg) Parameters Type Name Description T arg Implements IGenericEventProperty<T> ISceneObjectProperty"
  },
  "api/VRBuilder.StatesAndData.Properties.html": {
    "href": "api/VRBuilder.StatesAndData.Properties.html",
    "title": "Namespace VRBuilder.StatesAndData.Properties | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.StatesAndData.Properties Classes BooleanEventProperty GenericEventProperty<T> implementation with boolean argument. EventProperty GenericEventProperty<T> Abstract implementation of the generic event property. NumberEventProperty GenericEventProperty<T> implementation with numeric argument. StateDataProperty<T> Template class for state data properties. Override with a non-generic class to create usable state data properties. StateDataPropertyBase Base class for state data properties. TextEventProperty GenericEventProperty<T> implementation with text argument. Interfaces IEventProperty Base event property with no payload. IGenericEventProperty<T> Event property which supports a single argument."
  },
  "api/VRBuilder.StatesAndData.Properties.IEventProperty.html": {
    "href": "api/VRBuilder.StatesAndData.Properties.IEventProperty.html",
    "title": "Interface IEventProperty | VR Builder Documentation",
    "keywords": "Interface IEventProperty Base event property with no payload. Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.StatesAndData.Properties Assembly : VRBuilder.StatesAndData.dll Syntax public interface IEventProperty : ISceneObjectProperty Methods | Improve this Doc View Source TriggerEvent() Triggers the associated event. Declaration void TriggerEvent()"
  },
  "api/VRBuilder.StatesAndData.Properties.IGenericEventProperty-1.html": {
    "href": "api/VRBuilder.StatesAndData.Properties.IGenericEventProperty-1.html",
    "title": "Interface IGenericEventProperty<T> | VR Builder Documentation",
    "keywords": "Interface IGenericEventProperty<T> Event property which supports a single argument. Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.StatesAndData.Properties Assembly : VRBuilder.StatesAndData.dll Syntax public interface IGenericEventProperty<T> : ISceneObjectProperty Type Parameters Name Description T Methods | Improve this Doc View Source TriggerEvent(T) Triggers the associated event. Declaration void TriggerEvent(T arg) Parameters Type Name Description T arg"
  },
  "api/VRBuilder.StatesAndData.Properties.NumberEventProperty.html": {
    "href": "api/VRBuilder.StatesAndData.Properties.NumberEventProperty.html",
    "title": "Class NumberEventProperty | VR Builder Documentation",
    "keywords": "Class NumberEventProperty GenericEventProperty<T> implementation with numeric argument. Inheritance System.Object ProcessSceneObjectProperty GenericEventProperty < System.Single > NumberEventProperty Implements IGenericEventProperty < System.Single > ISceneObjectProperty Inherited Members GenericEventProperty<Single>.TriggerEvent(Single) ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.StatesAndData.Properties Assembly : VRBuilder.StatesAndData.dll Syntax public class NumberEventProperty : GenericEventProperty<float>, IGenericEventProperty<float>, ISceneObjectProperty Implements IGenericEventProperty<T> ISceneObjectProperty"
  },
  "api/VRBuilder.StatesAndData.Properties.StateDataProperty-1.html": {
    "href": "api/VRBuilder.StatesAndData.Properties.StateDataProperty-1.html",
    "title": "Class StateDataProperty<T> | VR Builder Documentation",
    "keywords": "Class StateDataProperty<T> Template class for state data properties. Override with a non-generic class to create usable state data properties. Inheritance System.Object ProcessSceneObjectProperty DataProperty < System.Int32 > StateDataPropertyBase StateDataProperty<T> Implements IDataProperty < System.Int32 > IDataPropertyBase ISceneObjectProperty Inherited Members DataProperty<Int32>.storedValue DataProperty<Int32>.GetValue() DataProperty<Int32>.ResetValue() DataProperty<Int32>.SetValue(Int32) ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.StatesAndData.Properties Assembly : VRBuilder.StatesAndData.dll Syntax public abstract class StateDataProperty<T> : StateDataPropertyBase, IDataProperty<int>, IDataPropertyBase, ISceneObjectProperty where T : Enum Type Parameters Name Description T Properties | Improve this Doc View Source DefaultValue Declaration public override int DefaultValue { get; } Property Value Type Description System.Int32 Overrides VRBuilder.Core.Properties.DataProperty<System.Int32>.DefaultValue | Improve this Doc View Source OnValueChanged Declaration public override UnityEvent<int> OnValueChanged { get; } Property Value Type Description UnityEvent < System.Int32 > Overrides VRBuilder.Core.Properties.DataProperty<System.Int32>.OnValueChanged | Improve this Doc View Source OnValueReset Declaration public override UnityEvent OnValueReset { get; } Property Value Type Description UnityEvent Overrides VRBuilder.Core.Properties.DataProperty<System.Int32>.OnValueReset | Improve this Doc View Source StateType Declaration public override Type StateType { get; } Property Value Type Description System.Type Overrides StateDataPropertyBase.StateType Methods | Improve this Doc View Source GetState() Returns the current state. Declaration public T GetState() Returns Type Description T | Improve this Doc View Source SetState(T) Sets the current state to the specified value. Declaration public void SetState(T state) Parameters Type Name Description T state | Improve this Doc View Source Start() Declaration protected void Start() | Improve this Doc View Source ValueToString(Int32) Declaration protected override string ValueToString(int value) Parameters Type Name Description System.Int32 value Returns Type Description System.String Overrides VRBuilder.Core.Properties.DataProperty<System.Int32>.ValueToString(System.Int32) Implements IDataProperty<T> IDataPropertyBase ISceneObjectProperty"
  },
  "api/VRBuilder.StatesAndData.Properties.StateDataPropertyBase.html": {
    "href": "api/VRBuilder.StatesAndData.Properties.StateDataPropertyBase.html",
    "title": "Class StateDataPropertyBase | VR Builder Documentation",
    "keywords": "Class StateDataPropertyBase Base class for state data properties. Inheritance System.Object ProcessSceneObjectProperty DataProperty < System.Int32 > StateDataPropertyBase StateDataProperty<T> Implements IDataProperty < System.Int32 > IDataPropertyBase ISceneObjectProperty Inherited Members DataProperty<Int32>.DefaultValue DataProperty<Int32>.storedValue DataProperty<Int32>.OnValueChanged DataProperty<Int32>.OnValueReset DataProperty<Int32>.GetValue() DataProperty<Int32>.ResetValue() DataProperty<Int32>.SetValue(Int32) DataProperty<Int32>.ValueToString(Int32) ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.StatesAndData.Properties Assembly : VRBuilder.StatesAndData.dll Syntax public abstract class StateDataPropertyBase : DataProperty<int>, IDataProperty<int>, IDataPropertyBase, ISceneObjectProperty Properties | Improve this Doc View Source StateType Returns the enum type for this state. Declaration public abstract Type StateType { get; } Property Value Type Description System.Type Implements IDataProperty<T> IDataPropertyBase ISceneObjectProperty"
  },
  "api/VRBuilder.StatesAndData.Properties.TextEventProperty.html": {
    "href": "api/VRBuilder.StatesAndData.Properties.TextEventProperty.html",
    "title": "Class TextEventProperty | VR Builder Documentation",
    "keywords": "Class TextEventProperty GenericEventProperty<T> implementation with text argument. Inheritance System.Object ProcessSceneObjectProperty GenericEventProperty < System.String > TextEventProperty Implements IGenericEventProperty < System.String > ISceneObjectProperty Inherited Members GenericEventProperty<String>.TriggerEvent(String) ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.StatesAndData.Properties Assembly : VRBuilder.StatesAndData.dll Syntax public class TextEventProperty : GenericEventProperty<string>, IGenericEventProperty<string>, ISceneObjectProperty Implements IGenericEventProperty<T> ISceneObjectProperty"
  },
  "api/VRBuilder.TextToSpeech.Audio.html": {
    "href": "api/VRBuilder.TextToSpeech.Audio.html",
    "title": "Namespace VRBuilder.TextToSpeech.Audio | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.TextToSpeech.Audio Classes TextToSpeechAudio This class retrieves and stores AudioClips generated based in a provided localized text. TextToSpeechContent Utility implementation of the ITextToSpeechContent interface that provides a default IsCached(Locale) method. Interfaces ITextToSpeechContent Interface implemented by content generated by a TTS provider."
  },
  "api/VRBuilder.TextToSpeech.Audio.ITextToSpeechContent.html": {
    "href": "api/VRBuilder.TextToSpeech.Audio.ITextToSpeechContent.html",
    "title": "Interface ITextToSpeechContent | VR Builder Documentation",
    "keywords": "Interface ITextToSpeechContent Interface implemented by content generated by a TTS provider. Namespace : VRBuilder.TextToSpeech.Audio Assembly : VRBuilder.TextToSpeech.dll Syntax public interface ITextToSpeechContent Properties | Improve this Doc View Source Text Text content to be fed to the TTS provider. Declaration string Text { get; } Property Value Type Description System.String Methods | Improve this Doc View Source IsCached(Locale) True if a generated file for this content exists in the project. Declaration bool IsCached(Locale locale) Parameters Type Name Description UnityEngine.Localization.Locale locale Returns Type Description System.Boolean"
  },
  "api/VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.html": {
    "href": "api/VRBuilder.TextToSpeech.Audio.TextToSpeechAudio.html",
    "title": "Class TextToSpeechAudio | VR Builder Documentation",
    "keywords": "Class TextToSpeechAudio This class retrieves and stores AudioClips generated based in a provided localized text. Inheritance System.Object TextToSpeechContent TextToSpeechAudio Implements ITextToSpeechContent ILocalizedContent IAudioData ICanBeEmpty Inherited Members TextToSpeechContent.IsCached(Locale) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.TextToSpeech.Audio Assembly : VRBuilder.TextToSpeech.dll Syntax [DataContract(IsReference = true)] [DisplayName(\"Play Text to Speech\")] public class TextToSpeechAudio : TextToSpeechContent, ITextToSpeechContent, ILocalizedContent, IAudioData, ICanBeEmpty Constructors | Improve this Doc View Source TextToSpeechAudio() Declaration protected TextToSpeechAudio() | Improve this Doc View Source TextToSpeechAudio(String) Declaration public TextToSpeechAudio(string text) Parameters Type Name Description System.String text Properties | Improve this Doc View Source AudioClip Declaration public AudioClip AudioClip { get; } Property Value Type Description AudioClip | Improve this Doc View Source ClipData Declaration public string ClipData { get; set; } Property Value Type Description System.String | Improve this Doc View Source HasAudioClip True when there is an Audio Clip loaded. Declaration public bool HasAudioClip { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLoading Returns true only when is busy loading an Audio Clip. Declaration public bool IsLoading { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Text Declaration [DataMember] [UsesSpecificProcessDrawer(\"MultiLineStringDrawer\")] [DisplayName(\"Text/Key\")] public override string Text { get; set; } Property Value Type Description System.String Overrides TextToSpeechContent.Text Methods | Improve this Doc View Source GetLocalizedContent() Declaration public override string GetLocalizedContent() Returns Type Description System.String Overrides TextToSpeechContent.GetLocalizedContent() | Improve this Doc View Source InitializeAudioClip() Creates the audio clip based on the provided parameters. Declaration public async void InitializeAudioClip() | Improve this Doc View Source IsEmpty() Declaration public bool IsEmpty() Returns Type Description System.Boolean Implements ITextToSpeechContent ILocalizedContent IAudioData ICanBeEmpty"
  },
  "api/VRBuilder.TextToSpeech.Audio.TextToSpeechContent.html": {
    "href": "api/VRBuilder.TextToSpeech.Audio.TextToSpeechContent.html",
    "title": "Class TextToSpeechContent | VR Builder Documentation",
    "keywords": "Class TextToSpeechContent Utility implementation of the ITextToSpeechContent interface that provides a default IsCached(Locale) method. Inheritance System.Object TextToSpeechContent TextToSpeechAudio Implements ITextToSpeechContent ILocalizedContent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.TextToSpeech.Audio Assembly : VRBuilder.TextToSpeech.dll Syntax public abstract class TextToSpeechContent : ITextToSpeechContent, ILocalizedContent Properties | Improve this Doc View Source Text Declaration public abstract string Text { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetLocalizedContent() Declaration public abstract string GetLocalizedContent() Returns Type Description System.String | Improve this Doc View Source IsCached(Locale) Declaration public virtual bool IsCached(Locale locale) Parameters Type Name Description UnityEngine.Localization.Locale locale Returns Type Description System.Boolean Implements ITextToSpeechContent ILocalizedContent"
  },
  "api/VRBuilder.TextToSpeech.FileTextToSpeechProvider.CouldNotLoadAudioFileException.html": {
    "href": "api/VRBuilder.TextToSpeech.FileTextToSpeechProvider.CouldNotLoadAudioFileException.html",
    "title": "Class FileTextToSpeechProvider.CouldNotLoadAudioFileException | VR Builder Documentation",
    "keywords": "Class FileTextToSpeechProvider.CouldNotLoadAudioFileException Inheritance System.Object System.Exception FileTextToSpeechProvider.CouldNotLoadAudioFileException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : VRBuilder.TextToSpeech Assembly : VRBuilder.TextToSpeech.dll Syntax public class CouldNotLoadAudioFileException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source CouldNotLoadAudioFileException(String) Declaration public CouldNotLoadAudioFileException(string msg) Parameters Type Name Description System.String msg | Improve this Doc View Source CouldNotLoadAudioFileException(String, Exception) Declaration public CouldNotLoadAudioFileException(string msg, Exception ex) Parameters Type Name Description System.String msg System.Exception ex Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/VRBuilder.TextToSpeech.FileTextToSpeechProvider.html": {
    "href": "api/VRBuilder.TextToSpeech.FileTextToSpeechProvider.html",
    "title": "Class FileTextToSpeechProvider | VR Builder Documentation",
    "keywords": "Class FileTextToSpeechProvider The disk based provider for text to speech, which is using the streaming assets folder. On the first step we check if the application has files provided on delivery. If there is no compatible file found, will download the file from the given fallback TextToSpeechProvider. Inheritance System.Object FileTextToSpeechProvider Implements ITextToSpeechProvider Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.TextToSpeech Assembly : VRBuilder.TextToSpeech.dll Syntax public class FileTextToSpeechProvider : ITextToSpeechProvider Constructors | Improve this Doc View Source FileTextToSpeechProvider(TextToSpeechConfiguration) Declaration public FileTextToSpeechProvider(TextToSpeechConfiguration configuration) Parameters Type Name Description TextToSpeechConfiguration configuration Fields | Improve this Doc View Source Configuration Declaration protected TextToSpeechConfiguration Configuration Field Value Type Description TextToSpeechConfiguration Methods | Improve this Doc View Source ConvertTextToSpeech(String, Locale) Declaration public async Task<AudioClip> ConvertTextToSpeech(string text, Locale locale) Parameters Type Name Description System.String text UnityEngine.Localization.Locale locale Returns Type Description System.Threading.Tasks.Task < AudioClip > | Improve this Doc View Source GetCachedFile(String) Retrieves a cached file. Declaration protected virtual async Task<byte[]> GetCachedFile(string filePath) Parameters Type Name Description System.String filePath Relative path where the cached file is stored. Returns Type Description System.Threading.Tasks.Task < System.Byte []> A byte array containing the contents of the file. | Improve this Doc View Source GetPathToFile(String) Returns the relative location were the file is cached. Declaration protected virtual string GetPathToFile(string filename) Parameters Type Name Description System.String filename Returns Type Description System.String | Improve this Doc View Source IsFileCached(String) Returns true is a file is cached in given relative filePath . Declaration protected virtual async Task<bool> IsFileCached(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source SetConfig(TextToSpeechConfiguration) Declaration public void SetConfig(TextToSpeechConfiguration configuration) Parameters Type Name Description TextToSpeechConfiguration configuration Implements ITextToSpeechProvider"
  },
  "api/VRBuilder.TextToSpeech.html": {
    "href": "api/VRBuilder.TextToSpeech.html",
    "title": "Namespace VRBuilder.TextToSpeech | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.TextToSpeech Classes FileTextToSpeechProvider The disk based provider for text to speech, which is using the streaming assets folder. On the first step we check if the application has files provided on delivery. If there is no compatible file found, will download the file from the given fallback TextToSpeechProvider. FileTextToSpeechProvider.CouldNotLoadAudioFileException RuntimeConfigurationExtensions TextToSpeech extensions methods for BaseRuntimeConfiguration . TextToSpeechConfiguration TextToSpeechProviderFactory This factory creates and provides ITextToSpeechProvider s. They are chosen by name, the following providers are registered by default: MicrosoftSapiTextToSpeechProvider WatsonTextToSpeechProvider GoogleTextToSpeechProvider TextToSpeechProviderFactory.BaseCreator Non-generic TTS creator. TextToSpeechProviderFactory.InvalidProviderException TextToSpeechProviderFactory.NoConfigurationFoundException TextToSpeechProviderFactory.NoMatchingProviderFoundException TextToSpeechUtils UnableToParseAudioFormatException Interfaces IAudioConverter Allows to convert audio into or out of AudioClips ITextToSpeechProvider TextToSpeechProvider allows to convert text to AudioClips. TextToSpeechProviderFactory.ITextToSpeechCreator"
  },
  "api/VRBuilder.TextToSpeech.IAudioConverter.html": {
    "href": "api/VRBuilder.TextToSpeech.IAudioConverter.html",
    "title": "Interface IAudioConverter | VR Builder Documentation",
    "keywords": "Interface IAudioConverter Allows to convert audio into or out of AudioClips Namespace : VRBuilder.TextToSpeech Assembly : VRBuilder.TextToSpeech.dll Syntax public interface IAudioConverter Methods | Improve this Doc View Source CreateAudioClipFromMp3(Byte[]) This method uses NAudio to convert a mp3 file given as byte array to an AudioClip in .wav format. Declaration AudioClip CreateAudioClipFromMp3(byte[] data) Parameters Type Name Description System.Byte [] data Data are the bytes of an mp3 file Returns Type Description AudioClip | Improve this Doc View Source CreateAudioClipFromWAVE(Byte[]) This method uses NAudio to convert a wave file given as byte array to an AudioClip in .wav format. Declaration AudioClip CreateAudioClipFromWAVE(byte[] data) Parameters Type Name Description System.Byte [] data Data are the bytes of a wave file Returns Type Description AudioClip | Improve this Doc View Source TryWriteAudioClipToFile(AudioClip, String) This method uses NAudio to create .wav file from an AudioClip. Declaration bool TryWriteAudioClipToFile(AudioClip audio, string filePath) Parameters Type Name Description AudioClip audio AudioClip to export System.String filePath Path with filename Returns Type Description System.Boolean Returns if the AudioClip could wrote to an file on disk"
  },
  "api/VRBuilder.TextToSpeech.ITextToSpeechProvider.html": {
    "href": "api/VRBuilder.TextToSpeech.ITextToSpeechProvider.html",
    "title": "Interface ITextToSpeechProvider | VR Builder Documentation",
    "keywords": "Interface ITextToSpeechProvider TextToSpeechProvider allows to convert text to AudioClips. Namespace : VRBuilder.TextToSpeech Assembly : VRBuilder.TextToSpeech.dll Syntax public interface ITextToSpeechProvider Methods | Improve this Doc View Source ConvertTextToSpeech(String, Locale) Loads the AudioClip file for the given text. Declaration Task<AudioClip> ConvertTextToSpeech(string text, Locale locale) Parameters Type Name Description System.String text UnityEngine.Localization.Locale locale Returns Type Description System.Threading.Tasks.Task < AudioClip > | Improve this Doc View Source SetConfig(TextToSpeechConfiguration) Used for setting the config file. Declaration void SetConfig(TextToSpeechConfiguration configuration) Parameters Type Name Description TextToSpeechConfiguration configuration"
  },
  "api/VRBuilder.TextToSpeech.RuntimeConfigurationExtensions.html": {
    "href": "api/VRBuilder.TextToSpeech.RuntimeConfigurationExtensions.html",
    "title": "Class RuntimeConfigurationExtensions | VR Builder Documentation",
    "keywords": "Class RuntimeConfigurationExtensions TextToSpeech extensions methods for BaseRuntimeConfiguration . Inheritance System.Object RuntimeConfigurationExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.TextToSpeech Assembly : VRBuilder.TextToSpeech.dll Syntax public static class RuntimeConfigurationExtensions Methods | Improve this Doc View Source GetTextToSpeechConfiguration(BaseRuntimeConfiguration) Return loaded TextToSpeechConfiguration . Declaration public static TextToSpeechConfiguration GetTextToSpeechConfiguration(this BaseRuntimeConfiguration runtimeConfiguration) Parameters Type Name Description BaseRuntimeConfiguration runtimeConfiguration Returns Type Description TextToSpeechConfiguration | Improve this Doc View Source SetTextToSpeechConfiguration(BaseRuntimeConfiguration, TextToSpeechConfiguration) Loads a new TextToSpeechConfiguration Declaration public static void SetTextToSpeechConfiguration(this BaseRuntimeConfiguration runtimeConfiguration, TextToSpeechConfiguration ttsConfiguration) Parameters Type Name Description BaseRuntimeConfiguration runtimeConfiguration TextToSpeechConfiguration ttsConfiguration"
  },
  "api/VRBuilder.TextToSpeech.TextToSpeechConfiguration.html": {
    "href": "api/VRBuilder.TextToSpeech.TextToSpeechConfiguration.html",
    "title": "Class TextToSpeechConfiguration | VR Builder Documentation",
    "keywords": "Class TextToSpeechConfiguration Inheritance System.Object SettingsObject < TextToSpeechConfiguration > TextToSpeechConfiguration Inherited Members SettingsObject<TextToSpeechConfiguration>.Instance SettingsObject<TextToSpeechConfiguration>.Save() Namespace : VRBuilder.TextToSpeech Assembly : VRBuilder.TextToSpeech.dll Syntax public class TextToSpeechConfiguration : SettingsObject<TextToSpeechConfiguration> Constructors | Improve this Doc View Source TextToSpeechConfiguration() Declaration public TextToSpeechConfiguration() Fields | Improve this Doc View Source Auth Used to authenticate at the provider, if required. Declaration public string Auth Field Value Type Description System.String | Improve this Doc View Source Provider Name of the ITextToSpeechProvider . Declaration public string Provider Field Value Type Description System.String | Improve this Doc View Source StreamingAssetCacheDirectoryName StreamingAsset directory name which is used to load/save audio files. Declaration public string StreamingAssetCacheDirectoryName Field Value Type Description System.String | Improve this Doc View Source Voice Voice that should be used. Declaration public string Voice Field Value Type Description System.String Remarks It depends on the chosen provider. Methods | Improve this Doc View Source LoadConfiguration() Loads the first existing TextToSpeechConfiguration found in the project. If any TextToSpeechConfiguration exist in the project it creates and saves a new instance with default values (editor only). Declaration public static TextToSpeechConfiguration LoadConfiguration() Returns Type Description TextToSpeechConfiguration Remarks When used in runtime, this method can only retrieve config files located under a Resources folder. Extension Methods TextToSpeechUtils.GetUniqueTextToSpeechFilename(TextToSpeechConfiguration, String, Locale, String)"
  },
  "api/VRBuilder.TextToSpeech.TextToSpeechProviderFactory.BaseCreator.html": {
    "href": "api/VRBuilder.TextToSpeech.TextToSpeechProviderFactory.BaseCreator.html",
    "title": "Class TextToSpeechProviderFactory.BaseCreator | VR Builder Documentation",
    "keywords": "Class TextToSpeechProviderFactory.BaseCreator Non-generic TTS creator. Inheritance System.Object TextToSpeechProviderFactory.BaseCreator Implements TextToSpeechProviderFactory.ITextToSpeechCreator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.TextToSpeech Assembly : VRBuilder.TextToSpeech.dll Syntax public class BaseCreator : TextToSpeechProviderFactory.ITextToSpeechCreator Constructors | Improve this Doc View Source BaseCreator(Type) Declaration public BaseCreator(Type textToSpeechProviderType) Parameters Type Name Description System.Type textToSpeechProviderType Methods | Improve this Doc View Source Create(TextToSpeechConfiguration) Declaration public ITextToSpeechProvider Create(TextToSpeechConfiguration configuration) Parameters Type Name Description TextToSpeechConfiguration configuration Returns Type Description ITextToSpeechProvider Implements TextToSpeechProviderFactory.ITextToSpeechCreator"
  },
  "api/VRBuilder.TextToSpeech.TextToSpeechProviderFactory.html": {
    "href": "api/VRBuilder.TextToSpeech.TextToSpeechProviderFactory.html",
    "title": "Class TextToSpeechProviderFactory | VR Builder Documentation",
    "keywords": "Class TextToSpeechProviderFactory This factory creates and provides ITextToSpeechProvider s. They are chosen by name, the following providers are registered by default: MicrosoftSapiTextToSpeechProvider WatsonTextToSpeechProvider GoogleTextToSpeechProvider Inheritance System.Object Singleton < TextToSpeechProviderFactory > TextToSpeechProviderFactory Inherited Members Singleton<TextToSpeechProviderFactory>.Instance System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.TextToSpeech Assembly : VRBuilder.TextToSpeech.dll Syntax public class TextToSpeechProviderFactory : Singleton<TextToSpeechProviderFactory> Constructors | Improve this Doc View Source TextToSpeechProviderFactory() Declaration public TextToSpeechProviderFactory() Methods | Improve this Doc View Source CreateProvider() Creates a provider, always loads the actual text to speech config to set it up. Declaration public ITextToSpeechProvider CreateProvider() Returns Type Description ITextToSpeechProvider | Improve this Doc View Source CreateProvider(TextToSpeechConfiguration) Creates a provider with given config. Declaration public ITextToSpeechProvider CreateProvider(TextToSpeechConfiguration configuration) Parameters Type Name Description TextToSpeechConfiguration configuration Returns Type Description ITextToSpeechProvider | Improve this Doc View Source RegisterProvider(Type) Add a provider of the specified type. Declaration public void RegisterProvider(Type textToSpeechProviderType) Parameters Type Name Description System.Type textToSpeechProviderType"
  },
  "api/VRBuilder.TextToSpeech.TextToSpeechProviderFactory.InvalidProviderException.html": {
    "href": "api/VRBuilder.TextToSpeech.TextToSpeechProviderFactory.InvalidProviderException.html",
    "title": "Class TextToSpeechProviderFactory.InvalidProviderException | VR Builder Documentation",
    "keywords": "Class TextToSpeechProviderFactory.InvalidProviderException Inheritance System.Object System.Exception TextToSpeechProviderFactory.InvalidProviderException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : VRBuilder.TextToSpeech Assembly : VRBuilder.TextToSpeech.dll Syntax public class InvalidProviderException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source InvalidProviderException(String) Declaration public InvalidProviderException(string msg) Parameters Type Name Description System.String msg Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/VRBuilder.TextToSpeech.TextToSpeechProviderFactory.ITextToSpeechCreator.html": {
    "href": "api/VRBuilder.TextToSpeech.TextToSpeechProviderFactory.ITextToSpeechCreator.html",
    "title": "Interface TextToSpeechProviderFactory.ITextToSpeechCreator | VR Builder Documentation",
    "keywords": "Interface TextToSpeechProviderFactory.ITextToSpeechCreator Namespace : VRBuilder.TextToSpeech Assembly : VRBuilder.TextToSpeech.dll Syntax public interface ITextToSpeechCreator Methods | Improve this Doc View Source Create(TextToSpeechConfiguration) Declaration ITextToSpeechProvider Create(TextToSpeechConfiguration configuration) Parameters Type Name Description TextToSpeechConfiguration configuration Returns Type Description ITextToSpeechProvider"
  },
  "api/VRBuilder.TextToSpeech.TextToSpeechProviderFactory.NoConfigurationFoundException.html": {
    "href": "api/VRBuilder.TextToSpeech.TextToSpeechProviderFactory.NoConfigurationFoundException.html",
    "title": "Class TextToSpeechProviderFactory.NoConfigurationFoundException | VR Builder Documentation",
    "keywords": "Class TextToSpeechProviderFactory.NoConfigurationFoundException Inheritance System.Object System.Exception TextToSpeechProviderFactory.NoConfigurationFoundException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : VRBuilder.TextToSpeech Assembly : VRBuilder.TextToSpeech.dll Syntax public class NoConfigurationFoundException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source NoConfigurationFoundException(String) Declaration public NoConfigurationFoundException(string msg) Parameters Type Name Description System.String msg Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/VRBuilder.TextToSpeech.TextToSpeechProviderFactory.NoMatchingProviderFoundException.html": {
    "href": "api/VRBuilder.TextToSpeech.TextToSpeechProviderFactory.NoMatchingProviderFoundException.html",
    "title": "Class TextToSpeechProviderFactory.NoMatchingProviderFoundException | VR Builder Documentation",
    "keywords": "Class TextToSpeechProviderFactory.NoMatchingProviderFoundException Inheritance System.Object System.Exception TextToSpeechProviderFactory.NoMatchingProviderFoundException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : VRBuilder.TextToSpeech Assembly : VRBuilder.TextToSpeech.dll Syntax public class NoMatchingProviderFoundException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source NoMatchingProviderFoundException(String) Declaration public NoMatchingProviderFoundException(string msg) Parameters Type Name Description System.String msg Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/VRBuilder.TextToSpeech.TextToSpeechUtils.html": {
    "href": "api/VRBuilder.TextToSpeech.TextToSpeechUtils.html",
    "title": "Class TextToSpeechUtils | VR Builder Documentation",
    "keywords": "Class TextToSpeechUtils Inheritance System.Object TextToSpeechUtils Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.TextToSpeech Assembly : VRBuilder.TextToSpeech.dll Syntax public static class TextToSpeechUtils Methods | Improve this Doc View Source GetUniqueTextToSpeechFilename(TextToSpeechConfiguration, String, Locale, String) Returns filename which uniquly identifies the audio by Backend, Language, Voice and also the text. Declaration public static string GetUniqueTextToSpeechFilename(this TextToSpeechConfiguration configuration, string text, Locale locale, string format = \"wav\") Parameters Type Name Description TextToSpeechConfiguration configuration System.String text UnityEngine.Localization.Locale locale System.String format Returns Type Description System.String | Improve this Doc View Source ShortsInByteArrayToFloats(Byte[]) The result comes in byte array, but there are actually short values inside (ranged from short.Min to short.Max). Declaration public static float[] ShortsInByteArrayToFloats(byte[] shorts) Parameters Type Name Description System.Byte [] shorts Returns Type Description System.Single []"
  },
  "api/VRBuilder.TextToSpeech.UnableToParseAudioFormatException.html": {
    "href": "api/VRBuilder.TextToSpeech.UnableToParseAudioFormatException.html",
    "title": "Class UnableToParseAudioFormatException | VR Builder Documentation",
    "keywords": "Class UnableToParseAudioFormatException Inheritance System.Object System.Exception UnableToParseAudioFormatException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : VRBuilder.TextToSpeech Assembly : VRBuilder.TextToSpeech.dll Syntax public class UnableToParseAudioFormatException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source UnableToParseAudioFormatException(String) Declaration public UnableToParseAudioFormatException(string msg) Parameters Type Name Description System.String msg Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/VRBuilder.TrackAndMeasure.Behaviors.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Behaviors.html",
    "title": "Namespace VRBuilder.TrackAndMeasure.Behaviors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.TrackAndMeasure.Behaviors Classes StartTimerBehavior A behavior that starts a TimerProperty . StartTimerBehavior.EntityData The StartTimerBehavior behavior data. StopTimerBehavior A behavior that stops a TimerProperty . StopTimerBehavior.EntityData The StopTimerBehavior behavior data. UpdateScoreBehavior A behavior that updates a score and can provide feedback for it. UpdateScoreBehavior.EntityData The UpdateScoreBehavior behavior data."
  },
  "api/VRBuilder.TrackAndMeasure.Behaviors.StartTimerBehavior.EntityData.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Behaviors.StartTimerBehavior.EntityData.html",
    "title": "Class StartTimerBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class StartTimerBehavior.EntityData The StartTimerBehavior behavior data. Inheritance System.Object StartTimerBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.TrackAndMeasure.Behaviors Assembly : VRBuilder.TrackAndMeasure.dll Syntax [DisplayName(\"Start Timer\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source IsCountdown Declaration [DataMember] [DisplayName(\"Is Countdown\")] public bool IsCountdown { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source TimerProperties Declaration [DataMember] [DisplayName(\"Timer\")] public MultipleScenePropertyReference<ITimerProperty> TimerProperties { get; set; } Property Value Type Description MultipleScenePropertyReference < ITimerProperty > | Improve this Doc View Source TimerProperty Declaration [DataMember] [Obsolete(\"Use TimerProperties instead.\")] [LegacyProperty(\"TimerProperties\")] public ScenePropertyReference<ITimerProperty> TimerProperty { get; set; } Property Value Type Description ScenePropertyReference < ITimerProperty > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.TrackAndMeasure.Behaviors.StartTimerBehavior.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Behaviors.StartTimerBehavior.html",
    "title": "Class StartTimerBehavior | VR Builder Documentation",
    "keywords": "Class StartTimerBehavior A behavior that starts a TimerProperty . Inheritance System.Object Entity < StartTimerBehavior.EntityData > Behavior < StartTimerBehavior.EntityData > StartTimerBehavior Implements IDataOwner < StartTimerBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<StartTimerBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<StartTimerBehavior.EntityData>.Clone() Entity<StartTimerBehavior.EntityData>.Data Entity<StartTimerBehavior.EntityData>.IDataOwner.Data Entity<StartTimerBehavior.EntityData>.LifeCycle Entity<StartTimerBehavior.EntityData>.Parent Entity<StartTimerBehavior.EntityData>.GetActiveProcess() Entity<StartTimerBehavior.EntityData>.GetDeactivatingProcess() Entity<StartTimerBehavior.EntityData>.GetConfigurator() Entity<StartTimerBehavior.EntityData>.Configure(IMode) Entity<StartTimerBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.TrackAndMeasure.Behaviors Assembly : VRBuilder.TrackAndMeasure.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/track-measure-add-on\")] public class StartTimerBehavior : Behavior<StartTimerBehavior.EntityData>, IDataOwner<StartTimerBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source StartTimerBehavior() Declaration [JsonConstructor] public StartTimerBehavior() | Improve this Doc View Source StartTimerBehavior(Guid, Boolean) Declaration public StartTimerBehavior(Guid propertyGuid, bool isCountdown) Parameters Type Name Description System.Guid propertyGuid System.Boolean isCountdown | Improve this Doc View Source StartTimerBehavior(ITimerProperty, Boolean) Declaration public StartTimerBehavior(ITimerProperty property, bool isCountdown) Parameters Type Name Description ITimerProperty property System.Boolean isCountdown Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.TrackAndMeasure.Behaviors.StartTimerBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.TrackAndMeasure.Behaviors.StopTimerBehavior.EntityData.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Behaviors.StopTimerBehavior.EntityData.html",
    "title": "Class StopTimerBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class StopTimerBehavior.EntityData The StopTimerBehavior behavior data. Inheritance System.Object StopTimerBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.TrackAndMeasure.Behaviors Assembly : VRBuilder.TrackAndMeasure.dll Syntax [DisplayName(\"Stop Timer\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source TimerProperties Declaration [DataMember] [DisplayName(\"Timer\")] public MultipleScenePropertyReference<ITimerProperty> TimerProperties { get; set; } Property Value Type Description MultipleScenePropertyReference < ITimerProperty > | Improve this Doc View Source TimerProperty Declaration [DataMember] [Obsolete(\"Use TimerProperties instead.\")] [LegacyProperty(\"TimerProperties\")] public ScenePropertyReference<ITimerProperty> TimerProperty { get; set; } Property Value Type Description ScenePropertyReference < ITimerProperty > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.TrackAndMeasure.Behaviors.StopTimerBehavior.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Behaviors.StopTimerBehavior.html",
    "title": "Class StopTimerBehavior | VR Builder Documentation",
    "keywords": "Class StopTimerBehavior A behavior that stops a TimerProperty . Inheritance System.Object Entity < StopTimerBehavior.EntityData > Behavior < StopTimerBehavior.EntityData > StopTimerBehavior Implements IDataOwner < StopTimerBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<StopTimerBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<StopTimerBehavior.EntityData>.Clone() Entity<StopTimerBehavior.EntityData>.Data Entity<StopTimerBehavior.EntityData>.IDataOwner.Data Entity<StopTimerBehavior.EntityData>.LifeCycle Entity<StopTimerBehavior.EntityData>.Parent Entity<StopTimerBehavior.EntityData>.GetActiveProcess() Entity<StopTimerBehavior.EntityData>.GetDeactivatingProcess() Entity<StopTimerBehavior.EntityData>.GetConfigurator() Entity<StopTimerBehavior.EntityData>.Configure(IMode) Entity<StopTimerBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.TrackAndMeasure.Behaviors Assembly : VRBuilder.TrackAndMeasure.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/track-measure-add-on\")] public class StopTimerBehavior : Behavior<StopTimerBehavior.EntityData>, IDataOwner<StopTimerBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source StopTimerBehavior() Declaration [JsonConstructor] public StopTimerBehavior() | Improve this Doc View Source StopTimerBehavior(Guid) Declaration public StopTimerBehavior(Guid propertyGuid) Parameters Type Name Description System.Guid propertyGuid | Improve this Doc View Source StopTimerBehavior(ITimerProperty) Declaration public StopTimerBehavior(ITimerProperty property) Parameters Type Name Description ITimerProperty property Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.TrackAndMeasure.Behaviors.StopTimerBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.TrackAndMeasure.Behaviors.UpdateScoreBehavior.EntityData.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Behaviors.UpdateScoreBehavior.EntityData.html",
    "title": "Class UpdateScoreBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class UpdateScoreBehavior.EntityData The UpdateScoreBehavior behavior data. Inheritance System.Object UpdateScoreBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.TrackAndMeasure.Behaviors Assembly : VRBuilder.TrackAndMeasure.dll Syntax [DisplayName(\"Update Score\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source DataProperty Declaration [DataMember] [Obsolete(\"Use ScoreProperty instead.\")] [LegacyProperty(\"ScoreProperty\")] public ScenePropertyReference<IDataProperty<float>> DataProperty { get; set; } Property Value Type Description ScenePropertyReference < IDataProperty < System.Single >> | Improve this Doc View Source FeedbackPosition Declaration [DataMember] [DisplayName(\"Feedback position provider\")] public SingleSceneObjectReference FeedbackPosition { get; set; } Property Value Type Description SingleSceneObjectReference | Improve this Doc View Source FeedbackPositionProvider Declaration [DataMember] [Obsolete(\"Use FeedbackPosition instead.\")] [LegacyProperty(\"FeedbackPosition\")] public SceneObjectReference FeedbackPositionProvider { get; set; } Property Value Type Description SceneObjectReference | Improve this Doc View Source FeedbackProperties Declaration [DataMember] [DisplayName(\"Feedback properties\")] public MultipleScenePropertyReference<IScoreFeedbackProperty> FeedbackProperties { get; set; } Property Value Type Description MultipleScenePropertyReference < IScoreFeedbackProperty > | Improve this Doc View Source FeedbackProperty Declaration [DataMember] [Obsolete(\"Use FeedbackProperties instead.\")] [LegacyProperty(\"FeedbackProperties\")] public ScenePropertyReference<IScoreFeedbackProperty> FeedbackProperty { get; set; } Property Value Type Description ScenePropertyReference < IScoreFeedbackProperty > | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source ScoreProperty Declaration [DataMember] [DisplayName(\"Score data property\")] public SingleScenePropertyReference<IDataProperty<float>> ScoreProperty { get; set; } Property Value Type Description SingleScenePropertyReference < IDataProperty < System.Single >> | Improve this Doc View Source ValueDelta Declaration [DataMember] [DisplayName(\"Score increase\")] public float ValueDelta { get; set; } Property Value Type Description System.Single Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.TrackAndMeasure.Behaviors.UpdateScoreBehavior.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Behaviors.UpdateScoreBehavior.html",
    "title": "Class UpdateScoreBehavior | VR Builder Documentation",
    "keywords": "Class UpdateScoreBehavior A behavior that updates a score and can provide feedback for it. Inheritance System.Object Entity < UpdateScoreBehavior.EntityData > Behavior < UpdateScoreBehavior.EntityData > UpdateScoreBehavior Implements IDataOwner < UpdateScoreBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<UpdateScoreBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<UpdateScoreBehavior.EntityData>.Clone() Entity<UpdateScoreBehavior.EntityData>.Data Entity<UpdateScoreBehavior.EntityData>.IDataOwner.Data Entity<UpdateScoreBehavior.EntityData>.LifeCycle Entity<UpdateScoreBehavior.EntityData>.Parent Entity<UpdateScoreBehavior.EntityData>.GetActiveProcess() Entity<UpdateScoreBehavior.EntityData>.GetDeactivatingProcess() Entity<UpdateScoreBehavior.EntityData>.GetConfigurator() Entity<UpdateScoreBehavior.EntityData>.Configure(IMode) Entity<UpdateScoreBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.TrackAndMeasure.Behaviors Assembly : VRBuilder.TrackAndMeasure.dll Syntax [DataContract(IsReference = true)] [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/track-measure-add-on\")] public class UpdateScoreBehavior : Behavior<UpdateScoreBehavior.EntityData>, IDataOwner<UpdateScoreBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source UpdateScoreBehavior() Declaration [JsonConstructor] public UpdateScoreBehavior() | Improve this Doc View Source UpdateScoreBehavior(Guid, Guid, Single, Guid) Declaration public UpdateScoreBehavior(Guid feedbackPropertyGuid, Guid dataPropertyGuid, float pointDelta, Guid positionProviderGuid) Parameters Type Name Description System.Guid feedbackPropertyGuid System.Guid dataPropertyGuid System.Single pointDelta System.Guid positionProviderGuid | Improve this Doc View Source UpdateScoreBehavior(IScoreFeedbackProperty, IDataProperty<Single>, Single, ISceneObject) Declaration public UpdateScoreBehavior(IScoreFeedbackProperty feedbackProperty, IDataProperty<float> dataProperty, float pointDelta, ISceneObject positionProvider) Parameters Type Name Description IScoreFeedbackProperty feedbackProperty IDataProperty < System.Single > dataProperty System.Single pointDelta ISceneObject positionProvider Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.TrackAndMeasure.Behaviors.UpdateScoreBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.TrackAndMeasure.Components.AudioScoreFeedback.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Components.AudioScoreFeedback.html",
    "title": "Class AudioScoreFeedback | VR Builder Documentation",
    "keywords": "Class AudioScoreFeedback Provides score feedback by playing a sound at the provided location. Inheritance System.Object AudioScoreFeedback Implements IScoreFeedbackProvider Namespace : VRBuilder.TrackAndMeasure.Components Assembly : VRBuilder.TrackAndMeasure.dll Syntax public class AudioScoreFeedback : MonoBehaviour, IScoreFeedbackProvider Methods | Improve this Doc View Source TriggerFeedback(Single, Single, Transform) Declaration public void TriggerFeedback(float scoreDelta, float finalScore, Transform positionProvider) Parameters Type Name Description System.Single scoreDelta System.Single finalScore Transform positionProvider Implements IScoreFeedbackProvider"
  },
  "api/VRBuilder.TrackAndMeasure.Components.BooleanDisplay.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Components.BooleanDisplay.html",
    "title": "Class BooleanDisplay | VR Builder Documentation",
    "keywords": "Class BooleanDisplay Displays a BooleanDataProperty on a text mesh. Inheritance System.Object DataPropertyDisplay < System.Boolean > BooleanDisplay Inherited Members DataPropertyDisplay<Boolean>.text DataPropertyDisplay<Boolean>.textMesh DataPropertyDisplay<Boolean>.OnEnable() DataPropertyDisplay<Boolean>.OnDisable() Namespace : VRBuilder.TrackAndMeasure.Components Assembly : VRBuilder.TrackAndMeasure.dll Syntax public class BooleanDisplay : DataPropertyDisplay<bool> Properties | Improve this Doc View Source DataProperty Declaration public override IDataProperty<bool> DataProperty { get; } Property Value Type Description IDataProperty < System.Boolean > Overrides VRBuilder.TrackAndMeasure.Components.DataPropertyDisplay<System.Boolean>.DataProperty Methods | Improve this Doc View Source UpdateText() Declaration protected override void UpdateText() Overrides VRBuilder.TrackAndMeasure.Components.DataPropertyDisplay<System.Boolean>.UpdateText()"
  },
  "api/VRBuilder.TrackAndMeasure.Components.DataPropertyDisplay-1.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Components.DataPropertyDisplay-1.html",
    "title": "Class DataPropertyDisplay<T> | VR Builder Documentation",
    "keywords": "Class DataPropertyDisplay<T> Displays a data property's value on a TMPro.TextMeshPro component. Inheritance System.Object DataPropertyDisplay<T> BooleanDisplay NumberDisplay TextDisplay TimeDisplay Namespace : VRBuilder.TrackAndMeasure.Components Assembly : VRBuilder.TrackAndMeasure.dll Syntax public abstract class DataPropertyDisplay<T> : MonoBehaviour Type Parameters Name Description T Fields | Improve this Doc View Source text Declaration protected string text Field Value Type Description System.String | Improve this Doc View Source textMesh Declaration protected TextMeshPro textMesh Field Value Type Description TMPro.TextMeshPro Properties | Improve this Doc View Source DataProperty IDataProperty<T> to be displayed. Declaration public abstract IDataProperty<T> DataProperty { get; } Property Value Type Description IDataProperty <T> Methods | Improve this Doc View Source OnDisable() Declaration protected virtual void OnDisable() | Improve this Doc View Source OnEnable() Declaration protected virtual void OnEnable() | Improve this Doc View Source UpdateText() Updates the displayed text. Declaration protected virtual void UpdateText()"
  },
  "api/VRBuilder.TrackAndMeasure.Components.FloatingTextMesh.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Components.FloatingTextMesh.html",
    "title": "Class FloatingTextMesh | VR Builder Documentation",
    "keywords": "Class FloatingTextMesh Makes the game object float up and destroy itself after a time. Configures a TMPro.TextMeshPro on the same object. Inheritance System.Object FloatingTextMesh Namespace : VRBuilder.TrackAndMeasure.Components Assembly : VRBuilder.TrackAndMeasure.dll Syntax public class FloatingTextMesh : MonoBehaviour Methods | Improve this Doc View Source Initialize(String) Declaration public void Initialize(string text) Parameters Type Name Description System.String text"
  },
  "api/VRBuilder.TrackAndMeasure.Components.FloatingTextScoreFeedback.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Components.FloatingTextScoreFeedback.html",
    "title": "Class FloatingTextScoreFeedback | VR Builder Documentation",
    "keywords": "Class FloatingTextScoreFeedback Provides score feedback by displaying a floating text showing the score increase. Inheritance System.Object FloatingTextScoreFeedback Implements IScoreFeedbackProvider Namespace : VRBuilder.TrackAndMeasure.Components Assembly : VRBuilder.TrackAndMeasure.dll Syntax public class FloatingTextScoreFeedback : MonoBehaviour, IScoreFeedbackProvider Fields | Improve this Doc View Source textMeshPrefab Declaration protected FloatingTextMesh textMeshPrefab Field Value Type Description FloatingTextMesh Methods | Improve this Doc View Source TriggerFeedback(Single, Single, Transform) Declaration public void TriggerFeedback(float scoreDelta, float finalScore, Transform positionProvider) Parameters Type Name Description System.Single scoreDelta System.Single finalScore Transform positionProvider Implements IScoreFeedbackProvider"
  },
  "api/VRBuilder.TrackAndMeasure.Components.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Components.html",
    "title": "Namespace VRBuilder.TrackAndMeasure.Components | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.TrackAndMeasure.Components Classes AudioScoreFeedback Provides score feedback by playing a sound at the provided location. BooleanDisplay Displays a BooleanDataProperty on a text mesh. DataPropertyDisplay<T> Displays a data property's value on a TMPro.TextMeshPro component. FloatingTextMesh Makes the game object float up and destroy itself after a time. Configures a TMPro.TextMeshPro on the same object. FloatingTextScoreFeedback Provides score feedback by displaying a floating text showing the score increase. NumberDisplay Displays a NumberDataProperty on a text mesh. TextDisplay Displays a TextDataProperty on a text mesh. TimeDisplay Displays a NumberDataProperty representing a value in seconds as time on a text mesh. Interfaces IScoreFeedbackProvider An object implementing this interface can provide feedback when a numerical score is updated."
  },
  "api/VRBuilder.TrackAndMeasure.Components.IScoreFeedbackProvider.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Components.IScoreFeedbackProvider.html",
    "title": "Interface IScoreFeedbackProvider | VR Builder Documentation",
    "keywords": "Interface IScoreFeedbackProvider An object implementing this interface can provide feedback when a numerical score is updated. Namespace : VRBuilder.TrackAndMeasure.Components Assembly : VRBuilder.TrackAndMeasure.dll Syntax public interface IScoreFeedbackProvider Methods | Improve this Doc View Source TriggerFeedback(Single, Single, Transform) Triggers the implemented feedback. Declaration void TriggerFeedback(float scoreDelta, float finalScore, Transform positionProvider) Parameters Type Name Description System.Single scoreDelta System.Single finalScore Transform positionProvider"
  },
  "api/VRBuilder.TrackAndMeasure.Components.NumberDisplay.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Components.NumberDisplay.html",
    "title": "Class NumberDisplay | VR Builder Documentation",
    "keywords": "Class NumberDisplay Displays a NumberDataProperty on a text mesh. Inheritance System.Object DataPropertyDisplay < System.Single > NumberDisplay Inherited Members DataPropertyDisplay<Single>.text DataPropertyDisplay<Single>.textMesh DataPropertyDisplay<Single>.UpdateText() DataPropertyDisplay<Single>.OnEnable() DataPropertyDisplay<Single>.OnDisable() Namespace : VRBuilder.TrackAndMeasure.Components Assembly : VRBuilder.TrackAndMeasure.dll Syntax public class NumberDisplay : DataPropertyDisplay<float> Properties | Improve this Doc View Source DataProperty Declaration public override IDataProperty<float> DataProperty { get; } Property Value Type Description IDataProperty < System.Single > Overrides VRBuilder.TrackAndMeasure.Components.DataPropertyDisplay<System.Single>.DataProperty"
  },
  "api/VRBuilder.TrackAndMeasure.Components.TextDisplay.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Components.TextDisplay.html",
    "title": "Class TextDisplay | VR Builder Documentation",
    "keywords": "Class TextDisplay Displays a TextDataProperty on a text mesh. Inheritance System.Object DataPropertyDisplay < System.String > TextDisplay Inherited Members DataPropertyDisplay<String>.text DataPropertyDisplay<String>.textMesh DataPropertyDisplay<String>.UpdateText() DataPropertyDisplay<String>.OnEnable() DataPropertyDisplay<String>.OnDisable() Namespace : VRBuilder.TrackAndMeasure.Components Assembly : VRBuilder.TrackAndMeasure.dll Syntax public class TextDisplay : DataPropertyDisplay<string> Properties | Improve this Doc View Source DataProperty Declaration public override IDataProperty<string> DataProperty { get; } Property Value Type Description IDataProperty < System.String > Overrides VRBuilder.TrackAndMeasure.Components.DataPropertyDisplay<System.String>.DataProperty"
  },
  "api/VRBuilder.TrackAndMeasure.Components.TimeDisplay.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Components.TimeDisplay.html",
    "title": "Class TimeDisplay | VR Builder Documentation",
    "keywords": "Class TimeDisplay Displays a NumberDataProperty representing a value in seconds as time on a text mesh. Inheritance System.Object DataPropertyDisplay < System.Single > TimeDisplay Inherited Members DataPropertyDisplay<Single>.text DataPropertyDisplay<Single>.textMesh DataPropertyDisplay<Single>.OnEnable() DataPropertyDisplay<Single>.OnDisable() Namespace : VRBuilder.TrackAndMeasure.Components Assembly : VRBuilder.TrackAndMeasure.dll Syntax public class TimeDisplay : DataPropertyDisplay<float> Properties | Improve this Doc View Source DataProperty Declaration public override IDataProperty<float> DataProperty { get; } Property Value Type Description IDataProperty < System.Single > Overrides VRBuilder.TrackAndMeasure.Components.DataPropertyDisplay<System.Single>.DataProperty Methods | Improve this Doc View Source UpdateText() Declaration protected override void UpdateText() Overrides VRBuilder.TrackAndMeasure.Components.DataPropertyDisplay<System.Single>.UpdateText()"
  },
  "api/VRBuilder.TrackAndMeasure.Properties.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Properties.html",
    "title": "Namespace VRBuilder.TrackAndMeasure.Properties | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.TrackAndMeasure.Properties Classes ScoreFeedbackProperty Implementation that triggers feedback by iterating through all IScoreFeedbackProvider s on the game object or its children. TimerProperty Property that acts as a timer and stores time on the required NumberDataProperty . TimerPropertyEventArgs Event args for TimerProperty . Interfaces IScoreFeedbackProperty Property for an object providing feedback over a numerical score. ITimerProperty Property that acts as a timer."
  },
  "api/VRBuilder.TrackAndMeasure.Properties.IScoreFeedbackProperty.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Properties.IScoreFeedbackProperty.html",
    "title": "Interface IScoreFeedbackProperty | VR Builder Documentation",
    "keywords": "Interface IScoreFeedbackProperty Property for an object providing feedback over a numerical score. Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.TrackAndMeasure.Properties Assembly : VRBuilder.TrackAndMeasure.dll Syntax public interface IScoreFeedbackProperty : ISceneObjectProperty Methods | Improve this Doc View Source TriggerFeedback(Single, Single, Transform) Triggers the feedback. Declaration void TriggerFeedback(float scoreDelta, float finalScore, Transform position) Parameters Type Name Description System.Single scoreDelta System.Single finalScore Transform position"
  },
  "api/VRBuilder.TrackAndMeasure.Properties.ITimerProperty.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Properties.ITimerProperty.html",
    "title": "Interface ITimerProperty | VR Builder Documentation",
    "keywords": "Interface ITimerProperty Property that acts as a timer. Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.TrackAndMeasure.Properties Assembly : VRBuilder.TrackAndMeasure.dll Syntax public interface ITimerProperty : ISceneObjectProperty Properties | Improve this Doc View Source IsCountdown If true, the timer will count down instead of up. Declaration bool IsCountdown { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsRunning True when the timer is active. Declaration bool IsRunning { get; } Property Value Type Description System.Boolean | Improve this Doc View Source TimerStart Raised when the timer starts. Declaration UnityEvent<TimerPropertyEventArgs> TimerStart { get; } Property Value Type Description UnityEvent < TimerPropertyEventArgs > | Improve this Doc View Source TimerStop Raised when the timer is paused. Declaration UnityEvent<TimerPropertyEventArgs> TimerStop { get; } Property Value Type Description UnityEvent < TimerPropertyEventArgs > | Improve this Doc View Source TimerZero Raised when a timer reaches zero. Declaration UnityEvent<TimerPropertyEventArgs> TimerZero { get; } Property Value Type Description UnityEvent < TimerPropertyEventArgs > Methods | Improve this Doc View Source StartTimer() Starts the timer. Declaration void StartTimer() | Improve this Doc View Source StopTimer() Stops the timer. Declaration void StopTimer() Events | Improve this Doc View Source TimerAtZero Raised when a timer reaches zero. Declaration [Obsolete(\"Use TimerZero instead.\")] event EventHandler<EventArgs> TimerAtZero Event Type Type Description System.EventHandler < System.EventArgs > | Improve this Doc View Source TimerStarted Raised when the timer starts. Declaration [Obsolete(\"Use TimerStart instead.\")] event EventHandler<EventArgs> TimerStarted Event Type Type Description System.EventHandler < System.EventArgs > | Improve this Doc View Source TimerStopped Raised when the timer is paused. Declaration [Obsolete(\"Use TimerStop instead.\")] event EventHandler<EventArgs> TimerStopped Event Type Type Description System.EventHandler < System.EventArgs >"
  },
  "api/VRBuilder.TrackAndMeasure.Properties.ScoreFeedbackProperty.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Properties.ScoreFeedbackProperty.html",
    "title": "Class ScoreFeedbackProperty | VR Builder Documentation",
    "keywords": "Class ScoreFeedbackProperty Implementation that triggers feedback by iterating through all IScoreFeedbackProvider s on the game object or its children. Inheritance System.Object ProcessSceneObjectProperty ScoreFeedbackProperty Implements IScoreFeedbackProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.TrackAndMeasure.Properties Assembly : VRBuilder.TrackAndMeasure.dll Syntax public class ScoreFeedbackProperty : ProcessSceneObjectProperty, IScoreFeedbackProperty, ISceneObjectProperty Methods | Improve this Doc View Source TriggerFeedback(Single, Single, Transform) Declaration public void TriggerFeedback(float scoreDelta, float finalScore, Transform position) Parameters Type Name Description System.Single scoreDelta System.Single finalScore Transform position Implements IScoreFeedbackProperty ISceneObjectProperty"
  },
  "api/VRBuilder.TrackAndMeasure.Properties.TimerProperty.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Properties.TimerProperty.html",
    "title": "Class TimerProperty | VR Builder Documentation",
    "keywords": "Class TimerProperty Property that acts as a timer and stores time on the required NumberDataProperty . Inheritance System.Object ProcessSceneObjectProperty TimerProperty Implements ITimerProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.TrackAndMeasure.Properties Assembly : VRBuilder.TrackAndMeasure.dll Syntax public class TimerProperty : ProcessSceneObjectProperty, ITimerProperty, ISceneObjectProperty Properties | Improve this Doc View Source IsCountdown Declaration public bool IsCountdown { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsRunning Declaration public bool IsRunning { get; } Property Value Type Description System.Boolean | Improve this Doc View Source TimerStart Declaration public UnityEvent<TimerPropertyEventArgs> TimerStart { get; } Property Value Type Description UnityEvent < TimerPropertyEventArgs > | Improve this Doc View Source TimerStop Declaration public UnityEvent<TimerPropertyEventArgs> TimerStop { get; } Property Value Type Description UnityEvent < TimerPropertyEventArgs > | Improve this Doc View Source TimerZero Declaration public UnityEvent<TimerPropertyEventArgs> TimerZero { get; } Property Value Type Description UnityEvent < TimerPropertyEventArgs > Methods | Improve this Doc View Source StartTimer() Declaration public void StartTimer() | Improve this Doc View Source StopTimer() Declaration public void StopTimer() Events | Improve this Doc View Source TimerAtZero Declaration public event EventHandler<EventArgs> TimerAtZero Event Type Type Description System.EventHandler < System.EventArgs > | Improve this Doc View Source TimerStarted Declaration public event EventHandler<EventArgs> TimerStarted Event Type Type Description System.EventHandler < System.EventArgs > | Improve this Doc View Source TimerStopped Declaration public event EventHandler<EventArgs> TimerStopped Event Type Type Description System.EventHandler < System.EventArgs > Implements ITimerProperty ISceneObjectProperty"
  },
  "api/VRBuilder.TrackAndMeasure.Properties.TimerPropertyEventArgs.html": {
    "href": "api/VRBuilder.TrackAndMeasure.Properties.TimerPropertyEventArgs.html",
    "title": "Class TimerPropertyEventArgs | VR Builder Documentation",
    "keywords": "Class TimerPropertyEventArgs Event args for TimerProperty . Inheritance System.Object System.EventArgs TimerPropertyEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.TrackAndMeasure.Properties Assembly : VRBuilder.TrackAndMeasure.dll Syntax public class TimerPropertyEventArgs : EventArgs"
  },
  "api/VRBuilder.UI.Behaviors.html": {
    "href": "api/VRBuilder.UI.Behaviors.html",
    "title": "Namespace VRBuilder.UI.Behaviors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.UI.Behaviors Classes MultipleChoiceBehavior Setup a Multiple Choice Box MultipleChoiceBehavior.EntityData NumPadBehavior Setup Num Pad Visibility NumPadBehavior.EntityData OptionalnfoBoxBehavior Show an optional Infobox with all the provided Texts, Images and Settings OptionalnfoBoxBehavior.EntityData SetLocalizedTextBehavior Localize a string for TextMesh, UI Text, or TextMeshPro (TMP) Components. SetLocalizedTextBehavior.EntityData UiOutlineBehavior Highlight a UI Component via Outline UiOutlineBehavior.EntityData"
  },
  "api/VRBuilder.UI.Behaviors.MultipleChoiceBehavior.EntityData.html": {
    "href": "api/VRBuilder.UI.Behaviors.MultipleChoiceBehavior.EntityData.html",
    "title": "Class MultipleChoiceBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class MultipleChoiceBehavior.EntityData Inheritance System.Object MultipleChoiceBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Behaviors Assembly : VRBuilder.UserInterface.AddOn.dll Syntax [DisplayName(\"Multiple Choice Box\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Fields | Improve this Doc LocalizationTable Declaration [DataMember(IsRequired = false)] [DisplayName(\"Loca. Table (Optional)\")] public string LocalizationTable Field Value Type Description System.String Properties | Improve this Doc HideDelay Declaration [DataMember(IsRequired = false)] [DisplayName(\"Hide Delay (Seconds)\")] public int HideDelay { get; set; } Property Value Type Description System.Int32 | Improve this Doc Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc MultipleChoiceBox Declaration [DataMember] [Obsolete(\"Use Target instead.\")] public ScenePropertyReference<IMultipleChoiceProperty> MultipleChoiceBox { get; set; } Property Value Type Description ScenePropertyReference < IMultipleChoiceProperty > | Improve this Doc Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc Target Declaration [DataMember(IsRequired = false)] [DisplayName(\"Multiple Choice Box\")] public SingleScenePropertyReference<IMultipleChoiceProperty> Target { get; set; } Property Value Type Description SingleScenePropertyReference < IMultipleChoiceProperty > | Improve this Doc Title Declaration [DataMember(IsRequired = true)] [DisplayName(\"Title / Key\")] public string Title { get; set; } Property Value Type Description System.String | Improve this Doc VerticalButtonLayout Declaration [DataMember(IsRequired = false)] [DisplayName(\"Vertical Button Layout\")] public bool VerticalButtonLayout { get; set; } Property Value Type Description System.Boolean Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.UI.Behaviors.MultipleChoiceBehavior.html": {
    "href": "api/VRBuilder.UI.Behaviors.MultipleChoiceBehavior.html",
    "title": "Class MultipleChoiceBehavior | VR Builder Documentation",
    "keywords": "Class MultipleChoiceBehavior Setup a Multiple Choice Box Inheritance System.Object Entity < MultipleChoiceBehavior.EntityData > Behavior < MultipleChoiceBehavior.EntityData > MultipleChoiceBehavior Implements IDataOwner < MultipleChoiceBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<MultipleChoiceBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<MultipleChoiceBehavior.EntityData>.Clone() Entity<MultipleChoiceBehavior.EntityData>.Data Entity<MultipleChoiceBehavior.EntityData>.IDataOwner.Data Entity<MultipleChoiceBehavior.EntityData>.LifeCycle Entity<MultipleChoiceBehavior.EntityData>.Parent Entity<MultipleChoiceBehavior.EntityData>.GetActiveProcess() Entity<MultipleChoiceBehavior.EntityData>.GetDeactivatingProcess() Entity<MultipleChoiceBehavior.EntityData>.GetConfigurator() Entity<MultipleChoiceBehavior.EntityData>.Configure(IMode) Entity<MultipleChoiceBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Behaviors Assembly : VRBuilder.UserInterface.AddOn.dll Syntax [DataContract(IsReference = true)] public class MultipleChoiceBehavior : Behavior<MultipleChoiceBehavior.EntityData>, IDataOwner<MultipleChoiceBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc MultipleChoiceBehavior() Declaration [JsonConstructor] public MultipleChoiceBehavior() | Improve this Doc MultipleChoiceBehavior(Guid) Declaration public MultipleChoiceBehavior(Guid guid) Parameters Type Name Description System.Guid guid | Improve this Doc MultipleChoiceBehavior(IMultipleChoiceProperty) Declaration public MultipleChoiceBehavior(IMultipleChoiceProperty target) Parameters Type Name Description IMultipleChoiceProperty target Methods | Improve this Doc FindValidMultipleChoiceBox() Declaration protected static IMultipleChoiceProperty FindValidMultipleChoiceBox() Returns Type Description IMultipleChoiceProperty | Improve this Doc GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.UI.Behaviors.MultipleChoiceBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.UI.Behaviors.NumPadBehavior.EntityData.html": {
    "href": "api/VRBuilder.UI.Behaviors.NumPadBehavior.EntityData.html",
    "title": "Class NumPadBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class NumPadBehavior.EntityData Inheritance System.Object NumPadBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Behaviors Assembly : VRBuilder.UserInterface.AddOn.dll Syntax [DisplayName(\"Num Pad Visibility\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc Numpad Declaration [DataMember] [Obsolete(\"Use Target instead.\")] public ScenePropertyReference<INumPadProperty> Numpad { get; set; } Property Value Type Description ScenePropertyReference < INumPadProperty > | Improve this Doc Target Declaration [DataMember(IsRequired = false)] [DisplayName(\"Num Pad\")] public SingleScenePropertyReference<INumPadProperty> Target { get; set; } Property Value Type Description SingleScenePropertyReference < INumPadProperty > | Improve this Doc Visible Declaration [DataMember(IsRequired = false)] [DisplayName(\"Visibility\")] public bool Visible { get; set; } Property Value Type Description System.Boolean Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.UI.Behaviors.NumPadBehavior.html": {
    "href": "api/VRBuilder.UI.Behaviors.NumPadBehavior.html",
    "title": "Class NumPadBehavior | VR Builder Documentation",
    "keywords": "Class NumPadBehavior Setup Num Pad Visibility Inheritance System.Object Entity < NumPadBehavior.EntityData > Behavior < NumPadBehavior.EntityData > NumPadBehavior Implements IDataOwner < NumPadBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<NumPadBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<NumPadBehavior.EntityData>.Clone() Entity<NumPadBehavior.EntityData>.Data Entity<NumPadBehavior.EntityData>.IDataOwner.Data Entity<NumPadBehavior.EntityData>.LifeCycle Entity<NumPadBehavior.EntityData>.Parent Entity<NumPadBehavior.EntityData>.GetActiveProcess() Entity<NumPadBehavior.EntityData>.GetDeactivatingProcess() Entity<NumPadBehavior.EntityData>.GetConfigurator() Entity<NumPadBehavior.EntityData>.Configure(IMode) Entity<NumPadBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Behaviors Assembly : VRBuilder.UserInterface.AddOn.dll Syntax [DataContract(IsReference = true)] public class NumPadBehavior : Behavior<NumPadBehavior.EntityData>, IDataOwner<NumPadBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc NumPadBehavior() Declaration [JsonConstructor] public NumPadBehavior() | Improve this Doc NumPadBehavior(Guid) Declaration public NumPadBehavior(Guid guid) Parameters Type Name Description System.Guid guid | Improve this Doc NumPadBehavior(INumPadProperty) Declaration public NumPadBehavior(INumPadProperty target) Parameters Type Name Description INumPadProperty target Methods | Improve this Doc FindValidNumPad() Declaration protected static INumPadProperty FindValidNumPad() Returns Type Description INumPadProperty | Improve this Doc GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.UI.Behaviors.NumPadBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.UI.Behaviors.OptionalnfoBoxBehavior.EntityData.html": {
    "href": "api/VRBuilder.UI.Behaviors.OptionalnfoBoxBehavior.EntityData.html",
    "title": "Class OptionalnfoBoxBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class OptionalnfoBoxBehavior.EntityData Inheritance System.Object OptionalnfoBoxBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Behaviors Assembly : VRBuilder.UserInterface.AddOn.dll Syntax [DisplayName(\"Optional Infobox\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Fields | Improve this Doc Delay Declaration [DataMember(IsRequired = false)] [DisplayName(\"Delay (in Seconds)\")] public float Delay Field Value Type Description System.Single | Improve this Doc HideAfterStep Declaration [DataMember] [DisplayName(\"Hide After Step\")] public bool HideAfterStep Field Value Type Description System.Boolean Properties | Improve this Doc InfoBox Declaration [DataMember] [Obsolete(\"Use Target instead.\")] public ScenePropertyReference<IInfoBoxProperty> InfoBox { get; set; } Property Value Type Description ScenePropertyReference < IInfoBoxProperty > | Improve this Doc Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc Target Declaration [DataMember(IsRequired = false)] [DisplayName(\"Infobox\")] public SingleScenePropertyReference<IInfoBoxProperty> Target { get; set; } Property Value Type Description SingleScenePropertyReference < IInfoBoxProperty > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.UI.Behaviors.OptionalnfoBoxBehavior.html": {
    "href": "api/VRBuilder.UI.Behaviors.OptionalnfoBoxBehavior.html",
    "title": "Class OptionalnfoBoxBehavior | VR Builder Documentation",
    "keywords": "Class OptionalnfoBoxBehavior Show an optional Infobox with all the provided Texts, Images and Settings Inheritance System.Object Entity < OptionalnfoBoxBehavior.EntityData > Behavior < OptionalnfoBoxBehavior.EntityData > OptionalnfoBoxBehavior Implements IDataOwner < OptionalnfoBoxBehavior.EntityData > IBehavior IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > IOptional IEntity Inherited Members Behavior<OptionalnfoBoxBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<OptionalnfoBoxBehavior.EntityData>.Clone() Entity<OptionalnfoBoxBehavior.EntityData>.Data Entity<OptionalnfoBoxBehavior.EntityData>.IDataOwner.Data Entity<OptionalnfoBoxBehavior.EntityData>.LifeCycle Entity<OptionalnfoBoxBehavior.EntityData>.Parent Entity<OptionalnfoBoxBehavior.EntityData>.GetActiveProcess() Entity<OptionalnfoBoxBehavior.EntityData>.GetConfigurator() Entity<OptionalnfoBoxBehavior.EntityData>.Configure(IMode) Entity<OptionalnfoBoxBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Behaviors Assembly : VRBuilder.UserInterface.AddOn.dll Syntax [DataContract(IsReference = true)] public class OptionalnfoBoxBehavior : Behavior<OptionalnfoBoxBehavior.EntityData>, IDataOwner<OptionalnfoBoxBehavior.EntityData>, IBehavior, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior>, IOptional, IEntity Constructors | Improve this Doc OptionalnfoBoxBehavior() Declaration [JsonConstructor] public OptionalnfoBoxBehavior() | Improve this Doc OptionalnfoBoxBehavior(Guid) Declaration public OptionalnfoBoxBehavior(Guid guid) Parameters Type Name Description System.Guid guid | Improve this Doc OptionalnfoBoxBehavior(IInfoBoxProperty) Declaration public OptionalnfoBoxBehavior(IInfoBoxProperty target) Parameters Type Name Description IInfoBoxProperty target Methods | Improve this Doc FindValidInfobox() Declaration protected static IInfoBoxProperty FindValidInfobox() Returns Type Description IInfoBoxProperty | Improve this Doc GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.UI.Behaviors.OptionalnfoBoxBehavior.EntityData>.GetActivatingProcess() | Improve this Doc GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.UI.Behaviors.OptionalnfoBoxBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IDataOwner<TData> IDataOwner IClonable<T> IOptional IEntity"
  },
  "api/VRBuilder.UI.Behaviors.SetLocalizedTextBehavior.EntityData.html": {
    "href": "api/VRBuilder.UI.Behaviors.SetLocalizedTextBehavior.EntityData.html",
    "title": "Class SetLocalizedTextBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetLocalizedTextBehavior.EntityData Inheritance System.Object SetLocalizedTextBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Behaviors Assembly : VRBuilder.UserInterface.AddOn.dll Syntax [DisplayName(\"Set Localized Text\")] [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Fields | Improve this Doc AppendText Declaration [DataMember] [DisplayName(\"Append Text\")] public bool AppendText Field Value Type Description System.Boolean | Improve this Doc LocalizationTable Declaration [DataMember] [DisplayName(\"Loca. Table (Optional)\")] public string LocalizationTable Field Value Type Description System.String | Improve this Doc Text Declaration [DataMember] [DisplayName(\"Text/Key to Set\")] public string Text Field Value Type Description System.String Properties | Improve this Doc Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc Target Declaration [DataMember(IsRequired = false)] [DisplayName(\"Text Component\")] public SingleScenePropertyReference<ILocalizedTextProperty> Target { get; set; } Property Value Type Description SingleScenePropertyReference < ILocalizedTextProperty > | Improve this Doc TextComponent Declaration [DataMember] [Obsolete(\"Use Target instead.\")] public ScenePropertyReference<ILocalizedTextProperty> TextComponent { get; set; } Property Value Type Description ScenePropertyReference < ILocalizedTextProperty > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.UI.Behaviors.SetLocalizedTextBehavior.html": {
    "href": "api/VRBuilder.UI.Behaviors.SetLocalizedTextBehavior.html",
    "title": "Class SetLocalizedTextBehavior | VR Builder Documentation",
    "keywords": "Class SetLocalizedTextBehavior Localize a string for TextMesh, UI Text, or TextMeshPro (TMP) Components. Inheritance System.Object Entity < SetLocalizedTextBehavior.EntityData > Behavior < SetLocalizedTextBehavior.EntityData > SetLocalizedTextBehavior Implements IDataOwner < SetLocalizedTextBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetLocalizedTextBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<SetLocalizedTextBehavior.EntityData>.Clone() Entity<SetLocalizedTextBehavior.EntityData>.Data Entity<SetLocalizedTextBehavior.EntityData>.IDataOwner.Data Entity<SetLocalizedTextBehavior.EntityData>.LifeCycle Entity<SetLocalizedTextBehavior.EntityData>.Parent Entity<SetLocalizedTextBehavior.EntityData>.GetActiveProcess() Entity<SetLocalizedTextBehavior.EntityData>.GetDeactivatingProcess() Entity<SetLocalizedTextBehavior.EntityData>.GetConfigurator() Entity<SetLocalizedTextBehavior.EntityData>.Configure(IMode) Entity<SetLocalizedTextBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Behaviors Assembly : VRBuilder.UserInterface.AddOn.dll Syntax [DataContract(IsReference = true)] public class SetLocalizedTextBehavior : Behavior<SetLocalizedTextBehavior.EntityData>, IDataOwner<SetLocalizedTextBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc SetLocalizedTextBehavior() Declaration [JsonConstructor] public SetLocalizedTextBehavior() | Improve this Doc SetLocalizedTextBehavior(Guid) Declaration public SetLocalizedTextBehavior(Guid guid) Parameters Type Name Description System.Guid guid | Improve this Doc SetLocalizedTextBehavior(ILocalizedTextProperty) Declaration public SetLocalizedTextBehavior(ILocalizedTextProperty target) Parameters Type Name Description ILocalizedTextProperty target Methods | Improve this Doc GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.UI.Behaviors.SetLocalizedTextBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.UI.Behaviors.UiOutlineBehavior.EntityData.html": {
    "href": "api/VRBuilder.UI.Behaviors.UiOutlineBehavior.EntityData.html",
    "title": "Class UiOutlineBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class UiOutlineBehavior.EntityData Inheritance System.Object UiOutlineBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Behaviors Assembly : VRBuilder.UserInterface.AddOn.dll Syntax [DisplayName(\"UI Outline\")] public class EntityData : IBehaviorData, INamedData, IData Fields | Improve this Doc AnimationDelay Declaration [DataMember(IsRequired = false)] [DisplayName(\"AnimationDelay (0 = instant)\")] public float AnimationDelay Field Value Type Description System.Single | Improve this Doc EffectColor Declaration [DataMember(IsRequired = false)] [DisplayName(\"Effect Color\")] public Color EffectColor Field Value Type Description Color | Improve this Doc OutlineSize Declaration [DataMember(IsRequired = false)] [DisplayName(\"Outline Border Size\")] public float OutlineSize Field Value Type Description System.Single | Improve this Doc ResetAfterStep Declaration [DataMember(IsRequired = false)] [DisplayName(\"Reset After Step\")] public bool ResetAfterStep Field Value Type Description System.Boolean Properties | Improve this Doc Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc Outline Declaration [DataMember] [Obsolete(\"Use Target instead.\")] public ScenePropertyReference<IUiOutlineProperty> Outline { get; set; } Property Value Type Description ScenePropertyReference < IUiOutlineProperty > | Improve this Doc Targets Declaration [DataMember(IsRequired = false)] [DisplayName(\"Outline Element\")] public MultipleScenePropertyReference<IUiOutlineProperty> Targets { get; set; } Property Value Type Description MultipleScenePropertyReference < IUiOutlineProperty > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.UI.Behaviors.UiOutlineBehavior.html": {
    "href": "api/VRBuilder.UI.Behaviors.UiOutlineBehavior.html",
    "title": "Class UiOutlineBehavior | VR Builder Documentation",
    "keywords": "Class UiOutlineBehavior Highlight a UI Component via Outline Inheritance System.Object Entity < UiOutlineBehavior.EntityData > Behavior < UiOutlineBehavior.EntityData > UiOutlineBehavior Implements IDataOwner < UiOutlineBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<UiOutlineBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<UiOutlineBehavior.EntityData>.Clone() Entity<UiOutlineBehavior.EntityData>.Data Entity<UiOutlineBehavior.EntityData>.IDataOwner.Data Entity<UiOutlineBehavior.EntityData>.LifeCycle Entity<UiOutlineBehavior.EntityData>.Parent Entity<UiOutlineBehavior.EntityData>.GetActiveProcess() Entity<UiOutlineBehavior.EntityData>.GetConfigurator() Entity<UiOutlineBehavior.EntityData>.Configure(IMode) Entity<UiOutlineBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Behaviors Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public class UiOutlineBehavior : Behavior<UiOutlineBehavior.EntityData>, IDataOwner<UiOutlineBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc UiOutlineBehavior() Declaration [JsonConstructor] public UiOutlineBehavior() | Improve this Doc UiOutlineBehavior(Guid) Declaration public UiOutlineBehavior(Guid guid) Parameters Type Name Description System.Guid guid | Improve this Doc UiOutlineBehavior(IUiOutlineProperty) Declaration public UiOutlineBehavior(IUiOutlineProperty target) Parameters Type Name Description IUiOutlineProperty target Methods | Improve this Doc GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.UI.Behaviors.UiOutlineBehavior.EntityData>.GetActivatingProcess() | Improve this Doc GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.UI.Behaviors.UiOutlineBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.UI.Conditions.html": {
    "href": "api/VRBuilder.UI.Conditions.html",
    "title": "Namespace VRBuilder.UI.Conditions | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.UI.Conditions Classes MandatoryInfoBoxCondition A condition that completes when an Mandatory InfoBox is Acknowledged MandatoryInfoBoxCondition.EntityData MultipleChoiceCondition A condition that creates a Multiple Choice Button and is completed when that Button is Acknowledged MultipleChoiceCondition.EntityData NumPadCompareCondition A condition that compares two IDataProperty<T> s and completes when the comparison returns true. NumPadCompareCondition.EntityData The data for a NumPadCondition A condition that completes when the 'Enter' Button on the Num Pad is pressed NumPadCondition.EntityData UiButtonCondition Condition which is completed when UI Button is Clicked UiButtonCondition.EntityData"
  },
  "api/VRBuilder.UI.Conditions.MandatoryInfoBoxCondition.EntityData.html": {
    "href": "api/VRBuilder.UI.Conditions.MandatoryInfoBoxCondition.EntityData.html",
    "title": "Class MandatoryInfoBoxCondition.EntityData | VR Builder Documentation",
    "keywords": "Class MandatoryInfoBoxCondition.EntityData Inheritance System.Object MandatoryInfoBoxCondition.EntityData Implements IConditionData ICompletableData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Conditions Assembly : VRBuilder.UserInterface.AddOn.dll Syntax [DisplayName(\"Mandatory Infobox\")] public class EntityData : IConditionData, ICompletableData, INamedData, IData Properties | Improve this Doc InfoBox Declaration [DataMember] [Obsolete(\"Use Target instead.\")] public ScenePropertyReference<IInfoBoxProperty> InfoBox { get; set; } Property Value Type Description ScenePropertyReference < IInfoBoxProperty > | Improve this Doc IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc Target Declaration [DataMember] [DisplayName(\"Infobox\")] public SingleScenePropertyReference<IInfoBoxProperty> Target { get; set; } Property Value Type Description SingleScenePropertyReference < IInfoBoxProperty > Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.UI.Conditions.MandatoryInfoBoxCondition.html": {
    "href": "api/VRBuilder.UI.Conditions.MandatoryInfoBoxCondition.html",
    "title": "Class MandatoryInfoBoxCondition | VR Builder Documentation",
    "keywords": "Class MandatoryInfoBoxCondition A condition that completes when an Mandatory InfoBox is Acknowledged Inheritance System.Object Entity < MandatoryInfoBoxCondition.EntityData > CompletableEntity < MandatoryInfoBoxCondition.EntityData > Condition < MandatoryInfoBoxCondition.EntityData > MandatoryInfoBoxCondition Implements IDataOwner < MandatoryInfoBoxCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<MandatoryInfoBoxCondition.EntityData>.IDataOwner<IConditionData>.Data Condition<MandatoryInfoBoxCondition.EntityData>.Clone() Condition<MandatoryInfoBoxCondition.EntityData>.GetLockableProperties() CompletableEntity<MandatoryInfoBoxCondition.EntityData>.GetAutocompleter() CompletableEntity<MandatoryInfoBoxCondition.EntityData>.IsCompleted CompletableEntity<MandatoryInfoBoxCondition.EntityData>.Autocomplete() Entity<MandatoryInfoBoxCondition.EntityData>.Data Entity<MandatoryInfoBoxCondition.EntityData>.IDataOwner.Data Entity<MandatoryInfoBoxCondition.EntityData>.LifeCycle Entity<MandatoryInfoBoxCondition.EntityData>.Parent Entity<MandatoryInfoBoxCondition.EntityData>.GetConfigurator() Entity<MandatoryInfoBoxCondition.EntityData>.Configure(IMode) Entity<MandatoryInfoBoxCondition.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Conditions Assembly : VRBuilder.UserInterface.AddOn.dll Syntax [DataContract(IsReference = true)] public class MandatoryInfoBoxCondition : Condition<MandatoryInfoBoxCondition.EntityData>, IDataOwner<MandatoryInfoBoxCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors | Improve this Doc MandatoryInfoBoxCondition() Declaration [JsonConstructor] public MandatoryInfoBoxCondition() | Improve this Doc MandatoryInfoBoxCondition(Guid) Declaration public MandatoryInfoBoxCondition(Guid guid) Parameters Type Name Description System.Guid guid | Improve this Doc MandatoryInfoBoxCondition(IInfoBoxProperty) Declaration public MandatoryInfoBoxCondition(IInfoBoxProperty target) Parameters Type Name Description IInfoBoxProperty target Methods | Improve this Doc FindValidInfobox() Declaration protected static IInfoBoxProperty FindValidInfobox() Returns Type Description IInfoBoxProperty | Improve this Doc GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.UI.Conditions.MandatoryInfoBoxCondition.EntityData>.GetActivatingProcess() | Improve this Doc GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.UI.Conditions.MandatoryInfoBoxCondition.EntityData>.GetActiveProcess() | Improve this Doc GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.UI.Conditions.MandatoryInfoBoxCondition.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.UI.Conditions.MultipleChoiceCondition.EntityData.html": {
    "href": "api/VRBuilder.UI.Conditions.MultipleChoiceCondition.EntityData.html",
    "title": "Class MultipleChoiceCondition.EntityData | VR Builder Documentation",
    "keywords": "Class MultipleChoiceCondition.EntityData Inheritance System.Object MultipleChoiceCondition.EntityData Implements IConditionData ICompletableData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Conditions Assembly : VRBuilder.UserInterface.AddOn.dll Syntax [DisplayName(\"Multiple Choice Button\")] public class EntityData : IConditionData, ICompletableData, INamedData, IData Fields | Improve this Doc LocalizationTable Declaration [DataMember(IsRequired = false)] [DisplayName(\"Loca. Table (Optional)\")] public string LocalizationTable Field Value Type Description System.String Properties | Improve this Doc ButtonText Declaration [DataMember(IsRequired = true)] [DisplayName(\"Button Text / Key\")] public string ButtonText { get; set; } Property Value Type Description System.String | Improve this Doc IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc IsSprite Declaration [DataMember(IsRequired = true)] [DisplayName(\"Text Key is Sprite Resource Path\")] public bool IsSprite { get; set; } Property Value Type Description System.Boolean | Improve this Doc Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc MultipleChoiceBox Declaration [DataMember] [Obsolete(\"Use Target instead.\")] public ScenePropertyReference<IMultipleChoiceProperty> MultipleChoiceBox { get; set; } Property Value Type Description ScenePropertyReference < IMultipleChoiceProperty > | Improve this Doc Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc Target Declaration [DataMember] [DisplayName(\"Multiple Choice Box\")] public SingleScenePropertyReference<IMultipleChoiceProperty> Target { get; set; } Property Value Type Description SingleScenePropertyReference < IMultipleChoiceProperty > Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.UI.Conditions.MultipleChoiceCondition.html": {
    "href": "api/VRBuilder.UI.Conditions.MultipleChoiceCondition.html",
    "title": "Class MultipleChoiceCondition | VR Builder Documentation",
    "keywords": "Class MultipleChoiceCondition A condition that creates a Multiple Choice Button and is completed when that Button is Acknowledged Inheritance System.Object Entity < MultipleChoiceCondition.EntityData > CompletableEntity < MultipleChoiceCondition.EntityData > Condition < MultipleChoiceCondition.EntityData > MultipleChoiceCondition Implements IDataOwner < MultipleChoiceCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<MultipleChoiceCondition.EntityData>.IDataOwner<IConditionData>.Data Condition<MultipleChoiceCondition.EntityData>.Clone() Condition<MultipleChoiceCondition.EntityData>.GetLockableProperties() CompletableEntity<MultipleChoiceCondition.EntityData>.GetAutocompleter() CompletableEntity<MultipleChoiceCondition.EntityData>.IsCompleted CompletableEntity<MultipleChoiceCondition.EntityData>.Autocomplete() Entity<MultipleChoiceCondition.EntityData>.Data Entity<MultipleChoiceCondition.EntityData>.IDataOwner.Data Entity<MultipleChoiceCondition.EntityData>.LifeCycle Entity<MultipleChoiceCondition.EntityData>.Parent Entity<MultipleChoiceCondition.EntityData>.GetConfigurator() Entity<MultipleChoiceCondition.EntityData>.Configure(IMode) Entity<MultipleChoiceCondition.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Conditions Assembly : VRBuilder.UserInterface.AddOn.dll Syntax [DataContract(IsReference = true)] public class MultipleChoiceCondition : Condition<MultipleChoiceCondition.EntityData>, IDataOwner<MultipleChoiceCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors | Improve this Doc MultipleChoiceCondition() Declaration [JsonConstructor] public MultipleChoiceCondition() | Improve this Doc MultipleChoiceCondition(Guid) Declaration public MultipleChoiceCondition(Guid guid) Parameters Type Name Description System.Guid guid | Improve this Doc MultipleChoiceCondition(IMultipleChoiceProperty) Declaration public MultipleChoiceCondition(IMultipleChoiceProperty target) Parameters Type Name Description IMultipleChoiceProperty target Methods | Improve this Doc FindValidMultipleChoiceBox() Declaration protected static IMultipleChoiceProperty FindValidMultipleChoiceBox() Returns Type Description IMultipleChoiceProperty | Improve this Doc GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.UI.Conditions.MultipleChoiceCondition.EntityData>.GetActivatingProcess() | Improve this Doc GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.UI.Conditions.MultipleChoiceCondition.EntityData>.GetActiveProcess() | Improve this Doc GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.UI.Conditions.MultipleChoiceCondition.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.UI.Conditions.NumPadCompareCondition.EntityData.html": {
    "href": "api/VRBuilder.UI.Conditions.NumPadCompareCondition.EntityData.html",
    "title": "Class NumPadCompareCondition.EntityData | VR Builder Documentation",
    "keywords": "Class NumPadCompareCondition.EntityData The data for a Inheritance System.Object NumPadCompareCondition.EntityData Implements IConditionData ICompletableData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Conditions Assembly : VRBuilder.UserInterface.AddOn.dll Syntax [DisplayName(\"Compare Num Pad Numbers\")] public class EntityData : IConditionData, ICompletableData, INamedData, IData Properties | Improve this Doc CompareValue Declaration [DataMember] public int CompareValue { get; set; } Property Value Type Description System.Int32 | Improve this Doc IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc LeftTarget Declaration [DataMember] [DisplayName(\"Left Value\")] public SingleScenePropertyReference<INumPadProperty> LeftTarget { get; set; } Property Value Type Description SingleScenePropertyReference < INumPadProperty > | Improve this Doc LeftValueProperty Declaration [DataMember] [Obsolete(\"Use Left Target instead.\")] public ScenePropertyReference<INumPadProperty> LeftValueProperty { get; set; } Property Value Type Description ScenePropertyReference < INumPadProperty > | Improve this Doc Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc Operation Declaration [DataMember] public IOperationCommand<int, bool> Operation { get; set; } Property Value Type Description IOperationCommand < System.Int32 , System.Boolean > Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.UI.Conditions.NumPadCompareCondition.html": {
    "href": "api/VRBuilder.UI.Conditions.NumPadCompareCondition.html",
    "title": "Class NumPadCompareCondition | VR Builder Documentation",
    "keywords": "Class NumPadCompareCondition A condition that compares two IDataProperty<T> s and completes when the comparison returns true. Inheritance System.Object Entity < NumPadCompareCondition.EntityData > CompletableEntity < NumPadCompareCondition.EntityData > Condition < NumPadCompareCondition.EntityData > NumPadCompareCondition Implements IDataOwner < NumPadCompareCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<NumPadCompareCondition.EntityData>.IDataOwner<IConditionData>.Data Condition<NumPadCompareCondition.EntityData>.Clone() Condition<NumPadCompareCondition.EntityData>.GetLockableProperties() CompletableEntity<NumPadCompareCondition.EntityData>.GetAutocompleter() CompletableEntity<NumPadCompareCondition.EntityData>.IsCompleted CompletableEntity<NumPadCompareCondition.EntityData>.Autocomplete() Entity<NumPadCompareCondition.EntityData>.Data Entity<NumPadCompareCondition.EntityData>.IDataOwner.Data Entity<NumPadCompareCondition.EntityData>.LifeCycle Entity<NumPadCompareCondition.EntityData>.Parent Entity<NumPadCompareCondition.EntityData>.GetActivatingProcess() Entity<NumPadCompareCondition.EntityData>.GetDeactivatingProcess() Entity<NumPadCompareCondition.EntityData>.GetConfigurator() Entity<NumPadCompareCondition.EntityData>.Configure(IMode) Entity<NumPadCompareCondition.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Conditions Assembly : VRBuilder.UserInterface.AddOn.dll Syntax [DataContract(IsReference = true)] public class NumPadCompareCondition : Condition<NumPadCompareCondition.EntityData>, IDataOwner<NumPadCompareCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors | Improve this Doc NumPadCompareCondition() Declaration [JsonConstructor] public NumPadCompareCondition() | Improve this Doc NumPadCompareCondition(Guid, Int32, IOperationCommand<Int32, Boolean>) Declaration public NumPadCompareCondition(Guid leftTarget, int rightValue, IOperationCommand<int, bool> operation) Parameters Type Name Description System.Guid leftTarget System.Int32 rightValue IOperationCommand < System.Int32 , System.Boolean > operation | Improve this Doc NumPadCompareCondition(INumPadProperty, Int32, IOperationCommand<Int32, Boolean>) Declaration public NumPadCompareCondition(INumPadProperty leftTarget, int rightValue, IOperationCommand<int, bool> operation) Parameters Type Name Description INumPadProperty leftTarget System.Int32 rightValue IOperationCommand < System.Int32 , System.Boolean > operation Methods | Improve this Doc FindValidNumPad() Declaration protected static INumPadProperty FindValidNumPad() Returns Type Description INumPadProperty | Improve this Doc GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.UI.Conditions.NumPadCompareCondition.EntityData>.GetActiveProcess() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.UI.Conditions.NumPadCondition.EntityData.html": {
    "href": "api/VRBuilder.UI.Conditions.NumPadCondition.EntityData.html",
    "title": "Class NumPadCondition.EntityData | VR Builder Documentation",
    "keywords": "Class NumPadCondition.EntityData Inheritance System.Object NumPadCondition.EntityData Implements IConditionData ICompletableData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Conditions Assembly : VRBuilder.UserInterface.AddOn.dll Syntax [DisplayName(\"Num Pad Enter Button\")] public class EntityData : IConditionData, ICompletableData, INamedData, IData Properties | Improve this Doc IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc NumPad Declaration [DataMember] [Obsolete(\"Use Target instead.\")] public ScenePropertyReference<INumPadProperty> NumPad { get; set; } Property Value Type Description ScenePropertyReference < INumPadProperty > | Improve this Doc ResetEnteredValue Declaration [DataMember(IsRequired = false)] [DisplayName(\"Reset Entered Value after Step\")] public bool ResetEnteredValue { get; set; } Property Value Type Description System.Boolean | Improve this Doc Target Declaration [DataMember] [DisplayName(\"Num Pad\")] public SingleScenePropertyReference<INumPadProperty> Target { get; set; } Property Value Type Description SingleScenePropertyReference < INumPadProperty > Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.UI.Conditions.NumPadCondition.html": {
    "href": "api/VRBuilder.UI.Conditions.NumPadCondition.html",
    "title": "Class NumPadCondition | VR Builder Documentation",
    "keywords": "Class NumPadCondition A condition that completes when the 'Enter' Button on the Num Pad is pressed Inheritance System.Object Entity < NumPadCondition.EntityData > CompletableEntity < NumPadCondition.EntityData > Condition < NumPadCondition.EntityData > NumPadCondition Implements IDataOwner < NumPadCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<NumPadCondition.EntityData>.IDataOwner<IConditionData>.Data Condition<NumPadCondition.EntityData>.Clone() Condition<NumPadCondition.EntityData>.GetLockableProperties() CompletableEntity<NumPadCondition.EntityData>.GetAutocompleter() CompletableEntity<NumPadCondition.EntityData>.IsCompleted CompletableEntity<NumPadCondition.EntityData>.Autocomplete() Entity<NumPadCondition.EntityData>.Data Entity<NumPadCondition.EntityData>.IDataOwner.Data Entity<NumPadCondition.EntityData>.LifeCycle Entity<NumPadCondition.EntityData>.Parent Entity<NumPadCondition.EntityData>.GetConfigurator() Entity<NumPadCondition.EntityData>.Configure(IMode) Entity<NumPadCondition.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Conditions Assembly : VRBuilder.UserInterface.AddOn.dll Syntax [DataContract(IsReference = true)] public class NumPadCondition : Condition<NumPadCondition.EntityData>, IDataOwner<NumPadCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors | Improve this Doc NumPadCondition() Declaration [JsonConstructor] public NumPadCondition() | Improve this Doc NumPadCondition(Guid) Declaration public NumPadCondition(Guid guid) Parameters Type Name Description System.Guid guid | Improve this Doc NumPadCondition(INumPadProperty) Declaration public NumPadCondition(INumPadProperty target) Parameters Type Name Description INumPadProperty target Methods | Improve this Doc FindValidNumPad() Declaration protected static INumPadProperty FindValidNumPad() Returns Type Description INumPadProperty | Improve this Doc GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.UI.Conditions.NumPadCondition.EntityData>.GetActivatingProcess() | Improve this Doc GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.UI.Conditions.NumPadCondition.EntityData>.GetActiveProcess() | Improve this Doc GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.UI.Conditions.NumPadCondition.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.UI.Conditions.UiButtonCondition.EntityData.html": {
    "href": "api/VRBuilder.UI.Conditions.UiButtonCondition.EntityData.html",
    "title": "Class UiButtonCondition.EntityData | VR Builder Documentation",
    "keywords": "Class UiButtonCondition.EntityData Inheritance System.Object UiButtonCondition.EntityData Implements IConditionData ICompletableData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Conditions Assembly : VRBuilder.UserInterface.AddOn.dll Syntax [DisplayName(\"UI Button Click\")] public class EntityData : IConditionData, ICompletableData, INamedData, IData Properties | Improve this Doc IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc Target Declaration [DataMember] [DisplayName(\"UI Button\")] public SingleScenePropertyReference<IUiButtonProperty> Target { get; set; } Property Value Type Description SingleScenePropertyReference < IUiButtonProperty > | Improve this Doc UiButton Declaration [DataMember] [Obsolete(\"Use Target instead.\")] public ScenePropertyReference<IUiButtonProperty> UiButton { get; set; } Property Value Type Description ScenePropertyReference < IUiButtonProperty > Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.UI.Conditions.UiButtonCondition.html": {
    "href": "api/VRBuilder.UI.Conditions.UiButtonCondition.html",
    "title": "Class UiButtonCondition | VR Builder Documentation",
    "keywords": "Class UiButtonCondition Condition which is completed when UI Button is Clicked Inheritance System.Object Entity < UiButtonCondition.EntityData > CompletableEntity < UiButtonCondition.EntityData > Condition < UiButtonCondition.EntityData > UiButtonCondition Implements IDataOwner < UiButtonCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<UiButtonCondition.EntityData>.IDataOwner<IConditionData>.Data Condition<UiButtonCondition.EntityData>.Clone() Condition<UiButtonCondition.EntityData>.GetLockableProperties() CompletableEntity<UiButtonCondition.EntityData>.IsCompleted CompletableEntity<UiButtonCondition.EntityData>.Autocomplete() Entity<UiButtonCondition.EntityData>.Data Entity<UiButtonCondition.EntityData>.IDataOwner.Data Entity<UiButtonCondition.EntityData>.LifeCycle Entity<UiButtonCondition.EntityData>.Parent Entity<UiButtonCondition.EntityData>.GetActivatingProcess() Entity<UiButtonCondition.EntityData>.GetDeactivatingProcess() Entity<UiButtonCondition.EntityData>.GetConfigurator() Entity<UiButtonCondition.EntityData>.Configure(IMode) Entity<UiButtonCondition.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Conditions Assembly : VRBuilder.UserInterface.AddOn.dll Syntax [DataContract(IsReference = true)] public class UiButtonCondition : Condition<UiButtonCondition.EntityData>, IDataOwner<UiButtonCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors | Improve this Doc UiButtonCondition() Declaration [JsonConstructor] public UiButtonCondition() | Improve this Doc UiButtonCondition(Guid) Declaration public UiButtonCondition(Guid guid) Parameters Type Name Description System.Guid guid | Improve this Doc UiButtonCondition(IUiButtonProperty) Declaration public UiButtonCondition(IUiButtonProperty target) Parameters Type Name Description IUiButtonProperty target Methods | Improve this Doc GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.UI.Conditions.UiButtonCondition.EntityData>.GetActiveProcess() | Improve this Doc GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.UI.Conditions.UiButtonCondition.EntityData>.GetAutocompleter() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.UI.Interaction.html": {
    "href": "api/VRBuilder.UI.Interaction.html",
    "title": "Namespace VRBuilder.UI.Interaction | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.UI.Interaction Classes InfoBoxController InfoBoxControllerInit MultipleChoiceController NumPadController UiDetectionRaycast Raycast Helper for Detecting UI Elements, to enable Near Touch UI Interactors UiHandAnimatorController Use to drive hand animations. Enums UiHandAnimatorController.State"
  },
  "api/VRBuilder.UI.Interaction.InfoBoxController.html": {
    "href": "api/VRBuilder.UI.Interaction.InfoBoxController.html",
    "title": "Class InfoBoxController | VR Builder Documentation",
    "keywords": "Class InfoBoxController Inheritance System.Object InfoBoxController Namespace : VRBuilder.UI.Interaction Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public class InfoBoxController : MonoBehaviour Fields | Improve this Doc AcknowledgeButtonText Declaration public TextMeshProUGUI AcknowledgeButtonText Field Value Type Description TMPro.TextMeshProUGUI | Improve this Doc AcknowledgeButtonTransform Declaration public RectTransform AcknowledgeButtonTransform Field Value Type Description RectTransform | Improve this Doc Description Declaration public string Description Field Value Type Description System.String | Improve this Doc DescriptionTitle Declaration public string DescriptionTitle Field Value Type Description System.String | Improve this Doc DetailsContainerTransform Declaration public RectTransform DetailsContainerTransform Field Value Type Description RectTransform | Improve this Doc DetailsDescriptionText Declaration public TextMeshProUGUI DetailsDescriptionText Field Value Type Description TMPro.TextMeshProUGUI | Improve this Doc DetailsTitleText Declaration public TextMeshProUGUI DetailsTitleText Field Value Type Description TMPro.TextMeshProUGUI | Improve this Doc ExitButtonTransform Declaration public RectTransform ExitButtonTransform Field Value Type Description RectTransform | Improve this Doc ImageColor Declaration public Color ImageColor Field Value Type Description Color | Improve this Doc ImageContainerTransform Declaration public RectTransform ImageContainerTransform Field Value Type Description RectTransform | Improve this Doc ImageIcon Declaration public Image ImageIcon Field Value Type Description UnityEngine.UI.Image | Improve this Doc ImageSprite Declaration public Sprite ImageSprite Field Value Type Description Sprite | Improve this Doc InfoBoxSize Declaration public float InfoBoxSize Field Value Type Description System.Single | Improve this Doc LocalizationTable Declaration public string LocalizationTable Field Value Type Description System.String | Improve this Doc PreviewInfoBoxCanvas Declaration public RectTransform PreviewInfoBoxCanvas Field Value Type Description RectTransform | Improve this Doc ScaleDetailsContainerTextSizeFactor Declaration public float ScaleDetailsContainerTextSizeFactor Field Value Type Description System.Single | Improve this Doc ScaleDetailsContainerWithTextSize Declaration public bool ScaleDetailsContainerWithTextSize Field Value Type Description System.Boolean | Improve this Doc Title Declaration public string Title Field Value Type Description System.String | Improve this Doc TitleIcon Declaration public Image TitleIcon Field Value Type Description UnityEngine.UI.Image | Improve this Doc TitleSprite Declaration public Sprite TitleSprite Field Value Type Description Sprite | Improve this Doc TitleText Declaration public TextMeshProUGUI TitleText Field Value Type Description TMPro.TextMeshProUGUI | Improve this Doc Type Declaration public InfoBoxType Type Field Value Type Description InfoBoxType Properties | Improve this Doc IsCompleted Declaration public bool IsCompleted { get; protected set; } Property Value Type Description System.Boolean Methods | Improve this Doc ActivateAckButtonContainer(Boolean) Declaration public void ActivateAckButtonContainer(bool active) Parameters Type Name Description System.Boolean active | Improve this Doc ActivateDetailsContainer(Boolean) Declaration public void ActivateDetailsContainer(bool active) Parameters Type Name Description System.Boolean active | Improve this Doc ActivateImageContainer(Boolean) Declaration public void ActivateImageContainer(bool active) Parameters Type Name Description System.Boolean active | Improve this Doc Awake() Declaration protected void Awake() | Improve this Doc EnableExitButton(Boolean) Declaration public void EnableExitButton(bool enabled) Parameters Type Name Description System.Boolean enabled | Improve this Doc GetLocalizedDescription() Declaration public string GetLocalizedDescription() Returns Type Description System.String | Improve this Doc GetLocalizedTitle() Declaration public string GetLocalizedTitle() Returns Type Description System.String | Improve this Doc HideInfoBox() Declaration public void HideInfoBox() | Improve this Doc InitComponents() Declaration public void InitComponents() | Improve this Doc OnClickAcknowledgeButton() Declaration public void OnClickAcknowledgeButton() | Improve this Doc OnClickExitButton() Declaration public void OnClickExitButton() | Improve this Doc OnClickOpenPanelButton() Declaration public void OnClickOpenPanelButton() | Improve this Doc OnDisable() Declaration protected void OnDisable() | Improve this Doc OnEnable() Declaration protected void OnEnable() | Improve this Doc SetButtonText(String) Declaration public void SetButtonText(string buttonText) Parameters Type Name Description System.String buttonText | Improve this Doc SetDescriptionTitle(String, String) Declaration public void SetDescriptionTitle(string localizationTable, string descriptionTitle) Parameters Type Name Description System.String localizationTable System.String descriptionTitle | Improve this Doc SetDetailsDescriptionText(String) Declaration public void SetDetailsDescriptionText(string text) Parameters Type Name Description System.String text | Improve this Doc SetImage(Sprite, Color) Declaration public void SetImage(Sprite imageSprite, Color imageColor) Parameters Type Name Description Sprite imageSprite Color imageColor | Improve this Doc SetImpageIcon(Sprite, Color) Declaration public void SetImpageIcon(Sprite sprite, Color color) Parameters Type Name Description Sprite sprite Color color | Improve this Doc SetInfoBoxSize(Single) Declaration public void SetInfoBoxSize(float infoBoxSize) Parameters Type Name Description System.Single infoBoxSize | Improve this Doc SetInfoBoxType(InfoBoxType) Declaration public void SetInfoBoxType(InfoBoxType type) Parameters Type Name Description InfoBoxType type | Improve this Doc SetTexts(String, String, String) Declaration public void SetTexts(string localizationTable, string title, string description) Parameters Type Name Description System.String localizationTable System.String title System.String description | Improve this Doc SetTitleImage(Sprite) Declaration public void SetTitleImage(Sprite titleSprite) Parameters Type Name Description Sprite titleSprite | Improve this Doc SetTitleImage(String) Declaration public void SetTitleImage(string path) Parameters Type Name Description System.String path | Improve this Doc ShowInfoBox() Declaration public void ShowInfoBox() | Improve this Doc ShowInfoBox(Boolean, Single) Declaration public void ShowInfoBox(bool show, float delay = 0F) Parameters Type Name Description System.Boolean show System.Single delay | Improve this Doc ValidateInfoBoxEnlarge() Declaration public bool ValidateInfoBoxEnlarge() Returns Type Description System.Boolean"
  },
  "api/VRBuilder.UI.Interaction.InfoBoxControllerInit.html": {
    "href": "api/VRBuilder.UI.Interaction.InfoBoxControllerInit.html",
    "title": "Class InfoBoxControllerInit | VR Builder Documentation",
    "keywords": "Class InfoBoxControllerInit Inheritance System.Object InfoBoxControllerInit Namespace : VRBuilder.UI.Interaction Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public class InfoBoxControllerInit : MonoBehaviour"
  },
  "api/VRBuilder.UI.Interaction.MultipleChoiceController.html": {
    "href": "api/VRBuilder.UI.Interaction.MultipleChoiceController.html",
    "title": "Class MultipleChoiceController | VR Builder Documentation",
    "keywords": "Class MultipleChoiceController Inheritance System.Object MultipleChoiceController Namespace : VRBuilder.UI.Interaction Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public class MultipleChoiceController : MonoBehaviour Fields | Improve this Doc ButtonPrefab Declaration public GameObject ButtonPrefab Field Value Type Description GameObject | Improve this Doc buttonTextMeshes Declaration protected readonly List<TextMeshProUGUI> buttonTextMeshes Field Value Type Description System.Collections.Generic.List < TMPro.TextMeshProUGUI > | Improve this Doc createdButtons Declaration protected readonly List<GameObject> createdButtons Field Value Type Description System.Collections.Generic.List < GameObject > | Improve this Doc GridLayoutSettings12 Declaration public Transform GridLayoutSettings12 Field Value Type Description Transform | Improve this Doc GridLayoutSettings2 Declaration public Transform GridLayoutSettings2 Field Value Type Description Transform | Improve this Doc GridLayoutSettings4 Declaration public Transform GridLayoutSettings4 Field Value Type Description Transform | Improve this Doc GridLayoutSettingsVertical Declaration public Transform GridLayoutSettingsVertical Field Value Type Description Transform | Improve this Doc MainCanvas Declaration public Canvas MainCanvas Field Value Type Description Canvas | Improve this Doc pressedButtonText Declaration protected string pressedButtonText Field Value Type Description System.String | Improve this Doc RootPanel Declaration public Transform RootPanel Field Value Type Description Transform | Improve this Doc SetTextSizeToSmallestSize Declaration public bool SetTextSizeToSmallestSize Field Value Type Description System.Boolean | Improve this Doc Title Declaration public TextMeshProUGUI Title Field Value Type Description TMPro.TextMeshProUGUI | Improve this Doc UseVerticalLayout Declaration public bool UseVerticalLayout Field Value Type Description System.Boolean Properties | Improve this Doc hideDelay Declaration protected int hideDelay { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc AddCreatedButton(GameObject) Declaration protected void AddCreatedButton(GameObject buttonObject) Parameters Type Name Description GameObject buttonObject | Improve this Doc CreateMultipleChoiceButton(String) Declaration public void CreateMultipleChoiceButton(string text) Parameters Type Name Description System.String text | Improve this Doc CreateMultipleChoiceButton(String, Sprite) Declaration public void CreateMultipleChoiceButton(string spriteKey, Sprite sprite) Parameters Type Name Description System.String spriteKey Sprite sprite | Improve this Doc HandleButtonLayout() Declaration protected void HandleButtonLayout() | Improve this Doc HandleButtonObject(GameObject, String) Declaration protected void HandleButtonObject(GameObject buttonObject, string buttonText) Parameters Type Name Description GameObject buttonObject System.String buttonText | Improve this Doc HandleButtonObject(GameObject, String, Sprite) Declaration protected void HandleButtonObject(GameObject buttonObject, string spriteKey, Sprite sprite) Parameters Type Name Description GameObject buttonObject System.String spriteKey Sprite sprite | Improve this Doc HasPressedButton(String) Declaration public bool HasPressedButton(string text) Parameters Type Name Description System.String text Returns Type Description System.Boolean | Improve this Doc Hide() Declaration public void Hide() | Improve this Doc IsShowing() Declaration public bool IsShowing() Returns Type Description System.Boolean | Improve this Doc MoveButtonsToPanel(Transform) Declaration protected void MoveButtonsToPanel(Transform panel) Parameters Type Name Description Transform panel | Improve this Doc OnButtonClick(String) Declaration protected void OnButtonClick(string buttonText) Parameters Type Name Description System.String buttonText | Improve this Doc ResetMultipleChoiceBox() Declaration public void ResetMultipleChoiceBox() | Improve this Doc SetHideDelay(Int32) Declaration public void SetHideDelay(int seconds) Parameters Type Name Description System.Int32 seconds | Improve this Doc SetTitle(String) Declaration public void SetTitle(string text) Parameters Type Name Description System.String text | Improve this Doc SetVerticalButtonLayout(Boolean) Declaration public void SetVerticalButtonLayout(bool enabled) Parameters Type Name Description System.Boolean enabled | Improve this Doc Show() Declaration public void Show() | Improve this Doc Start() Declaration protected void Start() | Improve this Doc TrySetTextSizeToSmallestSize() Declaration protected void TrySetTextSizeToSmallestSize()"
  },
  "api/VRBuilder.UI.Interaction.NumPadController.html": {
    "href": "api/VRBuilder.UI.Interaction.NumPadController.html",
    "title": "Class NumPadController | VR Builder Documentation",
    "keywords": "Class NumPadController Inheritance System.Object NumPadController Namespace : VRBuilder.UI.Interaction Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public class NumPadController : MonoBehaviour Fields | Improve this Doc Buttons Declaration public Button[] Buttons Field Value Type Description UnityEngine.UI.Button [] | Improve this Doc Display Declaration public TMP_Text Display Field Value Type Description TMPro.TMP_Text | Improve this Doc MainPanel Declaration public RectTransform MainPanel Field Value Type Description RectTransform | Improve this Doc OnAccept Declaration public UnityEvent<int> OnAccept Field Value Type Description UnityEvent < System.Int32 > Methods | Improve this Doc ResetDisplay() Declaration public void ResetDisplay()"
  },
  "api/VRBuilder.UI.Interaction.UiDetectionRaycast.html": {
    "href": "api/VRBuilder.UI.Interaction.UiDetectionRaycast.html",
    "title": "Class UiDetectionRaycast | VR Builder Documentation",
    "keywords": "Class UiDetectionRaycast Raycast Helper for Detecting UI Elements, to enable Near Touch UI Interactors Inheritance System.Object UiDetectionRaycast Namespace : VRBuilder.UI.Interaction Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public class UiDetectionRaycast : MonoBehaviour"
  },
  "api/VRBuilder.UI.Interaction.UiHandAnimatorController.html": {
    "href": "api/VRBuilder.UI.Interaction.UiHandAnimatorController.html",
    "title": "Class UiHandAnimatorController | VR Builder Documentation",
    "keywords": "Class UiHandAnimatorController Use to drive hand animations. Inheritance System.Object UiHandAnimatorController Namespace : VRBuilder.UI.Interaction Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public class UiHandAnimatorController : MonoBehaviour Fields | Improve this Doc currentHandState Declaration protected UiHandAnimatorController.State currentHandState Field Value Type Description UiHandAnimatorController.State | Improve this Doc MyController Declaration public XRController MyController Field Value Type Description UnityEngine.XR.Interaction.Toolkit.XRController | Improve this Doc MyTeleportInteractor Declaration public XRRayInteractor MyTeleportInteractor Field Value Type Description UnityEngine.XR.Interaction.Toolkit.XRRayInteractor | Improve this Doc MyUIInteractor Declaration public XRRayInteractor MyUIInteractor Field Value Type Description UnityEngine.XR.Interaction.Toolkit.XRRayInteractor Methods | Improve this Doc OnEnterTeleport(HoverEnterEventArgs) Declaration protected void OnEnterTeleport(HoverEnterEventArgs arguments) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs arguments | Improve this Doc OnEnterUI() Declaration public void OnEnterUI() | Improve this Doc OnExitTeleport(HoverExitEventArgs) Declaration protected void OnExitTeleport(HoverExitEventArgs arguments) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs arguments | Improve this Doc OnExitUI() Declaration public void OnExitUI() | Improve this Doc OnExitUI(HoverExitEventArgs) Declaration protected void OnExitUI(HoverExitEventArgs arguments) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs arguments"
  },
  "api/VRBuilder.UI.Interaction.UiHandAnimatorController.State.html": {
    "href": "api/VRBuilder.UI.Interaction.UiHandAnimatorController.State.html",
    "title": "Enum UiHandAnimatorController.State | VR Builder Documentation",
    "keywords": "Enum UiHandAnimatorController.State Namespace : VRBuilder.UI.Interaction Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public enum State Fields Name Description Grab Idle Teleport Touch UI"
  },
  "api/VRBuilder.UI.Properties.html": {
    "href": "api/VRBuilder.UI.Properties.html",
    "title": "Namespace VRBuilder.UI.Properties | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.UI.Properties Classes InfoBoxProperty implementation with InfoBoxController LocalizedTextProperty implementation for TextMesh, Text and TextMeshPro (TMP) Compontents MultipleChoiceProperty implementation with MultipleChoiceController NumPadProperty implementation with NumPadController UiButtonProperty implementation for UI Buttons and Toggles UiOutlineProperty implementation for any UI Element Interfaces IInfoBoxProperty Interface for Optional InfoBox Behavior and Mandatory Infobox Condition ILocalizedTextProperty Interface for Set Localized Text Behavior IMultipleChoiceProperty Interface for Multiple Choice Box Behavior and Conditions INumPadProperty IUiButtonProperty IUiOutlineProperty Enums InfoBoxType"
  },
  "api/VRBuilder.UI.Properties.IInfoBoxProperty.html": {
    "href": "api/VRBuilder.UI.Properties.IInfoBoxProperty.html",
    "title": "Interface IInfoBoxProperty | VR Builder Documentation",
    "keywords": "Interface IInfoBoxProperty Interface for Optional InfoBox Behavior and Mandatory Infobox Condition Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.UI.Properties Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public interface IInfoBoxProperty : ISceneObjectProperty Properties | Improve this Doc InfoBoxType Declaration InfoBoxType InfoBoxType { get; } Property Value Type Description InfoBoxType | Improve this Doc IsCompleted Declaration bool IsCompleted { get; } Property Value Type Description System.Boolean | Improve this Doc IsValid Declaration bool IsValid { get; } Property Value Type Description System.Boolean Methods | Improve this Doc SetInfoBoxType(InfoBoxType) Declaration void SetInfoBoxType(InfoBoxType type) Parameters Type Name Description InfoBoxType type | Improve this Doc ShowInfoBox(Boolean, Single) Declaration void ShowInfoBox(bool show, float delay = 0F) Parameters Type Name Description System.Boolean show System.Single delay"
  },
  "api/VRBuilder.UI.Properties.ILocalizedTextProperty.html": {
    "href": "api/VRBuilder.UI.Properties.ILocalizedTextProperty.html",
    "title": "Interface ILocalizedTextProperty | VR Builder Documentation",
    "keywords": "Interface ILocalizedTextProperty Interface for Set Localized Text Behavior Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.UI.Properties Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public interface ILocalizedTextProperty : ISceneObjectProperty Methods | Improve this Doc AppendText(String, String) Declaration void AppendText(string localizationTable, string text) Parameters Type Name Description System.String localizationTable System.String text | Improve this Doc SetText(String, String) Declaration void SetText(string localizationTable, string text) Parameters Type Name Description System.String localizationTable System.String text"
  },
  "api/VRBuilder.UI.Properties.IMultipleChoiceProperty.html": {
    "href": "api/VRBuilder.UI.Properties.IMultipleChoiceProperty.html",
    "title": "Interface IMultipleChoiceProperty | VR Builder Documentation",
    "keywords": "Interface IMultipleChoiceProperty Interface for Multiple Choice Box Behavior and Conditions Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.UI.Properties Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public interface IMultipleChoiceProperty : ISceneObjectProperty Properties | Improve this Doc IsValid Declaration bool IsValid { get; } Property Value Type Description System.Boolean Methods | Improve this Doc CreateMultipleChoiceButton(String, Boolean) Declaration void CreateMultipleChoiceButton(string text, bool isSprite) Parameters Type Name Description System.String text System.Boolean isSprite | Improve this Doc CreateMultipleChoiceButton(String, String, Boolean) Declaration void CreateMultipleChoiceButton(string localizationTable, string text, bool isSprite) Parameters Type Name Description System.String localizationTable System.String text System.Boolean isSprite | Improve this Doc HideMultipleChoiceBox() Declaration void HideMultipleChoiceBox() | Improve this Doc IsButtonPressed(String) Declaration bool IsButtonPressed(string text) Parameters Type Name Description System.String text Returns Type Description System.Boolean | Improve this Doc IsButtonPressed(String, String, Boolean) Declaration bool IsButtonPressed(string localizationTable, string text, bool isSprite) Parameters Type Name Description System.String localizationTable System.String text System.Boolean isSprite Returns Type Description System.Boolean | Improve this Doc ResetMultipleChoiceBox() Declaration void ResetMultipleChoiceBox() | Improve this Doc SetHideDelay(Int32) Declaration void SetHideDelay(int seconds) Parameters Type Name Description System.Int32 seconds | Improve this Doc SetMultipleChoiceBoxTitle(String) Declaration void SetMultipleChoiceBoxTitle(string text) Parameters Type Name Description System.String text | Improve this Doc SetMultipleChoiceBoxTitle(String, String) Declaration void SetMultipleChoiceBoxTitle(string localizationTable, string text) Parameters Type Name Description System.String localizationTable System.String text | Improve this Doc SetVerticalButtonLayout(Boolean) Declaration void SetVerticalButtonLayout(bool enabled) Parameters Type Name Description System.Boolean enabled | Improve this Doc ShowMultipleChoiceBox(Single) Declaration void ShowMultipleChoiceBox(float delay = 0F) Parameters Type Name Description System.Single delay"
  },
  "api/VRBuilder.UI.Properties.InfoBoxProperty.html": {
    "href": "api/VRBuilder.UI.Properties.InfoBoxProperty.html",
    "title": "Class InfoBoxProperty | VR Builder Documentation",
    "keywords": "Class InfoBoxProperty implementation with InfoBoxController Inheritance System.Object ProcessSceneObjectProperty InfoBoxProperty Implements IInfoBoxProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.UI.Properties Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public class InfoBoxProperty : ProcessSceneObjectProperty, IInfoBoxProperty, ISceneObjectProperty Properties | Improve this Doc InfoBoxController Declaration protected InfoBoxController InfoBoxController { get; } Property Value Type Description InfoBoxController | Improve this Doc InfoBoxType Declaration public InfoBoxType InfoBoxType { get; } Property Value Type Description InfoBoxType | Improve this Doc IsCompleted Declaration public bool IsCompleted { get; } Property Value Type Description System.Boolean | Improve this Doc IsValid Declaration public bool IsValid { get; } Property Value Type Description System.Boolean Methods | Improve this Doc SetButtonText(String) Declaration public void SetButtonText(string buttonText) Parameters Type Name Description System.String buttonText | Improve this Doc SetInfoBoxType(InfoBoxType) Declaration public void SetInfoBoxType(InfoBoxType type) Parameters Type Name Description InfoBoxType type | Improve this Doc ShowInfoBox(Boolean, Single) Declaration public void ShowInfoBox(bool show, float delay = 0F) Parameters Type Name Description System.Boolean show System.Single delay Implements IInfoBoxProperty ISceneObjectProperty"
  },
  "api/VRBuilder.UI.Properties.InfoBoxType.html": {
    "href": "api/VRBuilder.UI.Properties.InfoBoxType.html",
    "title": "Enum InfoBoxType | VR Builder Documentation",
    "keywords": "Enum InfoBoxType Namespace : VRBuilder.UI.Properties Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public enum InfoBoxType Fields Name Description InfoPanel Mandatory Optional"
  },
  "api/VRBuilder.UI.Properties.INumPadProperty.html": {
    "href": "api/VRBuilder.UI.Properties.INumPadProperty.html",
    "title": "Interface INumPadProperty | VR Builder Documentation",
    "keywords": "Interface INumPadProperty Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.UI.Properties Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public interface INumPadProperty : ISceneObjectProperty Properties | Improve this Doc IsValid Declaration bool IsValid { get; } Property Value Type Description System.Boolean Methods | Improve this Doc GetValue() Declaration int GetValue() Returns Type Description System.Int32 | Improve this Doc InitNumPad() Declaration void InitNumPad() | Improve this Doc IsDataAccepted() Declaration bool IsDataAccepted() Returns Type Description System.Boolean | Improve this Doc ResetNumPad(Boolean) Declaration void ResetNumPad(bool resetEnteredValue) Parameters Type Name Description System.Boolean resetEnteredValue | Improve this Doc SetNumPadVisibility(Boolean) Declaration void SetNumPadVisibility(bool visible) Parameters Type Name Description System.Boolean visible"
  },
  "api/VRBuilder.UI.Properties.IUiButtonProperty.html": {
    "href": "api/VRBuilder.UI.Properties.IUiButtonProperty.html",
    "title": "Interface IUiButtonProperty | VR Builder Documentation",
    "keywords": "Interface IUiButtonProperty Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.UI.Properties Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public interface IUiButtonProperty : ISceneObjectProperty Properties | Improve this Doc IsClicked Declaration bool IsClicked { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc FastForwardClick() Declaration void FastForwardClick() | Improve this Doc SetText(String) Declaration void SetText(string text) Parameters Type Name Description System.String text Events | Improve this Doc OnClicked Declaration event EventHandler<EventArgs> OnClicked Event Type Type Description System.EventHandler < System.EventArgs >"
  },
  "api/VRBuilder.UI.Properties.IUiOutlineProperty.html": {
    "href": "api/VRBuilder.UI.Properties.IUiOutlineProperty.html",
    "title": "Interface IUiOutlineProperty | VR Builder Documentation",
    "keywords": "Interface IUiOutlineProperty Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.UI.Properties Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public interface IUiOutlineProperty : ISceneObjectProperty Methods | Improve this Doc GetOutlineCurve() Declaration AnimationCurve GetOutlineCurve() Returns Type Description AnimationCurve | Improve this Doc GetWidth() Declaration float GetWidth() Returns Type Description System.Single | Improve this Doc SetEffectColor(Color) Declaration void SetEffectColor(Color color) Parameters Type Name Description Color color | Improve this Doc SetHighlighted(Boolean) Declaration void SetHighlighted(bool highlight) Parameters Type Name Description System.Boolean highlight | Improve this Doc SetWidth(Single) Declaration void SetWidth(float width) Parameters Type Name Description System.Single width"
  },
  "api/VRBuilder.UI.Properties.LocalizedTextProperty.html": {
    "href": "api/VRBuilder.UI.Properties.LocalizedTextProperty.html",
    "title": "Class LocalizedTextProperty | VR Builder Documentation",
    "keywords": "Class LocalizedTextProperty implementation for TextMesh, Text and TextMeshPro (TMP) Compontents Inheritance System.Object ProcessSceneObjectProperty LockableProperty LocalizedTextProperty Implements ILockable ILocalizedTextProperty ISceneObjectProperty Inherited Members LockableProperty.Locked LockableProperty.Unlocked LockableProperty.LockOnParentObjectLock LockableProperty.IsLocked LockableProperty.EndStepLocked LockableProperty.OnEnable() LockableProperty.OnDisable() LockableProperty.SetLocked(Boolean) LockableProperty.RequestLocked(Boolean, IStepData) LockableProperty.RemoveUnlocker(IStepData) ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.UI.Properties Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public class LocalizedTextProperty : LockableProperty, ILockable, ILocalizedTextProperty, ISceneObjectProperty Properties | Improve this Doc LegacyText Declaration protected Text LegacyText { get; } Property Value Type Description UnityEngine.UI.Text | Improve this Doc LegacyTextMesh Declaration protected TextMesh LegacyTextMesh { get; } Property Value Type Description TextMesh | Improve this Doc TextMeshPro Declaration protected TMP_Text TextMeshPro { get; } Property Value Type Description TMPro.TMP_Text Methods | Improve this Doc AppendText(String, String) Declaration public void AppendText(string localizationTable, string text) Parameters Type Name Description System.String localizationTable System.String text | Improve this Doc GetLocalizedText(String, String) Declaration protected string GetLocalizedText(string localizationTable, string text) Parameters Type Name Description System.String localizationTable System.String text Returns Type Description System.String | Improve this Doc InternalSetLocked(Boolean) Declaration protected override void InternalSetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState Overrides LockableProperty.InternalSetLocked(Boolean) | Improve this Doc SetText(String, String) Declaration public void SetText(string localizationTable, string text) Parameters Type Name Description System.String localizationTable System.String text Implements ILockable ILocalizedTextProperty ISceneObjectProperty"
  },
  "api/VRBuilder.UI.Properties.MultipleChoiceProperty.html": {
    "href": "api/VRBuilder.UI.Properties.MultipleChoiceProperty.html",
    "title": "Class MultipleChoiceProperty | VR Builder Documentation",
    "keywords": "Class MultipleChoiceProperty implementation with MultipleChoiceController Inheritance System.Object ProcessSceneObjectProperty MultipleChoiceProperty Implements IMultipleChoiceProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.UI.Properties Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public class MultipleChoiceProperty : ProcessSceneObjectProperty, IMultipleChoiceProperty, ISceneObjectProperty Properties | Improve this Doc IsValid Declaration public bool IsValid { get; } Property Value Type Description System.Boolean | Improve this Doc MultipleChoiceBox Declaration protected MultipleChoiceController MultipleChoiceBox { get; } Property Value Type Description MultipleChoiceController Methods | Improve this Doc CreateMultipleChoiceButton(String, Boolean) Declaration public void CreateMultipleChoiceButton(string text, bool isSprite) Parameters Type Name Description System.String text System.Boolean isSprite | Improve this Doc CreateMultipleChoiceButton(String, String, Boolean) Declaration public void CreateMultipleChoiceButton(string loclizationTable, string text, bool isSprite) Parameters Type Name Description System.String loclizationTable System.String text System.Boolean isSprite | Improve this Doc HideMultipleChoiceBox() Declaration public void HideMultipleChoiceBox() | Improve this Doc IsButtonPressed(String) Declaration public bool IsButtonPressed(string text) Parameters Type Name Description System.String text Returns Type Description System.Boolean | Improve this Doc IsButtonPressed(String, String, Boolean) Declaration public bool IsButtonPressed(string localizationTable, string text, bool isSprite) Parameters Type Name Description System.String localizationTable System.String text System.Boolean isSprite Returns Type Description System.Boolean | Improve this Doc ResetMultipleChoiceBox() Declaration public void ResetMultipleChoiceBox() | Improve this Doc SetHideDelay(Int32) Declaration public void SetHideDelay(int seconds) Parameters Type Name Description System.Int32 seconds | Improve this Doc SetMultipleChoiceBoxTitle(String) Declaration public void SetMultipleChoiceBoxTitle(string text) Parameters Type Name Description System.String text | Improve this Doc SetMultipleChoiceBoxTitle(String, String) Declaration public void SetMultipleChoiceBoxTitle(string localizationTable, string text) Parameters Type Name Description System.String localizationTable System.String text | Improve this Doc SetVerticalButtonLayout(Boolean) Declaration public void SetVerticalButtonLayout(bool enabled) Parameters Type Name Description System.Boolean enabled | Improve this Doc ShowMultipleChoiceBox() Declaration public void ShowMultipleChoiceBox() | Improve this Doc ShowMultipleChoiceBox(Single) Declaration public void ShowMultipleChoiceBox(float delay = 0F) Parameters Type Name Description System.Single delay | Improve this Doc TryGetLocalizedSprite(String, String) Declaration protected Sprite TryGetLocalizedSprite(string localizationTable, string text) Parameters Type Name Description System.String localizationTable System.String text Returns Type Description Sprite | Improve this Doc TryGetLocalizedString(String, String) Declaration protected string TryGetLocalizedString(string localizationTable, string text) Parameters Type Name Description System.String localizationTable System.String text Returns Type Description System.String Implements IMultipleChoiceProperty ISceneObjectProperty"
  },
  "api/VRBuilder.UI.Properties.NumPadProperty.html": {
    "href": "api/VRBuilder.UI.Properties.NumPadProperty.html",
    "title": "Class NumPadProperty | VR Builder Documentation",
    "keywords": "Class NumPadProperty implementation with NumPadController Inheritance System.Object ProcessSceneObjectProperty NumPadProperty Implements INumPadProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.UI.Properties Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public class NumPadProperty : ProcessSceneObjectProperty, INumPadProperty, ISceneObjectProperty Properties | Improve this Doc IsValid Declaration public bool IsValid { get; } Property Value Type Description System.Boolean | Improve this Doc NumPad Declaration protected NumPadController NumPad { get; } Property Value Type Description NumPadController Methods | Improve this Doc GetValue() Declaration public int GetValue() Returns Type Description System.Int32 | Improve this Doc InitNumPad() Declaration public void InitNumPad() | Improve this Doc IsDataAccepted() Declaration public bool IsDataAccepted() Returns Type Description System.Boolean | Improve this Doc IsShowing() Declaration public bool IsShowing() Returns Type Description System.Boolean | Improve this Doc ResetNumPad(Boolean) Declaration public void ResetNumPad(bool resetEnteredValue) Parameters Type Name Description System.Boolean resetEnteredValue | Improve this Doc SetNumPadVisibility(Boolean) Declaration public void SetNumPadVisibility(bool visible) Parameters Type Name Description System.Boolean visible Implements INumPadProperty ISceneObjectProperty"
  },
  "api/VRBuilder.UI.Properties.UiButtonProperty.html": {
    "href": "api/VRBuilder.UI.Properties.UiButtonProperty.html",
    "title": "Class UiButtonProperty | VR Builder Documentation",
    "keywords": "Class UiButtonProperty implementation for UI Buttons and Toggles Inheritance System.Object ProcessSceneObjectProperty LockableProperty UiButtonProperty Implements ILockable IUiButtonProperty ISceneObjectProperty Inherited Members LockableProperty.Locked LockableProperty.Unlocked LockableProperty.LockOnParentObjectLock LockableProperty.IsLocked LockableProperty.EndStepLocked LockableProperty.SetLocked(Boolean) LockableProperty.RequestLocked(Boolean, IStepData) LockableProperty.RemoveUnlocker(IStepData) ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.UI.Properties Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public class UiButtonProperty : LockableProperty, ILockable, IUiButtonProperty, ISceneObjectProperty Fields | Improve this Doc InvisibleWhileLocked Declaration public bool InvisibleWhileLocked Field Value Type Description System.Boolean | Improve this Doc isClicked Declaration protected bool isClicked Field Value Type Description System.Boolean Properties | Improve this Doc InteractableButton Declaration protected Button InteractableButton { get; } Property Value Type Description UnityEngine.UI.Button | Improve this Doc InteractableToggle Declaration protected Toggle InteractableToggle { get; } Property Value Type Description UnityEngine.UI.Toggle | Improve this Doc IsClicked Returns true if the GameObject is being used. Declaration public virtual bool IsClicked { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc FastForwardClick() Instantaneously simulate that the object was used. Declaration public void FastForwardClick() | Improve this Doc InternalSetLocked(Boolean) Declaration protected override void InternalSetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState Overrides LockableProperty.InternalSetLocked(Boolean) | Improve this Doc OnDisable() Declaration protected override void OnDisable() Overrides LockableProperty.OnDisable() | Improve this Doc OnEnable() Declaration protected override void OnEnable() Overrides LockableProperty.OnEnable() | Improve this Doc SetText(String) UI Button and Toggle are supported Declaration public void SetText(string text) Parameters Type Name Description System.String text Events | Improve this Doc OnClicked Declaration public event EventHandler<EventArgs> OnClicked Event Type Type Description System.EventHandler < System.EventArgs > Implements ILockable IUiButtonProperty ISceneObjectProperty"
  },
  "api/VRBuilder.UI.Properties.UiOutlineProperty.html": {
    "href": "api/VRBuilder.UI.Properties.UiOutlineProperty.html",
    "title": "Class UiOutlineProperty | VR Builder Documentation",
    "keywords": "Class UiOutlineProperty implementation for any UI Element Inheritance System.Object ProcessSceneObjectProperty UiOutlineProperty Implements IUiOutlineProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.UI.Properties Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public class UiOutlineProperty : ProcessSceneObjectProperty, IUiOutlineProperty, ISceneObjectProperty Fields | Improve this Doc OutlineCurve Declaration public AnimationCurve OutlineCurve Field Value Type Description AnimationCurve Properties | Improve this Doc HighlightActive Declaration public bool HighlightActive { get; } Property Value Type Description System.Boolean | Improve this Doc Outline Declaration public Outline Outline { get; } Property Value Type Description UnityEngine.UI.Outline Methods | Improve this Doc GetOutlineCurve() Declaration public AnimationCurve GetOutlineCurve() Returns Type Description AnimationCurve | Improve this Doc GetWidth() Declaration public float GetWidth() Returns Type Description System.Single | Improve this Doc SetEffectColor(Color) Declaration public void SetEffectColor(Color color) Parameters Type Name Description Color color | Improve this Doc SetHighlighted(Boolean) Declaration public void SetHighlighted(bool highlight) Parameters Type Name Description System.Boolean highlight | Improve this Doc SetWidth(Single) Declaration public void SetWidth(float width) Parameters Type Name Description System.Single width Implements IUiOutlineProperty ISceneObjectProperty"
  },
  "api/VRBuilder.UI.Utils.AutoSetCameraToCanvas.html": {
    "href": "api/VRBuilder.UI.Utils.AutoSetCameraToCanvas.html",
    "title": "Class AutoSetCameraToCanvas | VR Builder Documentation",
    "keywords": "Class AutoSetCameraToCanvas Inheritance System.Object AutoSetCameraToCanvas Namespace : VRBuilder.UI.Utils Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public class AutoSetCameraToCanvas : MonoBehaviour Fields | Improve this Doc myCanvas Declaration protected Canvas myCanvas Field Value Type Description Canvas"
  },
  "api/VRBuilder.UI.Utils.FadeOutImages.FadeOutState.html": {
    "href": "api/VRBuilder.UI.Utils.FadeOutImages.FadeOutState.html",
    "title": "Enum FadeOutImages.FadeOutState | VR Builder Documentation",
    "keywords": "Enum FadeOutImages.FadeOutState Namespace : VRBuilder.UI.Utils Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public enum FadeOutState Fields Name Description FadeIn FadeOut Idle"
  },
  "api/VRBuilder.UI.Utils.FadeOutImages.html": {
    "href": "api/VRBuilder.UI.Utils.FadeOutImages.html",
    "title": "Class FadeOutImages | VR Builder Documentation",
    "keywords": "Class FadeOutImages Inheritance System.Object FadeOutImages Namespace : VRBuilder.UI.Utils Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public class FadeOutImages : MonoBehaviour Fields | Improve this Doc ColorFade Declaration public bool ColorFade Field Value Type Description System.Boolean | Improve this Doc currentAlpha Declaration protected float currentAlpha Field Value Type Description System.Single | Improve this Doc FadeSpeed Declaration public float FadeSpeed Field Value Type Description System.Single | Improve this Doc FadeToColor Declaration public Color FadeToColor Field Value Type Description Color | Improve this Doc myImages Declaration protected Image[] myImages Field Value Type Description UnityEngine.UI.Image [] | Improve this Doc savedColors Declaration protected Color[] savedColors Field Value Type Description Color [] | Improve this Doc State Declaration public FadeOutImages.FadeOutState State Field Value Type Description FadeOutImages.FadeOutState Methods | Improve this Doc IsFading() Declaration public bool IsFading() Returns Type Description System.Boolean | Improve this Doc Reset() Declaration public void Reset() | Improve this Doc StartFadeIn() Declaration public void StartFadeIn() | Improve this Doc StartFadeOut() Declaration public void StartFadeOut() Events | Improve this Doc OnFinsihedFade Declaration public event UnityAction OnFinsihedFade Event Type Type Description UnityAction"
  },
  "api/VRBuilder.UI.Utils.html": {
    "href": "api/VRBuilder.UI.Utils.html",
    "title": "Namespace VRBuilder.UI.Utils | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.UI.Utils Classes AutoSetCameraToCanvas FadeOutImages InterfaceExtensions MultipleChoiceButton NumPadTagAccept NumPadTagDelete Enums FadeOutImages.FadeOutState"
  },
  "api/VRBuilder.UI.Utils.InterfaceExtensions.html": {
    "href": "api/VRBuilder.UI.Utils.InterfaceExtensions.html",
    "title": "Class InterfaceExtensions | VR Builder Documentation",
    "keywords": "Class InterfaceExtensions Inheritance System.Object InterfaceExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UI.Utils Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public static class InterfaceExtensions Methods | Improve this Doc FindInterfaceOfType<T>() Declaration public static IEnumerable<T> FindInterfaceOfType<T>() Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T"
  },
  "api/VRBuilder.UI.Utils.MultipleChoiceButton.html": {
    "href": "api/VRBuilder.UI.Utils.MultipleChoiceButton.html",
    "title": "Class MultipleChoiceButton | VR Builder Documentation",
    "keywords": "Class MultipleChoiceButton Inheritance System.Object MultipleChoiceButton Namespace : VRBuilder.UI.Utils Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public class MultipleChoiceButton : MonoBehaviour Fields | Improve this Doc image Declaration public Image image Field Value Type Description UnityEngine.UI.Image | Improve this Doc textField Declaration public TMP_Text textField Field Value Type Description TMPro.TMP_Text Methods | Improve this Doc SetButtonContent(Sprite) Declaration public void SetButtonContent(Sprite sprite) Parameters Type Name Description Sprite sprite | Improve this Doc SetButtonContent(String) Declaration public void SetButtonContent(string text) Parameters Type Name Description System.String text"
  },
  "api/VRBuilder.UI.Utils.NumPadTagAccept.html": {
    "href": "api/VRBuilder.UI.Utils.NumPadTagAccept.html",
    "title": "Class NumPadTagAccept | VR Builder Documentation",
    "keywords": "Class NumPadTagAccept Inheritance System.Object NumPadTagAccept Namespace : VRBuilder.UI.Utils Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public class NumPadTagAccept : MonoBehaviour"
  },
  "api/VRBuilder.UI.Utils.NumPadTagDelete.html": {
    "href": "api/VRBuilder.UI.Utils.NumPadTagDelete.html",
    "title": "Class NumPadTagDelete | VR Builder Documentation",
    "keywords": "Class NumPadTagDelete Inheritance System.Object NumPadTagDelete Namespace : VRBuilder.UI.Utils Assembly : VRBuilder.UserInterface.AddOn.dll Syntax public class NumPadTagDelete : MonoBehaviour"
  },
  "api/VRBuilder.Unity.CoroutineDispatcher.html": {
    "href": "api/VRBuilder.Unity.CoroutineDispatcher.html",
    "title": "Class CoroutineDispatcher | VR Builder Documentation",
    "keywords": "Class CoroutineDispatcher Auxiliary class that allows starting UnityCoroutines from a context that is not itself a MonoBehaviour. Inheritance System.Object UnitySingleton < CoroutineDispatcher > CoroutineDispatcher Inherited Members UnitySingleton<CoroutineDispatcher>.Instance UnitySingleton<CoroutineDispatcher>.Awake() UnitySingleton<CoroutineDispatcher>.OnDestroy() Namespace : VRBuilder.Unity Assembly : VRBuilder.Core.dll Syntax public class CoroutineDispatcher : UnitySingleton<CoroutineDispatcher>"
  },
  "api/VRBuilder.Unity.html": {
    "href": "api/VRBuilder.Unity.html",
    "title": "Namespace VRBuilder.Unity | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Unity Classes CoroutineDispatcher Auxiliary class that allows starting UnityCoroutines from a context that is not itself a MonoBehaviour. SceneUtils Singleton<T> UnityDebugLogErrorWriter A TextWriter implementation that outputs any added text to Unity's DebugLogger UnitySceneSingleton<T> An UnitySceneSingleton is intended to be destroyed on scene change. UnitySingleton<T> Make sure we always have one and only one instance of this class when we need it."
  },
  "api/VRBuilder.Unity.SceneUtils.html": {
    "href": "api/VRBuilder.Unity.SceneUtils.html",
    "title": "Class SceneUtils | VR Builder Documentation",
    "keywords": "Class SceneUtils Inheritance System.Object SceneUtils Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Unity Assembly : VRBuilder.Core.dll Syntax public static class SceneUtils Methods | Improve this Doc View Source ContainsMissingScripts(GameObject) Checks whether a gameObject contains missing scripts. Declaration public static bool ContainsMissingScripts(GameObject gameObject) Parameters Type Name Description GameObject gameObject GameObject to check. Returns Type Description System.Boolean True, if scripts are missing. | Improve this Doc View Source GetActiveAndInactiveComponents<T>() Get all loaded components, both active and inactive. Declaration public static IEnumerable<T> GetActiveAndInactiveComponents<T>() where T : Component Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source GetActiveAndInactiveGameObjects() Get all loaded game objects, both active and inactive. Declaration public static IEnumerable<GameObject> GetActiveAndInactiveGameObjects() Returns Type Description System.Collections.Generic.IEnumerable < GameObject > | Improve this Doc View Source GetComponentInParentIncludingInactive<T>(GameObject) Returns the component of Type T in the gameObject or any of its parents, null if there isn't one. In contrast to this method also includes inactive components. Declaration public static T GetComponentInParentIncludingInactive<T>(this GameObject gameObject) where T : Component Parameters Type Name Description GameObject gameObject Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetOrAddComponent<T>(GameObject) Returns an instance of the component of type T . If no instance of the component exists on the gameObject yet, a new instance will be created. Otherwise, the behaviour is identical to that of GameObject.GetComponent&lt;T> . Declaration public static T GetOrAddComponent<T>(this GameObject gameObject) where T : Component Parameters Type Name Description GameObject gameObject Returns Type Description T Type Parameters Name Description T"
  },
  "api/VRBuilder.Unity.Singleton-1.html": {
    "href": "api/VRBuilder.Unity.Singleton-1.html",
    "title": "Class Singleton<T> | VR Builder Documentation",
    "keywords": "Class Singleton<T> Inheritance System.Object Singleton<T> TextToSpeechProviderFactory Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Unity Assembly : VRBuilder.Core.dll Syntax public abstract class Singleton<T> where T : Singleton<T>, new() Type Parameters Name Description T Properties | Improve this Doc View Source Instance Declaration public static T Instance { get; } Property Value Type Description T"
  },
  "api/VRBuilder.Unity.UnityDebugLogErrorWriter.html": {
    "href": "api/VRBuilder.Unity.UnityDebugLogErrorWriter.html",
    "title": "Class UnityDebugLogErrorWriter | VR Builder Documentation",
    "keywords": "Class UnityDebugLogErrorWriter A TextWriter implementation that outputs any added text to Unity's DebugLogger Inheritance System.Object System.MarshalByRefObject System.IO.TextWriter UnityDebugLogErrorWriter Implements System.IDisposable Inherited Members System.IO.TextWriter.Null System.IO.TextWriter.CoreNewLine System.IO.TextWriter.Close() System.IO.TextWriter.Dispose(System.Boolean) System.IO.TextWriter.Dispose() System.IO.TextWriter.Synchronized(System.IO.TextWriter) System.IO.TextWriter.Write(System.Char[]) System.IO.TextWriter.Write(System.Boolean) System.IO.TextWriter.Write(System.Int32) System.IO.TextWriter.Write(System.UInt32) System.IO.TextWriter.Write(System.Int64) System.IO.TextWriter.Write(System.UInt64) System.IO.TextWriter.Write(System.Single) System.IO.TextWriter.Write(System.Double) System.IO.TextWriter.Write(System.Decimal) System.IO.TextWriter.Write(System.Object) System.IO.TextWriter.Write(System.String, System.Object) System.IO.TextWriter.Write(System.String, System.Object, System.Object) System.IO.TextWriter.Write(System.String, System.Object, System.Object, System.Object) System.IO.TextWriter.Write(System.String, System.Object[]) System.IO.TextWriter.WriteLine() System.IO.TextWriter.WriteLine(System.Char) System.IO.TextWriter.WriteLine(System.Char[]) System.IO.TextWriter.WriteLine(System.Char[], System.Int32, System.Int32) System.IO.TextWriter.WriteLine(System.Boolean) System.IO.TextWriter.WriteLine(System.Int32) System.IO.TextWriter.WriteLine(System.UInt32) System.IO.TextWriter.WriteLine(System.Int64) System.IO.TextWriter.WriteLine(System.UInt64) System.IO.TextWriter.WriteLine(System.Single) System.IO.TextWriter.WriteLine(System.Double) System.IO.TextWriter.WriteLine(System.Decimal) System.IO.TextWriter.WriteLine(System.String) System.IO.TextWriter.WriteLine(System.Object) System.IO.TextWriter.WriteLine(System.String, System.Object) System.IO.TextWriter.WriteLine(System.String, System.Object, System.Object) System.IO.TextWriter.WriteLine(System.String, System.Object, System.Object, System.Object) System.IO.TextWriter.WriteLine(System.String, System.Object[]) System.IO.TextWriter.WriteAsync(System.Char) System.IO.TextWriter.WriteAsync(System.String) System.IO.TextWriter.WriteAsync(System.Char[]) System.IO.TextWriter.WriteAsync(System.Char[], System.Int32, System.Int32) System.IO.TextWriter.WriteLineAsync(System.Char) System.IO.TextWriter.WriteLineAsync(System.String) System.IO.TextWriter.WriteLineAsync(System.Char[]) System.IO.TextWriter.WriteLineAsync(System.Char[], System.Int32, System.Int32) System.IO.TextWriter.WriteLineAsync() System.IO.TextWriter.FlushAsync() System.IO.TextWriter.FormatProvider System.IO.TextWriter.NewLine System.MarshalByRefObject.MemberwiseClone(System.Boolean) System.MarshalByRefObject.GetLifetimeService() System.MarshalByRefObject.InitializeLifetimeService() System.MarshalByRefObject.CreateObjRef(System.Type) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Unity Assembly : VRBuilder.Core.dll Syntax public class UnityDebugLogErrorWriter : TextWriter, IDisposable Properties | Improve this Doc View Source Encoding Declaration public override Encoding Encoding { get; } Property Value Type Description System.Text.Encoding Overrides System.IO.TextWriter.Encoding Methods | Improve this Doc View Source Flush() Declaration public override void Flush() Overrides System.IO.TextWriter.Flush() | Improve this Doc View Source Write(Char) Declaration public override void Write(char value) Parameters Type Name Description System.Char value Overrides System.IO.TextWriter.Write(System.Char) | Improve this Doc View Source Write(Char[], Int32, Int32) Declaration public override void Write(char[] value, int index, int count) Parameters Type Name Description System.Char [] value System.Int32 index System.Int32 count Overrides System.IO.TextWriter.Write(System.Char[], System.Int32, System.Int32) | Improve this Doc View Source Write(String) Declaration public override void Write(string value) Parameters Type Name Description System.String value Overrides System.IO.TextWriter.Write(System.String) Implements System.IDisposable"
  },
  "api/VRBuilder.Unity.UnitySceneSingleton-1.html": {
    "href": "api/VRBuilder.Unity.UnitySceneSingleton-1.html",
    "title": "Class UnitySceneSingleton<T> | VR Builder Documentation",
    "keywords": "Class UnitySceneSingleton<T> An UnitySceneSingleton is intended to be destroyed on scene change. Inheritance System.Object UnitySceneSingleton<T> InputController Namespace : VRBuilder.Unity Assembly : VRBuilder.Core.dll Syntax public abstract class UnitySceneSingleton<T> : MonoBehaviour where T : UnitySceneSingleton<T> Type Parameters Name Description T Properties | Improve this Doc View Source ConcreteType Concrete Implementation of the given class T, this also allows abstract classes as singletons. Declaration public static Type ConcreteType { get; } Property Value Type Description System.Type | Improve this Doc View Source Exists Declaration public static bool Exists { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Instance Public accessor for the singleton object, will create a new instance if necessary. Declaration public static T Instance { get; protected set; } Property Value Type Description T Methods | Improve this Doc View Source Awake() Declaration protected virtual void Awake() | Improve this Doc View Source GetName() Declaration protected virtual string GetName() Returns Type Description System.String | Improve this Doc View Source OnDestroy() Declaration protected virtual void OnDestroy()"
  },
  "api/VRBuilder.Unity.UnitySingleton-1.html": {
    "href": "api/VRBuilder.Unity.UnitySingleton-1.html",
    "title": "Class UnitySingleton<T> | VR Builder Documentation",
    "keywords": "Class UnitySingleton<T> Make sure we always have one and only one instance of this class when we need it. Inheritance System.Object UnitySingleton<T> CoroutineDispatcher Namespace : VRBuilder.Unity Assembly : VRBuilder.Core.dll Syntax public class UnitySingleton<T> : MonoBehaviour where T : UnitySingleton<T> Type Parameters Name Description T Properties | Improve this Doc View Source Instance Public accessor for the singleton object. Will create a new instance if necessary. Declaration public static T Instance { get; protected set; } Property Value Type Description T Methods | Improve this Doc View Source Awake() Declaration protected virtual void Awake() | Improve this Doc View Source OnDestroy() Declaration protected virtual void OnDestroy()"
  },
  "api/VRBuilder.UX.BaseProcessController.html": {
    "href": "api/VRBuilder.UX.BaseProcessController.html",
    "title": "Class BaseProcessController | VR Builder Documentation",
    "keywords": "Class BaseProcessController Base process controller which instantiates a defined prefab. Inheritance System.Object BaseProcessController NetcodeProcessController SpectatorProcessController StandardProcessController Implements IProcessController Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UX Assembly : VRBuilder.Core.dll Syntax public abstract class BaseProcessController : IProcessController Properties | Improve this Doc View Source Name Declaration public abstract string Name { get; } Property Value Type Description System.String | Improve this Doc View Source PrefabName Name of the process controller prefab. Declaration protected abstract string PrefabName { get; } Property Value Type Description System.String | Improve this Doc View Source Priority Declaration public abstract int Priority { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source GetProcessControllerPrefab() Declaration public virtual GameObject GetProcessControllerPrefab() Returns Type Description GameObject | Improve this Doc View Source GetRequiredSetupComponents() Declaration public virtual List<Type> GetRequiredSetupComponents() Returns Type Description System.Collections.Generic.List < System.Type > | Improve this Doc View Source HandlePostSetup(GameObject) Declaration public virtual void HandlePostSetup(GameObject processControllerObject) Parameters Type Name Description GameObject processControllerObject Implements IProcessController"
  },
  "api/VRBuilder.UX.html": {
    "href": "api/VRBuilder.UX.html",
    "title": "Namespace VRBuilder.UX | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.UX Classes BaseProcessController Base process controller which instantiates a defined prefab. InitProcessOnSceneLoad Initializes the ProcessRunner with the current selected process on scene start. ProcessControllerSetup Manages the setup of the process controller and lets the developer choose the IProcessController . SpectatorCamera Spectator camera which sets its viewpoint to the one of the user. SpectatorCameraDummy Dummy object which can be used to set viewpoints into the scene. Will remove its camera component on runtime and can be used in combination with SpectatorCamera . SpectatorController Controller for a spectator to toggle UI visibility. SpectatorProcessController Default process controller. StandardProcessController Process controller for standalone devices like the Oculus Quest. Interfaces IProcessController Controller for managing the process. Can for example instantiate a controller menu and a spectator camera."
  },
  "api/VRBuilder.UX.InitProcessOnSceneLoad.html": {
    "href": "api/VRBuilder.UX.InitProcessOnSceneLoad.html",
    "title": "Class InitProcessOnSceneLoad | VR Builder Documentation",
    "keywords": "Class InitProcessOnSceneLoad Initializes the ProcessRunner with the current selected process on scene start. Inheritance System.Object InitProcessOnSceneLoad Namespace : VRBuilder.UX Assembly : VRBuilder.Core.dll Syntax public class InitProcessOnSceneLoad : MonoBehaviour"
  },
  "api/VRBuilder.UX.IProcessController.html": {
    "href": "api/VRBuilder.UX.IProcessController.html",
    "title": "Interface IProcessController | VR Builder Documentation",
    "keywords": "Interface IProcessController Controller for managing the process. Can for example instantiate a controller menu and a spectator camera. Namespace : VRBuilder.UX Assembly : VRBuilder.Core.dll Syntax public interface IProcessController Properties | Improve this Doc View Source Name Prettified name. Declaration string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Priority Priority of the controller. Declaration int Priority { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source GetProcessControllerPrefab() Gets a process controller game object. Declaration GameObject GetProcessControllerPrefab() Returns Type Description GameObject | Improve this Doc View Source GetRequiredSetupComponents() List of component types which are required on the setup object. Declaration List<Type> GetRequiredSetupComponents() Returns Type Description System.Collections.Generic.List < System.Type > List of component types. | Improve this Doc View Source HandlePostSetup(GameObject) Handles post-setup logic. Should be called after all components are added and object is initialized. Declaration void HandlePostSetup(GameObject processControllerObject) Parameters Type Name Description GameObject processControllerObject Actual process controller object"
  },
  "api/VRBuilder.UX.ProcessControllerSetup.html": {
    "href": "api/VRBuilder.UX.ProcessControllerSetup.html",
    "title": "Class ProcessControllerSetup | VR Builder Documentation",
    "keywords": "Class ProcessControllerSetup Manages the setup of the process controller and lets the developer choose the IProcessController . Inheritance System.Object ProcessControllerSetup Namespace : VRBuilder.UX Assembly : VRBuilder.Core.dll Syntax public class ProcessControllerSetup : MonoBehaviour Fields | Improve this Doc View Source enforcedProcessController Enforced process controller will be use. Declaration protected static IProcessController enforcedProcessController Field Value Type Description IProcessController Properties | Improve this Doc View Source CurrentProcessController Current used process controller. Declaration public IProcessController CurrentProcessController { get; protected set; } Property Value Type Description IProcessController Methods | Improve this Doc View Source OnEnable() Declaration protected virtual void OnEnable() | Improve this Doc View Source ResetToDefault() Resets the to the name of the process controller with the highest priority. Declaration public void ResetToDefault() Remarks This may be used when instantiating a process controller prefab to make sure the default process controller is used. | Improve this Doc View Source SetEnforcedProcessController(IProcessController) Enforces the given controller to be used, if possible. Declaration public static void SetEnforcedProcessController(IProcessController processController) Parameters Type Name Description IProcessController processController Controller to be used. Remarks Scene has to be reloaded to use enforced ProcessController. | Improve this Doc View Source SetProcessControllerQualifiedName(String) Declaration public void SetProcessControllerQualifiedName(string processControllerQualifiedName) Parameters Type Name Description System.String processControllerQualifiedName"
  },
  "api/VRBuilder.UX.SpectatorCamera.html": {
    "href": "api/VRBuilder.UX.SpectatorCamera.html",
    "title": "Class SpectatorCamera | VR Builder Documentation",
    "keywords": "Class SpectatorCamera Spectator camera which sets its viewpoint to the one of the user. Inheritance System.Object SpectatorCamera Namespace : VRBuilder.UX Assembly : VRBuilder.Core.dll Syntax public class SpectatorCamera : MonoBehaviour Methods | Improve this Doc View Source Start() Declaration protected virtual void Start() | Improve this Doc View Source Update() Declaration protected virtual void Update() | Improve this Doc View Source UpdateCameraPositionAndRotation() Sets the position and rotation of the spectator camera to the one of the user. Declaration protected virtual void UpdateCameraPositionAndRotation()"
  },
  "api/VRBuilder.UX.SpectatorCameraDummy.html": {
    "href": "api/VRBuilder.UX.SpectatorCameraDummy.html",
    "title": "Class SpectatorCameraDummy | VR Builder Documentation",
    "keywords": "Class SpectatorCameraDummy Dummy object which can be used to set viewpoints into the scene. Will remove its camera component on runtime and can be used in combination with SpectatorCamera . Inheritance System.Object SpectatorCameraDummy Namespace : VRBuilder.UX Assembly : VRBuilder.Core.dll Syntax public class SpectatorCameraDummy : MonoBehaviour Fields | Improve this Doc View Source CameraName Declaration public string CameraName Field Value Type Description System.String Methods | Improve this Doc View Source Awake() Declaration public void Awake()"
  },
  "api/VRBuilder.UX.SpectatorController.html": {
    "href": "api/VRBuilder.UX.SpectatorController.html",
    "title": "Class SpectatorController | VR Builder Documentation",
    "keywords": "Class SpectatorController Controller for a spectator to toggle UI visibility. Inheritance System.Object InputActionListener SpectatorController Implements IInputActionListener Inherited Members InputActionListener.Priority InputActionListener.IgnoreFocus InputActionListener.RegisterInputEvent(Action<InputController.InputEventArgs>) InputActionListener.UnregisterInputEvent(Action<InputController.InputEventArgs>) Namespace : VRBuilder.UX Assembly : VRBuilder.Core.dll Syntax public class SpectatorController : InputActionListener, IInputActionListener Methods | Improve this Doc View Source OnDisable() Declaration protected void OnDisable() | Improve this Doc View Source OnEnable() Declaration protected void OnEnable() | Improve this Doc View Source ToggleOverlay(InputController.InputEventArgs) Declaration protected void ToggleOverlay(InputController.InputEventArgs args) Parameters Type Name Description InputController.InputEventArgs args Events | Improve this Doc View Source ToggleUIOverlayVisibility Event fired when UI visibility is toggled. Declaration public event EventHandler ToggleUIOverlayVisibility Event Type Type Description System.EventHandler Implements IInputActionListener"
  },
  "api/VRBuilder.UX.SpectatorProcessController.html": {
    "href": "api/VRBuilder.UX.SpectatorProcessController.html",
    "title": "Class SpectatorProcessController | VR Builder Documentation",
    "keywords": "Class SpectatorProcessController Default process controller. Inheritance System.Object BaseProcessController SpectatorProcessController Implements IProcessController Inherited Members BaseProcessController.GetProcessControllerPrefab() BaseProcessController.HandlePostSetup(GameObject) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UX Assembly : VRBuilder.Core.dll Syntax public class SpectatorProcessController : BaseProcessController, IProcessController Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides BaseProcessController.Name | Improve this Doc View Source PrefabName Declaration protected override string PrefabName { get; } Property Value Type Description System.String Overrides BaseProcessController.PrefabName | Improve this Doc View Source Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides BaseProcessController.Priority Methods | Improve this Doc View Source GetRequiredSetupComponents() Declaration public override List<Type> GetRequiredSetupComponents() Returns Type Description System.Collections.Generic.List < System.Type > Overrides BaseProcessController.GetRequiredSetupComponents() Implements IProcessController"
  },
  "api/VRBuilder.UX.StandardProcessController.html": {
    "href": "api/VRBuilder.UX.StandardProcessController.html",
    "title": "Class StandardProcessController | VR Builder Documentation",
    "keywords": "Class StandardProcessController Process controller for standalone devices like the Oculus Quest. Inheritance System.Object BaseProcessController StandardProcessController Implements IProcessController Inherited Members BaseProcessController.GetProcessControllerPrefab() BaseProcessController.HandlePostSetup(GameObject) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.UX Assembly : VRBuilder.Core.dll Syntax public class StandardProcessController : BaseProcessController, IProcessController Properties | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides BaseProcessController.Name | Improve this Doc View Source PrefabName Declaration protected override string PrefabName { get; } Property Value Type Description System.String Overrides BaseProcessController.PrefabName | Improve this Doc View Source Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides BaseProcessController.Priority Methods | Improve this Doc View Source GetRequiredSetupComponents() Declaration public override List<Type> GetRequiredSetupComponents() Returns Type Description System.Collections.Generic.List < System.Type > Overrides BaseProcessController.GetRequiredSetupComponents() Implements IProcessController"
  },
  "api/VRBuilder.VideoTools.Behaviors.html": {
    "href": "api/VRBuilder.VideoTools.Behaviors.html",
    "title": "Namespace VRBuilder.VideoTools.Behaviors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.VideoTools.Behaviors Classes PlayAnimationClipBehavior Plays an animation clip and ends when the clip is over. PlayAnimationClipBehavior.ActivatingProcess PlayAnimationClipBehavior.EntityData Entity data for PlayAnimationClipBehavior . PlayVideoBehavior Plays a videoclip and ends when the clip is over. PlayVideoBehavior.ActivatingProcess PlayVideoBehavior.EntityData Entity data for PlayVideoBehavior ."
  },
  "api/VRBuilder.VideoTools.Behaviors.PlayAnimationClipBehavior.ActivatingProcess.html": {
    "href": "api/VRBuilder.VideoTools.Behaviors.PlayAnimationClipBehavior.ActivatingProcess.html",
    "title": "Class PlayAnimationClipBehavior.ActivatingProcess | VR Builder Documentation",
    "keywords": "Class PlayAnimationClipBehavior.ActivatingProcess Inheritance System.Object StageProcess < PlayAnimationClipBehavior.EntityData > PlayAnimationClipBehavior.ActivatingProcess Implements IStageProcess Inherited Members StageProcess<PlayAnimationClipBehavior.EntityData>.Data StageProcess<PlayAnimationClipBehavior.EntityData>.Outer System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.VideoTools.Behaviors Assembly : VRBuilder.Animations.dll Syntax public class ActivatingProcess : StageProcess<PlayAnimationClipBehavior.EntityData>, IStageProcess Constructors | Improve this Doc View Source ActivatingProcess(PlayAnimationClipBehavior.EntityData) Declaration public ActivatingProcess(PlayAnimationClipBehavior.EntityData data) Parameters Type Name Description PlayAnimationClipBehavior.EntityData data Methods | Improve this Doc View Source End() Declaration public override void End() Overrides VRBuilder.Core.StageProcess<VRBuilder.VideoTools.Behaviors.PlayAnimationClipBehavior.EntityData>.End() | Improve this Doc View Source FastForward() Declaration public override void FastForward() Overrides VRBuilder.Core.StageProcess<VRBuilder.VideoTools.Behaviors.PlayAnimationClipBehavior.EntityData>.FastForward() | Improve this Doc View Source Start() Declaration public override void Start() Overrides VRBuilder.Core.StageProcess<VRBuilder.VideoTools.Behaviors.PlayAnimationClipBehavior.EntityData>.Start() | Improve this Doc View Source Update() Declaration public override IEnumerator Update() Returns Type Description System.Collections.IEnumerator Overrides VRBuilder.Core.StageProcess<VRBuilder.VideoTools.Behaviors.PlayAnimationClipBehavior.EntityData>.Update() Implements IStageProcess"
  },
  "api/VRBuilder.VideoTools.Behaviors.PlayAnimationClipBehavior.EntityData.html": {
    "href": "api/VRBuilder.VideoTools.Behaviors.PlayAnimationClipBehavior.EntityData.html",
    "title": "Class PlayAnimationClipBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class PlayAnimationClipBehavior.EntityData Entity data for PlayAnimationClipBehavior . Inheritance System.Object PlayAnimationClipBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.VideoTools.Behaviors Assembly : VRBuilder.Animations.dll Syntax [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source AnimationClipPath Animation clip resource. Declaration [DataMember] [UsesSpecificProcessDrawer(\"AnimationClipResourceDrawer\")] [DisplayName(\"Animation clip\")] public string AnimationClipPath { get; set; } Property Value Type Description System.String | Improve this Doc View Source AnimationProperty Object to be animated by the clip. Declaration [DataMember] [DisplayName(\"Object to animate\")] public SingleScenePropertyReference<IAnimationProperty> AnimationProperty { get; set; } Property Value Type Description SingleScenePropertyReference < IAnimationProperty > | Improve this Doc View Source Metadata Declaration [DataMember] public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.VideoTools.Behaviors.PlayAnimationClipBehavior.html": {
    "href": "api/VRBuilder.VideoTools.Behaviors.PlayAnimationClipBehavior.html",
    "title": "Class PlayAnimationClipBehavior | VR Builder Documentation",
    "keywords": "Class PlayAnimationClipBehavior Plays an animation clip and ends when the clip is over. Inheritance System.Object Entity < PlayAnimationClipBehavior.EntityData > Behavior < PlayAnimationClipBehavior.EntityData > PlayAnimationClipBehavior Implements IDataOwner < PlayAnimationClipBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<PlayAnimationClipBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<PlayAnimationClipBehavior.EntityData>.Clone() Entity<PlayAnimationClipBehavior.EntityData>.Data Entity<PlayAnimationClipBehavior.EntityData>.IDataOwner.Data Entity<PlayAnimationClipBehavior.EntityData>.LifeCycle Entity<PlayAnimationClipBehavior.EntityData>.Parent Entity<PlayAnimationClipBehavior.EntityData>.GetActiveProcess() Entity<PlayAnimationClipBehavior.EntityData>.GetDeactivatingProcess() Entity<PlayAnimationClipBehavior.EntityData>.GetConfigurator() Entity<PlayAnimationClipBehavior.EntityData>.Configure(IMode) Entity<PlayAnimationClipBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.VideoTools.Behaviors Assembly : VRBuilder.Animations.dll Syntax public class PlayAnimationClipBehavior : Behavior<PlayAnimationClipBehavior.EntityData>, IDataOwner<PlayAnimationClipBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source PlayAnimationClipBehavior() Declaration [JsonConstructor] public PlayAnimationClipBehavior() | Improve this Doc View Source PlayAnimationClipBehavior(String, Guid) Declaration public PlayAnimationClipBehavior(string clipPath, Guid objectId) Parameters Type Name Description System.String clipPath System.Guid objectId Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.VideoTools.Behaviors.PlayAnimationClipBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.VideoTools.Behaviors.PlayVideoBehavior.ActivatingProcess.html": {
    "href": "api/VRBuilder.VideoTools.Behaviors.PlayVideoBehavior.ActivatingProcess.html",
    "title": "Class PlayVideoBehavior.ActivatingProcess | VR Builder Documentation",
    "keywords": "Class PlayVideoBehavior.ActivatingProcess Inheritance System.Object StageProcess < PlayVideoBehavior.EntityData > PlayVideoBehavior.ActivatingProcess Implements IStageProcess Inherited Members StageProcess<PlayVideoBehavior.EntityData>.Data StageProcess<PlayVideoBehavior.EntityData>.Outer System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.VideoTools.Behaviors Assembly : VRBuilder.VideoTools.dll Syntax public class ActivatingProcess : StageProcess<PlayVideoBehavior.EntityData>, IStageProcess Constructors | Improve this Doc View Source ActivatingProcess(PlayVideoBehavior.EntityData) Declaration public ActivatingProcess(PlayVideoBehavior.EntityData data) Parameters Type Name Description PlayVideoBehavior.EntityData data Methods | Improve this Doc View Source End() Declaration public override void End() Overrides VRBuilder.Core.StageProcess<VRBuilder.VideoTools.Behaviors.PlayVideoBehavior.EntityData>.End() | Improve this Doc View Source FastForward() Declaration public override void FastForward() Overrides VRBuilder.Core.StageProcess<VRBuilder.VideoTools.Behaviors.PlayVideoBehavior.EntityData>.FastForward() | Improve this Doc View Source Start() Declaration public override void Start() Overrides VRBuilder.Core.StageProcess<VRBuilder.VideoTools.Behaviors.PlayVideoBehavior.EntityData>.Start() | Improve this Doc View Source Update() Declaration public override IEnumerator Update() Returns Type Description System.Collections.IEnumerator Overrides VRBuilder.Core.StageProcess<VRBuilder.VideoTools.Behaviors.PlayVideoBehavior.EntityData>.Update() Implements IStageProcess"
  },
  "api/VRBuilder.VideoTools.Behaviors.PlayVideoBehavior.EntityData.html": {
    "href": "api/VRBuilder.VideoTools.Behaviors.PlayVideoBehavior.EntityData.html",
    "title": "Class PlayVideoBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class PlayVideoBehavior.EntityData Entity data for PlayVideoBehavior . Inheritance System.Object PlayVideoBehavior.EntityData Implements IBehaviorData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.VideoTools.Behaviors Assembly : VRBuilder.VideoTools.dll Syntax [DataContract(IsReference = true)] public class EntityData : IBehaviorData, INamedData, IData Properties | Improve this Doc View Source Metadata Declaration [DataMember] public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source VideoPlayer Video player which will play the video. Declaration [DataMember] [DisplayName(\"Video player\")] public SingleScenePropertyReference<IVideoPlayerProperty> VideoPlayer { get; set; } Property Value Type Description SingleScenePropertyReference < IVideoPlayerProperty > | Improve this Doc View Source VideoSource Video asset source. First value is an asset path, second value is a URL. Declaration [DataMember] [UsesSpecificProcessDrawer(\"StringsSelectableValueDrawer\")] [DisplayName(\"Video clip\")] public VideoClipOrURLSelectableValue VideoSource { get; set; } Property Value Type Description VideoClipOrURLSelectableValue Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.VideoTools.Behaviors.PlayVideoBehavior.html": {
    "href": "api/VRBuilder.VideoTools.Behaviors.PlayVideoBehavior.html",
    "title": "Class PlayVideoBehavior | VR Builder Documentation",
    "keywords": "Class PlayVideoBehavior Plays a videoclip and ends when the clip is over. Inheritance System.Object Entity < PlayVideoBehavior.EntityData > Behavior < PlayVideoBehavior.EntityData > PlayVideoBehavior Implements IDataOwner < PlayVideoBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<PlayVideoBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Behavior<PlayVideoBehavior.EntityData>.Clone() Entity<PlayVideoBehavior.EntityData>.Data Entity<PlayVideoBehavior.EntityData>.IDataOwner.Data Entity<PlayVideoBehavior.EntityData>.LifeCycle Entity<PlayVideoBehavior.EntityData>.Parent Entity<PlayVideoBehavior.EntityData>.GetActiveProcess() Entity<PlayVideoBehavior.EntityData>.GetDeactivatingProcess() Entity<PlayVideoBehavior.EntityData>.GetConfigurator() Entity<PlayVideoBehavior.EntityData>.Configure(IMode) Entity<PlayVideoBehavior.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.VideoTools.Behaviors Assembly : VRBuilder.VideoTools.dll Syntax public class PlayVideoBehavior : Behavior<PlayVideoBehavior.EntityData>, IDataOwner<PlayVideoBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors | Improve this Doc View Source PlayVideoBehavior() Declaration [JsonConstructor] public PlayVideoBehavior() Methods | Improve this Doc View Source GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.VideoTools.Behaviors.PlayVideoBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.VideoTools.html": {
    "href": "api/VRBuilder.VideoTools.html",
    "title": "Namespace VRBuilder.VideoTools | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.VideoTools Classes VideoPlayerProperty Property that controls a VideoPlayer ."
  },
  "api/VRBuilder.VideoTools.Properties.html": {
    "href": "api/VRBuilder.VideoTools.Properties.html",
    "title": "Namespace VRBuilder.VideoTools.Properties | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.VideoTools.Properties Interfaces IVideoPlayerProperty Property that controls a video player."
  },
  "api/VRBuilder.VideoTools.Properties.IVideoPlayerProperty.html": {
    "href": "api/VRBuilder.VideoTools.Properties.IVideoPlayerProperty.html",
    "title": "Interface IVideoPlayerProperty | VR Builder Documentation",
    "keywords": "Interface IVideoPlayerProperty Property that controls a video player. Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.VideoTools.Properties Assembly : VRBuilder.VideoTools.dll Syntax public interface IVideoPlayerProperty : ISceneObjectProperty Properties | Improve this Doc View Source IsPlaying True while the video is playing. Declaration bool IsPlaying { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Play() Starts playback of the selected video. Declaration void Play() | Improve this Doc View Source SetVideoResourcePath(String) Sets the source video to the specified Resources path. Declaration void SetVideoResourcePath(string path) Parameters Type Name Description System.String path | Improve this Doc View Source SetVideoURL(String) Sets the source video to the specified URL. Declaration void SetVideoURL(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Stop() Stops playback of the currently playing video. Declaration void Stop()"
  },
  "api/VRBuilder.VideoTools.VideoPlayerProperty.html": {
    "href": "api/VRBuilder.VideoTools.VideoPlayerProperty.html",
    "title": "Class VideoPlayerProperty | VR Builder Documentation",
    "keywords": "Class VideoPlayerProperty Property that controls a VideoPlayer . Inheritance System.Object ProcessSceneObjectProperty VideoPlayerProperty Implements IVideoPlayerProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.VideoTools Assembly : VRBuilder.VideoTools.dll Syntax public class VideoPlayerProperty : ProcessSceneObjectProperty, IVideoPlayerProperty, ISceneObjectProperty Properties | Improve this Doc View Source Is360Video True if the video should be played as a 360° video. Declaration public bool Is360Video { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsPlaying Declaration public bool IsPlaying { get; } Property Value Type Description System.Boolean | Improve this Doc View Source VideoPlayer The VideoPlayer associated with this property. Declaration public VideoPlayer VideoPlayer { get; } Property Value Type Description VideoPlayer Methods | Improve this Doc View Source Play() Declaration public void Play() | Improve this Doc View Source SetVideoResourcePath(String) Declaration public void SetVideoResourcePath(string path) Parameters Type Name Description System.String path | Improve this Doc View Source SetVideoURL(String) Declaration public void SetVideoURL(string url) Parameters Type Name Description System.String url | Improve this Doc View Source Stop() Declaration public void Stop() Implements IVideoPlayerProperty ISceneObjectProperty"
  },
  "api/VRBuilder.VIRTOSHA.Components.DebugDrillingAffordance.html": {
    "href": "api/VRBuilder.VIRTOSHA.Components.DebugDrillingAffordance.html",
    "title": "Class DebugDrillingAffordance | VR Builder Documentation",
    "keywords": "Class DebugDrillingAffordance Debug drilling affordance implementation, displaying a particle system and the depth in mm. Inheritance System.Object DrillingAffordance DebugDrillingAffordance Namespace : VRBuilder.VIRTOSHA.Components Assembly : VRBuilder.VIRTOSHA.dll Syntax public class DebugDrillingAffordance : DrillingAffordance Methods | Improve this Doc View Source Remove() Declaration public override void Remove() Overrides DrillingAffordance.Remove() | Improve this Doc View Source SetDepth(Single) Declaration public override void SetDepth(float depth) Parameters Type Name Description System.Single depth Overrides DrillingAffordance.SetDepth(Single) | Improve this Doc View Source SetWidth(Single) Declaration public override void SetWidth(float width) Parameters Type Name Description System.Single width Overrides DrillingAffordance.SetWidth(Single)"
  },
  "api/VRBuilder.VIRTOSHA.Components.DebugHoleRepresentation.html": {
    "href": "api/VRBuilder.VIRTOSHA.Components.DebugHoleRepresentation.html",
    "title": "Class DebugHoleRepresentation | VR Builder Documentation",
    "keywords": "Class DebugHoleRepresentation Visualizes the holes on a drillable property by spawning a sphere on the entrance point and showing the depth in mm. Inheritance System.Object DebugHoleRepresentation Namespace : VRBuilder.VIRTOSHA.Components Assembly : VRBuilder.VIRTOSHA.dll Syntax public class DebugHoleRepresentation : MonoBehaviour"
  },
  "api/VRBuilder.VIRTOSHA.Components.DepthDisplay.html": {
    "href": "api/VRBuilder.VIRTOSHA.Components.DepthDisplay.html",
    "title": "Class DepthDisplay | VR Builder Documentation",
    "keywords": "Class DepthDisplay Displays a value in mm on a text mesh. Inheritance System.Object DepthDisplay Namespace : VRBuilder.VIRTOSHA.Components Assembly : VRBuilder.VIRTOSHA.dll Syntax public class DepthDisplay : MonoBehaviour Methods | Improve this Doc View Source SetDepth(Single) Set the displayed depth to the specified value. Declaration public void SetDepth(float depth) Parameters Type Name Description System.Single depth"
  },
  "api/VRBuilder.VIRTOSHA.Components.Drill.html": {
    "href": "api/VRBuilder.VIRTOSHA.Components.Drill.html",
    "title": "Class Drill | VR Builder Documentation",
    "keywords": "Class Drill Component defining a drilling tool that can be activated by holding the use action. Requires a DrillBit component on a child object. Inheritance System.Object Drill Implements IDrill Namespace : VRBuilder.VIRTOSHA.Components Assembly : VRBuilder.VIRTOSHA.dll Syntax public class Drill : MonoBehaviour, IDrill Properties | Improve this Doc View Source CurrentDrillDepth Declaration public float CurrentDrillDepth { get; } Property Value Type Description System.Single | Improve this Doc View Source IsDrilling Declaration public bool IsDrilling { get; } Property Value Type Description System.Boolean Events | Improve this Doc View Source DrillingStarted Declaration public event EventHandler<DrillEventArgs> DrillingStarted Event Type Type Description System.EventHandler < DrillEventArgs > | Improve this Doc View Source DrillingStopped Declaration public event EventHandler<DrillEventArgs> DrillingStopped Event Type Type Description System.EventHandler < DrillEventArgs > Implements IDrill"
  },
  "api/VRBuilder.VIRTOSHA.Components.DrillBit.html": {
    "href": "api/VRBuilder.VIRTOSHA.Components.DrillBit.html",
    "title": "Class DrillBit | VR Builder Documentation",
    "keywords": "Class DrillBit Defines a drill bit used by a Drill to drill holes. Needs a reference to a DrillTip component. Inheritance System.Object DrillBit Namespace : VRBuilder.VIRTOSHA.Components Assembly : VRBuilder.VIRTOSHA.dll Syntax public class DrillBit : MonoBehaviour Properties | Improve this Doc View Source Base Returns the base of the drill bit. Declaration public Transform Base { get; } Property Value Type Description Transform | Improve this Doc View Source InUse True while the drill is being used. Declaration public bool InUse { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Tip Gets the transform of the drill tip. Declaration public Transform Tip { get; } Property Value Type Description Transform The transform of the drill tip. | Improve this Doc View Source Width Width of the holes created by this drill bit. Declaration public float Width { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source EmitTouchedDrillableObject(IDrillableProperty, Collider) Emits an event when a drillable object is touched by the drill bit. Declaration public void EmitTouchedDrillableObject(IDrillableProperty drillableProperty, Collider otherCollider) Parameters Type Name Description IDrillableProperty drillableProperty The drillable property of the object being touched. Collider otherCollider The collider of the object being touched. Events | Improve this Doc View Source TouchedDrillableObject Called when the tip of the drill bit touches an object which is drillable. Declaration public event EventHandler<DrillBitEventArgs> TouchedDrillableObject Event Type Type Description System.EventHandler < DrillBitEventArgs >"
  },
  "api/VRBuilder.VIRTOSHA.Components.DrillBitEventArgs.html": {
    "href": "api/VRBuilder.VIRTOSHA.Components.DrillBitEventArgs.html",
    "title": "Class DrillBitEventArgs | VR Builder Documentation",
    "keywords": "Class DrillBitEventArgs Inheritance System.Object System.EventArgs DrillBitEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.VIRTOSHA.Components Assembly : VRBuilder.VIRTOSHA.dll Syntax public class DrillBitEventArgs : EventArgs Constructors | Improve this Doc View Source DrillBitEventArgs(IDrillableProperty, Collider) Declaration public DrillBitEventArgs(IDrillableProperty drillableProperty, Collider otherCollider) Parameters Type Name Description IDrillableProperty drillableProperty Collider otherCollider Fields | Improve this Doc View Source DrillableProperty Declaration public readonly IDrillableProperty DrillableProperty Field Value Type Description IDrillableProperty | Improve this Doc View Source OtherCollider Declaration public readonly Collider OtherCollider Field Value Type Description Collider"
  },
  "api/VRBuilder.VIRTOSHA.Components.DrillEventArgs.html": {
    "href": "api/VRBuilder.VIRTOSHA.Components.DrillEventArgs.html",
    "title": "Class DrillEventArgs | VR Builder Documentation",
    "keywords": "Class DrillEventArgs Event args for IDrill events. Inheritance System.Object System.EventArgs DrillEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.VIRTOSHA.Components Assembly : VRBuilder.VIRTOSHA.dll Syntax public class DrillEventArgs : EventArgs Constructors | Improve this Doc View Source DrillEventArgs(Vector3, Vector3, Single) Declaration public DrillEventArgs(Vector3 enterPoint, Vector3 direction, float holeWidth) Parameters Type Name Description Vector3 enterPoint Vector3 direction System.Single holeWidth Fields | Improve this Doc View Source Direction Declaration public readonly Vector3 Direction Field Value Type Description Vector3 | Improve this Doc View Source EnterPoint Declaration public readonly Vector3 EnterPoint Field Value Type Description Vector3 | Improve this Doc View Source HoleWidth Declaration public readonly float HoleWidth Field Value Type Description System.Single"
  },
  "api/VRBuilder.VIRTOSHA.Components.DrillingAffordance.html": {
    "href": "api/VRBuilder.VIRTOSHA.Components.DrillingAffordance.html",
    "title": "Class DrillingAffordance | VR Builder Documentation",
    "keywords": "Class DrillingAffordance Provides some feedback while a Drill is drilling. Inheritance System.Object DrillingAffordance DebugDrillingAffordance Namespace : VRBuilder.VIRTOSHA.Components Assembly : VRBuilder.VIRTOSHA.dll Syntax public abstract class DrillingAffordance : MonoBehaviour Methods | Improve this Doc View Source Remove() Removes this visualization. Declaration public abstract void Remove() | Improve this Doc View Source SetDepth(Single) Sets the depth of the visualized hole. Declaration public abstract void SetDepth(float depth) Parameters Type Name Description System.Single depth | Improve this Doc View Source SetWidth(Single) Sets the width of the visualized hole. Declaration public abstract void SetWidth(float width) Parameters Type Name Description System.Single width"
  },
  "api/VRBuilder.VIRTOSHA.Components.DrillTip.html": {
    "href": "api/VRBuilder.VIRTOSHA.Components.DrillTip.html",
    "title": "Class DrillTip | VR Builder Documentation",
    "keywords": "Class DrillTip Component representing the tip of the drill, used to register collisions when starting to drill holes. Inheritance System.Object DrillTip Namespace : VRBuilder.VIRTOSHA.Components Assembly : VRBuilder.VIRTOSHA.dll Syntax public class DrillTip : MonoBehaviour Methods | Improve this Doc View Source Init(DrillBit) Declaration public void Init(DrillBit parent) Parameters Type Name Description DrillBit parent"
  },
  "api/VRBuilder.VIRTOSHA.Components.html": {
    "href": "api/VRBuilder.VIRTOSHA.Components.html",
    "title": "Namespace VRBuilder.VIRTOSHA.Components | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.VIRTOSHA.Components Classes DebugDrillingAffordance Debug drilling affordance implementation, displaying a particle system and the depth in mm. DebugHoleRepresentation Visualizes the holes on a drillable property by spawning a sphere on the entrance point and showing the depth in mm. DepthDisplay Displays a value in mm on a text mesh. Drill Component defining a drilling tool that can be activated by holding the use action. Requires a DrillBit component on a child object. DrillBit Defines a drill bit used by a Drill to drill holes. Needs a reference to a DrillTip component. DrillBitEventArgs DrillEventArgs Event args for IDrill events. DrillingAffordance Provides some feedback while a Drill is drilling. DrillTip Component representing the tip of the drill, used to register collisions when starting to drill holes. Interfaces IDrill An object that can drill holes in a drillable property."
  },
  "api/VRBuilder.VIRTOSHA.Components.IDrill.html": {
    "href": "api/VRBuilder.VIRTOSHA.Components.IDrill.html",
    "title": "Interface IDrill | VR Builder Documentation",
    "keywords": "Interface IDrill An object that can drill holes in a drillable property. Namespace : VRBuilder.VIRTOSHA.Components Assembly : VRBuilder.VIRTOSHA.dll Syntax public interface IDrill Properties | Improve this Doc View Source CurrentDrillDepth Current depth of the hole. Declaration float CurrentDrillDepth { get; } Property Value Type Description System.Single | Improve this Doc View Source IsDrilling True while the object is drilling. Declaration bool IsDrilling { get; } Property Value Type Description System.Boolean Events | Improve this Doc View Source DrillingStarted Called when the object starts drilling a hole. Declaration event EventHandler<DrillEventArgs> DrillingStarted Event Type Type Description System.EventHandler < DrillEventArgs > | Improve this Doc View Source DrillingStopped Called when the object stops drilling the hole. Declaration event EventHandler<DrillEventArgs> DrillingStopped Event Type Type Description System.EventHandler < DrillEventArgs >"
  },
  "api/VRBuilder.VIRTOSHA.Conditions.DrillHolesCondition.EntityData.html": {
    "href": "api/VRBuilder.VIRTOSHA.Conditions.DrillHolesCondition.EntityData.html",
    "title": "Class DrillHolesCondition.EntityData | VR Builder Documentation",
    "keywords": "Class DrillHolesCondition.EntityData Entity data for DrillHolesCondition . Inheritance System.Object DrillHolesCondition.EntityData Implements IConditionData ICompletableData INamedData IData Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.VIRTOSHA.Conditions Assembly : VRBuilder.VIRTOSHA.dll Syntax public class EntityData : IConditionData, ICompletableData, INamedData, IData Properties | Improve this Doc View Source DrillableObject Object to be drilled. Declaration [DataMember] [DisplayName(\"Drillable object\")] public SingleScenePropertyReference<IDrillableProperty> DrillableObject { get; set; } Property Value Type Description SingleScenePropertyReference < IDrillableProperty > | Improve this Doc View Source DrillableSockets Sockets representing the holes to be drilled on the target object. Declaration [DataMember] [DisplayName(\"Drillable sockets\")] public MultipleScenePropertyReference<IDrillableSocketProperty> DrillableSockets { get; set; } Property Value Type Description MultipleScenePropertyReference < IDrillableSocketProperty > | Improve this Doc View Source IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata | Improve this Doc View Source Name Declaration [IgnoreDataMember] public string Name { get; } Property Value Type Description System.String Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.VIRTOSHA.Conditions.DrillHolesCondition.html": {
    "href": "api/VRBuilder.VIRTOSHA.Conditions.DrillHolesCondition.html",
    "title": "Class DrillHolesCondition | VR Builder Documentation",
    "keywords": "Class DrillHolesCondition Condition which becomes completed when a hole is created at the required position. Inheritance System.Object Entity < DrillHolesCondition.EntityData > CompletableEntity < DrillHolesCondition.EntityData > Condition < DrillHolesCondition.EntityData > DrillHolesCondition Implements IDataOwner < DrillHolesCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<DrillHolesCondition.EntityData>.IDataOwner<IConditionData>.Data Condition<DrillHolesCondition.EntityData>.Clone() Condition<DrillHolesCondition.EntityData>.GetLockableProperties() CompletableEntity<DrillHolesCondition.EntityData>.IsCompleted CompletableEntity<DrillHolesCondition.EntityData>.Autocomplete() Entity<DrillHolesCondition.EntityData>.Data Entity<DrillHolesCondition.EntityData>.IDataOwner.Data Entity<DrillHolesCondition.EntityData>.LifeCycle Entity<DrillHolesCondition.EntityData>.Parent Entity<DrillHolesCondition.EntityData>.GetActivatingProcess() Entity<DrillHolesCondition.EntityData>.GetDeactivatingProcess() Entity<DrillHolesCondition.EntityData>.GetConfigurator() Entity<DrillHolesCondition.EntityData>.Configure(IMode) Entity<DrillHolesCondition.EntityData>.Update() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.VIRTOSHA.Conditions Assembly : VRBuilder.VIRTOSHA.dll Syntax [DataContract(IsReference = true)] public class DrillHolesCondition : Condition<DrillHolesCondition.EntityData>, IDataOwner<DrillHolesCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors | Improve this Doc View Source DrillHolesCondition() Declaration [JsonConstructor] public DrillHolesCondition() Methods | Improve this Doc View Source GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.VIRTOSHA.Conditions.DrillHolesCondition.EntityData>.GetActiveProcess() | Improve this Doc View Source GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.VIRTOSHA.Conditions.DrillHolesCondition.EntityData>.GetAutocompleter() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.VIRTOSHA.Conditions.html": {
    "href": "api/VRBuilder.VIRTOSHA.Conditions.html",
    "title": "Namespace VRBuilder.VIRTOSHA.Conditions | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.VIRTOSHA.Conditions Classes DrillHolesCondition Condition which becomes completed when a hole is created at the required position. DrillHolesCondition.EntityData Entity data for DrillHolesCondition ."
  },
  "api/VRBuilder.VIRTOSHA.Properties.DrillableProperty.html": {
    "href": "api/VRBuilder.VIRTOSHA.Properties.DrillableProperty.html",
    "title": "Class DrillableProperty | VR Builder Documentation",
    "keywords": "Class DrillableProperty Property that stores holes that can be dynamically drilled on its game object. Inheritance System.Object ProcessSceneObjectProperty LockableProperty DrillableProperty Implements IDrillableProperty ISceneObjectProperty ILockable Inherited Members LockableProperty.Locked LockableProperty.Unlocked LockableProperty.LockOnParentObjectLock LockableProperty.IsLocked LockableProperty.EndStepLocked LockableProperty.OnEnable() LockableProperty.OnDisable() LockableProperty.SetLocked(Boolean) LockableProperty.RequestLocked(Boolean, IStepData) LockableProperty.RemoveUnlocker(IStepData) ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.VIRTOSHA.Properties Assembly : VRBuilder.VIRTOSHA.dll Syntax public class DrillableProperty : LockableProperty, IDrillableProperty, ISceneObjectProperty, ILockable Properties | Improve this Doc View Source Colliders Declaration public IEnumerable<Collider> Colliders { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Collider > | Improve this Doc View Source HoleCreated Declaration public UnityEvent<DrillablePropertyEventArgs> HoleCreated { get; } Property Value Type Description UnityEvent < DrillablePropertyEventArgs > Methods | Improve this Doc View Source CreateHole(Vector3, Vector3, Single) Declaration public void CreateHole(Vector3 enterPosition, Vector3 endPosition, float width) Parameters Type Name Description Vector3 enterPosition Vector3 endPosition System.Single width | Improve this Doc View Source CreateHole(Hole) Declaration public void CreateHole(Hole hole) Parameters Type Name Description Hole hole | Improve this Doc View Source HasHole(Vector3, Vector3, Single, Single, Single, Single) Declaration public bool HasHole(Vector3 enterPosition, Vector3 endPosition, float width, float startTolerance, float endTolerance, float widthTolerance) Parameters Type Name Description Vector3 enterPosition Vector3 endPosition System.Single width System.Single startTolerance System.Single endTolerance System.Single widthTolerance Returns Type Description System.Boolean | Improve this Doc View Source HasHole(Hole, Single, Single, Single) Declaration public bool HasHole(Hole hole, float startTolerance, float endTolerance, float widthTolerance) Parameters Type Name Description Hole hole System.Single startTolerance System.Single endTolerance System.Single widthTolerance Returns Type Description System.Boolean | Improve this Doc View Source InternalSetLocked(Boolean) Declaration protected override void InternalSetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState Overrides LockableProperty.InternalSetLocked(Boolean) Implements IDrillableProperty ISceneObjectProperty ILockable"
  },
  "api/VRBuilder.VIRTOSHA.Properties.DrillablePropertyEventArgs.html": {
    "href": "api/VRBuilder.VIRTOSHA.Properties.DrillablePropertyEventArgs.html",
    "title": "Class DrillablePropertyEventArgs | VR Builder Documentation",
    "keywords": "Class DrillablePropertyEventArgs Inheritance System.Object System.EventArgs DrillablePropertyEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.VIRTOSHA.Properties Assembly : VRBuilder.VIRTOSHA.dll Syntax public class DrillablePropertyEventArgs : EventArgs Constructors | Improve this Doc View Source DrillablePropertyEventArgs(Hole) Declaration public DrillablePropertyEventArgs(Hole hole) Parameters Type Name Description Hole hole Fields | Improve this Doc View Source Hole Declaration public readonly Hole Hole Field Value Type Description Hole"
  },
  "api/VRBuilder.VIRTOSHA.Properties.DrillableSocketEndPoint.html": {
    "href": "api/VRBuilder.VIRTOSHA.Properties.DrillableSocketEndPoint.html",
    "title": "Class DrillableSocketEndPoint | VR Builder Documentation",
    "keywords": "Class DrillableSocketEndPoint Defines the end point game object of a drillable socket. Inheritance System.Object DrillableSocketEndPoint Namespace : VRBuilder.VIRTOSHA.Properties Assembly : VRBuilder.VIRTOSHA.dll Syntax public class DrillableSocketEndPoint : MonoBehaviour"
  },
  "api/VRBuilder.VIRTOSHA.Properties.DrillableSocketProperty.html": {
    "href": "api/VRBuilder.VIRTOSHA.Properties.DrillableSocketProperty.html",
    "title": "Class DrillableSocketProperty | VR Builder Documentation",
    "keywords": "Class DrillableSocketProperty A game object defining a potential hole to be drilled. Inheritance System.Object ProcessSceneObjectProperty LockableProperty DrillableSocketProperty Implements IDrillableSocketProperty ISceneObjectProperty ILockable Inherited Members LockableProperty.Locked LockableProperty.Unlocked LockableProperty.LockOnParentObjectLock LockableProperty.IsLocked LockableProperty.EndStepLocked LockableProperty.OnEnable() LockableProperty.OnDisable() LockableProperty.SetLocked(Boolean) LockableProperty.RequestLocked(Boolean, IStepData) LockableProperty.RemoveUnlocker(IStepData) ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.VIRTOSHA.Properties Assembly : VRBuilder.VIRTOSHA.dll Syntax public class DrillableSocketProperty : LockableProperty, IDrillableSocketProperty, ISceneObjectProperty, ILockable Properties | Improve this Doc View Source EndPoint End point of the hole. Corresponds to the position of the end point game object parented to this drillable socket. Declaration public Vector3 EndPoint { get; } Property Value Type Description Vector3 | Improve this Doc View Source EndTolerance Maximum acceptable distance from the end point. Declaration public float EndTolerance { get; } Property Value Type Description System.Single | Improve this Doc View Source EnterPoint Beginning point of the hole. Can either correspond to transform or be placed on the surface of an intersecting drillable object. Declaration public Vector3 EnterPoint { get; } Property Value Type Description Vector3 | Improve this Doc View Source EnterTolerance Maximum acceptable distance from the enter point. Declaration public float EnterTolerance { get; } Property Value Type Description System.Single | Improve this Doc View Source Width Width of the hole. Declaration public float Width { get; } Property Value Type Description System.Single | Improve this Doc View Source WidthTolerance Maximum acceptable difference in width. Declaration public float WidthTolerance { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source Configure(Hole, Single, Single, Single, Boolean) Configure the drillable socket with the provided parameters. Declaration public void Configure(Hole hole, float enterTolerance = 0.01F, float endTolerance = 0.01F, float widthTolerance = 0.001F, bool placeEnterPointOnSurface = true) Parameters Type Name Description Hole hole The Hole object to configure the property with. System.Single enterTolerance The tolerance value for entering the hole. System.Single endTolerance The tolerance value for reaching the end of the hole. System.Single widthTolerance The tolerance value for the width of the hole. System.Boolean placeEnterPointOnSurface Determines whether to place the enter point on the surface of the drillable object. | Improve this Doc View Source InternalSetLocked(Boolean) Declaration protected override void InternalSetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState Overrides LockableProperty.InternalSetLocked(Boolean) Implements IDrillableSocketProperty ISceneObjectProperty ILockable"
  },
  "api/VRBuilder.VIRTOSHA.Properties.html": {
    "href": "api/VRBuilder.VIRTOSHA.Properties.html",
    "title": "Namespace VRBuilder.VIRTOSHA.Properties | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.VIRTOSHA.Properties Classes DrillableProperty Property that stores holes that can be dynamically drilled on its game object. DrillablePropertyEventArgs DrillableSocketEndPoint Defines the end point game object of a drillable socket. DrillableSocketProperty A game object defining a potential hole to be drilled. Interfaces IDrillableProperty Property for an object that can be drilled holes into. IDrillableSocketProperty Property for a scene object that represents a drillable hole."
  },
  "api/VRBuilder.VIRTOSHA.Properties.IDrillableProperty.html": {
    "href": "api/VRBuilder.VIRTOSHA.Properties.IDrillableProperty.html",
    "title": "Interface IDrillableProperty | VR Builder Documentation",
    "keywords": "Interface IDrillableProperty Property for an object that can be drilled holes into. Inherited Members ISceneObjectProperty.SceneObject ILockable.Locked ILockable.Unlocked ILockable.IsLocked ILockable.SetLocked(Boolean) ILockable.RequestLocked(Boolean, IStepData) ILockable.RemoveUnlocker(IStepData) Namespace : VRBuilder.VIRTOSHA.Properties Assembly : VRBuilder.VIRTOSHA.dll Syntax public interface IDrillableProperty : ISceneObjectProperty, ILockable Properties | Improve this Doc View Source Colliders Colliders affected by this drillable property. Declaration IEnumerable<Collider> Colliders { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Collider > | Improve this Doc View Source HoleCreated Called when a new hole is added to this property. Declaration UnityEvent<DrillablePropertyEventArgs> HoleCreated { get; } Property Value Type Description UnityEvent < DrillablePropertyEventArgs > Methods | Improve this Doc View Source CreateHole(Vector3, Vector3, Single) Creates a hole with the specified characteristic in the object. Declaration void CreateHole(Vector3 enterPosition, Vector3 endPosition, float width) Parameters Type Name Description Vector3 enterPosition Vector3 endPosition System.Single width | Improve this Doc View Source CreateHole(Hole) Creates a hole with the specified characteristic in the object. Declaration void CreateHole(Hole hole) Parameters Type Name Description Hole hole | Improve this Doc View Source HasHole(Vector3, Vector3, Single, Single, Single, Single) Returns true if the object has at least a hole that satisfies the given requisites. Declaration bool HasHole(Vector3 enterPosition, Vector3 endPosition, float width, float startTolerance, float endTolerance, float widthTolerance) Parameters Type Name Description Vector3 enterPosition Vector3 endPosition System.Single width System.Single startTolerance System.Single endTolerance System.Single widthTolerance Returns Type Description System.Boolean | Improve this Doc View Source HasHole(Hole, Single, Single, Single) Creates a hole with the specified characteristic in the object. Declaration bool HasHole(Hole hole, float enterTolerance, float endTolerance, float widthTolerance) Parameters Type Name Description Hole hole System.Single enterTolerance System.Single endTolerance System.Single widthTolerance Returns Type Description System.Boolean"
  },
  "api/VRBuilder.VIRTOSHA.Properties.IDrillableSocketProperty.html": {
    "href": "api/VRBuilder.VIRTOSHA.Properties.IDrillableSocketProperty.html",
    "title": "Interface IDrillableSocketProperty | VR Builder Documentation",
    "keywords": "Interface IDrillableSocketProperty Property for a scene object that represents a drillable hole. Inherited Members ISceneObjectProperty.SceneObject ILockable.Locked ILockable.Unlocked ILockable.IsLocked ILockable.SetLocked(Boolean) ILockable.RequestLocked(Boolean, IStepData) ILockable.RemoveUnlocker(IStepData) Namespace : VRBuilder.VIRTOSHA.Properties Assembly : VRBuilder.VIRTOSHA.dll Syntax public interface IDrillableSocketProperty : ISceneObjectProperty, ILockable Properties | Improve this Doc View Source EndPoint Expected end point of the hole. Declaration Vector3 EndPoint { get; } Property Value Type Description Vector3 | Improve this Doc View Source EndTolerance Distance from the expected end point which will still be considered valid. Declaration float EndTolerance { get; } Property Value Type Description System.Single | Improve this Doc View Source EnterPoint Expected enter point of the hole. Declaration Vector3 EnterPoint { get; } Property Value Type Description Vector3 | Improve this Doc View Source EnterTolerance Distance from the expected enter point which will still be considered valid. Declaration float EnterTolerance { get; } Property Value Type Description System.Single | Improve this Doc View Source Width Expected width of the drillable hole. Declaration float Width { get; } Property Value Type Description System.Single | Improve this Doc View Source WidthTolerance Acceptable difference in width with the actual hole. Declaration float WidthTolerance { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source Configure(Hole, Single, Single, Single, Boolean) Configures the drillable socket with the desired values. Declaration void Configure(Hole hole, float enterTolerance = 0.01F, float endTolerance = 0.01F, float widthTolerance = 0.001F, bool placeEnterPointOnSurface = true) Parameters Type Name Description Hole hole System.Single enterTolerance System.Single endTolerance System.Single widthTolerance System.Boolean placeEnterPointOnSurface"
  },
  "api/VRBuilder.VIRTOSHA.Structs.Hole.html": {
    "href": "api/VRBuilder.VIRTOSHA.Structs.Hole.html",
    "title": "Struct Hole | VR Builder Documentation",
    "keywords": "Struct Hole Defines a hole drilled on a game object. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : VRBuilder.VIRTOSHA.Structs Assembly : VRBuilder.VIRTOSHA.dll Syntax public struct Hole Constructors | Improve this Doc View Source Hole(Vector3, Vector3, Single) Declaration public Hole(Vector3 enterPoint, Vector3 endPoint, float width) Parameters Type Name Description Vector3 enterPoint Vector3 endPoint System.Single width Properties | Improve this Doc View Source EndPoint The end point of the hole in local space. Declaration public Vector3 EndPoint { readonly get; } Property Value Type Description Vector3 | Improve this Doc View Source EnterPoint The start point of the hole in local space. Declaration public Vector3 EnterPoint { readonly get; } Property Value Type Description Vector3 | Improve this Doc View Source Width The width of the hole. Declaration public float Width { readonly get; } Property Value Type Description System.Single Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString()"
  },
  "api/VRBuilder.VIRTOSHA.Structs.html": {
    "href": "api/VRBuilder.VIRTOSHA.Structs.html",
    "title": "Namespace VRBuilder.VIRTOSHA.Structs | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.VIRTOSHA.Structs Structs Hole Defines a hole drilled on a game object."
  },
  "api/VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.html": {
    "href": "api/VRBuilder.XRInteraction.ActionBasedControllerManager.ControllerState.html",
    "title": "Class ActionBasedControllerManager.ControllerState | VR Builder Documentation",
    "keywords": "Class ActionBasedControllerManager.ControllerState Use this class to create a controller state and set up its enter, update, and exit events. Inheritance System.Object ActionBasedControllerManager.ControllerState Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax [Serializable] public class ControllerState Constructors | Improve this Doc View Source ControllerState(ActionBasedControllerManager.StateID) Declaration public ControllerState(ActionBasedControllerManager.StateID defaultId = ActionBasedControllerManager.StateID.None) Parameters Type Name Description ActionBasedControllerManager.StateID defaultId Properties | Improve this Doc View Source Enabled Sets the controller state to be active. For the default states, setting this value to true will automatically update their ActionBasedControllerManager.StateUpdateEvent . Declaration public bool Enabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ID Sets the identifier of the ActionBasedControllerManager.ControllerState from all the optional Controller States that the ActionBasedControllerManager holds. Declaration public ActionBasedControllerManager.StateID ID { get; set; } Property Value Type Description ActionBasedControllerManager.StateID | Improve this Doc View Source OnEnter The ActionBasedControllerManager.StateEnterEvent that will be invoked when entering the controller state. Declaration public ActionBasedControllerManager.StateEnterEvent OnEnter { get; set; } Property Value Type Description ActionBasedControllerManager.StateEnterEvent | Improve this Doc View Source OnExit The ActionBasedControllerManager.StateExitEvent that will be invoked when exiting the controller state. Declaration public ActionBasedControllerManager.StateExitEvent OnExit { get; set; } Property Value Type Description ActionBasedControllerManager.StateExitEvent | Improve this Doc View Source OnUpdate The ActionBasedControllerManager.StateUpdateEvent that will be invoked when updating the controller state. Declaration public ActionBasedControllerManager.StateUpdateEvent OnUpdate { get; set; } Property Value Type Description ActionBasedControllerManager.StateUpdateEvent"
  },
  "api/VRBuilder.XRInteraction.ActionBasedControllerManager.html": {
    "href": "api/VRBuilder.XRInteraction.ActionBasedControllerManager.html",
    "title": "Class ActionBasedControllerManager | VR Builder Documentation",
    "keywords": "Class ActionBasedControllerManager Use this class to map input actions to each controller state (mode) and set up the transitions between controller states (modes). Inheritance System.Object ActionBasedControllerManager Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public class ActionBasedControllerManager : MonoBehaviour Properties | Improve this Doc View Source BaseController The base controller , used for changing default settings on its components during state transitions. Declaration public GameObject BaseController { get; set; } Property Value Type Description GameObject | Improve this Doc View Source InteractState (Read Only) The default Interact state. Declaration public ActionBasedControllerManager.ControllerState InteractState { get; } Property Value Type Description ActionBasedControllerManager.ControllerState | Improve this Doc View Source Move The reference to the action of moving the XR rig with this controller. Declaration public InputActionReference Move { get; set; } Property Value Type Description UnityEngine.InputSystem.InputActionReference | Improve this Doc View Source RotateAnchor The reference to the action of rotating the selected object of this controller. Declaration public InputActionReference RotateAnchor { get; set; } Property Value Type Description UnityEngine.InputSystem.InputActionReference | Improve this Doc View Source SelectState (Read Only) The default Select state. Declaration public ActionBasedControllerManager.ControllerState SelectState { get; } Property Value Type Description ActionBasedControllerManager.ControllerState | Improve this Doc View Source TeleportController The teleport controller , used for changing default settings on its components during state transitions. Declaration public GameObject TeleportController { get; set; } Property Value Type Description GameObject | Improve this Doc View Source TeleportModeActivate The reference to the action of activating the teleport mode for this controller.\" Declaration public InputActionReference TeleportModeActivate { get; set; } Property Value Type Description UnityEngine.InputSystem.InputActionReference | Improve this Doc View Source TeleportModeCancel The reference to the action of canceling the teleport mode for this controller.\" Declaration public InputActionReference TeleportModeCancel { get; set; } Property Value Type Description UnityEngine.InputSystem.InputActionReference | Improve this Doc View Source TeleportState (Read Only) The default Teleport state. Declaration public ActionBasedControllerManager.ControllerState TeleportState { get; } Property Value Type Description ActionBasedControllerManager.ControllerState | Improve this Doc View Source TranslateAnchor The reference to the action of translating the selected object of this controller. Declaration public InputActionReference TranslateAnchor { get; set; } Property Value Type Description UnityEngine.InputSystem.InputActionReference | Improve this Doc View Source Turn The reference to the action of turning the XR rig with this controller. Declaration public InputActionReference Turn { get; set; } Property Value Type Description UnityEngine.InputSystem.InputActionReference | Improve this Doc View Source UIController The UI controller , used for changing default settings on its components during state transitions. Declaration public GameObject UIController { get; set; } Property Value Type Description GameObject | Improve this Doc View Source UIModeActivate The reference to the action of activating the teleport mode for this controller.\" Declaration public InputActionReference UIModeActivate { get; set; } Property Value Type Description UnityEngine.InputSystem.InputActionReference | Improve this Doc View Source UIState (Read Only) The default Interact state. Declaration public ActionBasedControllerManager.ControllerState UIState { get; } Property Value Type Description ActionBasedControllerManager.ControllerState Methods | Improve this Doc View Source ForceLockControllerState(ActionBasedControllerManager.StateID) Forces a transition to the desired state, bypassing the provided input actions. The controller will be locked in the specified state until manually unlocked. Declaration public void ForceLockControllerState(ActionBasedControllerManager.StateID stateID) Parameters Type Name Description ActionBasedControllerManager.StateID stateID ID of the state to switch to. | Improve this Doc View Source OnDisable() Declaration protected void OnDisable() | Improve this Doc View Source OnEnable() Declaration protected void OnEnable() | Improve this Doc View Source Start() Declaration protected void Start() | Improve this Doc View Source UnlockControllerState() Transitions to the default state and allows regular state switching via input actions. Declaration public void UnlockControllerState() | Improve this Doc View Source Update() Declaration protected void Update()"
  },
  "api/VRBuilder.XRInteraction.ActionBasedControllerManager.StateEnterEvent.html": {
    "href": "api/VRBuilder.XRInteraction.ActionBasedControllerManager.StateEnterEvent.html",
    "title": "Class ActionBasedControllerManager.StateEnterEvent | VR Builder Documentation",
    "keywords": "Class ActionBasedControllerManager.StateEnterEvent Inheritance System.Object ActionBasedControllerManager.StateEnterEvent Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax [Serializable] public class StateEnterEvent : UnityEvent<ActionBasedControllerManager.StateID>"
  },
  "api/VRBuilder.XRInteraction.ActionBasedControllerManager.StateExitEvent.html": {
    "href": "api/VRBuilder.XRInteraction.ActionBasedControllerManager.StateExitEvent.html",
    "title": "Class ActionBasedControllerManager.StateExitEvent | VR Builder Documentation",
    "keywords": "Class ActionBasedControllerManager.StateExitEvent Inheritance System.Object ActionBasedControllerManager.StateExitEvent Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax [Serializable] public class StateExitEvent : UnityEvent<ActionBasedControllerManager.StateID>"
  },
  "api/VRBuilder.XRInteraction.ActionBasedControllerManager.StateID.html": {
    "href": "api/VRBuilder.XRInteraction.ActionBasedControllerManager.StateID.html",
    "title": "Enum ActionBasedControllerManager.StateID | VR Builder Documentation",
    "keywords": "Enum ActionBasedControllerManager.StateID Reference to an interaction state. Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public enum StateID Fields Name Description Interact None Select Teleport UI"
  },
  "api/VRBuilder.XRInteraction.ActionBasedControllerManager.StateUpdateEvent.html": {
    "href": "api/VRBuilder.XRInteraction.ActionBasedControllerManager.StateUpdateEvent.html",
    "title": "Class ActionBasedControllerManager.StateUpdateEvent | VR Builder Documentation",
    "keywords": "Class ActionBasedControllerManager.StateUpdateEvent Inheritance System.Object ActionBasedControllerManager.StateUpdateEvent Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax [Serializable] public class StateUpdateEvent : UnityEvent"
  },
  "api/VRBuilder.XRInteraction.Animation.HandAnimatorController.html": {
    "href": "api/VRBuilder.XRInteraction.Animation.HandAnimatorController.html",
    "title": "Class HandAnimatorController | VR Builder Documentation",
    "keywords": "Class HandAnimatorController Reads values on current controller Select and Activate actions and uses them to drive hand animations. Inheritance System.Object HandAnimatorController Namespace : VRBuilder.XRInteraction.Animation Assembly : VRBuilder.XRInteraction.dll Syntax public class HandAnimatorController : MonoBehaviour Properties | Improve this Doc View Source ActivateValue Current controller activate value. Declaration public float ActivateValue { get; } Property Value Type Description System.Single | Improve this Doc View Source IsTeleportMode True if the controller is in teleport mode. Declaration public bool IsTeleportMode { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsUIMode True if the controller is in UI mode. Declaration public bool IsUIMode { get; } Property Value Type Description System.Boolean | Improve this Doc View Source SelectValue Current controller select value. Declaration public float SelectValue { get; } Property Value Type Description System.Single"
  },
  "api/VRBuilder.XRInteraction.Animation.html": {
    "href": "api/VRBuilder.XRInteraction.Animation.html",
    "title": "Namespace VRBuilder.XRInteraction.Animation | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.XRInteraction.Animation Classes HandAnimatorController Reads values on current controller Select and Activate actions and uses them to drive hand animations."
  },
  "api/VRBuilder.XRInteraction.Configuration.html": {
    "href": "api/VRBuilder.XRInteraction.Configuration.html",
    "title": "Namespace VRBuilder.XRInteraction.Configuration | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.XRInteraction.Configuration Classes XRInteractionComponentConfiguration Configuration for the default XR interaction component."
  },
  "api/VRBuilder.XRInteraction.Configuration.XRInteractionComponentConfiguration.html": {
    "href": "api/VRBuilder.XRInteraction.Configuration.XRInteractionComponentConfiguration.html",
    "title": "Class XRInteractionComponentConfiguration | VR Builder Documentation",
    "keywords": "Class XRInteractionComponentConfiguration Configuration for the default XR interaction component. Inheritance System.Object XRInteractionComponentConfiguration Implements IInteractionComponentConfiguration Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.XRInteraction.Configuration Assembly : VRBuilder.XRInteraction.dll Syntax public class XRInteractionComponentConfiguration : IInteractionComponentConfiguration Properties | Improve this Doc View Source DefaultRigPrefab Declaration public string DefaultRigPrefab { get; } Property Value Type Description System.String | Improve this Doc View Source DisplayName Declaration public string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source IsXRInteractionComponent Declaration public bool IsXRInteractionComponent { get; } Property Value Type Description System.Boolean Implements IInteractionComponentConfiguration"
  },
  "api/VRBuilder.XRInteraction.ControllerManager.ControllerState.html": {
    "href": "api/VRBuilder.XRInteraction.ControllerManager.ControllerState.html",
    "title": "Struct ControllerManager.ControllerState | VR Builder Documentation",
    "keywords": "Struct ControllerManager.ControllerState Current status of a controller. there will be two instances of this (for left/right). and this allows the system to change between different states on each controller independently. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public struct ControllerState Methods | Improve this Doc View Source ClearAll() Exits from all states that are in the list, basically a reset. Declaration public void ClearAll() | Improve this Doc View Source Initialize() Sets up the controller Declaration public void Initialize() | Improve this Doc View Source IsControllerInteracting(ControllerManager.ControllerStates) True if the interactor from given controller is either touching or grabbing an interactable. Declaration public bool IsControllerInteracting(ControllerManager.ControllerStates controller) Parameters Type Name Description ControllerManager.ControllerStates controller Returns Type Description System.Boolean | Improve this Doc View Source SetGameObject(ControllerManager.ControllerStates, GameObject) Attaches a game object that represents an interactor for a state, to a state. Declaration public void SetGameObject(ControllerManager.ControllerStates state, GameObject parentGamObject) Parameters Type Name Description ControllerManager.ControllerStates state The state that we're attaching the game object to GameObject parentGamObject The game object that represents the interactor for that state. | Improve this Doc View Source SetState(ControllerManager.ControllerStates) Attempts to set the current state of a controller. Declaration public void SetState(ControllerManager.ControllerStates nextState) Parameters Type Name Description ControllerManager.ControllerStates nextState The state that we wish to transition to"
  },
  "api/VRBuilder.XRInteraction.ControllerManager.ControllerStates.html": {
    "href": "api/VRBuilder.XRInteraction.ControllerManager.ControllerStates.html",
    "title": "Enum ControllerManager.ControllerStates | VR Builder Documentation",
    "keywords": "Enum ControllerManager.ControllerStates Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public enum ControllerStates Fields Name Description Interaction The Interaction state is used to interact with interactables. Max Maximum sentinel. Teleport The Teleport state is used to interact with teleport interactors and queue teleportations. UI The UI state is used to interact with Unity.UI elements."
  },
  "api/VRBuilder.XRInteraction.ControllerManager.html": {
    "href": "api/VRBuilder.XRInteraction.ControllerManager.html",
    "title": "Class ControllerManager | VR Builder Documentation",
    "keywords": "Class ControllerManager Handles controller states interactions. Contains all methods for performing basic math functions. Inheritance System.Object ControllerManager Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public class ControllerManager : MonoBehaviour Properties | Improve this Doc View Source CancelTeleportButton The buttons on the controller that will trigger a transition to the Teleport Controller. Declaration public InputHelpers.Button CancelTeleportButton { get; set; } Property Value Type Description UnityEngine.XR.Interaction.Toolkit.InputHelpers.Button | Improve this Doc View Source LeftBaseController The Game Object which represents the left hand for normal interaction purposes. Declaration public GameObject LeftBaseController { get; set; } Property Value Type Description GameObject | Improve this Doc View Source LeftTeleportController The Game Object which represents the left hand when teleporting. Declaration public GameObject LeftTeleportController { get; set; } Property Value Type Description GameObject | Improve this Doc View Source RightBaseController The Game Object which represents the right hand for normal interaction purposes. Declaration public GameObject RightBaseController { get; set; } Property Value Type Description GameObject | Improve this Doc View Source RightTeleportController The Game Object which represents the right hand when teleporting. Declaration public GameObject RightTeleportController { get; set; } Property Value Type Description GameObject | Improve this Doc View Source TeleportButton The buttons on the controller that will trigger a transition to the Teleport Controller. Declaration public InputHelpers.Button TeleportButton { get; set; } Property Value Type Description UnityEngine.XR.Interaction.Toolkit.InputHelpers.Button"
  },
  "api/VRBuilder.XRInteraction.ControllerManager.InteractorController.html": {
    "href": "api/VRBuilder.XRInteraction.ControllerManager.InteractorController.html",
    "title": "Struct ControllerManager.InteractorController | VR Builder Documentation",
    "keywords": "Struct ControllerManager.InteractorController A simple state machine which manages the three pieces of content that are used to represent a controller state within the XR Interaction Toolkit. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public struct InteractorController Methods | Improve this Doc View Source Attach(GameObject) When passed a gameObject, this function will scrape the game object for all valid components that we will interact with by enabling/disabling as the state changes Declaration public void Attach(GameObject gameObject) Parameters Type Name Description GameObject gameObject The game object to scrape the various components from | Improve this Doc View Source Enter() Enter this state, performs a set of changes to the associated components to enable things Declaration public void Enter() | Improve this Doc View Source IsInteractorInteracting() True if the interactor is either touching or grabbing an interactable. Declaration public bool IsInteractorInteracting() Returns Type Description System.Boolean | Improve this Doc View Source Leave() Leaves this state, performs a set of changes to the associate components to disable things. Declaration public void Leave()"
  },
  "api/VRBuilder.XRInteraction.DirectInteractor.html": {
    "href": "api/VRBuilder.XRInteraction.DirectInteractor.html",
    "title": "Class DirectInteractor | VR Builder Documentation",
    "keywords": "Class DirectInteractor Interactor used for directly interacting with interactables that are touching. This is handled via trigger volumes that update the current set of valid targets for this interactor. This component must have a collision volume that is set to be a trigger to work. Inheritance System.Object UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor DirectInteractor Implements UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor UnityEngine.XR.Interaction.Toolkit.IXRGroupMember UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractor UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractor UnityEngine.XR.Interaction.Toolkit.IXRInteractor Inherited Members UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.CanHover(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.CanSelect(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.improveAccuracyWithSphereCollider UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.usingSphereColliderAccuracyImprovement UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.physicsLayerMask UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.physicsTriggerInteraction UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.unsortedValidTargets UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnEnable() UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnDisable() UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnTriggerEnter(Collider) UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnTriggerStay(Collider) UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnTriggerExit(Collider) UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.PreprocessInteractor(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.ProcessInteractor(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.GetValidTargets(System.Collections.Generic.List<UnityEngine.XR.Interaction.Toolkit.IXRInteractable>) UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.CanHover(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable) UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.CanSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.selectActionTrigger UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hideControllerOnSelect UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.allowHoveredActivate UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.targetPriorityMode UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playAudioClipOnSelectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.audioClipForOnSelectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playAudioClipOnSelectExited UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.audioClipForOnSelectExited UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playAudioClipOnSelectCanceled UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.audioClipForOnSelectCanceled UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playAudioClipOnHoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.audioClipForOnHoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playAudioClipOnHoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.audioClipForOnHoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playAudioClipOnHoverCanceled UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.audioClipForOnHoverCanceled UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.allowHoverAudioWhileSelecting UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playHapticsOnSelectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticSelectEnterIntensity UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticSelectEnterDuration UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playHapticsOnSelectExited UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticSelectExitIntensity UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticSelectExitDuration UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playHapticsOnSelectCanceled UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticSelectCancelIntensity UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticSelectCancelDuration UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playHapticsOnHoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticHoverEnterIntensity UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticHoverEnterDuration UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playHapticsOnHoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticHoverExitIntensity UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticHoverExitDuration UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playHapticsOnHoverCanceled UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticHoverCancelIntensity UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticHoverCancelDuration UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.allowHoverHapticsWhileSelecting UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.allowActivate UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.xrController UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.isUISelectActive UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.uiScrollValue UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.shouldActivate UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.shouldDeactivate UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.GetActivateTargets(System.Collections.Generic.List<UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable>) UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.SendHapticImpulse(System.Single, System.Single) UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.PlayAudio(AudioClip) UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playAudioClipOnSelectEnter UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.audioClipForOnSelectEnter UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.AudioClipForOnSelectEnter UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playAudioClipOnSelectExit UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.audioClipForOnSelectExit UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.AudioClipForOnSelectExit UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playAudioClipOnHoverEnter UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.audioClipForOnHoverEnter UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.AudioClipForOnHoverEnter UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playAudioClipOnHoverExit UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.audioClipForOnHoverExit UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.AudioClipForOnHoverExit UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playHapticsOnSelectEnter UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playHapticsOnSelectExit UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playHapticsOnHoverEnter UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.validTargets UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.registered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.unregistered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.interactionManager UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.containingGroup UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.interactionLayers UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.attachTransform UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.keepSelectedTargetValid UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.disableVisualsWhenBlockedInGroup UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.startingSelectedInteractable UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.startingTargetFilter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.hoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.hoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.selectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.selectExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.targetFilter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.allowHover UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.allowSelect UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.isPerformingManualInteraction UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.interactablesHovered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.hasHover UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.interactablesSelected UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.firstInteractableSelected UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.hasSelection UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.startingHoverFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.hoverFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.startingSelectFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.selectFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.largestInteractionStrength UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.Reset() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.Start() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnDestroy() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetAttachTransform(UnityEngine.XR.Interaction.Toolkit.IXRInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetLocalAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.isHoverActive UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.targetsForSelection UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.IsHovering(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.IsSelecting(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.IsHovering(UnityEngine.XR.Interaction.Toolkit.IXRInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.IsSelecting(UnityEngine.XR.Interaction.Toolkit.IXRInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.selectedInteractableMovementTypeOverride UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.CaptureAttachPose(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.CreateAttachTransform() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetInteractionStrength(UnityEngine.XR.Interaction.Toolkit.IXRInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractor.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRInteractor.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRInteractor.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.CanHover(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.CanSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.StartManualInteraction(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.EndManualInteraction() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.ProcessHoverFilters(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.ProcessSelectFilters(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsGroupMember(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsNonGroupMember() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.interactionLayerMask UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.enableInteractions UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onHoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onHoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onSelectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onSelectExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onHoverEnter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onHoverExit UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onSelectEnter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onSelectExit UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.selectTarget UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.hoverTargets UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetHoverTargets(System.Collections.Generic.List<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable>) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetValidTargets(System.Collections.Generic.List<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable>) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.requireSelectExclusive UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.StartManualInteraction(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public class DirectInteractor : XRDirectInteractor, IXRHoverInteractor, IXRSelectInteractor, IXRTargetPriorityInteractor, IXRGroupMember, IXRInteractionStrengthInteractor, IXRActivateInteractor, IXRInteractor Remarks Adds extra control over applicable interactions. Properties | Improve this Doc View Source isSelectActive Gets whether the selection state is active for this interactor. This will check if the controller has a valid selection state or whether toggle selection is currently on and active. Declaration public override bool isSelectActive { get; } Property Value Type Description System.Boolean Overrides UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.isSelectActive | Improve this Doc View Source PrecisionGrab Toggles precision grab on this interactor. Declaration public bool PrecisionGrab { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source AttemptGrab() Attempts to grab an interactable hovering this interactor without needing to press the grab button on the controller. Declaration public virtual void AttemptGrab() | Improve this Doc View Source Awake() Declaration protected override void Awake() Overrides UnityEngine.XR.Interaction.Toolkit.XRDirectInteractor.Awake() | Improve this Doc View Source OnSelectEntering(SelectEnterEventArgs) This method is called by the Interaction Manager right before the Interactor first initiates selection of an Interactable in a first pass. Declaration protected override void OnSelectEntering(SelectEnterEventArgs arguments) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs arguments Event data containing the Interactable that is being selected. Overrides UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) Remarks arguments is only valid during this method call, do not hold a reference to it. | Improve this Doc View Source OnSelectExiting(SelectExitEventArgs) This method is called by the Interaction Manager right before the Interactor ends selection of an Interactable in a first pass. Declaration protected override void OnSelectExiting(SelectExitEventArgs arguments) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs arguments Event data containing the Interactable that is no longer selected. Overrides UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) Remarks arguments is only valid during this method call, do not hold a reference to it. Implements UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor UnityEngine.XR.Interaction.Toolkit.IXRGroupMember UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractor UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractor UnityEngine.XR.Interaction.Toolkit.IXRInteractor"
  },
  "api/VRBuilder.XRInteraction.html": {
    "href": "api/VRBuilder.XRInteraction.html",
    "title": "Namespace VRBuilder.XRInteraction | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.XRInteraction Classes ActionBasedControllerManager Use this class to map input actions to each controller state (mode) and set up the transitions between controller states (modes). ActionBasedControllerManager.ControllerState Use this class to create a controller state and set up its enter, update, and exit events. ActionBasedControllerManager.StateEnterEvent ActionBasedControllerManager.StateExitEvent ActionBasedControllerManager.StateUpdateEvent ControllerManager Handles controller states interactions. Contains all methods for performing basic math functions. DirectInteractor Interactor used for directly interacting with interactables that are touching. This is handled via trigger volumes that update the current set of valid targets for this interactor. This component must have a collision volume that is set to be a trigger to work. InteractableHighlighter Handles highlighting for attached InteractableObject . InteractableObject Interactable component that allows basic \"grab\" functionality. Can attach to selecting interactor and follow it around while obeying physics (and inherit velocity when released). LocomotionSchemeManager Use this class as a central manager to configure locomotion control schemes and configuration preferences. RayInteractor Interactor used for interacting with interactables at a distance. This is handled via raycasts that update the current set of valid targets for this interactor. RigManipulationProvider Locomotion provider to directly manipulate the XRRig's position and rotation. SnapZone Interactor used for holding interactables via a socket. This component is not designed to be attached to a controller (thus does not derive from XRBaseControllerInteractor) and instead will always attempt to select an interactable that it is hovering (though will not perform exclusive selection of that interactable). SnapZonePreviewDrawer Draws a preview of SnapZone highlight. TeleportationAnchorProximityEntry This adds the possibility to move the user into a UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor and trigger the teleport event without teleporting. It will not change the users position or rotation set in the UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor . TeleportationAnchorVRBuilder Teleportation anchor override that ensures a teleport provider is found even when the rig has been spawned after loading the scene. TeleportationAreaVRBuilder Teleportation area override that ensures a teleport provider is found even when the rig has been spawned after loading the scene. XRLocomotionHandler Locomotion handler for Unity XR. Structs ControllerManager.ControllerState Current status of a controller. there will be two instances of this (for left/right). and this allows the system to change between different states on each controller independently. ControllerManager.InteractorController A simple state machine which manages the three pieces of content that are used to represent a controller state within the XR Interaction Toolkit. Enums ActionBasedControllerManager.StateID Reference to an interaction state. ControllerManager.ControllerStates LocomotionSchemeManager.MoveForwardSourceType Sets which orientation the forward direction of continuous movement is relative to. LocomotionSchemeManager.MoveSchemeType Sets which movement control scheme to use. LocomotionSchemeManager.TurnStyleType Sets which turn style of locomotion to use."
  },
  "api/VRBuilder.XRInteraction.InteractableHighlighter.html": {
    "href": "api/VRBuilder.XRInteraction.InteractableHighlighter.html",
    "title": "Class InteractableHighlighter | VR Builder Documentation",
    "keywords": "Class InteractableHighlighter Handles highlighting for attached InteractableObject . Inheritance System.Object AbstractHighlighter DefaultHighlighter InteractableHighlighter Implements IHighlighter Inherited Members DefaultHighlighter.IsHighlighting DefaultHighlighter.Reset() DefaultHighlighter.StartHighlighting(Color, String) DefaultHighlighter.StartHighlighting(Material, String) DefaultHighlighter.StartHighlighting(Texture, String) DefaultHighlighter.StartHighlighting(Material) DefaultHighlighter.StopHighlighting() DefaultHighlighter.StopHighlighting(String) DefaultHighlighter.GetHighlightMaterial() DefaultHighlighter.ForceRefreshCachedRenderers() DefaultHighlighter.DisableRenders() DefaultHighlighter.ReenableRenderers() AbstractHighlighter.renderers AbstractHighlighter.highlightMeshRenderer AbstractHighlighter.highlightMeshFilter AbstractHighlighter.ClearCacheRenderers() AbstractHighlighter.RefreshCachedRenderers() AbstractHighlighter.CreateHighlightMaterial(Color) AbstractHighlighter.CreateHighlightMaterial(Texture) AbstractHighlighter.CanObjectBeHighlighted() Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public sealed class InteractableHighlighter : DefaultHighlighter, IHighlighter Properties | Improve this Doc View Source AllowOnGrabHighlight Determines if this InteractableObject should be highlighted when grabbed. Declaration public bool AllowOnGrabHighlight { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source AllowOnTouchHighlight Determines if this InteractableObject should be highlighted when touched. Declaration public bool AllowOnTouchHighlight { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source AllowOnUseHighlight Determines if this InteractableObject should be highlighted when used. Declaration public bool AllowOnUseHighlight { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source InteractableObject Reference to the InteractableObject . Declaration public InteractableObject InteractableObject { get; } Property Value Type Description InteractableObject Methods | Improve this Doc View Source OnDisable() Declaration protected override void OnDisable() Overrides DefaultHighlighter.OnDisable() Implements IHighlighter"
  },
  "api/VRBuilder.XRInteraction.InteractableObject.html": {
    "href": "api/VRBuilder.XRInteraction.InteractableObject.html",
    "title": "Class InteractableObject | VR Builder Documentation",
    "keywords": "Class InteractableObject Interactable component that allows basic \"grab\" functionality. Can attach to selecting interactor and follow it around while obeying physics (and inherit velocity when released). Inheritance System.Object UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable InteractableObject Implements UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable UnityEngine.XR.Interaction.Toolkit.IXRInteractable UnityEngine.XR.Interaction.Toolkit.IXROverridesGazeAutoSelect IInteractableObject Inherited Members UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.gravityOnDetach UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.attachTransform UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.secondaryAttachTransform UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.useDynamicAttach UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.matchAttachPosition UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.matchAttachRotation UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.snapToColliderVolume UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.reinitializeDynamicAttachEverySingleGrab UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.attachEaseInTime UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.movementType UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.velocityDamping UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.velocityScale UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.angularVelocityDamping UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.angularVelocityScale UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.trackPosition UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.smoothPosition UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.smoothPositionAmount UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.tightenPosition UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.trackRotation UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.smoothRotation UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.smoothRotationAmount UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.tightenRotation UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.trackScale UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.smoothScale UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.smoothScaleAmount UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.tightenScale UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.throwOnDetach UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.throwSmoothingDuration UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.throwSmoothingCurve UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.throwVelocityScale UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.throwAngularVelocityScale UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.forceGravityOnDetach UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.retainTransformParent UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.attachPointCompatibilityMode UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.startingSingleGrabTransformers UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.startingMultipleGrabTransformers UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.addDefaultGrabTransformers UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.singleGrabTransformersCount UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.multipleGrabTransformersCount UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnDestroy() UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.ProcessInteractable(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetAttachTransform(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.AddSingleGrabTransformer(UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer) UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.AddMultipleGrabTransformer(UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer) UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.RemoveSingleGrabTransformer(UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer) UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.RemoveMultipleGrabTransformer(UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer) UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.ClearSingleGrabTransformers() UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.ClearMultipleGrabTransformers() UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetSingleGrabTransformers(System.Collections.Generic.List<UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer>) UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetMultipleGrabTransformers(System.Collections.Generic.List<UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer>) UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetSingleGrabTransformerAt(System.Int32) UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetMultipleGrabTransformerAt(System.Int32) UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.MoveSingleGrabTransformerTo(UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer, System.Int32) UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.MoveMultipleGrabTransformerTo(UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer, System.Int32) UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetTargetPose() UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.SetTargetPose(Pose) UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.GetTargetLocalScale() UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.SetTargetLocalScale(Vector3) UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.AddDefaultSingleGrabTransformer() UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.AddDefaultMultipleGrabTransformer() UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.ShouldMatchAttachPosition(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.ShouldMatchAttachRotation(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.ShouldSnapToColliderVolume(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.InitializeDynamicAttachPose(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor, Transform) UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.Grab() UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.Drop() UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.Detach() UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.SetupRigidbodyGrab(Rigidbody) UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.SetupRigidbodyDrop(Rigidbody) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactionLayerMask UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onFirstHoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onLastHoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onHoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onHoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onSelectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onSelectExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onSelectCanceled UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onActivate UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onDeactivate UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onFirstHoverEnter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onHoverEnter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onHoverExit UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onLastHoverExit UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onSelectEnter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onSelectExit UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onSelectCancel UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectCanceling(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectCanceled(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnActivate(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnDeactivate(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetDistanceSqrToInteractor(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.AttachCustomReticle(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.RemoveCustomReticle(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.hoveringInteractors UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.selectingInteractor UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.registered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.unregistered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.getDistanceOverride UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactionManager UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.colliders UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactionLayers UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.distanceCalculationMode UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.selectMode UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.focusMode UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.customReticle UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.allowGazeInteraction UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.allowGazeSelect UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.overrideGazeTimeToSelect UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.gazeTimeToSelect UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.overrideTimeToAutoDeselectGaze UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.timeToAutoDeselectGaze UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.allowGazeAssistance UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.firstHoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.lastHoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.hoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.hoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.firstSelectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.lastSelectExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.selectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.selectExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.firstFocusEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.lastFocusExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.focusEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.focusExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.activated UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.deactivated UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactorsHovering UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.isHovered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactorsSelecting UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.firstInteractorSelecting UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.isSelected UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactionGroupsFocusing UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.firstInteractionGroupFocusing UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.isFocused UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.canFocus UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.startingHoverFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.hoverFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.startingSelectFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.selectFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.startingInteractionStrengthFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactionStrengthFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.largestInteractionStrength UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnEnable() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnDisable() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetLocalAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetDistanceSqrToInteractor(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetDistance(Vector3) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetInteractionStrength(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsHovered(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsSelected(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsHovered(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsSelected(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetCustomReticle(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.AttachCustomReticle(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.RemoveCustomReticle(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.CaptureAttachPose(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRInteractable.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRInteractable.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.OnActivated(UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.OnDeactivated(UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable.OnFocusEntering(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable.OnFocusEntered(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable.OnFocusExiting(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable.OnFocusExited(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnFocusEntering(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnFocusEntered(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnFocusExiting(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnFocusExited(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.ProcessHoverFilters(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.ProcessSelectFilters(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.ProcessInteractionStrengthFilters(UnityEngine.XR.Interaction.Toolkit.IXRInteractor, System.Single) Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public class InteractableObject : XRGrabInteractable, IXRActivateInteractable, IXRHoverInteractable, IXRSelectInteractable, IXRFocusInteractable, IXRInteractionStrengthInteractable, IXRInteractable, IXROverridesGazeAutoSelect, IInteractableObject Remarks Adds extra control over applicable interactions. Properties | Improve this Doc View Source GameObject Declaration public GameObject GameObject { get; } Property Value Type Description GameObject | Improve this Doc View Source IsActivated Gets whether this InteractableObject is currently being activated. Declaration public bool IsActivated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsGrabbable Determines if this InteractableObject can be grabbed. Declaration public bool IsGrabbable { set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsInSocket Gets whether this InteractableObject is currently being selected by any 'XRSocketInteractor'. Declaration public bool IsInSocket { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsTouchable Determines if this InteractableObject can be touched. Declaration public bool IsTouchable { set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsUsable Determines if this InteractableObject can be used. Declaration public bool IsUsable { set; } Property Value Type Description System.Boolean | Improve this Doc View Source Rigidbody This interactable's rigidbody. Declaration public Rigidbody Rigidbody { get; } Property Value Type Description Rigidbody | Improve this Doc View Source SelectingSocket Get the current selecting 'XRSocketInteractor' for this InteractableObject . Declaration public XRSocketInteractor SelectingSocket { get; } Property Value Type Description UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor Methods | Improve this Doc View Source Awake() Declaration protected override void Awake() Overrides UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.Awake() | Improve this Doc View Source ForceStopInteracting() Forces all hovering and selecting interactors to not have interactions with this InteractableObject for one frame. Declaration public virtual void ForceStopInteracting() Remarks Interactions are not disabled immediately. | Improve this Doc View Source ForceUse() Attempts to use this InteractableObject . Declaration public virtual void ForceUse() | Improve this Doc View Source IsHoverableBy(IXRHoverInteractor) Determines if this InteractableObject can be hovered by a given interactor. Declaration public override bool IsHoverableBy(IXRHoverInteractor interactor) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor interactor Interactor to check for a valid hover state with. Returns Type Description System.Boolean True if hovering is valid this frame, False if not. Overrides UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor) Remarks It always returns false when IsTouchable is false. | Improve this Doc View Source IsSelectableBy(IXRSelectInteractor) Determines if this InteractableObject can be selected by a given interactor. Declaration public override bool IsSelectableBy(IXRSelectInteractor interactor) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor interactor Interactor to check for a valid selection with. Returns Type Description System.Boolean True if selection is valid this frame, False if not. Overrides UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) Remarks It always returns false when IsGrabbable is false. | Improve this Doc View Source OnActivated(ActivateEventArgs) This method is called by the UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor when the Interactor begins an activation event on this selected Interactable. Declaration protected override void OnActivated(ActivateEventArgs arguments) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs arguments Event data containing the Interactor that is sending the activate event. Overrides UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnActivated(UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs) Remarks arguments is only valid during this method call, do not hold a reference to it. See Also OnDeactivated(DeactivateEventArgs) | Improve this Doc View Source OnDeactivated(DeactivateEventArgs) This method is called by the UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor when the Interactor ends an activation event on this selected Interactable. Declaration protected override void OnDeactivated(DeactivateEventArgs arguments) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs arguments Event data containing the Interactor that is sending the deactivate event. Overrides UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnDeactivated(UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs) Remarks arguments is only valid during this method call, do not hold a reference to it. See Also OnActivated(ActivateEventArgs) | Improve this Doc View Source OnSelectEntering(SelectEnterEventArgs) This method is called by the Interaction Manager right before the Interactor first initiates selection of an Interactable in a first pass. Declaration protected override void OnSelectEntering(SelectEnterEventArgs arguments) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs arguments Event data containing the Interactor that is initiating the selection. Overrides UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) Remarks arguments is only valid during this method call, do not hold a reference to it. | Improve this Doc View Source OnSelectExiting(SelectExitEventArgs) This method is called by the Interaction Manager right before the Interactor ends selection of an Interactable in a first pass. Declaration protected override void OnSelectExiting(SelectExitEventArgs arguments) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs arguments Event data containing the Interactor that is ending the selection. Overrides UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) Remarks arguments is only valid during this method call, do not hold a reference to it. | Improve this Doc View Source Reset() Reset to default values. Declaration protected override void Reset() Overrides UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.Reset() Implements UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable UnityEngine.XR.Interaction.Toolkit.IXRInteractable UnityEngine.XR.Interaction.Toolkit.IXROverridesGazeAutoSelect IInteractableObject"
  },
  "api/VRBuilder.XRInteraction.LocomotionSchemeManager.html": {
    "href": "api/VRBuilder.XRInteraction.LocomotionSchemeManager.html",
    "title": "Class LocomotionSchemeManager | VR Builder Documentation",
    "keywords": "Class LocomotionSchemeManager Use this class as a central manager to configure locomotion control schemes and configuration preferences. Inheritance System.Object LocomotionSchemeManager Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public class LocomotionSchemeManager : MonoBehaviour Remarks Input bindings will often overlap between different locomotion methods, and this class can be used to set binding masks which are used to determine which bindings of an action to enable and which to ignore. Teleport (Input Action) (1) Binding <XRController>{LeftHand}/PrimaryButton (Use in control scheme \"Generic XR\") (2) Binding <XRController>{LeftHand}/Primary2DAxis (Use in control scheme \"Noncontinuous Move\") Move (Input Action) (3) Binding <XRController>{LeftHand}/Primary2DAxis (Use in control scheme \"Continuous Move\") Set VRBuilder.XRInteraction.LocomotionSchemeManager.baseControlScheme =\"Generic XR\" Set VRBuilder.XRInteraction.LocomotionSchemeManager.noncontinuousControlScheme =\"Noncontinuous Move\" Set VRBuilder.XRInteraction.LocomotionSchemeManager.continuousControlScheme =\"Continuous Move\" Set VRBuilder.XRInteraction.LocomotionSchemeManager.actions to be both input actions (Teleport and Move). When VRBuilder.XRInteraction.LocomotionSchemeManager.moveScheme = Noncontinuous , bindings (1) and (2) will be enabled, but binding (3) will be disabled. When VRBuilder.XRInteraction.LocomotionSchemeManager.moveScheme = Continuous , bindings (1) and (3) will be enabled, but binding (2) will be disabled. Properties | Improve this Doc View Source ActionAssets Input action assets associated with locomotion to affect when the active movement control scheme is set. Can use this list by itself or together with the Action Maps list to set control scheme masks by Asset or Map. Declaration public List<InputActionAsset> ActionAssets { get; set; } Property Value Type Description System.Collections.Generic.List < UnityEngine.InputSystem.InputActionAsset > See Also VRBuilder.XRInteraction.LocomotionSchemeManager.actionMaps | Improve this Doc View Source ActionMaps Input action maps associated with locomotion to affect when the active movement control scheme is set. Can use this list together with the Action Assets list to set control scheme masks by Map instead of the whole Asset. Declaration public List<string> ActionMaps { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > See Also VRBuilder.XRInteraction.LocomotionSchemeManager.actionAssets | Improve this Doc View Source Actions Input actions associated with locomotion that are affected by the active movement control scheme. Can use this list to select exactly the actions to affect instead of setting control scheme masks by Asset or Map. Declaration public List<InputActionReference> Actions { get; set; } Property Value Type Description System.Collections.Generic.List < UnityEngine.InputSystem.InputActionReference > See Also VRBuilder.XRInteraction.LocomotionSchemeManager.actionAssets VRBuilder.XRInteraction.LocomotionSchemeManager.actionMaps | Improve this Doc View Source BaseControlScheme Name of an input control scheme that defines the grouping of bindings that should remain enabled when applying any movement control scheme. Control schemes are created and named in the Input Actions window. The other movement control schemes are applied additively to this scheme. Can be an empty string, which means only bindings that match the specified movement control scheme will be enabled. Declaration public string BaseControlScheme { get; set; } Property Value Type Description System.String | Improve this Doc View Source ContinuousControlScheme Name of an input control scheme that defines the grouping of bindings that should remain enabled when applying the continuous movement control scheme. Control schemes are created and named in the Input Actions window. Can be an empty string, which means only bindings that match the base control scheme will be enabled. Declaration public string ContinuousControlScheme { get; set; } Property Value Type Description System.String | Improve this Doc View Source ContinuousMoveProvider Stores the locomotion provider for continuous movement. Declaration public ContinuousMoveProviderBase ContinuousMoveProvider { get; set; } Property Value Type Description UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase See Also UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase | Improve this Doc View Source ContinuousTurnProvider Stores the locomotion provider for continuous turning. Declaration public ContinuousTurnProviderBase ContinuousTurnProvider { get; set; } Property Value Type Description UnityEngine.XR.Interaction.Toolkit.ContinuousTurnProviderBase See Also UnityEngine.XR.Interaction.Toolkit.ContinuousTurnProviderBase | Improve this Doc View Source HeadForwardSource Stores the \"Head\" used with continuous movement when inputs should be relative to head orientation (usually the main camera). Declaration public Transform HeadForwardSource { get; set; } Property Value Type Description Transform | Improve this Doc View Source LeftHandForwardSource Stores the \"Left Hand\" used with continuous movement when inputs should be relative to the left hand's orientation. Declaration public Transform LeftHandForwardSource { get; set; } Property Value Type Description Transform | Improve this Doc View Source MoveForwardSource Controls which orientation the forward direction of continuous movement is relative to. Declaration public LocomotionSchemeManager.MoveForwardSourceType MoveForwardSource { get; set; } Property Value Type Description LocomotionSchemeManager.MoveForwardSourceType See Also LocomotionSchemeManager.MoveForwardSourceType | Improve this Doc View Source MoveScheme Controls which movement control scheme to use. Declaration public LocomotionSchemeManager.MoveSchemeType MoveScheme { get; set; } Property Value Type Description LocomotionSchemeManager.MoveSchemeType See Also LocomotionSchemeManager.MoveSchemeType | Improve this Doc View Source NoncontinuousControlScheme Name of an input control scheme that defines the grouping of bindings that should remain enabled when applying the noncontinuous movement control scheme. Control schemes are created and named in the Input Actions window. Can be an empty string, which means only bindings that match the base control scheme will be enabled. Declaration public string NoncontinuousControlScheme { get; set; } Property Value Type Description System.String | Improve this Doc View Source RightHandForwardSource Stores the \"Right Hand\" used with continuous movement when inputs should be relative to the right hand's orientation. Declaration public Transform RightHandForwardSource { get; set; } Property Value Type Description Transform | Improve this Doc View Source SnapTurnProvider Stores the locomotion provider for snap turning. Declaration public SnapTurnProviderBase SnapTurnProvider { get; set; } Property Value Type Description UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase See Also UnityEngine.XR.Interaction.Toolkit.SnapTurnProviderBase | Improve this Doc View Source TurnStyle Controls which turn style of locomotion to use. Declaration public LocomotionSchemeManager.TurnStyleType TurnStyle { get; set; } Property Value Type Description LocomotionSchemeManager.TurnStyleType See Also LocomotionSchemeManager.TurnStyleType"
  },
  "api/VRBuilder.XRInteraction.LocomotionSchemeManager.MoveForwardSourceType.html": {
    "href": "api/VRBuilder.XRInteraction.LocomotionSchemeManager.MoveForwardSourceType.html",
    "title": "Enum LocomotionSchemeManager.MoveForwardSourceType | VR Builder Documentation",
    "keywords": "Enum LocomotionSchemeManager.MoveForwardSourceType Sets which orientation the forward direction of continuous movement is relative to. Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public enum MoveForwardSourceType Fields Name Description Head Use to continuously move in a direction based on the head orientation. LeftHand Use to continuously move in a direction based on the left hand orientation. RightHand Use to continuously move in a direction based on the right hand orientation. See Also VRBuilder.XRInteraction.LocomotionSchemeManager.moveForwardSource UnityEngine.XR.Interaction.Toolkit.ContinuousMoveProviderBase.forwardSource"
  },
  "api/VRBuilder.XRInteraction.LocomotionSchemeManager.MoveSchemeType.html": {
    "href": "api/VRBuilder.XRInteraction.LocomotionSchemeManager.MoveSchemeType.html",
    "title": "Enum LocomotionSchemeManager.MoveSchemeType | VR Builder Documentation",
    "keywords": "Enum LocomotionSchemeManager.MoveSchemeType Sets which movement control scheme to use. Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public enum MoveSchemeType Fields Name Description Continuous Use continuous movement control scheme. Noncontinuous Use noncontinuous movement control scheme. See Also VRBuilder.XRInteraction.LocomotionSchemeManager.moveScheme"
  },
  "api/VRBuilder.XRInteraction.LocomotionSchemeManager.TurnStyleType.html": {
    "href": "api/VRBuilder.XRInteraction.LocomotionSchemeManager.TurnStyleType.html",
    "title": "Enum LocomotionSchemeManager.TurnStyleType | VR Builder Documentation",
    "keywords": "Enum LocomotionSchemeManager.TurnStyleType Sets which turn style of locomotion to use. Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public enum TurnStyleType Fields Name Description Continuous Use continuous turning to smoothly rotate the direction you are facing by a specified speed. Snap Use snap turning to rotate the direction you are facing by snapping by a specified angle. See Also VRBuilder.XRInteraction.LocomotionSchemeManager.turnStyle"
  },
  "api/VRBuilder.XRInteraction.Properties.GrabbableProperty.html": {
    "href": "api/VRBuilder.XRInteraction.Properties.GrabbableProperty.html",
    "title": "Class GrabbableProperty | VR Builder Documentation",
    "keywords": "Class GrabbableProperty XR implementation of IGrabbableProperty . Inheritance System.Object ProcessSceneObjectProperty LockableProperty GrabbableProperty Implements IGrabbableProperty ISceneObjectProperty ILockable Inherited Members LockableProperty.Locked LockableProperty.Unlocked LockableProperty.LockOnParentObjectLock LockableProperty.IsLocked LockableProperty.EndStepLocked LockableProperty.SetLocked(Boolean) LockableProperty.RequestLocked(Boolean, IStepData) LockableProperty.RemoveUnlocker(IStepData) ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.XRInteraction.Properties Assembly : VRBuilder.XRInteraction.dll Syntax public class GrabbableProperty : LockableProperty, IGrabbableProperty, ISceneObjectProperty, ILockable Properties | Improve this Doc View Source GrabEnded Declaration public UnityEvent<GrabbablePropertyEventArgs> GrabEnded { get; } Property Value Type Description UnityEvent < GrabbablePropertyEventArgs > | Improve this Doc View Source GrabStarted Declaration public UnityEvent<GrabbablePropertyEventArgs> GrabStarted { get; } Property Value Type Description UnityEvent < GrabbablePropertyEventArgs > | Improve this Doc View Source Interactable Reference to attached InteractableObject . Declaration protected InteractableObject Interactable { get; } Property Value Type Description InteractableObject | Improve this Doc View Source IsGrabbed Returns true if the Interactable of this property is grabbed. Declaration public virtual bool IsGrabbed { get; protected set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source EmitGrabbed() Declaration protected void EmitGrabbed() | Improve this Doc View Source EmitUngrabbed() Declaration protected void EmitUngrabbed() | Improve this Doc View Source FastForwardGrab() Instantaneously simulate that the object was grabbed. Declaration public void FastForwardGrab() | Improve this Doc View Source FastForwardUngrab() Instantaneously simulate that the object was ungrabbed. Declaration public void FastForwardUngrab() | Improve this Doc View Source ForceSetGrabbed(Boolean) Force this property to a specified grabbed state. Declaration public void ForceSetGrabbed(bool isGrabbed) Parameters Type Name Description System.Boolean isGrabbed | Improve this Doc View Source InternalSetLocked(Boolean) Declaration protected override void InternalSetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState Overrides LockableProperty.InternalSetLocked(Boolean) | Improve this Doc View Source OnDisable() Declaration protected override void OnDisable() Overrides LockableProperty.OnDisable() | Improve this Doc View Source OnEnable() Declaration protected override void OnEnable() Overrides LockableProperty.OnEnable() | Improve this Doc View Source Reset() Declaration protected override void Reset() Overrides ProcessSceneObjectProperty.Reset() Implements IGrabbableProperty ISceneObjectProperty ILockable"
  },
  "api/VRBuilder.XRInteraction.Properties.HighlightProperty.html": {
    "href": "api/VRBuilder.XRInteraction.Properties.HighlightProperty.html",
    "title": "Class HighlightProperty | VR Builder Documentation",
    "keywords": "Class HighlightProperty Highlight property which enables an attached InteractableObject . Inheritance System.Object ProcessSceneObjectProperty BaseHighlightProperty HighlightProperty Implements IHighlightProperty ISceneObjectProperty Inherited Members BaseHighlightProperty.IsHighlighted BaseHighlightProperty.HighlightStarted BaseHighlightProperty.HighlightEnded BaseHighlightProperty.EmitHighlightEvent(HighlightPropertyEventArgs) BaseHighlightProperty.EmitUnhighlightEvent(HighlightPropertyEventArgs) ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.XRInteraction.Properties Assembly : VRBuilder.XRInteraction.dll Syntax public class HighlightProperty : BaseHighlightProperty, IHighlightProperty, ISceneObjectProperty Fields | Improve this Doc View Source DefaultHighlighter The DefaultHighlighter which is used to highlight the ProcessSceneObject . Declaration protected DefaultHighlighter DefaultHighlighter Field Value Type Description DefaultHighlighter Properties | Improve this Doc View Source CurrentHighlightColor Returns the highlight color, if the object is currently highlighted. Returns null, otherwise. Declaration public Color? CurrentHighlightColor { get; protected set; } Property Value Type Description System.Nullable < Color > Methods | Improve this Doc View Source Highlight(Color) Declaration public override void Highlight(Color highlightColor) Parameters Type Name Description Color highlightColor | Improve this Doc View Source Initialize() Declaration protected void Initialize() | Improve this Doc View Source OnEnable() Declaration protected override void OnEnable() Overrides ProcessSceneObjectProperty.OnEnable() | Improve this Doc View Source Reset() Declaration protected override void Reset() Overrides ProcessSceneObjectProperty.Reset() | Improve this Doc View Source Unhighlight() Declaration public override void Unhighlight() Overrides BaseHighlightProperty.Unhighlight() Implements IHighlightProperty ISceneObjectProperty"
  },
  "api/VRBuilder.XRInteraction.Properties.html": {
    "href": "api/VRBuilder.XRInteraction.Properties.html",
    "title": "Namespace VRBuilder.XRInteraction.Properties | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.XRInteraction.Properties Classes GrabbableProperty XR implementation of IGrabbableProperty . HighlightProperty Highlight property which enables an attached InteractableObject . SnappableProperty XR implementation of ISnappableProperty . SnapZoneProperty XR implementation of ISnapZoneProperty . TouchableProperty XR implementation of ITouchableProperty . UsableProperty XR implementation of IUsableProperty ."
  },
  "api/VRBuilder.XRInteraction.Properties.SnappableProperty.html": {
    "href": "api/VRBuilder.XRInteraction.Properties.SnappableProperty.html",
    "title": "Class SnappableProperty | VR Builder Documentation",
    "keywords": "Class SnappableProperty XR implementation of ISnappableProperty . Inheritance System.Object ProcessSceneObjectProperty LockableProperty SnappableProperty Implements ISnappableProperty ISceneObjectProperty ILockable Inherited Members LockableProperty.Locked LockableProperty.Unlocked LockableProperty.LockOnParentObjectLock LockableProperty.IsLocked LockableProperty.EndStepLocked LockableProperty.SetLocked(Boolean) LockableProperty.RequestLocked(Boolean, IStepData) LockableProperty.RemoveUnlocker(IStepData) ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.XRInteraction.Properties Assembly : VRBuilder.XRInteraction.dll Syntax public class SnappableProperty : LockableProperty, ISnappableProperty, ISceneObjectProperty, ILockable Properties | Improve this Doc View Source AttachedToSnapZone Declaration public UnityEvent<SnappablePropertyEventArgs> AttachedToSnapZone { get; } Property Value Type Description UnityEvent < SnappablePropertyEventArgs > | Improve this Doc View Source DetachedFromSnapZone Declaration public UnityEvent<SnappablePropertyEventArgs> DetachedFromSnapZone { get; } Property Value Type Description UnityEvent < SnappablePropertyEventArgs > | Improve this Doc View Source Interactable Reference to attached InteractableObject . Declaration public XRBaseInteractable Interactable { get; } Property Value Type Description UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable | Improve this Doc View Source IsSnapped Returns true if the snappable object is snapped. Declaration public bool IsSnapped { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LockObjectOnSnap Declaration public bool LockObjectOnSnap { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SnappedZone Will return the SnapZoneProperty of the SnapZone which snapped this object. Declaration public ISnapZoneProperty SnappedZone { get; set; } Property Value Type Description ISnapZoneProperty Methods | Improve this Doc View Source EmitSnapped(ISnapZoneProperty) Invokes the EmitSnapped(ISnapZoneProperty) event. Declaration protected void EmitSnapped(ISnapZoneProperty snapZone) Parameters Type Name Description ISnapZoneProperty snapZone | Improve this Doc View Source EmitUnsnapped(ISnapZoneProperty) Invokes the EmitUnsnapped(ISnapZoneProperty) event. Declaration protected void EmitUnsnapped(ISnapZoneProperty snapZone) Parameters Type Name Description ISnapZoneProperty snapZone | Improve this Doc View Source FastForwardSnapInto(ISnapZoneProperty) Instantaneously snap the object into snapZone Declaration public void FastForwardSnapInto(ISnapZoneProperty snapZone) Parameters Type Name Description ISnapZoneProperty snapZone | Improve this Doc View Source InternalSetLocked(Boolean) Declaration protected override void InternalSetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState Overrides LockableProperty.InternalSetLocked(Boolean) | Improve this Doc View Source OnDisable() Declaration protected virtual void OnDisable() | Improve this Doc View Source OnEnable() Declaration protected virtual void OnEnable() Implements ISnappableProperty ISceneObjectProperty ILockable"
  },
  "api/VRBuilder.XRInteraction.Properties.SnapZoneProperty.html": {
    "href": "api/VRBuilder.XRInteraction.Properties.SnapZoneProperty.html",
    "title": "Class SnapZoneProperty | VR Builder Documentation",
    "keywords": "Class SnapZoneProperty XR implementation of ISnapZoneProperty . Inheritance System.Object ProcessSceneObjectProperty LockableProperty SnapZoneProperty Implements ISnapZoneProperty ISceneObjectProperty ILockable Inherited Members LockableProperty.Locked LockableProperty.Unlocked LockableProperty.LockOnParentObjectLock LockableProperty.IsLocked LockableProperty.EndStepLocked LockableProperty.SetLocked(Boolean) LockableProperty.RequestLocked(Boolean, IStepData) LockableProperty.RemoveUnlocker(IStepData) ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.XRInteraction.Properties Assembly : VRBuilder.XRInteraction.dll Syntax public class SnapZoneProperty : LockableProperty, ISnapZoneProperty, ISceneObjectProperty, ILockable Properties | Improve this Doc View Source HighlightMaterial Declaration public ModeParameter<Material> HighlightMaterial { get; } Property Value Type Description ModeParameter < Material > | Improve this Doc View Source IsObjectSnapped Declaration public bool IsObjectSnapped { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsShowingHighlightObject Declaration public ModeParameter<bool> IsShowingHighlightObject { get; } Property Value Type Description ModeParameter < System.Boolean > | Improve this Doc View Source IsShowingHoverMeshes Declaration public ModeParameter<bool> IsShowingHoverMeshes { get; } Property Value Type Description ModeParameter < System.Boolean > | Improve this Doc View Source LockOnUnsnap If true, the snap zone locks as soon as an object is unsnapped. Declaration public bool LockOnUnsnap { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ObjectAttached Declaration public UnityEvent<SnapZonePropertyEventArgs> ObjectAttached { get; } Property Value Type Description UnityEvent < SnapZonePropertyEventArgs > | Improve this Doc View Source ObjectDetached Declaration public UnityEvent<SnapZonePropertyEventArgs> ObjectDetached { get; } Property Value Type Description UnityEvent < SnapZonePropertyEventArgs > | Improve this Doc View Source SnappedObject Declaration public ISnappableProperty SnappedObject { get; set; } Property Value Type Description ISnappableProperty | Improve this Doc View Source SnapZone Returns the SnapZone component. Declaration public SnapZone SnapZone { get; } Property Value Type Description SnapZone | Improve this Doc View Source SnapZoneObject Declaration public GameObject SnapZoneObject { get; } Property Value Type Description GameObject Methods | Improve this Doc View Source Configure(IMode) Configure snap zone properties according to the provided mode. Declaration public void Configure(IMode mode) Parameters Type Name Description IMode mode The current mode with the parameters to be changed. | Improve this Doc View Source EmitSnapped() Invokes the EmitSnapped() event. Declaration protected void EmitSnapped() | Improve this Doc View Source EmitUnsnapped() Invokes the EmitUnsnapped() event. Declaration protected void EmitUnsnapped() | Improve this Doc View Source InternalSetLocked(Boolean) Locks or unlocks the snap zone according to the provided lockState . Declaration protected override void InternalSetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState Overrides LockableProperty.InternalSetLocked(Boolean) | Improve this Doc View Source OnDisable() Declaration protected override void OnDisable() Overrides LockableProperty.OnDisable() | Improve this Doc View Source OnEnable() Declaration protected override void OnEnable() Overrides LockableProperty.OnEnable() Implements ISnapZoneProperty ISceneObjectProperty ILockable"
  },
  "api/VRBuilder.XRInteraction.Properties.TouchableProperty.html": {
    "href": "api/VRBuilder.XRInteraction.Properties.TouchableProperty.html",
    "title": "Class TouchableProperty | VR Builder Documentation",
    "keywords": "Class TouchableProperty XR implementation of ITouchableProperty . Inheritance System.Object ProcessSceneObjectProperty LockableProperty TouchableProperty Implements ITouchableProperty ISceneObjectProperty ILockable Inherited Members LockableProperty.Locked LockableProperty.Unlocked LockableProperty.LockOnParentObjectLock LockableProperty.IsLocked LockableProperty.EndStepLocked LockableProperty.SetLocked(Boolean) LockableProperty.RequestLocked(Boolean, IStepData) LockableProperty.RemoveUnlocker(IStepData) ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.XRInteraction.Properties Assembly : VRBuilder.XRInteraction.dll Syntax public class TouchableProperty : LockableProperty, ITouchableProperty, ISceneObjectProperty, ILockable Properties | Improve this Doc View Source Interactable Reference to attached InteractableObject . Declaration protected InteractableObject Interactable { get; } Property Value Type Description InteractableObject | Improve this Doc View Source IsBeingTouched Returns true if the GameObject is touched. Declaration public virtual bool IsBeingTouched { get; protected set; } Property Value Type Description System.Boolean | Improve this Doc View Source TouchEnded Declaration public UnityEvent<TouchablePropertyEventArgs> TouchEnded { get; } Property Value Type Description UnityEvent < TouchablePropertyEventArgs > | Improve this Doc View Source TouchStarted Declaration public UnityEvent<TouchablePropertyEventArgs> TouchStarted { get; } Property Value Type Description UnityEvent < TouchablePropertyEventArgs > Methods | Improve this Doc View Source EmitTouched() Declaration protected void EmitTouched() | Improve this Doc View Source EmitUntouched() Declaration protected void EmitUntouched() | Improve this Doc View Source FastForwardTouch() Declaration public void FastForwardTouch() | Improve this Doc View Source ForceSetTouched(Boolean) Declaration public void ForceSetTouched(bool isTouched) Parameters Type Name Description System.Boolean isTouched | Improve this Doc View Source InternalSetLocked(Boolean) Declaration protected override void InternalSetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState Overrides LockableProperty.InternalSetLocked(Boolean) | Improve this Doc View Source OnDisable() Declaration protected override void OnDisable() Overrides LockableProperty.OnDisable() | Improve this Doc View Source OnEnable() Declaration protected override void OnEnable() Overrides LockableProperty.OnEnable() | Improve this Doc View Source Reset() Declaration protected override void Reset() Overrides ProcessSceneObjectProperty.Reset() Implements ITouchableProperty ISceneObjectProperty ILockable"
  },
  "api/VRBuilder.XRInteraction.Properties.UsableProperty.html": {
    "href": "api/VRBuilder.XRInteraction.Properties.UsableProperty.html",
    "title": "Class UsableProperty | VR Builder Documentation",
    "keywords": "Class UsableProperty XR implementation of IUsableProperty . Inheritance System.Object ProcessSceneObjectProperty LockableProperty UsableProperty Implements IUsableProperty ISceneObjectProperty ILockable Inherited Members LockableProperty.Locked LockableProperty.Unlocked LockableProperty.LockOnParentObjectLock LockableProperty.IsLocked LockableProperty.EndStepLocked LockableProperty.SetLocked(Boolean) LockableProperty.RequestLocked(Boolean, IStepData) LockableProperty.RemoveUnlocker(IStepData) ProcessSceneObjectProperty.SceneObject ProcessSceneObjectProperty.ToString() Namespace : VRBuilder.XRInteraction.Properties Assembly : VRBuilder.XRInteraction.dll Syntax public class UsableProperty : LockableProperty, IUsableProperty, ISceneObjectProperty, ILockable Properties | Improve this Doc View Source Interactable Reference to attached InteractableObject . Declaration protected InteractableObject Interactable { get; } Property Value Type Description InteractableObject | Improve this Doc View Source IsBeingUsed Returns true if the GameObject is being used. Declaration public virtual bool IsBeingUsed { get; protected set; } Property Value Type Description System.Boolean | Improve this Doc View Source UseEnded Declaration public UnityEvent<UsablePropertyEventArgs> UseEnded { get; } Property Value Type Description UnityEvent < UsablePropertyEventArgs > | Improve this Doc View Source UseStarted Declaration public UnityEvent<UsablePropertyEventArgs> UseStarted { get; } Property Value Type Description UnityEvent < UsablePropertyEventArgs > Methods | Improve this Doc View Source EmitUsageStarted() Declaration protected void EmitUsageStarted() | Improve this Doc View Source EmitUsageStopped() Declaration protected void EmitUsageStopped() | Improve this Doc View Source FastForwardUse() Instantaneously simulate that the object was used. Declaration public void FastForwardUse() | Improve this Doc View Source ForceSetUsed(Boolean) Declaration public void ForceSetUsed(bool isUsed) Parameters Type Name Description System.Boolean isUsed | Improve this Doc View Source InternalSetLocked(Boolean) Declaration protected override void InternalSetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState Overrides LockableProperty.InternalSetLocked(Boolean) | Improve this Doc View Source OnDisable() Declaration protected override void OnDisable() Overrides LockableProperty.OnDisable() | Improve this Doc View Source OnEnable() Declaration protected override void OnEnable() Overrides LockableProperty.OnEnable() | Improve this Doc View Source Reset() Declaration protected override void Reset() Overrides ProcessSceneObjectProperty.Reset() Implements IUsableProperty ISceneObjectProperty ILockable"
  },
  "api/VRBuilder.XRInteraction.RayInteractor.html": {
    "href": "api/VRBuilder.XRInteraction.RayInteractor.html",
    "title": "Class RayInteractor | VR Builder Documentation",
    "keywords": "Class RayInteractor Interactor used for interacting with interactables at a distance. This is handled via raycasts that update the current set of valid targets for this interactor. Inheritance System.Object UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor UnityEngine.XR.Interaction.Toolkit.XRRayInteractor RayInteractor Implements UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor UnityEngine.XR.Interaction.Toolkit.IXRGroupMember UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractor UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractor UnityEngine.XR.Interaction.Toolkit.IXRInteractor UnityEngine.XR.Interaction.Toolkit.IAdvancedLineRenderable UnityEngine.XR.Interaction.Toolkit.ILineRenderable UnityEngine.XR.Interaction.Toolkit.UI.IUIHoverInteractor UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractor UnityEngine.XR.Interaction.Toolkit.IXRRayProvider UnityEngine.XR.Interaction.Toolkit.IXRScaleValueProvider Inherited Members UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.Velocity UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.Acceleration UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.AdditionalFlightTime UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.Angle UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.originalAttachTransform UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetLinePoints(Vector3[], System.Int32, System.Int32) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetHitInfo(Vector3, Vector3, System.Int32, System.Boolean, System.Int32) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetCurrentRaycastHit(RaycastHit) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CanHover(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CanSelect(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.lineType UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.blendVisualLinePoints UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.maxRaycastDistance UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.rayOriginTransform UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.referenceFrame UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.velocity UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.acceleration UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.additionalGroundHeight UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.additionalFlightTime UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.endPointDistance UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.endPointHeight UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.controlPointDistance UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.controlPointHeight UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.sampleFrequency UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.hitDetectionType UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.sphereCastRadius UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.coneCastAngle UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.raycastMask UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.raycastTriggerInteraction UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.raycastSnapVolumeInteraction UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.hitClosestOnly UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.hoverToSelect UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.hoverTimeToSelect UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.autoDeselect UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.timeToAutoDeselect UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.enableUIInteraction UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.blockUIOnInteractableSelection UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.allowAnchorControl UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.useForceGrab UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.rotateSpeed UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.translateSpeed UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.anchorRotateReferenceFrame UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.anchorRotationMode UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.uiHoverEntered UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.uiHoverExited UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.enableARRaycasting UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.occludeARHitsWith3DObjects UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.occludeARHitsWith2DObjects UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.angle UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.currentNearestValidTarget UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.rayEndPoint UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.rayEndTransform UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.scaleMode UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.scaleValue UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnValidate() UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.Awake() UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnEnable() UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnDisable() UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnDrawGizmosSelected() UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.UnityEngine.XR.Interaction.Toolkit.IXRRayProvider.GetOrCreateRayOrigin() UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.UnityEngine.XR.Interaction.Toolkit.IXRRayProvider.GetOrCreateAttachTransform() UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.UnityEngine.XR.Interaction.Toolkit.IXRRayProvider.SetRayOrigin(Transform) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.UnityEngine.XR.Interaction.Toolkit.IXRRayProvider.SetAttachTransform(Transform) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.IsOverUIGameObject() UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetLinePoints(NativeArray<>, System.Int32, System.Nullable<Ray>) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetLinePoints(Vector3[], System.Int32) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetLineOriginAndDirection(Vector3, Vector3) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetHitInfo(Vector3, Vector3, System.Int32, System.Boolean) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.UpdateUIModel(UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetUIModel(UnityEngine.XR.Interaction.Toolkit.UI.TrackedDeviceModel) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetCurrent3DRaycastHit(RaycastHit) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetCurrent3DRaycastHit(RaycastHit, System.Int32) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetCurrentUIRaycastResult(UnityEngine.EventSystems.RaycastResult) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetCurrentUIRaycastResult(UnityEngine.EventSystems.RaycastResult, System.Int32) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TryGetCurrentRaycast(System.Nullable<RaycastHit>, System.Int32, System.Nullable<UnityEngine.EventSystems.RaycastResult>, System.Int32, System.Boolean) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.RotateAnchor(Transform, System.Single) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.RotateAnchor(Transform, Vector2, Quaternion) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.TranslateAnchor(Transform, Transform, System.Single) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.PreprocessInteractor(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.ProcessInteractor(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetValidTargets(System.Collections.Generic.List<UnityEngine.XR.Interaction.Toolkit.IXRInteractable>) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.isUISelectActive UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CanHover(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.CanSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetHoverTimeToSelect(UnityEngine.XR.Interaction.Toolkit.IXRInteractable) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.GetTimeToAutoDeselect(UnityEngine.XR.Interaction.Toolkit.IXRInteractable) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.UnityEngine.XR.Interaction.Toolkit.UI.IUIHoverInteractor.OnUIHoverEntered(UnityEngine.XR.Interaction.Toolkit.UI.UIHoverEventArgs) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.UnityEngine.XR.Interaction.Toolkit.UI.IUIHoverInteractor.OnUIHoverExited(UnityEngine.XR.Interaction.Toolkit.UI.UIHoverEventArgs) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnUIHoverEntered(UnityEngine.XR.Interaction.Toolkit.UI.UIHoverEventArgs) UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.OnUIHoverExited(UnityEngine.XR.Interaction.Toolkit.UI.UIHoverEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.selectActionTrigger UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hideControllerOnSelect UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.allowHoveredActivate UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.targetPriorityMode UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playAudioClipOnSelectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.audioClipForOnSelectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playAudioClipOnSelectExited UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.audioClipForOnSelectExited UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playAudioClipOnSelectCanceled UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.audioClipForOnSelectCanceled UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playAudioClipOnHoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.audioClipForOnHoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playAudioClipOnHoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.audioClipForOnHoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playAudioClipOnHoverCanceled UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.audioClipForOnHoverCanceled UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.allowHoverAudioWhileSelecting UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playHapticsOnSelectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticSelectEnterIntensity UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticSelectEnterDuration UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playHapticsOnSelectExited UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticSelectExitIntensity UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticSelectExitDuration UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playHapticsOnSelectCanceled UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticSelectCancelIntensity UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticSelectCancelDuration UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playHapticsOnHoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticHoverEnterIntensity UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticHoverEnterDuration UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playHapticsOnHoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticHoverExitIntensity UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticHoverExitDuration UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playHapticsOnHoverCanceled UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticHoverCancelIntensity UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.hapticHoverCancelDuration UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.allowHoverHapticsWhileSelecting UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.allowActivate UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.xrController UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.uiScrollValue UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.shouldActivate UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.shouldDeactivate UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.GetActivateTargets(System.Collections.Generic.List<UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable>) UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.SendHapticImpulse(System.Single, System.Single) UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.PlayAudio(AudioClip) UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playAudioClipOnSelectEnter UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.audioClipForOnSelectEnter UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.AudioClipForOnSelectEnter UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playAudioClipOnSelectExit UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.audioClipForOnSelectExit UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.AudioClipForOnSelectExit UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playAudioClipOnHoverEnter UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.audioClipForOnHoverEnter UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.AudioClipForOnHoverEnter UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playAudioClipOnHoverExit UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.audioClipForOnHoverExit UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.AudioClipForOnHoverExit UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playHapticsOnSelectEnter UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playHapticsOnSelectExit UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.playHapticsOnHoverEnter UnityEngine.XR.Interaction.Toolkit.XRBaseControllerInteractor.validTargets UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.registered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.unregistered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.interactionManager UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.containingGroup UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.interactionLayers UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.attachTransform UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.keepSelectedTargetValid UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.disableVisualsWhenBlockedInGroup UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.startingSelectedInteractable UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.startingTargetFilter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.hoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.hoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.selectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.selectExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.targetFilter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.allowHover UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.allowSelect UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.isPerformingManualInteraction UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.interactablesHovered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.hasHover UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.interactablesSelected UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.firstInteractableSelected UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.hasSelection UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.startingHoverFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.hoverFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.startingSelectFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.selectFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.largestInteractionStrength UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.Reset() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.Start() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnDestroy() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetAttachTransform(UnityEngine.XR.Interaction.Toolkit.IXRInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetLocalAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.isHoverActive UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.targetsForSelection UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.IsHovering(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.IsSelecting(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.IsHovering(UnityEngine.XR.Interaction.Toolkit.IXRInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.IsSelecting(UnityEngine.XR.Interaction.Toolkit.IXRInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.selectedInteractableMovementTypeOverride UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.CaptureAttachPose(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.CreateAttachTransform() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetInteractionStrength(UnityEngine.XR.Interaction.Toolkit.IXRInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractor.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRInteractor.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRInteractor.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.CanHover(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.CanSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.StartManualInteraction(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.EndManualInteraction() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.ProcessHoverFilters(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.ProcessSelectFilters(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsGroupMember(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsNonGroupMember() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.interactionLayerMask UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.enableInteractions UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onHoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onHoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onSelectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onSelectExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onHoverEnter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onHoverExit UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onSelectEnter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onSelectExit UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.selectTarget UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.hoverTargets UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetHoverTargets(System.Collections.Generic.List<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable>) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetValidTargets(System.Collections.Generic.List<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable>) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.requireSelectExclusive UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.StartManualInteraction(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public class RayInteractor : XRRayInteractor, IXRHoverInteractor, IXRSelectInteractor, IXRTargetPriorityInteractor, IXRGroupMember, IXRInteractionStrengthInteractor, IXRActivateInteractor, IXRInteractor, IAdvancedLineRenderable, ILineRenderable, IUIHoverInteractor, IUIInteractor, IXRRayProvider, IXRScaleValueProvider Remarks Adds extra control over applicable interactions. Properties | Improve this Doc View Source isSelectActive Gets whether the selection state is active for this interactor. This will check if the controller has a valid selection state or whether toggle selection is currently on and active. Declaration public override bool isSelectActive { get; } Property Value Type Description System.Boolean Overrides UnityEngine.XR.Interaction.Toolkit.XRRayInteractor.isSelectActive Methods | Improve this Doc View Source AttemptGrab() Attempts to grab an interactable hovering this interactor without needing to press the grab button on the controller. Declaration public virtual void AttemptGrab() Implements UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor UnityEngine.XR.Interaction.Toolkit.IXRGroupMember UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractor UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractor UnityEngine.XR.Interaction.Toolkit.IXRInteractor UnityEngine.XR.Interaction.Toolkit.IAdvancedLineRenderable UnityEngine.XR.Interaction.Toolkit.ILineRenderable UnityEngine.XR.Interaction.Toolkit.UI.IUIHoverInteractor UnityEngine.XR.Interaction.Toolkit.UI.IUIInteractor UnityEngine.XR.Interaction.Toolkit.IXRRayProvider UnityEngine.XR.Interaction.Toolkit.IXRScaleValueProvider"
  },
  "api/VRBuilder.XRInteraction.RigManipulationProvider.html": {
    "href": "api/VRBuilder.XRInteraction.RigManipulationProvider.html",
    "title": "Class RigManipulationProvider | VR Builder Documentation",
    "keywords": "Class RigManipulationProvider Locomotion provider to directly manipulate the XRRig's position and rotation. Inheritance System.Object UnityEngine.XR.Interaction.Toolkit.LocomotionProvider RigManipulationProvider Inherited Members UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.startLocomotion UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.beginLocomotion UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.endLocomotion UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.system UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.locomotionPhase UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.Awake() UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.CanBeginLocomotion() UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.BeginLocomotion() UnityEngine.XR.Interaction.Toolkit.LocomotionProvider.EndLocomotion() Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public class RigManipulationProvider : LocomotionProvider Methods | Improve this Doc View Source SetRigPositionAndRotation(Vector3, Quaternion) Sets a new position and rotation for the XR Rig. Declaration public void SetRigPositionAndRotation(Vector3 destinationPosition, Quaternion destinationRotation) Parameters Type Name Description Vector3 destinationPosition Target position. Quaternion destinationRotation Target rotation."
  },
  "api/VRBuilder.XRInteraction.SnapZone.html": {
    "href": "api/VRBuilder.XRInteraction.SnapZone.html",
    "title": "Class SnapZone | VR Builder Documentation",
    "keywords": "Class SnapZone Interactor used for holding interactables via a socket. This component is not designed to be attached to a controller (thus does not derive from XRBaseControllerInteractor) and instead will always attempt to select an interactable that it is hovering (though will not perform exclusive selection of that interactable). Inheritance System.Object UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor SnapZone Implements UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor UnityEngine.XR.Interaction.Toolkit.IXRGroupMember UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractor UnityEngine.XR.Interaction.Toolkit.IXRInteractor ISnapZone Inherited Members UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.CanHover(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.CanSelect(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.showInteractableHoverMeshes UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.interactableHoverMeshMaterial UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.interactableCantHoverMeshMaterial UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.socketActive UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.interactableHoverScale UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.recycleDelayTime UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.hoverSocketSnapping UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.socketSnappingRadius UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.socketScaleMode UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.fixedScale UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.targetBoundsSize UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.unsortedValidTargets UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.socketSnappingLimit UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.ejectExistingSocketsWhenSnapping UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnValidate() UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnTriggerEnter(Collider) UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnTriggerStay(Collider) UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnTriggerExit(Collider) UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.CreateDefaultHoverMaterials() UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.CanHoverSnap(UnityEngine.XR.Interaction.Toolkit.IXRInteractable) UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.DrawHoveredInteractables() UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.GetHoveredInteractableMaterial(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable) UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.GetValidTargets(System.Collections.Generic.List<UnityEngine.XR.Interaction.Toolkit.IXRInteractable>) UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.isHoverActive UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.isSelectActive UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.selectedInteractableMovementTypeOverride UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.CanHover(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable) UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.ShouldDrawHoverMesh(MeshFilter, Renderer, Camera) UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.StartSocketSnapping(UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable) UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.EndSocketSnapping(UnityEngine.XR.Interaction.Toolkit.XRGrabInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.registered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.unregistered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.interactionManager UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.containingGroup UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.interactionLayers UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.attachTransform UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.keepSelectedTargetValid UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.disableVisualsWhenBlockedInGroup UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.startingSelectedInteractable UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.startingTargetFilter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.hoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.hoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.selectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.selectExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.targetFilter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.allowHover UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.allowSelect UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.isPerformingManualInteraction UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.interactablesHovered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.hasHover UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.interactablesSelected UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.firstInteractableSelected UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.hasSelection UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.startingHoverFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.hoverFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.startingSelectFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.selectFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.largestInteractionStrength UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.Reset() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.Start() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnDestroy() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetAttachTransform(UnityEngine.XR.Interaction.Toolkit.IXRInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetLocalAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.targetPriorityMode UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.targetsForSelection UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.IsHovering(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.IsSelecting(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.IsHovering(UnityEngine.XR.Interaction.Toolkit.IXRInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.IsSelecting(UnityEngine.XR.Interaction.Toolkit.IXRInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.CaptureAttachPose(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.CreateAttachTransform() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.PreprocessInteractor(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetInteractionStrength(UnityEngine.XR.Interaction.Toolkit.IXRInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractor.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRInteractor.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRInteractor.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.CanHover(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.CanSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.StartManualInteraction(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.EndManualInteraction() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.ProcessHoverFilters(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.ProcessSelectFilters(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsGroupMember(UnityEngine.XR.Interaction.Toolkit.IXRInteractionGroup) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.IXRGroupMember.OnRegisteringAsNonGroupMember() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.interactionLayerMask UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.enableInteractions UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onHoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onHoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onSelectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onSelectExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onHoverEnter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onHoverExit UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onSelectEnter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.onSelectExit UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.selectTarget UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.hoverTargets UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetHoverTargets(System.Collections.Generic.List<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable>) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.GetValidTargets(System.Collections.Generic.List<UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable>) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.requireSelectExclusive UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor.StartManualInteraction(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable) Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public class SnapZone : XRSocketInteractor, IXRHoverInteractor, IXRSelectInteractor, IXRTargetPriorityInteractor, IXRGroupMember, IXRInteractionStrengthInteractor, IXRInteractor, ISnapZone Remarks Adds the functionality to force the selection and unselection of specific interactables. It also adds a highlighter to emphasize the position of the socket. Fields | Improve this Doc View Source ShowHighlightInEditor Shows the highlight Declaration public bool ShowHighlightInEditor Field Value Type Description System.Boolean Properties | Improve this Doc View Source Anchor Declaration public Transform Anchor { get; } Property Value Type Description Transform | Improve this Doc View Source ForceSelectInteractable Forces the socket interactor to unselect the given target, if it is not null. Declaration protected IXRSelectInteractable ForceSelectInteractable { get; set; } Property Value Type Description UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable | Improve this Doc View Source ForceUnselectInteractable Forces the socket interactor to unselect the given target, if it is not null. Declaration protected IXRSelectInteractable ForceUnselectInteractable { get; set; } Property Value Type Description UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable | Improve this Doc View Source HighlightMeshMaterial The material used for drawing the mesh of the ShownHighlightObject . Declaration public Material HighlightMeshMaterial { get; set; } Property Value Type Description Material | Improve this Doc View Source InvalidMaterial The material used for drawing when an invalid InteractableObject is hovering this SnapZone . Declaration public Material InvalidMaterial { get; set; } Property Value Type Description Material | Improve this Doc View Source IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSnapping True when an object is about to be snapped to the snapzone. Declaration public bool IsSnapping { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsUnsnapping True when an object is about to be unsnapped from the snapzone. Declaration public bool IsUnsnapping { get; } Property Value Type Description System.Boolean | Improve this Doc View Source PreviewMesh Returns the preview mesh used for this SnapZone. Declaration public Mesh PreviewMesh { get; set; } Property Value Type Description Mesh | Improve this Doc View Source ShowHighlightObject Gets or sets whether ShownHighlightObject is shown or not. Declaration public bool ShowHighlightObject { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShownHighlightObject The 'GameObject' whose mesh is drawn to emphasize the position of the snap zone. If none is supplied, no highlight object is shown. Declaration public GameObject ShownHighlightObject { get; set; } Property Value Type Description GameObject | Improve this Doc View Source SnappedObject Declaration public ISnappableProperty SnappedObject { get; } Property Value Type Description ISnappableProperty | Improve this Doc View Source ValidationMaterial The material used for drawing when an InteractableObject is hovering this SnapZone . Declaration public Material ValidationMaterial { get; set; } Property Value Type Description Material Methods | Improve this Doc View Source Awake() Declaration protected override void Awake() Overrides UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.Awake() | Improve this Doc View Source CanSelect(IXRSelectInteractable) Determines if the interactable is valid for selection this frame. Declaration public override bool CanSelect(IXRSelectInteractable interactable) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable Interactable to check. Returns Type Description System.Boolean true if the interactable can be selected this frame. Overrides UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.CanSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable) Remarks Adds the functionality of selecting and unselecting specific interactables. | Improve this Doc View Source CanSnap(ISnappableProperty) Declaration public bool CanSnap(ISnappableProperty target) Parameters Type Name Description ISnappableProperty target Returns Type Description System.Boolean | Improve this Doc View Source CreateFallbackMaterial() Creates a transparent using Unity's \"Standard\" shader. Declaration protected virtual Material CreateFallbackMaterial() Returns Type Description Material A transparent . Null, otherwise, if Unity's \"Standard\" shader cannot be found. | Improve this Doc View Source DrawHighlightMesh() Draws a highlight mesh. Declaration protected virtual void DrawHighlightMesh() | Improve this Doc View Source ForceRelease() Declaration public bool ForceRelease() Returns Type Description System.Boolean | Improve this Doc View Source ForceSelect(IXRSelectInteractable) Unselects any selected interactable object and forces the provided interactable object to be selected if it is selectable. Declaration public virtual void ForceSelect(IXRSelectInteractable interactable) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable Interactable object to be selected. | Improve this Doc View Source ForceSnap(ISnappableProperty) Declaration public bool ForceSnap(ISnappableProperty target) Parameters Type Name Description ISnappableProperty target Returns Type Description System.Boolean | Improve this Doc View Source ForceUnselect() Forces to unselect any selected interactable object. Declaration public virtual void ForceUnselect() | Improve this Doc View Source IsValidSnapTarget(IXRSelectInteractable) Declaration protected bool IsValidSnapTarget(IXRSelectInteractable interactable) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable interactable Returns Type Description System.Boolean | Improve this Doc View Source OnDisable() Declaration protected override void OnDisable() Overrides UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnDisable() | Improve this Doc View Source OnEnable() Declaration protected override void OnEnable() Overrides UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.OnEnable() | Improve this Doc View Source ProcessInteractor(XRInteractionUpdateOrder.UpdatePhase) This method is called by the interaction manager to update the interactor. Please see the interaction manager documentation for more details on update order. Declaration public override void ProcessInteractor(XRInteractionUpdateOrder.UpdatePhase updatePhase) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase updatePhase Overrides UnityEngine.XR.Interaction.Toolkit.XRSocketInteractor.ProcessInteractor(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) | Improve this Doc View Source Update() Declaration protected virtual void Update() | Improve this Doc View Source UpdateHighlightMeshFilterCache() Updates the VRBuilder.XRInteraction.SnapZone.previewMesh property using the current ShownHighlightObject . Declaration protected virtual void UpdateHighlightMeshFilterCache() Implements UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor UnityEngine.XR.Interaction.Toolkit.IXRTargetPriorityInteractor UnityEngine.XR.Interaction.Toolkit.IXRGroupMember UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractor UnityEngine.XR.Interaction.Toolkit.IXRInteractor ISnapZone"
  },
  "api/VRBuilder.XRInteraction.SnapZonePreviewDrawer.html": {
    "href": "api/VRBuilder.XRInteraction.SnapZonePreviewDrawer.html",
    "title": "Class SnapZonePreviewDrawer | VR Builder Documentation",
    "keywords": "Class SnapZonePreviewDrawer Draws a preview of SnapZone highlight. Inheritance System.Object SnapZonePreviewDrawer Implements IExcludeFromHighlightMesh Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public class SnapZonePreviewDrawer : MonoBehaviour, IExcludeFromHighlightMesh Methods | Improve this Doc View Source UpdateMesh() Forces an update of the mesh. Declaration public void UpdateMesh() Implements IExcludeFromHighlightMesh"
  },
  "api/VRBuilder.XRInteraction.TeleportationAnchorProximityEntry.html": {
    "href": "api/VRBuilder.XRInteraction.TeleportationAnchorProximityEntry.html",
    "title": "Class TeleportationAnchorProximityEntry | VR Builder Documentation",
    "keywords": "Class TeleportationAnchorProximityEntry This adds the possibility to move the user into a UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor and trigger the teleport event without teleporting. It will not change the users position or rotation set in the UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor . Inheritance System.Object TeleportationAnchorProximityEntry Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public class TeleportationAnchorProximityEntry : MonoBehaviour"
  },
  "api/VRBuilder.XRInteraction.TeleportationAnchorVRBuilder.html": {
    "href": "api/VRBuilder.XRInteraction.TeleportationAnchorVRBuilder.html",
    "title": "Class TeleportationAnchorVRBuilder | VR Builder Documentation",
    "keywords": "Class TeleportationAnchorVRBuilder Teleportation anchor override that ensures a teleport provider is found even when the rig has been spawned after loading the scene. Inheritance System.Object UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor TeleportationAnchorVRBuilder Implements UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable UnityEngine.XR.Interaction.Toolkit.IXRInteractable UnityEngine.XR.Interaction.Toolkit.IXROverridesGazeAutoSelect UnityEngine.XR.Interaction.Toolkit.IXRReticleDirectionProvider ILayerConfigurator Inherited Members UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor.teleportAnchorTransform UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor.OnValidate() UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor.Reset() UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor.OnDrawGizmos() UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor.GetAttachTransform(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.TeleportationAnchor.GenerateTeleportRequest(UnityEngine.XR.Interaction.Toolkit.IXRInteractor, RaycastHit, UnityEngine.XR.Interaction.Toolkit.TeleportRequest) UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.GenerateTeleportRequest(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor, RaycastHit, UnityEngine.XR.Interaction.Toolkit.TeleportRequest) UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.teleportationProvider UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.matchOrientation UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.matchDirectionalInput UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.teleportTrigger UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.filterSelectionByHitNormal UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.upNormalToleranceDegrees UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.teleporting UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.Awake() UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.ProcessInteractable(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.GetReticleDirection(UnityEngine.XR.Interaction.Toolkit.IXRInteractor, Vector3, Vector3, System.Nullable<Vector3>) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactionLayerMask UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onFirstHoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onLastHoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onHoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onHoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onSelectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onSelectExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onSelectCanceled UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onActivate UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onDeactivate UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onFirstHoverEnter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onHoverEnter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onHoverExit UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onLastHoverExit UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onSelectEnter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onSelectExit UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onSelectCancel UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectCanceling(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectCanceled(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnActivate(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnDeactivate(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetDistanceSqrToInteractor(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.AttachCustomReticle(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.RemoveCustomReticle(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.hoveringInteractors UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.selectingInteractor UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.registered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.unregistered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.getDistanceOverride UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactionManager UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.colliders UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactionLayers UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.distanceCalculationMode UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.selectMode UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.focusMode UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.customReticle UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.allowGazeInteraction UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.allowGazeSelect UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.overrideGazeTimeToSelect UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.gazeTimeToSelect UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.overrideTimeToAutoDeselectGaze UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.timeToAutoDeselectGaze UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.allowGazeAssistance UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.firstHoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.lastHoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.hoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.hoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.firstSelectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.lastSelectExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.selectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.selectExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.firstFocusEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.lastFocusExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.focusEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.focusExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.activated UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.deactivated UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactorsHovering UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.isHovered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactorsSelecting UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.firstInteractorSelecting UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.isSelected UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactionGroupsFocusing UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.firstInteractionGroupFocusing UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.isFocused UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.canFocus UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.startingHoverFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.hoverFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.startingSelectFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.selectFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.startingInteractionStrengthFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactionStrengthFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.largestInteractionStrength UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnEnable() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnDisable() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnDestroy() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetLocalAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetDistanceSqrToInteractor(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetDistance(Vector3) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetInteractionStrength(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsHovered(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsSelected(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsHovered(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsSelected(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetCustomReticle(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.AttachCustomReticle(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.RemoveCustomReticle(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.CaptureAttachPose(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRInteractable.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRInteractable.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.OnActivated(UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.OnDeactivated(UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable.OnFocusEntering(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable.OnFocusEntered(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable.OnFocusExiting(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable.OnFocusExited(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnFocusEntering(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnFocusEntered(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnFocusExiting(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnFocusExited(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.ProcessHoverFilters(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.ProcessSelectFilters(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.ProcessInteractionStrengthFilters(UnityEngine.XR.Interaction.Toolkit.IXRInteractor, System.Single) Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public class TeleportationAnchorVRBuilder : TeleportationAnchor, IXRActivateInteractable, IXRHoverInteractable, IXRSelectInteractable, IXRFocusInteractable, IXRInteractionStrengthInteractable, IXRInteractable, IXROverridesGazeAutoSelect, IXRReticleDirectionProvider, ILayerConfigurator Properties | Improve this Doc View Source LayerSet Declaration public LayerSet LayerSet { get; } Property Value Type Description LayerSet Methods | Improve this Doc View Source ConfigureLayers(String, String) Declaration public void ConfigureLayers(string interactionLayerName, string raycastLayerName) Parameters Type Name Description System.String interactionLayerName System.String raycastLayerName | Improve this Doc View Source OnActivated(ActivateEventArgs) Declaration protected override void OnActivated(ActivateEventArgs args) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs args Overrides UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.OnActivated(UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs) | Improve this Doc View Source OnDeactivated(DeactivateEventArgs) Declaration protected override void OnDeactivated(DeactivateEventArgs args) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs args Overrides UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.OnDeactivated(UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs) | Improve this Doc View Source OnSelectEntered(SelectEnterEventArgs) Declaration protected override void OnSelectEntered(SelectEnterEventArgs args) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args Overrides UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) | Improve this Doc View Source OnSelectExited(SelectExitEventArgs) Declaration protected override void OnSelectExited(SelectExitEventArgs args) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args Overrides UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) Implements UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable UnityEngine.XR.Interaction.Toolkit.IXRInteractable UnityEngine.XR.Interaction.Toolkit.IXROverridesGazeAutoSelect UnityEngine.XR.Interaction.Toolkit.IXRReticleDirectionProvider ILayerConfigurator"
  },
  "api/VRBuilder.XRInteraction.TeleportationAreaVRBuilder.html": {
    "href": "api/VRBuilder.XRInteraction.TeleportationAreaVRBuilder.html",
    "title": "Class TeleportationAreaVRBuilder | VR Builder Documentation",
    "keywords": "Class TeleportationAreaVRBuilder Teleportation area override that ensures a teleport provider is found even when the rig has been spawned after loading the scene. Inheritance System.Object UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable UnityEngine.XR.Interaction.Toolkit.TeleportationArea TeleportationAreaVRBuilder Implements UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable UnityEngine.XR.Interaction.Toolkit.IXRInteractable UnityEngine.XR.Interaction.Toolkit.IXROverridesGazeAutoSelect UnityEngine.XR.Interaction.Toolkit.IXRReticleDirectionProvider ILayerConfigurator Inherited Members UnityEngine.XR.Interaction.Toolkit.TeleportationArea.GenerateTeleportRequest(UnityEngine.XR.Interaction.Toolkit.IXRInteractor, RaycastHit, UnityEngine.XR.Interaction.Toolkit.TeleportRequest) UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.GenerateTeleportRequest(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor, RaycastHit, UnityEngine.XR.Interaction.Toolkit.TeleportRequest) UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.teleportationProvider UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.matchOrientation UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.matchDirectionalInput UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.teleportTrigger UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.filterSelectionByHitNormal UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.upNormalToleranceDegrees UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.teleporting UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.Awake() UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.ProcessInteractable(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.GetReticleDirection(UnityEngine.XR.Interaction.Toolkit.IXRInteractor, Vector3, Vector3, System.Nullable<Vector3>) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactionLayerMask UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onFirstHoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onLastHoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onHoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onHoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onSelectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onSelectExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onSelectCanceled UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onActivate UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onDeactivate UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onFirstHoverEnter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onHoverEnter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onHoverExit UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onLastHoverExit UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onSelectEnter UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onSelectExit UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.onSelectCancel UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectCanceling(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectCanceled(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnActivate(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnDeactivate(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetDistanceSqrToInteractor(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.AttachCustomReticle(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.RemoveCustomReticle(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.hoveringInteractors UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.selectingInteractor UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.registered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.unregistered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.getDistanceOverride UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactionManager UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.colliders UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactionLayers UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.distanceCalculationMode UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.selectMode UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.focusMode UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.customReticle UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.allowGazeInteraction UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.allowGazeSelect UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.overrideGazeTimeToSelect UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.gazeTimeToSelect UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.overrideTimeToAutoDeselectGaze UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.timeToAutoDeselectGaze UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.allowGazeAssistance UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.firstHoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.lastHoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.hoverEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.hoverExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.firstSelectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.lastSelectExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.selectEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.selectExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.firstFocusEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.lastFocusExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.focusEntered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.focusExited UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.activated UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.deactivated UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactorsHovering UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.isHovered UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactorsSelecting UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.firstInteractorSelecting UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.isSelected UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactionGroupsFocusing UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.firstInteractionGroupFocusing UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.isFocused UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.canFocus UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.startingHoverFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.hoverFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.startingSelectFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.selectFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.startingInteractionStrengthFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.interactionStrengthFilters UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.largestInteractionStrength UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnEnable() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnDisable() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnDestroy() UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetAttachTransform(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetLocalAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetDistanceSqrToInteractor(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetDistance(Vector3) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetInteractionStrength(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsHovered(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsSelected(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsHovered(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.IsSelected(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.GetCustomReticle(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.AttachCustomReticle(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.RemoveCustomReticle(UnityEngine.XR.Interaction.Toolkit.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.CaptureAttachPose(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRInteractable.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRInteractable.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.OnActivated(UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable.OnDeactivated(UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable.OnFocusEntering(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable.OnFocusEntered(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable.OnFocusExiting(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable.OnFocusExited(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnFocusEntering(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnFocusEntered(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnFocusExiting(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnFocusExited(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.ProcessHoverFilters(UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.ProcessSelectFilters(UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.ProcessInteractionStrengthFilters(UnityEngine.XR.Interaction.Toolkit.IXRInteractor, System.Single) Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public class TeleportationAreaVRBuilder : TeleportationArea, IXRActivateInteractable, IXRHoverInteractable, IXRSelectInteractable, IXRFocusInteractable, IXRInteractionStrengthInteractable, IXRInteractable, IXROverridesGazeAutoSelect, IXRReticleDirectionProvider, ILayerConfigurator Properties | Improve this Doc View Source LayerSet Declaration public LayerSet LayerSet { get; } Property Value Type Description LayerSet Methods | Improve this Doc View Source ConfigureLayers(String, String) Declaration public void ConfigureLayers(string interactionLayerName, string raycastLayerName) Parameters Type Name Description System.String interactionLayerName System.String raycastLayerName | Improve this Doc View Source OnActivated(ActivateEventArgs) Declaration protected override void OnActivated(ActivateEventArgs args) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs args Overrides UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.OnActivated(UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs) | Improve this Doc View Source OnDeactivated(DeactivateEventArgs) Declaration protected override void OnDeactivated(DeactivateEventArgs args) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs args Overrides UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.OnDeactivated(UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs) | Improve this Doc View Source OnHoverEntered(HoverEnterEventArgs) Declaration protected override void OnHoverEntered(HoverEnterEventArgs args) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args Overrides UnityEngine.XR.Interaction.Toolkit.XRBaseInteractable.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) | Improve this Doc View Source OnSelectEntered(SelectEnterEventArgs) Declaration protected override void OnSelectEntered(SelectEnterEventArgs args) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args Overrides UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) | Improve this Doc View Source OnSelectExited(SelectExitEventArgs) Declaration protected override void OnSelectExited(SelectExitEventArgs args) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args Overrides UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) | Improve this Doc View Source Reset() Declaration protected override void Reset() Overrides UnityEngine.XR.Interaction.Toolkit.BaseTeleportationInteractable.Reset() Implements UnityEngine.XR.Interaction.Toolkit.IXRActivateInteractable UnityEngine.XR.Interaction.Toolkit.IXRHoverInteractable UnityEngine.XR.Interaction.Toolkit.IXRSelectInteractable UnityEngine.XR.Interaction.Toolkit.IXRFocusInteractable UnityEngine.XR.Interaction.Toolkit.IXRInteractionStrengthInteractable UnityEngine.XR.Interaction.Toolkit.IXRInteractable UnityEngine.XR.Interaction.Toolkit.IXROverridesGazeAutoSelect UnityEngine.XR.Interaction.Toolkit.IXRReticleDirectionProvider ILayerConfigurator"
  },
  "api/VRBuilder.XRInteraction.User.html": {
    "href": "api/VRBuilder.XRInteraction.User.html",
    "title": "Namespace VRBuilder.XRInteraction.User | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.XRInteraction.User Classes InteractorLayerConfigurator Configures interaction and/or raycast layers of a list of interactors to layers with the specified names."
  },
  "api/VRBuilder.XRInteraction.User.InteractorLayerConfigurator.html": {
    "href": "api/VRBuilder.XRInteraction.User.InteractorLayerConfigurator.html",
    "title": "Class InteractorLayerConfigurator | VR Builder Documentation",
    "keywords": "Class InteractorLayerConfigurator Configures interaction and/or raycast layers of a list of interactors to layers with the specified names. Inheritance System.Object InteractorLayerConfigurator Implements ILayerConfigurator Namespace : VRBuilder.XRInteraction.User Assembly : VRBuilder.XRInteraction.dll Syntax public class InteractorLayerConfigurator : MonoBehaviour, ILayerConfigurator Properties | Improve this Doc View Source LayerSet Declaration public LayerSet LayerSet { get; } Property Value Type Description LayerSet Methods | Improve this Doc View Source ConfigureLayers(String, String) Declaration public void ConfigureLayers(string interactionLayerName, string raycastLayerName) Parameters Type Name Description System.String interactionLayerName System.String raycastLayerName Implements ILayerConfigurator"
  },
  "api/VRBuilder.XRInteraction.XRLocomotionHandler.html": {
    "href": "api/VRBuilder.XRInteraction.XRLocomotionHandler.html",
    "title": "Class XRLocomotionHandler | VR Builder Documentation",
    "keywords": "Class XRLocomotionHandler Locomotion handler for Unity XR. Inheritance System.Object BaseLocomotionHandler XRLocomotionHandler Namespace : VRBuilder.XRInteraction Assembly : VRBuilder.XRInteraction.dll Syntax public class XRLocomotionHandler : BaseLocomotionHandler Properties | Improve this Doc View Source CurrentPosition Current position of the XR Rig. Declaration public override Vector3 CurrentPosition { get; } Property Value Type Description Vector3 Overrides BaseLocomotionHandler.CurrentPosition | Improve this Doc View Source CurrentRotation Current rotation of the XR Rig. Declaration public override Quaternion CurrentRotation { get; } Property Value Type Description Quaternion Overrides BaseLocomotionHandler.CurrentRotation | Improve this Doc View Source RigManipulationProvider Locomotion provider to directly manipulate the XR Rig. Declaration protected RigManipulationProvider RigManipulationProvider { get; } Property Value Type Description RigManipulationProvider Methods | Improve this Doc View Source SetPositionAndRotation(Vector3, Quaternion) Declaration public override void SetPositionAndRotation(Vector3 destinationPosition, Quaternion destinationRotation) Parameters Type Name Description Vector3 destinationPosition Quaternion destinationRotation"
  },
  "articles/animations/animate-transform-behavior.html": {
    "href": "articles/animations/animate-transform-behavior.html",
    "title": "Animate Transform | VR Builder Documentation",
    "keywords": "Animate Transform Introduction This behavior animates a game object by changing its position, rotation and scale over time until it matches those of a \"transform provider\" game object. It is possible to set how position, rotation and scale are animated over time through separate animation curves. The behavior can be found under Animation > Animate Transform . Inspector The Animate Transform behavior accepts the following parameters. Object : The game object to be moved. Final transform provider : The game object which provides the final position, rotation and scale of the animation. Duration (in seconds) : Duration in seconds of the animation. Position curve, Rotation curve, Scale curve : These animation curves determine the object's transform at a given point in time. The curve can have values from 0 (the object's original position, rotation or scale) to 1 (the transform provider's position, rotation or scale). Note that the length of the curves is normalized: while it is possible to have the time axis greater or lesser than 1, this won't affect the duration of the animation - it is recommended to leave the time axis to the default length of 0 to 1. Ping pong : If this is checked, the animation will play backwards after finishing, resulting in the object animating and then returning to the original position. Note the total duration will be twice the value in the Duration field. This is similar to creating a symmetrical velocity curve, like for example a bell shape. Repeats : The number of times the animation will repeat. Note that each repeat will increase the duration of the animation by its full amount. If ping pong is set, it will be included in every repeat."
  },
  "articles/animations/behaviors.html": {
    "href": "articles/animations/behaviors.html",
    "title": "Behaviors | VR Builder Documentation",
    "keywords": "Behaviors The Animations add-on includes the following behaviors."
  },
  "articles/animations/contact.html": {
    "href": "articles/animations/contact.html",
    "title": "Contact | VR Builder Documentation",
    "keywords": "Contact Join our official Discord server for quick support from the developer and fellow users. Suggest and vote on new ideas to influence the future of the VR Builder. Make sure to review our asset if you like it. It will help us immensely. If you have any issues, please contact contact@mindport.co . We’d love to get your feedback, both positive and constructive. By sharing your feedback you help us improve - thank you in advance! Let’s build something extraordinary! You can also visit our website at mindport.co ."
  },
  "articles/animations/follow-path-behavior.html": {
    "href": "articles/animations/follow-path-behavior.html",
    "title": "Follow Path | VR Builder Documentation",
    "keywords": "Follow Path Introduction This behavior animates a game object so that it follows a path, for example a spline. It is possible to set a curve determining how fast the object moves along the path, plus a number of options described below. The behavior can be found under Animation > Follow Path . Inspector The Follow Path behavior accepts the following parameters. Object : The game object to be moved. Path : The path the object will follow. This needs to be an IPathProperty , like the BezierSplinePathProperty provided in VR Builder Core. Keep relative position : If unchecked, the object will be teleported on the path when the animation starts, and its position throughout the animation will be on the path itself. If checked, the object will retain its current position and move parallel to the path while animating. Keep relative rotation : If unchecked, the object will rotate so that its forward vector follows the direction of the path throughout the animation. If checked, the object will retain its current orientation, but still rotate following the direction of the path. Duration (in seconds) : Duration in seconds of the animation. Velocity curve : This animation curve determines the object's position on the path at a given point in time. The position on the path can be a value from 0 (start) to 1 (end). Note that the curve length is normalized: while it is possible to have the time axis greater or lesser than 1, this won't affect the duration of the animation - the curve will be extended or compressed to fit the provided time duration. The first key of the curve should always be at 0 on the horizontal axis. Disable Rotation : If enabled, the object will not rotate while following the path and the settings on Keep relative rotation will be ignored. Reverse : Utility checkbox that plays the animation backwards. It is equivalent to mirroring the velocity curve. Ping pong : If this is checked, the animation will play backwards after finishing, resulting in the object animating and then returning to the original position. Note the total duration will be twice the value in the Duration field. This is similar to creating a symmetrical velocity curve, like for example a bell shape. Repeats : The number of times the animation will repeat. Note that each repeat will increase the duration of the animation by its full amount. The Bezier Spline Path Property The BezierSplinePathProperty is an implementation of the IPathProperty interface included in VR Builder core, and can thus be used to create paths for the Follow Path behavior. It's recommended to add it to an empty game object. It will automatically add a BezierSpline component, which will display a default 4 point Bezier curve in the scene. It is possible to select and move the points in 3D space to manipulate the curve. We can see the position of the currently selected point in the inspector. By clicking Add Curve in the BezierSpline inspector, we can add a second bezier curve connected to the current one. With a point selected in the inspector, it is possible to change the point mode. The color of the point changes depending on the mode selected. The following modes are available. Free (Magenta): The handles of the adjacent curves are independent, and can form a sharp angle if not aligned. Aligned (Yellow): The handles of the adjacent curves are aligned, so there will be a smooth transition, but their length can be set individually. Mirrored (Cyan): The handles of the adjacent curves are aligned and of equal length. Other options are: Loop : Will close the path to form a loop. Especially useful with repeats, as the object will keep going around the path. Approximate Linear Velocity : Normally, velocities on a Bezier curve are non-linear. This means that, by default, the object's speed will change depending on where it is on the path and which curve it is on. Enabling this option will make the object approximate a linear speed, which means that the animation speed will be actually more faithful to the animation curve. Granularity of Approximation : This parameter is only exposed if Approximate Linear Velocity is selected. It determines the number of segments each curve will be subdivided in, a higher value will result in a more constant speed along the path, very low values (less than 10) can cause the object to change speed in a strange way. Lowering the value can increase performance."
  },
  "articles/animations/introduction.html": {
    "href": "articles/animations/introduction.html",
    "title": "Introduction | VR Builder Documentation",
    "keywords": "Introduction This add-on contains a collection of animation behaviors that allow VR Builder to display more complex animations than what is possible with the built-in tools. When installed, the Move Object core behavior will be disabled in the menu, as its functionality is 100% included in the new Animate Transform behavior. To manually enable it, go to Tools > VR Builder > Developer > Allowed Menu Items Configuration ."
  },
  "articles/animations/quick-start.html": {
    "href": "articles/animations/quick-start.html",
    "title": "Quick Start | VR Builder Documentation",
    "keywords": "Quick Start The easiest way to get started with this add-on is to check out the included demo scene. If it is the first time you open the demo scene, you will have to do it through the menu: Tools > VR Builder > Demo Scenes > Animations . This is necessary as a script will copy the demo course in the StreamingAssets folder. After the first time, the demo scene can be opened normally. Press Play to try out the behaviors included in this add-on. The demo scene includes a station for every behavior. You can teleport there and check out some practical uses of the included behaviors."
  },
  "articles/animations/rotate-around-axis-behavior.html": {
    "href": "articles/animations/rotate-around-axis-behavior.html",
    "title": "Rotate Around Axis | VR Builder Documentation",
    "keywords": "Rotate Around Axis Introduction This behavior rotates an object around a given axis. The object rotates a specified amount of degrees in a given time. The axis can be represented by a second transform, and it is possible to choose whether the object will rotate around the X, Y or Z axis of that object. Inspector It is possible to configure the following parameters. Object : The object to be rotated. Rotation Axis Provider : The object defining the position of the rotation axis. If none is selected, the axis will pass through the origin of the rotating object, which in most cases means that the object will rotate on itself. Rotation Axis : The local axis of the provider object which will be used to rotate around. Duration (in seconds) : The total duration of the animation. Animation Curve : Defines the state of the animation over time. The X axis represents the duration of the animation (normalized), while the Y axis represents values from the object's initial rotation (0) and the object's target rotation defined above (1)."
  },
  "articles/animations/set-animator-parameter-behavior.html": {
    "href": "articles/animations/set-animator-parameter-behavior.html",
    "title": "Set Animator Parameter | VR Builder Documentation",
    "keywords": "Set Animator Parameter Introduction This set of behaviors allow to control the parameters of multiple Animator components from within VR Builder. The included behaviors are: Set Animator Trigger Parameter Set Animator Boolean Parameter Set Animator Integer Parameter Set Animator Float Parameter These behaviors set the specified parameter to the desired value immediately. The float variant can additionally change the parameter over time, following an animation curve. Inspector The inspector for these behaviors works similarly for all variants, although not all variants have all options. The behavior makes use of the following parameters. Animator : Process Scene Objects containing an Animator Property . As usual, it is possible to automatically add the property, but the user should ensure there is a configured Animator component present on the same game object as the property. Parameter name : The name of the parameters in the Animator as a string. Target value (not present on trigger): The desired new value for the parameter. It is not present on the Set Animator Trigger behavior as triggers don't store values. Duration (in seconds) (float only): The amount of time in seconds before the float parameter reaches its final value. If set to 0, the value will change instantly like in the other behaviors. Animation curve (float only): Describes how the float value changes over time. The X axis represents the duration of the transition, while the Y axis represents the current value, with 0 being the initial value and 1 the target value."
  },
  "articles/animations/show-exploded-view-behavior.html": {
    "href": "articles/animations/show-exploded-view-behavior.html",
    "title": "Show Exploded View | VR Builder Documentation",
    "keywords": "Show Exploded View Introduction This behavior lets you easily create an exploded view of an object with a number of child objects. By default, all immediate children of the specified game objects will be displaced by the specified factor relative to their current local position. This means that children with a local position of zero will not be displaced. Note that you can create empty objects with the desired relative positions in order to achieve the desired effect. It is also possible to manually set which child objects will be displaced. You can do so by adding them to the Explodable Child Objects list on the Explodable Property of the target object. If the list is not empty, only the objects in the list will be exploded, otherwise all first-level children will be selected. Inspector Object : The game object to be exploded. Scale : How much the children will displace themselves from their initial position. A scale of 1 represent the initial position and can be used to un-explode the view. Values above 1 will explode the view, and below 1 will implode. Duration (in seconds) : Duration in seconds of the animation. Explosion curve : This curve determines the object's position at a given point in time. The curve can have values from 0 (the child's original position) to 1 (the final position). Note that the length of the curves is normalized: while it is possible to have the time axis greater or lesser than 1, this won't affect the duration of the animation - it is recommended to leave the time axis to the default length of 0 to 1. Ping pong : If this is checked, the animation will play backwards after finishing, resulting in the object animating and then returning to the original position. Note the total duration will be twice the value in the Duration field. This is similar to creating a symmetrical velocity curve, like for example a bell shape. Repeats : The number of times the animation will repeat. Note that each repeat will increase the duration of the animation by its full amount. If ping pong is set, it will be included in every repeat."
  },
  "articles/core/vr-builder-manual.html": {
    "href": "articles/core/vr-builder-manual.html",
    "title": "VR Builder Manual | VR Builder Documentation",
    "keywords": "VR Builder Manual Table of Contents <!-- omit in toc --> VR Builder Manual Introduction Requirements Installation Guide Through the Project Setup Wizard Welcome Interaction Settings XR Hardware Setup Unity Localization Help & Documentation Updating Upgrading to major versions Quick Start Demo Scene Overview Demo Scene Hierarchy Customizing the Rig Process Editor Chapters view Graph view Step Nodes Step Step Group Parallel Execution End Chapter Process Scene Objects Locomotion Continuous Movement Teleportation Behaviors Guidance Play Audio File Description Configuration Play TextToSpeech Audio Description Configuration Highlight Object Description Configuration Spawn Confetti Description Configuration Utility Behavior Sequence Description Configuration Example Delay Description Configuration Set Parent Description Configuration Load Scene Description Configuration Environment Disable Objects Description Configuration Enable Objects Description Configuration Disable Components Description Configuration Enable Components Description Configuration Unsnap Object Description Configuration Animation Move Object Description Configuration Conditions Environment Move Objects in Collider Description Configuration Object Nearby Description Configuration Interaction Grab Objects Description Configuration Release Objects Description Configuration Snap Objects Description Configuration Touch Objects Description Configuration Use Objects Description Configuration Utility Timeout Description Configuration Locomotion Teleport Description Configuration Online Documentation Acknowledgements Contact and Support Introduction VR Builder helps you create interactive VR applications better and faster. By setting up a Unity scene for VR Builder, you will pair it with a VR Builder process . Through the VR Builder process, you can define a sequence of actions the user can take in the scene and the resulting consequences. You can easily edit a process without coding through VR Builder's process editor. The process editor is a node editor where the user can arrange and connect the steps of the process. Each step is a different node and can include any number of behaviors , which make things happen in the scene. Likewise, a step will have at least one transition leading to another step. Every transition can list several conditions which have to be completed for the transition to trigger. For example, step B can be reached only after the user has grabbed the object specified in step A. Behaviors and conditions are the \"building blocks\" of VR Builder. Several of them are provided in the free version already. Additional behaviors and conditions are available in our paid add-ons. Since VR Builder is open source, you can always write your own behaviors and conditions as well. Behaviors and conditions can interact only with process scene objects . These are game objects in the scene which have a Process Scene Object component on them. The interaction capabilities of a process scene object can be increased by adding scene object properties to it. For example, adding a Grabbable Property component to a game object will let VR Builder know that the object is grabbable, and when it is grabbed. Normally it is not necessary to add properties manually to an object. When an object is dragged in the inspector of a condition or behavior, the user has the option to automatically configure it with a single click. Where possible, properties try to add and configure required components by themselves. If you add a Grabbable Property to a game object, this will automatically be made grabbable in VR (it still needs to have a collider and a mesh, of course). This makes it very easy to start from some generic assets and build a fully interactive scene. Requirements VR Builder is supported on Unity 2021.3 or later. It uses the built-in render pipeline by default, but URP is supported as well and existing materials can be easily converted. VR Builder works out of the box with any headset compatible with Unity's XR Interaction Toolkit. Installation You can get VR Builder from the Unity Asset Store or from our GitHub . In the first case, you will be able to download and import the VR Builder package from the package manager. If you have downloaded a .unitypackage from GitHub, just import it in the project. If you are creating a new project, select the 3D or 3D (URP) template. Note that it is not necessary to choose the VR template as VR Builder will configure the project for VR automatically. After importing, VR Builder will compile and import some dependencies. For older Unity versions, a dialog from Unity's XR Interaction Component appears. VR Builder should work with either choice, so select the option that better suits your existing project. Use I Made a Backup, Go Ahead! if you are starting a new project. This will trigger an automated restart. For newer Unity versions the Samples of the XR Interaction Toolkit might need an update. After these notifications the Project Setup Wizard will appear. Guide Through the Project Setup Wizard The Setup Wizard helps to get new or existing Unity scenes set up and ready to be used with VR Builder. Welcome In the following we will guide you through the different tabs of the VR Builder Setup Wizard. Click Next to proceed to the interaction settings page setup page. Interaction Settings Here you can configure some default settings related to VR Builder interactions. Right now, the only available setting will determine whether a newly created grabbable object will use physics or not. You can also change these options at any time in Project Settings > VR Builder > Settings . XR Hardware Setup Then, if it's not configured already, you will be able to configure your project to work with your VR hardware. If your hardware is not listed but supports OpenXR, select Other. You might need to finish the configuration under Project Settings -> XR Plug-in Management. If your device is not supported, please reach out to us in the VR Builder Community. The packages for the selected hardware will be imported after closing the wizard. Unity Localization Finally you must choose whether to set up localization support or skip it for now. VR Builder supports localization through the Unity Localization package. When setting up localization, the wizard will guide you through the manual steps required for a localized project. It provides a useful checklist and some shortcuts to make the task easier. It also has links that redirect to the relevant Unity documentation. If you decide to skip this setup, VR Builder will work in a single language. You can perform localization setup at any time. We encourage you to use Unity Localization, even if you use just one language. With Unity Localization, you will have all your texts in one place inside the Unity Localization Tables, which in turn will give you the possibility to export and refine them and import them back into Unity. Note that as of January 2024, we do not support asset localization tables. See Resources path/Key in the Documentation on how to localize audio files. Help & Documentation This page lists some useful resources to get you started with VR Builder. There is also a checkbox which lets you choose if the demo scene should be loaded after closing the wizard.After clicking Finish, VR Builder is set up! You will need to wait a few seconds for packages to import if you selected a headset from the hardware list. Then, feel free to try out the demo scene or create your own scene by selecting Tools > VR Builder > Scene Setup Wizard… . Note that if you selected the Unity URP template in the beginning, the materials on the avatar hands and demo scene will look solid magenta. That's Unity's way to tell you that the materials are not compatible with the current render pipeline. You can rectify this by selecting all materials (by filtering them in the project window), then click Edit > Rendering > Materials > Convert Selected Built-in Materials to URP. You can of course ignore this step if you don't plan to use the provided hand models or the demo scene. Updating To update to a new version of VR Builder, it is recommended to remove the package before importing the new one. It is also good practice to backup/commit your project before updating the package. Removing the old package is necessary in order to ensure that obsolete files are removed. When an Asset Store package is updated, it only adds new files and updates the existing ones - no files are removed, which could result in redundant or conflicting code. To remove the asset, open the Package Manager and show the packages in the project. Find VR Builder and click Remove . You can then import the new package from the Package Manager. Note: The demo processes might have changed in the updated version of the package. If you plan to use the demo scenes, ensure to delete the demo processes from the StreamingAssets/Processes folder before importing the new package. Upgrading to major versions Major VR Builder releases are usually not completely compatible with the previous version. Updating to them requires extra care, and is not recommended in production unless you need some of the new features. The specifics can vary depending on the release, and we will provide detailed upgrade guides when necessary. You can find the guide to upgrade to the latest version (VR Builder 4) from version 3 here . Quick Start You can get a first impression of VR Builder and its features by accessing the provided demo scene. This sample scene contains a pre-built process that showcases some of the interactions provided in VR Builder. You can automatically open the demo scene at the end of the setup wizard, or use the shortcut in Tools > VR Builder > Demo Scenes > Core . Note that, while the scene can be found and opened from disk, it is necessary to use one of the above methods at least once in order to automatically copy the process file to the StreamingAssets folder, where VR Builder processes are saved. Demo Scene Overview The demo scene showcases how to assemble a process with the building blocks included in VR Builder. More building blocks and features are available as separate add-ons. These building blocks are either conditions or behaviors. Conditions check if the user or the world is in a certain state, and behaviors modify the world state when activated. The process in the demo scene is linear, and will guide the user through different steps. To try out the demo scene, ensure audio volume is up, or you won't be able to hear the spoken instructions! Demo Scene Hierarchy In the hierarchy there are three game objects in parentheses. They are automatically added to every VR Builder scene. [PROCESS_CONFIGURATION] allows to select the process for the current scene from a list of processes saved in the project. [PROCESS_CONTROLLER] defines some parameters for processes in this scene like the spectator input bindings and camera. [XR_Setup_Action_Based_Hands] is the VR rig used by the default XR interaction component. If you are using a different interaction component, for example to use VR Builder in conjunction with Interhaptics or VRIF , you might see a different rig here. By looking at the other objects in the scene, we can see that some have a Process Scene Object component and possibly some \"property\" component. A Process Scene Object has a unique object ID that can be accessed by the process. Properties define how the process can interact with the object. For example, a Grabbable Property will let VR Builder recognize if an object is being grabbed. Adding a Grabbable Property to an object will automatically make it a Process Scene Object and add a few components so you can interact with the object in VR. If these properties are not added manually you will usually be prompted to add them automatically when building the process of your VR application. Customizing the Rig Since VR Builder 2.2.0, the rig system has been simplified by removing the [INTERACTION_RIG_LOADER] and dummy rig. The default rig is created directly in the scene and can be edited or replaced like any game object. If you plan to use the same rig in multiple scenes, just create a prefab of it and manually replace the default rig. The only requirement every VR Builder rig has, independent of the interaction system, is that it must contain a User Scene Object component. This component identifies the rig as the user, and is usually placed on the root of the rig. It should reference the head and hand transforms, so that VR Builder can access those positions when needed. If left empty, it will attempt to find the head by itself by looking for the camera's transform. It is also possible to add other Process Scene Object s on the rig in order to use hands, backpacks, toolbelts and so on in behaviors and conditions, depending on the use case. Process Editor The process editor lets you design the process of your VR application. You can open the process editor from Tools > VR Builder > Process Editor or Window > VR Builder > Process Editor . The process editor for the demo scene should look like this. Chapters view On the left, there is a list of chapters. Every chapter is a separate section of the process. They are useful to separate a process in its logical steps and avoid too much clutter in a single graph. You can click on the different chapters to visualize the corresponding graphs. Next to the chapter name, there are icons that allow you to move the chapter up and down in the list, rename it or delete it. Underneath, you can see the Connections breakdown foldout. Expand it to see incoming and outgoing connections for the current chapter. That is, which chapters lead here and to which chapter it is possible to go from this one. The number next to each connection represents the amount of steps that connect to the chapter. When \"Next Chapter\" or \"Previous Chapter\" is listed as a connection, it means the connection is implicit: a path ends with an empty transition, which by default ends the current chapter and starts the next one in order. The demo scene is linear, meaning that each chapter will lead directly to the next and the connection overview only contains implicit connections, but it is possible to create more complex processes that don't follow the chapter list linearly. Graph view On the right, there is a graphical representation of the current chapter. Every node is called a Step . Every step can include a number of Behaviors which can happen when the node is triggered or before leaving it. In the demo scene, those are mostly text to speech instructions. A step can have as many exit points, called Transitions , as needed. Every transition can list a number of Conditions which, if fulfilled, make the transition valid. Select the \"Welcome\" node in the first chapter. This will open the Step Inspector. The window should look like the following. The only behavior is a text to speech instruction that will be triggered when the node is entered. Click on the \"Transitions\" tab. There is a single transition. A step can have multiple transitions, each leading to a different step. In this case, the transition is connected to no other step, so it will end the chapter. The next chapter, \"The magic cube\", will then start. Transitions can include conditions. If they do, they will trigger only when the attached conditions are completed. This transition has no conditions, so it will trigger immediately after the current step has ended, without any input from the user. We encourage you to investigate the other nodes to understand how the demo scene is built. Step Nodes You can create a node by right clicking anywhere in the graph and selecting New , then the type of node you want to create. There are four types of node available in VR Builder core: Step This is the default step node, the main building block for your process. By default, it is empty. This means that nothing will happen, and the execution will immediately proceed to the next node, if present. You will need to add behaviors and conditions to it in the Step Inspector in order to customize it and build your process logic. Step Group This node doesn't let you set conditions and behaviors, but instead can be expanded in a new node graph. It can be populated with other step nodes and act as a \"sub-chapter\" with some self contained logic. This can help keeping the process tidy. You can access the node's graph by clicking the Expand button or double clicking on the node itself. There are also context menu options for expanding the node or ungrouping it - that is, replacing it in the main graph with the logic it contains. This node only has one entry and one exit point. This means that after the contained logic has ended executing, the process will always continue executing from the exit transition of the group node. If you are in a step group graph, it will be indicated on the top left of the process editor. You can click on a parent to return to it. For example, clicking on \"Chapter 1\" will get you back to the main chapter graph. You can also create a group by selecting a sequence of nodes, right clicking and selecting Make group . Since the step group node only has one input and one output, this works best when selecting linked nodes only. Edge cases are resolved as follows: If there are two or more inbound connections in the group, all will lead to the group's input. The first valid node will be chosen as starting step for the group, while the others will have their connection severed. All outgoing connections will be deleted, meaning that the process will continue from the output of the group node after the group has processed. This means that if the selected nodes lead to multiple other nodes, now they will all go through the group's output. The step group output will be connected to the previous target of the first valid grouped node. Other external targets in grouped nodes are ignored, which means that when the group ends it will always go to the same following node. If you encounter one of these edge case, make sure to review your process logic after grouping, as it may have changed. Parallel Execution The parallel execution node lets you execute two or more step sequences at the same time. Execution will continue to the next node once all parallel sequences have completed. Clicking on a Parallel Path button will open a new graph where the path can be edited. This is very similar to a step group, with the difference that there can be multiple parallel paths and they are all executed at the same time. Like with step groups, it is possible to return to the main process by clicking the root chapter on the top left of the process editor. The buttons next to a parallel path let you rename or delete it. The \"+\" button at the bottom lets you add more parallel paths. There is no theoretical limit to the number of paths in a parallel execution node, but performance might suffer. End Chapter You can use this node as the last node on a sequence. It will end the current chapter and start a new specified chapter, which can be selected from a drop-down list. This is useful to move through the chapters in a non-linear fashion. Note that you are not required to use this node for linear processes, as a chapter will automatically end when an empty transition is reached. In that case, the process will simply proceed to the following chapter. Note: It is not recommended to use this node inside a step group as it will behave slightly differently (the nodes following the step group will be fast-forwarded before ending the chapter). It is currently not possible to create this node inside a step group. Process Scene Objects The Process Scene Object component acts as a bridge between the VR Builder process and a Unity game object. If the process needs to observe or interact with a game object, it does so through this component. This means that every game object referenced in the process is required to have this component. If a more detailed interaction is needed, property components can be added to provide VR Builder more control on the object. For example, adding a Grabbable Property component will make the object grabbable, and VR Builder will be able to check if the object has been grabbed. The Process Scene Object generates a hidden object ID which identifies the object internally in the VR Builder process. In addition, it is possible to associate an arbitrary number of groups to every scene object. Some behaviors and conditions can interact with unspecified objects within a certain group rather than a specific object with a given object ID. You can select and assign an existing group from the list, or create and directly assign a new group. You can unassign a group from an object by clicking the X button next to it. Groups are stored on a per-project basis and can be created, edited or deleted from Project Settings > VR Builder > Scene Object Groups . It is possible to edit multiple Process Scene Objects at the same time to add or remove groups in bulk. When multiple objects are selected, all groups on all objects are listed. If a group is present only on some of the selected objects, it will be displayed in italics . A default text style means that the group is present on all selected objects. Locomotion The default rig supports locomotion by teleportation or continuous movement. By default, the rig is set to work with teleportation only, you can change this settings on the Locomotion Scheme Manager component on the XR Rig child object. Continuous Movement Continuous movement is controlled by default with the thumbsticks. Left to move around, right to turn on the spot. In general, we don't recommend this locomotion solution as it can cause motion sickness in inexperienced users, however it can still be useful for specific use cases, precision adjustments or testing. Teleportation Teleportation requires the user to hold the trigger, then release while pointing at a teleportable surface or anchor. Teleportation requires a little more setup to work properly, but most of it is handled automatically by VR Builder. It is recommended for teleportation to work on different layer than normal interactions. By default, VR Builder uses the XR Teleport raycast layer for raycasts from the teleportation controllers, and the XR Teleport XRI interaction layer for teleportation interaction. This means that interactors and interactables need to be configured with these layers in order to work. When a new scene is created, the teleport interactors on the default rig are automatically configured to raycast and interact on these layers. Likewise, when creating a teleportation anchor or area, you should use the Teleportation Anchor (VR Builder) or Teleportation Area (VR Builder) components instead of the XRI versions. These include a button in the inspector which automatically configures them to settings compatible with the VR Builder rig, including layer settings. The teleportation anchor in particular also include two more options: you can create a default anchor complete with graphics and collider, and you can enable proximity detection (see Teleport condition ). Given this, teleportation should be easy to setup and just work out of the box. In case something does not, for example when editing an old scene or after changing the position of the XR Teleport layer, it is possible to reset the layers on the rig and all anchors and areas in the scene. To do so, select Tools > VR Builder > Developer > Configure Teleportation Layers . Note that this will overwrite your existing layer masks and select the XR Teleport layer on all of them. Behaviors Behaviors are used to make something happen in the process. Behaviors can be as simple as giving instructions and hints, making new objects visible, or animating an object in the scene. What they have in common is that something happens without requiring an intervention by the user. This section lists the behaviors included in VR Builder. Guidance Play Audio File Description The Play Audio File behavior plays an audio clip loaded from the Resources folder in your project’s asset folder. VR Builder supports all audio file formats supported by Unity, which are: aif wav mp3 ogg Configuration Resources path/Key Insert the relative file path from the Resources folder. Please note that you have to omit the file extension, as shown in the example. You can find more information about this on https://docs.unity3d.com/ScriptReference/Resources.Load.html . If localization is enabled, this should instead be a key in the localization table associated with the process, which contains the localized resources path. Example without localization File to be played: Assets/.../Resources/Sounds/click-sound.ogg Text/Key: Sounds/click-sound Example with localization File to be played: Assets/.../Resources/Sounds/click-sound.ogg Text/Key: click-sound-key Localization table translation: Sounds/click-sound Volume The volume at which the audio should be played. Execution stages By default, steps execute behaviors in the beginning, in their activation stage. This can be changed with the Execution stages dropdown menu: Before Step Execution : The step invokes the behavior during its activation. After Step Execution : Once a transition to another step has been selected and the current step starts deactivating, the behavior is invoked. Before and After Step Execution : Execution at activation and deactivation of a step. Wait for completion By default, the step waits for the audio file to finish. If you want the step to interrupt the audio in case the step is completed, uncheck this option. Note: this might lead to an audio file not even being started, in case the step ends immediately. Play TextToSpeech Audio Description The Play TextToSpeech Audio behavior uses a synthesized voice to read text. It supports localized text through Unity's Localization package. By default, VR Builder works with a single language. In Project Settings > VR Builder > Language you can specify which language will be used by the TTS engine. VR Builder can also be configured to use the Localization package from Unity to provide localized text. The Project Setup Wizard can guide you through the steps, which are the same as outlined in the official documentation . VR Builder will automatically switch to localized mode when a Localization Settings object has been created. Configuration Text/Key If the project is not configured for localization, this field can be used to enter the text that will be spoken in the language configured in the Project Settings. If localization is configured, meaning that a Localization Settings object has been created, you need instead to enter the key to look for in the localization table associated with the process. Volume The volume at which the audio should be played. Execution stages By default, steps execute behaviors in the beginning, in their activation stage. This can be changed with the Execution stages dropdown menu: Before Step Execution : The step invokes the behavior during its activation. After Step Execution : Once a transition to another step has been selected and the current step starts deactivating, the behavior is invoked. Before and After Step Execution : Execution at activation and deactivation of a step. Wait for completion By default, the step waits for the audio file to finish. If you want the step to interrupt the audio in case the trainee completes the conditions, uncheck this option. Note: this might lead to an audio file not even being started, in case the step ends immediately. Highlight Object Description The Highlight Object behavior visually highlights the selected object until the end of a step. For additional highting features you can replace the Default Highlighter with a Interactable Highlighter Script . Select the highlighted Object in the Unity Hierarchy. In the Unity Inspector replace the DefaultHighlighter with a Interactable Highlighter Script . You can define the Color and Material for On Touch Highlight , On Grab Highlight , and On Use Highlight . The object will show the highlight color configured in the Highlight behavior by default. As soon as the object is touched it will change to the color configured in On Touch Highlight . The same happens when the object is grabbed or used. It will display the configured color in ‘On Grab Highlight’ or ‘On Use Highlight’. Configuration Color Color in which the target object will be highlighted. Colors are defined in the RGBA or HSV color channel. By configuring the alpha (A) value, highlights can be translucent. Object The Process Scene Object which should be highlighted. Spawn Confetti Description The Spawn Confetti behavior causes confetti to fall above the selected Object . It can be useful as visual feedback or celebration for completing a task successfully. Configuration Spawn Above User If checked, the spawn position will be above the user rather than on the specified Process Scene Object . Position Provider Specifies where the confetti should spawn if not set to spawn above the user. Confetti Machine Path Path to the confetti machine prefab, relative to a Resources folder. Use the default one or point to your custom confetti machine. Area Radius Radius around the position provider in which confetti will be spawned. Duration Duration of the visual effect in seconds. Execution stages By default, steps execute behaviors in the beginning, in their activation stage. This can be changed with the Execution stages dropdown menu: Before Step Execution : The step invokes the behavior during its activation. After Step Execution : Once a transition to another step has been selected and the current step starts deactivating, the behavior is invoked. Before and After Step Execution : Execution at activation and deactivation of a step. Utility Behavior Sequence Description The Behavior Sequence contains a list of child behaviors which will be activated one after another. A child behavior in the list will not be activated until the previous child behavior has finished its life cycle. Configuration Repeat If checked, the behavior sequence restarts from the top of the child behavior list as soon as the life cycle of the last child behavior in the list has finished. Child behaviors List of all queued behaviors. Add behaviors to the list using the \"Add Behavior\" button. Wait for completion If checked, the behavior sequence will finish the life cycle of each child behavior in the list before it transitions to another step. Even when the \"Repeat\" option is enabled, the execution will transition to the next step after the child behavior list has been completed. Uncheck this option if you want to interrupt the sequence as soon as all conditions of a transition are fulfilled. Example Play an audio file after a set time, for example to give the user some delayed hints. This is a sequence combining a Delay and a Play Audio File behavior. Refer to the documentation for the Delay behavior and the Play Audio File behavior . Delay Description The Delay behavior completes after the specified amount of time. This step will wait for the duration configured in Delay (in seconds) , even when the user fulfills the required conditions to transition to the next step. Configuration Delay (in seconds) Configure the behavior’s delay duration in seconds. Example Delay (in seconds) = 1.3 Set Parent Description The Set Parent behavior parents an Object to another one in the Unity hierarchy. Configuration Target The Process Scene Object to be parented. Parent The new parent for the target object. Note this can be null, in which case the object will be unparented. Snap to parent transform If checked, the target object will snap to the same position and rotation as the parent object. Load Scene Description The Load Scene behavior loads a new scene, either additively or not. If a scene is loaded additively, it should not contain a VR Builder process as that could interfere with the process running in the main scene. It still can contain process scene objects which can be interacted with. If a scene is loaded non-additively, this behavior will effectively interrupt the process as the current scene is unloaded and a new one is loaded. Configuration Scene to load Select the scene to be loaded from this dropdown. Note that the scene needs to be added to the Build Settings in order to show in the dropdown. The scene is serialized by path in the process JSON, so moving or renaming it might break this parameter. Load additively If checked, the scene will be loaded additively and the process will keep running. If unchecked, the current scene will be unloaded and thus interrupt the current process. Load asynchronously If checked, the scene will be loaded asynchronously. This can result in smoother performance while loading. A scene is loaded synchronously in the Start phase of the activating process, while asynchronous loading will happen in the Update phase. Environment Disable Objects Description The Disable Objects behavior makes the selected Objects invisible and non-interactive until they are specifically set back to \"enabled\" in a future step. Put into Unity terms, it deactivates the selected Game Objects. Configuration Objects The Process Scene Objects to be disabled. Enable Objects Description The Enable Objects behavior makes the selected Objects visible and interactive until it is specifically set back to \"disabled\" in a future step. Put into Unity terms, it activates the selected Game Objects. Configuration Object The Process Scene Objects to be enabled. Disable Components Description The Disable Components behavior disables all components of the specified type on the given Process Scene Objects . Configuration Object The Process Scene Objects the component is on. Component type A drop-down list allowing to select the component type that will be disabled. Enable at end of step If checked, the components will be enabled again at the end of the step. Enable Components Description The Enable Components behavior enables all components of a specified type on the given Process Scene Objects . Configuration Object The Process Scene Objects the component is on. Component type A drop-down list allowing to select the component type that will be enabled. Disable at end of step If checked, the components will be disabled again at the end of the step. Unsnap Object Description The Unsnap Object behavior unsnaps a snapped object from a snap zone. This can be useful in case the object needs to be further manipulated by the process. Configuration Either the object or the snap zone can be left null. This will result in either the object unsnapping from any snap zone it is in, or in the unsnapping of whatever object is snapped to the specified snap zone. If both are specified, the unsnap will occur only if the specified object is snapped to the specified snap zone. Object to unsnap The Process Scene Object to unsnap. Snap zone to unsnap The Snap Zone from which the object will be unsnapped. Animation Move Object Description The Move Object behavior animates the Object to move and rotate (no scaling) to the position and rotation of the Final Position Provider in the time specified in the Duration (in seconds) parameter. Note: If Object was affected by gravity before, it will continue to be affected after this behavior. Configuration Object The Process Scene Object to be moved and rotated (no scaling). Final position provider The Process Scene Object used as the position provider object. It should be placed at the destination position and rotation. Animation duration (in seconds) Time in seconds the animation takes to move and rotate Object to the Final position provider . Example Duration (in seconds) = 1.3 Conditions Conditions are used to determine which transition is used to exit a step. Transitions are evaluated top to bottom, and the first valid one will be selected. To be valid means to have only fulfilled conditions or no conditions at all. A condition usually requires the user's intervention, for example grabbing an object. However this is not always the case: conditions like the timeout condition will trigger regardless of the user’s activity. There may also be cases in which other factors in the environment determine if a condition is fulfilled. Conditions need to be active in order to be fulfilled. As soon as a step is active, all containing Conditions are active as well. This section lists the conditions included in VR Builder. Environment Move Objects in Collider Description The Move Objects in Collider condition is fulfilled when the Objects are within the specified Collider for the required amount of time ( Required seconds inside ) while this condition is active. Configuration Object The Process Scene Objects to move. If the objects need to be grabbed, they need to have the Grabbable Property and a collider component configured. The collider defines the area where the user can grab an object. Collider The Process Scene Object with the destination collider. Make sure that a collider is present and that the option Is Trigger is enabled. Required seconds inside Set the time in seconds that the Objects should stay inside the Collider . Object Nearby Description The Object Nearby condition is fulfilled when the Object is within the specified Range of a Reference object . Configuration Object The Process Scene Object that should be in the radius of the Reference Object . Reference Object The Process Scene Object from which you want to measure the distance. Range In this field, you can set the maximum distance between the Object and the Reference object required to fulfill this condition. Required seconds inside In this field, you can set the time in seconds the Object should stay within the radius Range of the Reference Object . Interaction Grab Objects Description The Grab Object condition is fulfilled when the user grabs any of the Objects . The condition is also fulfilled if the user already grabbed any of Objects before the step was activated, that is, if the user is already holding the specified object. Configuration Objects The Process Scene Objects to grab. The objects needs to have the Grabbable Property and a collider component configured. The collider defines the area where the user can grab an object. Release Objects Description The Release Objects condition is fulfilled when all of the Objects are released by the user's controller. If the user is not already holding any of the specified objects in hand while this condition is active, it is fulfilled immediately. Configuration Objects The Process Scene Objects to release. The objects need to have the Grabbable Property and a collider component configured. Snap Objects Description The Snap Object condition is fulfilled when any of the Objects is released into the Zone to snap into , which means the collider of any of the Objects and collider of the Zone overlap. Adapt the collider size of the snap zone to increase or decrease the area where the user can release an Object . Increasing the collider size of the snap zone decreases the required snap precision and simplifies the user's interaction in VR. After the user releases an Object , this is moved to the snap zone's SnapPoint . To adjust this position, change the position of the SnapPoint child object of the Zone to snap into object. Snap Zone Generator For any snappable object you can generate a snap zone that can snap this object and can be used as a Zone to snap into . To do so, navigate to the Snappable Property in Unity's Inspector. You will see two buttons. Clicking on the button Create Snap Zone for this object , you will create a snap zone that only accepts this exact object. Clicking on Create Snap Zone for objects in the same groups will instead create a snap zone that accepts every object that shares at least a group with the current object. Note that the current object will still determine the shape of the snap zone's ghost object. If you want a specific snap zone behavior, like for example accepting only one group of the source object instead of all of them, you'll have to manually change that. Select the snap zone and find the Has Guid Validation component. If you manually created your snap zone, you might have to add this component manually as well. Add to the list the objects you want to be valid for this snap zone. You can reference single objects by object ID, or entire categories of objects via groups. Manual Snap Zone Creation Instead of the automatic generation as described above, you can do those steps also manually. Please refer to available documentation on the XRSocketInteractor from Unity or related sources. You can also make changes to the automatically created snap zone to adapt it to your needs. Please note that these changes might impact the process logic. Feed Forward for Snap Zones Snap zones are restricted to which objects can be snapped. This means every object can be valid (i.e. it can be snapped to this zone) or invalid (it can not be snapped to this zone) for a snap zone. This is achieved with validation components on the snap zone, for example the Has Guid Validation component. You can use this component to configure which specific objects or groups are accepted by the snap zone. In case you are moving a valid object into a zone, the snap zone color changes to ‘Validation Color’ (green), providing the user in VR with positive feedback. In case you are moving an invalid object into a zone, the snap zone color changes to ‘Invalid Color’ (red), giving the user the feedback that this is the wrong object for this zone. You can modify the colors and materials to be used in the Snap Zones parameters and settings. Snap Zone Parameters and Settings To change the highlight color or validation hover material of a dedicated snap zone, navigate to the snap zone object in the Unity Inspector. You will find the Snap Zone Parameters and Settings in the script Snap Zone . To change the colors and materials of all snap zones in the scene, select them in the VR Builder snap zone settings and press 'Apply settings in current scene'. The snap zone settings can be found in the project settings in tab VR Builder > Settings > Snap Zones . Configuration Objects The Process Scene Objects to place (snap). The objects needs to have the Snappable Property and a collider component configured. Zone to snap into This field contains the Process Scene Object where any of the Objects are required to be snapped. Make sure the object has a collider component with the Is Trigger property enabled . Touch Objects Description The Touch Object condition is fulfilled when any of the Objects is touched by the user's controller. If a user is already touching the any of the objects while this condition is active, this condition is fulfilled immediately. Configuration Object The Process Scene Objects to be touched. The objects needs to have the Touchable Property and a collider component configured. Use Objects Description The Use Objects condition is fulfilled when any of the Objects are used by pressing the Use button of the controller while being touched or grabbed. Configuration Objects The Process Scene Objects of which one is required to be used. The Objects need to have the Usable Property and a collider component configured. Utility Timeout Description The Timeout condition is fulfilled when the time specified in Wait (in seconds) has elapsed. This can make sense as a \"fallback\" condition. For example, if the user does not complete condition X in the allotted amount of time, the timeout condition will trigger leading to a different step with different consequences. Configuration Wait (in seconds) Set the time in seconds that should elapse before this condition is fulfilled. Locomotion Teleport Description The Teleport condition is fulfilled when the user teleports to any of the referenced Teleportation Points . Previous teleportation actions made into a Teleportation Point are not considered. If an anchor used as Teleportation Point has proximity detection enabled, the condition will be fulfilled not only if the user teleports to it, but also if they move close to it with continuous movement or by walking in the room. You can activate proximity detection when you need the user to be in a specific location, regardless of whether they teleport or arrive there by other locomotion types. The provided Teleportation Property is based on the Unity XR Interaction Toolkit's Teleportation Anchor . For further reference, please check out the XR Interaction Toolkit documentation . Configuring a Teleportation Point The Teleportation Property can be set as a Default Teleportation Anchor by clicking on the Set Default Teleportation Anchor button. You can find it when selecting the Teleportation Point and viewing it in the Unity Inspector. This will configure the attached Teleportation Anchor . It will provide a visual element in the Unity Editor that helps placing the Teleportation Point in the scene. This visual element will also be shown in the virtual world during training execution to guide the user. Configuration Teleportation Points The Teleportation Properties of which one, the user should teleport to. Online Documentation We offer a constantly expanding list of guides and tutorials on our website. We encourage you to check them out to improve your VR Builder skills. If this is your first time with VR Builder, you should start from the Process Editor and Step Inspector tutorials, which explain the basics of working with VR Builder. In addition,you might also want to check out the guides on how to build standalone VR Builder apps on the Oculus Quest or Pico Neo 3 . You can also check out some guides on the more advanced interactions, like the series on snap zones . Lastly, there are some step-by-step tutorials explaining how to work with our latest paid add-ons. Even if you don't intend to buy the relevant content, they can provide a good overview on how to build a functional process with VR Builder from scratch. Acknowledgements VR Builder is based on the open source edition of the Innoactive Creator . While Innoactive helps enterprises to scale VR training, we adopted this tool to provide value for smaller content creators looking to streamline their VR development processes. Like Innoactive, we believe in the value of open source and will continue to support this approach together with them and the open source community. This means you are welcome to contribute to the VR Builder GitHub repositories . Contact and Support Join our official Discord server for quick support from the developer and fellow users. Suggest and vote on new ideas to influence the future of the VR Builder. Make sure to review VR Builder on the Unity Asset Store if you like it. This will help us sustain the development of VR Builder. If you have any issues, please contact contact@mindport.co . We'd love to get your feedback, both positive and constructive. By sharing your feedback you help us improve - thank you in advance! Let's build something extraordinary! You can also visit our website at mindport.co ."
  },
  "articles/process-menu/process-menu-manual.html": {
    "href": "articles/process-menu/process-menu-manual.html",
    "title": "Menus for VR Builder | VR Builder Documentation",
    "keywords": "Menus for VR Builder Table of Contents Menus for VR Builder Table of Contents Introduction Quick Start How to Use the Menu Desktop Process Menu Standalone Process Menu Customizing the Process Controller Contact Introduction This add-on provides examples on how to build a menu that allows to control the process execution in VR Builder. The menu allows to display the current step and its description, skip it by choosing a transition, switch chapters or restart the process. Two prefabs are included. One displays the menu on the desktop screen, allowing an external person to control the process. This can be useful for example in training scenarios with a trainee in VR and a trainer at the computer. The other displays the menu in VR, floating in front of the user. This can be useful for standalone headsets, which lack a flat screen view, or in cases where the user is supposed to control the process themselves. Quick Start Drag one of the prefabs in the Prefabs folder in your process scene. The menu will appear when pressing Play. Feel free to try it out with the demo scene included in VR Builder! The process starts automatically in VR Builder. If you want the process to be started from the menu, you will have to provide a custom [PROCESS_CONTROLLER] . You can find more information on how to do so here . How to Use the Menu Desktop Process Menu The desktop process menu is laid out as follows. VR Builder logo. Feel free to replace it with your own! Current chapter. You can use the drop-down to skip to a later chapter. Process state indicator. It appears when the process is running. Name of the current step. Info button. Click it to see the description of the current step. Skip Step button. Clicking this button will fast-forward to the following step. If the process is not running, it is replaced by the Start Process button. Restart process button. Clicking it will restart the process from the beginning. Audio toggle. Enables/disables process audio. The desktop menu can be used by clicking with the mouse on the desired option. Standalone Process Menu The standalone process menu is laid out as follows. VR Builder logo. Feel free to replace it with your own! Current chapter. You can use the drop-down to skip to a later chapter. Process state indicator. It appears when the process is running. Name of the current step. Info button. Click it to see the description of the current step. Skip Step button. Clicking this button will fast-forward to the following step. If the process is not running, it is replaced by the Start Process button. Restart process button. Clicking it will restart the process from the beginning. Audio toggle. Enables/disables process audio. The standalone menu is designed to be opened through user input. By default, the primary button on the right controller opens the menu. This can be changed on the Standalone Menu Handler component on the menu prefab. In case you want the menu to be permanently present in the scene, remove the Standalone Menu Handler component from the prefab. In the inspector, it is possible to select which button can be used to open and close the menu. The Standalone Menu Handler also takes care of repositioning the menu in front of the user every time it is opened. To interact with the standalone menu, press the grip button on a controller to enter UI mode with that controller. This will change the hand to a pointing animation and visualize a ray originating from it. Point the ray to interactable elements on the menu and press the trigger button to activate them. Customizing the Process Controller The process controller can be configured on the [PROCESS_CONTROLLER] game object in a VR Builder scene. This object handles running the process and a few configuration parameters. The Process Controller Setup script lets you choose which process controller prefab is spawned when the scene runs. It is possible to select one of the default process controller prefabs, or use a custom one by ticking the Use custom prefab box. It is also possible to select whether to auto start the process, or start it manually, for example through one of the menus provided in this add-on. Both default process controllers automatically start the process when the scene runs. If you want to avoid that, so the process can be started from the menu, you'll have to create a custom process controller prefab. You can use one of the default ones found in Assets\\MindPort\\VR Builder\\Core\\Source\\Basic-UI-Component\\Runtime\\ProcessController\\Resources\\Prefabs as a baseline. The Basic Process Loader component ensures the process runs on scene start. To prevent this behavior, do not include this script in your custom controller. Contact Join our official Discord server for quick support from the developer and fellow users. Suggest and vote on new ideas to influence the future of the VR Builder. Make sure to review VR Builder and this asset if you like it. It will help us immensely. If you have any issues, please contact contact@mindport.co . We'd love to get your feedback, both positive and constructive. By sharing your feedback you help us improve - thank you in advance! Let's build something extraordinary! You can also visit our website at mindport.co ."
  },
  "articles/randomization/randomization-manual.html": {
    "href": "articles/randomization/randomization-manual.html",
    "title": "Randomization for VR Builder | VR Builder Documentation",
    "keywords": "Randomization for VR Builder Table of Contents Table of Contents Introduction Quick Start The Random Branch Node Logging the Random Branch node Data Properties Creating Data Properties Working with Data Properties Set Value Behaviors Reset Value Behavior Compare Values Conditions Logging Data Properties Set Random Boolean Behavior Configuration Set Random Number Behavior Configuration Contact Introduction The Randomization add-on makes it easy to add unpredictability to a VR Builder process. It includes a new type of node, called Random Branch, which allows to add random events and alternative paths with zero effort. Additionally, there are a couple tools to work with data properties: behaviors to set random booleans and numbers. You can use these to set random values for the process, and compare those values in condition, to make sure that every run of a process will be different than last time. Quick Start You can check out the main features of this add-on in the provided demo scene. After importing the package in a properly set-up VR Builder project, you can access the demo scene from the menu Tools > VR Builder > Demo Scenes > Randomization . It is necessary to open the demo scene from the menu at least the first time, so a script will copy the required process file in the StreamingAssets folder. In the demo scene, the user must check and change the pressure of the tires of a car by using a provided tool. It is a freeform process, where the user can check the tires in any order and even go back to previous ones. Once done, putting the tool in the box triggers the final evaluation. This scene uses the Random Branch node to randomly select a scenario when the process starts, and the Set Random Number behavior to set the initial tire pressure to random values. You can press Play to try out the scene, or open the Process Editor to check out how the process is made. Additionally, you can find a tutorial on how this demo scene was created on our website . The Random Branch Node The Randomization add-on introduces a new type of node in addition to the standard step: the Random Branch node. This is a special kind of step that immediately routes the process to a random transition. This can be useful to add random events to your process. To create it, select the new Create Random Branch option in the context menu. The Random Branch node is designed so it can be configured directly in the Process Editor window. You can add and remove transitions at will, like any step. The fields to the left of the output port can be used to specify a weight, so it is possible for some transitions to be more probable than others. By default, all weights are 1 and all transitions have equal chance to trigger. The weight can be any arbitrary number above or equal to zero. In the example above, the weights have a total of 5. This means that the Very Probable Step has a a 50% chance to be selected, while the Improbable Step only has one chance in ten. Note that it can be useful to set a weight to zero for debugging purposes - such a transition will never be selected, so it is possible to steer the process through the desired nodes. If all weights in a node are equal to zero, however, the first transition will be selected. Logging the Random Branch node If VR Builder is set to log step output in the Project Settings, Random Branch nodes will create a log entry stating which transition has been selected. Data Properties This add-on makes use of data properties to store values. A data property is a VR Builder property that stores one value of a defined data type, for example a number or a boolean. It is then possible to access those in the process steps to read or change the values. This add-on supports two types of data properties. Number Data Property : Stores a single number (C# type: float). Boolean Data Property : Stores a true/false value (C# type: bool). Creating Data Properties We consider good practice to have each data property on a different, appropriately named empty game object, e.g. \"Total Points\". This way it is easy to keep track of them and drag them in the step inspector when needed. To create the property itself, just add a Data Property component of the required type to the game object, or do it directly in the step inspector through \"Fix it\" button. In the inspector, it is possible to type a default value for the data property. The property will have that value at the start of the process, and the Reset Value behavior will reset the property to its default. Working with Data Properties There are some standard tools to work with data properties. These are the Set/Reset Value behaviors, which are used to change the value stored in a data property, and the Compare Values conditions, which compare two values (from data properties or constant) to check if they are fulfilled. Set Value Behaviors These behaviors set the value of a data property to a value specified in the step inspector. There is one behavior for each data property type. In the Randomization add-on, it is possible to set data properties of type Boolean and Number. Reset Value Behavior This behavior resets a data property's value to its default. This is zero for numerical values and false for booleans, but a different default can be specified in the inspector of the data property. The property needs to be referenced in the step inspector, and will reset when the behavior is triggered. Compare Values Conditions In the Randomization add-on it is possible to use a Compare Numbers or Compare Booleans condition. These can for example compare a random value to a constant in order to branch a process a certain way. They work in a similar way, but the comparison operators differ. You'll need to select two values and the operation between them. Use the radio buttons to select if a value comes from a data property or is a constant entered in the step inspector. In the example below, the condition will be fulfilled when the RandomNumber property is greater than 5. Logging Data Properties It can be useful to log value changes to data properties in the console for debugging purposes. This can be enabled globally by ticking the relevant box in Project Settings -> VR Builder -> Settings . ] If the Log Data Property changes checkbox is enabled, changes to the value of the data property will be logged in the console like the following example. Note that the name provided is the game object's name. Set Random Boolean Behavior This behavior works similarly to the Set Boolean behavior, except the property is not set to a specific value. Instead, it will be randomly set to true or false at runtime. It is possible to specify the probability of it to be true by moving the slider from 0 (always false) to 1 (always true). Configuration Data Property : The boolean data property to set to a random value. Probability to be True : The probability of the randomized value to be true measured from 0 (always false) to 1 (always true). Set Random Number Behavior This behavior sets a number data property to a random value within a range. Configuration Data Property : The number data property to set to a random value. Min Value : The minimum value the randomized number can have. Max Value : The maximum value the randomized number can have. Randomize Integer : If checked, the randomized number will be an integer within the range. Otherwise it can be any float in the range. Contact Join our official Discord server for quick support from the developer and fellow users. Suggest and vote on new ideas to influence the future of the VR Builder. Make sure to review VR Builder and this asset if you like it. It will help us immensely. If you have any issues, please contact contact@mindport.co . We'd love to get your feedback, both positive and constructive. By sharing your feedback you help us improve - thank you in advance! Let's build something extraordinary! You can also visit our website at mindport.co ."
  },
  "articles/states-and-data/states-and-data-manual.html": {
    "href": "articles/states-and-data/states-and-data-manual.html",
    "title": "States and Data for VR Builder | VR Builder Documentation",
    "keywords": "States and Data for VR Builder Table of Contents Table of Contents Introduction Quick Start Data Properties Creating Data Properties Working with Data Properties Set Value Behaviors Reset Value Behavior Compare Values Conditions Utilities Logging Data Properties Math Operation Behavior Trigger Event Behaviors Trigger Event Behavior Parameters State Data Properties Creating a State Data Property Handling States in Code Set State Behavior Check State Condition Contact Introduction The States and Data add-on provides developers the tools to create processes more complex and customized than before. Thanks to the support of variables in the VR Builder process, it is possible to store values to create triggers or track performance, and to create branching processes with a variety of outcomes. The states feature allows VR Builder process to interact with objects in the scene by changing and reading states instead of handling all the object's logic. This allows the user to quickly write custom code and easily integrate it in the VR Builder process, opening the way to endless customization and better performance. Quick Start You can check out the main features of this add-on in the provided demo scene. After importing the package in a properly set-up VR Builder project, you can access the demo scene from the menu Tools > VR Builder > Demo Scenes > States and Data . It is necessary to open the demo scene from the menu at least the first time, so a script will copy the required process file in the StreamingAssets folder. The demo scene consists of a color mixing machine. The user adds bottles of color in the machine to mix a new color, then can press the button to spawn a ball of the created color. It uses the data properties included in this add-on for storing and calculating the mixed color, while the machine is controlled by states. You can press Play to try out the scene, or open the Process Editor to check out how the process is made. Additionally, you can find a tutorial on how this demo scene was created on our website . Data Properties This add-on makes use of data properties to store values. A data property is a VR Builder property that stores one value of a defined data type, for example a number or a boolean. It is then possible to access those in the process steps to read or change the values. There are four types of data properties in this add-on. Number Data Property : Stores a single number (C# type: float). Text Data Property : Stores a string of text (C# type: string). Boolean Data Property : Stores a true/false value (C# type: bool). State Data Property : Stores a state value. More detailed information below (C# type: int, exposed as enum). Creating Data Properties We consider good practice to have each data property on a different, appropriately named empty game object, e.g. \"Total Points\". This way it is easy to keep track of them and drag them in the step inspector when needed. To create the property itself, just add a Data Property component of the required type to the game object, or do it directly in the step inspector through \"Fix it\" button. In the inspector, it is possible to type a default value for the data property. The property will have that value at the start of the process, and the Reset Value behavior will reset the property to its default. Additionally, it is possible to subscribe to the property events. Working with Data Properties There are some standard tools to work with data properties. These are the Set/Reset Value behaviors, which are used to change the value stored in a data property, and the Compare Values conditions, which compare two values (from data properties or constant) to check if they are fulfilled. Set Value Behaviors These behaviors set the value of a data property to a value specified in the step inspector. There is one behavior for each data property type. The available behaviors are listed here. Set Number Set Boolean Set Text Set State Reset Value Behavior This behavior resets a data property's value to its default. This is zero for numerical values, false for booleans and an empty string for text, but a different default can be specified in the inspector of the data property. The property needs to be referenced in the step inspector, and will reset when the behavior is triggered. Compare Values Conditions In States and Data it is possible to use a Compare Numbers , Compare Text or Compare Booleans condition. They work in a similar way, but the comparison operators differ. You'll need to select two values and the operation between them. Use the radio buttons to select if a value comes from a data property or is a constant entered in the step inspector. In the example below, the condition will be fulfilled when the Score Tracker value is equal or greater than the Point Threshold value. Utilities Some data properties can have utility functions to make them handier to use with Unity events. At the moment the following utility functions are available: Number Data Property : You can use the IncreaseValue(float) function to increase or decrease the value of the data property. Boolean Data Property : you can use the InvertValue() function to switch it from true to false , or viceversa. Logging Data Properties It can be useful to log value changes to data properties in the console for debugging purposes. This can be enabled globally by ticking the relevant box in Project Settings -> VR Builder -> Settings . ] If the Log Data Property changes checkbox is enabled, changes to the value of the data property will be logged in the console like the following example. Note that the name provided is the game object's name. Math Operation Behavior The Math Operation behavior performs an operation on a data property and updates it with the result of the operation. It takes three parameters, Left Operand , Right Operand and Operator . Left operand is the data property that will be changed by the operation. Right Operand can either be another data property or a constant value entered in the inspector. Operator defines the type of operation to perform. The operators currently available are listed here. Add : left + right Subtract : left - right Multiply : left * right Divide : left / right Min : change left to the lowest value between left and right Max : change left to the highest value between left and right For example, the operation in the image will add 1 to the Blue data property. Trigger Event Behaviors This collection of behaviors let VR Builder trigger a Unity event on multiple scene objects. This gives you the freedom to bind your own functions to the event and execute custom code like it was a VR Builder behavior (although note that the behavior will end right after calling the event, so the next step could be activated immediately). This is achieved through an event property which is added to the desired process scene object. There are various permutations available for this behavior. It is possible to pass the following data to the event. No data Number (float) Text (string) Boolean These value can be set in the behavior itself and can either be constant or data properties. Trigger Event Behavior Parameters Targets References to the scene objects holding the event property we want to trigger. Argument (Behaviors with data only): Lets you specify a parameter to pass to the event. The type of the parameter (or corresponding data property) can be Number (float), Text (string) or Boolean (bool). Execution stages : Lets you select if the event is triggered as soon as the step starts, just before the step ends or both. State Data Properties Sometimes we need to simulate a complex behavior that is part of the environment rather than the process. For example, a machinery that can be idle, running, blocked or broken, or a door that can be locked, unlocked or open. In these case, it might make sense to code the object's logic directly with Unity Monobehaviors rather than trying to write very complex custom behaviors. This can also make sense if the object is independent from the process - for example, the machine will keep running regardless of the user's position in the process, or is designed to break randomly. Maybe we only want VR Builder to decide when the machine starts running, or to trigger a step when it breaks, but we don't need it to be in control of what exact animation the object is into, or what sound it plays - these are characteristics that are intrinsical to the machine, so we shouldn't care about them in the process. We can use a State Data Property as a communication layer between our VR Builder process and some custom logic we have written for an object. This is a data property which contains an enum listing all the states an object can be in. Like all data properties, it can be read and set both from the Step Inspector and from code. This allows your custom logic and the VR Builder process to interact with each other. Creating a State Data Property You will need to define your enum and create a state data property specific to it. For the machinery described above, it could look like this. public enum MachineState { Idle, Running, Blocked, Broken, } We then need to create a data property component using this enum from the generic state data property. This is just a couple lines. using VRBuilder.StatesAndData.Properties; public class MachineStateDataProperty : StateDataProperty<MachineState> { } We'll now be able to add this as a component to a game object. As it can be seen from the drop-down for the default value, it makes use of the MachineState enum. Handling States in Code We can read and modify states from code calling the GetState and SetState methods on the data property component. MachineStateDataProperty stateDataProperty = GetComponent<MachineStateDataProperty>(); // Set a state to a specified value. stateDataProperty.SetState(MachineState.Running); // Read the current state. MachineState state = stateDataProperty.GetState(); It is also possible to subscribe to the standard data property events ValueChanged and ValueReset , respectively called when the data property value changes or is reset to its default value. MachineStateDataProperty stateDataProperty = GetComponent<MachineStateDataProperty>(); // Subscribe to the value changed event. dataProperty.ValueChanged += OnValueChanged; // Function to be called when the event is triggered. private void OnValueChanged(object sender, EventArgs e) { // Code to be executed on value changed. } Set State Behavior The Set State behavior can be used to change the property's state from the VR Builder process. It works very similarly to the Set Value behavior, the only difference being that the state drop-down will not be visible until a State Data Property is dragged in the inspector, as it depends on the provided enum. It is also possible to use the Reset Value behavior on a State Data Property , it will work like any other data property. Check State Condition It is possible for a process to read a state and react accordingly using the Check State condition. This condition compares a State Data Property to a specified value, in a way similar to other conditions comparing values. A number of operations are available. Since enum values can be ordered, it is also possible to check if the state precedes or follows the specified one. Contact Join our official Discord server for quick support from the developer and fellow users. Suggest and vote on new ideas to influence the future of the VR Builder. Make sure to review VR Builder and this asset if you like it. It will help us immensely. If you have any issues, please contact contact@mindport.co . We'd love to get your feedback, both positive and constructive. By sharing your feedback you help us improve - thank you in advance! Let's build something extraordinary! You can also visit our website at mindport.co ."
  },
  "articles/track-and-measure/track-and-measure-manual.html": {
    "href": "articles/track-and-measure/track-and-measure-manual.html",
    "title": "Track and Measure for VR Builder | VR Builder Documentation",
    "keywords": "Track and Measure for VR Builder Table of Contents Table of Contents Introduction Quick Start Data Properties Creating Data Properties Data Property Displays Working with Data Properties Set Value Behaviors Reset Value Behavior Compare Values Conditions Score Tracking Update Score Behavior Feedback Providers Creating Custom Score Feedback Providers Time Tracking Start Timer Behavior Stop Timer Behavior Resetting a Timer Timer at Zero Condition Displaying Time Contact Introduction This add-on for VR Builder focuses on tracking performance of the VR user, and provides tools like timers and point trackers. With it, it is easy to measure the time taken to perform tasks and to assign scores while providing feedback to the user. Quick Start You can check out the main features of this add-on in the provided demo scene. After importing the package in a properly set-up VR Builder project, you can access the demo scene from the menu Tools > VR Builder > Demo Scenes > Track and Measure . It is necessary to open the demo scene from the menu at least the first time, so a script will copy the required process file in the StreamingAssets folder. The demo scene includes two stations, which highlight respectively point tracking and time tracking. Feel free to try those in VR. You can also open the Process Editor to see an example of how the provided conditions and behaviors can be used in a process. Data Properties This add-on makes use of data properties to store data values. A data property is a VR Builder property that stores one value of a defined data type, for example a number or a boolean. It is then possible to access those in the process steps to read or change the values. Creating Data Properties We consider good practice to have each data property on a different, appropriately named empty game object, e.g. \"Total Points\" or \"Assembly Time\". This way it is easy to keep track of them and drag them in the step inspector when needed. To create the property itself, just add a Data Property component of the required type to the game object, or do it directly in the step inspector through the usual \"Fix it\" button. In the inspector, it is possible to type a default value for the data property. The property will have that value at the start of the process, and the Reset Value behavior will reset the property to that value. Data Property Displays While data properties are assigned to game objects, they are just abstract values, and they are not visible in the scene. Yet, it can be useful to make them visible to the user. This add-on includes a few prefabs which can visualize the contents of data properties on a text mesh. They can be used as they are, or edited and combined with your own prefabs. Start by dragging in the scene a display of the appropriate type (number, text, boolean or time). Then reference the desired data property in the Data Property field of the display component on the prefab. The display should already work when the process is started. It is possible to configure the displayed text by editing the Text field of the display component. The following variables can be used: {0} : The value stored in the data property. {1} : The name of the game object the property is on. These variables support the .NET string formatting rules as detailed here . For example, you might want to limit the fractional digits of a number data property. Writing the variable as {0:f2} will always show two fractional digits, while writing it as {0:f0} will display only the integer part. It is also possible to format time in the time display this way, for instance {0:mm}:{0:ss}.{0:fff} will display minutes, seconds and fractional digits formatted like \"02:34.673\". Working with Data Properties There are some standard tools to work with data properties. These are the Set/Reset Value behaviors, which are used to change the value stored in a data property, and the Compare Values conditions, which compare two values (from data properties or constant) to check fulfillment. Set Value Behaviors The Track and Measure add-on provides this behavior in two flavors: Set Number and Set Boolean . They work the same way: reference an object with a data property of the corresponding type, and input the new value. The value will change when the behavior is triggered. Reset Value Behavior This behavior resets a data property's value to its default. This is zero for numerical values, false for booleans and an empty string for text, but a different default can be specified in the inspector of the data property. The property needs to be referenced in the step inspector, and will reset when the behavior is triggered. This can be useful for example for resetting a timer. Compare Values Conditions In Track and Measure it is possible to use a Compare Numbers condition or a Compare Booleans condition. They work in a similar way, but the comparison operators differ. You'll need to select two values and the operation between them. Use the radio buttons to select if a value comes from a data property or is a constant entered in the step inspector. In the example below, the condition will be fulfilled when the Score Tracker value is equal or greater than the Point Threshold value. Score Tracking One of the aims of this add-on is to provide an easy way to track scores and quantify performance in a VR process. For this, the main tool is the Update Score behavior, which can add or subtract from a numerical data property and trigger relevant user feedback. Update Score Behavior The Update Score behavior requires you to specify a Number Data Property holding the score and the amount increase. Note that this can be a negative amount. When the behavior is triggered, the value in the data property will be updated accordingly. Additionally, you can add feedback to the score increase by referencing a feedback provider object in the Feedback property field. If you do, you can also specify a process scene object which will provide the position for position-dependent feedback, like the floating text in our default implementation.If no position provider is referenced, feedback using a position parameter will default to the feedback provider object’s position. Feedback Providers You can customize the user feedback for a score increase by adding score feedback components to a game object with a Score Feedback Property . When the Update Score behavior triggers, every component on the game object will trigger its feedback. For example, we offer two prefabs, one for providing positive feedback, one for negative. Both play a sound and display a floating number showing the score increase when triggered. If a position provider is specified in the behavior, both the floating number and the sound will trigger at the specified position, else it will trigger at the feedback object's position. This happens because the game object includes both a Floating Text Score Feedback component and an Audio Score Feedback component. These can be further configured by changing the prefabs they spawn, and new components can be added. Creating Custom Score Feedback Providers Creating your own score feedback provider components requires minimal coding skills. Just create a component implementing the IScoreFeedbackProvider interface and trigger your logic in the TriggerFeedback method. public class MyScoreFeedbackProvider : MonoBehaviour, IScoreFeedbackProvider { public void TriggerFeedback(float scoreDelta, float finalScore, Transform positionProvider) { // TODO Implement feedback logic. } } To customize your feedback, you can use the following parameters. scoreDelta : The score increase. finalScore : The total score after the increase. positionProvider : The transform where to trigger the feedback. Time Tracking This add-on allows creating and managing timers which can be used for tracking performance or changing the state of the process. This is done mostly through the Start Timer and Stop Timer behaviors. Those interact with a Timer Property on a game object, which in turn stores the elapsed time (in seconds) in a Number Data Property . Since the time is stored in a standard property, it is possible to use it as any numerical data, for example by dragging the timer game object in a Compare Values condition, and to display it in the scene like other data properties. Start Timer Behavior This behavior tells a Timer Property to start counting time in the attached Number Data Property , adding to the value already stored there. If Is countdown is selected, the timer will count down instead, and stop when zero is reached. Stop Timer Behavior This behavior stops a running timer. It does nothing on a Timer Property that is not running. The Number Data Property will store the time at which the timer was stopped, and if the timer starts again it will start counting from that value. Resetting a Timer Since a timer stores its data in a Number Data Property , a timer can be reset to 0 (or whatever default) by executing the Reset Value (or the Set Number ) behavior on the timer's game object. Timer at Zero Condition It may be common to need a condition that completes when a timer reaches zero. Since the time is stored in a Number Data Property , no specific tool is needed - simply use a Compare Numbers Condition to check if the time is equal to zero. In fact, you can compare the stored time to any value, keeping in mind that the time is stored in seconds. Displaying Time Timers store their value in seconds in a Number Data Property . This means that of course a Number Display prefab will show that value. There is however one more prefab created specifically to show time: the Time Display shares many similarities with the Number Display but treats the value as time. By default it displays time in the mm:ss format, but that can be changed by editing the Text field. Since the field uses .NET formatting rules, it is possible to customize the time format as detailed here . Contact Join our official Discord server for quick support from the developer and fellow users. Suggest and vote on new ideas to influence the future of the VR Builder. Make sure to review VR Builder and this asset if you like it. It will help us immensely. If you have any issues, please contact contact@mindport.co . We’d love to get your feedback, both positive and constructive. By sharing your feedback you help us improve - thank you in advance! Let’s build something extraordinary! You can also visit our website at mindport.co ."
  }
}