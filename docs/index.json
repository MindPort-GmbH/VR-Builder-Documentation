{
  "api/VRBuilder.BasicInteraction.Behaviors.html": {
    "href": "api/VRBuilder.BasicInteraction.Behaviors.html",
    "title": "Namespace VRBuilder.BasicInteraction.Behaviors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.BasicInteraction.Behaviors Classes UnsnapBehavior UnsnapBehavior.EntityData"
  },
  "api/VRBuilder.BasicInteraction.Behaviors.UnsnapBehavior.EntityData.html": {
    "href": "api/VRBuilder.BasicInteraction.Behaviors.UnsnapBehavior.EntityData.html",
    "title": "Class UnsnapBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class UnsnapBehavior.EntityData Inheritance System.Object UnsnapBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.BasicInteraction.Behaviors Assembly : VRBuilder.BasicInteraction.dll Syntax [DisplayName(\"Unsnap\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String TargetObject Declaration [DisplayName(\"Object to unsnap\")] public SingleScenePropertyReference<ISnappableProperty> TargetObject { get; set; } Property Value Type Description SingleScenePropertyReference < ISnappableProperty > TargetSnapZone Declaration [DisplayName(\"Snap zone to unsnap\")] public SingleScenePropertyReference<ISnapZoneProperty> TargetSnapZone { get; set; } Property Value Type Description SingleScenePropertyReference < ISnapZoneProperty > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.BasicInteraction.Behaviors.UnsnapBehavior.html": {
    "href": "api/VRBuilder.BasicInteraction.Behaviors.UnsnapBehavior.html",
    "title": "Class UnsnapBehavior | VR Builder Documentation",
    "keywords": "Class UnsnapBehavior Inheritance System.Object Entity < UnsnapBehavior.EntityData > Behavior < UnsnapBehavior.EntityData > UnsnapBehavior Implements IDataOwner < UnsnapBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<UnsnapBehavior.EntityData>.Clone() Behavior<UnsnapBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<UnsnapBehavior.EntityData>.GetActiveProcess() Entity<UnsnapBehavior.EntityData>.GetDeactivatingProcess() Entity<UnsnapBehavior.EntityData>.GetAbortingProcess() Entity<UnsnapBehavior.EntityData>.GetConfigurator() Entity<UnsnapBehavior.EntityData>.Configure(IMode) Entity<UnsnapBehavior.EntityData>.Update() Entity<UnsnapBehavior.EntityData>.Data Entity<UnsnapBehavior.EntityData>.IDataOwner.Data Entity<UnsnapBehavior.EntityData>.LifeCycle Entity<UnsnapBehavior.EntityData>.Parent Namespace : VRBuilder.BasicInteraction.Behaviors Assembly : VRBuilder.BasicInteraction.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-behaviors/unsnap-object\")] public class UnsnapBehavior : Behavior<UnsnapBehavior.EntityData>, IDataOwner<UnsnapBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors UnsnapBehavior() Declaration public UnsnapBehavior() UnsnapBehavior(Guid, Guid) Declaration public UnsnapBehavior(Guid snappedObjectId, Guid snapZoneId) Parameters Type Name Description System.Guid snappedObjectId System.Guid snapZoneId UnsnapBehavior(ISnappableProperty, ISnapZoneProperty) Declaration public UnsnapBehavior(ISnappableProperty snappedObject, ISnapZoneProperty snapZone) Parameters Type Name Description ISnappableProperty snappedObject ISnapZoneProperty snapZone Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Behaviors.UnsnapBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.BasicInteraction.Conditions.GrabbedCondition.EntityData.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.GrabbedCondition.EntityData.html",
    "title": "Class GrabbedCondition.EntityData | VR Builder Documentation",
    "keywords": "Class GrabbedCondition.EntityData Inheritance System.Object GrabbedCondition.EntityData Implements IConditionData ICompletableData INamedData IData Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DisplayName(\"Grab Object\")] public class EntityData : Object, IConditionData, ICompletableData, INamedData, IData Constructors EntityData() Declaration public EntityData() Fields KeepUnlocked Declaration [DisplayName(\"Keep objects grabbable after step\")] public bool KeepUnlocked Field Value Type Description System.Boolean Properties IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration [HideInProcessInspector] public string Name { get; } Property Value Type Description System.String Targets Declaration [DisplayName(\"Grabbable objects\")] public MultipleScenePropertyReference<IGrabbableProperty> Targets { get; set; } Property Value Type Description MultipleScenePropertyReference < IGrabbableProperty > Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.BasicInteraction.Conditions.GrabbedCondition.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.GrabbedCondition.html",
    "title": "Class GrabbedCondition | VR Builder Documentation",
    "keywords": "Class GrabbedCondition Inheritance System.Object Entity < GrabbedCondition.EntityData > CompletableEntity < GrabbedCondition.EntityData > Condition < GrabbedCondition.EntityData > GrabbedCondition Implements IDataOwner < GrabbedCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<GrabbedCondition.EntityData>.Clone() Condition<GrabbedCondition.EntityData>.IDataOwner<IConditionData>.Data CompletableEntity<GrabbedCondition.EntityData>.Autocomplete() CompletableEntity<GrabbedCondition.EntityData>.IsCompleted Entity<GrabbedCondition.EntityData>.GetActivatingProcess() Entity<GrabbedCondition.EntityData>.GetDeactivatingProcess() Entity<GrabbedCondition.EntityData>.GetAbortingProcess() Entity<GrabbedCondition.EntityData>.GetConfigurator() Entity<GrabbedCondition.EntityData>.Configure(IMode) Entity<GrabbedCondition.EntityData>.Update() Entity<GrabbedCondition.EntityData>.Data Entity<GrabbedCondition.EntityData>.IDataOwner.Data Entity<GrabbedCondition.EntityData>.LifeCycle Entity<GrabbedCondition.EntityData>.Parent Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax public class GrabbedCondition : Condition<GrabbedCondition.EntityData>, IDataOwner<GrabbedCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors GrabbedCondition() Declaration public GrabbedCondition() GrabbedCondition(Guid) Declaration public GrabbedCondition(Guid guid) Parameters Type Name Description System.Guid guid Methods GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.GrabbedCondition.EntityData>.GetActiveProcess() GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.GrabbedCondition.EntityData>.GetAutocompleter() GetLockableProperties() Declaration public override IEnumerable<LockablePropertyData> GetLockableProperties() Returns Type Description System.Collections.Generic.IEnumerable < LockablePropertyData > Overrides VRBuilder.Core.Conditions.Condition<VRBuilder.BasicInteraction.Conditions.GrabbedCondition.EntityData>.GetLockableProperties() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.BasicInteraction.Conditions.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.html",
    "title": "Namespace VRBuilder.BasicInteraction.Conditions | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.BasicInteraction.Conditions Classes GrabbedCondition GrabbedCondition.EntityData LinearControlsCondition<TProperty> LinearControlsCondition<TProperty>.EntityData MomentaryControlsCondition<TProperty> MomentaryControlsCondition<TProperty>.EntityData ReleasedCondition ReleasedCondition.EntityData SnappedCondition SnappedCondition.EntityData TeleportCondition TeleportCondition.EntityData ToggleControlsCondition<TProperty> ToggleControlsCondition<TProperty>.EntityData TouchedCondition TouchedCondition.EntityData UsedCondition UsedCondition.EntityData"
  },
  "api/VRBuilder.BasicInteraction.Conditions.LinearControlsCondition-1.EntityData.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.LinearControlsCondition-1.EntityData.html",
    "title": "Class LinearControlsCondition<TProperty>.EntityData | VR Builder Documentation",
    "keywords": "Class LinearControlsCondition<TProperty>.EntityData Inheritance System.Object LinearControlsCondition<TProperty>.EntityData Implements IConditionData ICompletableData INamedData IData Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DisplayName(\"Check Control Position\")] public class EntityData : Object, IConditionData, ICompletableData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean LinearControls Declaration [DisplayName(\"Controls\")] public MultipleScenePropertyReference<TProperty> LinearControls { get; set; } Property Value Type Description MultipleScenePropertyReference <TProperty> MaxPosition Declaration [DisplayName(\"Max position\")] public float MaxPosition { get; set; } Property Value Type Description System.Single Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata MinPosition Declaration [DisplayName(\"Min position\")] public float MinPosition { get; set; } Property Value Type Description System.Single Name Declaration [HideInProcessInspector] public string Name { get; } Property Value Type Description System.String RequireRelease Declaration [DisplayName(\"Require release\")] public bool RequireRelease { get; set; } Property Value Type Description System.Boolean SetAllControls Declaration [DisplayName(\"Set all controls\")] public bool SetAllControls { get; set; } Property Value Type Description System.Boolean Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.BasicInteraction.Conditions.LinearControlsCondition-1.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.LinearControlsCondition-1.html",
    "title": "Class LinearControlsCondition<TProperty> | VR Builder Documentation",
    "keywords": "Class LinearControlsCondition<TProperty> Inheritance System.Object Entity < LinearControlsCondition.EntityData <>> CompletableEntity < LinearControlsCondition.EntityData <>> Condition < LinearControlsCondition.EntityData <>> LinearControlsCondition<TProperty> Implements IDataOwner < LinearControlsCondition.EntityData <>> ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<LinearControlsCondition<TProperty>.EntityData>.Clone() Condition<LinearControlsCondition<TProperty>.EntityData>.GetLockableProperties() Condition<LinearControlsCondition<TProperty>.EntityData>.IDataOwner<IConditionData>.Data CompletableEntity<LinearControlsCondition<TProperty>.EntityData>.Autocomplete() CompletableEntity<LinearControlsCondition<TProperty>.EntityData>.IsCompleted Entity<LinearControlsCondition<TProperty>.EntityData>.GetActivatingProcess() Entity<LinearControlsCondition<TProperty>.EntityData>.GetDeactivatingProcess() Entity<LinearControlsCondition<TProperty>.EntityData>.GetAbortingProcess() Entity<LinearControlsCondition<TProperty>.EntityData>.GetConfigurator() Entity<LinearControlsCondition<TProperty>.EntityData>.Configure(IMode) Entity<LinearControlsCondition<TProperty>.EntityData>.Update() Entity<LinearControlsCondition<TProperty>.EntityData>.Data Entity<LinearControlsCondition<TProperty>.EntityData>.IDataOwner.Data Entity<LinearControlsCondition<TProperty>.EntityData>.LifeCycle Entity<LinearControlsCondition<TProperty>.EntityData>.Parent Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax public class LinearControlsCondition<TProperty> : Condition<LinearControlsCondition<TProperty>.EntityData>, IDataOwner<LinearControlsCondition<TProperty>.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider where TProperty : class, ISettableControlProperty<float> Type Parameters Name Description TProperty Constructors LinearControlsCondition() Declaration public LinearControlsCondition() LinearControlsCondition(Guid, Single, Single, Boolean) Declaration public LinearControlsCondition(Guid control, float minPosition = 0F, float maxPosition = 1F, bool requireRelease = false) Parameters Type Name Description System.Guid control System.Single minPosition System.Single maxPosition System.Boolean requireRelease LinearControlsCondition(ISettableControlProperty<Single>, Single, Single, Boolean) Declaration public LinearControlsCondition(ISettableControlProperty<float> control, float minPosition, float maxPosition, bool requireRelease = false) Parameters Type Name Description ISettableControlProperty < System.Single > control System.Single minPosition System.Single maxPosition System.Boolean requireRelease Methods GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.LinearControlsCondition<TProperty>.EntityData>.GetActiveProcess() GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.LinearControlsCondition<TProperty>.EntityData>.GetAutocompleter() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.BasicInteraction.Conditions.MomentaryControlsCondition-1.EntityData.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.MomentaryControlsCondition-1.EntityData.html",
    "title": "Class MomentaryControlsCondition<TProperty>.EntityData | VR Builder Documentation",
    "keywords": "Class MomentaryControlsCondition<TProperty>.EntityData Inheritance System.Object MomentaryControlsCondition<TProperty>.EntityData Implements IConditionData ICompletableData INamedData IData Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DisplayName(\"Check Control Position\")] public class EntityData : Object, IConditionData, ICompletableData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata MomentaryControls Declaration [DisplayName(\"Controls\")] public MultipleScenePropertyReference<TProperty> MomentaryControls { get; set; } Property Value Type Description MultipleScenePropertyReference <TProperty> Name Declaration [HideInProcessInspector] public string Name { get; } Property Value Type Description System.String TriggerAllControls Declaration [DisplayName(\"Trigger all controls\")] public bool TriggerAllControls { get; set; } Property Value Type Description System.Boolean TriggerOnRelease Declaration [DisplayName(\"Trigger on release\")] public bool TriggerOnRelease { get; set; } Property Value Type Description System.Boolean Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.BasicInteraction.Conditions.MomentaryControlsCondition-1.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.MomentaryControlsCondition-1.html",
    "title": "Class MomentaryControlsCondition<TProperty> | VR Builder Documentation",
    "keywords": "Class MomentaryControlsCondition<TProperty> Inheritance System.Object Entity < MomentaryControlsCondition.EntityData <>> CompletableEntity < MomentaryControlsCondition.EntityData <>> Condition < MomentaryControlsCondition.EntityData <>> MomentaryControlsCondition<TProperty> Implements IDataOwner < MomentaryControlsCondition.EntityData <>> ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<MomentaryControlsCondition<TProperty>.EntityData>.Clone() Condition<MomentaryControlsCondition<TProperty>.EntityData>.GetLockableProperties() Condition<MomentaryControlsCondition<TProperty>.EntityData>.IDataOwner<IConditionData>.Data CompletableEntity<MomentaryControlsCondition<TProperty>.EntityData>.Autocomplete() CompletableEntity<MomentaryControlsCondition<TProperty>.EntityData>.IsCompleted Entity<MomentaryControlsCondition<TProperty>.EntityData>.GetActivatingProcess() Entity<MomentaryControlsCondition<TProperty>.EntityData>.GetDeactivatingProcess() Entity<MomentaryControlsCondition<TProperty>.EntityData>.GetAbortingProcess() Entity<MomentaryControlsCondition<TProperty>.EntityData>.GetConfigurator() Entity<MomentaryControlsCondition<TProperty>.EntityData>.Configure(IMode) Entity<MomentaryControlsCondition<TProperty>.EntityData>.Update() Entity<MomentaryControlsCondition<TProperty>.EntityData>.Data Entity<MomentaryControlsCondition<TProperty>.EntityData>.IDataOwner.Data Entity<MomentaryControlsCondition<TProperty>.EntityData>.LifeCycle Entity<MomentaryControlsCondition<TProperty>.EntityData>.Parent Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax public class MomentaryControlsCondition<TProperty> : Condition<MomentaryControlsCondition<TProperty>.EntityData>, IDataOwner<MomentaryControlsCondition<TProperty>.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider where TProperty : class, IMomentaryControlProperty Type Parameters Name Description TProperty Constructors MomentaryControlsCondition() Declaration public MomentaryControlsCondition() Methods GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.MomentaryControlsCondition<TProperty>.EntityData>.GetActiveProcess() GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.MomentaryControlsCondition<TProperty>.EntityData>.GetAutocompleter() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.BasicInteraction.Conditions.ReleasedCondition.EntityData.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.ReleasedCondition.EntityData.html",
    "title": "Class ReleasedCondition.EntityData | VR Builder Documentation",
    "keywords": "Class ReleasedCondition.EntityData Inheritance System.Object ReleasedCondition.EntityData Implements IConditionData ICompletableData INamedData IData Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DisplayName(\"Release Object\")] public class EntityData : Object, IConditionData, ICompletableData, INamedData, IData Constructors EntityData() Declaration public EntityData() Fields KeepUnlocked Declaration [DisplayName(\"Keep objects grabbable after step\")] public bool KeepUnlocked Field Value Type Description System.Boolean Properties GrabbableProperties Declaration [DisplayName(\"Grabbable objects\")] public MultipleScenePropertyReference<IGrabbableProperty> GrabbableProperties { get; set; } Property Value Type Description MultipleScenePropertyReference < IGrabbableProperty > IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration [HideInProcessInspector] public string Name { get; } Property Value Type Description System.String Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.BasicInteraction.Conditions.ReleasedCondition.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.ReleasedCondition.html",
    "title": "Class ReleasedCondition | VR Builder Documentation",
    "keywords": "Class ReleasedCondition Inheritance System.Object Entity < ReleasedCondition.EntityData > CompletableEntity < ReleasedCondition.EntityData > Condition < ReleasedCondition.EntityData > ReleasedCondition Implements IDataOwner < ReleasedCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<ReleasedCondition.EntityData>.Clone() Condition<ReleasedCondition.EntityData>.IDataOwner<IConditionData>.Data CompletableEntity<ReleasedCondition.EntityData>.Autocomplete() CompletableEntity<ReleasedCondition.EntityData>.IsCompleted Entity<ReleasedCondition.EntityData>.GetActivatingProcess() Entity<ReleasedCondition.EntityData>.GetDeactivatingProcess() Entity<ReleasedCondition.EntityData>.GetAbortingProcess() Entity<ReleasedCondition.EntityData>.GetConfigurator() Entity<ReleasedCondition.EntityData>.Configure(IMode) Entity<ReleasedCondition.EntityData>.Update() Entity<ReleasedCondition.EntityData>.Data Entity<ReleasedCondition.EntityData>.IDataOwner.Data Entity<ReleasedCondition.EntityData>.LifeCycle Entity<ReleasedCondition.EntityData>.Parent Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-conditions/release-object\")] public class ReleasedCondition : Condition<ReleasedCondition.EntityData>, IDataOwner<ReleasedCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors ReleasedCondition() Declaration public ReleasedCondition() ReleasedCondition(Guid) Declaration public ReleasedCondition(Guid uniqueId) Parameters Type Name Description System.Guid uniqueId ReleasedCondition(IGrabbableProperty) Declaration public ReleasedCondition(IGrabbableProperty target) Parameters Type Name Description IGrabbableProperty target Methods GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.ReleasedCondition.EntityData>.GetActiveProcess() GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.ReleasedCondition.EntityData>.GetAutocompleter() GetLockableProperties() Declaration public override IEnumerable<LockablePropertyData> GetLockableProperties() Returns Type Description System.Collections.Generic.IEnumerable < LockablePropertyData > Overrides VRBuilder.Core.Conditions.Condition<VRBuilder.BasicInteraction.Conditions.ReleasedCondition.EntityData>.GetLockableProperties() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.BasicInteraction.Conditions.SnappedCondition.EntityData.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.SnappedCondition.EntityData.html",
    "title": "Class SnappedCondition.EntityData | VR Builder Documentation",
    "keywords": "Class SnappedCondition.EntityData Inheritance System.Object SnappedCondition.EntityData Implements IConditionData ICompletableData INamedData IData Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DisplayName(\"Snap Object\")] public class EntityData : Object, IConditionData, ICompletableData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration [HideInProcessInspector] public string Name { get; } Property Value Type Description System.String TargetObjects Declaration [DisplayName(\"Snappable Objects\")] public MultipleScenePropertyReference<ISnappableProperty> TargetObjects { get; set; } Property Value Type Description MultipleScenePropertyReference < ISnappableProperty > TargetSnapZone Declaration [DisplayName(\"Zone to snap into\")] public SingleScenePropertyReference<ISnapZoneProperty> TargetSnapZone { get; set; } Property Value Type Description SingleScenePropertyReference < ISnapZoneProperty > Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.BasicInteraction.Conditions.SnappedCondition.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.SnappedCondition.html",
    "title": "Class SnappedCondition | VR Builder Documentation",
    "keywords": "Class SnappedCondition Inheritance System.Object Entity < SnappedCondition.EntityData > CompletableEntity < SnappedCondition.EntityData > Condition < SnappedCondition.EntityData > SnappedCondition Implements IDataOwner < SnappedCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<SnappedCondition.EntityData>.Clone() Condition<SnappedCondition.EntityData>.GetLockableProperties() Condition<SnappedCondition.EntityData>.IDataOwner<IConditionData>.Data CompletableEntity<SnappedCondition.EntityData>.Autocomplete() CompletableEntity<SnappedCondition.EntityData>.IsCompleted Entity<SnappedCondition.EntityData>.GetActivatingProcess() Entity<SnappedCondition.EntityData>.GetDeactivatingProcess() Entity<SnappedCondition.EntityData>.GetAbortingProcess() Entity<SnappedCondition.EntityData>.Configure(IMode) Entity<SnappedCondition.EntityData>.Update() Entity<SnappedCondition.EntityData>.Data Entity<SnappedCondition.EntityData>.IDataOwner.Data Entity<SnappedCondition.EntityData>.LifeCycle Entity<SnappedCondition.EntityData>.Parent Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-conditions/snap-object\")] public class SnappedCondition : Condition<SnappedCondition.EntityData>, IDataOwner<SnappedCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors SnappedCondition() Declaration public SnappedCondition() SnappedCondition(Guid, Guid) Declaration public SnappedCondition(Guid targets, Guid snapZone) Parameters Type Name Description System.Guid targets System.Guid snapZone SnappedCondition(ISnappableProperty, ISnapZoneProperty) Declaration public SnappedCondition(ISnappableProperty target, ISnapZoneProperty snapZone) Parameters Type Name Description ISnappableProperty target ISnapZoneProperty snapZone Methods GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.SnappedCondition.EntityData>.GetActiveProcess() GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.SnappedCondition.EntityData>.GetAutocompleter() GetConfigurator() Declaration protected override IConfigurator GetConfigurator() Returns Type Description IConfigurator Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.SnappedCondition.EntityData>.GetConfigurator() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.BasicInteraction.Conditions.TeleportCondition.EntityData.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.TeleportCondition.EntityData.html",
    "title": "Class TeleportCondition.EntityData | VR Builder Documentation",
    "keywords": "Class TeleportCondition.EntityData Inheritance System.Object TeleportCondition.EntityData Implements IConditionData ICompletableData INamedData IData Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DisplayName(\"Teleport\")] public class EntityData : Object, IConditionData, ICompletableData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration [HideInProcessInspector] public string Name { get; } Property Value Type Description System.String TeleportationPoints Declaration [DisplayName(\"Teleportation Points\")] public MultipleScenePropertyReference<ITeleportationProperty> TeleportationPoints { get; set; } Property Value Type Description MultipleScenePropertyReference < ITeleportationProperty > Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.BasicInteraction.Conditions.TeleportCondition.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.TeleportCondition.html",
    "title": "Class TeleportCondition | VR Builder Documentation",
    "keywords": "Class TeleportCondition Inheritance System.Object Entity < TeleportCondition.EntityData > CompletableEntity < TeleportCondition.EntityData > Condition < TeleportCondition.EntityData > TeleportCondition Implements IDataOwner < TeleportCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<TeleportCondition.EntityData>.Clone() Condition<TeleportCondition.EntityData>.GetLockableProperties() Condition<TeleportCondition.EntityData>.IDataOwner<IConditionData>.Data CompletableEntity<TeleportCondition.EntityData>.Autocomplete() CompletableEntity<TeleportCondition.EntityData>.IsCompleted Entity<TeleportCondition.EntityData>.GetActivatingProcess() Entity<TeleportCondition.EntityData>.GetDeactivatingProcess() Entity<TeleportCondition.EntityData>.GetAbortingProcess() Entity<TeleportCondition.EntityData>.GetConfigurator() Entity<TeleportCondition.EntityData>.Configure(IMode) Entity<TeleportCondition.EntityData>.Update() Entity<TeleportCondition.EntityData>.Data Entity<TeleportCondition.EntityData>.IDataOwner.Data Entity<TeleportCondition.EntityData>.LifeCycle Entity<TeleportCondition.EntityData>.Parent Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-conditions/teleport\")] public class TeleportCondition : Condition<TeleportCondition.EntityData>, IDataOwner<TeleportCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors TeleportCondition() Declaration public TeleportCondition() TeleportCondition(Guid) Declaration public TeleportCondition(Guid teleportationPoint) Parameters Type Name Description System.Guid teleportationPoint TeleportCondition(ITeleportationProperty) Declaration public TeleportCondition(ITeleportationProperty teleportationPoint) Parameters Type Name Description ITeleportationProperty teleportationPoint Methods GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.TeleportCondition.EntityData>.GetActiveProcess() GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.TeleportCondition.EntityData>.GetAutocompleter() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.BasicInteraction.Conditions.ToggleControlsCondition-1.EntityData.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.ToggleControlsCondition-1.EntityData.html",
    "title": "Class ToggleControlsCondition<TProperty>.EntityData | VR Builder Documentation",
    "keywords": "Class ToggleControlsCondition<TProperty>.EntityData Inheritance System.Object ToggleControlsCondition<TProperty>.EntityData Implements IConditionData ICompletableData INamedData IData Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DisplayName(\"Check Control Position\")] public class EntityData : Object, IConditionData, ICompletableData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration [HideInProcessInspector] public string Name { get; } Property Value Type Description System.String RequireRelease Declaration [DisplayName(\"Require release\")] public bool RequireRelease { get; set; } Property Value Type Description System.Boolean SetAllControls Declaration [DisplayName(\"Set all controls\")] public bool SetAllControls { get; set; } Property Value Type Description System.Boolean TargetPosition Declaration [DisplayName(\"Target position\")] public bool TargetPosition { get; set; } Property Value Type Description System.Boolean ToggleControls Declaration [DisplayName(\"Controls\")] public MultipleScenePropertyReference<TProperty> ToggleControls { get; set; } Property Value Type Description MultipleScenePropertyReference <TProperty> Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.BasicInteraction.Conditions.ToggleControlsCondition-1.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.ToggleControlsCondition-1.html",
    "title": "Class ToggleControlsCondition<TProperty> | VR Builder Documentation",
    "keywords": "Class ToggleControlsCondition<TProperty> Inheritance System.Object Entity < ToggleControlsCondition.EntityData <>> CompletableEntity < ToggleControlsCondition.EntityData <>> Condition < ToggleControlsCondition.EntityData <>> ToggleControlsCondition<TProperty> Implements IDataOwner < ToggleControlsCondition.EntityData <>> ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<ToggleControlsCondition<TProperty>.EntityData>.Clone() Condition<ToggleControlsCondition<TProperty>.EntityData>.GetLockableProperties() Condition<ToggleControlsCondition<TProperty>.EntityData>.IDataOwner<IConditionData>.Data CompletableEntity<ToggleControlsCondition<TProperty>.EntityData>.Autocomplete() CompletableEntity<ToggleControlsCondition<TProperty>.EntityData>.IsCompleted Entity<ToggleControlsCondition<TProperty>.EntityData>.GetActivatingProcess() Entity<ToggleControlsCondition<TProperty>.EntityData>.GetDeactivatingProcess() Entity<ToggleControlsCondition<TProperty>.EntityData>.GetAbortingProcess() Entity<ToggleControlsCondition<TProperty>.EntityData>.GetConfigurator() Entity<ToggleControlsCondition<TProperty>.EntityData>.Configure(IMode) Entity<ToggleControlsCondition<TProperty>.EntityData>.Update() Entity<ToggleControlsCondition<TProperty>.EntityData>.Data Entity<ToggleControlsCondition<TProperty>.EntityData>.IDataOwner.Data Entity<ToggleControlsCondition<TProperty>.EntityData>.LifeCycle Entity<ToggleControlsCondition<TProperty>.EntityData>.Parent Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax public class ToggleControlsCondition<TProperty> : Condition<ToggleControlsCondition<TProperty>.EntityData>, IDataOwner<ToggleControlsCondition<TProperty>.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider where TProperty : class, ISettableControlProperty<bool> Type Parameters Name Description TProperty Constructors ToggleControlsCondition() Declaration public ToggleControlsCondition() ToggleControlsCondition(Guid, Boolean, Boolean) Declaration public ToggleControlsCondition(Guid control, bool targetPosition = false, bool requireRelease = false) Parameters Type Name Description System.Guid control System.Boolean targetPosition System.Boolean requireRelease ToggleControlsCondition(ISettableControlProperty<Single>, Boolean, Boolean) Declaration public ToggleControlsCondition(ISettableControlProperty<float> control, bool targetPosition, bool requireRelease = false) Parameters Type Name Description ISettableControlProperty < System.Single > control System.Boolean targetPosition System.Boolean requireRelease Methods GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.ToggleControlsCondition<TProperty>.EntityData>.GetActiveProcess() GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.ToggleControlsCondition<TProperty>.EntityData>.GetAutocompleter() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData.html",
    "title": "Class TouchedCondition.EntityData | VR Builder Documentation",
    "keywords": "Class TouchedCondition.EntityData Inheritance System.Object TouchedCondition.EntityData Implements IConditionData ICompletableData INamedData IData Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DisplayName(\"Touch Object\")] public class EntityData : Object, IConditionData, ICompletableData, INamedData, IData Constructors EntityData() Declaration public EntityData() Fields MustTouchAllObjects Declaration [DisplayName(\"All Objects required to be touched\")] public bool MustTouchAllObjects Field Value Type Description System.Boolean Properties IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration [HideInProcessInspector] public string Name { get; } Property Value Type Description System.String TouchableProperties Declaration [DisplayName(\"Touchable objects\")] public MultipleScenePropertyReference<ITouchableProperty> TouchableProperties { get; set; } Property Value Type Description MultipleScenePropertyReference < ITouchableProperty > Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.BasicInteraction.Conditions.TouchedCondition.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.TouchedCondition.html",
    "title": "Class TouchedCondition | VR Builder Documentation",
    "keywords": "Class TouchedCondition Inheritance System.Object Entity < TouchedCondition.EntityData > CompletableEntity < TouchedCondition.EntityData > Condition < TouchedCondition.EntityData > TouchedCondition Implements IDataOwner < TouchedCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<TouchedCondition.EntityData>.Clone() Condition<TouchedCondition.EntityData>.GetLockableProperties() Condition<TouchedCondition.EntityData>.IDataOwner<IConditionData>.Data CompletableEntity<TouchedCondition.EntityData>.Autocomplete() CompletableEntity<TouchedCondition.EntityData>.IsCompleted Entity<TouchedCondition.EntityData>.GetActivatingProcess() Entity<TouchedCondition.EntityData>.GetDeactivatingProcess() Entity<TouchedCondition.EntityData>.GetAbortingProcess() Entity<TouchedCondition.EntityData>.GetConfigurator() Entity<TouchedCondition.EntityData>.Configure(IMode) Entity<TouchedCondition.EntityData>.Update() Entity<TouchedCondition.EntityData>.Data Entity<TouchedCondition.EntityData>.IDataOwner.Data Entity<TouchedCondition.EntityData>.LifeCycle Entity<TouchedCondition.EntityData>.Parent Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-conditions/touch-object\")] public class TouchedCondition : Condition<TouchedCondition.EntityData>, IDataOwner<TouchedCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors TouchedCondition() Declaration public TouchedCondition() TouchedCondition(Guid) Declaration public TouchedCondition(Guid uniqueId) Parameters Type Name Description System.Guid uniqueId TouchedCondition(ITouchableProperty) Declaration public TouchedCondition(ITouchableProperty target) Parameters Type Name Description ITouchableProperty target Methods GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData>.GetActiveProcess() GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.TouchedCondition.EntityData>.GetAutocompleter() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.BasicInteraction.Conditions.UsedCondition.EntityData.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.UsedCondition.EntityData.html",
    "title": "Class UsedCondition.EntityData | VR Builder Documentation",
    "keywords": "Class UsedCondition.EntityData Inheritance System.Object UsedCondition.EntityData Implements IConditionData ICompletableData INamedData IData Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [DisplayName(\"Use Object\")] public class EntityData : Object, IConditionData, ICompletableData, INamedData, IData Constructors EntityData() Declaration public EntityData() Fields MustUseAllObjects Declaration [DisplayName(\"All Objects required to be used\")] public bool MustUseAllObjects Field Value Type Description System.Boolean Properties IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration [HideInProcessInspector] public string Name { get; } Property Value Type Description System.String UsableObjects Declaration [DisplayName(\"Objects\")] public MultipleScenePropertyReference<IUsableProperty> UsableObjects { get; set; } Property Value Type Description MultipleScenePropertyReference < IUsableProperty > Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.BasicInteraction.Conditions.UsedCondition.html": {
    "href": "api/VRBuilder.BasicInteraction.Conditions.UsedCondition.html",
    "title": "Class UsedCondition | VR Builder Documentation",
    "keywords": "Class UsedCondition Inheritance System.Object Entity < UsedCondition.EntityData > CompletableEntity < UsedCondition.EntityData > Condition < UsedCondition.EntityData > UsedCondition Implements IDataOwner < UsedCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<UsedCondition.EntityData>.Clone() Condition<UsedCondition.EntityData>.IDataOwner<IConditionData>.Data CompletableEntity<UsedCondition.EntityData>.Autocomplete() CompletableEntity<UsedCondition.EntityData>.IsCompleted Entity<UsedCondition.EntityData>.GetActivatingProcess() Entity<UsedCondition.EntityData>.GetDeactivatingProcess() Entity<UsedCondition.EntityData>.GetAbortingProcess() Entity<UsedCondition.EntityData>.GetConfigurator() Entity<UsedCondition.EntityData>.Configure(IMode) Entity<UsedCondition.EntityData>.Update() Entity<UsedCondition.EntityData>.Data Entity<UsedCondition.EntityData>.IDataOwner.Data Entity<UsedCondition.EntityData>.LifeCycle Entity<UsedCondition.EntityData>.Parent Namespace : VRBuilder.BasicInteraction.Conditions Assembly : VRBuilder.BasicInteraction.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-conditions/use-object\")] public class UsedCondition : Condition<UsedCondition.EntityData>, IDataOwner<UsedCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors UsedCondition() Declaration public UsedCondition() UsedCondition(Guid) Declaration public UsedCondition(Guid target) Parameters Type Name Description System.Guid target UsedCondition(IUsableProperty) Declaration public UsedCondition(IUsableProperty target) Parameters Type Name Description IUsableProperty target Methods GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.BasicInteraction.Conditions.UsedCondition.EntityData>.GetActiveProcess() GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.BasicInteraction.Conditions.UsedCondition.EntityData>.GetAutocompleter() GetLockableProperties() Declaration public override IEnumerable<LockablePropertyData> GetLockableProperties() Returns Type Description System.Collections.Generic.IEnumerable < LockablePropertyData > Overrides VRBuilder.Core.Conditions.Condition<VRBuilder.BasicInteraction.Conditions.UsedCondition.EntityData>.GetLockableProperties() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.BasicInteraction.Editor.Setup.DefaultRigSceneSetup.html": {
    "href": "api/VRBuilder.BasicInteraction.Editor.Setup.DefaultRigSceneSetup.html",
    "title": "Class DefaultRigSceneSetup | VR Builder Documentation",
    "keywords": "Class DefaultRigSceneSetup Inheritance System.Object SceneSetup DefaultRigSceneSetup Inherited Members SceneSetup.SetupPrefab(String, String) SceneSetup.SetPrefabParent(GameObject, String) SceneSetup.FindPrefab(String) SceneSetup.IsPrefabMissingInScene(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Editor.Setup Assembly : VRBuilder.BasicInteraction.Editor.dll Syntax public class DefaultRigSceneSetup : SceneSetup Constructors DefaultRigSceneSetup() Declaration public DefaultRigSceneSetup() Properties Key Declaration public override string Key { get; } Property Value Type Description System.String Overrides SceneSetup.Key Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides SceneSetup.Priority Methods Setup(ISceneSetupConfiguration) Declaration public override void Setup(ISceneSetupConfiguration configuration) Parameters Type Name Description ISceneSetupConfiguration configuration Overrides SceneSetup.Setup(ISceneSetupConfiguration)"
  },
  "api/VRBuilder.BasicInteraction.Editor.Setup.html": {
    "href": "api/VRBuilder.BasicInteraction.Editor.Setup.html",
    "title": "Namespace VRBuilder.BasicInteraction.Editor.Setup | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.BasicInteraction.Editor.Setup Classes DefaultRigSceneSetup InteractionFrameworkSceneSetup RigLoaderSceneSetup"
  },
  "api/VRBuilder.BasicInteraction.Editor.Setup.InteractionFrameworkSceneSetup.html": {
    "href": "api/VRBuilder.BasicInteraction.Editor.Setup.InteractionFrameworkSceneSetup.html",
    "title": "Class InteractionFrameworkSceneSetup | VR Builder Documentation",
    "keywords": "Class InteractionFrameworkSceneSetup Inheritance System.Object SceneSetup InteractionFrameworkSceneSetup Inherited Members SceneSetup.Setup(ISceneSetupConfiguration) SceneSetup.SetupPrefab(String, String) SceneSetup.SetPrefabParent(GameObject, String) SceneSetup.FindPrefab(String) SceneSetup.IsPrefabMissingInScene(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Editor.Setup Assembly : VRBuilder.BasicInteraction.Editor.dll Syntax public abstract class InteractionFrameworkSceneSetup : SceneSetup Constructors InteractionFrameworkSceneSetup() Declaration protected InteractionFrameworkSceneSetup() Properties Key Declaration public override string Key { get; } Property Value Type Description System.String Overrides SceneSetup.Key Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides SceneSetup.Priority Methods RemoveMainCamera() Declaration protected void RemoveMainCamera()"
  },
  "api/VRBuilder.BasicInteraction.Editor.Setup.RigLoaderSceneSetup.html": {
    "href": "api/VRBuilder.BasicInteraction.Editor.Setup.RigLoaderSceneSetup.html",
    "title": "Class RigLoaderSceneSetup | VR Builder Documentation",
    "keywords": "Class RigLoaderSceneSetup Inheritance System.Object SceneSetup RigLoaderSceneSetup Inherited Members SceneSetup.SetupPrefab(String, String) SceneSetup.SetPrefabParent(GameObject, String) SceneSetup.FindPrefab(String) SceneSetup.IsPrefabMissingInScene(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Editor.Setup Assembly : VRBuilder.BasicInteraction.Editor.dll Syntax public class RigLoaderSceneSetup : SceneSetup Constructors RigLoaderSceneSetup() Declaration public RigLoaderSceneSetup() Properties Key Declaration public override string Key { get; } Property Value Type Description System.String Overrides SceneSetup.Key Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides SceneSetup.Priority Methods Setup(ISceneSetupConfiguration) Declaration public override void Setup(ISceneSetupConfiguration configuration) Parameters Type Name Description ISceneSetupConfiguration configuration Overrides SceneSetup.Setup(ISceneSetupConfiguration)"
  },
  "api/VRBuilder.BasicInteraction.Editor.UI.Inspector.HasGuidValidationEditor.html": {
    "href": "api/VRBuilder.BasicInteraction.Editor.UI.Inspector.HasGuidValidationEditor.html",
    "title": "Class HasGuidValidationEditor | VR Builder Documentation",
    "keywords": "Class HasGuidValidationEditor Inheritance System.Object HasGuidValidationEditor Namespace : VRBuilder.BasicInteraction.Editor.UI.Inspector Assembly : VRBuilder.BasicInteraction.Editor.dll Syntax public class HasGuidValidationEditor : Editor Constructors HasGuidValidationEditor() Declaration public HasGuidValidationEditor() Fields dropBoxStyle Declaration protected GUIStyle dropBoxStyle Field Value Type Description UnityEngine.GUIStyle richTextLabelStyle Declaration protected GUIStyle richTextLabelStyle Field Value Type Description UnityEngine.GUIStyle Methods DropAreaGUI(Action<GameObject>) Declaration protected void DropAreaGUI(Action<GameObject> dropAction) Parameters Type Name Description System.Action < UnityEngine.GameObject > dropAction OnInspectorGUI() Declaration public override void OnInspectorGUI() OpenMissingProcessSceneObjectDialog(GameObject) Declaration protected Guid OpenMissingProcessSceneObjectDialog(GameObject selectedSceneObject) Parameters Type Name Description UnityEngine.GameObject selectedSceneObject Returns Type Description System.Guid"
  },
  "api/VRBuilder.BasicInteraction.Editor.UI.Inspector.html": {
    "href": "api/VRBuilder.BasicInteraction.Editor.UI.Inspector.html",
    "title": "Namespace VRBuilder.BasicInteraction.Editor.UI.Inspector | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.BasicInteraction.Editor.UI.Inspector Classes HasGuidValidationEditor IsObjectWithTagValidationEditor"
  },
  "api/VRBuilder.BasicInteraction.Editor.UI.Inspector.IsObjectWithTagValidationEditor.html": {
    "href": "api/VRBuilder.BasicInteraction.Editor.UI.Inspector.IsObjectWithTagValidationEditor.html",
    "title": "Class IsObjectWithTagValidationEditor | VR Builder Documentation",
    "keywords": "Class IsObjectWithTagValidationEditor Inheritance System.Object IsObjectWithTagValidationEditor Namespace : VRBuilder.BasicInteraction.Editor.UI.Inspector Assembly : VRBuilder.BasicInteraction.Editor.dll Syntax public class IsObjectWithTagValidationEditor : Editor Constructors IsObjectWithTagValidationEditor() Declaration public IsObjectWithTagValidationEditor() Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/VRBuilder.BasicInteraction.Editor.UI.MenuItems.GrabbedMenuItem.html": {
    "href": "api/VRBuilder.BasicInteraction.Editor.UI.MenuItems.GrabbedMenuItem.html",
    "title": "Class GrabbedMenuItem | VR Builder Documentation",
    "keywords": "Class GrabbedMenuItem Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > GrabbedMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Editor.UI.MenuItems Assembly : VRBuilder.BasicInteraction.Editor.dll Syntax public class GrabbedMenuItem : MenuItem<ICondition> Constructors GrabbedMenuItem() Declaration public GrabbedMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods GetNewItem() Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.BasicInteraction.Editor.UI.MenuItems.html": {
    "href": "api/VRBuilder.BasicInteraction.Editor.UI.MenuItems.html",
    "title": "Namespace VRBuilder.BasicInteraction.Editor.UI.MenuItems | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.BasicInteraction.Editor.UI.MenuItems Classes GrabbedMenuItem ReleasedMenuItem SnappedMenuItem TeleportMenuItem TouchedMenuItem UnsnapMenuItem UsedMenuItem"
  },
  "api/VRBuilder.BasicInteraction.Editor.UI.MenuItems.ReleasedMenuItem.html": {
    "href": "api/VRBuilder.BasicInteraction.Editor.UI.MenuItems.ReleasedMenuItem.html",
    "title": "Class ReleasedMenuItem | VR Builder Documentation",
    "keywords": "Class ReleasedMenuItem Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > ReleasedMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Editor.UI.MenuItems Assembly : VRBuilder.BasicInteraction.Editor.dll Syntax public class ReleasedMenuItem : MenuItem<ICondition> Constructors ReleasedMenuItem() Declaration public ReleasedMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods GetNewItem() Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.BasicInteraction.Editor.UI.MenuItems.SnappedMenuItem.html": {
    "href": "api/VRBuilder.BasicInteraction.Editor.UI.MenuItems.SnappedMenuItem.html",
    "title": "Class SnappedMenuItem | VR Builder Documentation",
    "keywords": "Class SnappedMenuItem Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > SnappedMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Editor.UI.MenuItems Assembly : VRBuilder.BasicInteraction.Editor.dll Syntax public class SnappedMenuItem : MenuItem<ICondition> Constructors SnappedMenuItem() Declaration public SnappedMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods GetNewItem() Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.BasicInteraction.Editor.UI.MenuItems.TeleportMenuItem.html": {
    "href": "api/VRBuilder.BasicInteraction.Editor.UI.MenuItems.TeleportMenuItem.html",
    "title": "Class TeleportMenuItem | VR Builder Documentation",
    "keywords": "Class TeleportMenuItem Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > TeleportMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Editor.UI.MenuItems Assembly : VRBuilder.BasicInteraction.Editor.dll Syntax public class TeleportMenuItem : MenuItem<ICondition> Constructors TeleportMenuItem() Declaration public TeleportMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods GetNewItem() Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.BasicInteraction.Editor.UI.MenuItems.TouchedMenuItem.html": {
    "href": "api/VRBuilder.BasicInteraction.Editor.UI.MenuItems.TouchedMenuItem.html",
    "title": "Class TouchedMenuItem | VR Builder Documentation",
    "keywords": "Class TouchedMenuItem Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > TouchedMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Editor.UI.MenuItems Assembly : VRBuilder.BasicInteraction.Editor.dll Syntax public class TouchedMenuItem : MenuItem<ICondition> Constructors TouchedMenuItem() Declaration public TouchedMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods GetNewItem() Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.BasicInteraction.Editor.UI.MenuItems.UnsnapMenuItem.html": {
    "href": "api/VRBuilder.BasicInteraction.Editor.UI.MenuItems.UnsnapMenuItem.html",
    "title": "Class UnsnapMenuItem | VR Builder Documentation",
    "keywords": "Class UnsnapMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > UnsnapMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Editor.UI.MenuItems Assembly : VRBuilder.BasicInteraction.Editor.dll Syntax public class UnsnapMenuItem : MenuItem<IBehavior> Constructors UnsnapMenuItem() Declaration public UnsnapMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.BasicInteraction.Editor.UI.MenuItems.UsedMenuItem.html": {
    "href": "api/VRBuilder.BasicInteraction.Editor.UI.MenuItems.UsedMenuItem.html",
    "title": "Class UsedMenuItem | VR Builder Documentation",
    "keywords": "Class UsedMenuItem Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > UsedMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.BasicInteraction.Editor.UI.MenuItems Assembly : VRBuilder.BasicInteraction.Editor.dll Syntax public class UsedMenuItem : MenuItem<ICondition> Constructors UsedMenuItem() Declaration public UsedMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods GetNewItem() Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.BasicInteraction.Interaction.BaseInteractionSimulator.html": {
    "href": "api/VRBuilder.BasicInteraction.Interaction.BaseInteractionSimulator.html",
    "title": "Class BaseInteractionSimulator | VR Builder Documentation",
    "keywords": "Class BaseInteractionSimulator Inheritance System.Object BaseInteractionSimulator BaseInteractionSimulatorDummy Namespace : VRBuilder.BasicInteraction.Interaction Assembly : VRBuilder.BasicInteraction.dll Syntax public abstract class BaseInteractionSimulator : Object Constructors BaseInteractionSimulator() Declaration protected BaseInteractionSimulator() Properties Instance Declaration public static BaseInteractionSimulator Instance { get; } Property Value Type Description BaseInteractionSimulator Methods GetTeleportationBaseType() Declaration public abstract Type GetTeleportationBaseType() Returns Type Description System.Type Grab(IInteractableObject) Declaration public abstract void Grab(IInteractableObject interactable) Parameters Type Name Description IInteractableObject interactable HoverSnapZone(ISnapZone, IInteractableObject) Declaration public abstract void HoverSnapZone(ISnapZone snapZone, IInteractableObject interactable) Parameters Type Name Description ISnapZone snapZone IInteractableObject interactable IsColliderValid(GameObject, Collider) Declaration public abstract bool IsColliderValid(GameObject teleportationObject, Collider colliderToValidate) Parameters Type Name Description UnityEngine.GameObject teleportationObject UnityEngine.Collider colliderToValidate Returns Type Description System.Boolean Release() Declaration public abstract void Release() StopTouch() Declaration public abstract void StopTouch() StopUse(IInteractableObject) Declaration public abstract void StopUse(IInteractableObject interactable) Parameters Type Name Description IInteractableObject interactable Teleport(GameObject, GameObject, Vector3, Quaternion) Declaration public abstract void Teleport(GameObject rig, GameObject teleportationObject, Vector3 targetPosition, Quaternion targetRotation) Parameters Type Name Description UnityEngine.GameObject rig UnityEngine.GameObject teleportationObject UnityEngine.Vector3 targetPosition UnityEngine.Quaternion targetRotation Touch(IInteractableObject) Declaration public abstract void Touch(IInteractableObject interactable) Parameters Type Name Description IInteractableObject interactable UnhoverSnapZone(ISnapZone, IInteractableObject) Declaration public abstract void UnhoverSnapZone(ISnapZone snapZone, IInteractableObject interactable) Parameters Type Name Description ISnapZone snapZone IInteractableObject interactable Use(IInteractableObject) Declaration public abstract void Use(IInteractableObject interactable) Parameters Type Name Description IInteractableObject interactable"
  },
  "api/VRBuilder.BasicInteraction.Interaction.BaseInteractionSimulatorDummy.html": {
    "href": "api/VRBuilder.BasicInteraction.Interaction.BaseInteractionSimulatorDummy.html",
    "title": "Class BaseInteractionSimulatorDummy | VR Builder Documentation",
    "keywords": "Class BaseInteractionSimulatorDummy Inheritance System.Object BaseInteractionSimulator BaseInteractionSimulatorDummy Inherited Members BaseInteractionSimulator.Instance Namespace : VRBuilder.BasicInteraction.Interaction Assembly : VRBuilder.BasicInteraction.dll Syntax public class BaseInteractionSimulatorDummy : BaseInteractionSimulator Constructors BaseInteractionSimulatorDummy() Declaration public BaseInteractionSimulatorDummy() Methods GetTeleportationBaseType() Declaration public override Type GetTeleportationBaseType() Returns Type Description System.Type Overrides BaseInteractionSimulator.GetTeleportationBaseType() Grab(IInteractableObject) Declaration public override void Grab(IInteractableObject interactable) Parameters Type Name Description IInteractableObject interactable Overrides BaseInteractionSimulator.Grab(IInteractableObject) HoverSnapZone(ISnapZone, IInteractableObject) Declaration public override void HoverSnapZone(ISnapZone snapZone, IInteractableObject interactable) Parameters Type Name Description ISnapZone snapZone IInteractableObject interactable Overrides BaseInteractionSimulator.HoverSnapZone(ISnapZone, IInteractableObject) IsColliderValid(GameObject, Collider) Declaration public override bool IsColliderValid(GameObject teleportationObject, Collider colliderToValidate) Parameters Type Name Description UnityEngine.GameObject teleportationObject UnityEngine.Collider colliderToValidate Returns Type Description System.Boolean Overrides BaseInteractionSimulator.IsColliderValid(GameObject, Collider) Release() Declaration public override void Release() Overrides BaseInteractionSimulator.Release() StopTouch() Declaration public override void StopTouch() Overrides BaseInteractionSimulator.StopTouch() StopUse(IInteractableObject) Declaration public override void StopUse(IInteractableObject interactable) Parameters Type Name Description IInteractableObject interactable Overrides BaseInteractionSimulator.StopUse(IInteractableObject) Teleport(GameObject, GameObject, Vector3, Quaternion) Declaration public override void Teleport(GameObject rig, GameObject teleportationObject, Vector3 targetPosition, Quaternion targetRotation) Parameters Type Name Description UnityEngine.GameObject rig UnityEngine.GameObject teleportationObject UnityEngine.Vector3 targetPosition UnityEngine.Quaternion targetRotation Overrides BaseInteractionSimulator.Teleport(GameObject, GameObject, Vector3, Quaternion) Touch(IInteractableObject) Declaration public override void Touch(IInteractableObject interactable) Parameters Type Name Description IInteractableObject interactable Overrides BaseInteractionSimulator.Touch(IInteractableObject) UnhoverSnapZone(ISnapZone, IInteractableObject) Declaration public override void UnhoverSnapZone(ISnapZone snapZone, IInteractableObject interactable) Parameters Type Name Description ISnapZone snapZone IInteractableObject interactable Overrides BaseInteractionSimulator.UnhoverSnapZone(ISnapZone, IInteractableObject) Use(IInteractableObject) Declaration public override void Use(IInteractableObject interactable) Parameters Type Name Description IInteractableObject interactable Overrides BaseInteractionSimulator.Use(IInteractableObject)"
  },
  "api/VRBuilder.BasicInteraction.Interaction.html": {
    "href": "api/VRBuilder.BasicInteraction.Interaction.html",
    "title": "Namespace VRBuilder.BasicInteraction.Interaction | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.BasicInteraction.Interaction Classes BaseInteractionSimulator BaseInteractionSimulatorDummy Interfaces IInteractableObject ISnapZone"
  },
  "api/VRBuilder.BasicInteraction.Interaction.IInteractableObject.html": {
    "href": "api/VRBuilder.BasicInteraction.Interaction.IInteractableObject.html",
    "title": "Interface IInteractableObject | VR Builder Documentation",
    "keywords": "Interface IInteractableObject Namespace : VRBuilder.BasicInteraction.Interaction Assembly : VRBuilder.BasicInteraction.dll Syntax public interface IInteractableObject Properties GameObject Declaration GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject IsGrabbable Declaration bool IsGrabbable { set; } Property Value Type Description System.Boolean IsTouchable Declaration bool IsTouchable { set; } Property Value Type Description System.Boolean IsUsable Declaration bool IsUsable { set; } Property Value Type Description System.Boolean"
  },
  "api/VRBuilder.BasicInteraction.Interaction.ISnapZone.html": {
    "href": "api/VRBuilder.BasicInteraction.Interaction.ISnapZone.html",
    "title": "Interface ISnapZone | VR Builder Documentation",
    "keywords": "Interface ISnapZone Namespace : VRBuilder.BasicInteraction.Interaction Assembly : VRBuilder.BasicInteraction.dll Syntax public interface ISnapZone Properties Anchor Declaration Transform Anchor { get; } Property Value Type Description UnityEngine.Transform IsEmpty Declaration bool IsEmpty { get; } Property Value Type Description System.Boolean SnappedObject Declaration ISnappableProperty SnappedObject { get; } Property Value Type Description ISnappableProperty Methods CanSnap(ISnappableProperty) Declaration bool CanSnap(ISnappableProperty target) Parameters Type Name Description ISnappableProperty target Returns Type Description System.Boolean ForceRelease() Declaration bool ForceRelease() Returns Type Description System.Boolean ForceSnap(ISnappableProperty) Declaration bool ForceSnap(ISnappableProperty target) Parameters Type Name Description ISnappableProperty target Returns Type Description System.Boolean"
  },
  "api/VRBuilder.BasicInteraction.Locomotion.BaseLocomotionHandler.html": {
    "href": "api/VRBuilder.BasicInteraction.Locomotion.BaseLocomotionHandler.html",
    "title": "Class BaseLocomotionHandler | VR Builder Documentation",
    "keywords": "Class BaseLocomotionHandler Inheritance System.Object BaseLocomotionHandler XRLocomotionHandler Namespace : VRBuilder.BasicInteraction.Locomotion Assembly : VRBuilder.BasicInteraction.dll Syntax public abstract class BaseLocomotionHandler : MonoBehaviour Constructors BaseLocomotionHandler() Declaration protected BaseLocomotionHandler() Properties CurrentPosition Declaration public abstract Vector3 CurrentPosition { get; } Property Value Type Description UnityEngine.Vector3 CurrentRotation Declaration public abstract Quaternion CurrentRotation { get; } Property Value Type Description UnityEngine.Quaternion Methods SetPositionAndRotation(Vector3, Quaternion) Declaration public abstract void SetPositionAndRotation(Vector3 destinationPosition, Quaternion destinationRotation) Parameters Type Name Description UnityEngine.Vector3 destinationPosition UnityEngine.Quaternion destinationRotation"
  },
  "api/VRBuilder.BasicInteraction.Locomotion.html": {
    "href": "api/VRBuilder.BasicInteraction.Locomotion.html",
    "title": "Namespace VRBuilder.BasicInteraction.Locomotion | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.BasicInteraction.Locomotion Classes BaseLocomotionHandler"
  },
  "api/VRBuilder.BasicInteraction.Properties.GrabbablePropertyEventArgs.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.GrabbablePropertyEventArgs.html",
    "title": "Class GrabbablePropertyEventArgs | VR Builder Documentation",
    "keywords": "Class GrabbablePropertyEventArgs Inheritance System.Object GrabbablePropertyEventArgs Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public class GrabbablePropertyEventArgs : EventArgs Constructors GrabbablePropertyEventArgs() Declaration public GrabbablePropertyEventArgs()"
  },
  "api/VRBuilder.BasicInteraction.Properties.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.html",
    "title": "Namespace VRBuilder.BasicInteraction.Properties | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.BasicInteraction.Properties Classes GrabbablePropertyEventArgs MomentaryControlPropertyEventArgs SettableControlPropertyEventArgs<T> SnappablePropertyEventArgs SnapZonePropertyEventArgs TeleportationPropertyEventArgs TouchablePropertyEventArgs UsablePropertyEventArgs Interfaces IGrabbableProperty IMomentaryControlProperty ISettableControlProperty<T> ISnappableProperty ISnapZoneProperty ITeleportationProperty ITouchableProperty IUsableProperty"
  },
  "api/VRBuilder.BasicInteraction.Properties.IGrabbableProperty.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.IGrabbableProperty.html",
    "title": "Interface IGrabbableProperty | VR Builder Documentation",
    "keywords": "Interface IGrabbableProperty Inherited Members ISceneObjectProperty.SceneObject ILockable.SetLocked(Boolean) ILockable.RequestLocked(Boolean, IStepData) ILockable.RemoveUnlocker(IStepData) ILockable.IsLocked ILockable.IsAlwaysUnlocked ILockable.Locked ILockable.Unlocked Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public interface IGrabbableProperty : ISceneObjectProperty, ILockable Properties GrabEnded Declaration UnityEvent<GrabbablePropertyEventArgs> GrabEnded { get; } Property Value Type Description UnityEngine.Events.UnityEvent < GrabbablePropertyEventArgs > GrabStarted Declaration UnityEvent<GrabbablePropertyEventArgs> GrabStarted { get; } Property Value Type Description UnityEngine.Events.UnityEvent < GrabbablePropertyEventArgs > IsGrabbed Declaration bool IsGrabbed { get; } Property Value Type Description System.Boolean Methods FastForwardGrab() Declaration void FastForwardGrab() FastForwardUngrab() Declaration void FastForwardUngrab() ForceSetGrabbed(Boolean) Declaration void ForceSetGrabbed(bool isGrabbed) Parameters Type Name Description System.Boolean isGrabbed Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.BasicInteraction.Properties.IMomentaryControlProperty.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.IMomentaryControlProperty.html",
    "title": "Interface IMomentaryControlProperty | VR Builder Documentation",
    "keywords": "Interface IMomentaryControlProperty Inherited Members ISceneObjectProperty.SceneObject ILockable.SetLocked(Boolean) ILockable.RequestLocked(Boolean, IStepData) ILockable.RemoveUnlocker(IStepData) ILockable.IsLocked ILockable.IsAlwaysUnlocked ILockable.Locked ILockable.Unlocked Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public interface IMomentaryControlProperty : ISceneObjectProperty, ILockable Properties ControlReleased Declaration UnityEvent<MomentaryControlPropertyEventArgs> ControlReleased { get; } Property Value Type Description UnityEngine.Events.UnityEvent < MomentaryControlPropertyEventArgs > ControlTriggered Declaration UnityEvent<MomentaryControlPropertyEventArgs> ControlTriggered { get; } Property Value Type Description UnityEngine.Events.UnityEvent < MomentaryControlPropertyEventArgs > HasBeenReleased Declaration bool HasBeenReleased { get; } Property Value Type Description System.Boolean HasBeenTriggered Declaration bool HasBeenTriggered { get; } Property Value Type Description System.Boolean Methods FastForwardTrigger() Declaration void FastForwardTrigger() Initialize() Declaration void Initialize() Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.BasicInteraction.Properties.ISettableControlProperty-1.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.ISettableControlProperty-1.html",
    "title": "Interface ISettableControlProperty<T> | VR Builder Documentation",
    "keywords": "Interface ISettableControlProperty<T> Inherited Members ISceneObjectProperty.SceneObject ILockable.SetLocked(Boolean) ILockable.RequestLocked(Boolean, IStepData) ILockable.RemoveUnlocker(IStepData) ILockable.IsLocked ILockable.IsAlwaysUnlocked ILockable.Locked ILockable.Unlocked Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public interface ISettableControlProperty<T> : ISceneObjectProperty, ILockable Type Parameters Name Description T Properties CurrentValue Declaration T CurrentValue { get; } Property Value Type Description T InteractionEnded Declaration UnityEvent<SettableControlPropertyEventArgs<T>> InteractionEnded { get; } Property Value Type Description UnityEngine.Events.UnityEvent < SettableControlPropertyEventArgs <T>> InteractionStarted Declaration UnityEvent<SettableControlPropertyEventArgs<T>> InteractionStarted { get; } Property Value Type Description UnityEngine.Events.UnityEvent < SettableControlPropertyEventArgs <T>> IsInteracting Declaration bool IsInteracting { get; } Property Value Type Description System.Boolean ValueChanged Declaration UnityEvent<T> ValueChanged { get; } Property Value Type Description UnityEngine.Events.UnityEvent <T> Methods FastForwardValue(T) Declaration void FastForwardValue(T value) Parameters Type Name Description T value Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.BasicInteraction.Properties.ISnappableProperty.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.ISnappableProperty.html",
    "title": "Interface ISnappableProperty | VR Builder Documentation",
    "keywords": "Interface ISnappableProperty Inherited Members ISceneObjectProperty.SceneObject ILockable.SetLocked(Boolean) ILockable.RequestLocked(Boolean, IStepData) ILockable.RemoveUnlocker(IStepData) ILockable.IsLocked ILockable.IsAlwaysUnlocked ILockable.Locked ILockable.Unlocked Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public interface ISnappableProperty : ISceneObjectProperty, ILockable Properties AttachedToSnapZone Declaration UnityEvent<SnappablePropertyEventArgs> AttachedToSnapZone { get; } Property Value Type Description UnityEngine.Events.UnityEvent < SnappablePropertyEventArgs > DetachedFromSnapZone Declaration UnityEvent<SnappablePropertyEventArgs> DetachedFromSnapZone { get; } Property Value Type Description UnityEngine.Events.UnityEvent < SnappablePropertyEventArgs > IsSnapped Declaration bool IsSnapped { get; } Property Value Type Description System.Boolean LockObjectOnSnap Declaration bool LockObjectOnSnap { get; } Property Value Type Description System.Boolean SnappedZone Declaration ISnapZoneProperty SnappedZone { get; set; } Property Value Type Description ISnapZoneProperty Methods FastForwardSnapInto(ISnapZoneProperty) Declaration void FastForwardSnapInto(ISnapZoneProperty snapZone) Parameters Type Name Description ISnapZoneProperty snapZone Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.BasicInteraction.Properties.ISnapZoneProperty.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.ISnapZoneProperty.html",
    "title": "Interface ISnapZoneProperty | VR Builder Documentation",
    "keywords": "Interface ISnapZoneProperty Inherited Members ISceneObjectProperty.SceneObject ILockable.SetLocked(Boolean) ILockable.RequestLocked(Boolean, IStepData) ILockable.RemoveUnlocker(IStepData) ILockable.IsLocked ILockable.IsAlwaysUnlocked ILockable.Locked ILockable.Unlocked Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public interface ISnapZoneProperty : ISceneObjectProperty, ILockable Properties IsObjectSnapped Declaration bool IsObjectSnapped { get; } Property Value Type Description System.Boolean ObjectAttached Declaration UnityEvent<SnapZonePropertyEventArgs> ObjectAttached { get; } Property Value Type Description UnityEngine.Events.UnityEvent < SnapZonePropertyEventArgs > ObjectDetached Declaration UnityEvent<SnapZonePropertyEventArgs> ObjectDetached { get; } Property Value Type Description UnityEngine.Events.UnityEvent < SnapZonePropertyEventArgs > SnappedObject Declaration ISnappableProperty SnappedObject { get; set; } Property Value Type Description ISnappableProperty SnapZoneObject Declaration GameObject SnapZoneObject { get; } Property Value Type Description UnityEngine.GameObject Methods Configure(IMode) Declaration void Configure(IMode mode) Parameters Type Name Description IMode mode Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.BasicInteraction.Properties.ITeleportationProperty.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.ITeleportationProperty.html",
    "title": "Interface ITeleportationProperty | VR Builder Documentation",
    "keywords": "Interface ITeleportationProperty Inherited Members ISceneObjectProperty.SceneObject ILockable.SetLocked(Boolean) ILockable.RequestLocked(Boolean, IStepData) ILockable.RemoveUnlocker(IStepData) ILockable.IsLocked ILockable.IsAlwaysUnlocked ILockable.Locked ILockable.Unlocked Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public interface ITeleportationProperty : ISceneObjectProperty, ILockable Properties IsActive Declaration bool IsActive { get; } Property Value Type Description System.Boolean OnInitialized Declaration UnityEvent OnInitialized { get; } Property Value Type Description UnityEngine.Events.UnityEvent TeleportEnded Declaration UnityEvent<TeleportationPropertyEventArgs> TeleportEnded { get; } Property Value Type Description UnityEngine.Events.UnityEvent < TeleportationPropertyEventArgs > WasUsedToTeleport Declaration bool WasUsedToTeleport { get; } Property Value Type Description System.Boolean Methods FastForwardTeleport() Declaration void FastForwardTeleport() ForceSetTeleported() Declaration void ForceSetTeleported() Initialize() Declaration void Initialize() Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.BasicInteraction.Properties.ITouchableProperty.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.ITouchableProperty.html",
    "title": "Interface ITouchableProperty | VR Builder Documentation",
    "keywords": "Interface ITouchableProperty Inherited Members ISceneObjectProperty.SceneObject ILockable.SetLocked(Boolean) ILockable.RequestLocked(Boolean, IStepData) ILockable.RemoveUnlocker(IStepData) ILockable.IsLocked ILockable.IsAlwaysUnlocked ILockable.Locked ILockable.Unlocked Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public interface ITouchableProperty : ISceneObjectProperty, ILockable Properties IsBeingTouched Declaration bool IsBeingTouched { get; } Property Value Type Description System.Boolean TouchEnded Declaration UnityEvent<TouchablePropertyEventArgs> TouchEnded { get; } Property Value Type Description UnityEngine.Events.UnityEvent < TouchablePropertyEventArgs > TouchStarted Declaration UnityEvent<TouchablePropertyEventArgs> TouchStarted { get; } Property Value Type Description UnityEngine.Events.UnityEvent < TouchablePropertyEventArgs > Methods FastForwardTouch() Declaration void FastForwardTouch() ForceSetTouched(Boolean) Declaration void ForceSetTouched(bool isTouched) Parameters Type Name Description System.Boolean isTouched Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.BasicInteraction.Properties.IUsableProperty.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.IUsableProperty.html",
    "title": "Interface IUsableProperty | VR Builder Documentation",
    "keywords": "Interface IUsableProperty Inherited Members ISceneObjectProperty.SceneObject ILockable.SetLocked(Boolean) ILockable.RequestLocked(Boolean, IStepData) ILockable.RemoveUnlocker(IStepData) ILockable.IsLocked ILockable.IsAlwaysUnlocked ILockable.Locked ILockable.Unlocked Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public interface IUsableProperty : ISceneObjectProperty, ILockable Properties IsBeingUsed Declaration bool IsBeingUsed { get; } Property Value Type Description System.Boolean UseEnded Declaration UnityEvent<UsablePropertyEventArgs> UseEnded { get; } Property Value Type Description UnityEngine.Events.UnityEvent < UsablePropertyEventArgs > UseStarted Declaration UnityEvent<UsablePropertyEventArgs> UseStarted { get; } Property Value Type Description UnityEngine.Events.UnityEvent < UsablePropertyEventArgs > Methods FastForwardUse() Declaration void FastForwardUse() ForceSetUsed(Boolean) Declaration void ForceSetUsed(bool isUsed) Parameters Type Name Description System.Boolean isUsed Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.BasicInteraction.Properties.MomentaryControlPropertyEventArgs.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.MomentaryControlPropertyEventArgs.html",
    "title": "Class MomentaryControlPropertyEventArgs | VR Builder Documentation",
    "keywords": "Class MomentaryControlPropertyEventArgs Inheritance System.Object MomentaryControlPropertyEventArgs Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public class MomentaryControlPropertyEventArgs : EventArgs Constructors MomentaryControlPropertyEventArgs() Declaration public MomentaryControlPropertyEventArgs()"
  },
  "api/VRBuilder.BasicInteraction.Properties.SettableControlPropertyEventArgs-1.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.SettableControlPropertyEventArgs-1.html",
    "title": "Class SettableControlPropertyEventArgs<T> | VR Builder Documentation",
    "keywords": "Class SettableControlPropertyEventArgs<T> Inheritance System.Object SettableControlPropertyEventArgs<T> Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public class SettableControlPropertyEventArgs<T> : EventArgs Type Parameters Name Description T Constructors SettableControlPropertyEventArgs() Declaration public SettableControlPropertyEventArgs()"
  },
  "api/VRBuilder.BasicInteraction.Properties.SnappablePropertyEventArgs.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.SnappablePropertyEventArgs.html",
    "title": "Class SnappablePropertyEventArgs | VR Builder Documentation",
    "keywords": "Class SnappablePropertyEventArgs Inheritance System.Object SnappablePropertyEventArgs Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public class SnappablePropertyEventArgs : EventArgs Constructors SnappablePropertyEventArgs(ISnappableProperty, ISnapZoneProperty) Declaration public SnappablePropertyEventArgs(ISnappableProperty snappedObject, ISnapZoneProperty snappedZone) Parameters Type Name Description ISnappableProperty snappedObject ISnapZoneProperty snappedZone Fields SnappedObject Declaration public readonly ISnappableProperty SnappedObject Field Value Type Description ISnappableProperty SnappedZone Declaration public readonly ISnapZoneProperty SnappedZone Field Value Type Description ISnapZoneProperty"
  },
  "api/VRBuilder.BasicInteraction.Properties.SnapZonePropertyEventArgs.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.SnapZonePropertyEventArgs.html",
    "title": "Class SnapZonePropertyEventArgs | VR Builder Documentation",
    "keywords": "Class SnapZonePropertyEventArgs Inheritance System.Object SnapZonePropertyEventArgs Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public class SnapZonePropertyEventArgs : EventArgs Constructors SnapZonePropertyEventArgs() Declaration public SnapZonePropertyEventArgs()"
  },
  "api/VRBuilder.BasicInteraction.Properties.TeleportationPropertyEventArgs.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.TeleportationPropertyEventArgs.html",
    "title": "Class TeleportationPropertyEventArgs | VR Builder Documentation",
    "keywords": "Class TeleportationPropertyEventArgs Inheritance System.Object TeleportationPropertyEventArgs Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public class TeleportationPropertyEventArgs : EventArgs Constructors TeleportationPropertyEventArgs() Declaration public TeleportationPropertyEventArgs()"
  },
  "api/VRBuilder.BasicInteraction.Properties.TouchablePropertyEventArgs.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.TouchablePropertyEventArgs.html",
    "title": "Class TouchablePropertyEventArgs | VR Builder Documentation",
    "keywords": "Class TouchablePropertyEventArgs Inheritance System.Object TouchablePropertyEventArgs Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public class TouchablePropertyEventArgs : EventArgs Constructors TouchablePropertyEventArgs() Declaration public TouchablePropertyEventArgs()"
  },
  "api/VRBuilder.BasicInteraction.Properties.UsablePropertyEventArgs.html": {
    "href": "api/VRBuilder.BasicInteraction.Properties.UsablePropertyEventArgs.html",
    "title": "Class UsablePropertyEventArgs | VR Builder Documentation",
    "keywords": "Class UsablePropertyEventArgs Inheritance System.Object UsablePropertyEventArgs Namespace : VRBuilder.BasicInteraction.Properties Assembly : VRBuilder.BasicInteraction.dll Syntax public class UsablePropertyEventArgs : EventArgs Constructors UsablePropertyEventArgs() Declaration public UsablePropertyEventArgs()"
  },
  "api/VRBuilder.BasicInteraction.RigSetup.html": {
    "href": "api/VRBuilder.BasicInteraction.RigSetup.html",
    "title": "Namespace VRBuilder.BasicInteraction.RigSetup | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.BasicInteraction.RigSetup Classes InteractionRigProvider InteractionRigSetup InteractionRigSetup.RigInfo NoRigSetup"
  },
  "api/VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.html": {
    "href": "api/VRBuilder.BasicInteraction.RigSetup.InteractionRigProvider.html",
    "title": "Class InteractionRigProvider | VR Builder Documentation",
    "keywords": "Class InteractionRigProvider Inheritance System.Object InteractionRigProvider NoRigSetup XRSetupBase Namespace : VRBuilder.BasicInteraction.RigSetup Assembly : VRBuilder.BasicInteraction.dll Syntax public abstract class InteractionRigProvider : Object Constructors InteractionRigProvider() Declaration protected InteractionRigProvider() Properties Name Declaration public abstract string Name { get; } Property Value Type Description System.String PrefabName Declaration public abstract string PrefabName { get; } Property Value Type Description System.String Methods CanBeUsed() Declaration public virtual bool CanBeUsed() Returns Type Description System.Boolean FindPrefab(String) Declaration protected GameObject FindPrefab(string prefab) Parameters Type Name Description System.String prefab Returns Type Description UnityEngine.GameObject GetPrefab() Declaration public virtual GameObject GetPrefab() Returns Type Description UnityEngine.GameObject GetSetupTooltip() Declaration public virtual string GetSetupTooltip() Returns Type Description System.String OnSetup() Declaration public virtual void OnSetup() PreSetup() Declaration public virtual void PreSetup()"
  },
  "api/VRBuilder.BasicInteraction.RigSetup.InteractionRigSetup.html": {
    "href": "api/VRBuilder.BasicInteraction.RigSetup.InteractionRigSetup.html",
    "title": "Class InteractionRigSetup | VR Builder Documentation",
    "keywords": "Class InteractionRigSetup Inheritance System.Object InteractionRigSetup Namespace : VRBuilder.BasicInteraction.RigSetup Assembly : VRBuilder.BasicInteraction.dll Syntax public class InteractionRigSetup : MonoBehaviour Constructors InteractionRigSetup() Declaration public InteractionRigSetup() Fields DummyUser Declaration public GameObject DummyUser Field Value Type Description UnityEngine.GameObject enforcedProvider Declaration protected static InteractionRigProvider enforcedProvider Field Value Type Description InteractionRigProvider PossibleInteractionRigs Declaration public InteractionRigSetup.RigInfo[] PossibleInteractionRigs Field Value Type Description InteractionRigSetup.RigInfo [] Methods SetEnforcedInteractionRig(InteractionRigProvider) Declaration public static void SetEnforcedInteractionRig(InteractionRigProvider provider) Parameters Type Name Description InteractionRigProvider provider UpdateRigList() Declaration public List<InteractionRigProvider> UpdateRigList() Returns Type Description System.Collections.Generic.List < InteractionRigProvider >"
  },
  "api/VRBuilder.BasicInteraction.RigSetup.InteractionRigSetup.RigInfo.html": {
    "href": "api/VRBuilder.BasicInteraction.RigSetup.InteractionRigSetup.RigInfo.html",
    "title": "Class InteractionRigSetup.RigInfo | VR Builder Documentation",
    "keywords": "Class InteractionRigSetup.RigInfo Inheritance System.Object InteractionRigSetup.RigInfo Namespace : VRBuilder.BasicInteraction.RigSetup Assembly : VRBuilder.BasicInteraction.dll Syntax public sealed class RigInfo : ValueType Fields Enabled Declaration public bool Enabled Field Value Type Description System.Boolean Name Declaration public string Name Field Value Type Description System.String"
  },
  "api/VRBuilder.BasicInteraction.RigSetup.NoRigSetup.html": {
    "href": "api/VRBuilder.BasicInteraction.RigSetup.NoRigSetup.html",
    "title": "Class NoRigSetup | VR Builder Documentation",
    "keywords": "Class NoRigSetup Inheritance System.Object InteractionRigProvider NoRigSetup Inherited Members InteractionRigProvider.CanBeUsed() InteractionRigProvider.GetSetupTooltip() InteractionRigProvider.GetPrefab() InteractionRigProvider.OnSetup() InteractionRigProvider.PreSetup() InteractionRigProvider.FindPrefab(String) Namespace : VRBuilder.BasicInteraction.RigSetup Assembly : VRBuilder.BasicInteraction.dll Syntax public class NoRigSetup : InteractionRigProvider Constructors NoRigSetup() Declaration public NoRigSetup() Properties Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides InteractionRigProvider.Name PrefabName Declaration public override string PrefabName { get; } Property Value Type Description System.String Overrides InteractionRigProvider.PrefabName"
  },
  "api/VRBuilder.BasicInteraction.Validation.HasGuidValidation.html": {
    "href": "api/VRBuilder.BasicInteraction.Validation.HasGuidValidation.html",
    "title": "Class HasGuidValidation | VR Builder Documentation",
    "keywords": "Class HasGuidValidation Inheritance System.Object Validator HasGuidValidation Implements IGuidContainer Namespace : VRBuilder.BasicInteraction.Validation Assembly : VRBuilder.BasicInteraction.dll Syntax public class HasGuidValidation : Validator, IGuidContainer Constructors HasGuidValidation() Declaration public HasGuidValidation() Properties Guids Declaration public IEnumerable<Guid> Guids { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Guid > Methods AddGuid(Guid) Declaration public void AddGuid(Guid guid) Parameters Type Name Description System.Guid guid HasGuid(Guid) Declaration public bool HasGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean RemoveGuid(Guid) Declaration public bool RemoveGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean Validate(GameObject) Declaration public override bool Validate(GameObject obj) Parameters Type Name Description UnityEngine.GameObject obj Returns Type Description System.Boolean Overrides Validator.Validate(GameObject) Events GuidAdded Declaration public event EventHandler<GuidContainerEventArgs> GuidAdded Event Type Type Description System.EventHandler < GuidContainerEventArgs > GuidRemoved Declaration public event EventHandler<GuidContainerEventArgs> GuidRemoved Event Type Type Description System.EventHandler < GuidContainerEventArgs > Implements IGuidContainer"
  },
  "api/VRBuilder.BasicInteraction.Validation.html": {
    "href": "api/VRBuilder.BasicInteraction.Validation.html",
    "title": "Namespace VRBuilder.BasicInteraction.Validation | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.BasicInteraction.Validation Classes HasGuidValidation IsObjectWithTagValidation IsProcessSceneObjectValidation Validator"
  },
  "api/VRBuilder.BasicInteraction.Validation.IsObjectWithTagValidation.html": {
    "href": "api/VRBuilder.BasicInteraction.Validation.IsObjectWithTagValidation.html",
    "title": "Class IsObjectWithTagValidation | VR Builder Documentation",
    "keywords": "Class IsObjectWithTagValidation Inheritance System.Object Validator IsObjectWithTagValidation Implements IGuidContainer Namespace : VRBuilder.BasicInteraction.Validation Assembly : VRBuilder.BasicInteraction.dll Syntax public class IsObjectWithTagValidation : Validator, IGuidContainer Constructors IsObjectWithTagValidation() Declaration public IsObjectWithTagValidation() Properties Guids Declaration public IEnumerable<Guid> Guids { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Guid > Methods AddGuid(Guid) Declaration public void AddGuid(Guid tag) Parameters Type Name Description System.Guid tag HasGuid(Guid) Declaration public bool HasGuid(Guid tag) Parameters Type Name Description System.Guid tag Returns Type Description System.Boolean RemoveGuid(Guid) Declaration public bool RemoveGuid(Guid tag) Parameters Type Name Description System.Guid tag Returns Type Description System.Boolean Validate(GameObject) Declaration public override bool Validate(GameObject obj) Parameters Type Name Description UnityEngine.GameObject obj Returns Type Description System.Boolean Overrides Validator.Validate(GameObject) Events GuidAdded Declaration public event EventHandler<GuidContainerEventArgs> GuidAdded Event Type Type Description System.EventHandler < GuidContainerEventArgs > GuidRemoved Declaration public event EventHandler<GuidContainerEventArgs> GuidRemoved Event Type Type Description System.EventHandler < GuidContainerEventArgs > Implements IGuidContainer"
  },
  "api/VRBuilder.BasicInteraction.Validation.IsProcessSceneObjectValidation.html": {
    "href": "api/VRBuilder.BasicInteraction.Validation.IsProcessSceneObjectValidation.html",
    "title": "Class IsProcessSceneObjectValidation | VR Builder Documentation",
    "keywords": "Class IsProcessSceneObjectValidation Inheritance System.Object Validator IsProcessSceneObjectValidation Namespace : VRBuilder.BasicInteraction.Validation Assembly : VRBuilder.BasicInteraction.dll Syntax public class IsProcessSceneObjectValidation : Validator Constructors IsProcessSceneObjectValidation() Declaration public IsProcessSceneObjectValidation() Methods AddProcessSceneObject(ProcessSceneObject) Declaration public void AddProcessSceneObject(ProcessSceneObject target) Parameters Type Name Description ProcessSceneObject target RemoveProcessSceneObject(ProcessSceneObject) Declaration public void RemoveProcessSceneObject(ProcessSceneObject target) Parameters Type Name Description ProcessSceneObject target Validate(GameObject) Declaration public override bool Validate(GameObject obj) Parameters Type Name Description UnityEngine.GameObject obj Returns Type Description System.Boolean Overrides Validator.Validate(GameObject)"
  },
  "api/VRBuilder.BasicInteraction.Validation.Validator.html": {
    "href": "api/VRBuilder.BasicInteraction.Validation.Validator.html",
    "title": "Class Validator | VR Builder Documentation",
    "keywords": "Class Validator Inheritance System.Object Validator HasGuidValidation IsObjectWithTagValidation IsProcessSceneObjectValidation SnapZoneNetworkValidator Namespace : VRBuilder.BasicInteraction.Validation Assembly : VRBuilder.BasicInteraction.dll Syntax public abstract class Validator : MonoBehaviour Constructors Validator() Declaration protected Validator() Methods Validate(GameObject) Declaration public abstract bool Validate(GameObject obj) Parameters Type Name Description UnityEngine.GameObject obj Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Core.ActivationStateChangedEventArgs.html": {
    "href": "api/VRBuilder.Core.ActivationStateChangedEventArgs.html",
    "title": "Class ActivationStateChangedEventArgs | VR Builder Documentation",
    "keywords": "Class ActivationStateChangedEventArgs Inheritance System.Object ActivationStateChangedEventArgs Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class ActivationStateChangedEventArgs : EventArgs Constructors ActivationStateChangedEventArgs(Stage) Declaration public ActivationStateChangedEventArgs(Stage stage) Parameters Type Name Description Stage stage Fields Stage Declaration public readonly Stage Stage Field Value Type Description Stage"
  },
  "api/VRBuilder.Core.Attributes.DefaultSceneObjectPropertyAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.DefaultSceneObjectPropertyAttribute.html",
    "title": "Class DefaultSceneObjectPropertyAttribute | VR Builder Documentation",
    "keywords": "Class DefaultSceneObjectPropertyAttribute Inheritance System.Object DefaultSceneObjectPropertyAttribute Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class DefaultSceneObjectPropertyAttribute : Attribute Constructors DefaultSceneObjectPropertyAttribute(Type) Declaration public DefaultSceneObjectPropertyAttribute(Type concreteType) Parameters Type Name Description System.Type concreteType Properties ConcreteType Declaration public Type ConcreteType { get; } Property Value Type Description System.Type"
  },
  "api/VRBuilder.Core.Attributes.DeletableAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.DeletableAttribute.html",
    "title": "Class DeletableAttribute | VR Builder Documentation",
    "keywords": "Class DeletableAttribute Inheritance System.Object MetadataAttribute DeletableAttribute Inherited Members MetadataAttribute.Name Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class DeletableAttribute : MetadataAttribute Constructors DeletableAttribute() Declaration public DeletableAttribute() Methods GetDefaultMetadata(MemberInfo) Declaration public override object GetDefaultMetadata(MemberInfo owner) Parameters Type Name Description System.Reflection.MemberInfo owner Returns Type Description System.Object Overrides MetadataAttribute.GetDefaultMetadata(MemberInfo) IsMetadataValid(Object) Declaration public override bool IsMetadataValid(object metadata) Parameters Type Name Description System.Object metadata Returns Type Description System.Boolean Overrides MetadataAttribute.IsMetadataValid(Object)"
  },
  "api/VRBuilder.Core.Attributes.DisplayNameAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.DisplayNameAttribute.html",
    "title": "Class DisplayNameAttribute | VR Builder Documentation",
    "keywords": "Class DisplayNameAttribute Inheritance System.Object DisplayNameAttribute Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class DisplayNameAttribute : Attribute Constructors DisplayNameAttribute(String) Declaration public DisplayNameAttribute(string name) Parameters Type Name Description System.String name Properties Name Declaration public string Name { get; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Core.Attributes.DisplayTooltipAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.DisplayTooltipAttribute.html",
    "title": "Class DisplayTooltipAttribute | VR Builder Documentation",
    "keywords": "Class DisplayTooltipAttribute Inheritance System.Object DisplayTooltipAttribute Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class DisplayTooltipAttribute : Attribute Constructors DisplayTooltipAttribute(String) Declaration public DisplayTooltipAttribute(string tooltip) Parameters Type Name Description System.String tooltip Properties Tooltip Declaration public string Tooltip { get; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Core.Attributes.DrawingPriorityAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.DrawingPriorityAttribute.html",
    "title": "Class DrawingPriorityAttribute | VR Builder Documentation",
    "keywords": "Class DrawingPriorityAttribute Inheritance System.Object DrawingPriorityAttribute Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class DrawingPriorityAttribute : Attribute Constructors DrawingPriorityAttribute(Int32) Declaration public DrawingPriorityAttribute(int priority) Parameters Type Name Description System.Int32 priority Properties Priority Declaration public int Priority { get; } Property Value Type Description System.Int32"
  },
  "api/VRBuilder.Core.Attributes.DrawIsBlockingToggleAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.DrawIsBlockingToggleAttribute.html",
    "title": "Class DrawIsBlockingToggleAttribute | VR Builder Documentation",
    "keywords": "Class DrawIsBlockingToggleAttribute Inheritance System.Object MetadataAttribute DrawIsBlockingToggleAttribute Inherited Members MetadataAttribute.Name Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class DrawIsBlockingToggleAttribute : MetadataAttribute Constructors DrawIsBlockingToggleAttribute() Declaration public DrawIsBlockingToggleAttribute() Methods GetDefaultMetadata(MemberInfo) Declaration public override object GetDefaultMetadata(MemberInfo owner) Parameters Type Name Description System.Reflection.MemberInfo owner Returns Type Description System.Object Overrides MetadataAttribute.GetDefaultMetadata(MemberInfo) IsMetadataValid(Object) Declaration public override bool IsMetadataValid(object metadata) Parameters Type Name Description System.Object metadata Returns Type Description System.Boolean Overrides MetadataAttribute.IsMetadataValid(Object)"
  },
  "api/VRBuilder.Core.Attributes.ExtendableListAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.ExtendableListAttribute.html",
    "title": "Class ExtendableListAttribute | VR Builder Documentation",
    "keywords": "Class ExtendableListAttribute Inheritance System.Object MetadataAttribute ExtendableListAttribute Inherited Members MetadataAttribute.Name Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class ExtendableListAttribute : MetadataAttribute Constructors ExtendableListAttribute() Declaration public ExtendableListAttribute() Properties DeclaredElementType Declaration public Type DeclaredElementType { get; set; } Property Value Type Description System.Type Methods GetDefaultMetadata(MemberInfo) Declaration public override object GetDefaultMetadata(MemberInfo owner) Parameters Type Name Description System.Reflection.MemberInfo owner Returns Type Description System.Object Overrides MetadataAttribute.GetDefaultMetadata(MemberInfo) IsMetadataValid(Object) Declaration public override bool IsMetadataValid(object metadata) Parameters Type Name Description System.Object metadata Returns Type Description System.Boolean Overrides MetadataAttribute.IsMetadataValid(Object)"
  },
  "api/VRBuilder.Core.Attributes.ExtendableListAttribute.SerializedTypeWrapper.html": {
    "href": "api/VRBuilder.Core.Attributes.ExtendableListAttribute.SerializedTypeWrapper.html",
    "title": "Class ExtendableListAttribute.SerializedTypeWrapper | VR Builder Documentation",
    "keywords": "Class ExtendableListAttribute.SerializedTypeWrapper Inheritance System.Object ExtendableListAttribute.SerializedTypeWrapper Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class SerializedTypeWrapper : Object Constructors SerializedTypeWrapper() Declaration public SerializedTypeWrapper() Properties Type Declaration public Type Type { get; set; } Property Value Type Description System.Type"
  },
  "api/VRBuilder.Core.Attributes.FoldableAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.FoldableAttribute.html",
    "title": "Class FoldableAttribute | VR Builder Documentation",
    "keywords": "Class FoldableAttribute Inheritance System.Object MetadataAttribute FoldableAttribute Inherited Members MetadataAttribute.Name Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class FoldableAttribute : MetadataAttribute Constructors FoldableAttribute() Declaration public FoldableAttribute() Methods GetDefaultMetadata(MemberInfo) Declaration public override object GetDefaultMetadata(MemberInfo owner) Parameters Type Name Description System.Reflection.MemberInfo owner Returns Type Description System.Object Overrides MetadataAttribute.GetDefaultMetadata(MemberInfo) IsMetadataValid(Object) Declaration public override bool IsMetadataValid(object metadata) Parameters Type Name Description System.Object metadata Returns Type Description System.Boolean Overrides MetadataAttribute.IsMetadataValid(Object)"
  },
  "api/VRBuilder.Core.Attributes.HelpAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.HelpAttribute.html",
    "title": "Class HelpAttribute | VR Builder Documentation",
    "keywords": "Class HelpAttribute Inheritance System.Object MetadataAttribute HelpAttribute Inherited Members MetadataAttribute.Name Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class HelpAttribute : MetadataAttribute Constructors HelpAttribute() Declaration public HelpAttribute() Methods GetDefaultMetadata(MemberInfo) Declaration public override object GetDefaultMetadata(MemberInfo owner) Parameters Type Name Description System.Reflection.MemberInfo owner Returns Type Description System.Object Overrides MetadataAttribute.GetDefaultMetadata(MemberInfo) IsMetadataValid(Object) Declaration public override bool IsMetadataValid(object metadata) Parameters Type Name Description System.Object metadata Returns Type Description System.Boolean Overrides MetadataAttribute.IsMetadataValid(Object)"
  },
  "api/VRBuilder.Core.Attributes.HelpLinkAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.HelpLinkAttribute.html",
    "title": "Class HelpLinkAttribute | VR Builder Documentation",
    "keywords": "Class HelpLinkAttribute Inheritance System.Object HelpLinkAttribute Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class HelpLinkAttribute : Attribute Constructors HelpLinkAttribute(String) Declaration public HelpLinkAttribute(string helpLink) Parameters Type Name Description System.String helpLink Properties HelpLink Declaration public string HelpLink { get; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Core.Attributes.HideInProcessInspectorAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.HideInProcessInspectorAttribute.html",
    "title": "Class HideInProcessInspectorAttribute | VR Builder Documentation",
    "keywords": "Class HideInProcessInspectorAttribute Inheritance System.Object HideInProcessInspectorAttribute Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class HideInProcessInspectorAttribute : Attribute Constructors HideInProcessInspectorAttribute() Declaration public HideInProcessInspectorAttribute()"
  },
  "api/VRBuilder.Core.Attributes.html": {
    "href": "api/VRBuilder.Core.Attributes.html",
    "title": "Namespace VRBuilder.Core.Attributes | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Attributes Classes DefaultSceneObjectPropertyAttribute DeletableAttribute DisplayNameAttribute DisplayTooltipAttribute DrawingPriorityAttribute DrawIsBlockingToggleAttribute ExtendableListAttribute ExtendableListAttribute.SerializedTypeWrapper FoldableAttribute HelpAttribute HelpLinkAttribute HideInProcessInspectorAttribute IgnoreInStepInspectorAttribute KeepPopulatedAttribute LegacyPropertyAttribute ListOfAttribute ListOfAttribute.Metadata MenuAttribute MetadataAttribute ReorderableListOfAttribute SeparatedAttribute UsesSpecificProcessDrawerAttribute"
  },
  "api/VRBuilder.Core.Attributes.IgnoreInStepInspectorAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.IgnoreInStepInspectorAttribute.html",
    "title": "Class IgnoreInStepInspectorAttribute | VR Builder Documentation",
    "keywords": "Class IgnoreInStepInspectorAttribute Inheritance System.Object IgnoreInStepInspectorAttribute Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class IgnoreInStepInspectorAttribute : Attribute Constructors IgnoreInStepInspectorAttribute() Declaration public IgnoreInStepInspectorAttribute()"
  },
  "api/VRBuilder.Core.Attributes.KeepPopulatedAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.KeepPopulatedAttribute.html",
    "title": "Class KeepPopulatedAttribute | VR Builder Documentation",
    "keywords": "Class KeepPopulatedAttribute Inheritance System.Object MetadataAttribute KeepPopulatedAttribute Inherited Members MetadataAttribute.Name Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class KeepPopulatedAttribute : MetadataAttribute Constructors KeepPopulatedAttribute(Type) Declaration public KeepPopulatedAttribute(Type type) Parameters Type Name Description System.Type type Methods GetDefaultMetadata(MemberInfo) Declaration public override object GetDefaultMetadata(MemberInfo owner) Parameters Type Name Description System.Reflection.MemberInfo owner Returns Type Description System.Object Overrides MetadataAttribute.GetDefaultMetadata(MemberInfo) IsMetadataValid(Object) Declaration public override bool IsMetadataValid(object metadata) Parameters Type Name Description System.Object metadata Returns Type Description System.Boolean Overrides MetadataAttribute.IsMetadataValid(Object)"
  },
  "api/VRBuilder.Core.Attributes.LegacyPropertyAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.LegacyPropertyAttribute.html",
    "title": "Class LegacyPropertyAttribute | VR Builder Documentation",
    "keywords": "Class LegacyPropertyAttribute Inheritance System.Object LegacyPropertyAttribute Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class LegacyPropertyAttribute : Attribute Constructors LegacyPropertyAttribute(String) Declaration public LegacyPropertyAttribute(string newPropertyName) Parameters Type Name Description System.String newPropertyName Properties NewPropertyName Declaration public string NewPropertyName { get; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Core.Attributes.ListOfAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.ListOfAttribute.html",
    "title": "Class ListOfAttribute | VR Builder Documentation",
    "keywords": "Class ListOfAttribute Inheritance System.Object MetadataAttribute ListOfAttribute ReorderableListOfAttribute Inherited Members MetadataAttribute.Name Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class ListOfAttribute : MetadataAttribute Constructors ListOfAttribute(Type[]) Declaration public ListOfAttribute(params Type[] childAttributes) Parameters Type Name Description System.Type [] childAttributes Methods GetDefaultMetadata(MemberInfo) Declaration public override object GetDefaultMetadata(MemberInfo owner) Parameters Type Name Description System.Reflection.MemberInfo owner Returns Type Description System.Object Overrides MetadataAttribute.GetDefaultMetadata(MemberInfo) IsMetadataValid(Object) Declaration public override bool IsMetadataValid(object metadata) Parameters Type Name Description System.Object metadata Returns Type Description System.Boolean Overrides MetadataAttribute.IsMetadataValid(Object)"
  },
  "api/VRBuilder.Core.Attributes.ListOfAttribute.Metadata.html": {
    "href": "api/VRBuilder.Core.Attributes.ListOfAttribute.Metadata.html",
    "title": "Class ListOfAttribute.Metadata | VR Builder Documentation",
    "keywords": "Class ListOfAttribute.Metadata Inheritance System.Object ListOfAttribute.Metadata Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class Metadata : Object Constructors Metadata() Declaration public Metadata() Properties ChildAttributes Declaration public List<MetadataAttribute> ChildAttributes { get; set; } Property Value Type Description System.Collections.Generic.List < MetadataAttribute > ChildMetadata Declaration public List<Dictionary<string, object>> ChildMetadata { get; set; } Property Value Type Description System.Collections.Generic.List < System.Collections.Generic.Dictionary < System.String , System.Object >>"
  },
  "api/VRBuilder.Core.Attributes.MenuAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.MenuAttribute.html",
    "title": "Class MenuAttribute | VR Builder Documentation",
    "keywords": "Class MenuAttribute Inheritance System.Object MetadataAttribute MenuAttribute Inherited Members MetadataAttribute.Name Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class MenuAttribute : MetadataAttribute Constructors MenuAttribute() Declaration public MenuAttribute() Methods GetDefaultMetadata(MemberInfo) Declaration public override object GetDefaultMetadata(MemberInfo owner) Parameters Type Name Description System.Reflection.MemberInfo owner Returns Type Description System.Object Overrides MetadataAttribute.GetDefaultMetadata(MemberInfo) IsMetadataValid(Object) Declaration public override bool IsMetadataValid(object metadata) Parameters Type Name Description System.Object metadata Returns Type Description System.Boolean Overrides MetadataAttribute.IsMetadataValid(Object)"
  },
  "api/VRBuilder.Core.Attributes.MetadataAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.MetadataAttribute.html",
    "title": "Class MetadataAttribute | VR Builder Documentation",
    "keywords": "Class MetadataAttribute Inheritance System.Object MetadataAttribute DeletableAttribute DrawIsBlockingToggleAttribute ExtendableListAttribute FoldableAttribute HelpAttribute KeepPopulatedAttribute ListOfAttribute MenuAttribute SeparatedAttribute Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public abstract class MetadataAttribute : Attribute Constructors MetadataAttribute() Declaration protected MetadataAttribute() Properties Name Declaration public string Name { get; } Property Value Type Description System.String Methods GetDefaultMetadata(MemberInfo) Declaration public abstract object GetDefaultMetadata(MemberInfo owner) Parameters Type Name Description System.Reflection.MemberInfo owner Returns Type Description System.Object IsMetadataValid(Object) Declaration public abstract bool IsMetadataValid(object metadata) Parameters Type Name Description System.Object metadata Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Attributes.ReorderableListOfAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.ReorderableListOfAttribute.html",
    "title": "Class ReorderableListOfAttribute | VR Builder Documentation",
    "keywords": "Class ReorderableListOfAttribute Inheritance System.Object MetadataAttribute ListOfAttribute ReorderableListOfAttribute Inherited Members ListOfAttribute.GetDefaultMetadata(MemberInfo) ListOfAttribute.IsMetadataValid(Object) MetadataAttribute.Name Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class ReorderableListOfAttribute : ListOfAttribute Constructors ReorderableListOfAttribute(Type[]) Declaration public ReorderableListOfAttribute(params Type[] childAttributes) Parameters Type Name Description System.Type [] childAttributes"
  },
  "api/VRBuilder.Core.Attributes.SeparatedAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.SeparatedAttribute.html",
    "title": "Class SeparatedAttribute | VR Builder Documentation",
    "keywords": "Class SeparatedAttribute Inheritance System.Object MetadataAttribute SeparatedAttribute Inherited Members MetadataAttribute.Name Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class SeparatedAttribute : MetadataAttribute Constructors SeparatedAttribute() Declaration public SeparatedAttribute() Methods GetDefaultMetadata(MemberInfo) Declaration public override object GetDefaultMetadata(MemberInfo owner) Parameters Type Name Description System.Reflection.MemberInfo owner Returns Type Description System.Object Overrides MetadataAttribute.GetDefaultMetadata(MemberInfo) IsMetadataValid(Object) Declaration public override bool IsMetadataValid(object metadata) Parameters Type Name Description System.Object metadata Returns Type Description System.Boolean Overrides MetadataAttribute.IsMetadataValid(Object)"
  },
  "api/VRBuilder.Core.Attributes.UsesSpecificProcessDrawerAttribute.html": {
    "href": "api/VRBuilder.Core.Attributes.UsesSpecificProcessDrawerAttribute.html",
    "title": "Class UsesSpecificProcessDrawerAttribute | VR Builder Documentation",
    "keywords": "Class UsesSpecificProcessDrawerAttribute Inheritance System.Object UsesSpecificProcessDrawerAttribute Namespace : VRBuilder.Core.Attributes Assembly : VRBuilder.Core.dll Syntax public class UsesSpecificProcessDrawerAttribute : Attribute Constructors UsesSpecificProcessDrawerAttribute(String) Declaration public UsesSpecificProcessDrawerAttribute(string drawerType) Parameters Type Name Description System.String drawerType Properties DrawerType Declaration public string DrawerType { get; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Core.Autocompleter-1.html": {
    "href": "api/VRBuilder.Core.Autocompleter-1.html",
    "title": "Class Autocompleter<TData> | VR Builder Documentation",
    "keywords": "Class Autocompleter<TData> Inheritance System.Object Autocompleter<TData> Implements IAutocompleter Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public abstract class Autocompleter<TData> : Object, IAutocompleter where TData : IData Type Parameters Name Description TData Constructors Autocompleter(TData) Declaration protected Autocompleter(TData data) Parameters Type Name Description TData data Properties Data Declaration protected TData Data { get; } Property Value Type Description TData Methods Complete() Declaration public abstract void Complete() Implements IAutocompleter"
  },
  "api/VRBuilder.Core.BehaviorCollection.EntityData.html": {
    "href": "api/VRBuilder.Core.BehaviorCollection.EntityData.html",
    "title": "Class BehaviorCollection.EntityData | VR Builder Documentation",
    "keywords": "Class BehaviorCollection.EntityData Inheritance System.Object EntityCollectionData < IBehavior > BehaviorCollection.EntityData Implements IBehaviorCollectionData IEntityCollectionDataWithMode < IBehavior > IEntityCollectionData < IBehavior > IEntityCollectionDataWithMode IEntityCollectionData IModeData IData Inherited Members EntityCollectionData<IBehavior>.IEntityCollectionData.GetChildren() EntityCollectionData<IBehavior>.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class EntityData : EntityCollectionData<IBehavior>, IBehaviorCollectionData, IEntityCollectionDataWithMode<IBehavior>, IEntityCollectionData<IBehavior>, IEntityCollectionDataWithMode, IEntityCollectionData, IModeData, IData Constructors EntityData() Declaration public EntityData() Properties Behaviors Declaration [DisplayName(\"\")] [ReorderableListOf] [ExtendableList] public virtual IList<IBehavior> Behaviors { get; set; } Property Value Type Description System.Collections.Generic.IList < IBehavior > Mode Declaration public IMode Mode { get; set; } Property Value Type Description IMode Methods GetChildren() Declaration public override IEnumerable<IBehavior> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < IBehavior > Overrides VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.Behaviors.IBehavior>.GetChildren() Implements IBehaviorCollectionData IEntityCollectionDataWithMode<TEntity> IEntityCollectionData<TEntity> IEntityCollectionDataWithMode IEntityCollectionData IModeData IData"
  },
  "api/VRBuilder.Core.BehaviorCollection.html": {
    "href": "api/VRBuilder.Core.BehaviorCollection.html",
    "title": "Class BehaviorCollection | VR Builder Documentation",
    "keywords": "Class BehaviorCollection Inheritance System.Object Entity < BehaviorCollection.EntityData > BehaviorCollection Implements IDataOwner < BehaviorCollection.EntityData > IBehaviorCollection IStepChild IEntity IDataOwner < IBehaviorCollectionData > IDataOwner IClonable < IBehaviorCollection > Inherited Members Entity<BehaviorCollection.EntityData>.Configure(IMode) Entity<BehaviorCollection.EntityData>.Update() Entity<BehaviorCollection.EntityData>.Data Entity<BehaviorCollection.EntityData>.IDataOwner.Data Entity<BehaviorCollection.EntityData>.LifeCycle Entity<BehaviorCollection.EntityData>.Parent Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class BehaviorCollection : Entity<BehaviorCollection.EntityData>, IDataOwner<BehaviorCollection.EntityData>, IBehaviorCollection, IStepChild, IEntity, IDataOwner<IBehaviorCollectionData>, IDataOwner, IClonable<IBehaviorCollection> Constructors BehaviorCollection() Declaration public BehaviorCollection() Methods Clone() Declaration public IBehaviorCollection Clone() Returns Type Description IBehaviorCollection GetAbortingProcess() Declaration public override IStageProcess GetAbortingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.BehaviorCollection.EntityData>.GetAbortingProcess() GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.BehaviorCollection.EntityData>.GetActivatingProcess() GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.BehaviorCollection.EntityData>.GetActiveProcess() GetConfigurator() Declaration protected override IConfigurator GetConfigurator() Returns Type Description IConfigurator Overrides VRBuilder.Core.Entity<VRBuilder.Core.BehaviorCollection.EntityData>.GetConfigurator() GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.BehaviorCollection.EntityData>.GetDeactivatingProcess() Explicit Interface Implementations IDataOwner<IBehaviorCollectionData>.Data Declaration IBehaviorCollectionData IDataOwner<IBehaviorCollectionData>.Data { get; } Returns Type Description IBehaviorCollectionData Implements IDataOwner<TData> IBehaviorCollection IStepChild IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.Behavior-1.html": {
    "href": "api/VRBuilder.Core.Behaviors.Behavior-1.html",
    "title": "Class Behavior<TData> | VR Builder Documentation",
    "keywords": "Class Behavior<TData> Inheritance System.Object Entity <TData> Behavior<TData> UnsnapBehavior BehaviorSequence ConfettiBehavior ControlParticleEmissionBehavior DelayBehavior ExecuteChapterBehavior ExecuteChaptersBehavior GoToChapterBehavior HighlightObjectBehavior LoadSceneBehavior MoveObjectBehavior PlayAudioBehavior ResetValueBehavior ScalingBehavior SetComponentEnabledBehavior SetObjectsEnabledBehavior SetParentBehavior SetValueBehavior<T> AnimateTransformBehavior ChildExplosionViewBehavior FollowPathBehavior MathOperationBehavior OutlineObjectsBehavior PlayAnimationClipBehavior PlayVideoBehavior PointAtObjectsBehavior RotateAroundAxisBehavior SelectRandomTransitionBehavior SetAnimatorBoolParameterBehavior SetAnimatorFloatParameterBehavior SetAnimatorIntParameterBehavior SetAnimatorTriggerParameterBehavior SetRandomBooleanBehavior SetRandomNumberBehavior SetStateBehavior StartTimerBehavior StopTimerBehavior TriggerEventBehavior TriggerGenericEventBehavior<T> UpdateScoreBehavior Implements IDataOwner <TData> IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Entity<TData>.GetActivatingProcess() Entity<TData>.GetActiveProcess() Entity<TData>.GetDeactivatingProcess() Entity<TData>.GetAbortingProcess() Entity<TData>.GetConfigurator() Entity<TData>.Configure(IMode) Entity<TData>.Update() Entity<TData>.Data Entity<TData>.IDataOwner.Data Entity<TData>.LifeCycle Entity<TData>.Parent Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public abstract class Behavior<TData> : Entity<TData>, IDataOwner<TData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> where TData : class, IBehaviorData, new() Type Parameters Name Description TData Constructors Behavior() Declaration protected Behavior() Methods Clone() Declaration public virtual IBehavior Clone() Returns Type Description IBehavior Explicit Interface Implementations IDataOwner<IBehaviorData>.Data Declaration IBehaviorData IDataOwner<IBehaviorData>.Data { get; } Returns Type Description IBehaviorData Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.BehaviorCollectionChangedEventArgs.html": {
    "href": "api/VRBuilder.Core.Behaviors.BehaviorCollectionChangedEventArgs.html",
    "title": "Class BehaviorCollectionChangedEventArgs | VR Builder Documentation",
    "keywords": "Class BehaviorCollectionChangedEventArgs Inheritance System.Object BehaviorCollectionChangedEventArgs Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public class BehaviorCollectionChangedEventArgs : EventArgs Constructors BehaviorCollectionChangedEventArgs() Declaration public BehaviorCollectionChangedEventArgs()"
  },
  "api/VRBuilder.Core.Behaviors.BehaviorExecutionStages.html": {
    "href": "api/VRBuilder.Core.Behaviors.BehaviorExecutionStages.html",
    "title": "Class BehaviorExecutionStages | VR Builder Documentation",
    "keywords": "Class BehaviorExecutionStages Inheritance System.Object BehaviorExecutionStages Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public sealed class BehaviorExecutionStages : Enum Fields Activation Declaration public const BehaviorExecutionStages Activation Field Value Type Description BehaviorExecutionStages ActivationAndDeactivation Declaration public const BehaviorExecutionStages ActivationAndDeactivation Field Value Type Description BehaviorExecutionStages Deactivation Declaration public const BehaviorExecutionStages Deactivation Field Value Type Description BehaviorExecutionStages None Declaration public const BehaviorExecutionStages None Field Value Type Description BehaviorExecutionStages value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/VRBuilder.Core.Behaviors.BehaviorMetadata.html": {
    "href": "api/VRBuilder.Core.Behaviors.BehaviorMetadata.html",
    "title": "Class BehaviorMetadata | VR Builder Documentation",
    "keywords": "Class BehaviorMetadata Inheritance System.Object BehaviorMetadata Implements IMetadata Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public class BehaviorMetadata : Object, IMetadata Constructors BehaviorMetadata() Declaration public BehaviorMetadata() Properties IsFoldedOut Declaration public bool IsFoldedOut { get; set; } Property Value Type Description System.Boolean Implements IMetadata"
  },
  "api/VRBuilder.Core.Behaviors.BehaviorSequence.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.BehaviorSequence.EntityData.html",
    "title": "Class BehaviorSequence.EntityData | VR Builder Documentation",
    "keywords": "Class BehaviorSequence.EntityData Inheritance System.Object EntityCollectionData < IBehavior > BehaviorSequence.EntityData Implements IEntitySequenceDataWithMode < IBehavior > IEntitySequenceData < IBehavior > IEntityCollectionData < IBehavior > IEntityCollectionData IEntitySequenceData IModeData IBackgroundBehaviorData IBehaviorData INamedData IData Inherited Members EntityCollectionData<IBehavior>.IEntityCollectionData.GetChildren() EntityCollectionData<IBehavior>.Metadata Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Behavior Sequence\")] public class EntityData : EntityCollectionData<IBehavior>, IEntitySequenceDataWithMode<IBehavior>, IEntitySequenceData<IBehavior>, IEntityCollectionData<IBehavior>, IEntityCollectionData, IEntitySequenceData, IModeData, IBackgroundBehaviorData, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties Behaviors Declaration [DisplayName(\"Child behaviors\")] [Foldable] [ReorderableListOf] [ExtendableList] public List<IBehavior> Behaviors { get; set; } Property Value Type Description System.Collections.Generic.List < IBehavior > Current Declaration public IBehavior Current { get; set; } Property Value Type Description IBehavior IsBlocking Declaration public bool IsBlocking { get; set; } Property Value Type Description System.Boolean Mode Declaration public IMode Mode { get; set; } Property Value Type Description IMode Name Declaration public string Name { get; } Property Value Type Description System.String PlaysOnRepeat Declaration [DisplayName(\"Repeat\")] public bool PlaysOnRepeat { get; set; } Property Value Type Description System.Boolean Methods GetChildren() Declaration public override IEnumerable<IBehavior> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < IBehavior > Overrides VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.Behaviors.IBehavior>.GetChildren() Explicit Interface Implementations IEntitySequenceData.Current Declaration IEntity IEntitySequenceData.Current { get; } Returns Type Description IEntity Implements IEntitySequenceDataWithMode<TEntity> IEntitySequenceData<TEntity> IEntityCollectionData<TEntity> IEntityCollectionData IEntitySequenceData IModeData IBackgroundBehaviorData IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.BehaviorSequence.html": {
    "href": "api/VRBuilder.Core.Behaviors.BehaviorSequence.html",
    "title": "Class BehaviorSequence | VR Builder Documentation",
    "keywords": "Class BehaviorSequence Inheritance System.Object Entity < BehaviorSequence.EntityData > Behavior < BehaviorSequence.EntityData > BehaviorSequence Implements IDataOwner < BehaviorSequence.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<BehaviorSequence.EntityData>.Clone() Behavior<BehaviorSequence.EntityData>.IDataOwner<IBehaviorData>.Data Entity<BehaviorSequence.EntityData>.Configure(IMode) Entity<BehaviorSequence.EntityData>.Update() Entity<BehaviorSequence.EntityData>.Data Entity<BehaviorSequence.EntityData>.IDataOwner.Data Entity<BehaviorSequence.EntityData>.LifeCycle Entity<BehaviorSequence.EntityData>.Parent Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-behaviors/behavior-sequence\")] public class BehaviorSequence : Behavior<BehaviorSequence.EntityData>, IDataOwner<BehaviorSequence.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors BehaviorSequence() Declaration public BehaviorSequence() BehaviorSequence(Boolean, IList<IBehavior>) Declaration public BehaviorSequence(bool playsOnRepeat, IList<IBehavior> behaviors) Parameters Type Name Description System.Boolean playsOnRepeat System.Collections.Generic.IList < IBehavior > behaviors BehaviorSequence(Boolean, IList<IBehavior>, Boolean) Declaration public BehaviorSequence(bool playsOnRepeat, IList<IBehavior> behaviors, bool isBlocking) Parameters Type Name Description System.Boolean playsOnRepeat System.Collections.Generic.IList < IBehavior > behaviors System.Boolean isBlocking Methods GetAbortingProcess() Declaration public override IStageProcess GetAbortingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.BehaviorSequence.EntityData>.GetAbortingProcess() GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.BehaviorSequence.EntityData>.GetActivatingProcess() GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.BehaviorSequence.EntityData>.GetActiveProcess() GetConfigurator() Declaration protected override IConfigurator GetConfigurator() Returns Type Description IConfigurator Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.BehaviorSequence.EntityData>.GetConfigurator() GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.BehaviorSequence.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData.html",
    "title": "Class ConfettiBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class ConfettiBehavior.EntityData Inheritance System.Object ConfettiBehavior.EntityData Implements IBehaviorData INamedData IData IBehaviorExecutionStages Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Spawn Confetti\")] public class EntityData : Object, IBehaviorData, INamedData, IData, IBehaviorExecutionStages Constructors EntityData() Declaration public EntityData() Properties AreaRadius Declaration [DisplayName(\"Area Radius\")] public float AreaRadius { get; set; } Property Value Type Description System.Single ConfettiMachine Declaration public GameObject ConfettiMachine { get; set; } Property Value Type Description UnityEngine.GameObject ConfettiMachinePrefabPath Declaration [DisplayName(\"Confetti Machine Path\")] public string ConfettiMachinePrefabPath { get; set; } Property Value Type Description System.String ConfettiPosition Declaration [DisplayName(\"Position Provider\")] public SingleSceneObjectReference ConfettiPosition { get; set; } Property Value Type Description SingleSceneObjectReference Duration Declaration [DisplayName(\"Duration\")] public float Duration { get; set; } Property Value Type Description System.Single ExecutionStages Declaration public BehaviorExecutionStages ExecutionStages { get; set; } Property Value Type Description BehaviorExecutionStages IsAboveUser Declaration [DisplayName(\"Spawn Above User\")] public bool IsAboveUser { get; set; } Property Value Type Description System.Boolean Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String Implements IBehaviorData INamedData IData IBehaviorExecutionStages"
  },
  "api/VRBuilder.Core.Behaviors.ConfettiBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.ConfettiBehavior.html",
    "title": "Class ConfettiBehavior | VR Builder Documentation",
    "keywords": "Class ConfettiBehavior Inheritance System.Object Entity < ConfettiBehavior.EntityData > Behavior < ConfettiBehavior.EntityData > ConfettiBehavior Implements IDataOwner < ConfettiBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<ConfettiBehavior.EntityData>.Clone() Behavior<ConfettiBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<ConfettiBehavior.EntityData>.GetActiveProcess() Entity<ConfettiBehavior.EntityData>.GetAbortingProcess() Entity<ConfettiBehavior.EntityData>.GetConfigurator() Entity<ConfettiBehavior.EntityData>.Configure(IMode) Entity<ConfettiBehavior.EntityData>.Update() Entity<ConfettiBehavior.EntityData>.Data Entity<ConfettiBehavior.EntityData>.IDataOwner.Data Entity<ConfettiBehavior.EntityData>.LifeCycle Entity<ConfettiBehavior.EntityData>.Parent Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public class ConfettiBehavior : Behavior<ConfettiBehavior.EntityData>, IDataOwner<ConfettiBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors ConfettiBehavior() Declaration public ConfettiBehavior() ConfettiBehavior(Boolean, Guid, String, Single, Single, BehaviorExecutionStages) Declaration public ConfettiBehavior(bool isAboveUser, Guid positionProviderId, string confettiMachinePrefabPath, float radius, float duration, BehaviorExecutionStages executionStages) Parameters Type Name Description System.Boolean isAboveUser System.Guid positionProviderId System.String confettiMachinePrefabPath System.Single radius System.Single duration BehaviorExecutionStages executionStages ConfettiBehavior(Boolean, ISceneObject, String, Single, Single, BehaviorExecutionStages) Declaration public ConfettiBehavior(bool isAboveUser, ISceneObject positionProvider, string confettiMachinePrefabPath, float radius, float duration, BehaviorExecutionStages executionStages) Parameters Type Name Description System.Boolean isAboveUser ISceneObject positionProvider System.String confettiMachinePrefabPath System.Single radius System.Single duration BehaviorExecutionStages executionStages Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData>.GetActivatingProcess() GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.ConfettiBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.ControlParticleEmissionBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.ControlParticleEmissionBehavior.EntityData.html",
    "title": "Class ControlParticleEmissionBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class ControlParticleEmissionBehavior.EntityData Inheritance System.Object ControlParticleEmissionBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties EmitParticles Declaration [HideInProcessInspector] public bool EmitParticles { get; set; } Property Value Type Description System.Boolean Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String Targets Declaration public MultipleScenePropertyReference<IParticleSystemProperty> Targets { get; set; } Property Value Type Description MultipleScenePropertyReference < IParticleSystemProperty > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.ControlParticleEmissionBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.ControlParticleEmissionBehavior.html",
    "title": "Class ControlParticleEmissionBehavior | VR Builder Documentation",
    "keywords": "Class ControlParticleEmissionBehavior Inheritance System.Object Entity < ControlParticleEmissionBehavior.EntityData > Behavior < ControlParticleEmissionBehavior.EntityData > ControlParticleEmissionBehavior Implements IDataOwner < ControlParticleEmissionBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<ControlParticleEmissionBehavior.EntityData>.Clone() Behavior<ControlParticleEmissionBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<ControlParticleEmissionBehavior.EntityData>.GetActiveProcess() Entity<ControlParticleEmissionBehavior.EntityData>.GetDeactivatingProcess() Entity<ControlParticleEmissionBehavior.EntityData>.GetAbortingProcess() Entity<ControlParticleEmissionBehavior.EntityData>.GetConfigurator() Entity<ControlParticleEmissionBehavior.EntityData>.Configure(IMode) Entity<ControlParticleEmissionBehavior.EntityData>.Update() Entity<ControlParticleEmissionBehavior.EntityData>.Data Entity<ControlParticleEmissionBehavior.EntityData>.IDataOwner.Data Entity<ControlParticleEmissionBehavior.EntityData>.LifeCycle Entity<ControlParticleEmissionBehavior.EntityData>.Parent Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public class ControlParticleEmissionBehavior : Behavior<ControlParticleEmissionBehavior.EntityData>, IDataOwner<ControlParticleEmissionBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors ControlParticleEmissionBehavior() Declaration public ControlParticleEmissionBehavior() ControlParticleEmissionBehavior(Boolean) Declaration public ControlParticleEmissionBehavior(bool emitParticles) Parameters Type Name Description System.Boolean emitParticles Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.ControlParticleEmissionBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.DelayBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.DelayBehavior.EntityData.html",
    "title": "Class DelayBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class DelayBehavior.EntityData Inheritance System.Object DelayBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Delay\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties DelayTime Declaration [DisplayName(\"Delay (in seconds)\")] public float DelayTime { get; set; } Property Value Type Description System.Single Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.DelayBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.DelayBehavior.html",
    "title": "Class DelayBehavior | VR Builder Documentation",
    "keywords": "Class DelayBehavior Inheritance System.Object Entity < DelayBehavior.EntityData > Behavior < DelayBehavior.EntityData > DelayBehavior Implements IDataOwner < DelayBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<DelayBehavior.EntityData>.Clone() Behavior<DelayBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<DelayBehavior.EntityData>.GetActiveProcess() Entity<DelayBehavior.EntityData>.GetDeactivatingProcess() Entity<DelayBehavior.EntityData>.GetAbortingProcess() Entity<DelayBehavior.EntityData>.GetConfigurator() Entity<DelayBehavior.EntityData>.Configure(IMode) Entity<DelayBehavior.EntityData>.Update() Entity<DelayBehavior.EntityData>.Data Entity<DelayBehavior.EntityData>.IDataOwner.Data Entity<DelayBehavior.EntityData>.LifeCycle Entity<DelayBehavior.EntityData>.Parent Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-behaviors/delay\")] public class DelayBehavior : Behavior<DelayBehavior.EntityData>, IDataOwner<DelayBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors DelayBehavior() Declaration public DelayBehavior() DelayBehavior(Single) Declaration public DelayBehavior(float delayTime) Parameters Type Name Description System.Single delayTime Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.DelayBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.ExecuteChapterBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.ExecuteChapterBehavior.EntityData.html",
    "title": "Class ExecuteChapterBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class ExecuteChapterBehavior.EntityData Inheritance System.Object EntityCollectionData < IChapter > ExecuteChapterBehavior.EntityData Implements IEntityCollectionData < IChapter > IEntityCollectionData IBehaviorData INamedData IData Inherited Members EntityCollectionData<IChapter>.IEntityCollectionData.GetChildren() EntityCollectionData<IChapter>.Metadata Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Step Group\")] public class EntityData : EntityCollectionData<IChapter>, IEntityCollectionData<IChapter>, IEntityCollectionData, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties Chapter Declaration public IChapter Chapter { get; set; } Property Value Type Description IChapter Name Declaration public string Name { get; set; } Property Value Type Description System.String Methods GetChildren() Declaration public override IEnumerable<IChapter> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < IChapter > Overrides VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IChapter>.GetChildren() Implements IEntityCollectionData<TEntity> IEntityCollectionData IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.ExecuteChapterBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.ExecuteChapterBehavior.html",
    "title": "Class ExecuteChapterBehavior | VR Builder Documentation",
    "keywords": "Class ExecuteChapterBehavior Inheritance System.Object Entity < ExecuteChapterBehavior.EntityData > Behavior < ExecuteChapterBehavior.EntityData > ExecuteChapterBehavior Implements IDataOwner < ExecuteChapterBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<ExecuteChapterBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<ExecuteChapterBehavior.EntityData>.GetActiveProcess() Entity<ExecuteChapterBehavior.EntityData>.GetConfigurator() Entity<ExecuteChapterBehavior.EntityData>.Configure(IMode) Entity<ExecuteChapterBehavior.EntityData>.Update() Entity<ExecuteChapterBehavior.EntityData>.Data Entity<ExecuteChapterBehavior.EntityData>.IDataOwner.Data Entity<ExecuteChapterBehavior.EntityData>.LifeCycle Entity<ExecuteChapterBehavior.EntityData>.Parent Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public class ExecuteChapterBehavior : Behavior<ExecuteChapterBehavior.EntityData>, IDataOwner<ExecuteChapterBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors ExecuteChapterBehavior() Declaration public ExecuteChapterBehavior() ExecuteChapterBehavior(IChapter) Declaration public ExecuteChapterBehavior(IChapter chapter) Parameters Type Name Description IChapter chapter Methods Clone() Declaration public override IBehavior Clone() Returns Type Description IBehavior Overrides VRBuilder.Core.Behaviors.Behavior<VRBuilder.Core.Behaviors.ExecuteChapterBehavior.EntityData>.Clone() GetAbortingProcess() Declaration public override IStageProcess GetAbortingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.ExecuteChapterBehavior.EntityData>.GetAbortingProcess() GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.ExecuteChapterBehavior.EntityData>.GetActivatingProcess() GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.ExecuteChapterBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData.html",
    "title": "Class ExecuteChaptersBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class ExecuteChaptersBehavior.EntityData Inheritance System.Object EntityCollectionData < IChapter > ExecuteChaptersBehavior.EntityData Implements IEntityCollectionData < IChapter > IEntityCollectionData IBehaviorData INamedData IData Inherited Members EntityCollectionData<IChapter>.IEntityCollectionData.GetChildren() EntityCollectionData<IChapter>.Metadata Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Execute Chapters\")] public class EntityData : EntityCollectionData<IChapter>, IEntityCollectionData<IChapter>, IEntityCollectionData, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties IsOptionalChapter Declaration public List<bool> IsOptionalChapter { get; set; } Property Value Type Description System.Collections.Generic.List < System.Boolean > Name Declaration public string Name { get; } Property Value Type Description System.String SubChapters Declaration public List<SubChapter> SubChapters { get; set; } Property Value Type Description System.Collections.Generic.List < SubChapter > Methods GetChildren() Declaration public override IEnumerable<IChapter> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < IChapter > Overrides VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IChapter>.GetChildren() Implements IEntityCollectionData<TEntity> IEntityCollectionData IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.html",
    "title": "Class ExecuteChaptersBehavior | VR Builder Documentation",
    "keywords": "Class ExecuteChaptersBehavior Inheritance System.Object Entity < ExecuteChaptersBehavior.EntityData > Behavior < ExecuteChaptersBehavior.EntityData > ExecuteChaptersBehavior Implements IDataOwner < ExecuteChaptersBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<ExecuteChaptersBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<ExecuteChaptersBehavior.EntityData>.GetActiveProcess() Entity<ExecuteChaptersBehavior.EntityData>.GetConfigurator() Entity<ExecuteChaptersBehavior.EntityData>.Configure(IMode) Entity<ExecuteChaptersBehavior.EntityData>.Update() Entity<ExecuteChaptersBehavior.EntityData>.Data Entity<ExecuteChaptersBehavior.EntityData>.IDataOwner.Data Entity<ExecuteChaptersBehavior.EntityData>.LifeCycle Entity<ExecuteChaptersBehavior.EntityData>.Parent Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public class ExecuteChaptersBehavior : Behavior<ExecuteChaptersBehavior.EntityData>, IDataOwner<ExecuteChaptersBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors ExecuteChaptersBehavior() Declaration public ExecuteChaptersBehavior() ExecuteChaptersBehavior(IEnumerable<SubChapter>) Declaration public ExecuteChaptersBehavior(IEnumerable<SubChapter> subChapters) Parameters Type Name Description System.Collections.Generic.IEnumerable < SubChapter > subChapters ExecuteChaptersBehavior(IEnumerable<IChapter>) Declaration public ExecuteChaptersBehavior(IEnumerable<IChapter> chapters) Parameters Type Name Description System.Collections.Generic.IEnumerable < IChapter > chapters ExecuteChaptersBehavior(IChapter) Declaration public ExecuteChaptersBehavior(IChapter chapter) Parameters Type Name Description IChapter chapter Methods Clone() Declaration public override IBehavior Clone() Returns Type Description IBehavior Overrides VRBuilder.Core.Behaviors.Behavior<VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData>.Clone() GetAbortingProcess() Declaration public override IStageProcess GetAbortingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData>.GetAbortingProcess() GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData>.GetActivatingProcess() GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.ExecuteChaptersBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.GoToChapterBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.GoToChapterBehavior.EntityData.html",
    "title": "Class GoToChapterBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class GoToChapterBehavior.EntityData Inheritance System.Object GoToChapterBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Go to Chapter\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties ChapterGuid Declaration public Guid ChapterGuid { get; set; } Property Value Type Description System.Guid Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.GoToChapterBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.GoToChapterBehavior.html",
    "title": "Class GoToChapterBehavior | VR Builder Documentation",
    "keywords": "Class GoToChapterBehavior Inheritance System.Object Entity < GoToChapterBehavior.EntityData > Behavior < GoToChapterBehavior.EntityData > GoToChapterBehavior Implements IDataOwner < GoToChapterBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<GoToChapterBehavior.EntityData>.Clone() Behavior<GoToChapterBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<GoToChapterBehavior.EntityData>.GetActiveProcess() Entity<GoToChapterBehavior.EntityData>.GetDeactivatingProcess() Entity<GoToChapterBehavior.EntityData>.GetAbortingProcess() Entity<GoToChapterBehavior.EntityData>.GetConfigurator() Entity<GoToChapterBehavior.EntityData>.Configure(IMode) Entity<GoToChapterBehavior.EntityData>.Update() Entity<GoToChapterBehavior.EntityData>.Data Entity<GoToChapterBehavior.EntityData>.IDataOwner.Data Entity<GoToChapterBehavior.EntityData>.LifeCycle Entity<GoToChapterBehavior.EntityData>.Parent Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public class GoToChapterBehavior : Behavior<GoToChapterBehavior.EntityData>, IDataOwner<GoToChapterBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors GoToChapterBehavior() Declaration public GoToChapterBehavior() GoToChapterBehavior(Guid) Declaration public GoToChapterBehavior(Guid chapterGuid) Parameters Type Name Description System.Guid chapterGuid Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.GoToChapterBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.HighlightObjectBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.HighlightObjectBehavior.EntityData.html",
    "title": "Class HighlightObjectBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class HighlightObjectBehavior.EntityData Inheritance System.Object HighlightObjectBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Highlight Object\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties CustomHighlightColor Declaration public ModeParameter<Color> CustomHighlightColor { get; set; } Property Value Type Description ModeParameter < UnityEngine.Color > HighlightColor Declaration [DisplayName(\"Color\")] public Color HighlightColor { get; set; } Property Value Type Description UnityEngine.Color Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String TargetObjects Declaration [DisplayName(\"Objects\")] public MultipleScenePropertyReference<IHighlightProperty> TargetObjects { get; set; } Property Value Type Description MultipleScenePropertyReference < IHighlightProperty > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.HighlightObjectBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.HighlightObjectBehavior.html",
    "title": "Class HighlightObjectBehavior | VR Builder Documentation",
    "keywords": "Class HighlightObjectBehavior Inheritance System.Object Entity < HighlightObjectBehavior.EntityData > Behavior < HighlightObjectBehavior.EntityData > HighlightObjectBehavior Implements IDataOwner < HighlightObjectBehavior.EntityData > IBehavior IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > IOptional IEntity Inherited Members Behavior<HighlightObjectBehavior.EntityData>.Clone() Behavior<HighlightObjectBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<HighlightObjectBehavior.EntityData>.GetActiveProcess() Entity<HighlightObjectBehavior.EntityData>.GetAbortingProcess() Entity<HighlightObjectBehavior.EntityData>.Configure(IMode) Entity<HighlightObjectBehavior.EntityData>.Update() Entity<HighlightObjectBehavior.EntityData>.Data Entity<HighlightObjectBehavior.EntityData>.IDataOwner.Data Entity<HighlightObjectBehavior.EntityData>.LifeCycle Entity<HighlightObjectBehavior.EntityData>.Parent Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-behaviors/highlight-object\")] public class HighlightObjectBehavior : Behavior<HighlightObjectBehavior.EntityData>, IDataOwner<HighlightObjectBehavior.EntityData>, IBehavior, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior>, IOptional, IEntity Constructors HighlightObjectBehavior() Declaration public HighlightObjectBehavior() HighlightObjectBehavior(Guid, Color) Declaration public HighlightObjectBehavior(Guid objectId, Color highlightColor) Parameters Type Name Description System.Guid objectId UnityEngine.Color highlightColor HighlightObjectBehavior(IHighlightProperty) Declaration public HighlightObjectBehavior(IHighlightProperty target) Parameters Type Name Description IHighlightProperty target HighlightObjectBehavior(IHighlightProperty, Color) Declaration public HighlightObjectBehavior(IHighlightProperty target, Color highlightColor) Parameters Type Name Description IHighlightProperty target UnityEngine.Color highlightColor Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.HighlightObjectBehavior.EntityData>.GetActivatingProcess() GetConfigurator() Declaration protected override IConfigurator GetConfigurator() Returns Type Description IConfigurator Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.HighlightObjectBehavior.EntityData>.GetConfigurator() GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.HighlightObjectBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IDataOwner<TData> IDataOwner IClonable<T> IOptional IEntity"
  },
  "api/VRBuilder.Core.Behaviors.html": {
    "href": "api/VRBuilder.Core.Behaviors.html",
    "title": "Namespace VRBuilder.Core.Behaviors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Behaviors Classes Behavior<TData> BehaviorCollectionChangedEventArgs BehaviorExecutionStages BehaviorMetadata BehaviorSequence BehaviorSequence.EntityData ConfettiBehavior ConfettiBehavior.EntityData ControlParticleEmissionBehavior ControlParticleEmissionBehavior.EntityData DelayBehavior DelayBehavior.EntityData ExecuteChapterBehavior ExecuteChapterBehavior.EntityData ExecuteChaptersBehavior ExecuteChaptersBehavior.EntityData GoToChapterBehavior GoToChapterBehavior.EntityData HighlightObjectBehavior HighlightObjectBehavior.EntityData LoadSceneBehavior LoadSceneBehavior.EntityData LoadSceneBehaviorException MoveObjectBehavior MoveObjectBehavior.EntityData PlayAudioBehavior PlayAudioBehavior.EntityData ResetValueBehavior ResetValueBehavior.EntityData ScalingBehavior ScalingBehavior.EntityData SetComponentEnabledBehavior SetComponentEnabledBehavior.EntityData SetObjectsEnabledBehavior SetObjectsEnabledBehavior.EntityData SetParentBehavior SetParentBehavior.EntityData SetValueBehavior<T> SetValueBehavior<T>.EntityData SubChapter Interfaces IBackgroundBehaviorData IBehavior IBehaviorData IBehaviorExecutionStages IBehaviorParent"
  },
  "api/VRBuilder.Core.Behaviors.IBackgroundBehaviorData.html": {
    "href": "api/VRBuilder.Core.Behaviors.IBackgroundBehaviorData.html",
    "title": "Interface IBackgroundBehaviorData | VR Builder Documentation",
    "keywords": "Interface IBackgroundBehaviorData Inherited Members INamedData.Name IData.Metadata Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public interface IBackgroundBehaviorData : IBehaviorData, INamedData, IData Properties IsBlocking Declaration [HideInProcessInspector] bool IsBlocking { get; set; } Property Value Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Behaviors.IBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.IBehavior.html",
    "title": "Interface IBehavior | VR Builder Documentation",
    "keywords": "Interface IBehavior Inherited Members IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.GetAbortingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.LifeCycle IEntity.Parent IDataOwner<IBehaviorData>.Data IClonable<IBehavior>.Clone() Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public interface IBehavior : IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior>"
  },
  "api/VRBuilder.Core.Behaviors.IBehaviorData.html": {
    "href": "api/VRBuilder.Core.Behaviors.IBehaviorData.html",
    "title": "Interface IBehaviorData | VR Builder Documentation",
    "keywords": "Interface IBehaviorData Inherited Members INamedData.Name IData.Metadata Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public interface IBehaviorData : INamedData, IData"
  },
  "api/VRBuilder.Core.Behaviors.IBehaviorExecutionStages.html": {
    "href": "api/VRBuilder.Core.Behaviors.IBehaviorExecutionStages.html",
    "title": "Interface IBehaviorExecutionStages | VR Builder Documentation",
    "keywords": "Interface IBehaviorExecutionStages Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public interface IBehaviorExecutionStages Properties ExecutionStages Declaration BehaviorExecutionStages ExecutionStages { get; set; } Property Value Type Description BehaviorExecutionStages"
  },
  "api/VRBuilder.Core.Behaviors.IBehaviorParent.html": {
    "href": "api/VRBuilder.Core.Behaviors.IBehaviorParent.html",
    "title": "Interface IBehaviorParent | VR Builder Documentation",
    "keywords": "Interface IBehaviorParent Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public interface IBehaviorParent Properties Behaviors Declaration ReadOnlyCollection<IBehavior> Behaviors { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < IBehavior > Methods AddBehavior(IBehavior) Declaration void AddBehavior(IBehavior behavior) Parameters Type Name Description IBehavior behavior CheckHasBehavior(IBehavior) Declaration bool CheckHasBehavior(IBehavior behavior) Parameters Type Name Description IBehavior behavior Returns Type Description System.Boolean InsertBehavior(Int32, IBehavior) Declaration void InsertBehavior(int index, IBehavior behavior) Parameters Type Name Description System.Int32 index IBehavior behavior RemoveBehavior(IBehavior) Declaration bool RemoveBehavior(IBehavior behavior) Parameters Type Name Description IBehavior behavior Returns Type Description System.Boolean Events BehaviorCollectionChanged Declaration event EventHandler<BehaviorCollectionChangedEventArgs> BehaviorCollectionChanged Event Type Type Description System.EventHandler < BehaviorCollectionChangedEventArgs >"
  },
  "api/VRBuilder.Core.Behaviors.LoadSceneBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.LoadSceneBehavior.EntityData.html",
    "title": "Class LoadSceneBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class LoadSceneBehavior.EntityData Inheritance System.Object LoadSceneBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties LoadAdditively Declaration [DisplayName(\"Load additively\")] public bool LoadAdditively { get; set; } Property Value Type Description System.Boolean LoadAsynchronously Declaration [DisplayName(\"Load asynchronously\")] public bool LoadAsynchronously { get; set; } Property Value Type Description System.Boolean Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String ScenePath Declaration [UsesSpecificProcessDrawer(\"SceneDropdownDrawer\")] [DisplayName(\"Scene to load\")] public string ScenePath { get; set; } Property Value Type Description System.String Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.LoadSceneBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.LoadSceneBehavior.html",
    "title": "Class LoadSceneBehavior | VR Builder Documentation",
    "keywords": "Class LoadSceneBehavior Inheritance System.Object Entity < LoadSceneBehavior.EntityData > Behavior < LoadSceneBehavior.EntityData > LoadSceneBehavior Implements IDataOwner < LoadSceneBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<LoadSceneBehavior.EntityData>.Clone() Behavior<LoadSceneBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<LoadSceneBehavior.EntityData>.GetActiveProcess() Entity<LoadSceneBehavior.EntityData>.GetDeactivatingProcess() Entity<LoadSceneBehavior.EntityData>.GetAbortingProcess() Entity<LoadSceneBehavior.EntityData>.GetConfigurator() Entity<LoadSceneBehavior.EntityData>.Configure(IMode) Entity<LoadSceneBehavior.EntityData>.Update() Entity<LoadSceneBehavior.EntityData>.Data Entity<LoadSceneBehavior.EntityData>.IDataOwner.Data Entity<LoadSceneBehavior.EntityData>.LifeCycle Entity<LoadSceneBehavior.EntityData>.Parent Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public class LoadSceneBehavior : Behavior<LoadSceneBehavior.EntityData>, IDataOwner<LoadSceneBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors LoadSceneBehavior() Declaration public LoadSceneBehavior() Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.LoadSceneBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.LoadSceneBehaviorException.html": {
    "href": "api/VRBuilder.Core.Behaviors.LoadSceneBehaviorException.html",
    "title": "Class LoadSceneBehaviorException | VR Builder Documentation",
    "keywords": "Class LoadSceneBehaviorException Inheritance System.Object LoadSceneBehaviorException Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public class LoadSceneBehaviorException : Exception Constructors LoadSceneBehaviorException(String) Declaration public LoadSceneBehaviorException(string message) Parameters Type Name Description System.String message"
  },
  "api/VRBuilder.Core.Behaviors.MoveObjectBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.MoveObjectBehavior.EntityData.html",
    "title": "Class MoveObjectBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class MoveObjectBehavior.EntityData Inheritance System.Object MoveObjectBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Move Object\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties AnimationCurve Declaration [DisplayName(\"Animation curve\")] public AnimationCurve AnimationCurve { get; set; } Property Value Type Description UnityEngine.AnimationCurve Duration Declaration [DisplayName(\"Animation (in seconds)\")] public float Duration { get; set; } Property Value Type Description System.Single FinalPosition Declaration [DisplayName(\"Final position provider\")] public SingleSceneObjectReference FinalPosition { get; set; } Property Value Type Description SingleSceneObjectReference Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String TargetObject Declaration [DisplayName(\"Object\")] public SingleSceneObjectReference TargetObject { get; set; } Property Value Type Description SingleSceneObjectReference Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.MoveObjectBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.MoveObjectBehavior.html",
    "title": "Class MoveObjectBehavior | VR Builder Documentation",
    "keywords": "Class MoveObjectBehavior Inheritance System.Object Entity < MoveObjectBehavior.EntityData > Behavior < MoveObjectBehavior.EntityData > MoveObjectBehavior Implements IDataOwner < MoveObjectBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<MoveObjectBehavior.EntityData>.Clone() Behavior<MoveObjectBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<MoveObjectBehavior.EntityData>.GetActiveProcess() Entity<MoveObjectBehavior.EntityData>.GetDeactivatingProcess() Entity<MoveObjectBehavior.EntityData>.GetAbortingProcess() Entity<MoveObjectBehavior.EntityData>.GetConfigurator() Entity<MoveObjectBehavior.EntityData>.Configure(IMode) Entity<MoveObjectBehavior.EntityData>.Update() Entity<MoveObjectBehavior.EntityData>.Data Entity<MoveObjectBehavior.EntityData>.IDataOwner.Data Entity<MoveObjectBehavior.EntityData>.LifeCycle Entity<MoveObjectBehavior.EntityData>.Parent Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-behaviors/move-object\")] public class MoveObjectBehavior : Behavior<MoveObjectBehavior.EntityData>, IDataOwner<MoveObjectBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors MoveObjectBehavior() Declaration public MoveObjectBehavior() MoveObjectBehavior(Guid, Guid, Single) Declaration public MoveObjectBehavior(Guid targetObjectId, Guid finalPositionId, float duration) Parameters Type Name Description System.Guid targetObjectId System.Guid finalPositionId System.Single duration MoveObjectBehavior(ISceneObject, ISceneObject, Single) Declaration public MoveObjectBehavior(ISceneObject target, ISceneObject positionProvider, float duration) Parameters Type Name Description ISceneObject target ISceneObject positionProvider System.Single duration Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.MoveObjectBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData.html",
    "title": "Class PlayAudioBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class PlayAudioBehavior.EntityData Inheritance System.Object PlayAudioBehavior.EntityData Implements IBackgroundBehaviorData IBehaviorData INamedData IData IBehaviorExecutionStages Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public class EntityData : Object, IBackgroundBehaviorData, IBehaviorData, INamedData, IData, IBehaviorExecutionStages Constructors EntityData() Declaration public EntityData() Properties AudioData Declaration public IAudioData AudioData { get; set; } Property Value Type Description IAudioData AudioPlayer Declaration public AudioSource AudioPlayer { get; set; } Property Value Type Description UnityEngine.AudioSource ExecutionStages Declaration public BehaviorExecutionStages ExecutionStages { get; set; } Property Value Type Description BehaviorExecutionStages IsBlocking Declaration public bool IsBlocking { get; set; } Property Value Type Description System.Boolean Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String Volume Declaration [DisplayName(\"Audio Volume (from 0 to 1)\")] [UsesSpecificProcessDrawer(\"NormalizedFloatDrawer\")] public float Volume { get; set; } Property Value Type Description System.Single Implements IBackgroundBehaviorData IBehaviorData INamedData IData IBehaviorExecutionStages"
  },
  "api/VRBuilder.Core.Behaviors.PlayAudioBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.PlayAudioBehavior.html",
    "title": "Class PlayAudioBehavior | VR Builder Documentation",
    "keywords": "Class PlayAudioBehavior Inheritance System.Object Entity < PlayAudioBehavior.EntityData > Behavior < PlayAudioBehavior.EntityData > PlayAudioBehavior Implements IDataOwner < PlayAudioBehavior.EntityData > IBehavior IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > IOptional IEntity Inherited Members Behavior<PlayAudioBehavior.EntityData>.Clone() Behavior<PlayAudioBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<PlayAudioBehavior.EntityData>.GetActiveProcess() Entity<PlayAudioBehavior.EntityData>.GetConfigurator() Entity<PlayAudioBehavior.EntityData>.Configure(IMode) Entity<PlayAudioBehavior.EntityData>.Update() Entity<PlayAudioBehavior.EntityData>.Data Entity<PlayAudioBehavior.EntityData>.IDataOwner.Data Entity<PlayAudioBehavior.EntityData>.LifeCycle Entity<PlayAudioBehavior.EntityData>.Parent Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-behaviors/play-audio-file\")] public class PlayAudioBehavior : Behavior<PlayAudioBehavior.EntityData>, IDataOwner<PlayAudioBehavior.EntityData>, IBehavior, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior>, IOptional, IEntity Constructors PlayAudioBehavior() Declaration protected PlayAudioBehavior() PlayAudioBehavior(IAudioData, BehaviorExecutionStages, Boolean, AudioSource) Declaration public PlayAudioBehavior(IAudioData audioData, BehaviorExecutionStages executionStages, bool isBlocking, AudioSource audioPlayer = null) Parameters Type Name Description IAudioData audioData BehaviorExecutionStages executionStages System.Boolean isBlocking UnityEngine.AudioSource audioPlayer PlayAudioBehavior(IAudioData, BehaviorExecutionStages, AudioSource) Declaration public PlayAudioBehavior(IAudioData audioData, BehaviorExecutionStages executionStages, AudioSource audioPlayer = null) Parameters Type Name Description IAudioData audioData BehaviorExecutionStages executionStages UnityEngine.AudioSource audioPlayer Methods GetAbortingProcess() Declaration public override IStageProcess GetAbortingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData>.GetAbortingProcess() GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData>.GetActivatingProcess() GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.PlayAudioBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IDataOwner<TData> IDataOwner IClonable<T> IOptional IEntity"
  },
  "api/VRBuilder.Core.Behaviors.ResetValueBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.ResetValueBehavior.EntityData.html",
    "title": "Class ResetValueBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class ResetValueBehavior.EntityData Inheritance System.Object ResetValueBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Reset Value\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Fields Properties Declaration [DisplayName(\"Data Properties\")] public MultipleScenePropertyReference<IDataPropertyBase> Properties Field Value Type Description MultipleScenePropertyReference < IDataPropertyBase > Properties Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.ResetValueBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.ResetValueBehavior.html",
    "title": "Class ResetValueBehavior | VR Builder Documentation",
    "keywords": "Class ResetValueBehavior Inheritance System.Object Entity < ResetValueBehavior.EntityData > Behavior < ResetValueBehavior.EntityData > ResetValueBehavior Implements IDataOwner < ResetValueBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<ResetValueBehavior.EntityData>.Clone() Behavior<ResetValueBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<ResetValueBehavior.EntityData>.GetActiveProcess() Entity<ResetValueBehavior.EntityData>.GetDeactivatingProcess() Entity<ResetValueBehavior.EntityData>.GetAbortingProcess() Entity<ResetValueBehavior.EntityData>.GetConfigurator() Entity<ResetValueBehavior.EntityData>.Configure(IMode) Entity<ResetValueBehavior.EntityData>.Update() Entity<ResetValueBehavior.EntityData>.Data Entity<ResetValueBehavior.EntityData>.IDataOwner.Data Entity<ResetValueBehavior.EntityData>.LifeCycle Entity<ResetValueBehavior.EntityData>.Parent Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/states-data-add-on\")] public class ResetValueBehavior : Behavior<ResetValueBehavior.EntityData>, IDataOwner<ResetValueBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors ResetValueBehavior() Declaration public ResetValueBehavior() ResetValueBehavior(Guid) Declaration public ResetValueBehavior(Guid propertyId) Parameters Type Name Description System.Guid propertyId ResetValueBehavior(IDataPropertyBase) Declaration public ResetValueBehavior(IDataPropertyBase property) Parameters Type Name Description IDataPropertyBase property Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.ResetValueBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.ScalingBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.ScalingBehavior.EntityData.html",
    "title": "Class ScalingBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class ScalingBehavior.EntityData Inheritance System.Object ScalingBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Scale Object\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties AnimationCurve Declaration [DisplayName(\"Animation curve\")] public AnimationCurve AnimationCurve { get; set; } Property Value Type Description UnityEngine.AnimationCurve Duration Declaration [DisplayName(\"Animation Duration (in seconds)\")] public float Duration { get; set; } Property Value Type Description System.Single Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String Targets Declaration [DisplayName(\"Target Objects\")] public MultipleSceneObjectReference Targets { get; set; } Property Value Type Description MultipleSceneObjectReference TargetScale Declaration [DisplayName(\"Target Scale\")] public Vector3 TargetScale { get; set; } Property Value Type Description UnityEngine.Vector3 Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.ScalingBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.ScalingBehavior.html",
    "title": "Class ScalingBehavior | VR Builder Documentation",
    "keywords": "Class ScalingBehavior Inheritance System.Object Entity < ScalingBehavior.EntityData > Behavior < ScalingBehavior.EntityData > ScalingBehavior Implements IDataOwner < ScalingBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<ScalingBehavior.EntityData>.Clone() Behavior<ScalingBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<ScalingBehavior.EntityData>.GetActiveProcess() Entity<ScalingBehavior.EntityData>.GetDeactivatingProcess() Entity<ScalingBehavior.EntityData>.GetAbortingProcess() Entity<ScalingBehavior.EntityData>.GetConfigurator() Entity<ScalingBehavior.EntityData>.Configure(IMode) Entity<ScalingBehavior.EntityData>.Update() Entity<ScalingBehavior.EntityData>.Data Entity<ScalingBehavior.EntityData>.IDataOwner.Data Entity<ScalingBehavior.EntityData>.LifeCycle Entity<ScalingBehavior.EntityData>.Parent Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public class ScalingBehavior : Behavior<ScalingBehavior.EntityData>, IDataOwner<ScalingBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors ScalingBehavior() Declaration public ScalingBehavior() ScalingBehavior(IEnumerable<ISceneObject>, Vector3, Single) Declaration public ScalingBehavior(IEnumerable<ISceneObject> targets, Vector3 targetScale, float duration) Parameters Type Name Description System.Collections.Generic.IEnumerable < ISceneObject > targets UnityEngine.Vector3 targetScale System.Single duration Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.ScalingBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.SetComponentEnabledBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.SetComponentEnabledBehavior.EntityData.html",
    "title": "Class SetComponentEnabledBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetComponentEnabledBehavior.EntityData Inheritance System.Object SetComponentEnabledBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Set Component Enabled\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties ComponentType Declaration [HideInProcessInspector] public string ComponentType { get; set; } Property Value Type Description System.String Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String RevertOnDeactivation Declaration [HideInProcessInspector] public bool RevertOnDeactivation { get; set; } Property Value Type Description System.Boolean SetEnabled Declaration [HideInProcessInspector] public bool SetEnabled { get; set; } Property Value Type Description System.Boolean TargetObjects Declaration [HideInProcessInspector] public MultipleSceneObjectReference TargetObjects { get; set; } Property Value Type Description MultipleSceneObjectReference Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.SetComponentEnabledBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.SetComponentEnabledBehavior.html",
    "title": "Class SetComponentEnabledBehavior | VR Builder Documentation",
    "keywords": "Class SetComponentEnabledBehavior Inheritance System.Object Entity < SetComponentEnabledBehavior.EntityData > Behavior < SetComponentEnabledBehavior.EntityData > SetComponentEnabledBehavior Implements IDataOwner < SetComponentEnabledBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetComponentEnabledBehavior.EntityData>.Clone() Behavior<SetComponentEnabledBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<SetComponentEnabledBehavior.EntityData>.GetActiveProcess() Entity<SetComponentEnabledBehavior.EntityData>.GetAbortingProcess() Entity<SetComponentEnabledBehavior.EntityData>.GetConfigurator() Entity<SetComponentEnabledBehavior.EntityData>.Configure(IMode) Entity<SetComponentEnabledBehavior.EntityData>.Update() Entity<SetComponentEnabledBehavior.EntityData>.Data Entity<SetComponentEnabledBehavior.EntityData>.IDataOwner.Data Entity<SetComponentEnabledBehavior.EntityData>.LifeCycle Entity<SetComponentEnabledBehavior.EntityData>.Parent Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-behaviors/enable-object\")] public class SetComponentEnabledBehavior : Behavior<SetComponentEnabledBehavior.EntityData>, IDataOwner<SetComponentEnabledBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors SetComponentEnabledBehavior() Declaration public SetComponentEnabledBehavior() SetComponentEnabledBehavior(Boolean, String) Declaration public SetComponentEnabledBehavior(bool setEnabled, string name = \"Set Component Enabled\") Parameters Type Name Description System.Boolean setEnabled System.String name SetComponentEnabledBehavior(Guid, String, Boolean, Boolean) Declaration public SetComponentEnabledBehavior(Guid objectId, string componentType, bool setEnabled, bool revertOnDeactivate) Parameters Type Name Description System.Guid objectId System.String componentType System.Boolean setEnabled System.Boolean revertOnDeactivate Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetComponentEnabledBehavior.EntityData>.GetActivatingProcess() GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetComponentEnabledBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.SetObjectsEnabledBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.SetObjectsEnabledBehavior.EntityData.html",
    "title": "Class SetObjectsEnabledBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetObjectsEnabledBehavior.EntityData Inheritance System.Object SetObjectsEnabledBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Set Objects Enabled\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String RevertOnDeactivation Declaration [DisplayName(\"Revert after step is complete\")] public bool RevertOnDeactivation { get; set; } Property Value Type Description System.Boolean SetEnabled Declaration [HideInProcessInspector] public bool SetEnabled { get; set; } Property Value Type Description System.Boolean TargetObjects Declaration [DisplayName(\"Objects\")] public MultipleSceneObjectReference TargetObjects { get; set; } Property Value Type Description MultipleSceneObjectReference Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.SetObjectsEnabledBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.SetObjectsEnabledBehavior.html",
    "title": "Class SetObjectsEnabledBehavior | VR Builder Documentation",
    "keywords": "Class SetObjectsEnabledBehavior Inheritance System.Object Entity < SetObjectsEnabledBehavior.EntityData > Behavior < SetObjectsEnabledBehavior.EntityData > SetObjectsEnabledBehavior Implements IDataOwner < SetObjectsEnabledBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetObjectsEnabledBehavior.EntityData>.Clone() Behavior<SetObjectsEnabledBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<SetObjectsEnabledBehavior.EntityData>.GetActiveProcess() Entity<SetObjectsEnabledBehavior.EntityData>.GetAbortingProcess() Entity<SetObjectsEnabledBehavior.EntityData>.GetConfigurator() Entity<SetObjectsEnabledBehavior.EntityData>.Configure(IMode) Entity<SetObjectsEnabledBehavior.EntityData>.Update() Entity<SetObjectsEnabledBehavior.EntityData>.Data Entity<SetObjectsEnabledBehavior.EntityData>.IDataOwner.Data Entity<SetObjectsEnabledBehavior.EntityData>.LifeCycle Entity<SetObjectsEnabledBehavior.EntityData>.Parent Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public class SetObjectsEnabledBehavior : Behavior<SetObjectsEnabledBehavior.EntityData>, IDataOwner<SetObjectsEnabledBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors SetObjectsEnabledBehavior() Declaration public SetObjectsEnabledBehavior() SetObjectsEnabledBehavior(Boolean) Declaration public SetObjectsEnabledBehavior(bool setEnabled) Parameters Type Name Description System.Boolean setEnabled SetObjectsEnabledBehavior(Guid, Boolean, Boolean) Declaration public SetObjectsEnabledBehavior(Guid objectId, bool setEnabled, bool revertOnDeactivate = false) Parameters Type Name Description System.Guid objectId System.Boolean setEnabled System.Boolean revertOnDeactivate Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsEnabledBehavior.EntityData>.GetActivatingProcess() GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetObjectsEnabledBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.SetParentBehavior.EntityData.html",
    "title": "Class SetParentBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetParentBehavior.EntityData Inheritance System.Object SetParentBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Set Parent\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String ParentObject Declaration public SingleSceneObjectReference ParentObject { get; set; } Property Value Type Description SingleSceneObjectReference SnapToParentTransform Declaration [DisplayName(\"Snap to parent transform\")] public bool SnapToParentTransform { get; set; } Property Value Type Description System.Boolean TargetObject Declaration public SingleSceneObjectReference TargetObject { get; set; } Property Value Type Description SingleSceneObjectReference Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.SetParentBehavior.html": {
    "href": "api/VRBuilder.Core.Behaviors.SetParentBehavior.html",
    "title": "Class SetParentBehavior | VR Builder Documentation",
    "keywords": "Class SetParentBehavior Inheritance System.Object Entity < SetParentBehavior.EntityData > Behavior < SetParentBehavior.EntityData > SetParentBehavior Implements IDataOwner < SetParentBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetParentBehavior.EntityData>.Clone() Behavior<SetParentBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<SetParentBehavior.EntityData>.GetActiveProcess() Entity<SetParentBehavior.EntityData>.GetDeactivatingProcess() Entity<SetParentBehavior.EntityData>.GetAbortingProcess() Entity<SetParentBehavior.EntityData>.GetConfigurator() Entity<SetParentBehavior.EntityData>.Configure(IMode) Entity<SetParentBehavior.EntityData>.Update() Entity<SetParentBehavior.EntityData>.Data Entity<SetParentBehavior.EntityData>.IDataOwner.Data Entity<SetParentBehavior.EntityData>.LifeCycle Entity<SetParentBehavior.EntityData>.Parent Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-behaviors/set-parent\")] public class SetParentBehavior : Behavior<SetParentBehavior.EntityData>, IDataOwner<SetParentBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors SetParentBehavior() Declaration public SetParentBehavior() SetParentBehavior(Guid, Guid, Boolean) Declaration public SetParentBehavior(Guid target, Guid parent, bool snapToParentTransform = false) Parameters Type Name Description System.Guid target System.Guid parent System.Boolean snapToParentTransform SetParentBehavior(ISceneObject, ISceneObject, Boolean) Declaration public SetParentBehavior(ISceneObject target, ISceneObject parent, bool snapToParentTransform = false) Parameters Type Name Description ISceneObject target ISceneObject parent System.Boolean snapToParentTransform Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetParentBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.SetValueBehavior-1.EntityData.html": {
    "href": "api/VRBuilder.Core.Behaviors.SetValueBehavior-1.EntityData.html",
    "title": "Class SetValueBehavior<T>.EntityData | VR Builder Documentation",
    "keywords": "Class SetValueBehavior<T>.EntityData Inheritance System.Object SetValueBehavior<T>.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Set Value\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties DataProperties Declaration [DisplayName(\"Data Property\")] public MultipleScenePropertyReference<IDataProperty<T>> DataProperties { get; set; } Property Value Type Description MultipleScenePropertyReference < IDataProperty <T>> Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String NewValue Declaration [DisplayName(\"Value\")] public T NewValue { get; set; } Property Value Type Description T Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Core.Behaviors.SetValueBehavior-1.html": {
    "href": "api/VRBuilder.Core.Behaviors.SetValueBehavior-1.html",
    "title": "Class SetValueBehavior<T> | VR Builder Documentation",
    "keywords": "Class SetValueBehavior<T> Inheritance System.Object Entity < SetValueBehavior.EntityData <>> Behavior < SetValueBehavior.EntityData <>> SetValueBehavior<T> Implements IDataOwner < SetValueBehavior.EntityData <>> IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetValueBehavior<T>.EntityData>.Clone() Behavior<SetValueBehavior<T>.EntityData>.IDataOwner<IBehaviorData>.Data Entity<SetValueBehavior<T>.EntityData>.GetActiveProcess() Entity<SetValueBehavior<T>.EntityData>.GetDeactivatingProcess() Entity<SetValueBehavior<T>.EntityData>.GetAbortingProcess() Entity<SetValueBehavior<T>.EntityData>.GetConfigurator() Entity<SetValueBehavior<T>.EntityData>.Configure(IMode) Entity<SetValueBehavior<T>.EntityData>.Update() Entity<SetValueBehavior<T>.EntityData>.Data Entity<SetValueBehavior<T>.EntityData>.IDataOwner.Data Entity<SetValueBehavior<T>.EntityData>.LifeCycle Entity<SetValueBehavior<T>.EntityData>.Parent Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/states-data-add-on\")] public class SetValueBehavior<T> : Behavior<SetValueBehavior<T>.EntityData>, IDataOwner<SetValueBehavior<T>.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Type Parameters Name Description T Constructors SetValueBehavior() Declaration public SetValueBehavior() SetValueBehavior(Guid, T) Declaration public SetValueBehavior(Guid propertyId, T value) Parameters Type Name Description System.Guid propertyId T value SetValueBehavior(IDataProperty<T>, T) Declaration public SetValueBehavior(IDataProperty<T> property, T value) Parameters Type Name Description IDataProperty <T> property T value Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Behaviors.SetValueBehavior<T>.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.Behaviors.SubChapter.html": {
    "href": "api/VRBuilder.Core.Behaviors.SubChapter.html",
    "title": "Class SubChapter | VR Builder Documentation",
    "keywords": "Class SubChapter Inheritance System.Object SubChapter Namespace : VRBuilder.Core.Behaviors Assembly : VRBuilder.Core.dll Syntax public class SubChapter : Object Constructors SubChapter(IChapter) Declaration public SubChapter(IChapter chapter) Parameters Type Name Description IChapter chapter SubChapter(IChapter, Boolean) Declaration public SubChapter(IChapter chapter, bool isOptional) Parameters Type Name Description IChapter chapter System.Boolean isOptional Properties Chapter Declaration public IChapter Chapter { get; } Property Value Type Description IChapter IsOptional Declaration public bool IsOptional { get; set; } Property Value Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Chapter.EntityData.html": {
    "href": "api/VRBuilder.Core.Chapter.EntityData.html",
    "title": "Class Chapter.EntityData | VR Builder Documentation",
    "keywords": "Class Chapter.EntityData Inheritance System.Object EntityCollectionData < IStep > Chapter.EntityData Implements IChapterData IEntitySequenceDataWithMode < IStep > IEntitySequenceData < IStep > IEntityCollectionData < IStep > IEntityCollectionData IEntitySequenceData IModeData IRenameableData INamedData IData Inherited Members EntityCollectionData<IStep>.IEntityCollectionData.GetChildren() EntityCollectionData<IStep>.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class EntityData : EntityCollectionData<IStep>, IChapterData, IEntitySequenceDataWithMode<IStep>, IEntitySequenceData<IStep>, IEntityCollectionData<IStep>, IEntityCollectionData, IEntitySequenceData, IModeData, IRenameableData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties Current Declaration public IStep Current { get; set; } Property Value Type Description IStep FirstStep Declaration public IStep FirstStep { get; set; } Property Value Type Description IStep Mode Declaration public IMode Mode { get; set; } Property Value Type Description IMode Name Declaration [HideInProcessInspector] public string Name { get; set; } Property Value Type Description System.String Steps Declaration public IList<IStep> Steps { get; set; } Property Value Type Description System.Collections.Generic.IList < IStep > Methods GetChildren() Declaration public override IEnumerable<IStep> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < IStep > Overrides VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IStep>.GetChildren() SetName(String) Declaration public void SetName(string name) Parameters Type Name Description System.String name Explicit Interface Implementations IEntitySequenceData.Current Declaration IEntity IEntitySequenceData.Current { get; } Returns Type Description IEntity Implements IChapterData IEntitySequenceDataWithMode<TEntity> IEntitySequenceData<TEntity> IEntityCollectionData<TEntity> IEntityCollectionData IEntitySequenceData IModeData IRenameableData INamedData IData"
  },
  "api/VRBuilder.Core.Chapter.html": {
    "href": "api/VRBuilder.Core.Chapter.html",
    "title": "Class Chapter | VR Builder Documentation",
    "keywords": "Class Chapter Inheritance System.Object Entity < Chapter.EntityData > Chapter Implements IDataOwner < Chapter.EntityData > IChapter IEntity IDataOwner < IChapterData > IDataOwner IClonable < IChapter > Inherited Members Entity<Chapter.EntityData>.GetActiveProcess() Entity<Chapter.EntityData>.Configure(IMode) Entity<Chapter.EntityData>.Update() Entity<Chapter.EntityData>.Data Entity<Chapter.EntityData>.IDataOwner.Data Entity<Chapter.EntityData>.LifeCycle Entity<Chapter.EntityData>.Parent Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class Chapter : Entity<Chapter.EntityData>, IDataOwner<Chapter.EntityData>, IChapter, IEntity, IDataOwner<IChapterData>, IDataOwner, IClonable<IChapter> Constructors Chapter() Declaration protected Chapter() Chapter(String, IStep) Declaration public Chapter(string name, IStep firstStep) Parameters Type Name Description System.String name IStep firstStep Properties ChapterMetadata Declaration public ChapterMetadata ChapterMetadata { get; set; } Property Value Type Description ChapterMetadata Methods Clone() Declaration public IChapter Clone() Returns Type Description IChapter GetAbortingProcess() Declaration public override IStageProcess GetAbortingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Chapter.EntityData>.GetAbortingProcess() GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Chapter.EntityData>.GetActivatingProcess() GetConfigurator() Declaration protected override IConfigurator GetConfigurator() Returns Type Description IConfigurator Overrides VRBuilder.Core.Entity<VRBuilder.Core.Chapter.EntityData>.GetConfigurator() GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Chapter.EntityData>.GetDeactivatingProcess() Explicit Interface Implementations IDataOwner<IChapterData>.Data Declaration IChapterData IDataOwner<IChapterData>.Data { get; } Returns Type Description IChapterData Implements IDataOwner<TData> IChapter IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.ChapterMetadata.html": {
    "href": "api/VRBuilder.Core.ChapterMetadata.html",
    "title": "Class ChapterMetadata | VR Builder Documentation",
    "keywords": "Class ChapterMetadata Inheritance System.Object ChapterMetadata Implements IMetadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class ChapterMetadata : Object, IMetadata Constructors ChapterMetadata() Declaration public ChapterMetadata() Properties EntryNodePosition Declaration public Vector2 EntryNodePosition { get; set; } Property Value Type Description UnityEngine.Vector2 Guid Declaration public Guid Guid { get; set; } Property Value Type Description System.Guid LastSelectedStep Declaration public IStep LastSelectedStep { get; set; } Property Value Type Description IStep ViewTransform Declaration public ViewTransform ViewTransform { get; set; } Property Value Type Description ViewTransform Implements IMetadata"
  },
  "api/VRBuilder.Core.CompletableEntity-1.html": {
    "href": "api/VRBuilder.Core.CompletableEntity-1.html",
    "title": "Class CompletableEntity<TData> | VR Builder Documentation",
    "keywords": "Class CompletableEntity<TData> Inheritance System.Object Entity <TData> CompletableEntity<TData> Condition<TData> Transition Implements IDataOwner <TData> IDataOwner ICompletableEntity ICompletable IEntity Inherited Members Entity<TData>.GetActivatingProcess() Entity<TData>.GetActiveProcess() Entity<TData>.GetDeactivatingProcess() Entity<TData>.GetAbortingProcess() Entity<TData>.GetConfigurator() Entity<TData>.Configure(IMode) Entity<TData>.Update() Entity<TData>.Data Entity<TData>.IDataOwner.Data Entity<TData>.LifeCycle Entity<TData>.Parent Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public abstract class CompletableEntity<TData> : Entity<TData>, IDataOwner<TData>, IDataOwner, ICompletableEntity, ICompletable, IEntity where TData : class, ICompletableData, new() Type Parameters Name Description TData Constructors CompletableEntity() Declaration protected CompletableEntity() Properties IsCompleted Declaration public bool IsCompleted { get; } Property Value Type Description System.Boolean Methods Autocomplete() Declaration public void Autocomplete() GetAutocompleter() Declaration protected virtual IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Implements IDataOwner<TData> IDataOwner ICompletableEntity ICompletable IEntity"
  },
  "api/VRBuilder.Core.CompositeProcess.html": {
    "href": "api/VRBuilder.Core.CompositeProcess.html",
    "title": "Class CompositeProcess | VR Builder Documentation",
    "keywords": "Class CompositeProcess Inheritance System.Object CompositeProcess Implements IStageProcess Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class CompositeProcess : Object, IStageProcess Constructors CompositeProcess(IStageProcess[]) Declaration public CompositeProcess(params IStageProcess[] processes) Parameters Type Name Description IStageProcess [] processes Methods End() Declaration public void End() FastForward() Declaration public void FastForward() Start() Declaration public void Start() Update() Declaration public IEnumerator Update() Returns Type Description System.Collections.IEnumerator Implements IStageProcess"
  },
  "api/VRBuilder.Core.Conditions.BaseActiveProcessOverCompletable-1.html": {
    "href": "api/VRBuilder.Core.Conditions.BaseActiveProcessOverCompletable-1.html",
    "title": "Class BaseActiveProcessOverCompletable<TData> | VR Builder Documentation",
    "keywords": "Class BaseActiveProcessOverCompletable<TData> Inheritance System.Object StageProcess <TData> BaseActiveProcessOverCompletable<TData> Implements IStageProcess Inherited Members StageProcess<TData>.Data StageProcess<TData>.Outer Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax public abstract class BaseActiveProcessOverCompletable<TData> : StageProcess<TData>, IStageProcess where TData : class, ICompletableData Type Parameters Name Description TData Constructors BaseActiveProcessOverCompletable(TData, IEntity) Declaration protected BaseActiveProcessOverCompletable(TData data, IEntity outer = null) Parameters Type Name Description TData data IEntity outer Methods CheckIfCompleted() Declaration protected abstract bool CheckIfCompleted() Returns Type Description System.Boolean End() Declaration public override void End() Overrides VRBuilder.Core.StageProcess<TData>.End() FastForward() Declaration public override void FastForward() Overrides VRBuilder.Core.StageProcess<TData>.FastForward() Start() Declaration public override void Start() Overrides VRBuilder.Core.StageProcess<TData>.Start() Update() Declaration public override IEnumerator Update() Returns Type Description System.Collections.IEnumerator Overrides VRBuilder.Core.StageProcess<TData>.Update() Implements IStageProcess"
  },
  "api/VRBuilder.Core.Conditions.CompareValuesCondition-1.EntityData.html": {
    "href": "api/VRBuilder.Core.Conditions.CompareValuesCondition-1.EntityData.html",
    "title": "Class CompareValuesCondition<T>.EntityData | VR Builder Documentation",
    "keywords": "Class CompareValuesCondition<T>.EntityData Inheritance System.Object CompareValuesCondition<T>.EntityData Implements IConditionData ICompletableData INamedData IData Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Compare Values\")] public class EntityData : Object, IConditionData, ICompletableData, INamedData, IData Constructors EntityData() Declaration public EntityData() Fields Left Declaration [HideInProcessInspector] public ProcessVariableSelectableValue<T> Left Field Value Type Description ProcessVariableSelectableValue <T> Right Declaration [HideInProcessInspector] public ProcessVariableSelectableValue<T> Right Field Value Type Description ProcessVariableSelectableValue <T> Properties IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration [HideInProcessInspector] public string Name { get; } Property Value Type Description System.String Operation Declaration [HideInProcessInspector] public IOperationCommand<T, bool> Operation { get; set; } Property Value Type Description IOperationCommand <T, System.Boolean > Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.Core.Conditions.CompareValuesCondition-1.html": {
    "href": "api/VRBuilder.Core.Conditions.CompareValuesCondition-1.html",
    "title": "Class CompareValuesCondition<T> | VR Builder Documentation",
    "keywords": "Class CompareValuesCondition<T> Inheritance System.Object Entity < CompareValuesCondition.EntityData <>> CompletableEntity < CompareValuesCondition.EntityData <>> Condition < CompareValuesCondition.EntityData <>> CompareValuesCondition<T> Implements IDataOwner < CompareValuesCondition.EntityData <>> ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<CompareValuesCondition<T>.EntityData>.Clone() Condition<CompareValuesCondition<T>.EntityData>.GetLockableProperties() Condition<CompareValuesCondition<T>.EntityData>.IDataOwner<IConditionData>.Data CompletableEntity<CompareValuesCondition<T>.EntityData>.GetAutocompleter() CompletableEntity<CompareValuesCondition<T>.EntityData>.Autocomplete() CompletableEntity<CompareValuesCondition<T>.EntityData>.IsCompleted Entity<CompareValuesCondition<T>.EntityData>.GetActivatingProcess() Entity<CompareValuesCondition<T>.EntityData>.GetDeactivatingProcess() Entity<CompareValuesCondition<T>.EntityData>.GetAbortingProcess() Entity<CompareValuesCondition<T>.EntityData>.GetConfigurator() Entity<CompareValuesCondition<T>.EntityData>.Configure(IMode) Entity<CompareValuesCondition<T>.EntityData>.Update() Entity<CompareValuesCondition<T>.EntityData>.Data Entity<CompareValuesCondition<T>.EntityData>.IDataOwner.Data Entity<CompareValuesCondition<T>.EntityData>.LifeCycle Entity<CompareValuesCondition<T>.EntityData>.Parent Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/states-data-add-on\")] public class CompareValuesCondition<T> : Condition<CompareValuesCondition<T>.EntityData>, IDataOwner<CompareValuesCondition<T>.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider where T : IEquatable<T>, IComparable<T> Type Parameters Name Description T Constructors CompareValuesCondition() Declaration public CompareValuesCondition() CompareValuesCondition(Guid, Guid, T, T, Boolean, Boolean, IOperationCommand<T, Boolean>) Declaration public CompareValuesCondition(Guid leftPropertyId, Guid rightPropertyId, T leftValue, T rightValue, bool isLeftConst, bool isRightConst, IOperationCommand<T, bool> operation) Parameters Type Name Description System.Guid leftPropertyId System.Guid rightPropertyId T leftValue T rightValue System.Boolean isLeftConst System.Boolean isRightConst IOperationCommand <T, System.Boolean > operation CompareValuesCondition(IDataProperty<T>, IDataProperty<T>, T, T, Boolean, Boolean, IOperationCommand<T, Boolean>) Declaration public CompareValuesCondition(IDataProperty<T> leftProperty, IDataProperty<T> rightProperty, T leftValue, T rightValue, bool isLeftConst, bool isRightConst, IOperationCommand<T, bool> operation) Parameters Type Name Description IDataProperty <T> leftProperty IDataProperty <T> rightProperty T leftValue T rightValue System.Boolean isLeftConst System.Boolean isRightConst IOperationCommand <T, System.Boolean > operation Methods GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Conditions.CompareValuesCondition<T>.EntityData>.GetActiveProcess() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.Core.Conditions.Condition-1.html": {
    "href": "api/VRBuilder.Core.Conditions.Condition-1.html",
    "title": "Class Condition<TData> | VR Builder Documentation",
    "keywords": "Class Condition<TData> Inheritance System.Object Entity <TData> CompletableEntity <TData> Condition<TData> GrabbedCondition LinearControlsCondition<TProperty> MomentaryControlsCondition<TProperty> ReleasedCondition SnappedCondition TeleportCondition ToggleControlsCondition<TProperty> TouchedCondition UsedCondition CompareValuesCondition<T> ObjectInColliderCondition ObjectInRangeCondition TimeoutCondition CheckStateCondition RandomlySelectedCondition Implements IDataOwner <TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members CompletableEntity<TData>.GetAutocompleter() CompletableEntity<TData>.Autocomplete() CompletableEntity<TData>.IsCompleted Entity<TData>.GetActivatingProcess() Entity<TData>.GetActiveProcess() Entity<TData>.GetDeactivatingProcess() Entity<TData>.GetAbortingProcess() Entity<TData>.GetConfigurator() Entity<TData>.Configure(IMode) Entity<TData>.Update() Entity<TData>.Data Entity<TData>.IDataOwner.Data Entity<TData>.LifeCycle Entity<TData>.Parent Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax public abstract class Condition<TData> : CompletableEntity<TData>, IDataOwner<TData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider where TData : class, IConditionData, new() Type Parameters Name Description TData Constructors Condition() Declaration protected Condition() Methods Clone() Declaration public virtual ICondition Clone() Returns Type Description ICondition GetLockableProperties() Declaration public virtual IEnumerable<LockablePropertyData> GetLockableProperties() Returns Type Description System.Collections.Generic.IEnumerable < LockablePropertyData > Explicit Interface Implementations IDataOwner<IConditionData>.Data Declaration IConditionData IDataOwner<IConditionData>.Data { get; } Returns Type Description IConditionData Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.Core.Conditions.html": {
    "href": "api/VRBuilder.Core.Conditions.html",
    "title": "Namespace VRBuilder.Core.Conditions | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Conditions Classes BaseActiveProcessOverCompletable<TData> CompareValuesCondition<T> CompareValuesCondition<T>.EntityData Condition<TData> ObjectInColliderCondition ObjectInColliderCondition.EntityData ObjectInRangeCondition ObjectInRangeCondition.EntityData ObjectInTargetActiveProcess<TData> TimeoutCondition TimeoutCondition.EntityData Interfaces ICompletableData ICondition IConditionData IObjectInTargetData"
  },
  "api/VRBuilder.Core.Conditions.ICompletableData.html": {
    "href": "api/VRBuilder.Core.Conditions.ICompletableData.html",
    "title": "Interface ICompletableData | VR Builder Documentation",
    "keywords": "Interface ICompletableData Inherited Members IData.Metadata Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax public interface ICompletableData : IData Properties IsCompleted Declaration bool IsCompleted { get; set; } Property Value Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Conditions.ICondition.html": {
    "href": "api/VRBuilder.Core.Conditions.ICondition.html",
    "title": "Interface ICondition | VR Builder Documentation",
    "keywords": "Interface ICondition Inherited Members ICompletable.Autocomplete() ICompletable.IsCompleted IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.GetAbortingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.LifeCycle IEntity.Parent IDataOwner<IConditionData>.Data IClonable<ICondition>.Clone() Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax public interface ICondition : ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>"
  },
  "api/VRBuilder.Core.Conditions.IConditionData.html": {
    "href": "api/VRBuilder.Core.Conditions.IConditionData.html",
    "title": "Interface IConditionData | VR Builder Documentation",
    "keywords": "Interface IConditionData Inherited Members ICompletableData.IsCompleted INamedData.Name IData.Metadata Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax public interface IConditionData : ICompletableData, INamedData, IData"
  },
  "api/VRBuilder.Core.Conditions.IObjectInTargetData.html": {
    "href": "api/VRBuilder.Core.Conditions.IObjectInTargetData.html",
    "title": "Interface IObjectInTargetData | VR Builder Documentation",
    "keywords": "Interface IObjectInTargetData Inherited Members ICompletableData.IsCompleted INamedData.Name IData.Metadata Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax public interface IObjectInTargetData : IConditionData, ICompletableData, INamedData, IData Properties RequiredTimeInside Declaration float RequiredTimeInside { get; set; } Property Value Type Description System.Single"
  },
  "api/VRBuilder.Core.Conditions.ObjectInColliderCondition.EntityData.html": {
    "href": "api/VRBuilder.Core.Conditions.ObjectInColliderCondition.EntityData.html",
    "title": "Class ObjectInColliderCondition.EntityData | VR Builder Documentation",
    "keywords": "Class ObjectInColliderCondition.EntityData Inheritance System.Object ObjectInColliderCondition.EntityData Implements IObjectInTargetData IConditionData ICompletableData INamedData IData Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Move Object into Collider\")] public class EntityData : Object, IObjectInTargetData, IConditionData, ICompletableData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration [HideInProcessInspector] public string Name { get; } Property Value Type Description System.String ObjectsRequiredInTrigger Declaration [DisplayName(\"Required Object count\")] public float ObjectsRequiredInTrigger { get; set; } Property Value Type Description System.Single RequiredTimeInside Declaration [DisplayName(\"Required seconds inside\")] public float RequiredTimeInside { get; set; } Property Value Type Description System.Single TargetObjects Declaration [DisplayName(\"Objects\")] public MultipleSceneObjectReference TargetObjects { get; set; } Property Value Type Description MultipleSceneObjectReference TriggerObject Declaration [DisplayName(\"Collider\")] public SingleScenePropertyReference<ColliderWithTriggerProperty> TriggerObject { get; set; } Property Value Type Description SingleScenePropertyReference < ColliderWithTriggerProperty > Implements IObjectInTargetData IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.Core.Conditions.ObjectInColliderCondition.html": {
    "href": "api/VRBuilder.Core.Conditions.ObjectInColliderCondition.html",
    "title": "Class ObjectInColliderCondition | VR Builder Documentation",
    "keywords": "Class ObjectInColliderCondition Inheritance System.Object Entity < ObjectInColliderCondition.EntityData > CompletableEntity < ObjectInColliderCondition.EntityData > Condition < ObjectInColliderCondition.EntityData > ObjectInColliderCondition Implements IDataOwner < ObjectInColliderCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<ObjectInColliderCondition.EntityData>.Clone() Condition<ObjectInColliderCondition.EntityData>.GetLockableProperties() Condition<ObjectInColliderCondition.EntityData>.IDataOwner<IConditionData>.Data CompletableEntity<ObjectInColliderCondition.EntityData>.Autocomplete() CompletableEntity<ObjectInColliderCondition.EntityData>.IsCompleted Entity<ObjectInColliderCondition.EntityData>.GetActivatingProcess() Entity<ObjectInColliderCondition.EntityData>.GetDeactivatingProcess() Entity<ObjectInColliderCondition.EntityData>.GetAbortingProcess() Entity<ObjectInColliderCondition.EntityData>.GetConfigurator() Entity<ObjectInColliderCondition.EntityData>.Configure(IMode) Entity<ObjectInColliderCondition.EntityData>.Update() Entity<ObjectInColliderCondition.EntityData>.Data Entity<ObjectInColliderCondition.EntityData>.IDataOwner.Data Entity<ObjectInColliderCondition.EntityData>.LifeCycle Entity<ObjectInColliderCondition.EntityData>.Parent Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-conditions/move-object-in-collider\")] public class ObjectInColliderCondition : Condition<ObjectInColliderCondition.EntityData>, IDataOwner<ObjectInColliderCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors ObjectInColliderCondition() Declaration public ObjectInColliderCondition() ObjectInColliderCondition(Guid, Guid, Single, Single) Declaration public ObjectInColliderCondition(Guid targetPosition, Guid targetObject, float requiredTimeInTarget = 0F, float objectsRequiredInTrigger = 1F) Parameters Type Name Description System.Guid targetPosition System.Guid targetObject System.Single requiredTimeInTarget System.Single objectsRequiredInTrigger ObjectInColliderCondition(ColliderWithTriggerProperty, IReadOnlyList<Guid>, Int32, Int32) Declaration public ObjectInColliderCondition(ColliderWithTriggerProperty targetPosition, IReadOnlyList<Guid> multipleObjectsGuids, int requiredTimeInTarget, int objectsRequiredInTrigger) Parameters Type Name Description ColliderWithTriggerProperty targetPosition System.Collections.Generic.IReadOnlyList < System.Guid > multipleObjectsGuids System.Int32 requiredTimeInTarget System.Int32 objectsRequiredInTrigger ObjectInColliderCondition(ColliderWithTriggerProperty, ISceneObject, Single, Single) Declaration public ObjectInColliderCondition(ColliderWithTriggerProperty targetPosition, ISceneObject targetObject, float requiredTimeInTarget = 0F, float objectsRequiredInTrigger = 1F) Parameters Type Name Description ColliderWithTriggerProperty targetPosition ISceneObject targetObject System.Single requiredTimeInTarget System.Single objectsRequiredInTrigger Methods GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Conditions.ObjectInColliderCondition.EntityData>.GetActiveProcess() GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.Core.Conditions.ObjectInColliderCondition.EntityData>.GetAutocompleter() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.Core.Conditions.ObjectInRangeCondition.EntityData.html": {
    "href": "api/VRBuilder.Core.Conditions.ObjectInRangeCondition.EntityData.html",
    "title": "Class ObjectInRangeCondition.EntityData | VR Builder Documentation",
    "keywords": "Class ObjectInRangeCondition.EntityData Inheritance System.Object ObjectInRangeCondition.EntityData Implements IObjectInTargetData IConditionData ICompletableData INamedData IData Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Object Nearby\")] public class EntityData : Object, IObjectInTargetData, IConditionData, ICompletableData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration [HideInProcessInspector] public string Name { get; } Property Value Type Description System.String Range Declaration public float Range { get; set; } Property Value Type Description System.Single ReferenceObject Declaration [DisplayName(\"Reference object\")] public SingleScenePropertyReference<TransformInRangeDetectorProperty> ReferenceObject { get; set; } Property Value Type Description SingleScenePropertyReference < TransformInRangeDetectorProperty > RequiredTimeInside Declaration [DisplayName(\"Required seconds inside\")] public float RequiredTimeInside { get; set; } Property Value Type Description System.Single TargetObject Declaration [DisplayName(\"Tracked object\")] public SingleSceneObjectReference TargetObject { get; set; } Property Value Type Description SingleSceneObjectReference Implements IObjectInTargetData IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.Core.Conditions.ObjectInRangeCondition.html": {
    "href": "api/VRBuilder.Core.Conditions.ObjectInRangeCondition.html",
    "title": "Class ObjectInRangeCondition | VR Builder Documentation",
    "keywords": "Class ObjectInRangeCondition Inheritance System.Object Entity < ObjectInRangeCondition.EntityData > CompletableEntity < ObjectInRangeCondition.EntityData > Condition < ObjectInRangeCondition.EntityData > ObjectInRangeCondition Implements IDataOwner < ObjectInRangeCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<ObjectInRangeCondition.EntityData>.Clone() Condition<ObjectInRangeCondition.EntityData>.GetLockableProperties() Condition<ObjectInRangeCondition.EntityData>.IDataOwner<IConditionData>.Data CompletableEntity<ObjectInRangeCondition.EntityData>.Autocomplete() CompletableEntity<ObjectInRangeCondition.EntityData>.IsCompleted Entity<ObjectInRangeCondition.EntityData>.GetActivatingProcess() Entity<ObjectInRangeCondition.EntityData>.GetDeactivatingProcess() Entity<ObjectInRangeCondition.EntityData>.GetAbortingProcess() Entity<ObjectInRangeCondition.EntityData>.GetConfigurator() Entity<ObjectInRangeCondition.EntityData>.Configure(IMode) Entity<ObjectInRangeCondition.EntityData>.Update() Entity<ObjectInRangeCondition.EntityData>.Data Entity<ObjectInRangeCondition.EntityData>.IDataOwner.Data Entity<ObjectInRangeCondition.EntityData>.LifeCycle Entity<ObjectInRangeCondition.EntityData>.Parent Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-conditions/object-nearby\")] public class ObjectInRangeCondition : Condition<ObjectInRangeCondition.EntityData>, IDataOwner<ObjectInRangeCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors ObjectInRangeCondition() Declaration public ObjectInRangeCondition() ObjectInRangeCondition(Guid, Guid, Single, Single) Declaration public ObjectInRangeCondition(Guid targetId, Guid detector, float range, float requiredTimeInTarget = 0F) Parameters Type Name Description System.Guid targetId System.Guid detector System.Single range System.Single requiredTimeInTarget ObjectInRangeCondition(ISceneObject, TransformInRangeDetectorProperty, Single, Single) Declaration public ObjectInRangeCondition(ISceneObject target, TransformInRangeDetectorProperty detector, float range, float requiredTimeInTarget = 0F) Parameters Type Name Description ISceneObject target TransformInRangeDetectorProperty detector System.Single range System.Single requiredTimeInTarget Methods GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Conditions.ObjectInRangeCondition.EntityData>.GetActiveProcess() GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.Core.Conditions.ObjectInRangeCondition.EntityData>.GetAutocompleter() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.Core.Conditions.ObjectInTargetActiveProcess-1.html": {
    "href": "api/VRBuilder.Core.Conditions.ObjectInTargetActiveProcess-1.html",
    "title": "Class ObjectInTargetActiveProcess<TData> | VR Builder Documentation",
    "keywords": "Class ObjectInTargetActiveProcess<TData> Inheritance System.Object StageProcess <TData> ObjectInTargetActiveProcess<TData> Implements IStageProcess Inherited Members StageProcess<TData>.Data StageProcess<TData>.Outer Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax public abstract class ObjectInTargetActiveProcess<TData> : StageProcess<TData>, IStageProcess where TData : class, IObjectInTargetData Type Parameters Name Description TData Constructors ObjectInTargetActiveProcess(TData) Declaration protected ObjectInTargetActiveProcess(TData data) Parameters Type Name Description TData data Methods End() Declaration public override void End() Overrides VRBuilder.Core.StageProcess<TData>.End() FastForward() Declaration public override void FastForward() Overrides VRBuilder.Core.StageProcess<TData>.FastForward() IsInside() Declaration protected abstract bool IsInside() Returns Type Description System.Boolean Start() Declaration public override void Start() Overrides VRBuilder.Core.StageProcess<TData>.Start() Update() Declaration public override IEnumerator Update() Returns Type Description System.Collections.IEnumerator Overrides VRBuilder.Core.StageProcess<TData>.Update() Implements IStageProcess"
  },
  "api/VRBuilder.Core.Conditions.TimeoutCondition.EntityData.html": {
    "href": "api/VRBuilder.Core.Conditions.TimeoutCondition.EntityData.html",
    "title": "Class TimeoutCondition.EntityData | VR Builder Documentation",
    "keywords": "Class TimeoutCondition.EntityData Inheritance System.Object TimeoutCondition.EntityData Implements IConditionData ICompletableData INamedData IData Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Timeout\")] public class EntityData : Object, IConditionData, ICompletableData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration [HideInProcessInspector] public string Name { get; } Property Value Type Description System.String Timeout Declaration [DisplayName(\"Wait (in seconds)\")] public float Timeout { get; set; } Property Value Type Description System.Single Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.Core.Conditions.TimeoutCondition.html": {
    "href": "api/VRBuilder.Core.Conditions.TimeoutCondition.html",
    "title": "Class TimeoutCondition | VR Builder Documentation",
    "keywords": "Class TimeoutCondition Inheritance System.Object Entity < TimeoutCondition.EntityData > CompletableEntity < TimeoutCondition.EntityData > Condition < TimeoutCondition.EntityData > TimeoutCondition Implements IDataOwner < TimeoutCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<TimeoutCondition.EntityData>.Clone() Condition<TimeoutCondition.EntityData>.GetLockableProperties() Condition<TimeoutCondition.EntityData>.IDataOwner<IConditionData>.Data CompletableEntity<TimeoutCondition.EntityData>.GetAutocompleter() CompletableEntity<TimeoutCondition.EntityData>.Autocomplete() CompletableEntity<TimeoutCondition.EntityData>.IsCompleted Entity<TimeoutCondition.EntityData>.GetActivatingProcess() Entity<TimeoutCondition.EntityData>.GetDeactivatingProcess() Entity<TimeoutCondition.EntityData>.GetAbortingProcess() Entity<TimeoutCondition.EntityData>.GetConfigurator() Entity<TimeoutCondition.EntityData>.Configure(IMode) Entity<TimeoutCondition.EntityData>.Update() Entity<TimeoutCondition.EntityData>.Data Entity<TimeoutCondition.EntityData>.IDataOwner.Data Entity<TimeoutCondition.EntityData>.LifeCycle Entity<TimeoutCondition.EntityData>.Parent Namespace : VRBuilder.Core.Conditions Assembly : VRBuilder.Core.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder/manual/default-conditions/timeout-condition\")] public class TimeoutCondition : Condition<TimeoutCondition.EntityData>, IDataOwner<TimeoutCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors TimeoutCondition() Declaration public TimeoutCondition() TimeoutCondition(Single) Declaration public TimeoutCondition(float timeout) Parameters Type Name Description System.Single timeout Methods GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Conditions.TimeoutCondition.EntityData>.GetActiveProcess() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.Core.Configuration.BaseRuntimeConfiguration.html": {
    "href": "api/VRBuilder.Core.Configuration.BaseRuntimeConfiguration.html",
    "title": "Class BaseRuntimeConfiguration | VR Builder Documentation",
    "keywords": "Class BaseRuntimeConfiguration Inheritance System.Object BaseRuntimeConfiguration DefaultRuntimeConfiguration NetcodeRuntimeConfiguration Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public abstract class BaseRuntimeConfiguration : Object Constructors BaseRuntimeConfiguration() Declaration protected BaseRuntimeConfiguration() BaseRuntimeConfiguration(StepLockHandlingStrategy) Declaration protected BaseRuntimeConfiguration(StepLockHandlingStrategy lockHandling) Parameters Type Name Description StepLockHandlingStrategy lockHandling Fields logConsole Declaration protected ILogConsole logConsole Field Value Type Description ILogConsole Properties CurrentInputActionAsset Declaration public virtual InputActionAsset CurrentInputActionAsset { get; set; } Property Value Type Description UnityEngine.InputSystem.InputActionAsset CustomInputActionAssetPath Declaration public virtual string CustomInputActionAssetPath { get; } Property Value Type Description System.String DefaultInputActionAssetPath Declaration public virtual string DefaultInputActionAssetPath { get; } Property Value Type Description System.String InstructionPlayer Declaration public abstract AudioSource InstructionPlayer { get; } Property Value Type Description UnityEngine.AudioSource LocalUser Declaration public abstract UserSceneObject LocalUser { get; } Property Value Type Description UserSceneObject ManifestFileName Declaration public static string ManifestFileName { get; } Property Value Type Description System.String Modes Declaration public IModeHandler Modes { get; protected set; } Property Value Type Description IModeHandler ProcessAudioPlayer Declaration public abstract IProcessAudioPlayer ProcessAudioPlayer { get; } Property Value Type Description IProcessAudioPlayer SceneConfiguration Declaration public virtual ISceneConfiguration SceneConfiguration { get; } Property Value Type Description ISceneConfiguration SceneObjectManager Declaration public abstract ISceneObjectManager SceneObjectManager { get; } Property Value Type Description ISceneObjectManager SceneObjectRegistry Declaration public virtual ISceneObjectRegistry SceneObjectRegistry { get; } Property Value Type Description ISceneObjectRegistry Serializer Declaration public IProcessSerializer Serializer { get; set; } Property Value Type Description IProcessSerializer StepLockHandling Declaration public StepLockHandlingStrategy StepLockHandling { get; set; } Property Value Type Description StepLockHandlingStrategy User Declaration public abstract IXRRigTransform User { get; } Property Value Type Description IXRRigTransform UserTransforms Declaration public abstract IEnumerable<IXRRigTransform> UserTransforms { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IXRRigTransform > WorldConsole Declaration public ILogConsole WorldConsole { get; } Property Value Type Description ILogConsole WorldConsolePrefab Declaration public virtual string WorldConsolePrefab { get; } Property Value Type Description System.String Methods LoadProcess(String) Declaration public virtual Task<IProcess> LoadProcess(string path) Parameters Type Name Description System.String path Returns Type Description System.Threading.Tasks.Task < IProcess > Extension Methods RuntimeConfigurationExtensions.GetTextToSpeechConfiguration(BaseRuntimeConfiguration) RuntimeConfigurationExtensions.GetTextToSpeechSettings(BaseRuntimeConfiguration) RuntimeConfigurationExtensions.SetTextToSpeechConfiguration(BaseRuntimeConfiguration, ITextToSpeechConfiguration) RuntimeConfigurationExtensions.GetPermissionHandler(BaseRuntimeConfiguration) RuntimeConfigurationExtensions.SetPermissionHandler(BaseRuntimeConfiguration, IPermissionHandler)"
  },
  "api/VRBuilder.Core.Configuration.DefaultAudioPlayer.html": {
    "href": "api/VRBuilder.Core.Configuration.DefaultAudioPlayer.html",
    "title": "Class DefaultAudioPlayer | VR Builder Documentation",
    "keywords": "Class DefaultAudioPlayer Inheritance System.Object DefaultAudioPlayer Implements IProcessAudioPlayer Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public class DefaultAudioPlayer : Object, IProcessAudioPlayer Constructors DefaultAudioPlayer() Declaration public DefaultAudioPlayer() DefaultAudioPlayer(AudioSource) Declaration public DefaultAudioPlayer(AudioSource audioSource) Parameters Type Name Description UnityEngine.AudioSource audioSource Properties FallbackAudioSource Declaration public AudioSource FallbackAudioSource { get; } Property Value Type Description UnityEngine.AudioSource IsPlaying Declaration public bool IsPlaying { get; } Property Value Type Description System.Boolean Methods PlayAudio(IAudioData, Single, Single) Declaration public void PlayAudio(IAudioData audioData, float volume = 1F, float pitch = 1F) Parameters Type Name Description IAudioData audioData System.Single volume System.Single pitch Reset() Declaration public void Reset() Stop() Declaration public void Stop() Implements IProcessAudioPlayer"
  },
  "api/VRBuilder.Core.Configuration.DefaultRuntimeConfiguration.html": {
    "href": "api/VRBuilder.Core.Configuration.DefaultRuntimeConfiguration.html",
    "title": "Class DefaultRuntimeConfiguration | VR Builder Documentation",
    "keywords": "Class DefaultRuntimeConfiguration Inheritance System.Object BaseRuntimeConfiguration DefaultRuntimeConfiguration Inherited Members BaseRuntimeConfiguration.logConsole BaseRuntimeConfiguration.LoadProcess(String) BaseRuntimeConfiguration.ManifestFileName BaseRuntimeConfiguration.SceneObjectRegistry BaseRuntimeConfiguration.Serializer BaseRuntimeConfiguration.DefaultInputActionAssetPath BaseRuntimeConfiguration.CustomInputActionAssetPath BaseRuntimeConfiguration.CurrentInputActionAsset BaseRuntimeConfiguration.Modes BaseRuntimeConfiguration.StepLockHandling BaseRuntimeConfiguration.WorldConsolePrefab BaseRuntimeConfiguration.WorldConsole BaseRuntimeConfiguration.SceneConfiguration Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public class DefaultRuntimeConfiguration : BaseRuntimeConfiguration Constructors DefaultRuntimeConfiguration() Declaration public DefaultRuntimeConfiguration() Fields DefaultMode Declaration public static readonly IMode DefaultMode Field Value Type Description IMode Properties InstructionPlayer Declaration public override AudioSource InstructionPlayer { get; } Property Value Type Description UnityEngine.AudioSource Overrides BaseRuntimeConfiguration.InstructionPlayer LocalUser Declaration public override UserSceneObject LocalUser { get; } Property Value Type Description UserSceneObject Overrides BaseRuntimeConfiguration.LocalUser ProcessAudioPlayer Declaration public override IProcessAudioPlayer ProcessAudioPlayer { get; } Property Value Type Description IProcessAudioPlayer Overrides BaseRuntimeConfiguration.ProcessAudioPlayer SceneObjectManager Declaration public override ISceneObjectManager SceneObjectManager { get; } Property Value Type Description ISceneObjectManager Overrides BaseRuntimeConfiguration.SceneObjectManager User Declaration public override IXRRigTransform User { get; } Property Value Type Description IXRRigTransform Overrides BaseRuntimeConfiguration.User UserTransforms Declaration public override IEnumerable<IXRRigTransform> UserTransforms { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IXRRigTransform > Overrides BaseRuntimeConfiguration.UserTransforms Extension Methods RuntimeConfigurationExtensions.GetTextToSpeechConfiguration(BaseRuntimeConfiguration) RuntimeConfigurationExtensions.GetTextToSpeechSettings(BaseRuntimeConfiguration) RuntimeConfigurationExtensions.SetTextToSpeechConfiguration(BaseRuntimeConfiguration, ITextToSpeechConfiguration) RuntimeConfigurationExtensions.GetPermissionHandler(BaseRuntimeConfiguration) RuntimeConfigurationExtensions.SetPermissionHandler(BaseRuntimeConfiguration, IPermissionHandler)"
  },
  "api/VRBuilder.Core.Configuration.DefaultSceneObjectManager.html": {
    "href": "api/VRBuilder.Core.Configuration.DefaultSceneObjectManager.html",
    "title": "Class DefaultSceneObjectManager | VR Builder Documentation",
    "keywords": "Class DefaultSceneObjectManager Inheritance System.Object DefaultSceneObjectManager Implements ISceneObjectManager Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public class DefaultSceneObjectManager : Object, ISceneObjectManager Constructors DefaultSceneObjectManager() Declaration public DefaultSceneObjectManager() Methods InstantiatePrefab(GameObject, Vector3, Quaternion, Action<GameObject>) Declaration public void InstantiatePrefab(GameObject prefab, Vector3 position, Quaternion rotation, Action<GameObject> onPrefabInstantiated = null) Parameters Type Name Description UnityEngine.GameObject prefab UnityEngine.Vector3 position UnityEngine.Quaternion rotation System.Action < UnityEngine.GameObject > onPrefabInstantiated RequestAuthority(ISceneObject, Action<ISceneObject>) Declaration public void RequestAuthority(ISceneObject sceneObject, Action<ISceneObject> onAuthorityGranted = null) Parameters Type Name Description ISceneObject sceneObject System.Action < ISceneObject > onAuthorityGranted SetComponentActive(ISceneObject, String, Boolean) Declaration public void SetComponentActive(ISceneObject sceneObject, string componentTypeName, bool isActive) Parameters Type Name Description ISceneObject sceneObject System.String componentTypeName System.Boolean isActive SetSceneObjectActive(ISceneObject, Boolean) Declaration public void SetSceneObjectActive(ISceneObject sceneObject, bool isActive) Parameters Type Name Description ISceneObject sceneObject System.Boolean isActive Implements ISceneObjectManager"
  },
  "api/VRBuilder.Core.Configuration.html": {
    "href": "api/VRBuilder.Core.Configuration.html",
    "title": "Namespace VRBuilder.Core.Configuration | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Configuration Classes BaseRuntimeConfiguration DefaultAudioPlayer DefaultRuntimeConfiguration DefaultSceneObjectManager PropertyExtensionExclusionList RuntimeConfigurator SceneConfiguration Interfaces IInteractionComponentConfiguration IProcessAudioPlayer ISceneConfiguration ISceneObjectManager"
  },
  "api/VRBuilder.Core.Configuration.IInteractionComponentConfiguration.html": {
    "href": "api/VRBuilder.Core.Configuration.IInteractionComponentConfiguration.html",
    "title": "Interface IInteractionComponentConfiguration | VR Builder Documentation",
    "keywords": "Interface IInteractionComponentConfiguration Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public interface IInteractionComponentConfiguration Properties DefaultRigPrefab Declaration string DefaultRigPrefab { get; } Property Value Type Description System.String DisplayName Declaration string DisplayName { get; } Property Value Type Description System.String IsXRInteractionComponent Declaration bool IsXRInteractionComponent { get; } Property Value Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Configuration.IProcessAudioPlayer.html": {
    "href": "api/VRBuilder.Core.Configuration.IProcessAudioPlayer.html",
    "title": "Interface IProcessAudioPlayer | VR Builder Documentation",
    "keywords": "Interface IProcessAudioPlayer Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public interface IProcessAudioPlayer Properties FallbackAudioSource Declaration AudioSource FallbackAudioSource { get; } Property Value Type Description UnityEngine.AudioSource IsPlaying Declaration bool IsPlaying { get; } Property Value Type Description System.Boolean Methods PlayAudio(IAudioData, Single, Single) Declaration void PlayAudio(IAudioData audioData, float volume = 1F, float pitch = 1F) Parameters Type Name Description IAudioData audioData System.Single volume System.Single pitch Reset() Declaration void Reset() Stop() Declaration void Stop()"
  },
  "api/VRBuilder.Core.Configuration.ISceneConfiguration.html": {
    "href": "api/VRBuilder.Core.Configuration.ISceneConfiguration.html",
    "title": "Interface ISceneConfiguration | VR Builder Documentation",
    "keywords": "Interface ISceneConfiguration Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public interface ISceneConfiguration Properties DefaultConfettiPrefab Declaration string DefaultConfettiPrefab { get; } Property Value Type Description System.String ExtensionAssembliesWhitelist Declaration IEnumerable<string> ExtensionAssembliesWhitelist { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > Methods IsAllowedInAssembly(Type, String) Declaration bool IsAllowedInAssembly(Type extensionType, string assemblyName) Parameters Type Name Description System.Type extensionType System.String assemblyName Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Configuration.ISceneObjectManager.html": {
    "href": "api/VRBuilder.Core.Configuration.ISceneObjectManager.html",
    "title": "Interface ISceneObjectManager | VR Builder Documentation",
    "keywords": "Interface ISceneObjectManager Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public interface ISceneObjectManager Methods InstantiatePrefab(GameObject, Vector3, Quaternion, Action<GameObject>) Declaration void InstantiatePrefab(GameObject prefab, Vector3 position, Quaternion rotation, Action<GameObject> onPrefabInstantiated = null) Parameters Type Name Description UnityEngine.GameObject prefab UnityEngine.Vector3 position UnityEngine.Quaternion rotation System.Action < UnityEngine.GameObject > onPrefabInstantiated RequestAuthority(ISceneObject, Action<ISceneObject>) Declaration void RequestAuthority(ISceneObject sceneObject, Action<ISceneObject> onAuthorityGranted = null) Parameters Type Name Description ISceneObject sceneObject System.Action < ISceneObject > onAuthorityGranted SetComponentActive(ISceneObject, String, Boolean) Declaration void SetComponentActive(ISceneObject sceneObject, string componentTypeName, bool isActive) Parameters Type Name Description ISceneObject sceneObject System.String componentTypeName System.Boolean isActive SetSceneObjectActive(ISceneObject, Boolean) Declaration void SetSceneObjectActive(ISceneObject sceneObject, bool isActive) Parameters Type Name Description ISceneObject sceneObject System.Boolean isActive"
  },
  "api/VRBuilder.Core.Configuration.Modes.BaseModeHandler.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.BaseModeHandler.html",
    "title": "Class BaseModeHandler | VR Builder Documentation",
    "keywords": "Class BaseModeHandler Inheritance System.Object BaseModeHandler Implements IModeHandler Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public sealed class BaseModeHandler : Object, IModeHandler Constructors BaseModeHandler(List<IMode>, Int32) Declaration public BaseModeHandler(List<IMode> modes, int defaultMode = 0) Parameters Type Name Description System.Collections.Generic.List < IMode > modes System.Int32 defaultMode Properties AvailableModes Declaration public ReadOnlyCollection<IMode> AvailableModes { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < IMode > CurrentMode Declaration public IMode CurrentMode { get; } Property Value Type Description IMode CurrentModeIndex Declaration public int CurrentModeIndex { get; } Property Value Type Description System.Int32 Methods SetMode(Int32) Declaration public void SetMode(int index) Parameters Type Name Description System.Int32 index SetMode(IMode) Declaration public void SetMode(IMode mode) Parameters Type Name Description IMode mode Events ModeChanged Declaration public event EventHandler<ModeChangedEventArgs> ModeChanged Event Type Type Description System.EventHandler < ModeChangedEventArgs > Implements IModeHandler"
  },
  "api/VRBuilder.Core.Configuration.Modes.BlacklistTypeRule-1.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.BlacklistTypeRule-1.html",
    "title": "Class BlacklistTypeRule<TBase> | VR Builder Documentation",
    "keywords": "Class BlacklistTypeRule<TBase> Inheritance System.Object TypeRule <TBase> ListTypeRule < BlacklistTypeRule <TBase>, TBase> BlacklistTypeRule<TBase> Implements IRule < System.Type > Inherited Members ListTypeRule<BlacklistTypeRule<TBase>, TBase>.Add<T>() ListTypeRule<BlacklistTypeRule<TBase>, TBase>.Clone() ListTypeRule<BlacklistTypeRule<TBase>, TBase>.StoredTypes TypeRule<TBase>.IsQualifiedBy<T>() TypeRule<TBase>.IsQualifiedBy(Type) Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public class BlacklistTypeRule<TBase> : ListTypeRule<BlacklistTypeRule<TBase>, TBase>, IRule<Type> Type Parameters Name Description TBase Constructors BlacklistTypeRule() Declaration public BlacklistTypeRule() Methods IsQualifiedByPredicate(Type) Declaration protected override bool IsQualifiedByPredicate(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean Overrides VRBuilder.Core.Configuration.Modes.TypeRule<TBase>.IsQualifiedByPredicate(System.Type) Implements IRule<T>"
  },
  "api/VRBuilder.Core.Configuration.Modes.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.html",
    "title": "Namespace VRBuilder.Core.Configuration.Modes | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Configuration.Modes Classes BaseModeHandler BlacklistTypeRule<TBase> ListTypeRule<TRecursive, TValueBase> Mode ModeChangedEventArgs ModeParameter<T> TypeRule<TValueBase> WhitelistTypeRule<TBase> Interfaces IConfigurator IMode IModeData IModeHandler IOptional IRule<T>"
  },
  "api/VRBuilder.Core.Configuration.Modes.IConfigurator.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.IConfigurator.html",
    "title": "Interface IConfigurator | VR Builder Documentation",
    "keywords": "Interface IConfigurator Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public interface IConfigurator Methods Configure(IMode, Stage) Declaration void Configure(IMode mode, Stage stage) Parameters Type Name Description IMode mode Stage stage"
  },
  "api/VRBuilder.Core.Configuration.Modes.IMode.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.IMode.html",
    "title": "Interface IMode | VR Builder Documentation",
    "keywords": "Interface IMode Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public interface IMode Properties Name Declaration string Name { get; } Property Value Type Description System.String Methods CheckIfSkipped(Type) Declaration bool CheckIfSkipped(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean CheckIfSkipped<TOptional>() Declaration bool CheckIfSkipped<TOptional>() where TOptional : IOptional Returns Type Description System.Boolean Type Parameters Name Description TOptional ContainsParameter<T>(String) Declaration bool ContainsParameter<T>(string key) Parameters Type Name Description System.String key Returns Type Description System.Boolean Type Parameters Name Description T GetParameter<T>(String) Declaration T GetParameter<T>(string key) Parameters Type Name Description System.String key Returns Type Description T Type Parameters Name Description T"
  },
  "api/VRBuilder.Core.Configuration.Modes.IModeData.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.IModeData.html",
    "title": "Interface IModeData | VR Builder Documentation",
    "keywords": "Interface IModeData Inherited Members IData.Metadata Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public interface IModeData : IData Properties Mode Declaration IMode Mode { get; set; } Property Value Type Description IMode"
  },
  "api/VRBuilder.Core.Configuration.Modes.IModeHandler.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.IModeHandler.html",
    "title": "Interface IModeHandler | VR Builder Documentation",
    "keywords": "Interface IModeHandler Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public interface IModeHandler Properties AvailableModes Declaration ReadOnlyCollection<IMode> AvailableModes { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < IMode > CurrentMode Declaration IMode CurrentMode { get; } Property Value Type Description IMode CurrentModeIndex Declaration int CurrentModeIndex { get; } Property Value Type Description System.Int32 Methods SetMode(Int32) Declaration void SetMode(int index) Parameters Type Name Description System.Int32 index SetMode(IMode) Declaration void SetMode(IMode mode) Parameters Type Name Description IMode mode Events ModeChanged Declaration event EventHandler<ModeChangedEventArgs> ModeChanged Event Type Type Description System.EventHandler < ModeChangedEventArgs >"
  },
  "api/VRBuilder.Core.Configuration.Modes.IOptional.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.IOptional.html",
    "title": "Interface IOptional | VR Builder Documentation",
    "keywords": "Interface IOptional Inherited Members IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.GetAbortingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.LifeCycle IEntity.Parent Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public interface IOptional : IEntity"
  },
  "api/VRBuilder.Core.Configuration.Modes.IRule-1.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.IRule-1.html",
    "title": "Interface IRule<T> | VR Builder Documentation",
    "keywords": "Interface IRule<T> Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public interface IRule<T> Type Parameters Name Description T Methods IsQualifiedBy(T) Declaration bool IsQualifiedBy(T value) Parameters Type Name Description T value Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.ListTypeRule-2.html",
    "title": "Class ListTypeRule<TRecursive, TValueBase> | VR Builder Documentation",
    "keywords": "Class ListTypeRule<TRecursive, TValueBase> Inheritance System.Object TypeRule <TValueBase> ListTypeRule<TRecursive, TValueBase> BlacklistTypeRule<TBase> WhitelistTypeRule<TBase> Implements IRule < System.Type > Inherited Members TypeRule<TValueBase>.IsQualifiedBy<T>() TypeRule<TValueBase>.IsQualifiedBy(Type) TypeRule<TValueBase>.IsQualifiedByPredicate(Type) Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public abstract class ListTypeRule<TRecursive, TValueBase> : TypeRule<TValueBase>, IRule<Type> where TRecursive : ListTypeRule<TRecursive, TValueBase>, new() Type Parameters Name Description TRecursive TValueBase Constructors ListTypeRule() Declaration protected ListTypeRule() Properties StoredTypes Declaration protected HashSet<Type> StoredTypes { get; } Property Value Type Description System.Collections.Generic.HashSet < System.Type > Methods Add<T>() Declaration public TRecursive Add<T>() where T : TValueBase Returns Type Description TRecursive Type Parameters Name Description T Clone() Declaration protected virtual TRecursive Clone() Returns Type Description TRecursive Implements IRule<T>"
  },
  "api/VRBuilder.Core.Configuration.Modes.Mode.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.Mode.html",
    "title": "Class Mode | VR Builder Documentation",
    "keywords": "Class Mode Inheritance System.Object Mode Implements IMode Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public sealed class Mode : Object, IMode Constructors Mode(String, TypeRule<IOptional>, Dictionary<String, Object>) Declaration public Mode(string name, TypeRule<IOptional> entitiesToSkip, Dictionary<string, object> parameters = null) Parameters Type Name Description System.String name TypeRule < IOptional > entitiesToSkip System.Collections.Generic.Dictionary < System.String , System.Object > parameters Properties Name Declaration public string Name { get; } Property Value Type Description System.String Methods CheckIfSkipped(Type) Declaration public bool CheckIfSkipped(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean CheckIfSkipped<TSkippable>() Declaration public bool CheckIfSkipped<TSkippable>() where TSkippable : IOptional Returns Type Description System.Boolean Type Parameters Name Description TSkippable ContainsParameter<TValue>(String) Declaration public bool ContainsParameter<TValue>(string key) Parameters Type Name Description System.String key Returns Type Description System.Boolean Type Parameters Name Description TValue GetParameter<TValue>(String) Declaration public TValue GetParameter<TValue>(string key) Parameters Type Name Description System.String key Returns Type Description TValue Type Parameters Name Description TValue Implements IMode"
  },
  "api/VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.ModeChangedEventArgs.html",
    "title": "Class ModeChangedEventArgs | VR Builder Documentation",
    "keywords": "Class ModeChangedEventArgs Inheritance System.Object ModeChangedEventArgs Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public class ModeChangedEventArgs : EventArgs Constructors ModeChangedEventArgs(IMode) Declaration public ModeChangedEventArgs(IMode mode) Parameters Type Name Description IMode mode Properties Mode Declaration public IMode Mode { get; } Property Value Type Description IMode"
  },
  "api/VRBuilder.Core.Configuration.Modes.ModeParameter-1.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.ModeParameter-1.html",
    "title": "Class ModeParameter<T> | VR Builder Documentation",
    "keywords": "Class ModeParameter<T> Inheritance System.Object ModeParameter<T> Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public class ModeParameter<T> : Object Type Parameters Name Description T Constructors ModeParameter(String, T) Declaration public ModeParameter(string key, T defaultValue = null) Parameters Type Name Description System.String key T defaultValue Fields ParameterModified Declaration public EventHandler<EventArgs> ParameterModified Field Value Type Description System.EventHandler < System.EventArgs > Properties IsModified Declaration public bool IsModified { get; } Property Value Type Description System.Boolean Value Declaration public T Value { get; set; } Property Value Type Description T Methods Configure(IMode) Declaration public void Configure(IMode mode) Parameters Type Name Description IMode mode Reset() Declaration public void Reset()"
  },
  "api/VRBuilder.Core.Configuration.Modes.TypeRule-1.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.TypeRule-1.html",
    "title": "Class TypeRule<TValueBase> | VR Builder Documentation",
    "keywords": "Class TypeRule<TValueBase> Inheritance System.Object TypeRule<TValueBase> ListTypeRule<TRecursive, TValueBase> Implements IRule < System.Type > Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public abstract class TypeRule<TValueBase> : Object, IRule<Type> Type Parameters Name Description TValueBase Constructors TypeRule() Declaration protected TypeRule() Methods IsQualifiedBy(Type) Declaration public bool IsQualifiedBy(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean IsQualifiedBy<T>() Declaration public bool IsQualifiedBy<T>() where T : TValueBase Returns Type Description System.Boolean Type Parameters Name Description T IsQualifiedByPredicate(Type) Declaration protected abstract bool IsQualifiedByPredicate(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean Implements IRule<T>"
  },
  "api/VRBuilder.Core.Configuration.Modes.WhitelistTypeRule-1.html": {
    "href": "api/VRBuilder.Core.Configuration.Modes.WhitelistTypeRule-1.html",
    "title": "Class WhitelistTypeRule<TBase> | VR Builder Documentation",
    "keywords": "Class WhitelistTypeRule<TBase> Inheritance System.Object TypeRule <TBase> ListTypeRule < WhitelistTypeRule <TBase>, TBase> WhitelistTypeRule<TBase> Implements IRule < System.Type > Inherited Members ListTypeRule<WhitelistTypeRule<TBase>, TBase>.Add<T>() ListTypeRule<WhitelistTypeRule<TBase>, TBase>.Clone() ListTypeRule<WhitelistTypeRule<TBase>, TBase>.StoredTypes TypeRule<TBase>.IsQualifiedBy<T>() TypeRule<TBase>.IsQualifiedBy(Type) Namespace : VRBuilder.Core.Configuration.Modes Assembly : VRBuilder.Core.dll Syntax public class WhitelistTypeRule<TBase> : ListTypeRule<WhitelistTypeRule<TBase>, TBase>, IRule<Type> Type Parameters Name Description TBase Constructors WhitelistTypeRule() Declaration public WhitelistTypeRule() Methods IsQualifiedByPredicate(Type) Declaration protected override bool IsQualifiedByPredicate(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean Overrides VRBuilder.Core.Configuration.Modes.TypeRule<TBase>.IsQualifiedByPredicate(System.Type) Implements IRule<T>"
  },
  "api/VRBuilder.Core.Configuration.PropertyExtensionExclusionList.html": {
    "href": "api/VRBuilder.Core.Configuration.PropertyExtensionExclusionList.html",
    "title": "Class PropertyExtensionExclusionList | VR Builder Documentation",
    "keywords": "Class PropertyExtensionExclusionList Inheritance System.Object PropertyExtensionExclusionList Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public class PropertyExtensionExclusionList : MonoBehaviour Constructors PropertyExtensionExclusionList() Declaration public PropertyExtensionExclusionList() Properties AssemblyFullName Declaration public string AssemblyFullName { get; } Property Value Type Description System.String DisallowedExtensionTypes Declaration public IEnumerable<Type> DisallowedExtensionTypes { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Type >"
  },
  "api/VRBuilder.Core.Configuration.RuntimeConfigurator.html": {
    "href": "api/VRBuilder.Core.Configuration.RuntimeConfigurator.html",
    "title": "Class RuntimeConfigurator | VR Builder Documentation",
    "keywords": "Class RuntimeConfigurator Inheritance System.Object RuntimeConfigurator Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public sealed class RuntimeConfigurator : MonoBehaviour Constructors RuntimeConfigurator() Declaration public RuntimeConfigurator() Properties Configuration Declaration public static BaseRuntimeConfiguration Configuration { get; set; } Property Value Type Description BaseRuntimeConfiguration Exists Declaration public static bool Exists { get; } Property Value Type Description System.Boolean Instance Declaration public static RuntimeConfigurator Instance { get; } Property Value Type Description RuntimeConfigurator Methods GetProcessStringLocalizationTable() Declaration public string GetProcessStringLocalizationTable() Returns Type Description System.String GetRuntimeConfigurationName() Declaration public string GetRuntimeConfigurationName() Returns Type Description System.String GetSelectedProcess() Declaration public string GetSelectedProcess() Returns Type Description System.String IsExisting(Boolean) Declaration public static bool IsExisting(bool forceNewLookup = false) Parameters Type Name Description System.Boolean forceNewLookup Returns Type Description System.Boolean MarkSceneObjectDirty(ProcessSceneObject) Declaration public static void MarkSceneObjectDirty(ProcessSceneObject sceneObject) Parameters Type Name Description ProcessSceneObject sceneObject SetRuntimeConfigurationName(String) Declaration public void SetRuntimeConfigurationName(string configurationName) Parameters Type Name Description System.String configurationName SetSelectedProcess(String) Declaration public void SetSelectedProcess(string path) Parameters Type Name Description System.String path Events ModeChanged Declaration public static event EventHandler<ModeChangedEventArgs> ModeChanged Event Type Type Description System.EventHandler < ModeChangedEventArgs > RuntimeConfigurationChanged Declaration public static event EventHandler<EventArgs> RuntimeConfigurationChanged Event Type Type Description System.EventHandler < System.EventArgs >"
  },
  "api/VRBuilder.Core.Configuration.SceneConfiguration.html": {
    "href": "api/VRBuilder.Core.Configuration.SceneConfiguration.html",
    "title": "Class SceneConfiguration | VR Builder Documentation",
    "keywords": "Class SceneConfiguration Inheritance System.Object SceneConfiguration Implements ISceneConfiguration Namespace : VRBuilder.Core.Configuration Assembly : VRBuilder.Core.dll Syntax public class SceneConfiguration : MonoBehaviour, ISceneConfiguration Constructors SceneConfiguration() Declaration public SceneConfiguration() Properties DefaultConfettiPrefab Declaration public string DefaultConfettiPrefab { get; set; } Property Value Type Description System.String ExtensionAssembliesWhitelist Declaration public IEnumerable<string> ExtensionAssembliesWhitelist { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > Methods AddWhitelistAssemblies(IEnumerable<String>) Declaration public void AddWhitelistAssemblies(IEnumerable<string> assemblyNames) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.String > assemblyNames IsAllowedInAssembly(Type, String) Declaration public bool IsAllowedInAssembly(Type extensionType, string assemblyName) Parameters Type Name Description System.Type extensionType System.String assemblyName Returns Type Description System.Boolean Implements ISceneConfiguration"
  },
  "api/VRBuilder.Core.Configurator-1.html": {
    "href": "api/VRBuilder.Core.Configurator-1.html",
    "title": "Class Configurator<TData> | VR Builder Documentation",
    "keywords": "Class Configurator<TData> Inheritance System.Object Configurator<TData> FoldedLifeCycleConfigurator<TEntity> ParallelConfigurator<TEntity> SequenceConfigurator<TEntity> Implements IConfigurator Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public abstract class Configurator<TData> : Object, IConfigurator where TData : IData Type Parameters Name Description TData Constructors Configurator(TData) Declaration protected Configurator(TData data) Parameters Type Name Description TData data Properties Data Declaration protected TData Data { get; } Property Value Type Description TData Methods Configure(IMode, Stage) Declaration public abstract void Configure(IMode mode, Stage stage) Parameters Type Name Description IMode mode Stage stage Implements IConfigurator"
  },
  "api/VRBuilder.Core.Editor.Configuration.AllowedMenuItemsSettings.html": {
    "href": "api/VRBuilder.Core.Editor.Configuration.AllowedMenuItemsSettings.html",
    "title": "Class AllowedMenuItemsSettings | VR Builder Documentation",
    "keywords": "Class AllowedMenuItemsSettings Inheritance System.Object AllowedMenuItemsSettings Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.Configuration Assembly : VRBuilder.Core.Editor.dll Syntax public class AllowedMenuItemsSettings Constructors AllowedMenuItemsSettings() Declaration public AllowedMenuItemsSettings() AllowedMenuItemsSettings(IDictionary<String, Boolean>, IDictionary<String, Boolean>) Declaration public AllowedMenuItemsSettings(IDictionary<string, bool> behaviors, IDictionary<string, bool> serializedConditions) Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.Boolean > behaviors System.Collections.Generic.IDictionary < System.String , System.Boolean > serializedConditions Fields SerializedBehaviorSelections Declaration public IDictionary<string, bool> SerializedBehaviorSelections Field Value Type Description System.Collections.Generic.IDictionary < System.String , System.Boolean > SerializedConditionSelections Declaration public IDictionary<string, bool> SerializedConditionSelections Field Value Type Description System.Collections.Generic.IDictionary < System.String , System.Boolean > Methods GetBehaviorMenuOptions() Declaration public IEnumerable<MenuItem<IBehavior>> GetBehaviorMenuOptions() Returns Type Description System.Collections.Generic.IEnumerable < MenuItem < IBehavior >> GetConditionMenuOptions() Declaration public IEnumerable<MenuItem<ICondition>> GetConditionMenuOptions() Returns Type Description System.Collections.Generic.IEnumerable < MenuItem < ICondition >> Load() Declaration public static AllowedMenuItemsSettings Load() Returns Type Description AllowedMenuItemsSettings RefreshMenuOptions() Declaration public void RefreshMenuOptions() Save(AllowedMenuItemsSettings) Declaration public static bool Save(AllowedMenuItemsSettings settings) Parameters Type Name Description AllowedMenuItemsSettings settings Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Editor.Configuration.DefaultEditorConfiguration.html": {
    "href": "api/VRBuilder.Core.Editor.Configuration.DefaultEditorConfiguration.html",
    "title": "Class DefaultEditorConfiguration | VR Builder Documentation",
    "keywords": "Class DefaultEditorConfiguration Inheritance System.Object DefaultEditorConfiguration Implements IEditorConfiguration Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.Configuration Assembly : VRBuilder.Core.Editor.dll Syntax public class DefaultEditorConfiguration : IEditorConfiguration Constructors DefaultEditorConfiguration() Declaration protected DefaultEditorConfiguration() Properties AllowedMenuItemsSettings Declaration public virtual AllowedMenuItemsSettings AllowedMenuItemsSettings { get; set; } Property Value Type Description AllowedMenuItemsSettings AllowedMenuItemsSettingsAssetPath Declaration public virtual string AllowedMenuItemsSettingsAssetPath { get; } Property Value Type Description System.String BehaviorsMenuContent Declaration public virtual ReadOnlyCollection<MenuOption<IBehavior>> BehaviorsMenuContent { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < MenuOption < IBehavior >> ConditionsMenuContent Declaration public virtual ReadOnlyCollection<MenuOption<ICondition>> ConditionsMenuContent { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < MenuOption < ICondition >> ProcessAssetStrategy Declaration public IProcessAssetStrategy ProcessAssetStrategy { get; } Property Value Type Description IProcessAssetStrategy ProcessStreamingAssetsSubdirectory Declaration public virtual string ProcessStreamingAssetsSubdirectory { get; } Property Value Type Description System.String Serializer Declaration public virtual IProcessSerializer Serializer { get; } Property Value Type Description IProcessSerializer Implements IEditorConfiguration"
  },
  "api/VRBuilder.Core.Editor.Configuration.EditorConfigurator.html": {
    "href": "api/VRBuilder.Core.Editor.Configuration.EditorConfigurator.html",
    "title": "Class EditorConfigurator | VR Builder Documentation",
    "keywords": "Class EditorConfigurator Inheritance System.Object EditorConfigurator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.Configuration Assembly : VRBuilder.Core.Editor.dll Syntax public static class EditorConfigurator Properties Instance Declaration public static DefaultEditorConfiguration Instance { get; } Property Value Type Description DefaultEditorConfiguration Methods Init() Declaration public static void Init()"
  },
  "api/VRBuilder.Core.Editor.Configuration.html": {
    "href": "api/VRBuilder.Core.Editor.Configuration.html",
    "title": "Namespace VRBuilder.Core.Editor.Configuration | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.Configuration Classes AllowedMenuItemsSettings DefaultEditorConfiguration EditorConfigurator LoggingConfigCreationTrigger RuntimeConfiguratorEditor Interfaces IEditorConfiguration IEditorConfigurationExtension"
  },
  "api/VRBuilder.Core.Editor.Configuration.IEditorConfiguration.html": {
    "href": "api/VRBuilder.Core.Editor.Configuration.IEditorConfiguration.html",
    "title": "Interface IEditorConfiguration | VR Builder Documentation",
    "keywords": "Interface IEditorConfiguration Namespace : VRBuilder.Core.Editor.Configuration Assembly : VRBuilder.Core.Editor.dll Syntax public interface IEditorConfiguration Properties AllowedMenuItemsSettings Declaration AllowedMenuItemsSettings AllowedMenuItemsSettings { get; set; } Property Value Type Description AllowedMenuItemsSettings AllowedMenuItemsSettingsAssetPath Declaration string AllowedMenuItemsSettingsAssetPath { get; } Property Value Type Description System.String BehaviorsMenuContent Declaration ReadOnlyCollection<MenuOption<IBehavior>> BehaviorsMenuContent { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < MenuOption < IBehavior >> ConditionsMenuContent Declaration ReadOnlyCollection<MenuOption<ICondition>> ConditionsMenuContent { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < MenuOption < ICondition >> ProcessAssetStrategy Declaration IProcessAssetStrategy ProcessAssetStrategy { get; } Property Value Type Description IProcessAssetStrategy ProcessStreamingAssetsSubdirectory Declaration string ProcessStreamingAssetsSubdirectory { get; } Property Value Type Description System.String Serializer Declaration IProcessSerializer Serializer { get; } Property Value Type Description IProcessSerializer"
  },
  "api/VRBuilder.Core.Editor.Configuration.IEditorConfigurationExtension.html": {
    "href": "api/VRBuilder.Core.Editor.Configuration.IEditorConfigurationExtension.html",
    "title": "Interface IEditorConfigurationExtension | VR Builder Documentation",
    "keywords": "Interface IEditorConfigurationExtension Namespace : VRBuilder.Core.Editor.Configuration Assembly : VRBuilder.Core.Editor.dll Syntax public interface IEditorConfigurationExtension Properties DisabledMenuItems Declaration IEnumerable<Type> DisabledMenuItems { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Type > RequiredMenuItems Declaration IEnumerable<Type> RequiredMenuItems { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Type >"
  },
  "api/VRBuilder.Core.Editor.Configuration.LoggingConfigCreationTrigger.html": {
    "href": "api/VRBuilder.Core.Editor.Configuration.LoggingConfigCreationTrigger.html",
    "title": "Class LoggingConfigCreationTrigger | VR Builder Documentation",
    "keywords": "Class LoggingConfigCreationTrigger Inheritance System.Object LoggingConfigCreationTrigger Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.Configuration Assembly : VRBuilder.Core.Editor.dll Syntax public class LoggingConfigCreationTrigger Constructors LoggingConfigCreationTrigger() Declaration public LoggingConfigCreationTrigger()"
  },
  "api/VRBuilder.Core.Editor.Configuration.RuntimeConfiguratorEditor.html": {
    "href": "api/VRBuilder.Core.Editor.Configuration.RuntimeConfiguratorEditor.html",
    "title": "Class RuntimeConfiguratorEditor | VR Builder Documentation",
    "keywords": "Class RuntimeConfiguratorEditor Inheritance System.Object RuntimeConfiguratorEditor Namespace : VRBuilder.Core.Editor.Configuration Assembly : VRBuilder.Core.Editor.dll Syntax public class RuntimeConfiguratorEditor : Editor Constructors RuntimeConfiguratorEditor() Declaration public RuntimeConfiguratorEditor() Methods IsProcessListEmpty() Declaration public static bool IsProcessListEmpty() Returns Type Description System.Boolean OnEnable() Declaration protected void OnEnable() OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/VRBuilder.Core.Editor.Debug.GuidBasedSceneObjectRegistryEditorWindow.html": {
    "href": "api/VRBuilder.Core.Editor.Debug.GuidBasedSceneObjectRegistryEditorWindow.html",
    "title": "Class GuidBasedSceneObjectRegistryEditorWindow | VR Builder Documentation",
    "keywords": "Class GuidBasedSceneObjectRegistryEditorWindow Inheritance System.Object GuidBasedSceneObjectRegistryEditorWindow Namespace : VRBuilder.Core.Editor.Debug Assembly : VRBuilder.Core.Editor.dll Syntax public class GuidBasedSceneObjectRegistryEditorWindow : EditorWindow Constructors GuidBasedSceneObjectRegistryEditorWindow() Declaration public GuidBasedSceneObjectRegistryEditorWindow()"
  },
  "api/VRBuilder.Core.Editor.Debug.html": {
    "href": "api/VRBuilder.Core.Editor.Debug.html",
    "title": "Namespace VRBuilder.Core.Editor.Debug | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.Debug Classes GuidBasedSceneObjectRegistryEditorWindow"
  },
  "api/VRBuilder.Core.Editor.EditorReflectionUtils.html": {
    "href": "api/VRBuilder.Core.Editor.EditorReflectionUtils.html",
    "title": "Class EditorReflectionUtils | VR Builder Documentation",
    "keywords": "Class EditorReflectionUtils Inheritance System.Object EditorReflectionUtils Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor Assembly : VRBuilder.Core.Editor.dll Syntax public static class EditorReflectionUtils Methods AssemblyExists(String) Declaration public static bool AssemblyExists(string name) Parameters Type Name Description System.String name Returns Type Description System.Boolean ClassExists(String, String) Declaration public static bool ClassExists(string assemblyName, string className) Parameters Type Name Description System.String assemblyName System.String className Returns Type Description System.Boolean GetAllDataMembers(Object) Declaration public static IEnumerable<MemberInfo> GetAllDataMembers(object value) Parameters Type Name Description System.Object value Returns Type Description System.Collections.Generic.IEnumerable < System.Reflection.MemberInfo > GetAllFieldsAndProperties(Object) Declaration public static IEnumerable<MemberInfo> GetAllFieldsAndProperties(object value) Parameters Type Name Description System.Object value Returns Type Description System.Collections.Generic.IEnumerable < System.Reflection.MemberInfo > GetAttributes(MemberInfo, Boolean) Declaration public static IEnumerable<Attribute> GetAttributes(this MemberInfo memberInfo, bool isInherited) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Boolean isInherited Returns Type Description System.Collections.Generic.IEnumerable < System.Attribute > GetAttributes(Type, Boolean) Declaration public static IEnumerable<Attribute> GetAttributes(this Type type, bool isInherited) Parameters Type Name Description System.Type type System.Boolean isInherited Returns Type Description System.Collections.Generic.IEnumerable < System.Attribute > GetAttributes<T>(MemberInfo, Boolean) Declaration public static IEnumerable<T> GetAttributes<T>(this MemberInfo memberInfo, bool isInherited) where T : Attribute Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Boolean isInherited Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T GetAttributes<T>(Type, Boolean) Declaration public static IEnumerable<T> GetAttributes<T>(Type type, bool isInherited) where T : Attribute Parameters Type Name Description System.Type type System.Boolean isInherited Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T GetDisplayName(MemberInfo) Declaration public static string GetDisplayName(this MemberInfo memberInfo) Parameters Type Name Description System.Reflection.MemberInfo memberInfo Returns Type Description System.String GetFieldsAndPropertiesToDraw(Object) Declaration public static IEnumerable<MemberInfo> GetFieldsAndPropertiesToDraw(object value) Parameters Type Name Description System.Object value Returns Type Description System.Collections.Generic.IEnumerable < System.Reflection.MemberInfo > GetNestedPropertiesFromData<TProperty>(IData) Declaration public static IEnumerable<TProperty> GetNestedPropertiesFromData<TProperty>(IData data) Parameters Type Name Description IData data Returns Type Description System.Collections.Generic.IEnumerable <TProperty> Type Parameters Name Description TProperty"
  },
  "api/VRBuilder.Core.Editor.EditorUtils.html": {
    "href": "api/VRBuilder.Core.Editor.EditorUtils.html",
    "title": "Class EditorUtils | VR Builder Documentation",
    "keywords": "Class EditorUtils Inheritance System.Object EditorUtils Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor Assembly : VRBuilder.Core.Editor.dll Syntax public static class EditorUtils Properties IsUpmPackage Declaration public static bool IsUpmPackage { get; } Property Value Type Description System.Boolean Methods GetCoreFolder() Declaration public static string GetCoreFolder() Returns Type Description System.String"
  },
  "api/VRBuilder.Core.Editor.GlobalEditorHandler.html": {
    "href": "api/VRBuilder.Core.Editor.GlobalEditorHandler.html",
    "title": "Class GlobalEditorHandler | VR Builder Documentation",
    "keywords": "Class GlobalEditorHandler Inheritance System.Object GlobalEditorHandler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor Assembly : VRBuilder.Core.Editor.dll Syntax public static class GlobalEditorHandler Fields LastEditedProcessNameKey Declaration public const string LastEditedProcessNameKey = \"VRBuilder.Core.Editors.LastEditedProcessName\" Field Value Type Description System.String Methods ChangeCurrentStep(IStep) Declaration public static void ChangeCurrentStep(IStep step) Parameters Type Name Description IStep step CurrentProcessModified() Declaration public static void CurrentProcessModified() CurrentStepModified(IStep) Declaration public static void CurrentStepModified(IStep step) Parameters Type Name Description IStep step EnterPlayMode() Declaration public static void EnterPlayMode() ExitPlayMode() Declaration public static void ExitPlayMode() GetCurrentChapter() Declaration public static IChapter GetCurrentChapter() Returns Type Description IChapter GetCurrentProcess() Declaration public static IProcess GetCurrentProcess() Returns Type Description IProcess ProcessWindowClosed(ProcessEditorWindow) Declaration public static void ProcessWindowClosed(ProcessEditorWindow window) Parameters Type Name Description ProcessEditorWindow window ProcessWindowOpened(ProcessEditorWindow) Declaration public static void ProcessWindowOpened(ProcessEditorWindow window) Parameters Type Name Description ProcessEditorWindow window ProjectIsGoingToSave() Declaration public static void ProjectIsGoingToSave() ProjectIsGoingToUnload() Declaration public static void ProjectIsGoingToUnload() RequestNewChapter(IChapter) Declaration public static void RequestNewChapter(IChapter chapter) Parameters Type Name Description IChapter chapter SetCurrentChapter(IChapter) Declaration public static void SetCurrentChapter(IChapter chapter) Parameters Type Name Description IChapter chapter SetCurrentProcess(String) Declaration public static void SetCurrentProcess(string processName) Parameters Type Name Description System.String processName SetDefaultStrategy() Declaration public static void SetDefaultStrategy() SetStrategy(IEditingStrategy) Declaration public static void SetStrategy(IEditingStrategy newStrategy) Parameters Type Name Description IEditingStrategy newStrategy StartEditingProcess() Declaration public static void StartEditingProcess() StartEditingStep() Declaration public static void StartEditingStep() StepWindowClosed(StepWindow) Declaration public static void StepWindowClosed(StepWindow window) Parameters Type Name Description StepWindow window StepWindowOpened(StepWindow) Declaration public static void StepWindowOpened(StepWindow window) Parameters Type Name Description StepWindow window"
  },
  "api/VRBuilder.Core.Editor.html": {
    "href": "api/VRBuilder.Core.Editor.html",
    "title": "Namespace VRBuilder.Core.Editor | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor Classes EditorReflectionUtils EditorUtils GlobalEditorHandler MetadataWrapper TestableEditorElements TestableEditorElements.DisabledMenuItem TestableEditorElements.MenuItem TestableEditorElements.MenuOption TestableEditorElements.MenuSeparator Interfaces IEditingStrategy Enums TestableEditorElements.DisplayMode"
  },
  "api/VRBuilder.Core.Editor.IEditingStrategy.html": {
    "href": "api/VRBuilder.Core.Editor.IEditingStrategy.html",
    "title": "Interface IEditingStrategy | VR Builder Documentation",
    "keywords": "Interface IEditingStrategy Namespace : VRBuilder.Core.Editor Assembly : VRBuilder.Core.Editor.dll Syntax public interface IEditingStrategy Properties CurrentChapter Declaration IChapter CurrentChapter { get; } Property Value Type Description IChapter CurrentProcess Declaration IProcess CurrentProcess { get; } Property Value Type Description IProcess Methods HandleChapterChangeRequest(IChapter) Declaration void HandleChapterChangeRequest(IChapter chapter) Parameters Type Name Description IChapter chapter HandleCurrentChapterChanged(IChapter) Declaration void HandleCurrentChapterChanged(IChapter chapter) Parameters Type Name Description IChapter chapter HandleCurrentProcessChanged(String) Declaration void HandleCurrentProcessChanged(string processName) Parameters Type Name Description System.String processName HandleCurrentProcessModified() Declaration void HandleCurrentProcessModified() HandleCurrentStepChanged(IStep) Declaration void HandleCurrentStepChanged(IStep step) Parameters Type Name Description IStep step HandleCurrentStepModified(IStep) Declaration void HandleCurrentStepModified(IStep step) Parameters Type Name Description IStep step HandleEnterPlayMode() Declaration void HandleEnterPlayMode() HandleExitingPlayMode() Declaration void HandleExitingPlayMode() HandleNewProcessWindow(ProcessEditorWindow) Declaration void HandleNewProcessWindow(ProcessEditorWindow window) Parameters Type Name Description ProcessEditorWindow window HandleNewStepWindow(IStepView) Declaration void HandleNewStepWindow(IStepView window) Parameters Type Name Description IStepView window HandleProcessWindowClosed(ProcessEditorWindow) Declaration void HandleProcessWindowClosed(ProcessEditorWindow window) Parameters Type Name Description ProcessEditorWindow window HandleProjectIsGoingToSave() Declaration void HandleProjectIsGoingToSave() HandleProjectIsGoingToUnload() Declaration void HandleProjectIsGoingToUnload() HandleStartEditingProcess() Declaration void HandleStartEditingProcess() HandleStartEditingStep() Declaration void HandleStartEditingStep() HandleStepWindowClosed(IStepView) Declaration void HandleStepWindowClosed(IStepView window) Parameters Type Name Description IStepView window"
  },
  "api/VRBuilder.Core.Editor.Input.html": {
    "href": "api/VRBuilder.Core.Editor.Input.html",
    "title": "Namespace VRBuilder.Core.Editor.Input | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.Input Classes InputEditorUtils"
  },
  "api/VRBuilder.Core.Editor.Input.InputEditorUtils.html": {
    "href": "api/VRBuilder.Core.Editor.Input.InputEditorUtils.html",
    "title": "Class InputEditorUtils | VR Builder Documentation",
    "keywords": "Class InputEditorUtils Inheritance System.Object InputEditorUtils Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.Input Assembly : VRBuilder.Core.Editor.dll Syntax public static class InputEditorUtils Methods CopyCustomKeyBindingAsset() Declaration public static void CopyCustomKeyBindingAsset() OpenKeyBindingEditor() Declaration public static void OpenKeyBindingEditor() UsesCustomKeyBindingAsset() Declaration public static bool UsesCustomKeyBindingAsset() Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Editor.MetadataWrapper.html": {
    "href": "api/VRBuilder.Core.Editor.MetadataWrapper.html",
    "title": "Class MetadataWrapper | VR Builder Documentation",
    "keywords": "Class MetadataWrapper Inheritance System.Object MetadataWrapper Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor Assembly : VRBuilder.Core.Editor.dll Syntax public class MetadataWrapper Constructors MetadataWrapper() Declaration public MetadataWrapper() Properties Metadata Declaration public Dictionary<string, object> Metadata { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Object > Value Declaration public object Value { get; set; } Property Value Type Description System.Object ValueDeclaredType Declaration public Type ValueDeclaredType { get; set; } Property Value Type Description System.Type"
  },
  "api/VRBuilder.Core.Editor.ProcessAssets.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessAssets.html",
    "title": "Namespace VRBuilder.Core.Editor.ProcessAssets | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.ProcessAssets Classes ProcessAssetManager ProcessAssetUtils"
  },
  "api/VRBuilder.Core.Editor.ProcessAssets.ProcessAssetManager.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessAssets.ProcessAssetManager.html",
    "title": "Class ProcessAssetManager | VR Builder Documentation",
    "keywords": "Class ProcessAssetManager Inheritance System.Object ProcessAssetManager Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.ProcessAssets Assembly : VRBuilder.Core.Editor.dll Syntax public static class ProcessAssetManager Methods Delete(String) Declaration public static void Delete(string processName) Parameters Type Name Description System.String processName Import(String, IProcessSerializer) Declaration public static void Import(string path, IProcessSerializer serializer) Parameters Type Name Description System.String path IProcessSerializer serializer Import(IProcess) Declaration public static void Import(IProcess process) Parameters Type Name Description IProcess process Load(String) Declaration public static IProcess Load(string processName) Parameters Type Name Description System.String processName Returns Type Description IProcess RenameProcess(IProcess, String) Declaration public static void RenameProcess(IProcess process, string newName) Parameters Type Name Description IProcess process System.String newName Save(IProcess) Declaration public static void Save(IProcess process) Parameters Type Name Description IProcess process Events ExternalFileChange Declaration public static event EventHandler ExternalFileChange Event Type Type Description System.EventHandler"
  },
  "api/VRBuilder.Core.Editor.ProcessAssets.ProcessAssetUtils.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessAssets.ProcessAssetUtils.html",
    "title": "Class ProcessAssetUtils | VR Builder Documentation",
    "keywords": "Class ProcessAssetUtils Inheritance System.Object ProcessAssetUtils Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.ProcessAssets Assembly : VRBuilder.Core.Editor.dll Syntax public static class ProcessAssetUtils Methods CanCreate(String, out String) Declaration public static bool CanCreate(string processName, out string errorMessage) Parameters Type Name Description System.String processName System.String errorMessage Returns Type Description System.Boolean CanRename(IProcess, String, out String) Declaration public static bool CanRename(IProcess process, string newName, out string errorMessage) Parameters Type Name Description IProcess process System.String newName System.String errorMessage Returns Type Description System.Boolean DoesAnyProcessExist() Declaration public static bool DoesAnyProcessExist() Returns Type Description System.Boolean DoesProcessAssetExist(String) Declaration public static bool DoesProcessAssetExist(string processName) Parameters Type Name Description System.String processName Returns Type Description System.Boolean GetAllProcesses() Declaration public static IEnumerable<string> GetAllProcesses() Returns Type Description System.Collections.Generic.IEnumerable < System.String > GetProcessAssetDirectory(String) Declaration public static string GetProcessAssetDirectory(string processName) Parameters Type Name Description System.String processName Returns Type Description System.String GetProcessAssetPath(String) Declaration public static string GetProcessAssetPath(string processName) Parameters Type Name Description System.String processName Returns Type Description System.String GetProcessNameFromPath(String) Declaration public static string GetProcessNameFromPath(string processPath) Parameters Type Name Description System.String processPath Returns Type Description System.String GetProcessStreamingAssetPath(String) Declaration public static string GetProcessStreamingAssetPath(string processName) Parameters Type Name Description System.String processName Returns Type Description System.String GetProcessStreamingAssetsSubdirectory(String) Declaration public static string GetProcessStreamingAssetsSubdirectory(string processName) Parameters Type Name Description System.String processName Returns Type Description System.String IsValidProcessAssetPath(String) Declaration public static bool IsValidProcessAssetPath(string assetPath) Parameters Type Name Description System.String assetPath Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Converters.Converter-2.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Converters.Converter-2.html",
    "title": "Class Converter<TIn, TOut> | VR Builder Documentation",
    "keywords": "Class Converter<TIn, TOut> Inheritance System.Object Converter<TIn, TOut> Implements IConverter Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.ProcessUpgradeTool.Converters Assembly : VRBuilder.Core.Editor.dll Syntax public abstract class Converter<TIn, TOut> : IConverter where TIn : class where TOut : class Type Parameters Name Description TIn TOut Constructors Converter() Declaration protected Converter() Properties ConvertedType Declaration public Type ConvertedType { get; } Property Value Type Description System.Type Methods Convert(Object) Declaration public object Convert(object oldObject) Parameters Type Name Description System.Object oldObject Returns Type Description System.Object PerformConversion(TIn) Declaration protected abstract TOut PerformConversion(TIn oldObject) Parameters Type Name Description TIn oldObject Returns Type Description TOut Implements IConverter"
  },
  "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Converters.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Converters.html",
    "title": "Namespace VRBuilder.Core.Editor.ProcessUpgradeTool.Converters | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.ProcessUpgradeTool.Converters Classes Converter<TIn, TOut> Interfaces IConverter"
  },
  "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Converters.IConverter.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Converters.IConverter.html",
    "title": "Interface IConverter | VR Builder Documentation",
    "keywords": "Interface IConverter Namespace : VRBuilder.Core.Editor.ProcessUpgradeTool.Converters Assembly : VRBuilder.Core.Editor.dll Syntax public interface IConverter Properties ConvertedType Declaration Type ConvertedType { get; } Property Value Type Description System.Type Methods Convert(Object) Declaration object Convert(object oldEntity) Parameters Type Name Description System.Object oldEntity Returns Type Description System.Object"
  },
  "api/VRBuilder.Core.Editor.ProcessUpgradeTool.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessUpgradeTool.html",
    "title": "Namespace VRBuilder.Core.Editor.ProcessUpgradeTool | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.ProcessUpgradeTool Classes ProcessUpgradeTool"
  },
  "api/VRBuilder.Core.Editor.ProcessUpgradeTool.ProcessUpgradeTool.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessUpgradeTool.ProcessUpgradeTool.html",
    "title": "Class ProcessUpgradeTool | VR Builder Documentation",
    "keywords": "Class ProcessUpgradeTool Inheritance System.Object ProcessUpgradeTool Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.ProcessUpgradeTool Assembly : VRBuilder.Core.Editor.dll Syntax public static class ProcessUpgradeTool Properties Converters Declaration public static IEnumerable<IConverter> Converters { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IConverter > Updaters Declaration public static IEnumerable<IUpdater> Updaters { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IUpdater > Methods GetUpdaterForType(Type) Declaration public static IUpdater GetUpdaterForType(Type type) Parameters Type Name Description System.Type type Returns Type Description IUpdater UpdateDataOwnerRecursively(IDataOwner) Declaration public static void UpdateDataOwnerRecursively(IDataOwner dataOwner) Parameters Type Name Description IDataOwner dataOwner"
  },
  "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.BehaviorListUpdater.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.BehaviorListUpdater.html",
    "title": "Class BehaviorListUpdater | VR Builder Documentation",
    "keywords": "Class BehaviorListUpdater Inheritance System.Object ListUpdater < IBehavior > BehaviorListUpdater Implements IUpdater Inherited Members ListUpdater<IBehavior>.Update(MemberInfo, Object) ListUpdater<IBehavior>.UpdatedType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters Assembly : VRBuilder.Core.Editor.dll Syntax public class BehaviorListUpdater : ListUpdater<IBehavior>, IUpdater Constructors BehaviorListUpdater() Declaration public BehaviorListUpdater() Implements IUpdater"
  },
  "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.ConditionListUpdater.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.ConditionListUpdater.html",
    "title": "Class ConditionListUpdater | VR Builder Documentation",
    "keywords": "Class ConditionListUpdater Inheritance System.Object ListUpdater < ICondition > ConditionListUpdater Implements IUpdater Inherited Members ListUpdater<ICondition>.Update(MemberInfo, Object) ListUpdater<ICondition>.UpdatedType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters Assembly : VRBuilder.Core.Editor.dll Syntax public class ConditionListUpdater : ListUpdater<ICondition>, IUpdater Constructors ConditionListUpdater() Declaration public ConditionListUpdater() Implements IUpdater"
  },
  "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.DataUpdater.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.DataUpdater.html",
    "title": "Class DataUpdater | VR Builder Documentation",
    "keywords": "Class DataUpdater Inheritance System.Object Updater < IData > NestedUpdater < IData > DataUpdater Implements IUpdater Inherited Members NestedUpdater<IData>.Update(MemberInfo, Object) Updater<IData>.UpdatedType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters Assembly : VRBuilder.Core.Editor.dll Syntax public class DataUpdater : NestedUpdater<IData>, IUpdater Constructors DataUpdater() Declaration public DataUpdater() Implements IUpdater"
  },
  "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.html",
    "title": "Namespace VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters Classes BehaviorListUpdater ConditionListUpdater DataUpdater ListUpdater<T> LockablePropertyReferenceUpdater NestedUpdater<T> PropertyUpdater<TNew, TOld> Updater<T> Interfaces IUpdater"
  },
  "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.IUpdater.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.IUpdater.html",
    "title": "Interface IUpdater | VR Builder Documentation",
    "keywords": "Interface IUpdater Namespace : VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters Assembly : VRBuilder.Core.Editor.dll Syntax public interface IUpdater Properties UpdatedType Declaration Type UpdatedType { get; } Property Value Type Description System.Type Methods Update(MemberInfo, Object) Declaration void Update(MemberInfo memberInfo, object owner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object owner"
  },
  "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.ListUpdater-1.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.ListUpdater-1.html",
    "title": "Class ListUpdater<T> | VR Builder Documentation",
    "keywords": "Class ListUpdater<T> Inheritance System.Object ListUpdater<T> BehaviorListUpdater ConditionListUpdater Implements IUpdater Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters Assembly : VRBuilder.Core.Editor.dll Syntax public abstract class ListUpdater<T> : IUpdater Type Parameters Name Description T Constructors ListUpdater() Declaration protected ListUpdater() Properties UpdatedType Declaration public Type UpdatedType { get; } Property Value Type Description System.Type Methods Update(MemberInfo, Object) Declaration public void Update(MemberInfo memberInfo, object owner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object owner Implements IUpdater"
  },
  "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.LockablePropertyReferenceUpdater.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.LockablePropertyReferenceUpdater.html",
    "title": "Class LockablePropertyReferenceUpdater | VR Builder Documentation",
    "keywords": "Class LockablePropertyReferenceUpdater Inheritance System.Object Updater < System.Collections.Generic.IEnumerable < LockablePropertyReference >> LockablePropertyReferenceUpdater Implements IUpdater Inherited Members Updater<IEnumerable<LockablePropertyReference>>.UpdatedType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters Assembly : VRBuilder.Core.Editor.dll Syntax public class LockablePropertyReferenceUpdater : Updater<IEnumerable<LockablePropertyReference>>, IUpdater Constructors LockablePropertyReferenceUpdater() Declaration public LockablePropertyReferenceUpdater() Methods Update(MemberInfo, Object) Declaration public override void Update(MemberInfo memberInfo, object owner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object owner Overrides VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.Updater<System.Collections.Generic.IEnumerable<VRBuilder.Core.RestrictiveEnvironment.LockablePropertyReference>>.Update(System.Reflection.MemberInfo, System.Object) Implements IUpdater"
  },
  "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.NestedUpdater-1.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.NestedUpdater-1.html",
    "title": "Class NestedUpdater<T> | VR Builder Documentation",
    "keywords": "Class NestedUpdater<T> Inheritance System.Object Updater <T> NestedUpdater<T> DataUpdater Implements IUpdater Inherited Members Updater<T>.UpdatedType System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters Assembly : VRBuilder.Core.Editor.dll Syntax public abstract class NestedUpdater<T> : Updater<T>, IUpdater Type Parameters Name Description T Constructors NestedUpdater() Declaration protected NestedUpdater() Methods Update(MemberInfo, Object) Declaration public override void Update(MemberInfo memberInfo, object owner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object owner Overrides VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.Updater<T>.Update(System.Reflection.MemberInfo, System.Object) Implements IUpdater"
  },
  "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.PropertyUpdater-2.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.PropertyUpdater-2.html",
    "title": "Class PropertyUpdater<TNew, TOld> | VR Builder Documentation",
    "keywords": "Class PropertyUpdater<TNew, TOld> Inheritance System.Object PropertyUpdater<TNew, TOld> Implements IUpdater Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters Assembly : VRBuilder.Core.Editor.dll Syntax public abstract class PropertyUpdater<TNew, TOld> : IUpdater Type Parameters Name Description TNew TOld Constructors PropertyUpdater() Declaration protected PropertyUpdater() Properties UpdatedType Declaration public Type UpdatedType { get; } Property Value Type Description System.Type Methods AttemptToUpdateProperty(MemberInfo, Object) Declaration protected bool AttemptToUpdateProperty(MemberInfo memberInfo, object owner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object owner Returns Type Description System.Boolean PerformUpgrade(ref TNew, ref TOld) Declaration protected abstract bool PerformUpgrade(ref TNew newProperty, ref TOld oldProperty) Parameters Type Name Description TNew newProperty TOld oldProperty Returns Type Description System.Boolean ShouldBeUpdated(TNew) Declaration protected abstract bool ShouldBeUpdated(TNew property) Parameters Type Name Description TNew property Returns Type Description System.Boolean Update(MemberInfo, Object) Declaration public void Update(MemberInfo memberInfo, object owner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object owner Implements IUpdater"
  },
  "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.Updater-1.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters.Updater-1.html",
    "title": "Class Updater<T> | VR Builder Documentation",
    "keywords": "Class Updater<T> Inheritance System.Object Updater<T> LockablePropertyReferenceUpdater NestedUpdater<T> Implements IUpdater Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.ProcessUpgradeTool.Updaters Assembly : VRBuilder.Core.Editor.dll Syntax public abstract class Updater<T> : IUpdater Type Parameters Name Description T Constructors Updater() Declaration protected Updater() Properties UpdatedType Declaration public Type UpdatedType { get; } Property Value Type Description System.Type Methods Update(MemberInfo, Object) Declaration public abstract void Update(MemberInfo memberInfo, object owner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object owner Implements IUpdater"
  },
  "api/VRBuilder.Core.Editor.ProcessValidation.EditorReportEntry.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessValidation.EditorReportEntry.html",
    "title": "Class EditorReportEntry | VR Builder Documentation",
    "keywords": "Class EditorReportEntry Inheritance System.Object ReportEntry EditorReportEntry Inherited Members ReportEntry.ErrorLevel ReportEntry.Code ReportEntry.Message Namespace : VRBuilder.Core.Editor.ProcessValidation Assembly : VRBuilder.Core.Editor.dll Syntax public class EditorReportEntry : ReportEntry Constructors EditorReportEntry(IContext, IValidator, ReportEntry) Declaration public EditorReportEntry(IContext context, IValidator validator, ReportEntry entry) Parameters Type Name Description IContext context IValidator validator ReportEntry entry Fields Context Declaration public readonly IContext Context Field Value Type Description IContext Validator Declaration public readonly IValidator Validator Field Value Type Description IValidator Methods ToString() Declaration public override string ToString() Returns Type Description System.String"
  },
  "api/VRBuilder.Core.Editor.ProcessValidation.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessValidation.html",
    "title": "Namespace VRBuilder.Core.Editor.ProcessValidation | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.ProcessValidation Classes EditorReportEntry Interfaces IContext IContextResolver IValidator"
  },
  "api/VRBuilder.Core.Editor.ProcessValidation.IContext.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessValidation.IContext.html",
    "title": "Interface IContext | VR Builder Documentation",
    "keywords": "Interface IContext Namespace : VRBuilder.Core.Editor.ProcessValidation Assembly : VRBuilder.Core.Editor.dll Syntax public interface IContext Properties Parent Declaration IContext Parent { get; } Property Value Type Description IContext Methods ToString() Declaration string ToString() Returns Type Description System.String"
  },
  "api/VRBuilder.Core.Editor.ProcessValidation.IContextResolver.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessValidation.IContextResolver.html",
    "title": "Interface IContextResolver | VR Builder Documentation",
    "keywords": "Interface IContextResolver Namespace : VRBuilder.Core.Editor.ProcessValidation Assembly : VRBuilder.Core.Editor.dll Syntax public interface IContextResolver Methods FindContext(IData, IProcess) Declaration IContext FindContext(IData data, IProcess process) Parameters Type Name Description IData data IProcess process Returns Type Description IContext"
  },
  "api/VRBuilder.Core.Editor.ProcessValidation.IValidator.html": {
    "href": "api/VRBuilder.Core.Editor.ProcessValidation.IValidator.html",
    "title": "Interface IValidator | VR Builder Documentation",
    "keywords": "Interface IValidator Namespace : VRBuilder.Core.Editor.ProcessValidation Assembly : VRBuilder.Core.Editor.dll Syntax public interface IValidator Properties ValidatedContext Declaration Type ValidatedContext { get; } Property Value Type Description System.Type ValidatedType Declaration Type ValidatedType { get; } Property Value Type Description System.Type Methods CanValidate(Object) Declaration bool CanValidate(object validatableObject) Parameters Type Name Description System.Object validatableObject Returns Type Description System.Boolean Validate(Object, IContext) Declaration List<EditorReportEntry> Validate(object validatableObject, IContext context) Parameters Type Name Description System.Object validatableObject IContext context Returns Type Description System.Collections.Generic.List < EditorReportEntry >"
  },
  "api/VRBuilder.Core.Editor.Serialization.html": {
    "href": "api/VRBuilder.Core.Editor.Serialization.html",
    "title": "Namespace VRBuilder.Core.Editor.Serialization | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.Serialization Classes JsonEditorConfigurationSerializer"
  },
  "api/VRBuilder.Core.Editor.Serialization.JsonEditorConfigurationSerializer.html": {
    "href": "api/VRBuilder.Core.Editor.Serialization.JsonEditorConfigurationSerializer.html",
    "title": "Class JsonEditorConfigurationSerializer | VR Builder Documentation",
    "keywords": "Class JsonEditorConfigurationSerializer Inheritance System.Object JsonEditorConfigurationSerializer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.Serialization Assembly : VRBuilder.Core.Editor.dll Syntax public static class JsonEditorConfigurationSerializer Properties SerializerSettings Declaration public static JsonSerializerSettings SerializerSettings { get; } Property Value Type Description Newtonsoft.Json.JsonSerializerSettings Methods Deserialize(String) Declaration public static AllowedMenuItemsSettings Deserialize(string serialized) Parameters Type Name Description System.String serialized Returns Type Description AllowedMenuItemsSettings Serialize(AllowedMenuItemsSettings) Declaration public static string Serialize(AllowedMenuItemsSettings deserialized) Parameters Type Name Description AllowedMenuItemsSettings deserialized Returns Type Description System.String"
  },
  "api/VRBuilder.Core.Editor.Settings.BuilderProjectSettings.html": {
    "href": "api/VRBuilder.Core.Editor.Settings.BuilderProjectSettings.html",
    "title": "Class BuilderProjectSettings | VR Builder Documentation",
    "keywords": "Class BuilderProjectSettings Inheritance System.Object BuilderProjectSettings Namespace : VRBuilder.Core.Editor.Settings Assembly : VRBuilder.Core.Editor.dll Syntax public class BuilderProjectSettings : ScriptableObject Constructors BuilderProjectSettings() Declaration public BuilderProjectSettings() Fields IsFirstTimeStarted Declaration public bool IsFirstTimeStarted Field Value Type Description System.Boolean OpenXRControllerProfiles Declaration public List<string> OpenXRControllerProfiles Field Value Type Description System.Collections.Generic.List < System.String > ProjectBuilderVersion Declaration public string ProjectBuilderVersion Field Value Type Description System.String XRSDKs Declaration public List<XRLoaderHelper.XRSDK> XRSDKs Field Value Type Description System.Collections.Generic.List < XRLoaderHelper.XRSDK > Methods Load() Declaration public static BuilderProjectSettings Load() Returns Type Description BuilderProjectSettings Save() Declaration public void Save()"
  },
  "api/VRBuilder.Core.Editor.Settings.html": {
    "href": "api/VRBuilder.Core.Editor.Settings.html",
    "title": "Namespace VRBuilder.Core.Editor.Settings | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.Settings Classes BuilderProjectSettings"
  },
  "api/VRBuilder.Core.Editor.Setup.DefaultSceneSetupConfiguration.html": {
    "href": "api/VRBuilder.Core.Editor.Setup.DefaultSceneSetupConfiguration.html",
    "title": "Class DefaultSceneSetupConfiguration | VR Builder Documentation",
    "keywords": "Class DefaultSceneSetupConfiguration Inheritance System.Object DefaultSceneSetupConfiguration Implements ISceneSetupConfiguration Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.Setup Assembly : VRBuilder.Core.Editor.dll Syntax public class DefaultSceneSetupConfiguration : ISceneSetupConfiguration Constructors DefaultSceneSetupConfiguration() Declaration public DefaultSceneSetupConfiguration() Properties AllowedExtensionAssemblies Declaration public IEnumerable<string> AllowedExtensionAssemblies { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > DefaultConfettiPrefab Declaration public string DefaultConfettiPrefab { get; } Property Value Type Description System.String DefaultProcessController Declaration public string DefaultProcessController { get; } Property Value Type Description System.String Description Declaration public string Description { get; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String ParentObjectsHierarchy Declaration public string ParentObjectsHierarchy { get; } Property Value Type Description System.String Priority Declaration public int Priority { get; } Property Value Type Description System.Int32 RuntimeConfigurationName Declaration public string RuntimeConfigurationName { get; } Property Value Type Description System.String SceneTemplatePath Declaration public string SceneTemplatePath { get; } Property Value Type Description System.String Methods GetSetupNames() Declaration public IEnumerable<string> GetSetupNames() Returns Type Description System.Collections.Generic.IEnumerable < System.String > Implements ISceneSetupConfiguration"
  },
  "api/VRBuilder.Core.Editor.Setup.html": {
    "href": "api/VRBuilder.Core.Editor.Setup.html",
    "title": "Namespace VRBuilder.Core.Editor.Setup | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.Setup Classes DefaultSceneSetupConfiguration InputSystemChecker ProcessControllerSceneSetup RigLoaderSceneSetupConfiguration SceneSetup Interfaces ISceneSetupConfiguration"
  },
  "api/VRBuilder.Core.Editor.Setup.InputSystemChecker.html": {
    "href": "api/VRBuilder.Core.Editor.Setup.InputSystemChecker.html",
    "title": "Class InputSystemChecker | VR Builder Documentation",
    "keywords": "Class InputSystemChecker Inheritance System.Object InputSystemChecker Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.Setup Assembly : VRBuilder.Core.Editor.dll Syntax public static class InputSystemChecker"
  },
  "api/VRBuilder.Core.Editor.Setup.ISceneSetupConfiguration.html": {
    "href": "api/VRBuilder.Core.Editor.Setup.ISceneSetupConfiguration.html",
    "title": "Interface ISceneSetupConfiguration | VR Builder Documentation",
    "keywords": "Interface ISceneSetupConfiguration Namespace : VRBuilder.Core.Editor.Setup Assembly : VRBuilder.Core.Editor.dll Syntax public interface ISceneSetupConfiguration Properties AllowedExtensionAssemblies Declaration IEnumerable<string> AllowedExtensionAssemblies { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > DefaultConfettiPrefab Declaration string DefaultConfettiPrefab { get; } Property Value Type Description System.String DefaultProcessController Declaration string DefaultProcessController { get; } Property Value Type Description System.String Description Declaration string Description { get; } Property Value Type Description System.String Name Declaration string Name { get; } Property Value Type Description System.String ParentObjectsHierarchy Declaration string ParentObjectsHierarchy { get; } Property Value Type Description System.String Priority Declaration int Priority { get; } Property Value Type Description System.Int32 RuntimeConfigurationName Declaration string RuntimeConfigurationName { get; } Property Value Type Description System.String SceneTemplatePath Declaration string SceneTemplatePath { get; } Property Value Type Description System.String Methods GetSetupNames() Declaration IEnumerable<string> GetSetupNames() Returns Type Description System.Collections.Generic.IEnumerable < System.String >"
  },
  "api/VRBuilder.Core.Editor.Setup.ProcessControllerSceneSetup.html": {
    "href": "api/VRBuilder.Core.Editor.Setup.ProcessControllerSceneSetup.html",
    "title": "Class ProcessControllerSceneSetup | VR Builder Documentation",
    "keywords": "Class ProcessControllerSceneSetup Inheritance System.Object SceneSetup ProcessControllerSceneSetup Inherited Members SceneSetup.SetupPrefab(String, String) SceneSetup.SetPrefabParent(GameObject, String) SceneSetup.FindPrefab(String) SceneSetup.IsPrefabMissingInScene(String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.Setup Assembly : VRBuilder.Core.Editor.dll Syntax public class ProcessControllerSceneSetup : SceneSetup Constructors ProcessControllerSceneSetup() Declaration public ProcessControllerSceneSetup() Properties Key Declaration public override string Key { get; } Property Value Type Description System.String Overrides SceneSetup.Key Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides SceneSetup.Priority Methods Setup(ISceneSetupConfiguration) Declaration public override void Setup(ISceneSetupConfiguration configuration) Parameters Type Name Description ISceneSetupConfiguration configuration Overrides SceneSetup.Setup(ISceneSetupConfiguration)"
  },
  "api/VRBuilder.Core.Editor.Setup.RigLoaderSceneSetupConfiguration.html": {
    "href": "api/VRBuilder.Core.Editor.Setup.RigLoaderSceneSetupConfiguration.html",
    "title": "Class RigLoaderSceneSetupConfiguration | VR Builder Documentation",
    "keywords": "Class RigLoaderSceneSetupConfiguration Inheritance System.Object RigLoaderSceneSetupConfiguration Implements ISceneSetupConfiguration Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.Setup Assembly : VRBuilder.Core.Editor.dll Syntax public class RigLoaderSceneSetupConfiguration : ISceneSetupConfiguration Constructors RigLoaderSceneSetupConfiguration() Declaration public RigLoaderSceneSetupConfiguration() Properties AllowedExtensionAssemblies Declaration public IEnumerable<string> AllowedExtensionAssemblies { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > DefaultConfettiPrefab Declaration public string DefaultConfettiPrefab { get; } Property Value Type Description System.String DefaultProcessController Declaration public string DefaultProcessController { get; } Property Value Type Description System.String Description Declaration public string Description { get; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String ParentObjectsHierarchy Declaration public string ParentObjectsHierarchy { get; } Property Value Type Description System.String Priority Declaration public int Priority { get; } Property Value Type Description System.Int32 RuntimeConfigurationName Declaration public string RuntimeConfigurationName { get; } Property Value Type Description System.String SceneTemplatePath Declaration public string SceneTemplatePath { get; } Property Value Type Description System.String Methods GetSetupNames() Declaration public IEnumerable<string> GetSetupNames() Returns Type Description System.Collections.Generic.IEnumerable < System.String > Implements ISceneSetupConfiguration"
  },
  "api/VRBuilder.Core.Editor.Setup.SceneSetup.html": {
    "href": "api/VRBuilder.Core.Editor.Setup.SceneSetup.html",
    "title": "Class SceneSetup | VR Builder Documentation",
    "keywords": "Class SceneSetup Inheritance System.Object SceneSetup DefaultRigSceneSetup InteractionFrameworkSceneSetup RigLoaderSceneSetup ProcessControllerSceneSetup Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.Setup Assembly : VRBuilder.Core.Editor.dll Syntax public abstract class SceneSetup Constructors SceneSetup() Declaration protected SceneSetup() Properties Key Declaration public virtual string Key { get; } Property Value Type Description System.String Priority Declaration public virtual int Priority { get; } Property Value Type Description System.Int32 Methods FindPrefab(String) Declaration protected GameObject FindPrefab(string prefab) Parameters Type Name Description System.String prefab Returns Type Description UnityEngine.GameObject IsPrefabMissingInScene(String) Declaration protected bool IsPrefabMissingInScene(string prefabName) Parameters Type Name Description System.String prefabName Returns Type Description System.Boolean SetPrefabParent(GameObject, String) Declaration protected void SetPrefabParent(GameObject prefab, string parentPath) Parameters Type Name Description UnityEngine.GameObject prefab System.String parentPath Setup(ISceneSetupConfiguration) Declaration public abstract void Setup(ISceneSetupConfiguration configuration) Parameters Type Name Description ISceneSetupConfiguration configuration SetupPrefab(String, String) Declaration protected GameObject SetupPrefab(string prefab, string parentPath) Parameters Type Name Description System.String prefab System.String parentPath Returns Type Description UnityEngine.GameObject"
  },
  "api/VRBuilder.Core.Editor.TestableEditorElements.DisabledMenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.TestableEditorElements.DisabledMenuItem.html",
    "title": "Class TestableEditorElements.DisabledMenuItem | VR Builder Documentation",
    "keywords": "Class TestableEditorElements.DisabledMenuItem Inheritance System.Object TestableEditorElements.MenuOption TestableEditorElements.DisabledMenuItem Inherited Members TestableEditorElements.MenuOption.Label System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor Assembly : VRBuilder.Core.Editor.dll Syntax public sealed class DisabledMenuItem : TestableEditorElements.MenuOption Constructors DisabledMenuItem(GUIContent) Declaration public DisabledMenuItem(GUIContent label) Parameters Type Name Description UnityEngine.GUIContent label"
  },
  "api/VRBuilder.Core.Editor.TestableEditorElements.DisplayMode.html": {
    "href": "api/VRBuilder.Core.Editor.TestableEditorElements.DisplayMode.html",
    "title": "Enum TestableEditorElements.DisplayMode | VR Builder Documentation",
    "keywords": "Enum TestableEditorElements.DisplayMode Namespace : VRBuilder.Core.Editor Assembly : VRBuilder.Core.Editor.dll Syntax public enum DisplayMode Fields Name Description Normal Playback Recording"
  },
  "api/VRBuilder.Core.Editor.TestableEditorElements.html": {
    "href": "api/VRBuilder.Core.Editor.TestableEditorElements.html",
    "title": "Class TestableEditorElements | VR Builder Documentation",
    "keywords": "Class TestableEditorElements Inheritance System.Object TestableEditorElements Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor Assembly : VRBuilder.Core.Editor.dll Syntax public static class TestableEditorElements Properties Mode Declaration public static TestableEditorElements.DisplayMode Mode { get; } Property Value Type Description TestableEditorElements.DisplayMode Methods ClearProgressBar() Declaration public static void ClearProgressBar() DisplayCancelableProgressBar(String, String, Single) Declaration public static bool DisplayCancelableProgressBar(string title, string info, float progress) Parameters Type Name Description System.String title System.String info System.Single progress Returns Type Description System.Boolean DisplayContextMenu(IList<TestableEditorElements.MenuOption>) Declaration public static void DisplayContextMenu(IList<TestableEditorElements.MenuOption> options) Parameters Type Name Description System.Collections.Generic.IList < TestableEditorElements.MenuOption > options DisplayDialog(String, String, String, String) Declaration public static bool DisplayDialog(string title, string message, string ok, string cancel = \"\") Parameters Type Name Description System.String title System.String message System.String ok System.String cancel Returns Type Description System.Boolean DisplayDialogComplex(String, String, String, String, String) Declaration public static int DisplayDialogComplex(string title, string message, string ok, string cancel, string alt) Parameters Type Name Description System.String title System.String message System.String ok System.String cancel System.String alt Returns Type Description System.Int32 DisplayDropdownMenu(Rect, IList<TestableEditorElements.MenuOption>) Declaration public static void DisplayDropdownMenu(Rect position, IList<TestableEditorElements.MenuOption> options) Parameters Type Name Description UnityEngine.Rect position System.Collections.Generic.IList < TestableEditorElements.MenuOption > options DisplayProgressBar(String, String, Single) Declaration public static void DisplayProgressBar(string title, string info, float progress) Parameters Type Name Description System.String title System.String info System.Single progress OpenFilePanel(String, String, String) Declaration public static string OpenFilePanel(string title, string directory, string extension) Parameters Type Name Description System.String title System.String directory System.String extension Returns Type Description System.String OpenFilePanelWithFilters(String, String, String[]) Declaration public static string OpenFilePanelWithFilters(string title, string directory, string[] filters) Parameters Type Name Description System.String title System.String directory System.String [] filters Returns Type Description System.String OpenFolderPanel(String, String, String) Declaration public static string OpenFolderPanel(string title, string folder, string defaultName) Parameters Type Name Description System.String title System.String folder System.String defaultName Returns Type Description System.String Panic() Declaration public static void Panic() SaveFilePanel(String, String, String, String) Declaration public static string SaveFilePanel(string title, string directory, string defaultName, string extension) Parameters Type Name Description System.String title System.String directory System.String defaultName System.String extension Returns Type Description System.String SaveFilePanelInProject(String, String, String, String) Declaration public static string SaveFilePanelInProject(string title, string defaultName, string extension, string message) Parameters Type Name Description System.String title System.String defaultName System.String extension System.String message Returns Type Description System.String SaveFolderPanel(String, String, String) Declaration public static string SaveFolderPanel(string title, string folder, string defaultName) Parameters Type Name Description System.String title System.String folder System.String defaultName Returns Type Description System.String StartPlayback(List<String>) Declaration public static void StartPlayback(List<string> selections) Parameters Type Name Description System.Collections.Generic.List < System.String > selections StartRecording() Declaration public static void StartRecording() StopPlayback() Declaration public static void StopPlayback() StopRecording() Declaration public static List<string> StopRecording() Returns Type Description System.Collections.Generic.List < System.String >"
  },
  "api/VRBuilder.Core.Editor.TestableEditorElements.MenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.TestableEditorElements.MenuItem.html",
    "title": "Class TestableEditorElements.MenuItem | VR Builder Documentation",
    "keywords": "Class TestableEditorElements.MenuItem Inheritance System.Object TestableEditorElements.MenuOption TestableEditorElements.MenuItem Inherited Members TestableEditorElements.MenuOption.Label System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor Assembly : VRBuilder.Core.Editor.dll Syntax public sealed class MenuItem : TestableEditorElements.MenuOption Constructors MenuItem(GUIContent, Boolean, GenericMenu.MenuFunction) Declaration public MenuItem(GUIContent label, bool on, GenericMenu.MenuFunction func) Parameters Type Name Description UnityEngine.GUIContent label System.Boolean on UnityEditor.GenericMenu.MenuFunction func MenuItem(GUIContent, Boolean, GenericMenu.MenuFunction2, Object) Declaration public MenuItem(GUIContent label, bool on, GenericMenu.MenuFunction2 func, object userData) Parameters Type Name Description UnityEngine.GUIContent label System.Boolean on UnityEditor.GenericMenu.MenuFunction2 func System.Object userData Properties Func Declaration public GenericMenu.MenuFunction Func { get; } Property Value Type Description UnityEditor.GenericMenu.MenuFunction Func2 Declaration public GenericMenu.MenuFunction2 Func2 { get; } Property Value Type Description UnityEditor.GenericMenu.MenuFunction2 On Declaration public bool On { get; } Property Value Type Description System.Boolean UserData Declaration public object UserData { get; } Property Value Type Description System.Object"
  },
  "api/VRBuilder.Core.Editor.TestableEditorElements.MenuOption.html": {
    "href": "api/VRBuilder.Core.Editor.TestableEditorElements.MenuOption.html",
    "title": "Class TestableEditorElements.MenuOption | VR Builder Documentation",
    "keywords": "Class TestableEditorElements.MenuOption Inheritance System.Object TestableEditorElements.MenuOption TestableEditorElements.DisabledMenuItem TestableEditorElements.MenuItem TestableEditorElements.MenuSeparator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor Assembly : VRBuilder.Core.Editor.dll Syntax public class MenuOption Constructors MenuOption(GUIContent) Declaration protected MenuOption(GUIContent label) Parameters Type Name Description UnityEngine.GUIContent label Properties Label Declaration public GUIContent Label { get; } Property Value Type Description UnityEngine.GUIContent"
  },
  "api/VRBuilder.Core.Editor.TestableEditorElements.MenuSeparator.html": {
    "href": "api/VRBuilder.Core.Editor.TestableEditorElements.MenuSeparator.html",
    "title": "Class TestableEditorElements.MenuSeparator | VR Builder Documentation",
    "keywords": "Class TestableEditorElements.MenuSeparator Inheritance System.Object TestableEditorElements.MenuOption TestableEditorElements.MenuSeparator Inherited Members TestableEditorElements.MenuOption.Label System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor Assembly : VRBuilder.Core.Editor.dll Syntax public sealed class MenuSeparator : TestableEditorElements.MenuOption Constructors MenuSeparator(String) Declaration public MenuSeparator(string pathToSubmenu) Parameters Type Name Description System.String pathToSubmenu"
  },
  "api/VRBuilder.Core.Editor.TextToSpeech.DefaultTextToSpeechConfiguration.html": {
    "href": "api/VRBuilder.Core.Editor.TextToSpeech.DefaultTextToSpeechConfiguration.html",
    "title": "Class DefaultTextToSpeechConfiguration | VR Builder Documentation",
    "keywords": "Class DefaultTextToSpeechConfiguration Inheritance System.Object SettingsObject < DefaultTextToSpeechConfiguration > DefaultTextToSpeechConfiguration Inherited Members SettingsObject<DefaultTextToSpeechConfiguration>.Save() SettingsObject<DefaultTextToSpeechConfiguration>.Finalize() SettingsObject<DefaultTextToSpeechConfiguration>.Instance Namespace : VRBuilder.Core.Editor.TextToSpeech Assembly : VRBuilder.Core.Editor.dll Syntax public class DefaultTextToSpeechConfiguration : SettingsObject<DefaultTextToSpeechConfiguration> Constructors DefaultTextToSpeechConfiguration() Declaration public DefaultTextToSpeechConfiguration()"
  },
  "api/VRBuilder.Core.Editor.TextToSpeech.html": {
    "href": "api/VRBuilder.Core.Editor.TextToSpeech.html",
    "title": "Namespace VRBuilder.Core.Editor.TextToSpeech | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.TextToSpeech Classes DefaultTextToSpeechConfiguration NAudioConverter TextToSpeechBuildPreprocessor"
  },
  "api/VRBuilder.Core.Editor.TextToSpeech.NAudioConverter.html": {
    "href": "api/VRBuilder.Core.Editor.TextToSpeech.NAudioConverter.html",
    "title": "Class NAudioConverter | VR Builder Documentation",
    "keywords": "Class NAudioConverter Inheritance System.Object NAudioConverter Implements IAudioConverter Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.TextToSpeech Assembly : VRBuilder.Core.Editor.dll Syntax public class NAudioConverter : IAudioConverter Constructors NAudioConverter() Declaration public NAudioConverter() Methods CreateAudioClipFromMp3(Byte[]) Declaration public AudioClip CreateAudioClipFromMp3(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description UnityEngine.AudioClip CreateAudioClipFromWAVE(Byte[]) Declaration public AudioClip CreateAudioClipFromWAVE(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description UnityEngine.AudioClip TryWriteAudioClipToFile(AudioClip, String) Declaration public bool TryWriteAudioClipToFile(AudioClip audio, string filePath) Parameters Type Name Description UnityEngine.AudioClip audio System.String filePath Returns Type Description System.Boolean Implements IAudioConverter"
  },
  "api/VRBuilder.Core.Editor.TextToSpeech.Providers.DummyTextToSpeechProvider.html": {
    "href": "api/VRBuilder.Core.Editor.TextToSpeech.Providers.DummyTextToSpeechProvider.html",
    "title": "Class DummyTextToSpeechProvider | VR Builder Documentation",
    "keywords": "Class DummyTextToSpeechProvider Inheritance System.Object DummyTextToSpeechProvider Implements ITextToSpeechProvider Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.TextToSpeech.Providers Assembly : VRBuilder.Core.Editor.dll Syntax public class DummyTextToSpeechProvider : ITextToSpeechProvider Constructors DummyTextToSpeechProvider() Declaration public DummyTextToSpeechProvider() Methods ConvertTextToSpeech(String, Locale) Declaration public Task<AudioClip> ConvertTextToSpeech(string text, Locale locale) Parameters Type Name Description System.String text UnityEngine.Localization.Locale locale Returns Type Description System.Threading.Tasks.Task < UnityEngine.AudioClip > LoadConfig() Declaration public ITextToSpeechConfiguration LoadConfig() Returns Type Description ITextToSpeechConfiguration SetConfig(ITextToSpeechConfiguration) Declaration public void SetConfig(ITextToSpeechConfiguration configuration) Parameters Type Name Description ITextToSpeechConfiguration configuration Implements ITextToSpeechProvider"
  },
  "api/VRBuilder.Core.Editor.TextToSpeech.Providers.html": {
    "href": "api/VRBuilder.Core.Editor.TextToSpeech.Providers.html",
    "title": "Namespace VRBuilder.Core.Editor.TextToSpeech.Providers | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.TextToSpeech.Providers Classes DummyTextToSpeechProvider MicrosoftSapiTextToSpeechProvider WebTextToSpeechProvider WebTextToSpeechProvider.DownloadFailedException"
  },
  "api/VRBuilder.Core.Editor.TextToSpeech.Providers.MicrosoftSapiTextToSpeechProvider.html": {
    "href": "api/VRBuilder.Core.Editor.TextToSpeech.Providers.MicrosoftSapiTextToSpeechProvider.html",
    "title": "Class MicrosoftSapiTextToSpeechProvider | VR Builder Documentation",
    "keywords": "Class MicrosoftSapiTextToSpeechProvider Inheritance System.Object MicrosoftSapiTextToSpeechProvider Implements ITextToSpeechProvider Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.TextToSpeech.Providers Assembly : VRBuilder.Core.Editor.dll Syntax public class MicrosoftSapiTextToSpeechProvider : ITextToSpeechProvider Constructors MicrosoftSapiTextToSpeechProvider() Declaration public MicrosoftSapiTextToSpeechProvider() Methods ConvertTextToSpeech(String, Locale) Declaration public Task<AudioClip> ConvertTextToSpeech(string text, Locale locale) Parameters Type Name Description System.String text UnityEngine.Localization.Locale locale Returns Type Description System.Threading.Tasks.Task < UnityEngine.AudioClip > LoadConfig() Declaration public ITextToSpeechConfiguration LoadConfig() Returns Type Description ITextToSpeechConfiguration SetConfig(ITextToSpeechConfiguration) Declaration public void SetConfig(ITextToSpeechConfiguration configuration) Parameters Type Name Description ITextToSpeechConfiguration configuration Implements ITextToSpeechProvider"
  },
  "api/VRBuilder.Core.Editor.TextToSpeech.Providers.WebTextToSpeechProvider.DownloadFailedException.html": {
    "href": "api/VRBuilder.Core.Editor.TextToSpeech.Providers.WebTextToSpeechProvider.DownloadFailedException.html",
    "title": "Class WebTextToSpeechProvider.DownloadFailedException | VR Builder Documentation",
    "keywords": "Class WebTextToSpeechProvider.DownloadFailedException Inheritance System.Object System.Exception WebTextToSpeechProvider.DownloadFailedException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.TextToSpeech.Providers Assembly : VRBuilder.Core.Editor.dll Syntax public class DownloadFailedException : Exception, ISerializable, _Exception Constructors DownloadFailedException(String) Declaration public DownloadFailedException(string msg) Parameters Type Name Description System.String msg DownloadFailedException(String, Exception) Declaration public DownloadFailedException(string msg, Exception ex) Parameters Type Name Description System.String msg System.Exception ex Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception"
  },
  "api/VRBuilder.Core.Editor.TextToSpeech.Providers.WebTextToSpeechProvider.html": {
    "href": "api/VRBuilder.Core.Editor.TextToSpeech.Providers.WebTextToSpeechProvider.html",
    "title": "Class WebTextToSpeechProvider | VR Builder Documentation",
    "keywords": "Class WebTextToSpeechProvider Inheritance System.Object WebTextToSpeechProvider Implements ITextToSpeechProvider Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.TextToSpeech.Providers Assembly : VRBuilder.Core.Editor.dll Syntax public abstract class WebTextToSpeechProvider : ITextToSpeechProvider Constructors WebTextToSpeechProvider() Declaration protected WebTextToSpeechProvider() WebTextToSpeechProvider(UnityWebRequest) Declaration protected WebTextToSpeechProvider(UnityWebRequest unityWebRequest) Parameters Type Name Description UnityEngine.Networking.UnityWebRequest unityWebRequest WebTextToSpeechProvider(UnityWebRequest, IAudioConverter) Declaration protected WebTextToSpeechProvider(UnityWebRequest unityWebRequest, IAudioConverter audioConverter) Parameters Type Name Description UnityEngine.Networking.UnityWebRequest unityWebRequest IAudioConverter audioConverter Fields AudioConverter Declaration protected readonly IAudioConverter AudioConverter Field Value Type Description IAudioConverter Configuration Declaration protected ITextToSpeechConfiguration Configuration Field Value Type Description ITextToSpeechConfiguration UnityWebRequest Declaration protected readonly UnityWebRequest UnityWebRequest Field Value Type Description UnityEngine.Networking.UnityWebRequest Properties AudioType Declaration protected AudioType AudioType { get; set; } Property Value Type Description UnityEngine.AudioType Methods ConvertTextToSpeech(String, Locale) Declaration public Task<AudioClip> ConvertTextToSpeech(string text, Locale locale) Parameters Type Name Description System.String text UnityEngine.Localization.Locale locale Returns Type Description System.Threading.Tasks.Task < UnityEngine.AudioClip > CreateAudioClip(Byte[]) Declaration protected virtual AudioClip CreateAudioClip(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description UnityEngine.AudioClip CreateRequest(String, String) Declaration protected virtual UnityWebRequest CreateRequest(string url, string text) Parameters Type Name Description System.String url System.String text Returns Type Description UnityEngine.Networking.UnityWebRequest DownloadAudio(String, Locale, TaskCompletionSource<AudioClip>) Declaration protected virtual IEnumerator DownloadAudio(string text, Locale locale, TaskCompletionSource<AudioClip> task) Parameters Type Name Description System.String text UnityEngine.Localization.Locale locale System.Threading.Tasks.TaskCompletionSource < UnityEngine.AudioClip > task Returns Type Description System.Collections.IEnumerator GetAudioFileDownloadUrl(String) Declaration protected abstract string GetAudioFileDownloadUrl(string text) Parameters Type Name Description System.String text Returns Type Description System.String LoadConfig() Declaration public ITextToSpeechConfiguration LoadConfig() Returns Type Description ITextToSpeechConfiguration SetConfig(ITextToSpeechConfiguration) Declaration public void SetConfig(ITextToSpeechConfiguration configuration) Parameters Type Name Description ITextToSpeechConfiguration configuration Implements ITextToSpeechProvider"
  },
  "api/VRBuilder.Core.Editor.TextToSpeech.TextToSpeechBuildPreprocessor.html": {
    "href": "api/VRBuilder.Core.Editor.TextToSpeech.TextToSpeechBuildPreprocessor.html",
    "title": "Class TextToSpeechBuildPreprocessor | VR Builder Documentation",
    "keywords": "Class TextToSpeechBuildPreprocessor Inheritance System.Object TextToSpeechBuildPreprocessor Implements UnityEditor.Build.IPreprocessBuildWithReport UnityEditor.Build.IOrderedCallback Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.TextToSpeech Assembly : VRBuilder.Core.Editor.dll Syntax public class TextToSpeechBuildPreprocessor Constructors TextToSpeechBuildPreprocessor() Declaration public TextToSpeechBuildPreprocessor() Properties callbackOrder Declaration public int callbackOrder { get; } Property Value Type Description System.Int32 Methods OnPreprocessBuild(BuildReport) Declaration public void OnPreprocessBuild(BuildReport report) Parameters Type Name Description UnityEditor.Build.Reporting.BuildReport report Implements UnityEditor.Build.IPreprocessBuildWithReport UnityEditor.Build.IOrderedCallback"
  },
  "api/VRBuilder.Core.Editor.TextToSpeech.Utils.html": {
    "href": "api/VRBuilder.Core.Editor.TextToSpeech.Utils.html",
    "title": "Namespace VRBuilder.Core.Editor.TextToSpeech.Utils | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.TextToSpeech.Utils Classes TextToSpeechEditorUtils"
  },
  "api/VRBuilder.Core.Editor.TextToSpeech.Utils.TextToSpeechEditorUtils.html": {
    "href": "api/VRBuilder.Core.Editor.TextToSpeech.Utils.TextToSpeechEditorUtils.html",
    "title": "Class TextToSpeechEditorUtils | VR Builder Documentation",
    "keywords": "Class TextToSpeechEditorUtils Inheritance System.Object TextToSpeechEditorUtils Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.TextToSpeech.Utils Assembly : VRBuilder.Core.Editor.dll Syntax public static class TextToSpeechEditorUtils Methods CacheAudioClip(String, Locale, ITextToSpeechConfiguration) Declaration public static Task CacheAudioClip(string text, Locale locale, ITextToSpeechConfiguration configuration) Parameters Type Name Description System.String text UnityEngine.Localization.Locale locale ITextToSpeechConfiguration configuration Returns Type Description System.Threading.Tasks.Task CacheTextToSpeechClips(IEnumerable<ITextToSpeechContent>, Locale, String) Declaration public static Task<int> CacheTextToSpeechClips(IEnumerable<ITextToSpeechContent> clips, Locale locale, string localizationTable) Parameters Type Name Description System.Collections.Generic.IEnumerable < ITextToSpeechContent > clips UnityEngine.Localization.Locale locale System.String localizationTable Returns Type Description System.Threading.Tasks.Task < System.Int32 > GenerateTextToSpeechForAllProcesses() Declaration public static void GenerateTextToSpeechForAllProcesses() GenerateTextToSpeechForAllProcesses(Locale) Declaration public static Task GenerateTextToSpeechForAllProcesses(Locale locale) Parameters Type Name Description UnityEngine.Localization.Locale locale Returns Type Description System.Threading.Tasks.Task GenerateTextToSpeechForAllProcessesAndActiveOrDefaultLocale() Declaration public static void GenerateTextToSpeechForAllProcessesAndActiveOrDefaultLocale()"
  },
  "api/VRBuilder.Core.Editor.UI.BuilderEditorStyles.html": {
    "href": "api/VRBuilder.Core.Editor.UI.BuilderEditorStyles.html",
    "title": "Class BuilderEditorStyles | VR Builder Documentation",
    "keywords": "Class BuilderEditorStyles Inheritance System.Object BuilderEditorStyles Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI Assembly : VRBuilder.Core.Editor.dll Syntax public static class BuilderEditorStyles Fields BaseIndent Declaration public const int BaseIndent = 2 Field Value Type Description System.Int32 HighlightTextColor Declaration public static Color HighlightTextColor Field Value Type Description UnityEngine.Color Indent Declaration public const int Indent = 12 Field Value Type Description System.Int32 IndentLarge Declaration public const int IndentLarge = 36 Field Value Type Description System.Int32 Properties Button Declaration public static GUIStyle Button { get; } Property Value Type Description UnityEngine.GUIStyle Header Declaration public static GUIStyle Header { get; } Property Value Type Description UnityEngine.GUIStyle HelpBox Declaration public static GUIStyle HelpBox { get; } Property Value Type Description UnityEngine.GUIStyle Label Declaration public static GUIStyle Label { get; } Property Value Type Description UnityEngine.GUIStyle Link Declaration public static GUIStyle Link { get; } Property Value Type Description UnityEngine.GUIStyle Paragraph Declaration public static GUIStyle Paragraph { get; } Property Value Type Description UnityEngine.GUIStyle ParagraphNoPadding Declaration public static GUIStyle ParagraphNoPadding { get; } Property Value Type Description UnityEngine.GUIStyle Popup Declaration public static GUIStyle Popup { get; } Property Value Type Description UnityEngine.GUIStyle RadioButton Declaration public static GUIStyle RadioButton { get; } Property Value Type Description UnityEngine.GUIStyle SubText Declaration public static GUIStyle SubText { get; } Property Value Type Description UnityEngine.GUIStyle TextField Declaration public static GUIStyle TextField { get; } Property Value Type Description UnityEngine.GUIStyle Title Declaration public static GUIStyle Title { get; } Property Value Type Description UnityEngine.GUIStyle TitleNoPadding Declaration public static GUIStyle TitleNoPadding { get; } Property Value Type Description UnityEngine.GUIStyle Toggle Declaration public static GUIStyle Toggle { get; } Property Value Type Description UnityEngine.GUIStyle Methods ApplyMargin(GUIStyle, Int32) Declaration public static GUIStyle ApplyMargin(GUIStyle style, int ident = 12) Parameters Type Name Description UnityEngine.GUIStyle style System.Int32 ident Returns Type Description UnityEngine.GUIStyle ApplyMargin(GUIStyle, RectOffset) Declaration public static GUIStyle ApplyMargin(GUIStyle style, RectOffset indent) Parameters Type Name Description UnityEngine.GUIStyle style UnityEngine.RectOffset indent Returns Type Description UnityEngine.GUIStyle ApplyPadding(GUIStyle, Int32) Declaration public static GUIStyle ApplyPadding(GUIStyle style, int ident = 12) Parameters Type Name Description UnityEngine.GUIStyle style System.Int32 ident Returns Type Description UnityEngine.GUIStyle ApplyPadding(GUIStyle, RectOffset) Declaration public static GUIStyle ApplyPadding(GUIStyle style, RectOffset indent) Parameters Type Name Description UnityEngine.GUIStyle style UnityEngine.RectOffset indent Returns Type Description UnityEngine.GUIStyle"
  },
  "api/VRBuilder.Core.Editor.UI.BuilderGUILayout.html": {
    "href": "api/VRBuilder.Core.Editor.UI.BuilderGUILayout.html",
    "title": "Class BuilderGUILayout | VR Builder Documentation",
    "keywords": "Class BuilderGUILayout Inheritance System.Object BuilderGUILayout Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI Assembly : VRBuilder.Core.Editor.dll Syntax public static class BuilderGUILayout Methods DrawCheckBoxList<T>(IEnumerable<T>, List<T>, List<String>, List<T>) Declaration public static IEnumerable<T> DrawCheckBoxList<T>(IEnumerable<T> selection, List<T> entries, List<string> content, List<T> disabledEntries) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> selection System.Collections.Generic.List <T> entries System.Collections.Generic.List < System.String > content System.Collections.Generic.List <T> disabledEntries Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T DrawLink(String, Action, Int32) Declaration public static void DrawLink(string text, Action action, int indent = 12) Parameters Type Name Description System.String text System.Action action System.Int32 indent DrawLink(String, String, Int32) Declaration public static void DrawLink(string text, string url, int indent = 12) Parameters Type Name Description System.String text System.String url System.Int32 indent DrawTextField(String, Int32, Int32, GUILayoutOption[]) Declaration public static string DrawTextField(string content, int charLimit = -1, int indent = 0, params GUILayoutOption[] options) Parameters Type Name Description System.String content System.Int32 charLimit System.Int32 indent UnityEngine.GUILayoutOption [] options Returns Type Description System.String DrawTextField(String, Int32, GUILayoutOption[]) Declaration public static string DrawTextField(string content, int charLimit = -1, params GUILayoutOption[] options) Parameters Type Name Description System.String content System.Int32 charLimit UnityEngine.GUILayoutOption [] options Returns Type Description System.String DrawToggleGroup<T>(T, List<T>, List<String>, List<T>) Declaration public static T DrawToggleGroup<T>(T selection, List<T> entries, List<string> content, List<T> disabledEntries) Parameters Type Name Description T selection System.Collections.Generic.List <T> entries System.Collections.Generic.List < System.String > content System.Collections.Generic.List <T> disabledEntries Returns Type Description T Type Parameters Name Description T DrawToggleGroup<T>(T, List<T>, List<GUIContent>, List<T>) Declaration public static T DrawToggleGroup<T>(T selection, List<T> entries, List<GUIContent> content, List<T> disabledEntries) Parameters Type Name Description T selection System.Collections.Generic.List <T> entries System.Collections.Generic.List < UnityEngine.GUIContent > content System.Collections.Generic.List <T> disabledEntries Returns Type Description T Type Parameters Name Description T"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.AbstractDrawer.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.AbstractDrawer.html",
    "title": "Class AbstractDrawer | VR Builder Documentation",
    "keywords": "Class AbstractDrawer Inheritance System.Object AbstractDrawer DropdownDrawer<T> ObjectDrawer ProcessSceneReferenceDrawer ResourcePathDrawer<T> SelectableValueDrawer<TFirst, TSecond> Implements IProcessDrawer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax public abstract class AbstractDrawer : IProcessDrawer Constructors AbstractDrawer() Declaration protected AbstractDrawer() Methods ChangeValue(Func<Object>, Func<Object>, Action<Object>) Declaration public void ChangeValue(Func<object> getNewValueCallback, Func<object> getOldValueCallback, Action<object> assignValueCallback) Parameters Type Name Description System.Func < System.Object > getNewValueCallback System.Func < System.Object > getOldValueCallback System.Action < System.Object > assignValueCallback Draw(Rect, Object, Action<Object>, String) Declaration public Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, string label) Parameters Type Name Description UnityEngine.Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback System.String label Returns Type Description UnityEngine.Rect Draw(Rect, Object, Action<Object>, GUIContent) Declaration public abstract Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description UnityEngine.Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback UnityEngine.GUIContent label Returns Type Description UnityEngine.Rect GetLabel(Object, Type) Declaration public virtual GUIContent GetLabel(object value, Type declaredType) Parameters Type Name Description System.Object value System.Type declaredType Returns Type Description UnityEngine.GUIContent GetLabel(MemberInfo, Object) Declaration public virtual GUIContent GetLabel(MemberInfo memberInfo, object memberOwner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object memberOwner Returns Type Description UnityEngine.GUIContent Implements IProcessDrawer"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.AnimationClipResourceDrawer.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.AnimationClipResourceDrawer.html",
    "title": "Class AnimationClipResourceDrawer | VR Builder Documentation",
    "keywords": "Class AnimationClipResourceDrawer Inheritance System.Object AbstractDrawer ResourcePathDrawer < UnityEngine.AnimationClip > AnimationClipResourceDrawer Implements IProcessDrawer Inherited Members ResourcePathDrawer<AnimationClip>.Draw(Rect, Object, Action<Object>, GUIContent) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax public class AnimationClipResourceDrawer : ResourcePathDrawer<AnimationClip>, IProcessDrawer Constructors AnimationClipResourceDrawer() Declaration public AnimationClipResourceDrawer() Methods ValidateResource(AnimationClip) Declaration public override void ValidateResource(AnimationClip resource) Parameters Type Name Description UnityEngine.AnimationClip resource Overrides VRBuilder.Core.Editor.UI.Drawers.ResourcePathDrawer<UnityEngine.AnimationClip>.ValidateResource(UnityEngine.AnimationClip) Implements IProcessDrawer"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.CompareValuesDrawer-1.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.CompareValuesDrawer-1.html",
    "title": "Class CompareValuesDrawer<T> | VR Builder Documentation",
    "keywords": "Class CompareValuesDrawer<T> Inheritance System.Object AbstractDrawer ObjectDrawer NameableDrawer CompareValuesDrawer<T> Implements IProcessDrawer Inherited Members NameableDrawer.DrawLabel(Rect, Object, Action<Object>, GUIContent) ObjectDrawer.CheckValidationForValue(Object, MemberInfo, GUIContent) ObjectDrawer.AddValidationInformation(GUIContent, List<EditorReportEntry>) ObjectDrawer.GetValidationReports(Object) ObjectDrawer.GetValidationReportsFor(IData, MemberInfo) ObjectDrawer.GetLabel(MemberInfo, Object) ObjectDrawer.GetLabel(Object, Type) ObjectDrawer.GetMembersToDraw(Object) ObjectDrawer.GetTypeNameLabel(Object, Type) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax public abstract class CompareValuesDrawer<T> : NameableDrawer, IProcessDrawer where T : IEquatable<T>, IComparable<T> Type Parameters Name Description T Constructors CompareValuesDrawer() Declaration protected CompareValuesDrawer() Methods Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description UnityEngine.Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback UnityEngine.GUIContent label Returns Type Description UnityEngine.Rect Overrides ObjectDrawer.Draw(Rect, Object, Action<Object>, GUIContent) DrawOperatorDropdown(Action<Object>, Rect, CompareValuesCondition<T>.EntityData) Declaration protected abstract Rect DrawOperatorDropdown(Action<object> changeValueCallback, Rect nextPosition, CompareValuesCondition<T>.EntityData data) Parameters Type Name Description System.Action < System.Object > changeValueCallback UnityEngine.Rect nextPosition CompareValuesCondition.EntityData <> data Returns Type Description UnityEngine.Rect Implements IProcessDrawer"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.DefaultProcessDrawerAttribute.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.DefaultProcessDrawerAttribute.html",
    "title": "Class DefaultProcessDrawerAttribute | VR Builder Documentation",
    "keywords": "Class DefaultProcessDrawerAttribute Inheritance System.Object System.Attribute DefaultProcessDrawerAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax [AttributeUsage(AttributeTargets.Class, Inherited = false)] public class DefaultProcessDrawerAttribute : Attribute, _Attribute Constructors DefaultProcessDrawerAttribute(Type) Declaration public DefaultProcessDrawerAttribute(Type type) Parameters Type Name Description System.Type type Properties DrawableType Declaration public Type DrawableType { get; } Property Value Type Description System.Type Implements System.Runtime.InteropServices._Attribute"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.DrawerLocator.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.DrawerLocator.html",
    "title": "Class DrawerLocator | VR Builder Documentation",
    "keywords": "Class DrawerLocator Inheritance System.Object DrawerLocator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax public static class DrawerLocator Methods GetDrawerForMember(MemberInfo, Object) Declaration public static IProcessDrawer GetDrawerForMember(MemberInfo memberInfo, object owner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object owner Returns Type Description IProcessDrawer GetDrawerForValue(Object, Type) Declaration public static IProcessDrawer GetDrawerForValue(object value, Type declaredType) Parameters Type Name Description System.Object value System.Type declaredType Returns Type Description IProcessDrawer GetInstantiatorDrawer(Type) Declaration public static IProcessDrawer GetInstantiatorDrawer(Type declaredType) Parameters Type Name Description System.Type declaredType Returns Type Description IProcessDrawer"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.DropdownDrawer-1.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.DropdownDrawer-1.html",
    "title": "Class DropdownDrawer<T> | VR Builder Documentation",
    "keywords": "Class DropdownDrawer<T> Inheritance System.Object AbstractDrawer DropdownDrawer<T> SceneDropdownDrawer Implements IProcessDrawer Inherited Members AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax public abstract class DropdownDrawer<T> : AbstractDrawer, IProcessDrawer where T : IEquatable<T> Type Parameters Name Description T Constructors DropdownDrawer() Declaration protected DropdownDrawer() Properties PossibleOptions Declaration protected abstract IList<DropDownElement<T>> PossibleOptions { get; } Property Value Type Description System.Collections.Generic.IList < DropDownElement <T>> Methods Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description UnityEngine.Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback UnityEngine.GUIContent label Returns Type Description UnityEngine.Rect Overrides AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) Implements IProcessDrawer"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.DropDownElement-1.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.DropDownElement-1.html",
    "title": "Struct DropDownElement<T> | VR Builder Documentation",
    "keywords": "Struct DropDownElement<T> Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax public struct DropDownElement<T> where T : IEquatable<T> Type Parameters Name Description T Constructors DropDownElement(T) Declaration public DropDownElement(T value) Parameters Type Name Description T value DropDownElement(T, String) Declaration public DropDownElement(T value, string label) Parameters Type Name Description T value System.String label DropDownElement(T, GUIContent) Declaration public DropDownElement(T value, GUIContent label) Parameters Type Name Description T value UnityEngine.GUIContent label Properties Label Declaration public GUIContent Label { readonly get; set; } Property Value Type Description UnityEngine.GUIContent Value Declaration public T Value { readonly get; set; } Property Value Type Description T"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.html",
    "title": "Namespace VRBuilder.Core.Editor.UI.Drawers | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.UI.Drawers Classes AbstractDrawer AnimationClipResourceDrawer CompareValuesDrawer<T> DefaultProcessDrawerAttribute DrawerLocator DropdownDrawer<T> LocalizationTableDrawer NameableDrawer ObjectDrawer PlayAudioBehaviorDrawer ProcessSceneReferenceDrawer ProcessVariableBoolSelectableValueDrawer ProcessVariableFloatSelectableValueDrawer ProcessVariableStringSelectableValueDrawer ResourcePathDrawer<T> SceneDropdownDrawer SelectableValueDrawer<TFirst, TSecond> SetComponentEnabledBehaviorDrawer StringsSelectableValueDrawer VideoClipResourceDrawer Structs DropDownElement<T> Interfaces IProcessDrawer"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.IProcessDrawer.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.IProcessDrawer.html",
    "title": "Interface IProcessDrawer | VR Builder Documentation",
    "keywords": "Interface IProcessDrawer Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax public interface IProcessDrawer Methods ChangeValue(Func<Object>, Func<Object>, Action<Object>) Declaration void ChangeValue(Func<object> getNewValueCallback, Func<object> getOldValueCallback, Action<object> assignValueCallback) Parameters Type Name Description System.Func < System.Object > getNewValueCallback System.Func < System.Object > getOldValueCallback System.Action < System.Object > assignValueCallback Draw(Rect, Object, Action<Object>, String) Declaration Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, string label) Parameters Type Name Description UnityEngine.Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback System.String label Returns Type Description UnityEngine.Rect Draw(Rect, Object, Action<Object>, GUIContent) Declaration Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description UnityEngine.Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback UnityEngine.GUIContent label Returns Type Description UnityEngine.Rect GetLabel(Object, Type) Declaration GUIContent GetLabel(object value, Type declaredType) Parameters Type Name Description System.Object value System.Type declaredType Returns Type Description UnityEngine.GUIContent GetLabel(MemberInfo, Object) Declaration GUIContent GetLabel(MemberInfo memberInfo, object memberOwner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object memberOwner Returns Type Description UnityEngine.GUIContent"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.LocalizationTableDrawer.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.LocalizationTableDrawer.html",
    "title": "Class LocalizationTableDrawer | VR Builder Documentation",
    "keywords": "Class LocalizationTableDrawer Inheritance System.Object AbstractDrawer ObjectDrawer LocalizationTableDrawer Implements IProcessDrawer Inherited Members ObjectDrawer.CheckValidationForValue(Object, MemberInfo, GUIContent) ObjectDrawer.AddValidationInformation(GUIContent, List<EditorReportEntry>) ObjectDrawer.GetValidationReports(Object) ObjectDrawer.GetValidationReportsFor(IData, MemberInfo) ObjectDrawer.DrawLabel(Rect, Object, Action<Object>, GUIContent) ObjectDrawer.GetLabel(MemberInfo, Object) ObjectDrawer.GetLabel(Object, Type) ObjectDrawer.GetMembersToDraw(Object) ObjectDrawer.GetTypeNameLabel(Object, Type) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax public class LocalizationTableDrawer : ObjectDrawer, IProcessDrawer Constructors LocalizationTableDrawer() Declaration public LocalizationTableDrawer() Methods Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description UnityEngine.Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback UnityEngine.GUIContent label Returns Type Description UnityEngine.Rect Overrides ObjectDrawer.Draw(Rect, Object, Action<Object>, GUIContent) Implements IProcessDrawer"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.NameableDrawer.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.NameableDrawer.html",
    "title": "Class NameableDrawer | VR Builder Documentation",
    "keywords": "Class NameableDrawer Inheritance System.Object AbstractDrawer ObjectDrawer NameableDrawer CompareValuesDrawer<T> PlayAudioBehaviorDrawer SetComponentEnabledBehaviorDrawer CheckStateDrawer SetStateDrawer Implements IProcessDrawer Inherited Members ObjectDrawer.Draw(Rect, Object, Action<Object>, GUIContent) ObjectDrawer.CheckValidationForValue(Object, MemberInfo, GUIContent) ObjectDrawer.AddValidationInformation(GUIContent, List<EditorReportEntry>) ObjectDrawer.GetValidationReports(Object) ObjectDrawer.GetValidationReportsFor(IData, MemberInfo) ObjectDrawer.GetLabel(MemberInfo, Object) ObjectDrawer.GetLabel(Object, Type) ObjectDrawer.GetMembersToDraw(Object) ObjectDrawer.GetTypeNameLabel(Object, Type) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax [DefaultProcessDrawer(typeof(INamedData))] public class NameableDrawer : ObjectDrawer, IProcessDrawer Constructors NameableDrawer() Declaration public NameableDrawer() Methods DrawLabel(Rect, Object, Action<Object>, GUIContent) Declaration protected override float DrawLabel(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description UnityEngine.Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback UnityEngine.GUIContent label Returns Type Description System.Single Overrides ObjectDrawer.DrawLabel(Rect, Object, Action<Object>, GUIContent) Implements IProcessDrawer"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.ObjectDrawer.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.ObjectDrawer.html",
    "title": "Class ObjectDrawer | VR Builder Documentation",
    "keywords": "Class ObjectDrawer Inheritance System.Object AbstractDrawer ObjectDrawer LocalizationTableDrawer NameableDrawer Implements IProcessDrawer Inherited Members AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax [DefaultProcessDrawer(typeof(object))] public class ObjectDrawer : AbstractDrawer, IProcessDrawer Constructors ObjectDrawer() Declaration public ObjectDrawer() Methods AddValidationInformation(GUIContent, List<EditorReportEntry>) Declaration protected virtual GUIContent AddValidationInformation(GUIContent guiContent, List<EditorReportEntry> entries) Parameters Type Name Description UnityEngine.GUIContent guiContent System.Collections.Generic.List < EditorReportEntry > entries Returns Type Description UnityEngine.GUIContent CheckValidationForValue(Object, MemberInfo, GUIContent) Declaration protected virtual void CheckValidationForValue(object currentValue, MemberInfo info, GUIContent label) Parameters Type Name Description System.Object currentValue System.Reflection.MemberInfo info UnityEngine.GUIContent label Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description UnityEngine.Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback UnityEngine.GUIContent label Returns Type Description UnityEngine.Rect Overrides AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) DrawLabel(Rect, Object, Action<Object>, GUIContent) Declaration protected virtual float DrawLabel(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description UnityEngine.Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback UnityEngine.GUIContent label Returns Type Description System.Single GetLabel(Object, Type) Declaration public override GUIContent GetLabel(object value, Type declaredType) Parameters Type Name Description System.Object value System.Type declaredType Returns Type Description UnityEngine.GUIContent Overrides AbstractDrawer.GetLabel(Object, Type) GetLabel(MemberInfo, Object) Declaration public override GUIContent GetLabel(MemberInfo memberInfo, object memberOwner) Parameters Type Name Description System.Reflection.MemberInfo memberInfo System.Object memberOwner Returns Type Description UnityEngine.GUIContent Overrides AbstractDrawer.GetLabel(MemberInfo, Object) GetMembersToDraw(Object) Declaration protected virtual IEnumerable<MemberInfo> GetMembersToDraw(object value) Parameters Type Name Description System.Object value Returns Type Description System.Collections.Generic.IEnumerable < System.Reflection.MemberInfo > GetTypeNameLabel(Object, Type) Declaration protected virtual GUIContent GetTypeNameLabel(object value, Type declaredType) Parameters Type Name Description System.Object value System.Type declaredType Returns Type Description UnityEngine.GUIContent GetValidationReports(Object) Declaration protected virtual List<EditorReportEntry> GetValidationReports(object value) Parameters Type Name Description System.Object value Returns Type Description System.Collections.Generic.List < EditorReportEntry > GetValidationReportsFor(IData, MemberInfo) Declaration protected virtual List<EditorReportEntry> GetValidationReportsFor(IData data, MemberInfo memberInfo) Parameters Type Name Description IData data System.Reflection.MemberInfo memberInfo Returns Type Description System.Collections.Generic.List < EditorReportEntry > Implements IProcessDrawer"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.PlayAudioBehaviorDrawer.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.PlayAudioBehaviorDrawer.html",
    "title": "Class PlayAudioBehaviorDrawer | VR Builder Documentation",
    "keywords": "Class PlayAudioBehaviorDrawer Inheritance System.Object AbstractDrawer ObjectDrawer NameableDrawer PlayAudioBehaviorDrawer Implements IProcessDrawer Inherited Members NameableDrawer.DrawLabel(Rect, Object, Action<Object>, GUIContent) ObjectDrawer.CheckValidationForValue(Object, MemberInfo, GUIContent) ObjectDrawer.AddValidationInformation(GUIContent, List<EditorReportEntry>) ObjectDrawer.GetValidationReports(Object) ObjectDrawer.GetValidationReportsFor(IData, MemberInfo) ObjectDrawer.GetLabel(MemberInfo, Object) ObjectDrawer.GetLabel(Object, Type) ObjectDrawer.GetMembersToDraw(Object) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax [DefaultProcessDrawer(typeof(PlayAudioBehavior.EntityData))] public class PlayAudioBehaviorDrawer : NameableDrawer, IProcessDrawer Constructors PlayAudioBehaviorDrawer() Declaration public PlayAudioBehaviorDrawer() Methods Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description UnityEngine.Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback UnityEngine.GUIContent label Returns Type Description UnityEngine.Rect Overrides ObjectDrawer.Draw(Rect, Object, Action<Object>, GUIContent) GetTypeNameLabel(Object, Type) Declaration protected override GUIContent GetTypeNameLabel(object value, Type declaredType) Parameters Type Name Description System.Object value System.Type declaredType Returns Type Description UnityEngine.GUIContent Overrides ObjectDrawer.GetTypeNameLabel(Object, Type) Implements IProcessDrawer"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.ProcessSceneReferenceDrawer.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.ProcessSceneReferenceDrawer.html",
    "title": "Class ProcessSceneReferenceDrawer | VR Builder Documentation",
    "keywords": "Class ProcessSceneReferenceDrawer Inheritance System.Object AbstractDrawer ProcessSceneReferenceDrawer Implements IProcessDrawer Inherited Members AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax [DefaultProcessDrawer(typeof(ProcessSceneReferenceBase))] public class ProcessSceneReferenceDrawer : AbstractDrawer, IProcessDrawer Constructors ProcessSceneReferenceDrawer() Declaration public ProcessSceneReferenceDrawer() Fields dropBoxStyle Declaration protected GUIStyle dropBoxStyle Field Value Type Description UnityEngine.GUIStyle isExpanded Declaration protected bool isExpanded Field Value Type Description System.Boolean richTextLabelStyle Declaration protected GUIStyle richTextLabelStyle Field Value Type Description UnityEngine.GUIStyle Methods AddFixItAllButton(IEnumerable<GameObject>, Type, ref Rect, ref Rect) Declaration protected void AddFixItAllButton(IEnumerable<GameObject> selectedSceneObjects, Type valueType, ref Rect originalRect, ref Rect guiLineRect) Parameters Type Name Description System.Collections.Generic.IEnumerable < UnityEngine.GameObject > selectedSceneObjects System.Type valueType UnityEngine.Rect originalRect UnityEngine.Rect guiLineRect AddFixItButton(GameObject, Type, ref Rect, ref Rect) Declaration protected void AddFixItButton(GameObject selectedSceneObject, Type valueType, ref Rect originalRect, ref Rect guiLineRect) Parameters Type Name Description UnityEngine.GameObject selectedSceneObject System.Type valueType UnityEngine.Rect originalRect UnityEngine.Rect guiLineRect CreateProcessSceneObject(GameObject) Declaration protected Guid CreateProcessSceneObject(GameObject selectedSceneObject) Parameters Type Name Description UnityEngine.GameObject selectedSceneObject Returns Type Description System.Guid Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description UnityEngine.Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback UnityEngine.GUIContent label Returns Type Description UnityEngine.Rect Overrides AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) DropAreaGUI(ref Rect, ref Rect, ProcessSceneReferenceBase, Action<GameObject, Rect>, Action<Object>, GUIContent) Declaration protected void DropAreaGUI(ref Rect originalRect, ref Rect guiLineRect, ProcessSceneReferenceBase reference, Action<GameObject, Rect> dropAction, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description UnityEngine.Rect originalRect UnityEngine.Rect guiLineRect ProcessSceneReferenceBase reference System.Action < UnityEngine.GameObject , UnityEngine.Rect > dropAction System.Action < System.Object > changeValueCallback UnityEngine.GUIContent label Implements IProcessDrawer"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.ProcessVariableBoolSelectableValueDrawer.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.ProcessVariableBoolSelectableValueDrawer.html",
    "title": "Class ProcessVariableBoolSelectableValueDrawer | VR Builder Documentation",
    "keywords": "Class ProcessVariableBoolSelectableValueDrawer Inheritance System.Object AbstractDrawer SelectableValueDrawer < System.Boolean , SingleScenePropertyReference < IDataProperty < System.Boolean >>> ProcessVariableBoolSelectableValueDrawer Implements IProcessDrawer Inherited Members SelectableValueDrawer<Boolean, SingleScenePropertyReference<IDataProperty<Boolean>>>.Draw(Rect, Object, Action<Object>, GUIContent) SelectableValueDrawer<Boolean, SingleScenePropertyReference<IDataProperty<Boolean>>>.AddNewRectLine(Rect) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax [DefaultProcessDrawer(typeof(ProcessVariableSelectableValue<bool>))] public class ProcessVariableBoolSelectableValueDrawer : SelectableValueDrawer<bool, SingleScenePropertyReference<IDataProperty<bool>>>, IProcessDrawer Constructors ProcessVariableBoolSelectableValueDrawer() Declaration public ProcessVariableBoolSelectableValueDrawer() Implements IProcessDrawer"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.ProcessVariableFloatSelectableValueDrawer.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.ProcessVariableFloatSelectableValueDrawer.html",
    "title": "Class ProcessVariableFloatSelectableValueDrawer | VR Builder Documentation",
    "keywords": "Class ProcessVariableFloatSelectableValueDrawer Inheritance System.Object AbstractDrawer SelectableValueDrawer < System.Single , SingleScenePropertyReference < IDataProperty < System.Single >>> ProcessVariableFloatSelectableValueDrawer Implements IProcessDrawer Inherited Members SelectableValueDrawer<Single, SingleScenePropertyReference<IDataProperty<Single>>>.Draw(Rect, Object, Action<Object>, GUIContent) SelectableValueDrawer<Single, SingleScenePropertyReference<IDataProperty<Single>>>.AddNewRectLine(Rect) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax [DefaultProcessDrawer(typeof(ProcessVariableSelectableValue<float>))] public class ProcessVariableFloatSelectableValueDrawer : SelectableValueDrawer<float, SingleScenePropertyReference<IDataProperty<float>>>, IProcessDrawer Constructors ProcessVariableFloatSelectableValueDrawer() Declaration public ProcessVariableFloatSelectableValueDrawer() Implements IProcessDrawer"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.ProcessVariableStringSelectableValueDrawer.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.ProcessVariableStringSelectableValueDrawer.html",
    "title": "Class ProcessVariableStringSelectableValueDrawer | VR Builder Documentation",
    "keywords": "Class ProcessVariableStringSelectableValueDrawer Inheritance System.Object AbstractDrawer SelectableValueDrawer < System.String , SingleScenePropertyReference < IDataProperty < System.String >>> ProcessVariableStringSelectableValueDrawer Implements IProcessDrawer Inherited Members SelectableValueDrawer<String, SingleScenePropertyReference<IDataProperty<String>>>.Draw(Rect, Object, Action<Object>, GUIContent) SelectableValueDrawer<String, SingleScenePropertyReference<IDataProperty<String>>>.AddNewRectLine(Rect) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax [DefaultProcessDrawer(typeof(ProcessVariableSelectableValue<string>))] public class ProcessVariableStringSelectableValueDrawer : SelectableValueDrawer<string, SingleScenePropertyReference<IDataProperty<string>>>, IProcessDrawer Constructors ProcessVariableStringSelectableValueDrawer() Declaration public ProcessVariableStringSelectableValueDrawer() Implements IProcessDrawer"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.ResourcePathDrawer-1.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.ResourcePathDrawer-1.html",
    "title": "Class ResourcePathDrawer<T> | VR Builder Documentation",
    "keywords": "Class ResourcePathDrawer<T> Inheritance System.Object AbstractDrawer ResourcePathDrawer<T> AnimationClipResourceDrawer VideoClipResourceDrawer ObjectPointerResourceDrawer Implements IProcessDrawer Inherited Members AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax public abstract class ResourcePathDrawer<T> : AbstractDrawer, IProcessDrawer where T : Object Type Parameters Name Description T Constructors ResourcePathDrawer() Declaration protected ResourcePathDrawer() Methods Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description UnityEngine.Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback UnityEngine.GUIContent label Returns Type Description UnityEngine.Rect Overrides AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) ValidateResource(T) Declaration public abstract void ValidateResource(T resource) Parameters Type Name Description T resource Implements IProcessDrawer"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.SceneDropdownDrawer.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.SceneDropdownDrawer.html",
    "title": "Class SceneDropdownDrawer | VR Builder Documentation",
    "keywords": "Class SceneDropdownDrawer Inheritance System.Object AbstractDrawer DropdownDrawer < System.String > SceneDropdownDrawer Implements IProcessDrawer Inherited Members DropdownDrawer<String>.Draw(Rect, Object, Action<Object>, GUIContent) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax public class SceneDropdownDrawer : DropdownDrawer<string>, IProcessDrawer Constructors SceneDropdownDrawer() Declaration public SceneDropdownDrawer() Properties PossibleOptions Declaration protected override IList<DropDownElement<string>> PossibleOptions { get; } Property Value Type Description System.Collections.Generic.IList < DropDownElement < System.String >> Overrides VRBuilder.Core.Editor.UI.Drawers.DropdownDrawer<System.String>.PossibleOptions Implements IProcessDrawer"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.SelectableValueDrawer-2.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.SelectableValueDrawer-2.html",
    "title": "Class SelectableValueDrawer<TFirst, TSecond> | VR Builder Documentation",
    "keywords": "Class SelectableValueDrawer<TFirst, TSecond> Inheritance System.Object AbstractDrawer SelectableValueDrawer<TFirst, TSecond> ProcessVariableBoolSelectableValueDrawer ProcessVariableFloatSelectableValueDrawer ProcessVariableStringSelectableValueDrawer StringsSelectableValueDrawer Implements IProcessDrawer Inherited Members AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax public abstract class SelectableValueDrawer<TFirst, TSecond> : AbstractDrawer, IProcessDrawer Type Parameters Name Description TFirst TSecond Constructors SelectableValueDrawer() Declaration protected SelectableValueDrawer() Methods AddNewRectLine(ref Rect) Declaration protected Rect AddNewRectLine(ref Rect currentRect) Parameters Type Name Description UnityEngine.Rect currentRect Returns Type Description UnityEngine.Rect Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description UnityEngine.Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback UnityEngine.GUIContent label Returns Type Description UnityEngine.Rect Overrides AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) Implements IProcessDrawer"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.SetComponentEnabledBehaviorDrawer.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.SetComponentEnabledBehaviorDrawer.html",
    "title": "Class SetComponentEnabledBehaviorDrawer | VR Builder Documentation",
    "keywords": "Class SetComponentEnabledBehaviorDrawer Inheritance System.Object AbstractDrawer ObjectDrawer NameableDrawer SetComponentEnabledBehaviorDrawer Implements IProcessDrawer Inherited Members NameableDrawer.DrawLabel(Rect, Object, Action<Object>, GUIContent) ObjectDrawer.CheckValidationForValue(Object, MemberInfo, GUIContent) ObjectDrawer.AddValidationInformation(GUIContent, List<EditorReportEntry>) ObjectDrawer.GetValidationReports(Object) ObjectDrawer.GetValidationReportsFor(IData, MemberInfo) ObjectDrawer.GetLabel(MemberInfo, Object) ObjectDrawer.GetLabel(Object, Type) ObjectDrawer.GetMembersToDraw(Object) ObjectDrawer.GetTypeNameLabel(Object, Type) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax [DefaultProcessDrawer(typeof(SetComponentEnabledBehavior.EntityData))] public class SetComponentEnabledBehaviorDrawer : NameableDrawer, IProcessDrawer Constructors SetComponentEnabledBehaviorDrawer() Declaration public SetComponentEnabledBehaviorDrawer() Methods Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description UnityEngine.Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback UnityEngine.GUIContent label Returns Type Description UnityEngine.Rect Overrides ObjectDrawer.Draw(Rect, Object, Action<Object>, GUIContent) Implements IProcessDrawer"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.StringsSelectableValueDrawer.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.StringsSelectableValueDrawer.html",
    "title": "Class StringsSelectableValueDrawer | VR Builder Documentation",
    "keywords": "Class StringsSelectableValueDrawer Inheritance System.Object AbstractDrawer SelectableValueDrawer < System.String , System.String > StringsSelectableValueDrawer Implements IProcessDrawer Inherited Members SelectableValueDrawer<String, String>.Draw(Rect, Object, Action<Object>, GUIContent) SelectableValueDrawer<String, String>.AddNewRectLine(Rect) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.Draw(Rect, Object, Action<Object>, GUIContent) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax public class StringsSelectableValueDrawer : SelectableValueDrawer<string, string>, IProcessDrawer Constructors StringsSelectableValueDrawer() Declaration public StringsSelectableValueDrawer() Implements IProcessDrawer"
  },
  "api/VRBuilder.Core.Editor.UI.Drawers.VideoClipResourceDrawer.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Drawers.VideoClipResourceDrawer.html",
    "title": "Class VideoClipResourceDrawer | VR Builder Documentation",
    "keywords": "Class VideoClipResourceDrawer Inheritance System.Object AbstractDrawer ResourcePathDrawer < UnityEngine.Video.VideoClip > VideoClipResourceDrawer Implements IProcessDrawer Inherited Members ResourcePathDrawer<VideoClip>.Draw(Rect, Object, Action<Object>, GUIContent) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Drawers Assembly : VRBuilder.Core.Editor.dll Syntax public class VideoClipResourceDrawer : ResourcePathDrawer<VideoClip>, IProcessDrawer Constructors VideoClipResourceDrawer() Declaration public VideoClipResourceDrawer() Methods ValidateResource(VideoClip) Declaration public override void ValidateResource(VideoClip resource) Parameters Type Name Description UnityEngine.Video.VideoClip resource Overrides VRBuilder.Core.Editor.UI.Drawers.ResourcePathDrawer<UnityEngine.Video.VideoClip>.ValidateResource(UnityEngine.Video.VideoClip) Implements IProcessDrawer"
  },
  "api/VRBuilder.Core.Editor.UI.EditorDrawingHelper.html": {
    "href": "api/VRBuilder.Core.Editor.UI.EditorDrawingHelper.html",
    "title": "Class EditorDrawingHelper | VR Builder Documentation",
    "keywords": "Class EditorDrawingHelper Inheritance System.Object EditorDrawingHelper Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI Assembly : VRBuilder.Core.Editor.dll Syntax public static class EditorDrawingHelper Fields ButtonHeight Declaration public static float ButtonHeight Field Value Type Description System.Single IndentationWidth Declaration public const float IndentationWidth = 16F Field Value Type Description System.Single VerticalSpacing Declaration public const float VerticalSpacing = 6F Field Value Type Description System.Single Properties HeaderLineHeight Declaration public static float HeaderLineHeight { get; } Property Value Type Description System.Single SingleLineHeight Declaration public static float SingleLineHeight { get; } Property Value Type Description System.Single Methods AddNewRectLine(ref Rect, Single) Declaration public static Rect AddNewRectLine(ref Rect currentRect, float height = -3.40282347E+38F) Parameters Type Name Description UnityEngine.Rect currentRect System.Single height Returns Type Description UnityEngine.Rect CalculateAddButtonRect(ref Rect) Declaration public static Rect CalculateAddButtonRect(ref Rect rect) Parameters Type Name Description UnityEngine.Rect rect Returns Type Description UnityEngine.Rect DrawAddButton(ref Rect, String) Declaration public static bool DrawAddButton(ref Rect rect, string label) Parameters Type Name Description UnityEngine.Rect rect System.String label Returns Type Description System.Boolean DrawArrow(Vector2, Vector2, Color, Single, Single) Declaration public static void DrawArrow(Vector2 from, Vector2 to, Color color, float arrowheadAngleInDegrees, float arrowheadLength) Parameters Type Name Description UnityEngine.Vector2 from UnityEngine.Vector2 to UnityEngine.Color color System.Single arrowheadAngleInDegrees System.Single arrowheadLength DrawCircle(Vector2, Single, Color) Declaration public static void DrawCircle(Vector2 position, float radius, Color color) Parameters Type Name Description UnityEngine.Vector2 position System.Single radius UnityEngine.Color color DrawFoldoutWithReducedFocusArea(Rect, Boolean, GUIContent, GUIStyle, GUIStyle) Declaration public static bool DrawFoldoutWithReducedFocusArea(Rect rect, bool currentState, GUIContent foldoutLabel, GUIStyle foldoutStyle = null, GUIStyle labelStyle = null) Parameters Type Name Description UnityEngine.Rect rect System.Boolean currentState UnityEngine.GUIContent foldoutLabel UnityEngine.GUIStyle foldoutStyle UnityEngine.GUIStyle labelStyle Returns Type Description System.Boolean DrawHelpButton(ref Rect) Declaration public static bool DrawHelpButton(ref Rect rect) Parameters Type Name Description UnityEngine.Rect rect Returns Type Description System.Boolean DrawHollowRectangle(Rect, Color, Single) Declaration public static void DrawHollowRectangle(Rect rect, Color color, float lineWidth) Parameters Type Name Description UnityEngine.Rect rect UnityEngine.Color color System.Single lineWidth DrawHorizontalLine(Vector2, Single, Color) Declaration public static void DrawHorizontalLine(Vector2 startPoint, float length, Color color) Parameters Type Name Description UnityEngine.Vector2 startPoint System.Single length UnityEngine.Color color DrawPasteButton(ref Rect) Declaration public static bool DrawPasteButton(ref Rect rect) Parameters Type Name Description UnityEngine.Rect rect Returns Type Description System.Boolean DrawPolyline(IList<Vector2>, Color) Declaration public static void DrawPolyline(IList<Vector2> points, Color color) Parameters Type Name Description System.Collections.Generic.IList < UnityEngine.Vector2 > points UnityEngine.Color color DrawRect(Rect, Color) Declaration public static void DrawRect(Rect rect, Color color) Parameters Type Name Description UnityEngine.Rect rect UnityEngine.Color color DrawRoundedRect(Rect, Color, Single) Declaration public static void DrawRoundedRect(Rect rect, Color color, float cornerRadius) Parameters Type Name Description UnityEngine.Rect rect UnityEngine.Color color System.Single cornerRadius DrawTexture(Rect, Texture, Color) Declaration public static void DrawTexture(Rect iconRect, Texture texture, Color color) Parameters Type Name Description UnityEngine.Rect iconRect UnityEngine.Texture texture UnityEngine.Color color DrawTriangle(IList<Vector2>, Color) Declaration public static void DrawTriangle(IList<Vector2> points, Color color) Parameters Type Name Description System.Collections.Generic.IList < UnityEngine.Vector2 > points UnityEngine.Color color DrawVerticalLine(Vector2, Single, Color) Declaration public static void DrawVerticalLine(Vector2 startPoint, float length, Color color) Parameters Type Name Description UnityEngine.Vector2 startPoint System.Single length UnityEngine.Color color GetNextLineRect(Rect) Declaration public static Rect GetNextLineRect(Rect origin) Parameters Type Name Description UnityEngine.Rect origin Returns Type Description UnityEngine.Rect TruncateText(String, GUIStyle, Single, String) Declaration public static string TruncateText(string text, GUIStyle style, float maxWidth, string truncatingSequence = \"...\") Parameters Type Name Description System.String text UnityEngine.GUIStyle style System.Single maxWidth System.String truncatingSequence Returns Type Description System.String"
  },
  "api/VRBuilder.Core.Editor.UI.EditorIcon.html": {
    "href": "api/VRBuilder.Core.Editor.UI.EditorIcon.html",
    "title": "Class EditorIcon | VR Builder Documentation",
    "keywords": "Class EditorIcon Inheritance System.Object EditorIcon Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI Assembly : VRBuilder.Core.Editor.dll Syntax public class EditorIcon Constructors EditorIcon(String) Declaration public EditorIcon(string path) Parameters Type Name Description System.String path Properties Texture Declaration public Texture Texture { get; } Property Value Type Description UnityEngine.Texture"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.html",
    "title": "Namespace VRBuilder.Core.Editor.UI.GraphView | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.UI.GraphView Classes ProcessExec ProcessGraphView Interfaces IContextMenuActions IStepView"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.IContextMenuActions.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.IContextMenuActions.html",
    "title": "Interface IContextMenuActions | VR Builder Documentation",
    "keywords": "Interface IContextMenuActions Namespace : VRBuilder.Core.Editor.UI.GraphView Assembly : VRBuilder.Core.Editor.dll Syntax public interface IContextMenuActions Methods AddContextMenuActions(DropdownMenu) Declaration void AddContextMenuActions(DropdownMenu menu) Parameters Type Name Description UnityEngine.UIElements.DropdownMenu menu"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Instantiators.DefaultStepNodeInstantiator.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Instantiators.DefaultStepNodeInstantiator.html",
    "title": "Class DefaultStepNodeInstantiator | VR Builder Documentation",
    "keywords": "Class DefaultStepNodeInstantiator Inheritance System.Object DefaultStepNodeInstantiator Implements IStepNodeInstantiator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.GraphView.Instantiators Assembly : VRBuilder.Core.Editor.dll Syntax public class DefaultStepNodeInstantiator : IStepNodeInstantiator Constructors DefaultStepNodeInstantiator() Declaration public DefaultStepNodeInstantiator() Properties IsInNodeMenu Declaration public bool IsInNodeMenu { get; } Property Value Type Description System.Boolean Name Declaration public string Name { get; } Property Value Type Description System.String Priority Declaration public int Priority { get; } Property Value Type Description System.Int32 StepType Declaration public string StepType { get; } Property Value Type Description System.String Methods GetContextMenuStatus(IEventHandler, IChapter) Declaration public DropdownMenuAction.Status GetContextMenuStatus(IEventHandler target, IChapter currentChapter) Parameters Type Name Description UnityEngine.UIElements.IEventHandler target IChapter currentChapter Returns Type Description UnityEngine.UIElements.DropdownMenuAction.Status InstantiateNode(IStep) Declaration public ProcessGraphNode InstantiateNode(IStep step) Parameters Type Name Description IStep step Returns Type Description ProcessGraphNode Implements IStepNodeInstantiator"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Instantiators.EndChapterNodeInstantiator.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Instantiators.EndChapterNodeInstantiator.html",
    "title": "Class EndChapterNodeInstantiator | VR Builder Documentation",
    "keywords": "Class EndChapterNodeInstantiator Inheritance System.Object EndChapterNodeInstantiator Implements IStepNodeInstantiator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.GraphView.Instantiators Assembly : VRBuilder.Core.Editor.dll Syntax public class EndChapterNodeInstantiator : IStepNodeInstantiator Constructors EndChapterNodeInstantiator() Declaration public EndChapterNodeInstantiator() Properties IsInNodeMenu Declaration public bool IsInNodeMenu { get; } Property Value Type Description System.Boolean Name Declaration public string Name { get; } Property Value Type Description System.String Priority Declaration public int Priority { get; } Property Value Type Description System.Int32 StepType Declaration public string StepType { get; } Property Value Type Description System.String Methods GetContextMenuStatus(IEventHandler, IChapter) Declaration public DropdownMenuAction.Status GetContextMenuStatus(IEventHandler target, IChapter currentChapter) Parameters Type Name Description UnityEngine.UIElements.IEventHandler target IChapter currentChapter Returns Type Description UnityEngine.UIElements.DropdownMenuAction.Status InstantiateNode(IStep) Declaration public ProcessGraphNode InstantiateNode(IStep step) Parameters Type Name Description IStep step Returns Type Description ProcessGraphNode Implements IStepNodeInstantiator"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Instantiators.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Instantiators.html",
    "title": "Namespace VRBuilder.Core.Editor.UI.GraphView.Instantiators | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.UI.GraphView.Instantiators Classes DefaultStepNodeInstantiator EndChapterNodeInstantiator ParallelExecutionNodeInstantiator StepGroupNodeInstantiator Interfaces IStepNodeInstantiator"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Instantiators.IStepNodeInstantiator.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Instantiators.IStepNodeInstantiator.html",
    "title": "Interface IStepNodeInstantiator | VR Builder Documentation",
    "keywords": "Interface IStepNodeInstantiator Namespace : VRBuilder.Core.Editor.UI.GraphView.Instantiators Assembly : VRBuilder.Core.Editor.dll Syntax public interface IStepNodeInstantiator Properties IsInNodeMenu Declaration bool IsInNodeMenu { get; } Property Value Type Description System.Boolean Name Declaration string Name { get; } Property Value Type Description System.String Priority Declaration int Priority { get; } Property Value Type Description System.Int32 StepType Declaration string StepType { get; } Property Value Type Description System.String Methods GetContextMenuStatus(IEventHandler, IChapter) Declaration DropdownMenuAction.Status GetContextMenuStatus(IEventHandler target, IChapter currentChapter) Parameters Type Name Description UnityEngine.UIElements.IEventHandler target IChapter currentChapter Returns Type Description UnityEngine.UIElements.DropdownMenuAction.Status InstantiateNode(IStep) Declaration ProcessGraphNode InstantiateNode(IStep step) Parameters Type Name Description IStep step Returns Type Description ProcessGraphNode"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Instantiators.ParallelExecutionNodeInstantiator.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Instantiators.ParallelExecutionNodeInstantiator.html",
    "title": "Class ParallelExecutionNodeInstantiator | VR Builder Documentation",
    "keywords": "Class ParallelExecutionNodeInstantiator Inheritance System.Object ParallelExecutionNodeInstantiator Implements IStepNodeInstantiator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.GraphView.Instantiators Assembly : VRBuilder.Core.Editor.dll Syntax public class ParallelExecutionNodeInstantiator : IStepNodeInstantiator Constructors ParallelExecutionNodeInstantiator() Declaration public ParallelExecutionNodeInstantiator() Properties IsInNodeMenu Declaration public bool IsInNodeMenu { get; } Property Value Type Description System.Boolean Name Declaration public string Name { get; } Property Value Type Description System.String Priority Declaration public int Priority { get; } Property Value Type Description System.Int32 StepType Declaration public string StepType { get; } Property Value Type Description System.String Methods GetContextMenuStatus(IEventHandler, IChapter) Declaration public DropdownMenuAction.Status GetContextMenuStatus(IEventHandler target, IChapter currentChapter) Parameters Type Name Description UnityEngine.UIElements.IEventHandler target IChapter currentChapter Returns Type Description UnityEngine.UIElements.DropdownMenuAction.Status InstantiateNode(IStep) Declaration public ProcessGraphNode InstantiateNode(IStep step) Parameters Type Name Description IStep step Returns Type Description ProcessGraphNode Implements IStepNodeInstantiator"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Instantiators.StepGroupNodeInstantiator.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Instantiators.StepGroupNodeInstantiator.html",
    "title": "Class StepGroupNodeInstantiator | VR Builder Documentation",
    "keywords": "Class StepGroupNodeInstantiator Inheritance System.Object StepGroupNodeInstantiator Implements IStepNodeInstantiator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.GraphView.Instantiators Assembly : VRBuilder.Core.Editor.dll Syntax public class StepGroupNodeInstantiator : IStepNodeInstantiator Constructors StepGroupNodeInstantiator() Declaration public StepGroupNodeInstantiator() Properties IsInNodeMenu Declaration public bool IsInNodeMenu { get; } Property Value Type Description System.Boolean Name Declaration public string Name { get; } Property Value Type Description System.String Priority Declaration public int Priority { get; } Property Value Type Description System.Int32 StepType Declaration public string StepType { get; } Property Value Type Description System.String Methods GetContextMenuStatus(IEventHandler, IChapter) Declaration public DropdownMenuAction.Status GetContextMenuStatus(IEventHandler target, IChapter currentChapter) Parameters Type Name Description UnityEngine.UIElements.IEventHandler target IChapter currentChapter Returns Type Description UnityEngine.UIElements.DropdownMenuAction.Status InstantiateNode(IStep) Declaration public ProcessGraphNode InstantiateNode(IStep step) Parameters Type Name Description IStep step Returns Type Description ProcessGraphNode Implements IStepNodeInstantiator"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.IStepView.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.IStepView.html",
    "title": "Interface IStepView | VR Builder Documentation",
    "keywords": "Interface IStepView Namespace : VRBuilder.Core.Editor.UI.GraphView Assembly : VRBuilder.Core.Editor.dll Syntax public interface IStepView Methods ResetStepView() Declaration void ResetStepView() SetStep(IStep) Declaration void SetStep(IStep newStep) Parameters Type Name Description IStep newStep"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Nodes.EndChapterNode.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Nodes.EndChapterNode.html",
    "title": "Class EndChapterNode | VR Builder Documentation",
    "keywords": "Class EndChapterNode Inheritance System.Object ProcessGraphNode StepGraphNode EndChapterNode Inherited Members StepGraphNode.step StepGraphNode.Refresh() StepGraphNode.CreatePortWithUndo() StepGraphNode.RemovePort(Port) StepGraphNode.RemovePortWithUndo(Port) StepGraphNode.SetOutput(Int32, IStep) StepGraphNode.AddToChapter(IChapter) StepGraphNode.RemoveFromChapter(IChapter) StepGraphNode.UpdateOutputPortName(Port, Node) StepGraphNode.Name StepGraphNode.EntryPoint StepGraphNode.Outputs StepGraphNode.Position ProcessGraphNode.deleteIconFileName ProcessGraphNode.editIconFileName ProcessGraphNode.defaultNodeSize ProcessGraphNode.CreatePort(Direction, Port.Capacity) ProcessGraphNode.GetIcon(String) ProcessGraphNode.OpenTextEditor() ProcessGraphNode.OnEditTextFinished(TextField) ProcessGraphNode.IsEntryPoint Namespace : VRBuilder.Core.Editor.UI.GraphView.Nodes Assembly : VRBuilder.Core.Editor.dll Syntax public class EndChapterNode : StepGraphNode Constructors EndChapterNode(IStep) Declaration public EndChapterNode(IStep step) Parameters Type Name Description IStep step Fields DefaultPadding Declaration protected const float DefaultPadding = 8F Field Value Type Description System.Single DropDownPadding Declaration protected const float DropDownPadding = 4F Field Value Type Description System.Single ElementWidth Declaration protected const float ElementWidth = 128F Field Value Type Description System.Single Properties Behavior Declaration protected GoToChapterBehavior Behavior { get; } Property Value Type Description GoToChapterBehavior Methods AddTransitionPort(Boolean, Int32) Declaration public override Port AddTransitionPort(bool isDeletablePort = true, int index = -1) Parameters Type Name Description System.Boolean isDeletablePort System.Int32 index Returns Type Description UnityEditor.Experimental.GraphView.Port Overrides ProcessGraphNode.AddTransitionPort(Boolean, Int32) OnSelected() Declaration public override void OnSelected() Overrides StepGraphNode.OnSelected()"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Nodes.EndChapterPostProcessing.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Nodes.EndChapterPostProcessing.html",
    "title": "Class EndChapterPostProcessing | VR Builder Documentation",
    "keywords": "Class EndChapterPostProcessing Inheritance System.Object EntityPostProcessing < IStep > EndChapterPostProcessing Namespace : VRBuilder.Core.Editor.UI.GraphView.Nodes Assembly : VRBuilder.Core.Editor.dll Syntax public class EndChapterPostProcessing : EntityPostProcessing<IStep> Constructors EndChapterPostProcessing() Declaration public EndChapterPostProcessing() Methods Execute(IStep) Declaration public override void Execute(IStep entity) Parameters Type Name Description IStep entity Overrides VRBuilder.Core.Entities.Factories.EntityPostProcessing<VRBuilder.Core.IStep>.Execute(VRBuilder.Core.IStep)"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Nodes.EntryPointNode.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Nodes.EntryPointNode.html",
    "title": "Class EntryPointNode | VR Builder Documentation",
    "keywords": "Class EntryPointNode Inheritance System.Object ProcessGraphNode EntryPointNode Inherited Members ProcessGraphNode.deleteIconFileName ProcessGraphNode.editIconFileName ProcessGraphNode.defaultNodeSize ProcessGraphNode.UpdateOutputPortName(Port, Node) ProcessGraphNode.AddTransitionPort(Boolean, Int32) ProcessGraphNode.CreatePort(Direction, Port.Capacity) ProcessGraphNode.GetIcon(String) ProcessGraphNode.OpenTextEditor() ProcessGraphNode.OnEditTextFinished(TextField) ProcessGraphNode.IsEntryPoint Namespace : VRBuilder.Core.Editor.UI.GraphView.Nodes Assembly : VRBuilder.Core.Editor.dll Syntax public class EntryPointNode : ProcessGraphNode Constructors EntryPointNode() Declaration public EntryPointNode() Properties EntryPoint Declaration public override IStep EntryPoint { get; } Property Value Type Description IStep Overrides ProcessGraphNode.EntryPoint Name Declaration public override string Name { get; set; } Property Value Type Description System.String Overrides ProcessGraphNode.Name Outputs Declaration public override IStep[] Outputs { get; } Property Value Type Description IStep [] Overrides ProcessGraphNode.Outputs Position Declaration public override Vector2 Position { get; set; } Property Value Type Description UnityEngine.Vector2 Overrides ProcessGraphNode.Position Methods AddToChapter(IChapter) Declaration public override void AddToChapter(IChapter chapter) Parameters Type Name Description IChapter chapter Overrides ProcessGraphNode.AddToChapter(IChapter) OnSelected() Declaration public override void OnSelected() Refresh() Declaration public override void Refresh() Overrides ProcessGraphNode.Refresh() RemoveFromChapter(IChapter) Declaration public override void RemoveFromChapter(IChapter chapter) Parameters Type Name Description IChapter chapter Overrides ProcessGraphNode.RemoveFromChapter(IChapter) RemovePortWithUndo(Port) Declaration protected override void RemovePortWithUndo(Port port) Parameters Type Name Description UnityEditor.Experimental.GraphView.Port port Overrides ProcessGraphNode.RemovePortWithUndo(Port) SetOutput(Int32, IStep) Declaration public override void SetOutput(int index, IStep output) Parameters Type Name Description System.Int32 index IStep output Overrides ProcessGraphNode.SetOutput(Int32, IStep)"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Nodes.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Nodes.html",
    "title": "Namespace VRBuilder.Core.Editor.UI.GraphView.Nodes | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.UI.GraphView.Nodes Classes EndChapterNode EndChapterPostProcessing EntryPointNode ParallelExecutionNode ParallelExecutionPostProcessing ProcessGraphNode StepGraphNode StepGroupNode StepGroupPostProcessing"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Nodes.ParallelExecutionNode.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Nodes.ParallelExecutionNode.html",
    "title": "Class ParallelExecutionNode | VR Builder Documentation",
    "keywords": "Class ParallelExecutionNode Inheritance System.Object ProcessGraphNode StepGraphNode ParallelExecutionNode Inherited Members StepGraphNode.step StepGraphNode.CreatePortWithUndo() StepGraphNode.RemovePort(Port) StepGraphNode.RemovePortWithUndo(Port) StepGraphNode.SetOutput(Int32, IStep) StepGraphNode.AddToChapter(IChapter) StepGraphNode.RemoveFromChapter(IChapter) StepGraphNode.UpdateOutputPortName(Port, Node) StepGraphNode.Name StepGraphNode.EntryPoint StepGraphNode.Outputs StepGraphNode.Position ProcessGraphNode.deleteIconFileName ProcessGraphNode.editIconFileName ProcessGraphNode.defaultNodeSize ProcessGraphNode.AddTransitionPort(Boolean, Int32) ProcessGraphNode.CreatePort(Direction, Port.Capacity) ProcessGraphNode.GetIcon(String) ProcessGraphNode.OpenTextEditor() ProcessGraphNode.OnEditTextFinished(TextField) ProcessGraphNode.IsEntryPoint Namespace : VRBuilder.Core.Editor.UI.GraphView.Nodes Assembly : VRBuilder.Core.Editor.dll Syntax public class ParallelExecutionNode : StepGraphNode Constructors ParallelExecutionNode(IStep) Declaration public ParallelExecutionNode(IStep step) Parameters Type Name Description IStep step Fields DefaultThreadName Declaration public static string DefaultThreadName Field Value Type Description System.String Properties Behavior Declaration protected ExecuteChaptersBehavior Behavior { get; } Property Value Type Description ExecuteChaptersBehavior Methods OnSelected() Declaration public override void OnSelected() Overrides StepGraphNode.OnSelected() Refresh() Declaration public override void Refresh() Overrides StepGraphNode.Refresh()"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Nodes.ParallelExecutionPostProcessing.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Nodes.ParallelExecutionPostProcessing.html",
    "title": "Class ParallelExecutionPostProcessing | VR Builder Documentation",
    "keywords": "Class ParallelExecutionPostProcessing Inheritance System.Object EntityPostProcessing < IStep > ParallelExecutionPostProcessing Namespace : VRBuilder.Core.Editor.UI.GraphView.Nodes Assembly : VRBuilder.Core.Editor.dll Syntax public class ParallelExecutionPostProcessing : EntityPostProcessing<IStep> Constructors ParallelExecutionPostProcessing() Declaration public ParallelExecutionPostProcessing() Methods Execute(IStep) Declaration public override void Execute(IStep entity) Parameters Type Name Description IStep entity Overrides VRBuilder.Core.Entities.Factories.EntityPostProcessing<VRBuilder.Core.IStep>.Execute(VRBuilder.Core.IStep)"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Nodes.ProcessGraphNode.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Nodes.ProcessGraphNode.html",
    "title": "Class ProcessGraphNode | VR Builder Documentation",
    "keywords": "Class ProcessGraphNode Inheritance System.Object ProcessGraphNode EntryPointNode StepGraphNode Namespace : VRBuilder.Core.Editor.UI.GraphView.Nodes Assembly : VRBuilder.Core.Editor.dll Syntax public abstract class ProcessGraphNode : Node Constructors ProcessGraphNode() Declaration public ProcessGraphNode() Fields defaultNodeSize Declaration protected Vector2 defaultNodeSize Field Value Type Description UnityEngine.Vector2 deleteIconFileName Declaration protected const string deleteIconFileName = \"icon_delete\" Field Value Type Description System.String editIconFileName Declaration protected const string editIconFileName = \"icon_edit\" Field Value Type Description System.String Properties EntryPoint Declaration public abstract IStep EntryPoint { get; } Property Value Type Description IStep IsEntryPoint Declaration public bool IsEntryPoint { get; set; } Property Value Type Description System.Boolean Name Declaration public abstract string Name { get; set; } Property Value Type Description System.String Outputs Declaration public abstract IStep[] Outputs { get; } Property Value Type Description IStep [] Position Declaration public abstract Vector2 Position { get; set; } Property Value Type Description UnityEngine.Vector2 Methods AddToChapter(IChapter) Declaration public abstract void AddToChapter(IChapter chapter) Parameters Type Name Description IChapter chapter AddTransitionPort(Boolean, Int32) Declaration public virtual Port AddTransitionPort(bool isDeletablePort = true, int index = -1) Parameters Type Name Description System.Boolean isDeletablePort System.Int32 index Returns Type Description UnityEditor.Experimental.GraphView.Port CreatePort(Direction, Port.Capacity) Declaration protected Port CreatePort(Direction direction, Port.Capacity capacity) Parameters Type Name Description UnityEditor.Experimental.GraphView.Direction direction UnityEditor.Experimental.GraphView.Port.Capacity capacity Returns Type Description UnityEditor.Experimental.GraphView.Port GetIcon(String) Declaration protected Image GetIcon(string fileName) Parameters Type Name Description System.String fileName Returns Type Description UnityEngine.UIElements.Image OnEditTextFinished(TextField) Declaration protected virtual void OnEditTextFinished(TextField textField) Parameters Type Name Description UnityEngine.UIElements.TextField textField OpenTextEditor() Declaration protected virtual void OpenTextEditor() Refresh() Declaration public virtual void Refresh() RemoveFromChapter(IChapter) Declaration public abstract void RemoveFromChapter(IChapter chapter) Parameters Type Name Description IChapter chapter RemovePortWithUndo(Port) Declaration protected abstract void RemovePortWithUndo(Port port) Parameters Type Name Description UnityEditor.Experimental.GraphView.Port port SetOutput(Int32, IStep) Declaration public abstract void SetOutput(int index, IStep output) Parameters Type Name Description System.Int32 index IStep output UpdateOutputPortName(Port, Node) Declaration public virtual void UpdateOutputPortName(Port outputPort, Node input) Parameters Type Name Description UnityEditor.Experimental.GraphView.Port outputPort UnityEditor.Experimental.GraphView.Node input"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Nodes.StepGraphNode.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Nodes.StepGraphNode.html",
    "title": "Class StepGraphNode | VR Builder Documentation",
    "keywords": "Class StepGraphNode Inheritance System.Object ProcessGraphNode StepGraphNode EndChapterNode ParallelExecutionNode StepGroupNode RandomBranchGraphNode Inherited Members ProcessGraphNode.deleteIconFileName ProcessGraphNode.editIconFileName ProcessGraphNode.defaultNodeSize ProcessGraphNode.AddTransitionPort(Boolean, Int32) ProcessGraphNode.CreatePort(Direction, Port.Capacity) ProcessGraphNode.GetIcon(String) ProcessGraphNode.OpenTextEditor() ProcessGraphNode.OnEditTextFinished(TextField) ProcessGraphNode.IsEntryPoint Namespace : VRBuilder.Core.Editor.UI.GraphView.Nodes Assembly : VRBuilder.Core.Editor.dll Syntax public class StepGraphNode : ProcessGraphNode Constructors StepGraphNode(IStep) Declaration public StepGraphNode(IStep step) Parameters Type Name Description IStep step Fields step Declaration protected IStep step Field Value Type Description IStep Properties EntryPoint Declaration public override IStep EntryPoint { get; } Property Value Type Description IStep Overrides ProcessGraphNode.EntryPoint Name Declaration public override string Name { get; set; } Property Value Type Description System.String Overrides ProcessGraphNode.Name Outputs Declaration public override IStep[] Outputs { get; } Property Value Type Description IStep [] Overrides ProcessGraphNode.Outputs Position Declaration public override Vector2 Position { get; set; } Property Value Type Description UnityEngine.Vector2 Overrides ProcessGraphNode.Position Methods AddToChapter(IChapter) Declaration public override void AddToChapter(IChapter chapter) Parameters Type Name Description IChapter chapter Overrides ProcessGraphNode.AddToChapter(IChapter) CreatePortWithUndo() Declaration protected virtual void CreatePortWithUndo() OnSelected() Declaration public override void OnSelected() Refresh() Declaration public override void Refresh() Overrides ProcessGraphNode.Refresh() RemoveFromChapter(IChapter) Declaration public override void RemoveFromChapter(IChapter chapter) Parameters Type Name Description IChapter chapter Overrides ProcessGraphNode.RemoveFromChapter(IChapter) RemovePort(Port) Declaration protected void RemovePort(Port port) Parameters Type Name Description UnityEditor.Experimental.GraphView.Port port RemovePortWithUndo(Port) Declaration protected override void RemovePortWithUndo(Port port) Parameters Type Name Description UnityEditor.Experimental.GraphView.Port port Overrides ProcessGraphNode.RemovePortWithUndo(Port) SetOutput(Int32, IStep) Declaration public override void SetOutput(int index, IStep output) Parameters Type Name Description System.Int32 index IStep output Overrides ProcessGraphNode.SetOutput(Int32, IStep) UpdateOutputPortName(Port, Node) Declaration public override void UpdateOutputPortName(Port outputPort, Node input) Parameters Type Name Description UnityEditor.Experimental.GraphView.Port outputPort UnityEditor.Experimental.GraphView.Node input Overrides ProcessGraphNode.UpdateOutputPortName(Port, Node)"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Nodes.StepGroupNode.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Nodes.StepGroupNode.html",
    "title": "Class StepGroupNode | VR Builder Documentation",
    "keywords": "Class StepGroupNode Inheritance System.Object ProcessGraphNode StepGraphNode StepGroupNode Implements IContextMenuActions Inherited Members StepGraphNode.step StepGraphNode.Refresh() StepGraphNode.CreatePortWithUndo() StepGraphNode.RemovePort(Port) StepGraphNode.RemovePortWithUndo(Port) StepGraphNode.SetOutput(Int32, IStep) StepGraphNode.AddToChapter(IChapter) StepGraphNode.RemoveFromChapter(IChapter) StepGraphNode.UpdateOutputPortName(Port, Node) StepGraphNode.Name StepGraphNode.EntryPoint StepGraphNode.Outputs StepGraphNode.Position ProcessGraphNode.deleteIconFileName ProcessGraphNode.editIconFileName ProcessGraphNode.defaultNodeSize ProcessGraphNode.AddTransitionPort(Boolean, Int32) ProcessGraphNode.CreatePort(Direction, Port.Capacity) ProcessGraphNode.GetIcon(String) ProcessGraphNode.OpenTextEditor() ProcessGraphNode.IsEntryPoint Namespace : VRBuilder.Core.Editor.UI.GraphView.Nodes Assembly : VRBuilder.Core.Editor.dll Syntax public class StepGroupNode : StepGraphNode, IContextMenuActions Constructors StepGroupNode(IStep) Declaration public StepGroupNode(IStep step) Parameters Type Name Description IStep step Properties Behavior Declaration protected ExecuteChapterBehavior Behavior { get; } Property Value Type Description ExecuteChapterBehavior Methods AddContextMenuActions(DropdownMenu) Declaration public void AddContextMenuActions(DropdownMenu menu) Parameters Type Name Description UnityEngine.UIElements.DropdownMenu menu GroupSteps(IChapter, IEnumerable<IStep>) Declaration public void GroupSteps(IChapter currentChapter, IEnumerable<IStep> steps) Parameters Type Name Description IChapter currentChapter System.Collections.Generic.IEnumerable < IStep > steps OnEditTextFinished(TextField) Declaration protected override void OnEditTextFinished(TextField textField) Parameters Type Name Description UnityEngine.UIElements.TextField textField Overrides ProcessGraphNode.OnEditTextFinished(TextField) OnSelected() Declaration public override void OnSelected() Overrides StepGraphNode.OnSelected() Implements IContextMenuActions"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Nodes.StepGroupPostProcessing.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Nodes.StepGroupPostProcessing.html",
    "title": "Class StepGroupPostProcessing | VR Builder Documentation",
    "keywords": "Class StepGroupPostProcessing Inheritance System.Object EntityPostProcessing < IStep > StepGroupPostProcessing Namespace : VRBuilder.Core.Editor.UI.GraphView.Nodes Assembly : VRBuilder.Core.Editor.dll Syntax public class StepGroupPostProcessing : EntityPostProcessing<IStep> Constructors StepGroupPostProcessing() Declaration public StepGroupPostProcessing() Methods Execute(IStep) Declaration public override void Execute(IStep entity) Parameters Type Name Description IStep entity Overrides VRBuilder.Core.Entities.Factories.EntityPostProcessing<VRBuilder.Core.IStep>.Execute(VRBuilder.Core.IStep)"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.ProcessExec.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.ProcessExec.html",
    "title": "Class ProcessExec | VR Builder Documentation",
    "keywords": "Class ProcessExec Inheritance System.Object ProcessExec Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.GraphView Assembly : VRBuilder.Core.Editor.dll Syntax public class ProcessExec Constructors ProcessExec() Declaration public ProcessExec()"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.ProcessGraphView.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.ProcessGraphView.html",
    "title": "Class ProcessGraphView | VR Builder Documentation",
    "keywords": "Class ProcessGraphView Inheritance System.Object ProcessGraphView Namespace : VRBuilder.Core.Editor.UI.GraphView Assembly : VRBuilder.Core.Editor.dll Syntax public class ProcessGraphView : GraphView Constructors ProcessGraphView() Declaration public ProcessGraphView() Fields MaxZoomScale Declaration public static readonly float MaxZoomScale Field Value Type Description System.Single Methods BuildContextualMenu(ContextualMenuPopulateEvent) Declaration public override void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description UnityEngine.UIElements.ContextualMenuPopulateEvent evt GetCompatiblePorts(Port, NodeAdapter) Declaration public override List<Port> GetCompatiblePorts(Port startPort, NodeAdapter nodeAdapter) Parameters Type Name Description UnityEditor.Experimental.GraphView.Port startPort UnityEditor.Experimental.GraphView.NodeAdapter nodeAdapter Returns Type Description System.Collections.Generic.List < UnityEditor.Experimental.GraphView.Port > RefreshSelectedNode() Declaration public void RefreshSelectedNode() SetChapter(IChapter) Declaration public void SetChapter(IChapter chapter) Parameters Type Name Description IChapter chapter"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Windows.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Windows.html",
    "title": "Namespace VRBuilder.Core.Editor.UI.GraphView.Windows | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.UI.GraphView.Windows Classes ProcessEditorWindow ProcessGraphViewWindow SceneReferencesEditorPopup SearchableGroupListPopup"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Windows.ProcessEditorWindow.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Windows.ProcessEditorWindow.html",
    "title": "Class ProcessEditorWindow | VR Builder Documentation",
    "keywords": "Class ProcessEditorWindow Inheritance System.Object ProcessEditorWindow ProcessGraphViewWindow Namespace : VRBuilder.Core.Editor.UI.GraphView.Windows Assembly : VRBuilder.Core.Editor.dll Syntax public abstract class ProcessEditorWindow : EditorWindow Constructors ProcessEditorWindow() Declaration protected ProcessEditorWindow()"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Windows.ProcessGraphViewWindow.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Windows.ProcessGraphViewWindow.html",
    "title": "Class ProcessGraphViewWindow | VR Builder Documentation",
    "keywords": "Class ProcessGraphViewWindow Inheritance System.Object ProcessEditorWindow ProcessGraphViewWindow Namespace : VRBuilder.Core.Editor.UI.GraphView.Windows Assembly : VRBuilder.Core.Editor.dll Syntax public class ProcessGraphViewWindow : ProcessEditorWindow Constructors ProcessGraphViewWindow() Declaration public ProcessGraphViewWindow()"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Windows.SceneReferencesEditorPopup.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Windows.SceneReferencesEditorPopup.html",
    "title": "Class SceneReferencesEditorPopup | VR Builder Documentation",
    "keywords": "Class SceneReferencesEditorPopup Inheritance System.Object SceneReferencesEditorPopup Namespace : VRBuilder.Core.Editor.UI.GraphView.Windows Assembly : VRBuilder.Core.Editor.dll Syntax public class SceneReferencesEditorPopup : PopupWindowContent Constructors SceneReferencesEditorPopup(ProcessSceneReferenceBase, Action<Object>) Declaration public SceneReferencesEditorPopup(ProcessSceneReferenceBase reference, Action<object> changeValueCallback) Parameters Type Name Description ProcessSceneReferenceBase reference System.Action < System.Object > changeValueCallback Methods GetWindowSize() Declaration public override Vector2 GetWindowSize() Returns Type Description UnityEngine.Vector2 OnGUI(Rect) Declaration public override void OnGUI(Rect rect) Parameters Type Name Description UnityEngine.Rect rect OnOpen() Declaration public override void OnOpen() SetWindowSize(Single, Single) Declaration public void SetWindowSize(float windowWith = -1F, float windowHeight = -1F) Parameters Type Name Description System.Single windowWith System.Single windowHeight"
  },
  "api/VRBuilder.Core.Editor.UI.GraphView.Windows.SearchableGroupListPopup.html": {
    "href": "api/VRBuilder.Core.Editor.UI.GraphView.Windows.SearchableGroupListPopup.html",
    "title": "Class SearchableGroupListPopup | VR Builder Documentation",
    "keywords": "Class SearchableGroupListPopup Inheritance System.Object SearchableGroupListPopup Namespace : VRBuilder.Core.Editor.UI.GraphView.Windows Assembly : VRBuilder.Core.Editor.dll Syntax public class SearchableGroupListPopup : PopupWindowContent Constructors SearchableGroupListPopup(Action<SceneObjectGroups.SceneObjectGroup>, VisualTreeAsset, VisualTreeAsset) Declaration public SearchableGroupListPopup(Action<SceneObjectGroups.SceneObjectGroup> onItemSelected, VisualTreeAsset searchableList, VisualTreeAsset listItem) Parameters Type Name Description System.Action < SceneObjectGroups.SceneObjectGroup > onItemSelected UnityEngine.UIElements.VisualTreeAsset searchableList UnityEngine.UIElements.VisualTreeAsset listItem Methods GetWindowSize() Declaration public override Vector2 GetWindowSize() Returns Type Description UnityEngine.Vector2 OnGUI(Rect) Declaration public override void OnGUI(Rect rect) Parameters Type Name Description UnityEngine.Rect rect OnOpen() Declaration public override void OnOpen() SetAvailableGroups(IEnumerable<SceneObjectGroups.SceneObjectGroup>, Boolean) Declaration public void SetAvailableGroups(IEnumerable<SceneObjectGroups.SceneObjectGroup> availableGroups, bool firstItemIsProcessSceneObject = false) Parameters Type Name Description System.Collections.Generic.IEnumerable < SceneObjectGroups.SceneObjectGroup > availableGroups System.Boolean firstItemIsProcessSceneObject SetContext(Boolean) Declaration public void SetContext(bool isInPreviewContext) Parameters Type Name Description System.Boolean isInPreviewContext SetWindowSize(Single, Single) Declaration public void SetWindowSize(float windowWith = -1F, float windowHeight = -1F) Parameters Type Name Description System.Single windowWith System.Single windowHeight"
  },
  "api/VRBuilder.Core.Editor.UI.html": {
    "href": "api/VRBuilder.Core.Editor.UI.html",
    "title": "Namespace VRBuilder.Core.Editor.UI | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.UI Classes BuilderEditorStyles BuilderGUILayout EditorDrawingHelper EditorIcon ProcessSceneObjectEditor WorkflowEditorColorPalette Enums LogoStyle"
  },
  "api/VRBuilder.Core.Editor.UI.Inspector.BezierSplineInspector.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Inspector.BezierSplineInspector.html",
    "title": "Class BezierSplineInspector | VR Builder Documentation",
    "keywords": "Class BezierSplineInspector Inheritance System.Object BezierSplineInspector Namespace : VRBuilder.Core.Editor.UI.Inspector Assembly : VRBuilder.Core.Editor.dll Syntax public class BezierSplineInspector : Editor Constructors BezierSplineInspector() Declaration public BezierSplineInspector() Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/VRBuilder.Core.Editor.UI.Inspector.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Inspector.html",
    "title": "Namespace VRBuilder.Core.Editor.UI.Inspector | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.UI.Inspector Classes BezierSplineInspector"
  },
  "api/VRBuilder.Core.Editor.UI.LogoStyle.html": {
    "href": "api/VRBuilder.Core.Editor.UI.LogoStyle.html",
    "title": "Enum LogoStyle | VR Builder Documentation",
    "keywords": "Enum LogoStyle Namespace : VRBuilder.Core.Editor.UI Assembly : VRBuilder.Core.Editor.dll Syntax public enum LogoStyle Fields Name Description Icon SideBySide TopBottom"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.BehaviorSequenceMenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.BehaviorSequenceMenuItem.html",
    "title": "Class BehaviorSequenceMenuItem | VR Builder Documentation",
    "keywords": "Class BehaviorSequenceMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > BehaviorSequenceMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Core.Editor.dll Syntax public class BehaviorSequenceMenuItem : MenuItem<IBehavior> Constructors BehaviorSequenceMenuItem() Declaration public BehaviorSequenceMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.ConfettiMenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.ConfettiMenuItem.html",
    "title": "Class ConfettiMenuItem | VR Builder Documentation",
    "keywords": "Class ConfettiMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > ConfettiMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Core.Editor.dll Syntax public class ConfettiMenuItem : MenuItem<IBehavior> Constructors ConfettiMenuItem() Declaration public ConfettiMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.DelayMenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.DelayMenuItem.html",
    "title": "Class DelayMenuItem | VR Builder Documentation",
    "keywords": "Class DelayMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > DelayMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Core.Editor.dll Syntax public class DelayMenuItem : MenuItem<IBehavior> Constructors DelayMenuItem() Declaration public DelayMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.DisableComponentMenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.DisableComponentMenuItem.html",
    "title": "Class DisableComponentMenuItem | VR Builder Documentation",
    "keywords": "Class DisableComponentMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > DisableComponentMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Core.Editor.dll Syntax public class DisableComponentMenuItem : MenuItem<IBehavior> Constructors DisableComponentMenuItem() Declaration public DisableComponentMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.DisableObjectsMenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.DisableObjectsMenuItem.html",
    "title": "Class DisableObjectsMenuItem | VR Builder Documentation",
    "keywords": "Class DisableObjectsMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > DisableObjectsMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Core.Editor.dll Syntax public class DisableObjectsMenuItem : MenuItem<IBehavior> Constructors DisableObjectsMenuItem() Declaration public DisableObjectsMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.EnableComponentMenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.EnableComponentMenuItem.html",
    "title": "Class EnableComponentMenuItem | VR Builder Documentation",
    "keywords": "Class EnableComponentMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > EnableComponentMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Core.Editor.dll Syntax public class EnableComponentMenuItem : MenuItem<IBehavior> Constructors EnableComponentMenuItem() Declaration public EnableComponentMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.EnableObjectsMenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.EnableObjectsMenuItem.html",
    "title": "Class EnableObjectsMenuItem | VR Builder Documentation",
    "keywords": "Class EnableObjectsMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > EnableObjectsMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Core.Editor.dll Syntax public class EnableObjectsMenuItem : MenuItem<IBehavior> Constructors EnableObjectsMenuItem() Declaration public EnableObjectsMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.HighlightObjectMenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.HighlightObjectMenuItem.html",
    "title": "Class HighlightObjectMenuItem | VR Builder Documentation",
    "keywords": "Class HighlightObjectMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > HighlightObjectMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Core.Editor.dll Syntax public class HighlightObjectMenuItem : MenuItem<IBehavior> Constructors HighlightObjectMenuItem() Declaration public HighlightObjectMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.html",
    "title": "Namespace VRBuilder.Core.Editor.UI.MenuItems.Behaviors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.UI.MenuItems.Behaviors Classes BehaviorSequenceMenuItem ConfettiMenuItem DelayMenuItem DisableComponentMenuItem DisableObjectsMenuItem EnableComponentMenuItem EnableObjectsMenuItem HighlightObjectMenuItem LoadSceneMenuItem MoveObjectMenuItem PlayResourceAudioMenuItem ScalingMenuItem SetParentMenuItem StartParticleEmissionMenuItem StopParticleEmissionMenuItem TextToSpeechMenuItem"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.LoadSceneMenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.LoadSceneMenuItem.html",
    "title": "Class LoadSceneMenuItem | VR Builder Documentation",
    "keywords": "Class LoadSceneMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > LoadSceneMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Core.Editor.dll Syntax public class LoadSceneMenuItem : MenuItem<IBehavior> Constructors LoadSceneMenuItem() Declaration public LoadSceneMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.MoveObjectMenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.MoveObjectMenuItem.html",
    "title": "Class MoveObjectMenuItem | VR Builder Documentation",
    "keywords": "Class MoveObjectMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > MoveObjectMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Core.Editor.dll Syntax public class MoveObjectMenuItem : MenuItem<IBehavior> Constructors MoveObjectMenuItem() Declaration public MoveObjectMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.PlayResourceAudioMenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.PlayResourceAudioMenuItem.html",
    "title": "Class PlayResourceAudioMenuItem | VR Builder Documentation",
    "keywords": "Class PlayResourceAudioMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > PlayResourceAudioMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Core.Editor.dll Syntax public class PlayResourceAudioMenuItem : MenuItem<IBehavior> Constructors PlayResourceAudioMenuItem() Declaration public PlayResourceAudioMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.ScalingMenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.ScalingMenuItem.html",
    "title": "Class ScalingMenuItem | VR Builder Documentation",
    "keywords": "Class ScalingMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > ScalingMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Core.Editor.dll Syntax public class ScalingMenuItem : MenuItem<IBehavior> Constructors ScalingMenuItem() Declaration public ScalingMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.SetParentMenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.SetParentMenuItem.html",
    "title": "Class SetParentMenuItem | VR Builder Documentation",
    "keywords": "Class SetParentMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetParentMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Core.Editor.dll Syntax public class SetParentMenuItem : MenuItem<IBehavior> Constructors SetParentMenuItem() Declaration public SetParentMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.StartParticleEmissionMenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.StartParticleEmissionMenuItem.html",
    "title": "Class StartParticleEmissionMenuItem | VR Builder Documentation",
    "keywords": "Class StartParticleEmissionMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > StartParticleEmissionMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Core.Editor.dll Syntax public class StartParticleEmissionMenuItem : MenuItem<IBehavior> Constructors StartParticleEmissionMenuItem() Declaration public StartParticleEmissionMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.StopParticleEmissionMenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.StopParticleEmissionMenuItem.html",
    "title": "Class StopParticleEmissionMenuItem | VR Builder Documentation",
    "keywords": "Class StopParticleEmissionMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > StopParticleEmissionMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Core.Editor.dll Syntax public class StopParticleEmissionMenuItem : MenuItem<IBehavior> Constructors StopParticleEmissionMenuItem() Declaration public StopParticleEmissionMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.TextToSpeechMenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Behaviors.TextToSpeechMenuItem.html",
    "title": "Class TextToSpeechMenuItem | VR Builder Documentation",
    "keywords": "Class TextToSpeechMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > TextToSpeechMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Core.Editor.dll Syntax public class TextToSpeechMenuItem : MenuItem<IBehavior> Constructors TextToSpeechMenuItem() Declaration public TextToSpeechMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Conditions.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Conditions.html",
    "title": "Namespace VRBuilder.Core.Editor.UI.MenuItems.Conditions | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.UI.MenuItems.Conditions Classes ObjectInColliderMenuItem ObjectInRangeMenuItem TimeoutMenuItem"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Conditions.ObjectInColliderMenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Conditions.ObjectInColliderMenuItem.html",
    "title": "Class ObjectInColliderMenuItem | VR Builder Documentation",
    "keywords": "Class ObjectInColliderMenuItem Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > ObjectInColliderMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.MenuItems.Conditions Assembly : VRBuilder.Core.Editor.dll Syntax public class ObjectInColliderMenuItem : MenuItem<ICondition> Constructors ObjectInColliderMenuItem() Declaration public ObjectInColliderMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods GetNewItem() Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Conditions.ObjectInRangeMenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Conditions.ObjectInRangeMenuItem.html",
    "title": "Class ObjectInRangeMenuItem | VR Builder Documentation",
    "keywords": "Class ObjectInRangeMenuItem Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > ObjectInRangeMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.MenuItems.Conditions Assembly : VRBuilder.Core.Editor.dll Syntax public class ObjectInRangeMenuItem : MenuItem<ICondition> Constructors ObjectInRangeMenuItem() Declaration public ObjectInRangeMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods GetNewItem() Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Core.Editor.UI.MenuItems.Conditions.TimeoutMenuItem.html": {
    "href": "api/VRBuilder.Core.Editor.UI.MenuItems.Conditions.TimeoutMenuItem.html",
    "title": "Class TimeoutMenuItem | VR Builder Documentation",
    "keywords": "Class TimeoutMenuItem Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > TimeoutMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.MenuItems.Conditions Assembly : VRBuilder.Core.Editor.dll Syntax public class TimeoutMenuItem : MenuItem<ICondition> Constructors TimeoutMenuItem() Declaration public TimeoutMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods GetNewItem() Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Core.Editor.UI.ProcessSceneObjectEditor.html": {
    "href": "api/VRBuilder.Core.Editor.UI.ProcessSceneObjectEditor.html",
    "title": "Class ProcessSceneObjectEditor | VR Builder Documentation",
    "keywords": "Class ProcessSceneObjectEditor Inheritance System.Object ProcessSceneObjectEditor Namespace : VRBuilder.Core.Editor.UI Assembly : VRBuilder.Core.Editor.dll Syntax public class ProcessSceneObjectEditor : Editor Constructors ProcessSceneObjectEditor() Declaration public ProcessSceneObjectEditor() Fields AssetOnDiskText Declaration public const string AssetOnDiskText = \"[Asset on disk]\" Field Value Type Description System.String MultipleValuesSelectedText Declaration public const string MultipleValuesSelectedText = \"[Multiple values selected]\" Field Value Type Description System.String UniqueIdDisplayName Declaration public const string UniqueIdDisplayName = \"Object ID\" Field Value Type Description System.String Methods CreateInspectorGUI() Declaration public override VisualElement CreateInspectorGUI() Returns Type Description UnityEngine.UIElements.VisualElement"
  },
  "api/VRBuilder.Core.Editor.UI.ProjectSettings.AdvancedSettingsSection.html": {
    "href": "api/VRBuilder.Core.Editor.UI.ProjectSettings.AdvancedSettingsSection.html",
    "title": "Class AdvancedSettingsSection | VR Builder Documentation",
    "keywords": "Class AdvancedSettingsSection Inheritance System.Object AdvancedSettingsSection Implements IProjectSettingsSection Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.ProjectSettings Assembly : VRBuilder.Core.Editor.dll Syntax public class AdvancedSettingsSection : IProjectSettingsSection Constructors AdvancedSettingsSection() Declaration public AdvancedSettingsSection() Properties Priority Declaration public int Priority { get; } Property Value Type Description System.Int32 TargetPageProvider Declaration public Type TargetPageProvider { get; } Property Value Type Description System.Type Title Declaration public string Title { get; } Property Value Type Description System.String Methods OnGUI(String) Declaration public void OnGUI(string searchContext) Parameters Type Name Description System.String searchContext Implements IProjectSettingsSection"
  },
  "api/VRBuilder.Core.Editor.UI.ProjectSettings.BaseSettingsProvider.html": {
    "href": "api/VRBuilder.Core.Editor.UI.ProjectSettings.BaseSettingsProvider.html",
    "title": "Class BaseSettingsProvider | VR Builder Documentation",
    "keywords": "Class BaseSettingsProvider Inheritance System.Object BaseSettingsProvider ComponentSettingsProvider LanguageSettingsProvider SceneObjectGroupsSettingsProvider SpectatorSettingsProvider VoiceChatSettingsProvider Namespace : VRBuilder.Core.Editor.UI.ProjectSettings Assembly : VRBuilder.Core.Editor.dll Syntax public abstract class BaseSettingsProvider : SettingsProvider Constructors BaseSettingsProvider(String, SettingsScope, IEnumerable<String>) Declaration protected BaseSettingsProvider(string path, SettingsScope scopes, IEnumerable<string> keywords = null) Parameters Type Name Description System.String path UnityEditor.SettingsScope scopes System.Collections.Generic.IEnumerable < System.String > keywords Fields sections Declaration protected List<IProjectSettingsSection> sections Field Value Type Description System.Collections.Generic.List < IProjectSettingsSection > Methods InternalDraw(String) Declaration protected abstract void InternalDraw(string searchContext) Parameters Type Name Description System.String searchContext OnGUI(String) Declaration public override void OnGUI(string searchContext) Parameters Type Name Description System.String searchContext"
  },
  "api/VRBuilder.Core.Editor.UI.ProjectSettings.ComponentSettingsProvider.html": {
    "href": "api/VRBuilder.Core.Editor.UI.ProjectSettings.ComponentSettingsProvider.html",
    "title": "Class ComponentSettingsProvider | VR Builder Documentation",
    "keywords": "Class ComponentSettingsProvider Inheritance System.Object BaseSettingsProvider ComponentSettingsProvider Inherited Members BaseSettingsProvider.sections BaseSettingsProvider.OnGUI(String) Namespace : VRBuilder.Core.Editor.UI.ProjectSettings Assembly : VRBuilder.Core.Editor.dll Syntax public class ComponentSettingsProvider : BaseSettingsProvider Constructors ComponentSettingsProvider() Declaration public ComponentSettingsProvider() Methods InternalDraw(String) Declaration protected override void InternalDraw(string searchContext) Parameters Type Name Description System.String searchContext Overrides BaseSettingsProvider.InternalDraw(String) Provider() Declaration public static SettingsProvider Provider() Returns Type Description UnityEditor.SettingsProvider"
  },
  "api/VRBuilder.Core.Editor.UI.ProjectSettings.ComponentSettingsSection-2.html": {
    "href": "api/VRBuilder.Core.Editor.UI.ProjectSettings.ComponentSettingsSection-2.html",
    "title": "Class ComponentSettingsSection<TObject, TSettings> | VR Builder Documentation",
    "keywords": "Class ComponentSettingsSection<TObject, TSettings> Inheritance System.Object ComponentSettingsSection<TObject, TSettings> OutlineSettingsSection SnapZoneSettingsSection Implements IProjectSettingsSection Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.ProjectSettings Assembly : VRBuilder.Core.Editor.dll Syntax public abstract class ComponentSettingsSection<TObject, TSettings> : IProjectSettingsSection where TObject : Object where TSettings : ComponentSettings<TObject, TSettings>, new() Type Parameters Name Description TObject TSettings Constructors ComponentSettingsSection() Declaration public ComponentSettingsSection() Properties Description Declaration public abstract string Description { get; } Property Value Type Description System.String Priority Declaration public abstract int Priority { get; } Property Value Type Description System.Int32 TargetPageProvider Declaration public Type TargetPageProvider { get; } Property Value Type Description System.Type Title Declaration public abstract string Title { get; } Property Value Type Description System.String Methods OnGUI(String) Declaration public void OnGUI(string searchContext) Parameters Type Name Description System.String searchContext Implements IProjectSettingsSection"
  },
  "api/VRBuilder.Core.Editor.UI.ProjectSettings.html": {
    "href": "api/VRBuilder.Core.Editor.UI.ProjectSettings.html",
    "title": "Namespace VRBuilder.Core.Editor.UI.ProjectSettings | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.UI.ProjectSettings Classes AdvancedSettingsSection BaseSettingsProvider ComponentSettingsProvider ComponentSettingsSection<TObject, TSettings> LanguageSettingsProvider SceneObjectGroupsSettingsProvider SceneObjectGroupsSettingsSection SpectatorSettingsProvider TextToSpeechSectionProvider TextToSpeechSettingsEditor Interfaces IProjectSettingsSection"
  },
  "api/VRBuilder.Core.Editor.UI.ProjectSettings.IProjectSettingsSection.html": {
    "href": "api/VRBuilder.Core.Editor.UI.ProjectSettings.IProjectSettingsSection.html",
    "title": "Interface IProjectSettingsSection | VR Builder Documentation",
    "keywords": "Interface IProjectSettingsSection Namespace : VRBuilder.Core.Editor.UI.ProjectSettings Assembly : VRBuilder.Core.Editor.dll Syntax public interface IProjectSettingsSection Properties Priority Declaration int Priority { get; } Property Value Type Description System.Int32 TargetPageProvider Declaration Type TargetPageProvider { get; } Property Value Type Description System.Type Title Declaration string Title { get; } Property Value Type Description System.String Methods OnGUI(String) Declaration void OnGUI(string searchContext) Parameters Type Name Description System.String searchContext"
  },
  "api/VRBuilder.Core.Editor.UI.ProjectSettings.LanguageSettingsProvider.html": {
    "href": "api/VRBuilder.Core.Editor.UI.ProjectSettings.LanguageSettingsProvider.html",
    "title": "Class LanguageSettingsProvider | VR Builder Documentation",
    "keywords": "Class LanguageSettingsProvider Inheritance System.Object BaseSettingsProvider LanguageSettingsProvider Inherited Members BaseSettingsProvider.sections BaseSettingsProvider.OnGUI(String) Namespace : VRBuilder.Core.Editor.UI.ProjectSettings Assembly : VRBuilder.Core.Editor.dll Syntax public class LanguageSettingsProvider : BaseSettingsProvider Constructors LanguageSettingsProvider() Declaration public LanguageSettingsProvider() Methods InternalDraw(String) Declaration protected override void InternalDraw(string searchContext) Parameters Type Name Description System.String searchContext Overrides BaseSettingsProvider.InternalDraw(String) OnDeactivate() Declaration public override void OnDeactivate() Provider() Declaration public static SettingsProvider Provider() Returns Type Description UnityEditor.SettingsProvider"
  },
  "api/VRBuilder.Core.Editor.UI.ProjectSettings.SceneObjectGroupsSettingsProvider.html": {
    "href": "api/VRBuilder.Core.Editor.UI.ProjectSettings.SceneObjectGroupsSettingsProvider.html",
    "title": "Class SceneObjectGroupsSettingsProvider | VR Builder Documentation",
    "keywords": "Class SceneObjectGroupsSettingsProvider Inheritance System.Object BaseSettingsProvider SceneObjectGroupsSettingsProvider Inherited Members BaseSettingsProvider.sections BaseSettingsProvider.OnGUI(String) Namespace : VRBuilder.Core.Editor.UI.ProjectSettings Assembly : VRBuilder.Core.Editor.dll Syntax public class SceneObjectGroupsSettingsProvider : BaseSettingsProvider Constructors SceneObjectGroupsSettingsProvider() Declaration public SceneObjectGroupsSettingsProvider() Methods InternalDraw(String) Declaration protected override void InternalDraw(string searchContext) Parameters Type Name Description System.String searchContext Overrides BaseSettingsProvider.InternalDraw(String) OnDeactivate() Declaration public override void OnDeactivate() Provider() Declaration public static SettingsProvider Provider() Returns Type Description UnityEditor.SettingsProvider"
  },
  "api/VRBuilder.Core.Editor.UI.ProjectSettings.SceneObjectGroupsSettingsSection.html": {
    "href": "api/VRBuilder.Core.Editor.UI.ProjectSettings.SceneObjectGroupsSettingsSection.html",
    "title": "Class SceneObjectGroupsSettingsSection | VR Builder Documentation",
    "keywords": "Class SceneObjectGroupsSettingsSection Inheritance System.Object SceneObjectGroupsSettingsSection Implements IProjectSettingsSection Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.ProjectSettings Assembly : VRBuilder.Core.Editor.dll Syntax public class SceneObjectGroupsSettingsSection : IProjectSettingsSection Constructors SceneObjectGroupsSettingsSection() Declaration public SceneObjectGroupsSettingsSection() Properties Priority Declaration public int Priority { get; } Property Value Type Description System.Int32 TargetPageProvider Declaration public Type TargetPageProvider { get; } Property Value Type Description System.Type Title Declaration public string Title { get; } Property Value Type Description System.String Methods OnGUI(String) Declaration public void OnGUI(string searchContext) Parameters Type Name Description System.String searchContext Implements IProjectSettingsSection"
  },
  "api/VRBuilder.Core.Editor.UI.ProjectSettings.SpectatorSettingsProvider.html": {
    "href": "api/VRBuilder.Core.Editor.UI.ProjectSettings.SpectatorSettingsProvider.html",
    "title": "Class SpectatorSettingsProvider | VR Builder Documentation",
    "keywords": "Class SpectatorSettingsProvider Inheritance System.Object BaseSettingsProvider SpectatorSettingsProvider Inherited Members BaseSettingsProvider.sections BaseSettingsProvider.OnGUI(String) Namespace : VRBuilder.Core.Editor.UI.ProjectSettings Assembly : VRBuilder.Core.Editor.dll Syntax public class SpectatorSettingsProvider : BaseSettingsProvider Constructors SpectatorSettingsProvider() Declaration public SpectatorSettingsProvider() Methods InternalDraw(String) Declaration protected override void InternalDraw(string searchContext) Parameters Type Name Description System.String searchContext Overrides BaseSettingsProvider.InternalDraw(String) Provider() Declaration public static SettingsProvider Provider() Returns Type Description UnityEditor.SettingsProvider"
  },
  "api/VRBuilder.Core.Editor.UI.ProjectSettings.TextToSpeechSectionProvider.html": {
    "href": "api/VRBuilder.Core.Editor.UI.ProjectSettings.TextToSpeechSectionProvider.html",
    "title": "Class TextToSpeechSectionProvider | VR Builder Documentation",
    "keywords": "Class TextToSpeechSectionProvider Inheritance System.Object TextToSpeechSectionProvider Implements IProjectSettingsSection Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.ProjectSettings Assembly : VRBuilder.Core.Editor.dll Syntax public class TextToSpeechSectionProvider : IProjectSettingsSection Constructors TextToSpeechSectionProvider() Declaration public TextToSpeechSectionProvider() Properties Priority Declaration public int Priority { get; } Property Value Type Description System.Int32 TargetPageProvider Declaration public Type TargetPageProvider { get; } Property Value Type Description System.Type Title Declaration public string Title { get; } Property Value Type Description System.String Methods Finalize() Declaration protected void Finalize() OnGUI(String) Declaration public void OnGUI(string searchContext) Parameters Type Name Description System.String searchContext Implements IProjectSettingsSection"
  },
  "api/VRBuilder.Core.Editor.UI.ProjectSettings.TextToSpeechSettingsEditor.html": {
    "href": "api/VRBuilder.Core.Editor.UI.ProjectSettings.TextToSpeechSettingsEditor.html",
    "title": "Class TextToSpeechSettingsEditor | VR Builder Documentation",
    "keywords": "Class TextToSpeechSettingsEditor Inheritance System.Object TextToSpeechSettingsEditor Namespace : VRBuilder.Core.Editor.UI.ProjectSettings Assembly : VRBuilder.Core.Editor.dll Syntax public class TextToSpeechSettingsEditor : Editor Constructors TextToSpeechSettingsEditor() Declaration public TextToSpeechSettingsEditor() Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/VRBuilder.Core.Editor.UI.StepInspector.Menu.DisabledMenuItem-1.html": {
    "href": "api/VRBuilder.Core.Editor.UI.StepInspector.Menu.DisabledMenuItem-1.html",
    "title": "Class DisabledMenuItem<T> | VR Builder Documentation",
    "keywords": "Class DisabledMenuItem<T> Inheritance System.Object MenuOption <T> DisabledMenuItem<T> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.StepInspector.Menu Assembly : VRBuilder.Core.Editor.dll Syntax public class DisabledMenuItem<T> : MenuOption<T> Type Parameters Name Description T Constructors DisabledMenuItem(String) Declaration public DisabledMenuItem(string label) Parameters Type Name Description System.String label Properties Label Declaration public string Label { get; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Core.Editor.UI.StepInspector.Menu.html": {
    "href": "api/VRBuilder.Core.Editor.UI.StepInspector.Menu.html",
    "title": "Namespace VRBuilder.Core.Editor.UI.StepInspector.Menu | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.UI.StepInspector.Menu Classes DisabledMenuItem<T> MenuItem<T> MenuOption<T> MenuSeparator<T>"
  },
  "api/VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem-1.html": {
    "href": "api/VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem-1.html",
    "title": "Class MenuItem<T> | VR Builder Documentation",
    "keywords": "Class MenuItem<T> Inheritance System.Object MenuOption <T> MenuItem<T> GrabbedMenuItem ReleasedMenuItem SnappedMenuItem TeleportMenuItem TouchedMenuItem UnsnapMenuItem UsedMenuItem BehaviorSequenceMenuItem ConfettiMenuItem DelayMenuItem DisableComponentMenuItem DisableObjectsMenuItem EnableComponentMenuItem EnableObjectsMenuItem HighlightObjectMenuItem LoadSceneMenuItem MoveObjectMenuItem PlayResourceAudioMenuItem ScalingMenuItem SetParentMenuItem StartParticleEmissionMenuItem StopParticleEmissionMenuItem TextToSpeechMenuItem ObjectInColliderMenuItem ObjectInRangeMenuItem TimeoutMenuItem AnimateTransformMenuItem ChildExplosionViewMenuItem FollowPathMenuItem MathOperationMenuItem OutlineObjectsMenuItem PlayAnimationClipMenuItem PlayVideoBehaviorMenuItem PointAtObjectsMenuItem ResetValueMenuItem RotateAroundAxisMenuItem SetAnimatorBoolMenuItem SetAnimatorFloatMenuItem SetAnimatorIntMenuItem SetAnimatorTriggerMenuItem SetBooleanValueMenuItem SetNumberValueMenuItem SetRandomBooleanMenuItem SetRandomNumberMenuItem SetStateValueMenuItem SetTextValueMenuItem StartTimerMenuItem StopTimerMenuItem TriggerBooleanEventByTagMenuItem TriggerEventMenuItem TriggerFloatEventMenuItem TriggerStringEventMenuItem UpdateScoreMenuItem CheckStateMenuItem CompareBooleansMenuItem CompareNumbersMenuItem CompareTextMenuItem Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.StepInspector.Menu Assembly : VRBuilder.Core.Editor.dll Syntax public abstract class MenuItem<T> : MenuOption<T> Type Parameters Name Description T Constructors MenuItem() Declaration protected MenuItem() Properties DisplayedName Declaration public abstract string DisplayedName { get; } Property Value Type Description System.String Methods GetItemType() Declaration public virtual Type GetItemType() Returns Type Description System.Type GetNewItem() Declaration public abstract T GetNewItem() Returns Type Description T"
  },
  "api/VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuOption-1.html": {
    "href": "api/VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuOption-1.html",
    "title": "Class MenuOption<T> | VR Builder Documentation",
    "keywords": "Class MenuOption<T> Inheritance System.Object MenuOption<T> DisabledMenuItem<T> MenuItem<T> MenuSeparator<T> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.StepInspector.Menu Assembly : VRBuilder.Core.Editor.dll Syntax public abstract class MenuOption<T> Type Parameters Name Description T Constructors MenuOption() Declaration protected MenuOption()"
  },
  "api/VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuSeparator-1.html": {
    "href": "api/VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuSeparator-1.html",
    "title": "Class MenuSeparator<T> | VR Builder Documentation",
    "keywords": "Class MenuSeparator<T> Inheritance System.Object MenuOption <T> MenuSeparator<T> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.StepInspector.Menu Assembly : VRBuilder.Core.Editor.dll Syntax public sealed class MenuSeparator<T> : MenuOption<T> Type Parameters Name Description T Constructors MenuSeparator(String) Declaration public MenuSeparator(string pathToSubmenu = \"\") Parameters Type Name Description System.String pathToSubmenu Properties PathToSubmenu Declaration public string PathToSubmenu { get; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Core.Editor.UI.Views.GroupListItem.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Views.GroupListItem.html",
    "title": "Class GroupListItem | VR Builder Documentation",
    "keywords": "Class GroupListItem Inheritance System.Object GroupListItem Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Views Assembly : VRBuilder.Core.Editor.dll Syntax public class GroupListItem Constructors GroupListItem() Declaration public GroupListItem() Fields GroupCountNotAvailableText Declaration public const string GroupCountNotAvailableText = \"n/a\" Field Value Type Description System.String Methods FillGroupListItem(VisualElement, String, Boolean, IEnumerable<ISceneObject>, Boolean) Declaration public static void FillGroupListItem(VisualElement groupListItem, string name, bool isPreviewInContext = false, IEnumerable<ISceneObject> referencedSceneObjects = null, bool elementIsUniqueIdDisplayName = false) Parameters Type Name Description UnityEngine.UIElements.VisualElement groupListItem System.String name System.Boolean isPreviewInContext System.Collections.Generic.IEnumerable < ISceneObject > referencedSceneObjects System.Boolean elementIsUniqueIdDisplayName"
  },
  "api/VRBuilder.Core.Editor.UI.Views.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Views.html",
    "title": "Namespace VRBuilder.Core.Editor.UI.Views | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.UI.Views Classes GroupListItem ViewDictionary Enums ViewDictionary.EnumType"
  },
  "api/VRBuilder.Core.Editor.UI.Views.ViewDictionary.EnumType.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Views.ViewDictionary.EnumType.html",
    "title": "Enum ViewDictionary.EnumType | VR Builder Documentation",
    "keywords": "Enum ViewDictionary.EnumType Namespace : VRBuilder.Core.Editor.UI.Views Assembly : VRBuilder.Core.Editor.dll Syntax public enum EnumType Fields Name Description GroupListItem SceneReferencesGroupItem SceneReferencesList SceneReferencesObjectItem SearchableList"
  },
  "api/VRBuilder.Core.Editor.UI.Views.ViewDictionary.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Views.ViewDictionary.html",
    "title": "Class ViewDictionary | VR Builder Documentation",
    "keywords": "Class ViewDictionary Inheritance System.Object ViewDictionary Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Views Assembly : VRBuilder.Core.Editor.dll Syntax public class ViewDictionary Constructors ViewDictionary() Declaration public ViewDictionary() Methods GetPath(ViewDictionary.EnumType) Declaration public static string GetPath(ViewDictionary.EnumType enumValue) Parameters Type Name Description ViewDictionary.EnumType enumValue Returns Type Description System.String LoadAsset(ViewDictionary.EnumType) Declaration public static VisualTreeAsset LoadAsset(ViewDictionary.EnumType enumValue) Parameters Type Name Description ViewDictionary.EnumType enumValue Returns Type Description UnityEngine.UIElements.VisualTreeAsset"
  },
  "api/VRBuilder.Core.Editor.UI.Windows.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Windows.html",
    "title": "Namespace VRBuilder.Core.Editor.UI.Windows | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.UI.Windows Classes StepWindow WindowUtils"
  },
  "api/VRBuilder.Core.Editor.UI.Windows.StepWindow.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Windows.StepWindow.html",
    "title": "Class StepWindow | VR Builder Documentation",
    "keywords": "Class StepWindow Inheritance System.Object StepWindow Implements IStepView Namespace : VRBuilder.Core.Editor.UI.Windows Assembly : VRBuilder.Core.Editor.dll Syntax public class StepWindow : EditorWindow, IStepView Constructors StepWindow() Declaration public StepWindow() Methods GetInstance(Boolean) Declaration public static StepWindow GetInstance(bool focus = false) Parameters Type Name Description System.Boolean focus Returns Type Description StepWindow GetStep() Declaration public IStep GetStep() Returns Type Description IStep ResetStepView() Declaration public void ResetStepView() SetStep(IStep) Declaration public void SetStep(IStep newStep) Parameters Type Name Description IStep newStep ShowInspector() Declaration public static void ShowInspector() Implements IStepView"
  },
  "api/VRBuilder.Core.Editor.UI.Windows.WindowUtils.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Windows.WindowUtils.html",
    "title": "Class WindowUtils | VR Builder Documentation",
    "keywords": "Class WindowUtils Inheritance System.Object WindowUtils Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Windows Assembly : VRBuilder.Core.Editor.dll Syntax public class WindowUtils Constructors WindowUtils() Declaration public WindowUtils()"
  },
  "api/VRBuilder.Core.Editor.UI.Wizard.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Wizard.html",
    "title": "Namespace VRBuilder.Core.Editor.UI.Wizard | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.UI.Wizard Classes ProjectSetupWizard SceneSetupWizard"
  },
  "api/VRBuilder.Core.Editor.UI.Wizard.ProjectSetupWizard.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Wizard.ProjectSetupWizard.html",
    "title": "Class ProjectSetupWizard | VR Builder Documentation",
    "keywords": "Class ProjectSetupWizard Inheritance System.Object ProjectSetupWizard Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Wizard Assembly : VRBuilder.Core.Editor.dll Syntax public static class ProjectSetupWizard Events SetupFinished Declaration public static event EventHandler<EventArgs> SetupFinished Event Type Type Description System.EventHandler < System.EventArgs >"
  },
  "api/VRBuilder.Core.Editor.UI.Wizard.SceneSetupWizard.html": {
    "href": "api/VRBuilder.Core.Editor.UI.Wizard.SceneSetupWizard.html",
    "title": "Class SceneSetupWizard | VR Builder Documentation",
    "keywords": "Class SceneSetupWizard Inheritance System.Object SceneSetupWizard Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI.Wizard Assembly : VRBuilder.Core.Editor.dll Syntax public static class SceneSetupWizard Events SetupFinished Declaration public static event EventHandler<EventArgs> SetupFinished Event Type Type Description System.EventHandler < System.EventArgs >"
  },
  "api/VRBuilder.Core.Editor.UI.WorkflowEditorColorPalette.html": {
    "href": "api/VRBuilder.Core.Editor.UI.WorkflowEditorColorPalette.html",
    "title": "Class WorkflowEditorColorPalette | VR Builder Documentation",
    "keywords": "Class WorkflowEditorColorPalette Inheritance System.Object WorkflowEditorColorPalette Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UI Assembly : VRBuilder.Core.Editor.dll Syntax public class WorkflowEditorColorPalette Constructors WorkflowEditorColorPalette() Declaration public WorkflowEditorColorPalette() Properties EditorBackground Declaration public static Color EditorBackground { get; } Property Value Type Description UnityEngine.Color ElementBackground Declaration public Color ElementBackground { get; } Property Value Type Description UnityEngine.Color Primary Declaration public Color Primary { get; } Property Value Type Description UnityEngine.Color Secondary Declaration public Color Secondary { get; } Property Value Type Description UnityEngine.Color Text Declaration public Color Text { get; } Property Value Type Description UnityEngine.Color Transition Declaration public Color Transition { get; } Property Value Type Description UnityEngine.Color Methods GetDefaultPalette() Declaration public static WorkflowEditorColorPalette GetDefaultPalette() Returns Type Description WorkflowEditorColorPalette LoadPaletteFrom(String) Declaration public static WorkflowEditorColorPalette LoadPaletteFrom(string paletteSubpath) Parameters Type Name Description System.String paletteSubpath Returns Type Description WorkflowEditorColorPalette"
  },
  "api/VRBuilder.Core.Editor.UndoRedo.CallbackCommand.html": {
    "href": "api/VRBuilder.Core.Editor.UndoRedo.CallbackCommand.html",
    "title": "Class CallbackCommand | VR Builder Documentation",
    "keywords": "Class CallbackCommand Inheritance System.Object CallbackCommand ProcessCommand Implements IRevertableCommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UndoRedo Assembly : VRBuilder.Core.Editor.dll Syntax public class CallbackCommand : IRevertableCommand Constructors CallbackCommand(Action, Action) Declaration public CallbackCommand(Action doCallback, Action undoCallback) Parameters Type Name Description System.Action doCallback System.Action undoCallback Methods Do() Declaration public virtual void Do() Undo() Declaration public virtual void Undo() Implements IRevertableCommand"
  },
  "api/VRBuilder.Core.Editor.UndoRedo.html": {
    "href": "api/VRBuilder.Core.Editor.UndoRedo.html",
    "title": "Namespace VRBuilder.Core.Editor.UndoRedo | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.UndoRedo Classes CallbackCommand ProcessCommand RevertableChangesHandler Interfaces IRevertableCommand"
  },
  "api/VRBuilder.Core.Editor.UndoRedo.IRevertableCommand.html": {
    "href": "api/VRBuilder.Core.Editor.UndoRedo.IRevertableCommand.html",
    "title": "Interface IRevertableCommand | VR Builder Documentation",
    "keywords": "Interface IRevertableCommand Namespace : VRBuilder.Core.Editor.UndoRedo Assembly : VRBuilder.Core.Editor.dll Syntax public interface IRevertableCommand Methods Do() Declaration void Do() Undo() Declaration void Undo()"
  },
  "api/VRBuilder.Core.Editor.UndoRedo.ProcessCommand.html": {
    "href": "api/VRBuilder.Core.Editor.UndoRedo.ProcessCommand.html",
    "title": "Class ProcessCommand | VR Builder Documentation",
    "keywords": "Class ProcessCommand Inheritance System.Object CallbackCommand ProcessCommand Implements IRevertableCommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UndoRedo Assembly : VRBuilder.Core.Editor.dll Syntax public class ProcessCommand : CallbackCommand, IRevertableCommand Constructors ProcessCommand(Action, Action) Declaration public ProcessCommand(Action doCallback, Action undoCallback) Parameters Type Name Description System.Action doCallback System.Action undoCallback Methods Do() Declaration public override void Do() Overrides CallbackCommand.Do() Undo() Declaration public override void Undo() Overrides CallbackCommand.Undo() Implements IRevertableCommand"
  },
  "api/VRBuilder.Core.Editor.UndoRedo.RevertableChangesHandler.html": {
    "href": "api/VRBuilder.Core.Editor.UndoRedo.RevertableChangesHandler.html",
    "title": "Class RevertableChangesHandler | VR Builder Documentation",
    "keywords": "Class RevertableChangesHandler Inheritance System.Object RevertableChangesHandler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.UndoRedo Assembly : VRBuilder.Core.Editor.dll Syntax public static class RevertableChangesHandler Methods CollapseUndoOperations(String) Declaration public static void CollapseUndoOperations(string groupName) Parameters Type Name Description System.String groupName Do(IRevertableCommand, String) Declaration public static void Do(IRevertableCommand revertableCommand, string commandGroup = \"\") Parameters Type Name Description IRevertableCommand revertableCommand System.String commandGroup FlushStack() Declaration public static void FlushStack()"
  },
  "api/VRBuilder.Core.Editor.Unity.html": {
    "href": "api/VRBuilder.Core.Editor.Unity.html",
    "title": "Namespace VRBuilder.Core.Editor.Unity | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.Unity Classes PreBuildCloseProcessEditor PreBuildLinkXMLCreator"
  },
  "api/VRBuilder.Core.Editor.Unity.PreBuildCloseProcessEditor.html": {
    "href": "api/VRBuilder.Core.Editor.Unity.PreBuildCloseProcessEditor.html",
    "title": "Class PreBuildCloseProcessEditor | VR Builder Documentation",
    "keywords": "Class PreBuildCloseProcessEditor Inheritance System.Object PreBuildCloseProcessEditor Implements UnityEditor.Build.IPreprocessBuildWithReport UnityEditor.Build.IOrderedCallback Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.Unity Assembly : VRBuilder.Core.Editor.dll Syntax public class PreBuildCloseProcessEditor Constructors PreBuildCloseProcessEditor() Declaration public PreBuildCloseProcessEditor() Properties callbackOrder Declaration public int callbackOrder { get; } Property Value Type Description System.Int32 Methods OnPreprocessBuild(BuildReport) Declaration public void OnPreprocessBuild(BuildReport report) Parameters Type Name Description UnityEditor.Build.Reporting.BuildReport report Implements UnityEditor.Build.IPreprocessBuildWithReport UnityEditor.Build.IOrderedCallback"
  },
  "api/VRBuilder.Core.Editor.Unity.PreBuildLinkXMLCreator.html": {
    "href": "api/VRBuilder.Core.Editor.Unity.PreBuildLinkXMLCreator.html",
    "title": "Class PreBuildLinkXMLCreator | VR Builder Documentation",
    "keywords": "Class PreBuildLinkXMLCreator Inheritance System.Object PreBuildLinkXMLCreator Implements UnityEditor.Build.IPreprocessBuildWithReport UnityEditor.Build.IOrderedCallback Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.Unity Assembly : VRBuilder.Core.Editor.dll Syntax public class PreBuildLinkXMLCreator Constructors PreBuildLinkXMLCreator() Declaration public PreBuildLinkXMLCreator() Fields LinkXML Declaration public const string LinkXML = \"link.xml\" Field Value Type Description System.String VRBuilderRootFolder Declaration public const string VRBuilderRootFolder = \"Assets/MindPort/VR Builder\" Field Value Type Description System.String Properties callbackOrder Declaration public int callbackOrder { get; } Property Value Type Description System.Int32 Methods OnPreprocessBuild(BuildReport) Declaration public void OnPreprocessBuild(BuildReport report) Parameters Type Name Description UnityEditor.Build.Reporting.BuildReport report Implements UnityEditor.Build.IPreprocessBuildWithReport UnityEditor.Build.IOrderedCallback"
  },
  "api/VRBuilder.Core.Editor.XRUtils.html": {
    "href": "api/VRBuilder.Core.Editor.XRUtils.html",
    "title": "Namespace VRBuilder.Core.Editor.XRUtils | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Editor.XRUtils Classes XRLoaderHelper Enums XRLoaderHelper.XRConfiguration XRLoaderHelper.XRSDK"
  },
  "api/VRBuilder.Core.Editor.XRUtils.XRLoaderHelper.html": {
    "href": "api/VRBuilder.Core.Editor.XRUtils.XRLoaderHelper.html",
    "title": "Class XRLoaderHelper | VR Builder Documentation",
    "keywords": "Class XRLoaderHelper Inheritance System.Object XRLoaderHelper Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Core.Editor.XRUtils Assembly : VRBuilder.Core.Editor.dll Syntax public class XRLoaderHelper Constructors XRLoaderHelper() Declaration public XRLoaderHelper() Methods GetCurrentXRConfiguration() Declaration public static IEnumerable<XRLoaderHelper.XRConfiguration> GetCurrentXRConfiguration() Returns Type Description System.Collections.Generic.IEnumerable < XRLoaderHelper.XRConfiguration > LoadOculus() Declaration public static void LoadOculus() LoadOpenVR() Declaration public static void LoadOpenVR() LoadOpenXR() Declaration public static void LoadOpenXR() LoadWindowsMR() Declaration public static void LoadWindowsMR()"
  },
  "api/VRBuilder.Core.Editor.XRUtils.XRLoaderHelper.XRConfiguration.html": {
    "href": "api/VRBuilder.Core.Editor.XRUtils.XRLoaderHelper.XRConfiguration.html",
    "title": "Enum XRLoaderHelper.XRConfiguration | VR Builder Documentation",
    "keywords": "Enum XRLoaderHelper.XRConfiguration Namespace : VRBuilder.Core.Editor.XRUtils Assembly : VRBuilder.Core.Editor.dll Syntax public enum XRConfiguration Fields Name Description None OculusLegacy OculusXR OpenVRLegacy OpenVRXR WindowsMR XRLegacy XRManagement"
  },
  "api/VRBuilder.Core.Editor.XRUtils.XRLoaderHelper.XRSDK.html": {
    "href": "api/VRBuilder.Core.Editor.XRUtils.XRLoaderHelper.XRSDK.html",
    "title": "Enum XRLoaderHelper.XRSDK | VR Builder Documentation",
    "keywords": "Enum XRLoaderHelper.XRSDK Namespace : VRBuilder.Core.Editor.XRUtils Assembly : VRBuilder.Core.Editor.dll Syntax public enum XRSDK Fields Name Description None Oculus OpenVR OpenXR WindowsMR"
  },
  "api/VRBuilder.Core.EmptyAutocompleter.html": {
    "href": "api/VRBuilder.Core.EmptyAutocompleter.html",
    "title": "Class EmptyAutocompleter | VR Builder Documentation",
    "keywords": "Class EmptyAutocompleter Inheritance System.Object EmptyAutocompleter Implements IAutocompleter Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class EmptyAutocompleter : Object, IAutocompleter Constructors EmptyAutocompleter() Declaration public EmptyAutocompleter() Methods Complete() Declaration public void Complete() Implements IAutocompleter"
  },
  "api/VRBuilder.Core.EmptyConfigurator.html": {
    "href": "api/VRBuilder.Core.EmptyConfigurator.html",
    "title": "Class EmptyConfigurator | VR Builder Documentation",
    "keywords": "Class EmptyConfigurator Inheritance System.Object EmptyConfigurator Implements IConfigurator Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class EmptyConfigurator : Object, IConfigurator Constructors EmptyConfigurator() Declaration public EmptyConfigurator() Methods Configure(IMode, Stage) Declaration public void Configure(IMode mode, Stage stage) Parameters Type Name Description IMode mode Stage stage Implements IConfigurator"
  },
  "api/VRBuilder.Core.EmptyProcess.html": {
    "href": "api/VRBuilder.Core.EmptyProcess.html",
    "title": "Class EmptyProcess | VR Builder Documentation",
    "keywords": "Class EmptyProcess Inheritance System.Object EmptyProcess Implements IStageProcess Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public sealed class EmptyProcess : Object, IStageProcess Constructors EmptyProcess() Declaration public EmptyProcess() Methods End() Declaration public void End() FastForward() Declaration public void FastForward() Start() Declaration public void Start() Update() Declaration public IEnumerator Update() Returns Type Description System.Collections.IEnumerator Implements IStageProcess"
  },
  "api/VRBuilder.Core.Entities.Factories.EntityFactory.html": {
    "href": "api/VRBuilder.Core.Entities.Factories.EntityFactory.html",
    "title": "Class EntityFactory | VR Builder Documentation",
    "keywords": "Class EntityFactory Inheritance System.Object EntityFactory Namespace : VRBuilder.Core.Entities.Factories Assembly : VRBuilder.Core.dll Syntax public static class EntityFactory : Object Methods CreateChapter(String) Declaration public static IChapter CreateChapter(string name) Parameters Type Name Description System.String name Returns Type Description IChapter CreateProcess(String) Declaration public static IProcess CreateProcess(string name) Parameters Type Name Description System.String name Returns Type Description IProcess CreateStep(String, Vector2, String) Declaration public static IStep CreateStep(string name, Vector2 position = null, string stepType = \"default\") Parameters Type Name Description System.String name UnityEngine.Vector2 position System.String stepType Returns Type Description IStep CreateTransition() Declaration public static ITransition CreateTransition() Returns Type Description ITransition"
  },
  "api/VRBuilder.Core.Entities.Factories.EntityPostProcessing-1.html": {
    "href": "api/VRBuilder.Core.Entities.Factories.EntityPostProcessing-1.html",
    "title": "Class EntityPostProcessing<T> | VR Builder Documentation",
    "keywords": "Class EntityPostProcessing<T> Inheritance System.Object EntityPostProcessing<T> EndChapterPostProcessing ParallelExecutionPostProcessing StepGroupPostProcessing StepPostProcessing RandomBranchPostProcessing Namespace : VRBuilder.Core.Entities.Factories Assembly : VRBuilder.Core.dll Syntax public abstract class EntityPostProcessing<T> : Object where T : IEntity Type Parameters Name Description T Constructors EntityPostProcessing() Declaration protected EntityPostProcessing() Methods Execute(T) Declaration public abstract void Execute(T entity) Parameters Type Name Description T entity"
  },
  "api/VRBuilder.Core.Entities.Factories.html": {
    "href": "api/VRBuilder.Core.Entities.Factories.html",
    "title": "Namespace VRBuilder.Core.Entities.Factories | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Entities.Factories Classes EntityFactory EntityPostProcessing<T> StepPostProcessing"
  },
  "api/VRBuilder.Core.Entities.Factories.StepPostProcessing.html": {
    "href": "api/VRBuilder.Core.Entities.Factories.StepPostProcessing.html",
    "title": "Class StepPostProcessing | VR Builder Documentation",
    "keywords": "Class StepPostProcessing Inheritance System.Object EntityPostProcessing < IStep > StepPostProcessing Namespace : VRBuilder.Core.Entities.Factories Assembly : VRBuilder.Core.dll Syntax public class StepPostProcessing : EntityPostProcessing<IStep> Constructors StepPostProcessing() Declaration public StepPostProcessing() Methods Execute(IStep) Declaration public override void Execute(IStep entity) Parameters Type Name Description IStep entity Overrides VRBuilder.Core.Entities.Factories.EntityPostProcessing<VRBuilder.Core.IStep>.Execute(VRBuilder.Core.IStep)"
  },
  "api/VRBuilder.Core.Entity-1.html": {
    "href": "api/VRBuilder.Core.Entity-1.html",
    "title": "Class Entity<TData> | VR Builder Documentation",
    "keywords": "Class Entity<TData> Inheritance System.Object Entity<TData> BehaviorCollection Behavior<TData> Chapter CompletableEntity<TData> Process Step TransitionCollection Implements IEntity IDataOwner <TData> IDataOwner Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public abstract class Entity<TData> : Object, IEntity, IDataOwner<TData>, IDataOwner where TData : class, IData, new() Type Parameters Name Description TData Constructors Entity() Declaration protected Entity() Properties Data Declaration public TData Data { get; } Property Value Type Description TData LifeCycle Declaration public ILifeCycle LifeCycle { get; } Property Value Type Description ILifeCycle Parent Declaration public IEntity Parent { get; set; } Property Value Type Description IEntity Methods Configure(IMode) Declaration public virtual void Configure(IMode mode) Parameters Type Name Description IMode mode GetAbortingProcess() Declaration public virtual IStageProcess GetAbortingProcess() Returns Type Description IStageProcess GetActivatingProcess() Declaration public virtual IStageProcess GetActivatingProcess() Returns Type Description IStageProcess GetActiveProcess() Declaration public virtual IStageProcess GetActiveProcess() Returns Type Description IStageProcess GetConfigurator() Declaration protected virtual IConfigurator GetConfigurator() Returns Type Description IConfigurator GetDeactivatingProcess() Declaration public virtual IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Update() Declaration public void Update() Explicit Interface Implementations IDataOwner.Data Declaration IData IDataOwner.Data { get; } Returns Type Description IData Implements IEntity IDataOwner<TData> IDataOwner"
  },
  "api/VRBuilder.Core.EntityOwners.EntityCollectionData-1.html": {
    "href": "api/VRBuilder.Core.EntityOwners.EntityCollectionData-1.html",
    "title": "Class EntityCollectionData<TEntity> | VR Builder Documentation",
    "keywords": "Class EntityCollectionData<TEntity> Inheritance System.Object EntityCollectionData<TEntity> BehaviorCollection.EntityData BehaviorSequence.EntityData ExecuteChapterBehavior.EntityData ExecuteChaptersBehavior.EntityData Chapter.EntityData Process.EntityData Step.EntityData Transition.EntityData TransitionCollection.EntityData Implements IEntityCollectionData <TEntity> IEntityCollectionData IData Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public abstract class EntityCollectionData<TEntity> : Object, IEntityCollectionData<TEntity>, IEntityCollectionData, IData where TEntity : IEntity Type Parameters Name Description TEntity Constructors EntityCollectionData() Declaration protected EntityCollectionData() Properties Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Methods GetChildren() Declaration public abstract IEnumerable<TEntity> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable <TEntity> Explicit Interface Implementations IEntityCollectionData.GetChildren() Declaration IEnumerable<IEntity> IEntityCollectionData.GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < IEntity > Implements IEntityCollectionData<TEntity> IEntityCollectionData IData"
  },
  "api/VRBuilder.Core.EntityOwners.EntityIteratingProcess-2.html": {
    "href": "api/VRBuilder.Core.EntityOwners.EntityIteratingProcess-2.html",
    "title": "Class EntityIteratingProcess<TEntitySequenceDataWithMode, TEntity> | VR Builder Documentation",
    "keywords": "Class EntityIteratingProcess<TEntitySequenceDataWithMode, TEntity> Inheritance System.Object StageProcess <TEntitySequenceDataWithMode> EntityIteratingProcess<TEntitySequenceDataWithMode, TEntity> Implements IStageProcess Inherited Members StageProcess<TEntitySequenceDataWithMode>.Data StageProcess<TEntitySequenceDataWithMode>.Outer Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public abstract class EntityIteratingProcess<TEntitySequenceDataWithMode, TEntity> : StageProcess<TEntitySequenceDataWithMode>, IStageProcess where TEntitySequenceDataWithMode : class, IEntitySequenceDataWithMode<TEntity> where TEntity : IEntity Type Parameters Name Description TEntitySequenceDataWithMode TEntity Constructors EntityIteratingProcess(TEntitySequenceDataWithMode) Declaration protected EntityIteratingProcess(TEntitySequenceDataWithMode data) Parameters Type Name Description TEntitySequenceDataWithMode data Methods End() Declaration public override void End() Overrides VRBuilder.Core.StageProcess<TEntitySequenceDataWithMode>.End() FastForward() Declaration public override void FastForward() Overrides VRBuilder.Core.StageProcess<TEntitySequenceDataWithMode>.FastForward() ShouldActivateCurrent() Declaration protected abstract bool ShouldActivateCurrent() Returns Type Description System.Boolean ShouldDeactivateCurrent() Declaration protected abstract bool ShouldDeactivateCurrent() Returns Type Description System.Boolean Start() Declaration public override void Start() Overrides VRBuilder.Core.StageProcess<TEntitySequenceDataWithMode>.Start() TryNext(out TEntity) Declaration protected abstract bool TryNext(out TEntity entity) Parameters Type Name Description TEntity entity Returns Type Description System.Boolean Update() Declaration public override IEnumerator Update() Returns Type Description System.Collections.IEnumerator Overrides VRBuilder.Core.StageProcess<TEntitySequenceDataWithMode>.Update() Implements IStageProcess"
  },
  "api/VRBuilder.Core.EntityOwners.FoldedLifeCycleConfigurator-1.html": {
    "href": "api/VRBuilder.Core.EntityOwners.FoldedLifeCycleConfigurator-1.html",
    "title": "Class FoldedLifeCycleConfigurator<TEntity> | VR Builder Documentation",
    "keywords": "Class FoldedLifeCycleConfigurator<TEntity> Inheritance System.Object Configurator < IEntitySequenceData <TEntity>> FoldedLifeCycleConfigurator<TEntity> Implements IConfigurator Inherited Members Configurator<IEntitySequenceData<TEntity>>.Data Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public class FoldedLifeCycleConfigurator<TEntity> : Configurator<IEntitySequenceData<TEntity>>, IConfigurator where TEntity : IEntity Type Parameters Name Description TEntity Constructors FoldedLifeCycleConfigurator(IEntitySequenceData<TEntity>) Declaration public FoldedLifeCycleConfigurator(IEntitySequenceData<TEntity> data) Parameters Type Name Description IEntitySequenceData <TEntity> data Methods Configure(IMode, Stage) Declaration public override void Configure(IMode mode, Stage stage) Parameters Type Name Description IMode mode Stage stage Overrides VRBuilder.Core.Configurator<VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>>.Configure(VRBuilder.Core.Configuration.Modes.IMode, VRBuilder.Core.Stage) Implements IConfigurator"
  },
  "api/VRBuilder.Core.EntityOwners.html": {
    "href": "api/VRBuilder.Core.EntityOwners.html",
    "title": "Namespace VRBuilder.Core.EntityOwners | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.EntityOwners Classes EntityCollectionData<TEntity> EntityIteratingProcess<TEntitySequenceDataWithMode, TEntity> FoldedLifeCycleConfigurator<TEntity> ParallelConfigurator<TEntity> SequenceConfigurator<TEntity> StopEntityIteratingProcess<TEntity> Interfaces IEntityCollectionData IEntityCollectionData<TEntity> IEntityCollectionDataWithMode IEntityCollectionDataWithMode<TEntity> IEntityNonLinearSequenceDataWithMode<TEntity> IEntitySequenceData IEntitySequenceData<TEntity> IEntitySequenceDataWithMode<TEntity>"
  },
  "api/VRBuilder.Core.EntityOwners.IEntityCollectionData.html": {
    "href": "api/VRBuilder.Core.EntityOwners.IEntityCollectionData.html",
    "title": "Interface IEntityCollectionData | VR Builder Documentation",
    "keywords": "Interface IEntityCollectionData Inherited Members IData.Metadata Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public interface IEntityCollectionData : IData Methods GetChildren() Declaration IEnumerable<IEntity> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < IEntity >"
  },
  "api/VRBuilder.Core.EntityOwners.IEntityCollectionData-1.html": {
    "href": "api/VRBuilder.Core.EntityOwners.IEntityCollectionData-1.html",
    "title": "Interface IEntityCollectionData<TEntity> | VR Builder Documentation",
    "keywords": "Interface IEntityCollectionData<TEntity> Inherited Members IData.Metadata Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public interface IEntityCollectionData<out TEntity> : IEntityCollectionData, IData where TEntity : IEntity Type Parameters Name Description TEntity Methods GetChildren() Declaration IEnumerable<TEntity> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable <TEntity>"
  },
  "api/VRBuilder.Core.EntityOwners.IEntityCollectionDataWithMode.html": {
    "href": "api/VRBuilder.Core.EntityOwners.IEntityCollectionDataWithMode.html",
    "title": "Interface IEntityCollectionDataWithMode | VR Builder Documentation",
    "keywords": "Interface IEntityCollectionDataWithMode Inherited Members IEntityCollectionData.GetChildren() IModeData.Mode IData.Metadata Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public interface IEntityCollectionDataWithMode : IEntityCollectionData, IModeData, IData"
  },
  "api/VRBuilder.Core.EntityOwners.IEntityCollectionDataWithMode-1.html": {
    "href": "api/VRBuilder.Core.EntityOwners.IEntityCollectionDataWithMode-1.html",
    "title": "Interface IEntityCollectionDataWithMode<TEntity> | VR Builder Documentation",
    "keywords": "Interface IEntityCollectionDataWithMode<TEntity> Inherited Members IEntityCollectionData<TEntity>.GetChildren() IModeData.Mode IData.Metadata Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public interface IEntityCollectionDataWithMode<out TEntity> : IEntityCollectionData<TEntity>, IEntityCollectionDataWithMode, IEntityCollectionData, IModeData, IData where TEntity : IEntity Type Parameters Name Description TEntity"
  },
  "api/VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode-1.html": {
    "href": "api/VRBuilder.Core.EntityOwners.IEntityNonLinearSequenceDataWithMode-1.html",
    "title": "Interface IEntityNonLinearSequenceDataWithMode<TEntity> | VR Builder Documentation",
    "keywords": "Interface IEntityNonLinearSequenceDataWithMode<TEntity> Inherited Members IEntitySequenceData<TEntity>.Current IEntityCollectionData<TEntity>.GetChildren() IModeData.Mode IData.Metadata Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public interface IEntityNonLinearSequenceDataWithMode<TEntity> : IEntitySequenceDataWithMode<TEntity>, IEntitySequenceData<TEntity>, IEntityCollectionData<TEntity>, IEntityCollectionData, IEntitySequenceData, IModeData, IData where TEntity : IEntity Type Parameters Name Description TEntity Properties OverrideNext Declaration TEntity OverrideNext { get; set; } Property Value Type Description TEntity"
  },
  "api/VRBuilder.Core.EntityOwners.IEntitySequenceData.html": {
    "href": "api/VRBuilder.Core.EntityOwners.IEntitySequenceData.html",
    "title": "Interface IEntitySequenceData | VR Builder Documentation",
    "keywords": "Interface IEntitySequenceData Inherited Members IData.Metadata Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public interface IEntitySequenceData : IData Properties Current Declaration IEntity Current { get; } Property Value Type Description IEntity"
  },
  "api/VRBuilder.Core.EntityOwners.IEntitySequenceData-1.html": {
    "href": "api/VRBuilder.Core.EntityOwners.IEntitySequenceData-1.html",
    "title": "Interface IEntitySequenceData<TEntity> | VR Builder Documentation",
    "keywords": "Interface IEntitySequenceData<TEntity> Inherited Members IEntityCollectionData<TEntity>.GetChildren() IData.Metadata Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public interface IEntitySequenceData<TEntity> : IEntityCollectionData<TEntity>, IEntityCollectionData, IEntitySequenceData, IData where TEntity : IEntity Type Parameters Name Description TEntity Properties Current Declaration TEntity Current { get; set; } Property Value Type Description TEntity"
  },
  "api/VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode-1.html": {
    "href": "api/VRBuilder.Core.EntityOwners.IEntitySequenceDataWithMode-1.html",
    "title": "Interface IEntitySequenceDataWithMode<TEntity> | VR Builder Documentation",
    "keywords": "Interface IEntitySequenceDataWithMode<TEntity> Inherited Members IEntitySequenceData<TEntity>.Current IEntityCollectionData<TEntity>.GetChildren() IModeData.Mode IData.Metadata Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public interface IEntitySequenceDataWithMode<TEntity> : IEntitySequenceData<TEntity>, IEntityCollectionData<TEntity>, IEntityCollectionData, IEntitySequenceData, IModeData, IData where TEntity : IEntity Type Parameters Name Description TEntity"
  },
  "api/VRBuilder.Core.EntityOwners.ParallelConfigurator-1.html": {
    "href": "api/VRBuilder.Core.EntityOwners.ParallelConfigurator-1.html",
    "title": "Class ParallelConfigurator<TEntity> | VR Builder Documentation",
    "keywords": "Class ParallelConfigurator<TEntity> Inheritance System.Object Configurator < IEntityCollectionDataWithMode <TEntity>> ParallelConfigurator<TEntity> Implements IConfigurator Inherited Members Configurator<IEntityCollectionDataWithMode<TEntity>>.Data Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public class ParallelConfigurator<TEntity> : Configurator<IEntityCollectionDataWithMode<TEntity>>, IConfigurator where TEntity : IEntity Type Parameters Name Description TEntity Constructors ParallelConfigurator(IEntityCollectionDataWithMode<TEntity>) Declaration public ParallelConfigurator(IEntityCollectionDataWithMode<TEntity> data) Parameters Type Name Description IEntityCollectionDataWithMode <TEntity> data Methods Configure(IMode, Stage) Declaration public override void Configure(IMode mode, Stage stage) Parameters Type Name Description IMode mode Stage stage Overrides VRBuilder.Core.Configurator<VRBuilder.Core.EntityOwners.IEntityCollectionDataWithMode<TEntity>>.Configure(VRBuilder.Core.Configuration.Modes.IMode, VRBuilder.Core.Stage) Implements IConfigurator"
  },
  "api/VRBuilder.Core.EntityOwners.SequenceConfigurator-1.html": {
    "href": "api/VRBuilder.Core.EntityOwners.SequenceConfigurator-1.html",
    "title": "Class SequenceConfigurator<TEntity> | VR Builder Documentation",
    "keywords": "Class SequenceConfigurator<TEntity> Inheritance System.Object Configurator < IEntitySequenceData <TEntity>> SequenceConfigurator<TEntity> Implements IConfigurator Inherited Members Configurator<IEntitySequenceData<TEntity>>.Data Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public class SequenceConfigurator<TEntity> : Configurator<IEntitySequenceData<TEntity>>, IConfigurator where TEntity : IEntity Type Parameters Name Description TEntity Constructors SequenceConfigurator(IEntitySequenceData<TEntity>) Declaration public SequenceConfigurator(IEntitySequenceData<TEntity> data) Parameters Type Name Description IEntitySequenceData <TEntity> data Methods Configure(IMode, Stage) Declaration public override void Configure(IMode mode, Stage stage) Parameters Type Name Description IMode mode Stage stage Overrides VRBuilder.Core.Configurator<VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>>.Configure(VRBuilder.Core.Configuration.Modes.IMode, VRBuilder.Core.Stage) Implements IConfigurator"
  },
  "api/VRBuilder.Core.EntityOwners.StopEntityIteratingProcess-1.html": {
    "href": "api/VRBuilder.Core.EntityOwners.StopEntityIteratingProcess-1.html",
    "title": "Class StopEntityIteratingProcess<TEntity> | VR Builder Documentation",
    "keywords": "Class StopEntityIteratingProcess<TEntity> Inheritance System.Object StageProcess < IEntitySequenceData <TEntity>> StopEntityIteratingProcess<TEntity> Implements IStageProcess Inherited Members StageProcess<IEntitySequenceData<TEntity>>.Data StageProcess<IEntitySequenceData<TEntity>>.Outer Namespace : VRBuilder.Core.EntityOwners Assembly : VRBuilder.Core.dll Syntax public class StopEntityIteratingProcess<TEntity> : StageProcess<IEntitySequenceData<TEntity>>, IStageProcess where TEntity : IEntity Type Parameters Name Description TEntity Constructors StopEntityIteratingProcess(IEntitySequenceData<TEntity>) Declaration public StopEntityIteratingProcess(IEntitySequenceData<TEntity> data) Parameters Type Name Description IEntitySequenceData <TEntity> data Methods End() Declaration public override void End() Overrides VRBuilder.Core.StageProcess<VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>>.End() FastForward() Declaration public override void FastForward() Overrides VRBuilder.Core.StageProcess<VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>>.FastForward() Start() Declaration public override void Start() Overrides VRBuilder.Core.StageProcess<VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>>.Start() Update() Declaration public override IEnumerator Update() Returns Type Description System.Collections.IEnumerator Overrides VRBuilder.Core.StageProcess<VRBuilder.Core.EntityOwners.IEntitySequenceData<TEntity>>.Update() Implements IStageProcess"
  },
  "api/VRBuilder.Core.Exceptions.html": {
    "href": "api/VRBuilder.Core.Exceptions.html",
    "title": "Namespace VRBuilder.Core.Exceptions | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Exceptions Classes InvalidStateException MissingEntityException MissingModeException ProcessException PropertyNotFoundException"
  },
  "api/VRBuilder.Core.Exceptions.InvalidStateException.html": {
    "href": "api/VRBuilder.Core.Exceptions.InvalidStateException.html",
    "title": "Class InvalidStateException | VR Builder Documentation",
    "keywords": "Class InvalidStateException Inheritance System.Object ProcessException InvalidStateException Namespace : VRBuilder.Core.Exceptions Assembly : VRBuilder.Core.dll Syntax public class InvalidStateException : ProcessException Constructors InvalidStateException(String) Declaration public InvalidStateException(string message) Parameters Type Name Description System.String message"
  },
  "api/VRBuilder.Core.Exceptions.MissingEntityException.html": {
    "href": "api/VRBuilder.Core.Exceptions.MissingEntityException.html",
    "title": "Class MissingEntityException | VR Builder Documentation",
    "keywords": "Class MissingEntityException Inheritance System.Object ProcessException MissingEntityException Namespace : VRBuilder.Core.Exceptions Assembly : VRBuilder.Core.dll Syntax public class MissingEntityException : ProcessException Constructors MissingEntityException(String) Declaration public MissingEntityException(string message) Parameters Type Name Description System.String message"
  },
  "api/VRBuilder.Core.Exceptions.MissingModeException.html": {
    "href": "api/VRBuilder.Core.Exceptions.MissingModeException.html",
    "title": "Class MissingModeException | VR Builder Documentation",
    "keywords": "Class MissingModeException Inheritance System.Object ProcessException MissingModeException Namespace : VRBuilder.Core.Exceptions Assembly : VRBuilder.Core.dll Syntax public class MissingModeException : ProcessException Constructors MissingModeException() Declaration public MissingModeException() MissingModeException(String) Declaration public MissingModeException(string message) Parameters Type Name Description System.String message MissingModeException(String, Exception) Declaration public MissingModeException(string message, Exception inner) Parameters Type Name Description System.String message System.Exception inner"
  },
  "api/VRBuilder.Core.Exceptions.ProcessException.html": {
    "href": "api/VRBuilder.Core.Exceptions.ProcessException.html",
    "title": "Class ProcessException | VR Builder Documentation",
    "keywords": "Class ProcessException Inheritance System.Object ProcessException InvalidStateException MissingEntityException MissingModeException PropertyNotFoundException Namespace : VRBuilder.Core.Exceptions Assembly : VRBuilder.Core.dll Syntax public class ProcessException : Exception Constructors ProcessException() Declaration public ProcessException() ProcessException(String) Declaration public ProcessException(string message) Parameters Type Name Description System.String message ProcessException(String, Exception) Declaration public ProcessException(string message, Exception inner) Parameters Type Name Description System.String message System.Exception inner"
  },
  "api/VRBuilder.Core.Exceptions.PropertyNotFoundException.html": {
    "href": "api/VRBuilder.Core.Exceptions.PropertyNotFoundException.html",
    "title": "Class PropertyNotFoundException | VR Builder Documentation",
    "keywords": "Class PropertyNotFoundException Inheritance System.Object ProcessException PropertyNotFoundException Namespace : VRBuilder.Core.Exceptions Assembly : VRBuilder.Core.dll Syntax public class PropertyNotFoundException : ProcessException Constructors PropertyNotFoundException(String) Declaration public PropertyNotFoundException(string message) Parameters Type Name Description System.String message PropertyNotFoundException(ISceneObject, Type) Declaration public PropertyNotFoundException(ISceneObject sourceObject, Type missingType) Parameters Type Name Description ISceneObject sourceObject System.Type missingType"
  },
  "api/VRBuilder.Core.FastForwardProcessEventArgs.html": {
    "href": "api/VRBuilder.Core.FastForwardProcessEventArgs.html",
    "title": "Class FastForwardProcessEventArgs | VR Builder Documentation",
    "keywords": "Class FastForwardProcessEventArgs Inheritance System.Object ProcessEventArgs FastForwardProcessEventArgs Inherited Members ProcessEventArgs.Process ProcessEventArgs.Chapter ProcessEventArgs.Step Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class FastForwardProcessEventArgs : ProcessEventArgs Constructors FastForwardProcessEventArgs(ITransition, IProcess) Declaration public FastForwardProcessEventArgs(ITransition transition, IProcess process) Parameters Type Name Description ITransition transition IProcess process Fields CompletedTransition Declaration public readonly ITransition CompletedTransition Field Value Type Description ITransition"
  },
  "api/VRBuilder.Core.Highlighting.AbstractHighlighter.html": {
    "href": "api/VRBuilder.Core.Highlighting.AbstractHighlighter.html",
    "title": "Class AbstractHighlighter | VR Builder Documentation",
    "keywords": "Class AbstractHighlighter Inheritance System.Object AbstractHighlighter DefaultHighlighter Implements IHighlighter Namespace : VRBuilder.Core.Highlighting Assembly : VRBuilder.Core.dll Syntax public abstract class AbstractHighlighter : MonoBehaviour, IHighlighter Constructors AbstractHighlighter() Declaration protected AbstractHighlighter() Fields highlightMeshFilter Declaration protected MeshFilter highlightMeshFilter Field Value Type Description UnityEngine.MeshFilter highlightMeshRenderer Declaration protected MeshRenderer highlightMeshRenderer Field Value Type Description UnityEngine.MeshRenderer renderers Declaration protected Renderer[] renderers Field Value Type Description UnityEngine.Renderer [] Properties IsHighlighting Declaration public abstract bool IsHighlighting { get; } Property Value Type Description System.Boolean Methods CanObjectBeHighlighted() Declaration protected virtual bool CanObjectBeHighlighted() Returns Type Description System.Boolean ClearCacheRenderers() Declaration protected void ClearCacheRenderers() CreateHighlightMaterial(Color) Declaration protected virtual Material CreateHighlightMaterial(Color highlightColor) Parameters Type Name Description UnityEngine.Color highlightColor Returns Type Description UnityEngine.Material CreateHighlightMaterial(Texture) Declaration protected virtual Material CreateHighlightMaterial(Texture mainTexture) Parameters Type Name Description UnityEngine.Texture mainTexture Returns Type Description UnityEngine.Material GetHighlightMaterial() Declaration public abstract Material GetHighlightMaterial() Returns Type Description UnityEngine.Material RefreshCachedRenderers() Declaration protected void RefreshCachedRenderers() StartHighlighting(Material) Declaration public abstract void StartHighlighting(Material highlightMaterial) Parameters Type Name Description UnityEngine.Material highlightMaterial StopHighlighting() Declaration public abstract void StopHighlighting() Implements IHighlighter"
  },
  "api/VRBuilder.Core.Highlighting.DefaultHighlighter.html": {
    "href": "api/VRBuilder.Core.Highlighting.DefaultHighlighter.html",
    "title": "Class DefaultHighlighter | VR Builder Documentation",
    "keywords": "Class DefaultHighlighter Inheritance System.Object AbstractHighlighter DefaultHighlighter InteractableHighlighter Implements IHighlighter Inherited Members AbstractHighlighter.renderers AbstractHighlighter.highlightMeshRenderer AbstractHighlighter.highlightMeshFilter AbstractHighlighter.ClearCacheRenderers() AbstractHighlighter.RefreshCachedRenderers() AbstractHighlighter.CreateHighlightMaterial(Color) AbstractHighlighter.CreateHighlightMaterial(Texture) AbstractHighlighter.CanObjectBeHighlighted() Namespace : VRBuilder.Core.Highlighting Assembly : VRBuilder.Core.dll Syntax public class DefaultHighlighter : AbstractHighlighter, IHighlighter Constructors DefaultHighlighter() Declaration public DefaultHighlighter() Properties IsHighlighting Declaration public override bool IsHighlighting { get; } Property Value Type Description System.Boolean Overrides AbstractHighlighter.IsHighlighting Methods DisableRenders() Declaration protected void DisableRenders() ForceRefreshCachedRenderers() Declaration public void ForceRefreshCachedRenderers() GetHighlightMaterial() Declaration public override Material GetHighlightMaterial() Returns Type Description UnityEngine.Material Overrides AbstractHighlighter.GetHighlightMaterial() OnDisable() Declaration protected virtual void OnDisable() ReenableRenderers() Declaration protected void ReenableRenderers() Reset() Declaration protected virtual void Reset() StartHighlighting(Color, String) Declaration public string StartHighlighting(Color highlightColor, string highlightID) Parameters Type Name Description UnityEngine.Color highlightColor System.String highlightID Returns Type Description System.String StartHighlighting(Material) Declaration public override void StartHighlighting(Material highlightMaterial) Parameters Type Name Description UnityEngine.Material highlightMaterial Overrides AbstractHighlighter.StartHighlighting(Material) StartHighlighting(Material, String) Declaration public string StartHighlighting(Material highlightMaterial, string highlightID) Parameters Type Name Description UnityEngine.Material highlightMaterial System.String highlightID Returns Type Description System.String StartHighlighting(Texture, String) Declaration public string StartHighlighting(Texture highlightTexture, string highlightID) Parameters Type Name Description UnityEngine.Texture highlightTexture System.String highlightID Returns Type Description System.String StopHighlighting() Declaration public override void StopHighlighting() Overrides AbstractHighlighter.StopHighlighting() StopHighlighting(String) Declaration public void StopHighlighting(string highlightID) Parameters Type Name Description System.String highlightID Implements IHighlighter"
  },
  "api/VRBuilder.Core.Highlighting.ExcludeFromHighlightMesh.html": {
    "href": "api/VRBuilder.Core.Highlighting.ExcludeFromHighlightMesh.html",
    "title": "Class ExcludeFromHighlightMesh | VR Builder Documentation",
    "keywords": "Class ExcludeFromHighlightMesh Inheritance System.Object ExcludeFromHighlightMesh Implements IExcludeFromHighlightMesh Namespace : VRBuilder.Core.Highlighting Assembly : VRBuilder.Core.dll Syntax public sealed class ExcludeFromHighlightMesh : MonoBehaviour, IExcludeFromHighlightMesh Constructors ExcludeFromHighlightMesh() Declaration public ExcludeFromHighlightMesh() Implements IExcludeFromHighlightMesh"
  },
  "api/VRBuilder.Core.Highlighting.html": {
    "href": "api/VRBuilder.Core.Highlighting.html",
    "title": "Namespace VRBuilder.Core.Highlighting | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Highlighting Classes AbstractHighlighter DefaultHighlighter ExcludeFromHighlightMesh Interfaces IExcludeFromHighlightMesh IHighlighter"
  },
  "api/VRBuilder.Core.Highlighting.IExcludeFromHighlightMesh.html": {
    "href": "api/VRBuilder.Core.Highlighting.IExcludeFromHighlightMesh.html",
    "title": "Interface IExcludeFromHighlightMesh | VR Builder Documentation",
    "keywords": "Interface IExcludeFromHighlightMesh Namespace : VRBuilder.Core.Highlighting Assembly : VRBuilder.Core.dll Syntax public interface IExcludeFromHighlightMesh"
  },
  "api/VRBuilder.Core.Highlighting.IHighlighter.html": {
    "href": "api/VRBuilder.Core.Highlighting.IHighlighter.html",
    "title": "Interface IHighlighter | VR Builder Documentation",
    "keywords": "Interface IHighlighter Namespace : VRBuilder.Core.Highlighting Assembly : VRBuilder.Core.dll Syntax public interface IHighlighter Properties IsHighlighting Declaration bool IsHighlighting { get; } Property Value Type Description System.Boolean Methods GetHighlightMaterial() Declaration Material GetHighlightMaterial() Returns Type Description UnityEngine.Material StartHighlighting(Material) Declaration void StartHighlighting(Material highlightMaterial) Parameters Type Name Description UnityEngine.Material highlightMaterial StopHighlighting() Declaration void StopHighlighting()"
  },
  "api/VRBuilder.Core.html": {
    "href": "api/VRBuilder.Core.html",
    "title": "Namespace VRBuilder.Core | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core Classes ActivationStateChangedEventArgs Autocompleter<TData> BehaviorCollection BehaviorCollection.EntityData Chapter Chapter.EntityData ChapterMetadata CompletableEntity<TData> CompositeProcess Configurator<TData> EmptyAutocompleter EmptyConfigurator EmptyProcess Entity<TData> FastForwardProcessEventArgs InstantProcess<TData> LifeCycle LockableObjectsCollection Metadata Process Process.EntityData ProcessEventArgs ProcessMetadata ProcessRunner ProcessRunner.ProcessEvents Stage StageProcess<TData> Step Step.EntityData StepMetadata Transition Transition.EntityData TransitionCollection TransitionCollection.EntityData ViewTransform Interfaces IAutocompleter IBehaviorCollection IBehaviorCollectionData IChapter IChapterData IClonable<T> ICompletable ICompletableEntity IData IDataOwner IDataOwner<TData> IDescribable IDescribedData IEntity ILifeCycle IMetadata INamedData IProcess IProcessData IRenameableData IStageProcess IStep IStepChild IStepData ITransition ITransitionCollection ITransitionCollectionData ITransitionData"
  },
  "api/VRBuilder.Core.IAutocompleter.html": {
    "href": "api/VRBuilder.Core.IAutocompleter.html",
    "title": "Interface IAutocompleter | VR Builder Documentation",
    "keywords": "Interface IAutocompleter Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IAutocompleter Methods Complete() Declaration void Complete()"
  },
  "api/VRBuilder.Core.IBehaviorCollection.html": {
    "href": "api/VRBuilder.Core.IBehaviorCollection.html",
    "title": "Interface IBehaviorCollection | VR Builder Documentation",
    "keywords": "Interface IBehaviorCollection Inherited Members IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.GetAbortingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.LifeCycle IEntity.Parent IDataOwner<IBehaviorCollectionData>.Data IClonable<IBehaviorCollection>.Clone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IBehaviorCollection : IStepChild, IEntity, IDataOwner<IBehaviorCollectionData>, IDataOwner, IClonable<IBehaviorCollection>"
  },
  "api/VRBuilder.Core.IBehaviorCollectionData.html": {
    "href": "api/VRBuilder.Core.IBehaviorCollectionData.html",
    "title": "Interface IBehaviorCollectionData | VR Builder Documentation",
    "keywords": "Interface IBehaviorCollectionData Inherited Members IEntityCollectionData<IBehavior>.GetChildren() IModeData.Mode IData.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IBehaviorCollectionData : IEntityCollectionDataWithMode<IBehavior>, IEntityCollectionData<IBehavior>, IEntityCollectionDataWithMode, IEntityCollectionData, IModeData, IData Properties Behaviors Declaration IList<IBehavior> Behaviors { get; set; } Property Value Type Description System.Collections.Generic.IList < IBehavior >"
  },
  "api/VRBuilder.Core.IChapter.html": {
    "href": "api/VRBuilder.Core.IChapter.html",
    "title": "Interface IChapter | VR Builder Documentation",
    "keywords": "Interface IChapter Inherited Members IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.GetAbortingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.LifeCycle IEntity.Parent IDataOwner<IChapterData>.Data IClonable<IChapter>.Clone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IChapter : IEntity, IDataOwner<IChapterData>, IDataOwner, IClonable<IChapter> Properties ChapterMetadata Declaration ChapterMetadata ChapterMetadata { get; } Property Value Type Description ChapterMetadata"
  },
  "api/VRBuilder.Core.IChapterData.html": {
    "href": "api/VRBuilder.Core.IChapterData.html",
    "title": "Interface IChapterData | VR Builder Documentation",
    "keywords": "Interface IChapterData Inherited Members IEntitySequenceData<IStep>.Current IEntityCollectionData<IStep>.GetChildren() IModeData.Mode IRenameableData.SetName(String) INamedData.Name IData.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IChapterData : IEntitySequenceDataWithMode<IStep>, IEntitySequenceData<IStep>, IEntityCollectionData<IStep>, IEntityCollectionData, IEntitySequenceData, IModeData, IRenameableData, INamedData, IData Properties FirstStep Declaration IStep FirstStep { get; set; } Property Value Type Description IStep Steps Declaration IList<IStep> Steps { get; set; } Property Value Type Description System.Collections.Generic.IList < IStep >"
  },
  "api/VRBuilder.Core.IClonable-1.html": {
    "href": "api/VRBuilder.Core.IClonable-1.html",
    "title": "Interface IClonable<T> | VR Builder Documentation",
    "keywords": "Interface IClonable<T> Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IClonable<T> Type Parameters Name Description T Methods Clone() Declaration T Clone() Returns Type Description T"
  },
  "api/VRBuilder.Core.ICompletable.html": {
    "href": "api/VRBuilder.Core.ICompletable.html",
    "title": "Interface ICompletable | VR Builder Documentation",
    "keywords": "Interface ICompletable Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface ICompletable Properties IsCompleted Declaration bool IsCompleted { get; } Property Value Type Description System.Boolean Methods Autocomplete() Declaration void Autocomplete()"
  },
  "api/VRBuilder.Core.ICompletableEntity.html": {
    "href": "api/VRBuilder.Core.ICompletableEntity.html",
    "title": "Interface ICompletableEntity | VR Builder Documentation",
    "keywords": "Interface ICompletableEntity Inherited Members ICompletable.Autocomplete() ICompletable.IsCompleted IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.GetAbortingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.LifeCycle IEntity.Parent Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface ICompletableEntity : ICompletable, IEntity"
  },
  "api/VRBuilder.Core.IData.html": {
    "href": "api/VRBuilder.Core.IData.html",
    "title": "Interface IData | VR Builder Documentation",
    "keywords": "Interface IData Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IData Properties Metadata Declaration Metadata Metadata { get; set; } Property Value Type Description Metadata"
  },
  "api/VRBuilder.Core.IDataOwner.html": {
    "href": "api/VRBuilder.Core.IDataOwner.html",
    "title": "Interface IDataOwner | VR Builder Documentation",
    "keywords": "Interface IDataOwner Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IDataOwner Properties Data Declaration IData Data { get; } Property Value Type Description IData"
  },
  "api/VRBuilder.Core.IDataOwner-1.html": {
    "href": "api/VRBuilder.Core.IDataOwner-1.html",
    "title": "Interface IDataOwner<TData> | VR Builder Documentation",
    "keywords": "Interface IDataOwner<TData> Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IDataOwner<out TData> : IDataOwner Type Parameters Name Description TData Properties Data Declaration TData Data { get; } Property Value Type Description TData"
  },
  "api/VRBuilder.Core.IDescribable.html": {
    "href": "api/VRBuilder.Core.IDescribable.html",
    "title": "Interface IDescribable | VR Builder Documentation",
    "keywords": "Interface IDescribable Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IDescribable Properties Description Declaration string Description { get; set; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Core.IDescribedData.html": {
    "href": "api/VRBuilder.Core.IDescribedData.html",
    "title": "Interface IDescribedData | VR Builder Documentation",
    "keywords": "Interface IDescribedData Inherited Members IData.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IDescribedData : IData Properties Description Declaration string Description { get; set; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Core.IEntity.html": {
    "href": "api/VRBuilder.Core.IEntity.html",
    "title": "Interface IEntity | VR Builder Documentation",
    "keywords": "Interface IEntity Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IEntity Properties LifeCycle Declaration ILifeCycle LifeCycle { get; } Property Value Type Description ILifeCycle Parent Declaration IEntity Parent { get; set; } Property Value Type Description IEntity Methods Configure(IMode) Declaration void Configure(IMode mode) Parameters Type Name Description IMode mode GetAbortingProcess() Declaration IStageProcess GetAbortingProcess() Returns Type Description IStageProcess GetActivatingProcess() Declaration IStageProcess GetActivatingProcess() Returns Type Description IStageProcess GetActiveProcess() Declaration IStageProcess GetActiveProcess() Returns Type Description IStageProcess GetDeactivatingProcess() Declaration IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Update() Declaration void Update()"
  },
  "api/VRBuilder.Core.ILifeCycle.html": {
    "href": "api/VRBuilder.Core.ILifeCycle.html",
    "title": "Interface ILifeCycle | VR Builder Documentation",
    "keywords": "Interface ILifeCycle Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface ILifeCycle Properties Stage Declaration Stage Stage { get; } Property Value Type Description Stage Methods Abort() Declaration void Abort() Activate() Declaration void Activate() Deactivate() Declaration void Deactivate() MarkToFastForward() Declaration void MarkToFastForward() MarkToFastForwardStage(Stage) Declaration void MarkToFastForwardStage(Stage stage) Parameters Type Name Description Stage stage Update() Declaration void Update() Events StageChanged Declaration event EventHandler<ActivationStateChangedEventArgs> StageChanged Event Type Type Description System.EventHandler < ActivationStateChangedEventArgs >"
  },
  "api/VRBuilder.Core.IMetadata.html": {
    "href": "api/VRBuilder.Core.IMetadata.html",
    "title": "Interface IMetadata | VR Builder Documentation",
    "keywords": "Interface IMetadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IMetadata"
  },
  "api/VRBuilder.Core.INamedData.html": {
    "href": "api/VRBuilder.Core.INamedData.html",
    "title": "Interface INamedData | VR Builder Documentation",
    "keywords": "Interface INamedData Inherited Members IData.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface INamedData : IData Properties Name Declaration [HideInProcessInspector] string Name { get; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Core.Input.DefaultInputController.html": {
    "href": "api/VRBuilder.Core.Input.DefaultInputController.html",
    "title": "Class DefaultInputController | VR Builder Documentation",
    "keywords": "Class DefaultInputController Inheritance System.Object UnitySceneSingleton < InputController > InputController DefaultInputController Inherited Members InputController.OnFocused InputController.OnFocusReleased InputController.RegisterEvent(IInputActionListener, Action<InputController.InputEventArgs>) InputController.UnregisterEvent(IInputActionListener, Action<InputController.InputEventArgs>) InputController.Awake() InputController.Reset() InputController.CurrentInputFocus InputController.ListenerDictionary UnitySceneSingleton<InputController>.GetName() UnitySceneSingleton<InputController>.OnDestroy() UnitySceneSingleton<InputController>.ConcreteType UnitySceneSingleton<InputController>.Instance UnitySceneSingleton<InputController>.Exists Namespace : VRBuilder.Core.Input Assembly : VRBuilder.Core.dll Syntax public class DefaultInputController : InputController Constructors DefaultInputController() Declaration public DefaultInputController() Methods Focus(IInputFocus) Declaration public override void Focus(IInputFocus target) Parameters Type Name Description IInputFocus target Overrides InputController.Focus(IInputFocus) OnActionTriggered(InputAction.CallbackContext) Declaration protected virtual void OnActionTriggered(InputAction.CallbackContext context) Parameters Type Name Description UnityEngine.InputSystem.InputAction.CallbackContext context OnDisable() Declaration protected void OnDisable() OnEnable() Declaration protected void OnEnable() ReleaseFocus() Declaration public override void ReleaseFocus() Overrides InputController.ReleaseFocus() Setup() Declaration protected override void Setup() Overrides InputController.Setup()"
  },
  "api/VRBuilder.Core.Input.html": {
    "href": "api/VRBuilder.Core.Input.html",
    "title": "Namespace VRBuilder.Core.Input | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Input Classes DefaultInputController InputActionListener InputController InputController.InputEventArgs InputController.InputFocusEventArgs InputController.ListenerInfo Interfaces IInputActionListener IInputFocus"
  },
  "api/VRBuilder.Core.Input.IInputActionListener.html": {
    "href": "api/VRBuilder.Core.Input.IInputActionListener.html",
    "title": "Interface IInputActionListener | VR Builder Documentation",
    "keywords": "Interface IInputActionListener Namespace : VRBuilder.Core.Input Assembly : VRBuilder.Core.dll Syntax public interface IInputActionListener Properties IgnoreFocus Declaration bool IgnoreFocus { get; } Property Value Type Description System.Boolean Priority Declaration int Priority { get; } Property Value Type Description System.Int32"
  },
  "api/VRBuilder.Core.Input.IInputFocus.html": {
    "href": "api/VRBuilder.Core.Input.IInputFocus.html",
    "title": "Interface IInputFocus | VR Builder Documentation",
    "keywords": "Interface IInputFocus Namespace : VRBuilder.Core.Input Assembly : VRBuilder.Core.dll Syntax public interface IInputFocus Properties ActionMapName Declaration string ActionMapName { get; } Property Value Type Description System.String CanBeFocused Declaration bool CanBeFocused { get; } Property Value Type Description System.Boolean Methods OnFocus() Declaration void OnFocus() OnReleaseFocus() Declaration void OnReleaseFocus()"
  },
  "api/VRBuilder.Core.Input.InputActionListener.html": {
    "href": "api/VRBuilder.Core.Input.InputActionListener.html",
    "title": "Class InputActionListener | VR Builder Documentation",
    "keywords": "Class InputActionListener Inheritance System.Object InputActionListener SpectatorController Implements IInputActionListener Namespace : VRBuilder.Core.Input Assembly : VRBuilder.Core.dll Syntax public abstract class InputActionListener : MonoBehaviour, IInputActionListener Constructors InputActionListener() Declaration protected InputActionListener() Properties IgnoreFocus Declaration public virtual bool IgnoreFocus { get; } Property Value Type Description System.Boolean Priority Declaration public virtual int Priority { get; } Property Value Type Description System.Int32 Methods RegisterInputEvent(Action<InputController.InputEventArgs>) Declaration protected virtual void RegisterInputEvent(Action<InputController.InputEventArgs> action) Parameters Type Name Description System.Action < InputController.InputEventArgs > action UnregisterInputEvent(Action<InputController.InputEventArgs>) Declaration protected virtual void UnregisterInputEvent(Action<InputController.InputEventArgs> action) Parameters Type Name Description System.Action < InputController.InputEventArgs > action Implements IInputActionListener"
  },
  "api/VRBuilder.Core.Input.InputController.html": {
    "href": "api/VRBuilder.Core.Input.InputController.html",
    "title": "Class InputController | VR Builder Documentation",
    "keywords": "Class InputController Inheritance System.Object UnitySceneSingleton < InputController > InputController DefaultInputController Inherited Members UnitySceneSingleton<InputController>.GetName() UnitySceneSingleton<InputController>.OnDestroy() UnitySceneSingleton<InputController>.ConcreteType UnitySceneSingleton<InputController>.Instance UnitySceneSingleton<InputController>.Exists Namespace : VRBuilder.Core.Input Assembly : VRBuilder.Core.dll Syntax public abstract class InputController : UnitySceneSingleton<InputController> Constructors InputController() Declaration protected InputController() Fields OnFocused Declaration public EventHandler<InputController.InputFocusEventArgs> OnFocused Field Value Type Description System.EventHandler < InputController.InputFocusEventArgs > OnFocusReleased Declaration public EventHandler<InputController.InputFocusEventArgs> OnFocusReleased Field Value Type Description System.EventHandler < InputController.InputFocusEventArgs > Properties CurrentInputFocus Declaration protected IInputFocus CurrentInputFocus { get; set; } Property Value Type Description IInputFocus ListenerDictionary Declaration protected Dictionary<string, List<InputController.ListenerInfo>> ListenerDictionary { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Collections.Generic.List < InputController.ListenerInfo >> Methods Awake() Declaration protected override void Awake() Overrides VRBuilder.Unity.UnitySceneSingleton<VRBuilder.Core.Input.InputController>.Awake() Focus(IInputFocus) Declaration public abstract void Focus(IInputFocus target) Parameters Type Name Description IInputFocus target RegisterEvent(IInputActionListener, Action<InputController.InputEventArgs>) Declaration public void RegisterEvent(IInputActionListener listener, Action<InputController.InputEventArgs> action) Parameters Type Name Description IInputActionListener listener System.Action < InputController.InputEventArgs > action ReleaseFocus() Declaration public abstract void ReleaseFocus() Reset() Declaration protected virtual void Reset() Setup() Declaration protected abstract void Setup() UnregisterEvent(IInputActionListener, Action<InputController.InputEventArgs>) Declaration public void UnregisterEvent(IInputActionListener listener, Action<InputController.InputEventArgs> action) Parameters Type Name Description IInputActionListener listener System.Action < InputController.InputEventArgs > action"
  },
  "api/VRBuilder.Core.Input.InputController.InputEventArgs.html": {
    "href": "api/VRBuilder.Core.Input.InputController.InputEventArgs.html",
    "title": "Class InputController.InputEventArgs | VR Builder Documentation",
    "keywords": "Class InputController.InputEventArgs Inheritance System.Object InputController.InputEventArgs Namespace : VRBuilder.Core.Input Assembly : VRBuilder.Core.dll Syntax public class InputEventArgs : EventArgs Constructors InputEventArgs(Object) Declaration public InputEventArgs(object context) Parameters Type Name Description System.Object context Fields Context Declaration public readonly object Context Field Value Type Description System.Object"
  },
  "api/VRBuilder.Core.Input.InputController.InputFocusEventArgs.html": {
    "href": "api/VRBuilder.Core.Input.InputController.InputFocusEventArgs.html",
    "title": "Class InputController.InputFocusEventArgs | VR Builder Documentation",
    "keywords": "Class InputController.InputFocusEventArgs Inheritance System.Object InputController.InputFocusEventArgs Namespace : VRBuilder.Core.Input Assembly : VRBuilder.Core.dll Syntax public class InputFocusEventArgs : EventArgs Constructors InputFocusEventArgs(IInputFocus) Declaration public InputFocusEventArgs(IInputFocus inputFocus) Parameters Type Name Description IInputFocus inputFocus Fields InputFocus Declaration public readonly IInputFocus InputFocus Field Value Type Description IInputFocus"
  },
  "api/VRBuilder.Core.Input.InputController.ListenerInfo.html": {
    "href": "api/VRBuilder.Core.Input.InputController.ListenerInfo.html",
    "title": "Class InputController.ListenerInfo | VR Builder Documentation",
    "keywords": "Class InputController.ListenerInfo Inheritance System.Object InputController.ListenerInfo Namespace : VRBuilder.Core.Input Assembly : VRBuilder.Core.dll Syntax protected sealed class ListenerInfo : ValueType Constructors ListenerInfo(IInputActionListener, Action<InputController.InputEventArgs>) Declaration public ListenerInfo(IInputActionListener actionListener, Action<InputController.InputEventArgs> action) Parameters Type Name Description IInputActionListener actionListener System.Action < InputController.InputEventArgs > action Fields Action Declaration public readonly Action<InputController.InputEventArgs> Action Field Value Type Description System.Action < InputController.InputEventArgs > ActionListener Declaration public readonly IInputActionListener ActionListener Field Value Type Description IInputActionListener"
  },
  "api/VRBuilder.Core.InstantProcess-1.html": {
    "href": "api/VRBuilder.Core.InstantProcess-1.html",
    "title": "Class InstantProcess<TData> | VR Builder Documentation",
    "keywords": "Class InstantProcess<TData> Inheritance System.Object StageProcess <TData> InstantProcess<TData> Implements IStageProcess Inherited Members StageProcess<TData>.Data StageProcess<TData>.Outer Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public abstract class InstantProcess<TData> : StageProcess<TData>, IStageProcess where TData : class, IData Type Parameters Name Description TData Constructors InstantProcess(TData) Declaration protected InstantProcess(TData data) Parameters Type Name Description TData data Methods End() Declaration public override void End() Overrides VRBuilder.Core.StageProcess<TData>.End() FastForward() Declaration public override void FastForward() Overrides VRBuilder.Core.StageProcess<TData>.FastForward() Start() Declaration public abstract override void Start() Overrides VRBuilder.Core.StageProcess<TData>.Start() Update() Declaration public override IEnumerator Update() Returns Type Description System.Collections.IEnumerator Overrides VRBuilder.Core.StageProcess<TData>.Update() Implements IStageProcess"
  },
  "api/VRBuilder.Core.IO.DefaultFileSystem.html": {
    "href": "api/VRBuilder.Core.IO.DefaultFileSystem.html",
    "title": "Class DefaultFileSystem | VR Builder Documentation",
    "keywords": "Class DefaultFileSystem Inheritance System.Object DefaultFileSystem Implements IPlatformFileSystem Namespace : VRBuilder.Core.IO Assembly : VRBuilder.Core.dll Syntax public class DefaultFileSystem : Object, IPlatformFileSystem Constructors DefaultFileSystem(String, String) Declaration public DefaultFileSystem(string streamingAssetsPath, string persistentDataPath) Parameters Type Name Description System.String streamingAssetsPath System.String persistentDataPath Fields PersistentDataPath Declaration protected readonly string PersistentDataPath Field Value Type Description System.String StreamingAssetsPath Declaration protected readonly string StreamingAssetsPath Field Value Type Description System.String Methods BuildPersistentDataPath(String) Declaration protected virtual string BuildPersistentDataPath(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.String Exists(String) Declaration public virtual Task<bool> Exists(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Boolean > FetchStreamingAssetsFilesAt(String, String) Declaration public virtual IEnumerable<string> FetchStreamingAssetsFilesAt(string path, string searchPattern) Parameters Type Name Description System.String path System.String searchPattern Returns Type Description System.Collections.Generic.IEnumerable < System.String > FileExistsInPersistentData(String) Declaration protected virtual Task<bool> FileExistsInPersistentData(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Boolean > FileExistsInStreamingAssets(String) Declaration protected virtual Task<bool> FileExistsInStreamingAssets(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Boolean > NormalizePath(String) Declaration protected virtual string NormalizePath(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.String Read(String) Declaration public virtual Task<byte[]> Read(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Byte []> ReadAllText(String) Declaration public virtual Task<string> ReadAllText(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.String > ReadFromPersistentData(String) Declaration protected virtual Task<byte[]> ReadFromPersistentData(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Byte []> ReadFromStreamingAssets(String) Declaration protected virtual Task<byte[]> ReadFromStreamingAssets(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Byte []> Write(String, Byte[]) Declaration public virtual Task<bool> Write(string filePath, byte[] fileData) Parameters Type Name Description System.String filePath System.Byte [] fileData Returns Type Description System.Threading.Tasks.Task < System.Boolean > Implements IPlatformFileSystem"
  },
  "api/VRBuilder.Core.IO.FileManager.html": {
    "href": "api/VRBuilder.Core.IO.FileManager.html",
    "title": "Class FileManager | VR Builder Documentation",
    "keywords": "Class FileManager Inheritance System.Object FileManager Namespace : VRBuilder.Core.IO Assembly : VRBuilder.Core.dll Syntax public static class FileManager : Object Methods Exists(String) Declaration public static Task<bool> Exists(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Boolean > FetchStreamingAssetsFilesAt(String, String) Declaration public static IEnumerable<string> FetchStreamingAssetsFilesAt(string path, string searchPattern) Parameters Type Name Description System.String path System.String searchPattern Returns Type Description System.Collections.Generic.IEnumerable < System.String > Read(String) Declaration public static Task<byte[]> Read(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Byte []> ReadAllText(String) Declaration public static Task<string> ReadAllText(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.String > Write(String, Byte[]) Declaration public static Task<bool> Write(string filePath, byte[] fileData) Parameters Type Name Description System.String filePath System.Byte [] fileData Returns Type Description System.Threading.Tasks.Task < System.Boolean >"
  },
  "api/VRBuilder.Core.IO.html": {
    "href": "api/VRBuilder.Core.IO.html",
    "title": "Namespace VRBuilder.Core.IO | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.IO Classes DefaultFileSystem FileManager ProcessAssetManifest SingleFileProcessAssetStrategy SplitChaptersProcessAssetStrategy Interfaces IPlatformFileSystem IProcessAssetManifest IProcessAssetStrategy"
  },
  "api/VRBuilder.Core.IO.IPlatformFileSystem.html": {
    "href": "api/VRBuilder.Core.IO.IPlatformFileSystem.html",
    "title": "Interface IPlatformFileSystem | VR Builder Documentation",
    "keywords": "Interface IPlatformFileSystem Namespace : VRBuilder.Core.IO Assembly : VRBuilder.Core.dll Syntax public interface IPlatformFileSystem Methods Exists(String) Declaration Task<bool> Exists(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Boolean > FetchStreamingAssetsFilesAt(String, String) Declaration IEnumerable<string> FetchStreamingAssetsFilesAt(string path, string searchPattern) Parameters Type Name Description System.String path System.String searchPattern Returns Type Description System.Collections.Generic.IEnumerable < System.String > Read(String) Declaration Task<byte[]> Read(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Byte []> ReadAllText(String) Declaration Task<string> ReadAllText(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.String > Write(String, Byte[]) Declaration Task<bool> Write(string filePath, byte[] fileData) Parameters Type Name Description System.String filePath System.Byte [] fileData Returns Type Description System.Threading.Tasks.Task < System.Boolean >"
  },
  "api/VRBuilder.Core.IO.IProcessAssetManifest.html": {
    "href": "api/VRBuilder.Core.IO.IProcessAssetManifest.html",
    "title": "Interface IProcessAssetManifest | VR Builder Documentation",
    "keywords": "Interface IProcessAssetManifest Namespace : VRBuilder.Core.IO Assembly : VRBuilder.Core.dll Syntax public interface IProcessAssetManifest Properties AdditionalFileNames Declaration IEnumerable<string> AdditionalFileNames { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > AssetStrategyTypeName Declaration string AssetStrategyTypeName { get; set; } Property Value Type Description System.String ProcessFileName Declaration string ProcessFileName { get; set; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Core.IO.IProcessAssetStrategy.html": {
    "href": "api/VRBuilder.Core.IO.IProcessAssetStrategy.html",
    "title": "Interface IProcessAssetStrategy | VR Builder Documentation",
    "keywords": "Interface IProcessAssetStrategy Namespace : VRBuilder.Core.IO Assembly : VRBuilder.Core.dll Syntax public interface IProcessAssetStrategy Properties CreateManifest Declaration bool CreateManifest { get; } Property Value Type Description System.Boolean Methods CreateSerializedProcessAssets(IProcess, IProcessSerializer) Declaration IDictionary<string, byte[]> CreateSerializedProcessAssets(IProcess process, IProcessSerializer serializer) Parameters Type Name Description IProcess process IProcessSerializer serializer Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Byte []> GetProcessFromSerializedData(Byte[], IEnumerable<Byte[]>, IProcessSerializer) Declaration IProcess GetProcessFromSerializedData(byte[] processData, IEnumerable<byte[]> additionalData, IProcessSerializer serializer) Parameters Type Name Description System.Byte [] processData System.Collections.Generic.IEnumerable < System.Byte []> additionalData IProcessSerializer serializer Returns Type Description IProcess"
  },
  "api/VRBuilder.Core.IO.ProcessAssetManifest.html": {
    "href": "api/VRBuilder.Core.IO.ProcessAssetManifest.html",
    "title": "Class ProcessAssetManifest | VR Builder Documentation",
    "keywords": "Class ProcessAssetManifest Inheritance System.Object ProcessAssetManifest Implements IProcessAssetManifest Namespace : VRBuilder.Core.IO Assembly : VRBuilder.Core.dll Syntax public class ProcessAssetManifest : Object, IProcessAssetManifest Constructors ProcessAssetManifest() Declaration public ProcessAssetManifest() Properties AdditionalFileNames Declaration public IEnumerable<string> AdditionalFileNames { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > AssetStrategyTypeName Declaration public string AssetStrategyTypeName { get; set; } Property Value Type Description System.String ProcessFileName Declaration public string ProcessFileName { get; set; } Property Value Type Description System.String Implements IProcessAssetManifest"
  },
  "api/VRBuilder.Core.IO.SingleFileProcessAssetStrategy.html": {
    "href": "api/VRBuilder.Core.IO.SingleFileProcessAssetStrategy.html",
    "title": "Class SingleFileProcessAssetStrategy | VR Builder Documentation",
    "keywords": "Class SingleFileProcessAssetStrategy Inheritance System.Object SingleFileProcessAssetStrategy Implements IProcessAssetStrategy Namespace : VRBuilder.Core.IO Assembly : VRBuilder.Core.dll Syntax public class SingleFileProcessAssetStrategy : Object, IProcessAssetStrategy Constructors SingleFileProcessAssetStrategy() Declaration public SingleFileProcessAssetStrategy() Properties CreateManifest Declaration public bool CreateManifest { get; } Property Value Type Description System.Boolean Methods CreateSerializedProcessAssets(IProcess, IProcessSerializer) Declaration public IDictionary<string, byte[]> CreateSerializedProcessAssets(IProcess process, IProcessSerializer serializer) Parameters Type Name Description IProcess process IProcessSerializer serializer Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Byte []> GetProcessFromSerializedData(Byte[], IEnumerable<Byte[]>, IProcessSerializer) Declaration public IProcess GetProcessFromSerializedData(byte[] processData, IEnumerable<byte[]> additionalData, IProcessSerializer serializer) Parameters Type Name Description System.Byte [] processData System.Collections.Generic.IEnumerable < System.Byte []> additionalData IProcessSerializer serializer Returns Type Description IProcess Implements IProcessAssetStrategy"
  },
  "api/VRBuilder.Core.IO.SplitChaptersProcessAssetStrategy.html": {
    "href": "api/VRBuilder.Core.IO.SplitChaptersProcessAssetStrategy.html",
    "title": "Class SplitChaptersProcessAssetStrategy | VR Builder Documentation",
    "keywords": "Class SplitChaptersProcessAssetStrategy Inheritance System.Object SplitChaptersProcessAssetStrategy Implements IProcessAssetStrategy Namespace : VRBuilder.Core.IO Assembly : VRBuilder.Core.dll Syntax public class SplitChaptersProcessAssetStrategy : Object, IProcessAssetStrategy Constructors SplitChaptersProcessAssetStrategy() Declaration public SplitChaptersProcessAssetStrategy() Properties CreateManifest Declaration public bool CreateManifest { get; } Property Value Type Description System.Boolean Methods CreateSerializedProcessAssets(IProcess, IProcessSerializer) Declaration public IDictionary<string, byte[]> CreateSerializedProcessAssets(IProcess process, IProcessSerializer serializer) Parameters Type Name Description IProcess process IProcessSerializer serializer Returns Type Description System.Collections.Generic.IDictionary < System.String , System.Byte []> GetProcessFromSerializedData(Byte[], IEnumerable<Byte[]>, IProcessSerializer) Declaration public IProcess GetProcessFromSerializedData(byte[] processData, IEnumerable<byte[]> additionalData, IProcessSerializer serializer) Parameters Type Name Description System.Byte [] processData System.Collections.Generic.IEnumerable < System.Byte []> additionalData IProcessSerializer serializer Returns Type Description IProcess Implements IProcessAssetStrategy"
  },
  "api/VRBuilder.Core.IProcess.html": {
    "href": "api/VRBuilder.Core.IProcess.html",
    "title": "Interface IProcess | VR Builder Documentation",
    "keywords": "Interface IProcess Inherited Members IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.GetAbortingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.LifeCycle IEntity.Parent IDataOwner<IProcessData>.Data IClonable<IProcess>.Clone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IProcess : IEntity, IDataOwner<IProcessData>, IDataOwner, IClonable<IProcess> Properties ProcessMetadata Declaration ProcessMetadata ProcessMetadata { get; } Property Value Type Description ProcessMetadata"
  },
  "api/VRBuilder.Core.IProcessData.html": {
    "href": "api/VRBuilder.Core.IProcessData.html",
    "title": "Interface IProcessData | VR Builder Documentation",
    "keywords": "Interface IProcessData Inherited Members IEntityNonLinearSequenceDataWithMode<IChapter>.OverrideNext IEntitySequenceData<IChapter>.Current IEntityCollectionData<IChapter>.GetChildren() IModeData.Mode IRenameableData.SetName(String) INamedData.Name IData.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IProcessData : IEntityNonLinearSequenceDataWithMode<IChapter>, IEntitySequenceDataWithMode<IChapter>, IEntitySequenceData<IChapter>, IEntityCollectionData<IChapter>, IEntityCollectionData, IEntitySequenceData, IModeData, IRenameableData, INamedData, IData Properties Chapters Declaration IList<IChapter> Chapters { get; set; } Property Value Type Description System.Collections.Generic.IList < IChapter > FirstChapter Declaration IChapter FirstChapter { get; } Property Value Type Description IChapter"
  },
  "api/VRBuilder.Core.IRenameableData.html": {
    "href": "api/VRBuilder.Core.IRenameableData.html",
    "title": "Interface IRenameableData | VR Builder Documentation",
    "keywords": "Interface IRenameableData Inherited Members INamedData.Name IData.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IRenameableData : INamedData, IData Methods SetName(String) Declaration void SetName(string name) Parameters Type Name Description System.String name"
  },
  "api/VRBuilder.Core.IStageProcess.html": {
    "href": "api/VRBuilder.Core.IStageProcess.html",
    "title": "Interface IStageProcess | VR Builder Documentation",
    "keywords": "Interface IStageProcess Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IStageProcess Methods End() Declaration void End() FastForward() Declaration void FastForward() Start() Declaration void Start() Update() Declaration IEnumerator Update() Returns Type Description System.Collections.IEnumerator"
  },
  "api/VRBuilder.Core.IStep.html": {
    "href": "api/VRBuilder.Core.IStep.html",
    "title": "Interface IStep | VR Builder Documentation",
    "keywords": "Interface IStep Inherited Members IDataOwner<IStepData>.Data IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.GetAbortingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.LifeCycle IEntity.Parent IClonable<IStep>.Clone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IStep : IDataOwner<IStepData>, IDataOwner, IEntity, IClonable<IStep> Properties StepMetadata Declaration StepMetadata StepMetadata { get; set; } Property Value Type Description StepMetadata"
  },
  "api/VRBuilder.Core.IStepChild.html": {
    "href": "api/VRBuilder.Core.IStepChild.html",
    "title": "Interface IStepChild | VR Builder Documentation",
    "keywords": "Interface IStepChild Inherited Members IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.GetAbortingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.LifeCycle IEntity.Parent Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IStepChild : IEntity"
  },
  "api/VRBuilder.Core.IStepData.html": {
    "href": "api/VRBuilder.Core.IStepData.html",
    "title": "Interface IStepData | VR Builder Documentation",
    "keywords": "Interface IStepData Inherited Members IRenameableData.SetName(String) INamedData.Name IDescribedData.Description IEntitySequenceData<IStepChild>.Current IEntityCollectionData<IStepChild>.GetChildren() IModeData.Mode IData.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface IStepData : IRenameableData, INamedData, IDescribedData, IEntitySequenceDataWithMode<IStepChild>, IEntitySequenceData<IStepChild>, IEntityCollectionData<IStepChild>, IEntityCollectionData, IEntitySequenceData, IModeData, IData Properties Behaviors Declaration IBehaviorCollection Behaviors { get; set; } Property Value Type Description IBehaviorCollection Transitions Declaration ITransitionCollection Transitions { get; set; } Property Value Type Description ITransitionCollection"
  },
  "api/VRBuilder.Core.ITransition.html": {
    "href": "api/VRBuilder.Core.ITransition.html",
    "title": "Interface ITransition | VR Builder Documentation",
    "keywords": "Interface ITransition Inherited Members IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.GetAbortingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.LifeCycle IEntity.Parent ICompletable.Autocomplete() ICompletable.IsCompleted IDataOwner<ITransitionData>.Data IClonable<ITransition>.Clone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface ITransition : IEntity, ICompletable, IDataOwner<ITransitionData>, IDataOwner, IClonable<ITransition>"
  },
  "api/VRBuilder.Core.ITransitionCollection.html": {
    "href": "api/VRBuilder.Core.ITransitionCollection.html",
    "title": "Interface ITransitionCollection | VR Builder Documentation",
    "keywords": "Interface ITransitionCollection Inherited Members IEntity.GetActivatingProcess() IEntity.GetActiveProcess() IEntity.GetDeactivatingProcess() IEntity.GetAbortingProcess() IEntity.Configure(IMode) IEntity.Update() IEntity.LifeCycle IEntity.Parent IDataOwner<ITransitionCollectionData>.Data IClonable<ITransitionCollection>.Clone() Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface ITransitionCollection : IStepChild, IEntity, IDataOwner<ITransitionCollectionData>, IDataOwner, IClonable<ITransitionCollection>"
  },
  "api/VRBuilder.Core.ITransitionCollectionData.html": {
    "href": "api/VRBuilder.Core.ITransitionCollectionData.html",
    "title": "Interface ITransitionCollectionData | VR Builder Documentation",
    "keywords": "Interface ITransitionCollectionData Inherited Members IEntityCollectionData<ITransition>.GetChildren() IModeData.Mode IData.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface ITransitionCollectionData : IEntityCollectionDataWithMode<ITransition>, IEntityCollectionData<ITransition>, IEntityCollectionDataWithMode, IEntityCollectionData, IModeData, IData Properties Transitions Declaration IList<ITransition> Transitions { get; set; } Property Value Type Description System.Collections.Generic.IList < ITransition >"
  },
  "api/VRBuilder.Core.ITransitionData.html": {
    "href": "api/VRBuilder.Core.ITransitionData.html",
    "title": "Interface ITransitionData | VR Builder Documentation",
    "keywords": "Interface ITransitionData Inherited Members IEntityCollectionData<ICondition>.GetChildren() IModeData.Mode ICompletableData.IsCompleted INamedData.Name IData.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public interface ITransitionData : IEntityCollectionDataWithMode<ICondition>, IEntityCollectionData<ICondition>, IEntityCollectionDataWithMode, IEntityCollectionData, IModeData, ICompletableData, INamedData, IData Properties Conditions Declaration IList<ICondition> Conditions { get; set; } Property Value Type Description System.Collections.Generic.IList < ICondition > TargetStep Declaration IStep TargetStep { get; set; } Property Value Type Description IStep"
  },
  "api/VRBuilder.Core.LifeCycle.html": {
    "href": "api/VRBuilder.Core.LifeCycle.html",
    "title": "Class LifeCycle | VR Builder Documentation",
    "keywords": "Class LifeCycle Inheritance System.Object LifeCycle Implements ILifeCycle Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public sealed class LifeCycle : Object, ILifeCycle Constructors LifeCycle(IEntity) Declaration public LifeCycle(IEntity owner) Parameters Type Name Description IEntity owner Properties Stage Declaration public Stage Stage { get; } Property Value Type Description Stage Methods Abort() Declaration public void Abort() Activate() Declaration public void Activate() Deactivate() Declaration public void Deactivate() MarkToFastForward() Declaration public void MarkToFastForward() MarkToFastForwardStage(Stage) Declaration public void MarkToFastForwardStage(Stage stage) Parameters Type Name Description Stage stage Update() Declaration public void Update() Events StageChanged Declaration public event EventHandler<ActivationStateChangedEventArgs> StageChanged Event Type Type Description System.EventHandler < ActivationStateChangedEventArgs > Implements ILifeCycle"
  },
  "api/VRBuilder.Core.Localization.html": {
    "href": "api/VRBuilder.Core.Localization.html",
    "title": "Namespace VRBuilder.Core.Localization | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Localization Classes LanguageUtils Interfaces ILocalizedContent"
  },
  "api/VRBuilder.Core.Localization.ILocalizedContent.html": {
    "href": "api/VRBuilder.Core.Localization.ILocalizedContent.html",
    "title": "Interface ILocalizedContent | VR Builder Documentation",
    "keywords": "Interface ILocalizedContent Namespace : VRBuilder.Core.Localization Assembly : VRBuilder.Core.dll Syntax public interface ILocalizedContent Methods GetLocalizedContent() Declaration string GetLocalizedContent() Returns Type Description System.String"
  },
  "api/VRBuilder.Core.Localization.LanguageUtils.html": {
    "href": "api/VRBuilder.Core.Localization.LanguageUtils.html",
    "title": "Class LanguageUtils | VR Builder Documentation",
    "keywords": "Class LanguageUtils Inheritance System.Object LanguageUtils Namespace : VRBuilder.Core.Localization Assembly : VRBuilder.Core.dll Syntax public static class LanguageUtils : Object Methods GetLocalizedChapterName(IChapter, String, Locale) Declaration public static string GetLocalizedChapterName(IChapter chapter, string localizationTable, Locale locale) Parameters Type Name Description IChapter chapter System.String localizationTable UnityEngine.Localization.Locale locale Returns Type Description System.String GetLocalizedStepName(IStep, String, Locale) Declaration public static string GetLocalizedStepName(IStep step, string localizationTable, Locale locale) Parameters Type Name Description IStep step System.String localizationTable UnityEngine.Localization.Locale locale Returns Type Description System.String GetLocalizedString(String, String) Declaration public static string GetLocalizedString(string localizationKey, string localizationTable) Parameters Type Name Description System.String localizationKey System.String localizationTable Returns Type Description System.String GetLocalizedString(String, String, Locale) Declaration public static string GetLocalizedString(string localizationKey, string localizationTable, Locale locale) Parameters Type Name Description System.String localizationKey System.String localizationTable UnityEngine.Localization.Locale locale Returns Type Description System.String TryConvertToTwoLetterIsoCode(String, out String) Declaration public static bool TryConvertToTwoLetterIsoCode(this string language, out string result) Parameters Type Name Description System.String language System.String result Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Core.LockableObjectsCollection.html": {
    "href": "api/VRBuilder.Core.LockableObjectsCollection.html",
    "title": "Class LockableObjectsCollection | VR Builder Documentation",
    "keywords": "Class LockableObjectsCollection Inheritance System.Object LockableObjectsCollection Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class LockableObjectsCollection : Object Constructors LockableObjectsCollection(Step.EntityData) Declaration public LockableObjectsCollection(Step.EntityData entityData) Parameters Type Name Description Step.EntityData entityData Properties SceneObjects Declaration public List<ISceneObject> SceneObjects { get; set; } Property Value Type Description System.Collections.Generic.List < ISceneObject > TagsToUnlock Declaration public IEnumerable<Guid> TagsToUnlock { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Guid > Methods Add(LockableProperty) Declaration public void Add(LockableProperty property) Parameters Type Name Description LockableProperty property AddGroup(Guid) Declaration public void AddGroup(Guid tag) Parameters Type Name Description System.Guid tag AddPropertyToGroup(Guid, Type) Declaration public void AddPropertyToGroup(Guid tag, Type property) Parameters Type Name Description System.Guid tag System.Type property AddSceneObject(ISceneObject) Declaration public void AddSceneObject(ISceneObject sceneObject) Parameters Type Name Description ISceneObject sceneObject IsInAutoUnlockList(LockableProperty) Declaration public bool IsInAutoUnlockList(LockableProperty property) Parameters Type Name Description LockableProperty property Returns Type Description System.Boolean IsInManualUnlockList(LockableProperty) Declaration public bool IsInManualUnlockList(LockableProperty property) Parameters Type Name Description LockableProperty property Returns Type Description System.Boolean IsPropertyEnabledForGroup(Guid, Type) Declaration public bool IsPropertyEnabledForGroup(Guid tag, Type property) Parameters Type Name Description System.Guid tag System.Type property Returns Type Description System.Boolean IsUsedInAutoUnlock(ISceneObject) Declaration public bool IsUsedInAutoUnlock(ISceneObject sceneObject) Parameters Type Name Description ISceneObject sceneObject Returns Type Description System.Boolean Remove(LockableProperty) Declaration public void Remove(LockableProperty property) Parameters Type Name Description LockableProperty property RemoveGroup(Guid) Declaration public void RemoveGroup(Guid tag) Parameters Type Name Description System.Guid tag RemovePropertyFromGroup(Guid, Type) Declaration public void RemovePropertyFromGroup(Guid tag, Type property) Parameters Type Name Description System.Guid tag System.Type property RemoveSceneObject(ISceneObject) Declaration public void RemoveSceneObject(ISceneObject sceneObject) Parameters Type Name Description ISceneObject sceneObject"
  },
  "api/VRBuilder.Core.Metadata.html": {
    "href": "api/VRBuilder.Core.Metadata.html",
    "title": "Class Metadata | VR Builder Documentation",
    "keywords": "Class Metadata Inheritance System.Object Metadata Implements IMetadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class Metadata : Object, IMetadata Constructors Metadata() Declaration public Metadata() Methods Clear() Declaration public void Clear() GetMetadata(MemberInfo) Declaration public Dictionary<string, object> GetMetadata(MemberInfo member) Parameters Type Name Description System.Reflection.MemberInfo member Returns Type Description System.Collections.Generic.Dictionary < System.String , System.Object > GetMetadata(MemberInfo, MetadataAttribute) Declaration public object GetMetadata(MemberInfo member, MetadataAttribute attribute) Parameters Type Name Description System.Reflection.MemberInfo member MetadataAttribute attribute Returns Type Description System.Object SetMetadata(MemberInfo, String, Object) Declaration public void SetMetadata(MemberInfo member, string attributeName, object data) Parameters Type Name Description System.Reflection.MemberInfo member System.String attributeName System.Object data Implements IMetadata"
  },
  "api/VRBuilder.Core.Process.EntityData.html": {
    "href": "api/VRBuilder.Core.Process.EntityData.html",
    "title": "Class Process.EntityData | VR Builder Documentation",
    "keywords": "Class Process.EntityData Inheritance System.Object EntityCollectionData < IChapter > Process.EntityData Implements IProcessData IEntityNonLinearSequenceDataWithMode < IChapter > IEntitySequenceDataWithMode < IChapter > IEntitySequenceData < IChapter > IEntityCollectionData < IChapter > IEntityCollectionData IEntitySequenceData IModeData IRenameableData INamedData IData Inherited Members EntityCollectionData<IChapter>.IEntityCollectionData.GetChildren() EntityCollectionData<IChapter>.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class EntityData : EntityCollectionData<IChapter>, IProcessData, IEntityNonLinearSequenceDataWithMode<IChapter>, IEntitySequenceDataWithMode<IChapter>, IEntitySequenceData<IChapter>, IEntityCollectionData<IChapter>, IEntityCollectionData, IEntitySequenceData, IModeData, IRenameableData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties Chapters Declaration public IList<IChapter> Chapters { get; set; } Property Value Type Description System.Collections.Generic.IList < IChapter > Current Declaration public IChapter Current { get; set; } Property Value Type Description IChapter FirstChapter Declaration public IChapter FirstChapter { get; } Property Value Type Description IChapter Mode Declaration public IMode Mode { get; set; } Property Value Type Description IMode Name Declaration [HideInProcessInspector] public string Name { get; set; } Property Value Type Description System.String OverrideNext Declaration public IChapter OverrideNext { get; set; } Property Value Type Description IChapter Methods GetChildren() Declaration public override IEnumerable<IChapter> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < IChapter > Overrides VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IChapter>.GetChildren() SetName(String) Declaration public void SetName(string name) Parameters Type Name Description System.String name Explicit Interface Implementations IEntitySequenceData.Current Declaration IEntity IEntitySequenceData.Current { get; } Returns Type Description IEntity Implements IProcessData IEntityNonLinearSequenceDataWithMode<TEntity> IEntitySequenceDataWithMode<TEntity> IEntitySequenceData<TEntity> IEntityCollectionData<TEntity> IEntityCollectionData IEntitySequenceData IModeData IRenameableData INamedData IData"
  },
  "api/VRBuilder.Core.Process.html": {
    "href": "api/VRBuilder.Core.Process.html",
    "title": "Class Process | VR Builder Documentation",
    "keywords": "Class Process Inheritance System.Object Entity < Process.EntityData > Process Implements IDataOwner < Process.EntityData > IProcess IEntity IDataOwner < IProcessData > IDataOwner IClonable < IProcess > Inherited Members Entity<Process.EntityData>.GetActiveProcess() Entity<Process.EntityData>.GetConfigurator() Entity<Process.EntityData>.Configure(IMode) Entity<Process.EntityData>.Update() Entity<Process.EntityData>.Data Entity<Process.EntityData>.IDataOwner.Data Entity<Process.EntityData>.LifeCycle Entity<Process.EntityData>.Parent Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class Process : Entity<Process.EntityData>, IDataOwner<Process.EntityData>, IProcess, IEntity, IDataOwner<IProcessData>, IDataOwner, IClonable<IProcess> Constructors Process() Declaration protected Process() Process(String, IEnumerable<IChapter>) Declaration public Process(string name, IEnumerable<IChapter> chapters) Parameters Type Name Description System.String name System.Collections.Generic.IEnumerable < IChapter > chapters Process(String, IChapter) Declaration public Process(string name, IChapter chapter) Parameters Type Name Description System.String name IChapter chapter Properties CurrentStep Declaration public IStep CurrentStep { get; protected set; } Property Value Type Description IStep ProcessMetadata Declaration public ProcessMetadata ProcessMetadata { get; set; } Property Value Type Description ProcessMetadata Methods Clone() Declaration public IProcess Clone() Returns Type Description IProcess GetAbortingProcess() Declaration public override IStageProcess GetAbortingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Process.EntityData>.GetAbortingProcess() GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Process.EntityData>.GetActivatingProcess() GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Process.EntityData>.GetDeactivatingProcess() Explicit Interface Implementations IDataOwner<IProcessData>.Data Declaration IProcessData IDataOwner<IProcessData>.Data { get; } Returns Type Description IProcessData Implements IDataOwner<TData> IProcess IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.ProcessEventArgs.html": {
    "href": "api/VRBuilder.Core.ProcessEventArgs.html",
    "title": "Class ProcessEventArgs | VR Builder Documentation",
    "keywords": "Class ProcessEventArgs Inheritance System.Object ProcessEventArgs FastForwardProcessEventArgs Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class ProcessEventArgs : EventArgs Constructors ProcessEventArgs(IProcess) Declaration public ProcessEventArgs(IProcess process) Parameters Type Name Description IProcess process Fields Chapter Declaration public readonly IChapter Chapter Field Value Type Description IChapter Process Declaration public readonly IProcess Process Field Value Type Description IProcess Step Declaration public readonly IStep Step Field Value Type Description IStep"
  },
  "api/VRBuilder.Core.ProcessMetadata.html": {
    "href": "api/VRBuilder.Core.ProcessMetadata.html",
    "title": "Class ProcessMetadata | VR Builder Documentation",
    "keywords": "Class ProcessMetadata Inheritance System.Object ProcessMetadata Implements IMetadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class ProcessMetadata : Object, IMetadata Constructors ProcessMetadata() Declaration public ProcessMetadata() Properties Guid Declaration public Guid Guid { get; set; } Property Value Type Description System.Guid StringLocalizationTable Declaration public string StringLocalizationTable { get; set; } Property Value Type Description System.String Implements IMetadata"
  },
  "api/VRBuilder.Core.ProcessRunner.html": {
    "href": "api/VRBuilder.Core.ProcessRunner.html",
    "title": "Class ProcessRunner | VR Builder Documentation",
    "keywords": "Class ProcessRunner Inheritance System.Object ProcessRunner Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public static class ProcessRunner : Object Properties Current Declaration public static IProcess Current { get; } Property Value Type Description IProcess Events Declaration public static ProcessRunner.ProcessEvents Events { get; } Property Value Type Description ProcessRunner.ProcessEvents IsRunning Declaration public static bool IsRunning { get; } Property Value Type Description System.Boolean Methods Initialize(IProcess) Declaration public static void Initialize(IProcess process) Parameters Type Name Description IProcess process Run() Declaration public static void Run() SetNextChapter(IChapter) Declaration public static void SetNextChapter(IChapter chapter) Parameters Type Name Description IChapter chapter SkipChapters(Int32) Declaration public static void SkipChapters(int numberOfChapters) Parameters Type Name Description System.Int32 numberOfChapters SkipCurrentChapter() Declaration public static void SkipCurrentChapter() SkipStep(ITransition) Declaration public static void SkipStep(ITransition transition) Parameters Type Name Description ITransition transition"
  },
  "api/VRBuilder.Core.ProcessRunner.ProcessEvents.html": {
    "href": "api/VRBuilder.Core.ProcessRunner.ProcessEvents.html",
    "title": "Class ProcessRunner.ProcessEvents | VR Builder Documentation",
    "keywords": "Class ProcessRunner.ProcessEvents Inheritance System.Object ProcessRunner.ProcessEvents Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class ProcessEvents : Object Constructors ProcessEvents() Declaration public ProcessEvents() Fields ChapterStarted Declaration public EventHandler<ProcessEventArgs> ChapterStarted Field Value Type Description System.EventHandler < ProcessEventArgs > FastForwardStep Declaration public EventHandler<FastForwardProcessEventArgs> FastForwardStep Field Value Type Description System.EventHandler < FastForwardProcessEventArgs > ProcessFinished Declaration public EventHandler<ProcessEventArgs> ProcessFinished Field Value Type Description System.EventHandler < ProcessEventArgs > ProcessInitialized Declaration public EventHandler<ProcessEventArgs> ProcessInitialized Field Value Type Description System.EventHandler < ProcessEventArgs > ProcessSetup Declaration public EventHandler<ProcessEventArgs> ProcessSetup Field Value Type Description System.EventHandler < ProcessEventArgs > ProcessStarted Declaration public EventHandler<ProcessEventArgs> ProcessStarted Field Value Type Description System.EventHandler < ProcessEventArgs > StepStarted Declaration public EventHandler<ProcessEventArgs> StepStarted Field Value Type Description System.EventHandler < ProcessEventArgs >"
  },
  "api/VRBuilder.Core.ProcessValidation.html": {
    "href": "api/VRBuilder.Core.ProcessValidation.html",
    "title": "Namespace VRBuilder.Core.ProcessValidation | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.ProcessValidation Classes ReportEntry ValidationErrorLevel Interfaces IAttributeValidator"
  },
  "api/VRBuilder.Core.ProcessValidation.IAttributeValidator.html": {
    "href": "api/VRBuilder.Core.ProcessValidation.IAttributeValidator.html",
    "title": "Interface IAttributeValidator | VR Builder Documentation",
    "keywords": "Interface IAttributeValidator Namespace : VRBuilder.Core.ProcessValidation Assembly : VRBuilder.Core.dll Syntax public interface IAttributeValidator Properties ErrorLevel Declaration ValidationErrorLevel ErrorLevel { get; } Property Value Type Description ValidationErrorLevel Methods Validate(Object) Declaration List<ReportEntry> Validate(object value) Parameters Type Name Description System.Object value Returns Type Description System.Collections.Generic.List < ReportEntry >"
  },
  "api/VRBuilder.Core.ProcessValidation.ReportEntry.html": {
    "href": "api/VRBuilder.Core.ProcessValidation.ReportEntry.html",
    "title": "Class ReportEntry | VR Builder Documentation",
    "keywords": "Class ReportEntry Inheritance System.Object ReportEntry EditorReportEntry Namespace : VRBuilder.Core.ProcessValidation Assembly : VRBuilder.Core.dll Syntax public class ReportEntry : Object Constructors ReportEntry(Int32, String, ValidationErrorLevel) Declaration public ReportEntry(int code, string message, ValidationErrorLevel errorLevel) Parameters Type Name Description System.Int32 code System.String message ValidationErrorLevel errorLevel ReportEntry(ReportEntry) Declaration protected ReportEntry(ReportEntry entry) Parameters Type Name Description ReportEntry entry Fields Code Declaration public readonly int Code Field Value Type Description System.Int32 ErrorLevel Declaration public readonly ValidationErrorLevel ErrorLevel Field Value Type Description ValidationErrorLevel Message Declaration public readonly string Message Field Value Type Description System.String"
  },
  "api/VRBuilder.Core.ProcessValidation.ValidationErrorLevel.html": {
    "href": "api/VRBuilder.Core.ProcessValidation.ValidationErrorLevel.html",
    "title": "Class ValidationErrorLevel | VR Builder Documentation",
    "keywords": "Class ValidationErrorLevel Inheritance System.Object ValidationErrorLevel Namespace : VRBuilder.Core.ProcessValidation Assembly : VRBuilder.Core.dll Syntax public sealed class ValidationErrorLevel : Enum Fields ERROR Declaration public const ValidationErrorLevel ERROR Field Value Type Description ValidationErrorLevel FATAL Declaration public const ValidationErrorLevel FATAL Field Value Type Description ValidationErrorLevel HINT Declaration public const ValidationErrorLevel HINT Field Value Type Description ValidationErrorLevel value__ Declaration public int value__ Field Value Type Description System.Int32 WARNING Declaration public const ValidationErrorLevel WARNING Field Value Type Description ValidationErrorLevel"
  },
  "api/VRBuilder.Core.Properties.BaseHighlightProperty.HighlightEventArgs.html": {
    "href": "api/VRBuilder.Core.Properties.BaseHighlightProperty.HighlightEventArgs.html",
    "title": "Class BaseHighlightProperty.HighlightEventArgs | VR Builder Documentation",
    "keywords": "Class BaseHighlightProperty.HighlightEventArgs Inheritance System.Object BaseHighlightProperty.HighlightEventArgs Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class HighlightEventArgs : EventArgs Constructors HighlightEventArgs() Declaration public HighlightEventArgs()"
  },
  "api/VRBuilder.Core.Properties.BaseHighlightProperty.html": {
    "href": "api/VRBuilder.Core.Properties.BaseHighlightProperty.html",
    "title": "Class BaseHighlightProperty | VR Builder Documentation",
    "keywords": "Class BaseHighlightProperty Inheritance System.Object ProcessSceneObjectProperty BaseHighlightProperty EnableHighlightProperty HighlightProperty Implements IHighlightProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public abstract class BaseHighlightProperty : ProcessSceneObjectProperty, IHighlightProperty, ISceneObjectProperty Constructors BaseHighlightProperty() Declaration protected BaseHighlightProperty() Properties HighlightEnded Declaration public UnityEvent<HighlightPropertyEventArgs> HighlightEnded { get; } Property Value Type Description UnityEngine.Events.UnityEvent < HighlightPropertyEventArgs > HighlightStarted Declaration public UnityEvent<HighlightPropertyEventArgs> HighlightStarted { get; } Property Value Type Description UnityEngine.Events.UnityEvent < HighlightPropertyEventArgs > IsHighlighted Declaration public bool IsHighlighted { get; protected set; } Property Value Type Description System.Boolean Methods EmitHighlightEvent(HighlightPropertyEventArgs) Declaration public void EmitHighlightEvent(HighlightPropertyEventArgs args) Parameters Type Name Description HighlightPropertyEventArgs args EmitUnhighlightEvent(HighlightPropertyEventArgs) Declaration public void EmitUnhighlightEvent(HighlightPropertyEventArgs args) Parameters Type Name Description HighlightPropertyEventArgs args Highlight(Color) Declaration public abstract void Highlight(Color highlightColor) Parameters Type Name Description UnityEngine.Color highlightColor Unhighlight() Declaration public abstract void Unhighlight() Implements IHighlightProperty ISceneObjectProperty"
  },
  "api/VRBuilder.Core.Properties.BezierSplinePathProperty.html": {
    "href": "api/VRBuilder.Core.Properties.BezierSplinePathProperty.html",
    "title": "Class BezierSplinePathProperty | VR Builder Documentation",
    "keywords": "Class BezierSplinePathProperty Inheritance System.Object ProcessSceneObjectProperty BezierSplinePathProperty Implements IPathProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class BezierSplinePathProperty : ProcessSceneObjectProperty, IPathProperty, ISceneObjectProperty Constructors BezierSplinePathProperty() Declaration public BezierSplinePathProperty() Methods GetDirection(Single) Declaration public Vector3 GetDirection(float t) Parameters Type Name Description System.Single t Returns Type Description UnityEngine.Vector3 GetPoint(Single) Declaration public Vector3 GetPoint(float t) Parameters Type Name Description System.Single t Returns Type Description UnityEngine.Vector3 OnEnable() Declaration protected override void OnEnable() Overrides ProcessSceneObjectProperty.OnEnable() Implements IPathProperty ISceneObjectProperty"
  },
  "api/VRBuilder.Core.Properties.BooleanDataProperty.html": {
    "href": "api/VRBuilder.Core.Properties.BooleanDataProperty.html",
    "title": "Class BooleanDataProperty | VR Builder Documentation",
    "keywords": "Class BooleanDataProperty Inheritance System.Object ProcessSceneObjectProperty DataProperty < System.Boolean > BooleanDataProperty Implements IDataProperty < System.Boolean > IDataPropertyBase ISceneObjectProperty Inherited Members DataProperty<Boolean>.storedValue DataProperty<Boolean>.GetValue() DataProperty<Boolean>.ResetValue() DataProperty<Boolean>.SetValue(Boolean) DataProperty<Boolean>.ValueToString(Boolean) ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class BooleanDataProperty : DataProperty<bool>, IDataProperty<bool>, IDataPropertyBase, ISceneObjectProperty Constructors BooleanDataProperty() Declaration public BooleanDataProperty() Properties DefaultValue Declaration public override bool DefaultValue { get; } Property Value Type Description System.Boolean Overrides VRBuilder.Core.Properties.DataProperty<System.Boolean>.DefaultValue OnValueChanged Declaration public override UnityEvent<bool> OnValueChanged { get; } Property Value Type Description UnityEngine.Events.UnityEvent < System.Boolean > Overrides VRBuilder.Core.Properties.DataProperty<System.Boolean>.OnValueChanged OnValueReset Declaration public override UnityEvent OnValueReset { get; } Property Value Type Description UnityEngine.Events.UnityEvent Overrides VRBuilder.Core.Properties.DataProperty<System.Boolean>.OnValueReset Methods InvertValue() Declaration public void InvertValue() Implements IDataProperty<T> IDataPropertyBase ISceneObjectProperty"
  },
  "api/VRBuilder.Core.Properties.ColliderWithTriggerProperty.ColliderWithTriggerEventArgs.html": {
    "href": "api/VRBuilder.Core.Properties.ColliderWithTriggerProperty.ColliderWithTriggerEventArgs.html",
    "title": "Class ColliderWithTriggerProperty.ColliderWithTriggerEventArgs | VR Builder Documentation",
    "keywords": "Class ColliderWithTriggerProperty.ColliderWithTriggerEventArgs Inheritance System.Object ColliderWithTriggerProperty.ColliderWithTriggerEventArgs Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class ColliderWithTriggerEventArgs : EventArgs Constructors ColliderWithTriggerEventArgs(GameObject) Declaration public ColliderWithTriggerEventArgs(GameObject collidedObject) Parameters Type Name Description UnityEngine.GameObject collidedObject Fields CollidedObject Declaration public readonly GameObject CollidedObject Field Value Type Description UnityEngine.GameObject"
  },
  "api/VRBuilder.Core.Properties.ColliderWithTriggerProperty.html": {
    "href": "api/VRBuilder.Core.Properties.ColliderWithTriggerProperty.html",
    "title": "Class ColliderWithTriggerProperty | VR Builder Documentation",
    "keywords": "Class ColliderWithTriggerProperty Inheritance System.Object ProcessSceneObjectProperty ColliderWithTriggerProperty Implements ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class ColliderWithTriggerProperty : ProcessSceneObjectProperty, ISceneObjectProperty Constructors ColliderWithTriggerProperty() Declaration public ColliderWithTriggerProperty() Methods FastForwardEnter(ISceneObject) Declaration public void FastForwardEnter(ISceneObject target) Parameters Type Name Description ISceneObject target IsTransformInsideTrigger(Transform) Declaration public bool IsTransformInsideTrigger(Transform targetTransform) Parameters Type Name Description UnityEngine.Transform targetTransform Returns Type Description System.Boolean OnEnable() Declaration protected override void OnEnable() Overrides ProcessSceneObjectProperty.OnEnable() Events EnteredTrigger Declaration public event EventHandler<ColliderWithTriggerProperty.ColliderWithTriggerEventArgs> EnteredTrigger Event Type Type Description System.EventHandler < ColliderWithTriggerProperty.ColliderWithTriggerEventArgs > ExitedTrigger Declaration public event EventHandler<ColliderWithTriggerProperty.ColliderWithTriggerEventArgs> ExitedTrigger Event Type Type Description System.EventHandler < ColliderWithTriggerProperty.ColliderWithTriggerEventArgs > Implements ISceneObjectProperty"
  },
  "api/VRBuilder.Core.Properties.DataProperty-1.html": {
    "href": "api/VRBuilder.Core.Properties.DataProperty-1.html",
    "title": "Class DataProperty<T> | VR Builder Documentation",
    "keywords": "Class DataProperty<T> Inheritance System.Object ProcessSceneObjectProperty DataProperty<T> BooleanDataProperty NumberDataProperty TextDataProperty StateDataPropertyBase Implements IDataProperty <T> IDataPropertyBase ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public abstract class DataProperty<T> : ProcessSceneObjectProperty, IDataProperty<T>, IDataPropertyBase, ISceneObjectProperty Type Parameters Name Description T Constructors DataProperty() Declaration protected DataProperty() Fields storedValue Declaration protected T storedValue Field Value Type Description T Properties DefaultValue Declaration public abstract T DefaultValue { get; } Property Value Type Description T OnValueChanged Declaration public abstract UnityEvent<T> OnValueChanged { get; } Property Value Type Description UnityEngine.Events.UnityEvent <T> OnValueReset Declaration public abstract UnityEvent OnValueReset { get; } Property Value Type Description UnityEngine.Events.UnityEvent Methods GetValue() Declaration public T GetValue() Returns Type Description T ResetValue() Declaration public void ResetValue() SetValue(T) Declaration public void SetValue(T value) Parameters Type Name Description T value ValueToString(T) Declaration protected virtual string ValueToString(T value) Parameters Type Name Description T value Returns Type Description System.String Implements IDataProperty<T> IDataPropertyBase ISceneObjectProperty"
  },
  "api/VRBuilder.Core.Properties.EnableHighlightProperty.html": {
    "href": "api/VRBuilder.Core.Properties.EnableHighlightProperty.html",
    "title": "Class EnableHighlightProperty | VR Builder Documentation",
    "keywords": "Class EnableHighlightProperty Inheritance System.Object ProcessSceneObjectProperty BaseHighlightProperty EnableHighlightProperty Implements IHighlightProperty ISceneObjectProperty Inherited Members BaseHighlightProperty.EmitHighlightEvent(HighlightPropertyEventArgs) BaseHighlightProperty.EmitUnhighlightEvent(HighlightPropertyEventArgs) BaseHighlightProperty.IsHighlighted BaseHighlightProperty.HighlightStarted BaseHighlightProperty.HighlightEnded ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class EnableHighlightProperty : BaseHighlightProperty, IHighlightProperty, ISceneObjectProperty Constructors EnableHighlightProperty() Declaration public EnableHighlightProperty() Methods Highlight(Color) Declaration public override void Highlight(Color highlightColor) Parameters Type Name Description UnityEngine.Color highlightColor Overrides BaseHighlightProperty.Highlight(Color) Unhighlight() Declaration public override void Unhighlight() Overrides BaseHighlightProperty.Unhighlight() Implements IHighlightProperty ISceneObjectProperty"
  },
  "api/VRBuilder.Core.Properties.HighlightPropertyEventArgs.html": {
    "href": "api/VRBuilder.Core.Properties.HighlightPropertyEventArgs.html",
    "title": "Class HighlightPropertyEventArgs | VR Builder Documentation",
    "keywords": "Class HighlightPropertyEventArgs Inheritance System.Object HighlightPropertyEventArgs Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class HighlightPropertyEventArgs : EventArgs Constructors HighlightPropertyEventArgs(Nullable<Color>) Declaration public HighlightPropertyEventArgs(Nullable<Color> highlightColor) Parameters Type Name Description System.Nullable < UnityEngine.Color > highlightColor Fields HighlightColor Declaration public readonly Nullable<Color> HighlightColor Field Value Type Description System.Nullable < UnityEngine.Color >"
  },
  "api/VRBuilder.Core.Properties.html": {
    "href": "api/VRBuilder.Core.Properties.html",
    "title": "Namespace VRBuilder.Core.Properties | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Properties Classes BaseHighlightProperty BaseHighlightProperty.HighlightEventArgs BezierSplinePathProperty BooleanDataProperty ColliderWithTriggerProperty ColliderWithTriggerProperty.ColliderWithTriggerEventArgs DataProperty<T> EnableHighlightProperty HighlightPropertyEventArgs LockableProperty NumberDataProperty ParticleSystemProperty ParticleSystemPropertyEventArgs ProcessSceneObjectProperty TextDataProperty TransformInRangeDetectorProperty TransformInRangeDetectorProperty.RangeEventArgs Interfaces IDataProperty<T> IDataPropertyBase IHighlightProperty IParticleSystemProperty IPathProperty ISceneObjectProperty ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Core.Properties.IDataProperty-1.html": {
    "href": "api/VRBuilder.Core.Properties.IDataProperty-1.html",
    "title": "Interface IDataProperty<T> | VR Builder Documentation",
    "keywords": "Interface IDataProperty<T> Inherited Members IDataPropertyBase.ResetValue() IDataPropertyBase.OnValueReset ISceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public interface IDataProperty<T> : IDataPropertyBase, ISceneObjectProperty Type Parameters Name Description T Properties OnValueChanged Declaration UnityEvent<T> OnValueChanged { get; } Property Value Type Description UnityEngine.Events.UnityEvent <T> Methods GetValue() Declaration T GetValue() Returns Type Description T SetValue(T) Declaration void SetValue(T value) Parameters Type Name Description T value Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.IDataPropertyBase.html": {
    "href": "api/VRBuilder.Core.Properties.IDataPropertyBase.html",
    "title": "Interface IDataPropertyBase | VR Builder Documentation",
    "keywords": "Interface IDataPropertyBase Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public interface IDataPropertyBase : ISceneObjectProperty Properties OnValueReset Declaration UnityEvent OnValueReset { get; } Property Value Type Description UnityEngine.Events.UnityEvent Methods ResetValue() Declaration void ResetValue() Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.IHighlightProperty.html": {
    "href": "api/VRBuilder.Core.Properties.IHighlightProperty.html",
    "title": "Interface IHighlightProperty | VR Builder Documentation",
    "keywords": "Interface IHighlightProperty Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public interface IHighlightProperty : ISceneObjectProperty Properties HighlightEnded Declaration UnityEvent<HighlightPropertyEventArgs> HighlightEnded { get; } Property Value Type Description UnityEngine.Events.UnityEvent < HighlightPropertyEventArgs > HighlightStarted Declaration UnityEvent<HighlightPropertyEventArgs> HighlightStarted { get; } Property Value Type Description UnityEngine.Events.UnityEvent < HighlightPropertyEventArgs > IsHighlighted Declaration bool IsHighlighted { get; } Property Value Type Description System.Boolean Methods Highlight(Color) Declaration void Highlight(Color highlightColor) Parameters Type Name Description UnityEngine.Color highlightColor Unhighlight() Declaration void Unhighlight() Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.IParticleSystemProperty.html": {
    "href": "api/VRBuilder.Core.Properties.IParticleSystemProperty.html",
    "title": "Interface IParticleSystemProperty | VR Builder Documentation",
    "keywords": "Interface IParticleSystemProperty Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public interface IParticleSystemProperty : ISceneObjectProperty Properties IsEmitting Declaration bool IsEmitting { get; } Property Value Type Description System.Boolean StartedEmission Declaration UnityEvent<ParticleSystemPropertyEventArgs> StartedEmission { get; } Property Value Type Description UnityEngine.Events.UnityEvent < ParticleSystemPropertyEventArgs > StoppedEmission Declaration UnityEvent<ParticleSystemPropertyEventArgs> StoppedEmission { get; } Property Value Type Description UnityEngine.Events.UnityEvent < ParticleSystemPropertyEventArgs > Methods StartEmission() Declaration void StartEmission() StopEmission() Declaration void StopEmission() Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.IPathProperty.html": {
    "href": "api/VRBuilder.Core.Properties.IPathProperty.html",
    "title": "Interface IPathProperty | VR Builder Documentation",
    "keywords": "Interface IPathProperty Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public interface IPathProperty : ISceneObjectProperty Methods GetDirection(Single) Declaration Vector3 GetDirection(float t) Parameters Type Name Description System.Single t Returns Type Description UnityEngine.Vector3 GetPoint(Single) Declaration Vector3 GetPoint(float t) Parameters Type Name Description System.Single t Returns Type Description UnityEngine.Vector3 Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.ISceneObjectProperty.html": {
    "href": "api/VRBuilder.Core.Properties.ISceneObjectProperty.html",
    "title": "Interface ISceneObjectProperty | VR Builder Documentation",
    "keywords": "Interface ISceneObjectProperty Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public interface ISceneObjectProperty Properties SceneObject Declaration ISceneObject SceneObject { get; } Property Value Type Description ISceneObject Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Core.Properties.ISceneObjectPropertyExtension-1.html": {
    "href": "api/VRBuilder.Core.Properties.ISceneObjectPropertyExtension-1.html",
    "title": "Interface ISceneObjectPropertyExtension<T> | VR Builder Documentation",
    "keywords": "Interface ISceneObjectPropertyExtension<T> Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public interface ISceneObjectPropertyExtension<T> where T : ISceneObjectProperty Type Parameters Name Description T"
  },
  "api/VRBuilder.Core.Properties.LockableProperty.html": {
    "href": "api/VRBuilder.Core.Properties.LockableProperty.html",
    "title": "Class LockableProperty | VR Builder Documentation",
    "keywords": "Class LockableProperty Inheritance System.Object ProcessSceneObjectProperty LockableProperty GrabbableProperty SnappableProperty SnapZoneProperty TeleportationProperty TouchableProperty UsableProperty Implements ISceneObjectProperty ILockable Inherited Members ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public abstract class LockableProperty : ProcessSceneObjectProperty, ISceneObjectProperty, ILockable Constructors LockableProperty() Declaration protected LockableProperty() Fields unlockers Declaration protected List<IStepData> unlockers Field Value Type Description System.Collections.Generic.List < IStepData > Properties EndStepLocked Declaration public virtual bool EndStepLocked { get; } Property Value Type Description System.Boolean InheritSceneObjectLockState Declaration public bool InheritSceneObjectLockState { get; set; } Property Value Type Description System.Boolean IsAlwaysUnlocked Declaration public bool IsAlwaysUnlocked { get; set; } Property Value Type Description System.Boolean IsLocked Declaration public virtual bool IsLocked { get; protected set; } Property Value Type Description System.Boolean LockOnParentObjectLock Declaration public bool LockOnParentObjectLock { get; set; } Property Value Type Description System.Boolean Methods EmitLocked(Boolean) Declaration protected void EmitLocked(bool isLocked) Parameters Type Name Description System.Boolean isLocked EmitUnlocked(Boolean) Declaration protected void EmitUnlocked(bool isLocked) Parameters Type Name Description System.Boolean isLocked HandleObjectLocked(Object, LockStateChangedEventArgs) Declaration protected virtual void HandleObjectLocked(object sender, LockStateChangedEventArgs e) Parameters Type Name Description System.Object sender LockStateChangedEventArgs e HandleObjectUnlocked(Object, LockStateChangedEventArgs) Declaration protected virtual void HandleObjectUnlocked(object sender, LockStateChangedEventArgs e) Parameters Type Name Description System.Object sender LockStateChangedEventArgs e InternalSetLocked(Boolean) Declaration protected abstract void InternalSetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState LogLockState(Boolean, IStepData, Boolean) Declaration protected void LogLockState(bool lockState, IStepData stepData, bool canLock) Parameters Type Name Description System.Boolean lockState IStepData stepData System.Boolean canLock OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected override void OnEnable() Overrides ProcessSceneObjectProperty.OnEnable() RemoveUnlocker(IStepData) Declaration public bool RemoveUnlocker(IStepData data) Parameters Type Name Description IStepData data Returns Type Description System.Boolean RequestLocked(Boolean, IStepData) Declaration public virtual void RequestLocked(bool lockState, IStepData stepData = null) Parameters Type Name Description System.Boolean lockState IStepData stepData SetLocked(Boolean) Declaration public virtual void SetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState Events Locked Declaration public event EventHandler<LockStateChangedEventArgs> Locked Event Type Type Description System.EventHandler < LockStateChangedEventArgs > Unlocked Declaration public event EventHandler<LockStateChangedEventArgs> Unlocked Event Type Type Description System.EventHandler < LockStateChangedEventArgs > Implements ISceneObjectProperty ILockable"
  },
  "api/VRBuilder.Core.Properties.NumberDataProperty.html": {
    "href": "api/VRBuilder.Core.Properties.NumberDataProperty.html",
    "title": "Class NumberDataProperty | VR Builder Documentation",
    "keywords": "Class NumberDataProperty Inheritance System.Object ProcessSceneObjectProperty DataProperty < System.Single > NumberDataProperty Implements IDataProperty < System.Single > IDataPropertyBase ISceneObjectProperty Inherited Members DataProperty<Single>.storedValue DataProperty<Single>.GetValue() DataProperty<Single>.ResetValue() DataProperty<Single>.SetValue(Single) DataProperty<Single>.ValueToString(Single) ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class NumberDataProperty : DataProperty<float>, IDataProperty<float>, IDataPropertyBase, ISceneObjectProperty Constructors NumberDataProperty() Declaration public NumberDataProperty() Properties DefaultValue Declaration public override float DefaultValue { get; } Property Value Type Description System.Single Overrides VRBuilder.Core.Properties.DataProperty<System.Single>.DefaultValue OnValueChanged Declaration public override UnityEvent<float> OnValueChanged { get; } Property Value Type Description UnityEngine.Events.UnityEvent < System.Single > Overrides VRBuilder.Core.Properties.DataProperty<System.Single>.OnValueChanged OnValueReset Declaration public override UnityEvent OnValueReset { get; } Property Value Type Description UnityEngine.Events.UnityEvent Overrides VRBuilder.Core.Properties.DataProperty<System.Single>.OnValueReset Methods IncreaseValue(Single) Declaration public void IncreaseValue(float increase) Parameters Type Name Description System.Single increase Implements IDataProperty<T> IDataPropertyBase ISceneObjectProperty"
  },
  "api/VRBuilder.Core.Properties.Operations.AndOperation.html": {
    "href": "api/VRBuilder.Core.Properties.Operations.AndOperation.html",
    "title": "Class AndOperation | VR Builder Documentation",
    "keywords": "Class AndOperation Inheritance System.Object AndOperation Implements IOperationCommand < System.Boolean , System.Boolean > System.IFormattable Namespace : VRBuilder.Core.Properties.Operations Assembly : VRBuilder.Core.dll Syntax public class AndOperation : Object, IOperationCommand<bool, bool> Constructors AndOperation() Declaration public AndOperation() Methods Execute(Boolean, Boolean) Declaration public bool Execute(bool leftOperand, bool rightOperand) Parameters Type Name Description System.Boolean leftOperand System.Boolean rightOperand Returns Type Description System.Boolean ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Core.Properties.Operations.EqualToOperation-1.html": {
    "href": "api/VRBuilder.Core.Properties.Operations.EqualToOperation-1.html",
    "title": "Class EqualToOperation<T> | VR Builder Documentation",
    "keywords": "Class EqualToOperation<T> Inheritance System.Object EqualToOperation<T> Implements IOperationCommand <T, System.Boolean > System.IFormattable Namespace : VRBuilder.Core.Properties.Operations Assembly : VRBuilder.Core.dll Syntax public class EqualToOperation<T> : Object, IOperationCommand<T, bool> where T : IEquatable<T> Type Parameters Name Description T Constructors EqualToOperation() Declaration public EqualToOperation() Methods Execute(T, T) Declaration public bool Execute(T leftOperand, T rightOperand) Parameters Type Name Description T leftOperand T rightOperand Returns Type Description System.Boolean ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Core.Properties.Operations.GreaterOrEqualOperation-1.html": {
    "href": "api/VRBuilder.Core.Properties.Operations.GreaterOrEqualOperation-1.html",
    "title": "Class GreaterOrEqualOperation<T> | VR Builder Documentation",
    "keywords": "Class GreaterOrEqualOperation<T> Inheritance System.Object GreaterOrEqualOperation<T> Implements IOperationCommand <T, System.Boolean > System.IFormattable Namespace : VRBuilder.Core.Properties.Operations Assembly : VRBuilder.Core.dll Syntax public class GreaterOrEqualOperation<T> : Object, IOperationCommand<T, bool> where T : IComparable<T> Type Parameters Name Description T Constructors GreaterOrEqualOperation() Declaration public GreaterOrEqualOperation() Methods Execute(T, T) Declaration public bool Execute(T leftOperand, T rightOperand) Parameters Type Name Description T leftOperand T rightOperand Returns Type Description System.Boolean ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Core.Properties.Operations.GreaterThanOperation-1.html": {
    "href": "api/VRBuilder.Core.Properties.Operations.GreaterThanOperation-1.html",
    "title": "Class GreaterThanOperation<T> | VR Builder Documentation",
    "keywords": "Class GreaterThanOperation<T> Inheritance System.Object GreaterThanOperation<T> Implements IOperationCommand <T, System.Boolean > System.IFormattable Namespace : VRBuilder.Core.Properties.Operations Assembly : VRBuilder.Core.dll Syntax public class GreaterThanOperation<T> : Object, IOperationCommand<T, bool> where T : IComparable<T> Type Parameters Name Description T Constructors GreaterThanOperation() Declaration public GreaterThanOperation() Methods Execute(T, T) Declaration public bool Execute(T leftOperand, T rightOperand) Parameters Type Name Description T leftOperand T rightOperand Returns Type Description System.Boolean ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Core.Properties.Operations.html": {
    "href": "api/VRBuilder.Core.Properties.Operations.html",
    "title": "Namespace VRBuilder.Core.Properties.Operations | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Properties.Operations Classes AndOperation EqualToOperation<T> GreaterOrEqualOperation<T> GreaterThanOperation<T> LessThanOperation<T> LessThanOrEqualOperation<T> NotEqualToOperation<T> OrOperation Interfaces IOperationCommand<TOperand, TResult>"
  },
  "api/VRBuilder.Core.Properties.Operations.IOperationCommand-2.html": {
    "href": "api/VRBuilder.Core.Properties.Operations.IOperationCommand-2.html",
    "title": "Interface IOperationCommand<TOperand, TResult> | VR Builder Documentation",
    "keywords": "Interface IOperationCommand<TOperand, TResult> Namespace : VRBuilder.Core.Properties.Operations Assembly : VRBuilder.Core.dll Syntax public interface IOperationCommand<TOperand, TResult> Type Parameters Name Description TOperand TResult Methods Execute(TOperand, TOperand) Declaration TResult Execute(TOperand leftOperand, TOperand rightOperand) Parameters Type Name Description TOperand leftOperand TOperand rightOperand Returns Type Description TResult"
  },
  "api/VRBuilder.Core.Properties.Operations.LessThanOperation-1.html": {
    "href": "api/VRBuilder.Core.Properties.Operations.LessThanOperation-1.html",
    "title": "Class LessThanOperation<T> | VR Builder Documentation",
    "keywords": "Class LessThanOperation<T> Inheritance System.Object LessThanOperation<T> Implements IOperationCommand <T, System.Boolean > System.IFormattable Namespace : VRBuilder.Core.Properties.Operations Assembly : VRBuilder.Core.dll Syntax public class LessThanOperation<T> : Object, IOperationCommand<T, bool> where T : IComparable<T> Type Parameters Name Description T Constructors LessThanOperation() Declaration public LessThanOperation() Methods Execute(T, T) Declaration public bool Execute(T leftOperand, T rightOperand) Parameters Type Name Description T leftOperand T rightOperand Returns Type Description System.Boolean ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Core.Properties.Operations.LessThanOrEqualOperation-1.html": {
    "href": "api/VRBuilder.Core.Properties.Operations.LessThanOrEqualOperation-1.html",
    "title": "Class LessThanOrEqualOperation<T> | VR Builder Documentation",
    "keywords": "Class LessThanOrEqualOperation<T> Inheritance System.Object LessThanOrEqualOperation<T> Implements IOperationCommand <T, System.Boolean > System.IFormattable Namespace : VRBuilder.Core.Properties.Operations Assembly : VRBuilder.Core.dll Syntax public class LessThanOrEqualOperation<T> : Object, IOperationCommand<T, bool> where T : IComparable<T> Type Parameters Name Description T Constructors LessThanOrEqualOperation() Declaration public LessThanOrEqualOperation() Methods Execute(T, T) Declaration public bool Execute(T leftOperand, T rightOperand) Parameters Type Name Description T leftOperand T rightOperand Returns Type Description System.Boolean ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Core.Properties.Operations.NotEqualToOperation-1.html": {
    "href": "api/VRBuilder.Core.Properties.Operations.NotEqualToOperation-1.html",
    "title": "Class NotEqualToOperation<T> | VR Builder Documentation",
    "keywords": "Class NotEqualToOperation<T> Inheritance System.Object NotEqualToOperation<T> Implements IOperationCommand <T, System.Boolean > System.IFormattable Namespace : VRBuilder.Core.Properties.Operations Assembly : VRBuilder.Core.dll Syntax public class NotEqualToOperation<T> : Object, IOperationCommand<T, bool> where T : IEquatable<T> Type Parameters Name Description T Constructors NotEqualToOperation() Declaration public NotEqualToOperation() Methods Execute(T, T) Declaration public bool Execute(T leftOperand, T rightOperand) Parameters Type Name Description T leftOperand T rightOperand Returns Type Description System.Boolean ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Core.Properties.Operations.OrOperation.html": {
    "href": "api/VRBuilder.Core.Properties.Operations.OrOperation.html",
    "title": "Class OrOperation | VR Builder Documentation",
    "keywords": "Class OrOperation Inheritance System.Object OrOperation Implements IOperationCommand < System.Boolean , System.Boolean > System.IFormattable Namespace : VRBuilder.Core.Properties.Operations Assembly : VRBuilder.Core.dll Syntax public class OrOperation : Object, IOperationCommand<bool, bool> Constructors OrOperation() Declaration public OrOperation() Methods Execute(Boolean, Boolean) Declaration public bool Execute(bool leftOperand, bool rightOperand) Parameters Type Name Description System.Boolean leftOperand System.Boolean rightOperand Returns Type Description System.Boolean ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Core.Properties.ParticleSystemProperty.html": {
    "href": "api/VRBuilder.Core.Properties.ParticleSystemProperty.html",
    "title": "Class ParticleSystemProperty | VR Builder Documentation",
    "keywords": "Class ParticleSystemProperty Inheritance System.Object ProcessSceneObjectProperty ParticleSystemProperty Implements IParticleSystemProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class ParticleSystemProperty : ProcessSceneObjectProperty, IParticleSystemProperty, ISceneObjectProperty Constructors ParticleSystemProperty() Declaration public ParticleSystemProperty() Properties IsEmitting Declaration public bool IsEmitting { get; } Property Value Type Description System.Boolean ParticleSystem Declaration public ParticleSystem ParticleSystem { get; } Property Value Type Description UnityEngine.ParticleSystem StartedEmission Declaration public UnityEvent<ParticleSystemPropertyEventArgs> StartedEmission { get; } Property Value Type Description UnityEngine.Events.UnityEvent < ParticleSystemPropertyEventArgs > StoppedEmission Declaration public UnityEvent<ParticleSystemPropertyEventArgs> StoppedEmission { get; } Property Value Type Description UnityEngine.Events.UnityEvent < ParticleSystemPropertyEventArgs > Methods StartEmission() Declaration public void StartEmission() StopEmission() Declaration public void StopEmission() Implements IParticleSystemProperty ISceneObjectProperty"
  },
  "api/VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs.html": {
    "href": "api/VRBuilder.Core.Properties.ParticleSystemPropertyEventArgs.html",
    "title": "Class ParticleSystemPropertyEventArgs | VR Builder Documentation",
    "keywords": "Class ParticleSystemPropertyEventArgs Inheritance System.Object ParticleSystemPropertyEventArgs Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class ParticleSystemPropertyEventArgs : EventArgs Constructors ParticleSystemPropertyEventArgs() Declaration public ParticleSystemPropertyEventArgs()"
  },
  "api/VRBuilder.Core.Properties.ProcessSceneObjectProperty.html": {
    "href": "api/VRBuilder.Core.Properties.ProcessSceneObjectProperty.html",
    "title": "Class ProcessSceneObjectProperty | VR Builder Documentation",
    "keywords": "Class ProcessSceneObjectProperty Inheritance System.Object ProcessSceneObjectProperty BaseHighlightProperty BezierSplinePathProperty ColliderWithTriggerProperty DataProperty<T> LockableProperty ParticleSystemProperty TransformInRangeDetectorProperty AnimationProperty AnimatorProperty EventProperty ExplodableProperty GenericEventProperty<T> OutlineProperty ScoreFeedbackProperty TimerProperty VideoPlayerProperty Implements ISceneObjectProperty Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public abstract class ProcessSceneObjectProperty : MonoBehaviour, ISceneObjectProperty Constructors ProcessSceneObjectProperty() Declaration protected ProcessSceneObjectProperty() Properties SceneObject Declaration public ISceneObject SceneObject { get; } Property Value Type Description ISceneObject Methods OnEnable() Declaration protected virtual void OnEnable() Reset() Declaration protected virtual void Reset() ToString() Declaration public override string ToString() Returns Type Description System.String Implements ISceneObjectProperty"
  },
  "api/VRBuilder.Core.Properties.TextDataProperty.html": {
    "href": "api/VRBuilder.Core.Properties.TextDataProperty.html",
    "title": "Class TextDataProperty | VR Builder Documentation",
    "keywords": "Class TextDataProperty Inheritance System.Object ProcessSceneObjectProperty DataProperty < System.String > TextDataProperty Implements IDataProperty < System.String > IDataPropertyBase ISceneObjectProperty Inherited Members DataProperty<String>.storedValue DataProperty<String>.GetValue() DataProperty<String>.ResetValue() DataProperty<String>.SetValue(String) DataProperty<String>.ValueToString(String) ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class TextDataProperty : DataProperty<string>, IDataProperty<string>, IDataPropertyBase, ISceneObjectProperty Constructors TextDataProperty() Declaration public TextDataProperty() Properties DefaultValue Declaration public override string DefaultValue { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Properties.DataProperty<System.String>.DefaultValue OnValueChanged Declaration public override UnityEvent<string> OnValueChanged { get; } Property Value Type Description UnityEngine.Events.UnityEvent < System.String > Overrides VRBuilder.Core.Properties.DataProperty<System.String>.OnValueChanged OnValueReset Declaration public override UnityEvent OnValueReset { get; } Property Value Type Description UnityEngine.Events.UnityEvent Overrides VRBuilder.Core.Properties.DataProperty<System.String>.OnValueReset Implements IDataProperty<T> IDataPropertyBase ISceneObjectProperty"
  },
  "api/VRBuilder.Core.Properties.TransformInRangeDetectorProperty.html": {
    "href": "api/VRBuilder.Core.Properties.TransformInRangeDetectorProperty.html",
    "title": "Class TransformInRangeDetectorProperty | VR Builder Documentation",
    "keywords": "Class TransformInRangeDetectorProperty Inheritance System.Object ProcessSceneObjectProperty TransformInRangeDetectorProperty Implements ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class TransformInRangeDetectorProperty : ProcessSceneObjectProperty, ISceneObjectProperty Constructors TransformInRangeDetectorProperty() Declaration public TransformInRangeDetectorProperty() Properties DetectionRange Declaration public float DetectionRange { get; set; } Property Value Type Description System.Single Methods DestroySelf() Declaration public void DestroySelf() EmitEnteredArea() Declaration protected void EmitEnteredArea() EmitExitedArea() Declaration protected void EmitExitedArea() IsTargetInsideRange() Declaration public virtual bool IsTargetInsideRange() Returns Type Description System.Boolean Refresh() Declaration public void Refresh() SetTrackedTransform(Transform) Declaration public void SetTrackedTransform(Transform transformToBeTracked) Parameters Type Name Description UnityEngine.Transform transformToBeTracked Events EnteredRange Declaration public event EventHandler<TransformInRangeDetectorProperty.RangeEventArgs> EnteredRange Event Type Type Description System.EventHandler < TransformInRangeDetectorProperty.RangeEventArgs > ExitedRange Declaration public event EventHandler<TransformInRangeDetectorProperty.RangeEventArgs> ExitedRange Event Type Type Description System.EventHandler < TransformInRangeDetectorProperty.RangeEventArgs > Implements ISceneObjectProperty"
  },
  "api/VRBuilder.Core.Properties.TransformInRangeDetectorProperty.RangeEventArgs.html": {
    "href": "api/VRBuilder.Core.Properties.TransformInRangeDetectorProperty.RangeEventArgs.html",
    "title": "Class TransformInRangeDetectorProperty.RangeEventArgs | VR Builder Documentation",
    "keywords": "Class TransformInRangeDetectorProperty.RangeEventArgs Inheritance System.Object TransformInRangeDetectorProperty.RangeEventArgs Namespace : VRBuilder.Core.Properties Assembly : VRBuilder.Core.dll Syntax public class RangeEventArgs : EventArgs Constructors RangeEventArgs(Transform) Declaration public RangeEventArgs(Transform trackedTransform) Parameters Type Name Description UnityEngine.Transform trackedTransform Fields TrackedTransform Declaration public readonly Transform TrackedTransform Field Value Type Description UnityEngine.Transform"
  },
  "api/VRBuilder.Core.RestrictiveEnvironment.DefaultStepLockHandling.html": {
    "href": "api/VRBuilder.Core.RestrictiveEnvironment.DefaultStepLockHandling.html",
    "title": "Class DefaultStepLockHandling | VR Builder Documentation",
    "keywords": "Class DefaultStepLockHandling Inheritance System.Object StepLockHandlingStrategy DefaultStepLockHandling Namespace : VRBuilder.Core.RestrictiveEnvironment Assembly : VRBuilder.Core.dll Syntax public class DefaultStepLockHandling : StepLockHandlingStrategy Constructors DefaultStepLockHandling() Declaration public DefaultStepLockHandling() Methods Configure(IMode) Declaration public override void Configure(IMode mode) Parameters Type Name Description IMode mode Overrides StepLockHandlingStrategy.Configure(IMode) Lock(IStepData, IEnumerable<LockablePropertyData>) Declaration public override void Lock(IStepData data, IEnumerable<LockablePropertyData> manualUnlocked) Parameters Type Name Description IStepData data System.Collections.Generic.IEnumerable < LockablePropertyData > manualUnlocked Overrides StepLockHandlingStrategy.Lock(IStepData, IEnumerable<LockablePropertyData>) OnProcessFinished(IProcess) Declaration public override void OnProcessFinished(IProcess process) Parameters Type Name Description IProcess process Overrides StepLockHandlingStrategy.OnProcessFinished(IProcess) OnProcessStarted(IProcess) Declaration public override void OnProcessStarted(IProcess process) Parameters Type Name Description IProcess process Overrides StepLockHandlingStrategy.OnProcessStarted(IProcess) Unlock(IStepData, IEnumerable<LockablePropertyData>) Declaration public override void Unlock(IStepData data, IEnumerable<LockablePropertyData> manualUnlocked) Parameters Type Name Description IStepData data System.Collections.Generic.IEnumerable < LockablePropertyData > manualUnlocked Overrides StepLockHandlingStrategy.Unlock(IStepData, IEnumerable<LockablePropertyData>)"
  },
  "api/VRBuilder.Core.RestrictiveEnvironment.html": {
    "href": "api/VRBuilder.Core.RestrictiveEnvironment.html",
    "title": "Namespace VRBuilder.Core.RestrictiveEnvironment | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.RestrictiveEnvironment Classes DefaultStepLockHandling LockablePropertyData LockablePropertyReference NonLockingStepHandling StepLockHandlingStrategy Interfaces ILockablePropertiesProvider"
  },
  "api/VRBuilder.Core.RestrictiveEnvironment.ILockablePropertiesProvider.html": {
    "href": "api/VRBuilder.Core.RestrictiveEnvironment.ILockablePropertiesProvider.html",
    "title": "Interface ILockablePropertiesProvider | VR Builder Documentation",
    "keywords": "Interface ILockablePropertiesProvider Namespace : VRBuilder.Core.RestrictiveEnvironment Assembly : VRBuilder.Core.dll Syntax public interface ILockablePropertiesProvider Methods GetLockableProperties() Declaration IEnumerable<LockablePropertyData> GetLockableProperties() Returns Type Description System.Collections.Generic.IEnumerable < LockablePropertyData >"
  },
  "api/VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.html": {
    "href": "api/VRBuilder.Core.RestrictiveEnvironment.LockablePropertyData.html",
    "title": "Class LockablePropertyData | VR Builder Documentation",
    "keywords": "Class LockablePropertyData Inheritance System.Object LockablePropertyData Namespace : VRBuilder.Core.RestrictiveEnvironment Assembly : VRBuilder.Core.dll Syntax public class LockablePropertyData : Object Constructors LockablePropertyData(LockableProperty) Declaration public LockablePropertyData(LockableProperty property) Parameters Type Name Description LockableProperty property LockablePropertyData(LockableProperty, Boolean) Declaration public LockablePropertyData(LockableProperty property, bool endStepLocked) Parameters Type Name Description LockableProperty property System.Boolean endStepLocked Fields EndStepLocked Declaration public bool EndStepLocked Field Value Type Description System.Boolean Property Declaration public readonly LockableProperty Property Field Value Type Description LockableProperty Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Equals(LockablePropertyData) Declaration protected bool Equals(LockablePropertyData other) Parameters Type Name Description LockablePropertyData other Returns Type Description System.Boolean GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32"
  },
  "api/VRBuilder.Core.RestrictiveEnvironment.LockablePropertyReference.html": {
    "href": "api/VRBuilder.Core.RestrictiveEnvironment.LockablePropertyReference.html",
    "title": "Class LockablePropertyReference | VR Builder Documentation",
    "keywords": "Class LockablePropertyReference Inheritance System.Object LockablePropertyReference Namespace : VRBuilder.Core.RestrictiveEnvironment Assembly : VRBuilder.Core.dll Syntax public class LockablePropertyReference : Object Constructors LockablePropertyReference() Declaration public LockablePropertyReference() LockablePropertyReference(LockableProperty) Declaration public LockablePropertyReference(LockableProperty property) Parameters Type Name Description LockableProperty property Fields TargetObject Declaration public SingleSceneObjectReference TargetObject Field Value Type Description SingleSceneObjectReference Type Declaration public string Type Field Value Type Description System.String Methods GetProperty() Declaration public LockableProperty GetProperty() Returns Type Description LockableProperty"
  },
  "api/VRBuilder.Core.RestrictiveEnvironment.NonLockingStepHandling.html": {
    "href": "api/VRBuilder.Core.RestrictiveEnvironment.NonLockingStepHandling.html",
    "title": "Class NonLockingStepHandling | VR Builder Documentation",
    "keywords": "Class NonLockingStepHandling Inheritance System.Object StepLockHandlingStrategy NonLockingStepHandling Inherited Members StepLockHandlingStrategy.Configure(IMode) StepLockHandlingStrategy.OnProcessStarted(IProcess) StepLockHandlingStrategy.OnProcessFinished(IProcess) Namespace : VRBuilder.Core.RestrictiveEnvironment Assembly : VRBuilder.Core.dll Syntax public class NonLockingStepHandling : StepLockHandlingStrategy Constructors NonLockingStepHandling() Declaration public NonLockingStepHandling() Methods Lock(IStepData, IEnumerable<LockablePropertyData>) Declaration public override void Lock(IStepData data, IEnumerable<LockablePropertyData> manualUnlocked) Parameters Type Name Description IStepData data System.Collections.Generic.IEnumerable < LockablePropertyData > manualUnlocked Overrides StepLockHandlingStrategy.Lock(IStepData, IEnumerable<LockablePropertyData>) Unlock(IStepData, IEnumerable<LockablePropertyData>) Declaration public override void Unlock(IStepData data, IEnumerable<LockablePropertyData> manualUnlocked) Parameters Type Name Description IStepData data System.Collections.Generic.IEnumerable < LockablePropertyData > manualUnlocked Overrides StepLockHandlingStrategy.Unlock(IStepData, IEnumerable<LockablePropertyData>)"
  },
  "api/VRBuilder.Core.RestrictiveEnvironment.StepLockHandlingStrategy.html": {
    "href": "api/VRBuilder.Core.RestrictiveEnvironment.StepLockHandlingStrategy.html",
    "title": "Class StepLockHandlingStrategy | VR Builder Documentation",
    "keywords": "Class StepLockHandlingStrategy Inheritance System.Object StepLockHandlingStrategy DefaultStepLockHandling NonLockingStepHandling Namespace : VRBuilder.Core.RestrictiveEnvironment Assembly : VRBuilder.Core.dll Syntax public abstract class StepLockHandlingStrategy : Object Constructors StepLockHandlingStrategy() Declaration protected StepLockHandlingStrategy() Methods Configure(IMode) Declaration public virtual void Configure(IMode mode) Parameters Type Name Description IMode mode Lock(IStepData, IEnumerable<LockablePropertyData>) Declaration public abstract void Lock(IStepData data, IEnumerable<LockablePropertyData> manualUnlocked) Parameters Type Name Description IStepData data System.Collections.Generic.IEnumerable < LockablePropertyData > manualUnlocked OnProcessFinished(IProcess) Declaration public virtual void OnProcessFinished(IProcess process) Parameters Type Name Description IProcess process OnProcessStarted(IProcess) Declaration public virtual void OnProcessStarted(IProcess process) Parameters Type Name Description IProcess process Unlock(IStepData, IEnumerable<LockablePropertyData>) Declaration public abstract void Unlock(IStepData data, IEnumerable<LockablePropertyData> manualUnlocked) Parameters Type Name Description IStepData data System.Collections.Generic.IEnumerable < LockablePropertyData > manualUnlocked"
  },
  "api/VRBuilder.Core.SceneObjects.GuidBasedSceneObjectRegistry.html": {
    "href": "api/VRBuilder.Core.SceneObjects.GuidBasedSceneObjectRegistry.html",
    "title": "Class GuidBasedSceneObjectRegistry | VR Builder Documentation",
    "keywords": "Class GuidBasedSceneObjectRegistry Inheritance System.Object GuidBasedSceneObjectRegistry Implements ISceneObjectRegistry Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public class GuidBasedSceneObjectRegistry : Object, ISceneObjectRegistry Constructors GuidBasedSceneObjectRegistry() Declaration public GuidBasedSceneObjectRegistry() Fields registeredObjects Declaration protected readonly Dictionary<Guid, List<ISceneObject>> registeredObjects Field Value Type Description System.Collections.Generic.Dictionary < System.Guid , System.Collections.Generic.List < ISceneObject >> Properties Item[Guid] Declaration public ISceneObject this[Guid guid] { get; } Parameters Type Name Description System.Guid guid Property Value Type Description ISceneObject Item[String] Declaration public ISceneObject this[string name] { get; } Parameters Type Name Description System.String name Property Value Type Description ISceneObject RegisteredGuids Declaration public IEnumerable<Guid> RegisteredGuids { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Guid > Methods ContainsGuid(Guid) Declaration public bool ContainsGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean ContainsName(String) Declaration public bool ContainsName(string guidString) Parameters Type Name Description System.String guidString Returns Type Description System.Boolean DebugRebuild() Declaration public void DebugRebuild() GetByGuid(Guid) Declaration public ISceneObject GetByGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description ISceneObject GetByName(String) Declaration public ISceneObject GetByName(string name) Parameters Type Name Description System.String name Returns Type Description ISceneObject GetObjects(Guid) Declaration public IEnumerable<ISceneObject> GetObjects(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Collections.Generic.IEnumerable < ISceneObject > GetProperties<T>(Guid) Declaration public IEnumerable<T> GetProperties<T>(Guid guid) where T : ISceneObjectProperty Parameters Type Name Description System.Guid guid Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T Refresh() Declaration public void Refresh() Register(ISceneObject) Declaration public void Register(ISceneObject obj) Parameters Type Name Description ISceneObject obj RegisterAll() Declaration public void RegisterAll() Unregister(ISceneObject) Declaration public bool Unregister(ISceneObject obj) Parameters Type Name Description ISceneObject obj Returns Type Description System.Boolean Implements ISceneObjectRegistry"
  },
  "api/VRBuilder.Core.SceneObjects.GuidContainerEventArgs.html": {
    "href": "api/VRBuilder.Core.SceneObjects.GuidContainerEventArgs.html",
    "title": "Class GuidContainerEventArgs | VR Builder Documentation",
    "keywords": "Class GuidContainerEventArgs Inheritance System.Object GuidContainerEventArgs Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public class GuidContainerEventArgs : EventArgs Constructors GuidContainerEventArgs(Guid) Declaration public GuidContainerEventArgs(Guid guid) Parameters Type Name Description System.Guid guid Fields Guid Declaration public readonly Guid Guid Field Value Type Description System.Guid"
  },
  "api/VRBuilder.Core.SceneObjects.html": {
    "href": "api/VRBuilder.Core.SceneObjects.html",
    "title": "Namespace VRBuilder.Core.SceneObjects | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.SceneObjects Classes GuidBasedSceneObjectRegistry GuidContainerEventArgs LockStateChangedEventArgs MultipleSceneObjectReference MultipleScenePropertyReference<T> MultipleSceneReference<T> ProcessSceneObject ProcessSceneReference<T> ProcessSceneReferenceBase SceneObjectExtensions SerializableGuid SingleSceneObjectReference SingleScenePropertyReference<T> SingleSceneReference<T> UniqueIdChangedEventArgs UserSceneObject Interfaces IGuidContainer ILockable ISceneObject ISceneObjectRegistry IXRRigTransform"
  },
  "api/VRBuilder.Core.SceneObjects.IGuidContainer.html": {
    "href": "api/VRBuilder.Core.SceneObjects.IGuidContainer.html",
    "title": "Interface IGuidContainer | VR Builder Documentation",
    "keywords": "Interface IGuidContainer Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public interface IGuidContainer Properties Guids Declaration IEnumerable<Guid> Guids { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Guid > Methods AddGuid(Guid) Declaration void AddGuid(Guid guid) Parameters Type Name Description System.Guid guid HasGuid(Guid) Declaration bool HasGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean RemoveGuid(Guid) Declaration bool RemoveGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean Events GuidAdded Declaration event EventHandler<GuidContainerEventArgs> GuidAdded Event Type Type Description System.EventHandler < GuidContainerEventArgs > GuidRemoved Declaration event EventHandler<GuidContainerEventArgs> GuidRemoved Event Type Type Description System.EventHandler < GuidContainerEventArgs >"
  },
  "api/VRBuilder.Core.SceneObjects.ILockable.html": {
    "href": "api/VRBuilder.Core.SceneObjects.ILockable.html",
    "title": "Interface ILockable | VR Builder Documentation",
    "keywords": "Interface ILockable Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public interface ILockable Properties IsAlwaysUnlocked Declaration bool IsAlwaysUnlocked { get; } Property Value Type Description System.Boolean IsLocked Declaration bool IsLocked { get; } Property Value Type Description System.Boolean Methods RemoveUnlocker(IStepData) Declaration bool RemoveUnlocker(IStepData data) Parameters Type Name Description IStepData data Returns Type Description System.Boolean RequestLocked(Boolean, IStepData) Declaration void RequestLocked(bool lockState, IStepData stepData = null) Parameters Type Name Description System.Boolean lockState IStepData stepData SetLocked(Boolean) Declaration void SetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState Events Locked Declaration event EventHandler<LockStateChangedEventArgs> Locked Event Type Type Description System.EventHandler < LockStateChangedEventArgs > Unlocked Declaration event EventHandler<LockStateChangedEventArgs> Unlocked Event Type Type Description System.EventHandler < LockStateChangedEventArgs >"
  },
  "api/VRBuilder.Core.SceneObjects.ISceneObject.html": {
    "href": "api/VRBuilder.Core.SceneObjects.ISceneObject.html",
    "title": "Interface ISceneObject | VR Builder Documentation",
    "keywords": "Interface ISceneObject Inherited Members ILockable.SetLocked(Boolean) ILockable.RequestLocked(Boolean, IStepData) ILockable.RemoveUnlocker(IStepData) ILockable.IsLocked ILockable.IsAlwaysUnlocked ILockable.Locked ILockable.Unlocked IGuidContainer.HasGuid(Guid) IGuidContainer.AddGuid(Guid) IGuidContainer.RemoveGuid(Guid) IGuidContainer.Guids IGuidContainer.GuidAdded IGuidContainer.GuidRemoved Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public interface ISceneObject : ILockable, IGuidContainer Properties GameObject Declaration GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject Guid Declaration Guid Guid { get; } Property Value Type Description System.Guid Properties Declaration ICollection<ISceneObjectProperty> Properties { get; } Property Value Type Description System.Collections.Generic.ICollection < ISceneObjectProperty > Methods CheckHasProperty(Type) Declaration bool CheckHasProperty(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean CheckHasProperty<T>() Declaration bool CheckHasProperty<T>() where T : ISceneObjectProperty Returns Type Description System.Boolean Type Parameters Name Description T GetProperty<T>() Declaration T GetProperty<T>() where T : ISceneObjectProperty Returns Type Description T Type Parameters Name Description T SetObjectId(Guid) Declaration void SetObjectId(Guid guid) Parameters Type Name Description System.Guid guid ValidateProperties(IEnumerable<Type>) Declaration void ValidateProperties(IEnumerable<Type> properties) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Type > properties Events ObjectIdChanged Declaration event EventHandler<UniqueIdChangedEventArgs> ObjectIdChanged Event Type Type Description System.EventHandler < UniqueIdChangedEventArgs > Extension Methods SceneObjectExtensions.AddProcessProperty<T>(ISceneObject) SceneObjectExtensions.AddProcessProperty(ISceneObject, Type) SceneObjectExtensions.RemoveProcessProperty(ISceneObject, Component, Boolean, IEnumerable<Component>) SceneObjectExtensions.RemoveProcessProperty(ISceneObject, Type, Boolean, IEnumerable<Component>)"
  },
  "api/VRBuilder.Core.SceneObjects.ISceneObjectRegistry.html": {
    "href": "api/VRBuilder.Core.SceneObjects.ISceneObjectRegistry.html",
    "title": "Interface ISceneObjectRegistry | VR Builder Documentation",
    "keywords": "Interface ISceneObjectRegistry Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public interface ISceneObjectRegistry Methods ContainsGuid(Guid) Declaration bool ContainsGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean GetObjects(Guid) Declaration IEnumerable<ISceneObject> GetObjects(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Collections.Generic.IEnumerable < ISceneObject > GetProperties<T>(Guid) Declaration IEnumerable<T> GetProperties<T>(Guid guid) where T : ISceneObjectProperty Parameters Type Name Description System.Guid guid Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T Refresh() Declaration void Refresh() Register(ISceneObject) Declaration void Register(ISceneObject obj) Parameters Type Name Description ISceneObject obj RegisterAll() Declaration void RegisterAll() Unregister(ISceneObject) Declaration bool Unregister(ISceneObject obj) Parameters Type Name Description ISceneObject obj Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Core.SceneObjects.IXRRigTransform.html": {
    "href": "api/VRBuilder.Core.SceneObjects.IXRRigTransform.html",
    "title": "Interface IXRRigTransform | VR Builder Documentation",
    "keywords": "Interface IXRRigTransform Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public interface IXRRigTransform Properties Base Declaration Transform Base { get; } Property Value Type Description UnityEngine.Transform Head Declaration Transform Head { get; } Property Value Type Description UnityEngine.Transform LeftHand Declaration Transform LeftHand { get; } Property Value Type Description UnityEngine.Transform RightHand Declaration Transform RightHand { get; } Property Value Type Description UnityEngine.Transform"
  },
  "api/VRBuilder.Core.SceneObjects.LockStateChangedEventArgs.html": {
    "href": "api/VRBuilder.Core.SceneObjects.LockStateChangedEventArgs.html",
    "title": "Class LockStateChangedEventArgs | VR Builder Documentation",
    "keywords": "Class LockStateChangedEventArgs Inheritance System.Object LockStateChangedEventArgs Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public class LockStateChangedEventArgs : EventArgs Constructors LockStateChangedEventArgs(Boolean) Declaration public LockStateChangedEventArgs(bool isLocked) Parameters Type Name Description System.Boolean isLocked Fields IsLocked Declaration public readonly bool IsLocked Field Value Type Description System.Boolean"
  },
  "api/VRBuilder.Core.SceneObjects.MultipleSceneObjectReference.html": {
    "href": "api/VRBuilder.Core.SceneObjects.MultipleSceneObjectReference.html",
    "title": "Class MultipleSceneObjectReference | VR Builder Documentation",
    "keywords": "Class MultipleSceneObjectReference Inheritance System.Object ProcessSceneReferenceBase ProcessSceneReference < ISceneObject > MultipleSceneReference < ISceneObject > MultipleSceneObjectReference Implements ICanBeEmpty Inherited Members MultipleSceneReference<ISceneObject>.HasValue() MultipleSceneReference<ISceneObject>.ToString() MultipleSceneReference<ISceneObject>.Values ProcessSceneReferenceBase.AddGuid(Guid) ProcessSceneReferenceBase.RemoveGuid(Guid) ProcessSceneReferenceBase.ResetGuids(IEnumerable<Guid>) ProcessSceneReferenceBase.IsEmpty() ProcessSceneReferenceBase.Equals(Object) ProcessSceneReferenceBase.GetHashCode() ProcessSceneReferenceBase.Guids Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public class MultipleSceneObjectReference : MultipleSceneReference<ISceneObject>, ICanBeEmpty Constructors MultipleSceneObjectReference() Declaration public MultipleSceneObjectReference() MultipleSceneObjectReference(IEnumerable<Guid>) Declaration public MultipleSceneObjectReference(IEnumerable<Guid> guids) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Guid > guids MultipleSceneObjectReference(Guid) Declaration public MultipleSceneObjectReference(Guid guid) Parameters Type Name Description System.Guid guid Methods DetermineValue(IEnumerable<ISceneObject>) Declaration protected override IEnumerable<ISceneObject> DetermineValue(IEnumerable<ISceneObject> cachedValue) Parameters Type Name Description System.Collections.Generic.IEnumerable < ISceneObject > cachedValue Returns Type Description System.Collections.Generic.IEnumerable < ISceneObject > Overrides VRBuilder.Core.SceneObjects.MultipleSceneReference<VRBuilder.Core.SceneObjects.ISceneObject>.DetermineValue(System.Collections.Generic.IEnumerable<VRBuilder.Core.SceneObjects.ISceneObject>) Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.MultipleScenePropertyReference-1.html": {
    "href": "api/VRBuilder.Core.SceneObjects.MultipleScenePropertyReference-1.html",
    "title": "Class MultipleScenePropertyReference<T> | VR Builder Documentation",
    "keywords": "Class MultipleScenePropertyReference<T> Inheritance System.Object ProcessSceneReferenceBase ProcessSceneReference <T> MultipleSceneReference <T> MultipleScenePropertyReference<T> Implements ICanBeEmpty Inherited Members MultipleSceneReference<T>.HasValue() MultipleSceneReference<T>.ToString() MultipleSceneReference<T>.Values ProcessSceneReferenceBase.AddGuid(Guid) ProcessSceneReferenceBase.RemoveGuid(Guid) ProcessSceneReferenceBase.ResetGuids(IEnumerable<Guid>) ProcessSceneReferenceBase.IsEmpty() ProcessSceneReferenceBase.Equals(Object) ProcessSceneReferenceBase.GetHashCode() ProcessSceneReferenceBase.Guids Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public class MultipleScenePropertyReference<T> : MultipleSceneReference<T>, ICanBeEmpty where T : class, ISceneObjectProperty Type Parameters Name Description T Constructors MultipleScenePropertyReference() Declaration public MultipleScenePropertyReference() MultipleScenePropertyReference(IEnumerable<Guid>) Declaration public MultipleScenePropertyReference(IEnumerable<Guid> guids) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Guid > guids MultipleScenePropertyReference(Guid) Declaration public MultipleScenePropertyReference(Guid guid) Parameters Type Name Description System.Guid guid Methods DetermineValue(IEnumerable<T>) Declaration protected override IEnumerable<T> DetermineValue(IEnumerable<T> cachedValue) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> cachedValue Returns Type Description System.Collections.Generic.IEnumerable <T> Overrides VRBuilder.Core.SceneObjects.MultipleSceneReference<T>.DetermineValue(System.Collections.Generic.IEnumerable<T>) Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.MultipleSceneReference-1.html": {
    "href": "api/VRBuilder.Core.SceneObjects.MultipleSceneReference-1.html",
    "title": "Class MultipleSceneReference<T> | VR Builder Documentation",
    "keywords": "Class MultipleSceneReference<T> Inheritance System.Object ProcessSceneReferenceBase ProcessSceneReference <T> MultipleSceneReference<T> MultipleSceneObjectReference MultipleScenePropertyReference<T> Implements ICanBeEmpty Inherited Members ProcessSceneReferenceBase.AddGuid(Guid) ProcessSceneReferenceBase.RemoveGuid(Guid) ProcessSceneReferenceBase.ResetGuids(IEnumerable<Guid>) ProcessSceneReferenceBase.IsEmpty() ProcessSceneReferenceBase.Equals(Object) ProcessSceneReferenceBase.GetHashCode() ProcessSceneReferenceBase.Guids Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public abstract class MultipleSceneReference<T> : ProcessSceneReference<T>, ICanBeEmpty where T : class Type Parameters Name Description T Constructors MultipleSceneReference() Declaration public MultipleSceneReference() MultipleSceneReference(IEnumerable<Guid>) Declaration public MultipleSceneReference(IEnumerable<Guid> guids) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Guid > guids MultipleSceneReference(Guid) Declaration public MultipleSceneReference(Guid guid) Parameters Type Name Description System.Guid guid Properties Values Declaration public IEnumerable<T> Values { get; } Property Value Type Description System.Collections.Generic.IEnumerable <T> Methods DetermineValue(IEnumerable<T>) Declaration protected abstract IEnumerable<T> DetermineValue(IEnumerable<T> cachedValue) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> cachedValue Returns Type Description System.Collections.Generic.IEnumerable <T> HasValue() Declaration public override bool HasValue() Returns Type Description System.Boolean Overrides ProcessSceneReferenceBase.HasValue() ToString() Declaration public override string ToString() Returns Type Description System.String Operators Implicit(MultipleSceneReference<T> to List<T>) Declaration public static implicit operator List<T>(MultipleSceneReference<T> reference) Parameters Type Name Description MultipleSceneReference <T> reference Returns Type Description System.Collections.Generic.List <T> Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.ProcessSceneObject.html": {
    "href": "api/VRBuilder.Core.SceneObjects.ProcessSceneObject.html",
    "title": "Class ProcessSceneObject | VR Builder Documentation",
    "keywords": "Class ProcessSceneObject Inheritance System.Object ProcessSceneObject Implements UnityEngine.ISerializationCallbackReceiver ISceneObject ILockable IGuidContainer Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public class ProcessSceneObject : MonoBehaviour, ISceneObject, ILockable, IGuidContainer Constructors ProcessSceneObject() Declaration public ProcessSceneObject() Fields guid Declaration protected Guid guid Field Value Type Description System.Guid guids Declaration protected List<SerializableGuid> guids Field Value Type Description System.Collections.Generic.List < SerializableGuid > Properties GameObject Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject Guid Declaration public Guid Guid { get; } Property Value Type Description System.Guid Guids Declaration public IEnumerable<Guid> Guids { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Guid > IsAlwaysUnlocked Declaration public bool IsAlwaysUnlocked { get; set; } Property Value Type Description System.Boolean IsLocked Declaration public bool IsLocked { get; } Property Value Type Description System.Boolean Properties Declaration public ICollection<ISceneObjectProperty> Properties { get; } Property Value Type Description System.Collections.Generic.ICollection < ISceneObjectProperty > Methods AddGuid(Guid) Declaration public void AddGuid(Guid guid) Parameters Type Name Description System.Guid guid CheckHasProperty(Type) Declaration public bool CheckHasProperty(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean CheckHasProperty<T>() Declaration public bool CheckHasProperty<T>() where T : ISceneObjectProperty Returns Type Description System.Boolean Type Parameters Name Description T GetProperty<T>() Declaration public T GetProperty<T>() where T : ISceneObjectProperty Returns Type Description T Type Parameters Name Description T HasGuid(Guid) Declaration public bool HasGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean Init() Declaration protected void Init() IsGuidAssigned() Declaration protected bool IsGuidAssigned() Returns Type Description System.Boolean MakeUnique() Declaration protected void MakeUnique() OnAfterDeserialize() Declaration public void OnAfterDeserialize() OnBeforeSerialize() Declaration public void OnBeforeSerialize() RemoveGuid(Guid) Declaration public bool RemoveGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean RemoveUnlocker(IStepData) Declaration public bool RemoveUnlocker(IStepData data) Parameters Type Name Description IStepData data Returns Type Description System.Boolean RequestLocked(Boolean, IStepData) Declaration public virtual void RequestLocked(bool lockState, IStepData stepData) Parameters Type Name Description System.Boolean lockState IStepData stepData ResetContextMenu() Declaration protected void ResetContextMenu() ResetUniqueId() Declaration public void ResetUniqueId() SetLocked(Boolean) Declaration public void SetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState SetObjectId(Guid) Declaration public void SetObjectId(Guid guid) Parameters Type Name Description System.Guid guid ToString() Declaration public override string ToString() Returns Type Description System.String ValidateProperties(IEnumerable<Type>) Declaration public void ValidateProperties(IEnumerable<Type> properties) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Type > properties Events GuidAdded Declaration public event EventHandler<GuidContainerEventArgs> GuidAdded Event Type Type Description System.EventHandler < GuidContainerEventArgs > GuidRemoved Declaration public event EventHandler<GuidContainerEventArgs> GuidRemoved Event Type Type Description System.EventHandler < GuidContainerEventArgs > Locked Declaration public event EventHandler<LockStateChangedEventArgs> Locked Event Type Type Description System.EventHandler < LockStateChangedEventArgs > ObjectIdChanged Declaration public event EventHandler<UniqueIdChangedEventArgs> ObjectIdChanged Event Type Type Description System.EventHandler < UniqueIdChangedEventArgs > Unlocked Declaration public event EventHandler<LockStateChangedEventArgs> Unlocked Event Type Type Description System.EventHandler < LockStateChangedEventArgs > Implements UnityEngine.ISerializationCallbackReceiver ISceneObject ILockable IGuidContainer"
  },
  "api/VRBuilder.Core.SceneObjects.ProcessSceneReference-1.html": {
    "href": "api/VRBuilder.Core.SceneObjects.ProcessSceneReference-1.html",
    "title": "Class ProcessSceneReference<T> | VR Builder Documentation",
    "keywords": "Class ProcessSceneReference<T> Inheritance System.Object ProcessSceneReferenceBase ProcessSceneReference<T> MultipleSceneReference<T> SingleSceneReference<T> Implements ICanBeEmpty Inherited Members ProcessSceneReferenceBase.HasValue() ProcessSceneReferenceBase.AddGuid(Guid) ProcessSceneReferenceBase.RemoveGuid(Guid) ProcessSceneReferenceBase.ResetGuids(IEnumerable<Guid>) ProcessSceneReferenceBase.IsEmpty() ProcessSceneReferenceBase.Equals(Object) ProcessSceneReferenceBase.GetHashCode() ProcessSceneReferenceBase.Guids Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public abstract class ProcessSceneReference<T> : ProcessSceneReferenceBase, ICanBeEmpty where T : class Type Parameters Name Description T Constructors ProcessSceneReference() Declaration public ProcessSceneReference() ProcessSceneReference(IEnumerable<Guid>) Declaration public ProcessSceneReference(IEnumerable<Guid> guids) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Guid > guids ProcessSceneReference(Guid) Declaration public ProcessSceneReference(Guid guid) Parameters Type Name Description System.Guid guid Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.html": {
    "href": "api/VRBuilder.Core.SceneObjects.ProcessSceneReferenceBase.html",
    "title": "Class ProcessSceneReferenceBase | VR Builder Documentation",
    "keywords": "Class ProcessSceneReferenceBase Inheritance System.Object ProcessSceneReferenceBase ProcessSceneReference<T> Implements ICanBeEmpty Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public abstract class ProcessSceneReferenceBase : Object, ICanBeEmpty Constructors ProcessSceneReferenceBase() Declaration public ProcessSceneReferenceBase() ProcessSceneReferenceBase(IEnumerable<Guid>) Declaration public ProcessSceneReferenceBase(IEnumerable<Guid> guids) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Guid > guids ProcessSceneReferenceBase(Guid) Declaration public ProcessSceneReferenceBase(Guid guid) Parameters Type Name Description System.Guid guid Properties Guids Declaration public IReadOnlyList<Guid> Guids { get; } Property Value Type Description System.Collections.Generic.IReadOnlyList < System.Guid > Methods AddGuid(Guid) Declaration public void AddGuid(Guid guid) Parameters Type Name Description System.Guid guid Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 HasValue() Declaration public abstract bool HasValue() Returns Type Description System.Boolean IsEmpty() Declaration public virtual bool IsEmpty() Returns Type Description System.Boolean RemoveGuid(Guid) Declaration public bool RemoveGuid(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean ResetGuids(IEnumerable<Guid>) Declaration public void ResetGuids(IEnumerable<Guid> newGuids = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Guid > newGuids Operators Equality(ProcessSceneReferenceBase, ProcessSceneReferenceBase) Declaration public static bool operator ==(ProcessSceneReferenceBase left, ProcessSceneReferenceBase right) Parameters Type Name Description ProcessSceneReferenceBase left ProcessSceneReferenceBase right Returns Type Description System.Boolean Inequality(ProcessSceneReferenceBase, ProcessSceneReferenceBase) Declaration public static bool operator !=(ProcessSceneReferenceBase left, ProcessSceneReferenceBase right) Parameters Type Name Description ProcessSceneReferenceBase left ProcessSceneReferenceBase right Returns Type Description System.Boolean Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.SceneObjectExtensions.html": {
    "href": "api/VRBuilder.Core.SceneObjects.SceneObjectExtensions.html",
    "title": "Class SceneObjectExtensions | VR Builder Documentation",
    "keywords": "Class SceneObjectExtensions Inheritance System.Object SceneObjectExtensions Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public static class SceneObjectExtensions : Object Methods AddProcessProperty(ISceneObject, Type) Declaration public static ISceneObjectProperty AddProcessProperty(this ISceneObject sceneObject, Type processProperty) Parameters Type Name Description ISceneObject sceneObject System.Type processProperty Returns Type Description ISceneObjectProperty AddProcessProperty<T>(ISceneObject) Declaration public static ISceneObjectProperty AddProcessProperty<T>(this ISceneObject sceneObject) Parameters Type Name Description ISceneObject sceneObject Returns Type Description ISceneObjectProperty Type Parameters Name Description T AddProcessPropertyExtensions(ISceneObjectProperty) Declaration public static void AddProcessPropertyExtensions(this ISceneObjectProperty property) Parameters Type Name Description ISceneObjectProperty property GetImplementation(Type, Boolean) Declaration public static Type GetImplementation(Type valueType, bool excludeEditor = true) Parameters Type Name Description System.Type valueType System.Boolean excludeEditor Returns Type Description System.Type RemoveProcessProperty(ISceneObject, Type, Boolean, IEnumerable<Component>) Declaration public static void RemoveProcessProperty(this ISceneObject sceneObject, Type processProperty, bool removeDependencies = false, IEnumerable<Component> excludedFromBeingRemoved = null) Parameters Type Name Description ISceneObject sceneObject System.Type processProperty System.Boolean removeDependencies System.Collections.Generic.IEnumerable < UnityEngine.Component > excludedFromBeingRemoved RemoveProcessProperty(ISceneObject, Type, Component[]) Declaration public static void RemoveProcessProperty(ISceneObject sceneObject, Type valueType, Component[] alreadyAttachedProperties) Parameters Type Name Description ISceneObject sceneObject System.Type valueType UnityEngine.Component [] alreadyAttachedProperties RemoveProcessProperty(ISceneObject, Component, Boolean, IEnumerable<Component>) Declaration public static void RemoveProcessProperty(this ISceneObject sceneObject, Component processProperty, bool removeDependencies = false, IEnumerable<Component> excludedFromBeingRemoved = null) Parameters Type Name Description ISceneObject sceneObject UnityEngine.Component processProperty System.Boolean removeDependencies System.Collections.Generic.IEnumerable < UnityEngine.Component > excludedFromBeingRemoved SceneObjectAutomaticSetup(GameObject, Type, Boolean) Declaration public static void SceneObjectAutomaticSetup(GameObject selectedSceneObject, Type valueType, bool excludeEditor = true) Parameters Type Name Description UnityEngine.GameObject selectedSceneObject System.Type valueType System.Boolean excludeEditor UndoSceneObjectAutomaticSetup(GameObject, Type, Component[]) Declaration public static bool UndoSceneObjectAutomaticSetup(GameObject selectedSceneObject, Type valueType, Component[] alreadyAttachedProperties) Parameters Type Name Description UnityEngine.GameObject selectedSceneObject System.Type valueType UnityEngine.Component [] alreadyAttachedProperties Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Core.SceneObjects.SerializableGuid.html": {
    "href": "api/VRBuilder.Core.SceneObjects.SerializableGuid.html",
    "title": "Class SerializableGuid | VR Builder Documentation",
    "keywords": "Class SerializableGuid Inheritance System.Object SerializableGuid Implements System.IEquatable < SerializableGuid > System.IEquatable < System.Guid > Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public class SerializableGuid : Object Constructors SerializableGuid(Byte[]) Declaration public SerializableGuid(byte[] bytes) Parameters Type Name Description System.Byte [] bytes SerializableGuid(Guid) Declaration public SerializableGuid(Guid guid) Parameters Type Name Description System.Guid guid Properties Guid Declaration public Guid Guid { get; set; } Property Value Type Description System.Guid Methods Equals(Guid) Declaration public bool Equals(Guid otherGuid) Parameters Type Name Description System.Guid otherGuid Returns Type Description System.Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Equals(SerializableGuid) Declaration public bool Equals(SerializableGuid other) Parameters Type Name Description SerializableGuid other Returns Type Description System.Boolean GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 IsValid() Declaration public bool IsValid() Returns Type Description System.Boolean IsValid(SerializableGuid) Declaration public static bool IsValid(SerializableGuid serializableGuid) Parameters Type Name Description SerializableGuid serializableGuid Returns Type Description System.Boolean SetGuid(Guid) Declaration public void SetGuid(Guid guid) Parameters Type Name Description System.Guid guid ToString() Declaration public override string ToString() Returns Type Description System.String Operators Equality(SerializableGuid, SerializableGuid) Declaration public static bool operator ==(SerializableGuid left, SerializableGuid right) Parameters Type Name Description SerializableGuid left SerializableGuid right Returns Type Description System.Boolean Inequality(SerializableGuid, SerializableGuid) Declaration public static bool operator !=(SerializableGuid left, SerializableGuid right) Parameters Type Name Description SerializableGuid left SerializableGuid right Returns Type Description System.Boolean Implements System.IEquatable<> System.IEquatable<>"
  },
  "api/VRBuilder.Core.SceneObjects.SingleSceneObjectReference.html": {
    "href": "api/VRBuilder.Core.SceneObjects.SingleSceneObjectReference.html",
    "title": "Class SingleSceneObjectReference | VR Builder Documentation",
    "keywords": "Class SingleSceneObjectReference Inheritance System.Object ProcessSceneReferenceBase ProcessSceneReference < ISceneObject > SingleSceneReference < ISceneObject > SingleSceneObjectReference Implements ICanBeEmpty Inherited Members SingleSceneReference<ISceneObject>.HasValue() SingleSceneReference<ISceneObject>.ToString() SingleSceneReference<ISceneObject>.Value ProcessSceneReferenceBase.AddGuid(Guid) ProcessSceneReferenceBase.RemoveGuid(Guid) ProcessSceneReferenceBase.ResetGuids(IEnumerable<Guid>) ProcessSceneReferenceBase.IsEmpty() ProcessSceneReferenceBase.Equals(Object) ProcessSceneReferenceBase.GetHashCode() ProcessSceneReferenceBase.Guids Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public class SingleSceneObjectReference : SingleSceneReference<ISceneObject>, ICanBeEmpty Constructors SingleSceneObjectReference() Declaration public SingleSceneObjectReference() SingleSceneObjectReference(IEnumerable<Guid>) Declaration public SingleSceneObjectReference(IEnumerable<Guid> guids) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Guid > guids SingleSceneObjectReference(Guid) Declaration public SingleSceneObjectReference(Guid guid) Parameters Type Name Description System.Guid guid Methods DetermineValue(ISceneObject) Declaration protected override ISceneObject DetermineValue(ISceneObject cached) Parameters Type Name Description ISceneObject cached Returns Type Description ISceneObject Overrides VRBuilder.Core.SceneObjects.SingleSceneReference<VRBuilder.Core.SceneObjects.ISceneObject>.DetermineValue(VRBuilder.Core.SceneObjects.ISceneObject) Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.SingleScenePropertyReference-1.html": {
    "href": "api/VRBuilder.Core.SceneObjects.SingleScenePropertyReference-1.html",
    "title": "Class SingleScenePropertyReference<T> | VR Builder Documentation",
    "keywords": "Class SingleScenePropertyReference<T> Inheritance System.Object ProcessSceneReferenceBase ProcessSceneReference <T> SingleSceneReference <T> SingleScenePropertyReference<T> Implements ICanBeEmpty Inherited Members SingleSceneReference<T>.HasValue() SingleSceneReference<T>.ToString() SingleSceneReference<T>.Value ProcessSceneReferenceBase.AddGuid(Guid) ProcessSceneReferenceBase.RemoveGuid(Guid) ProcessSceneReferenceBase.ResetGuids(IEnumerable<Guid>) ProcessSceneReferenceBase.IsEmpty() ProcessSceneReferenceBase.Equals(Object) ProcessSceneReferenceBase.GetHashCode() ProcessSceneReferenceBase.Guids Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public class SingleScenePropertyReference<T> : SingleSceneReference<T>, ICanBeEmpty where T : class, ISceneObjectProperty Type Parameters Name Description T Constructors SingleScenePropertyReference() Declaration public SingleScenePropertyReference() SingleScenePropertyReference(IEnumerable<Guid>) Declaration public SingleScenePropertyReference(IEnumerable<Guid> guids) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Guid > guids SingleScenePropertyReference(Guid) Declaration public SingleScenePropertyReference(Guid guid) Parameters Type Name Description System.Guid guid Methods DetermineValue(T) Declaration protected override T DetermineValue(T cachedValue) Parameters Type Name Description T cachedValue Returns Type Description T Overrides VRBuilder.Core.SceneObjects.SingleSceneReference<T>.DetermineValue(T) Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.SingleSceneReference-1.html": {
    "href": "api/VRBuilder.Core.SceneObjects.SingleSceneReference-1.html",
    "title": "Class SingleSceneReference<T> | VR Builder Documentation",
    "keywords": "Class SingleSceneReference<T> Inheritance System.Object ProcessSceneReferenceBase ProcessSceneReference <T> SingleSceneReference<T> SingleSceneObjectReference SingleScenePropertyReference<T> Implements ICanBeEmpty Inherited Members ProcessSceneReferenceBase.AddGuid(Guid) ProcessSceneReferenceBase.RemoveGuid(Guid) ProcessSceneReferenceBase.ResetGuids(IEnumerable<Guid>) ProcessSceneReferenceBase.IsEmpty() ProcessSceneReferenceBase.Equals(Object) ProcessSceneReferenceBase.GetHashCode() ProcessSceneReferenceBase.Guids Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public abstract class SingleSceneReference<T> : ProcessSceneReference<T>, ICanBeEmpty where T : class Type Parameters Name Description T Constructors SingleSceneReference() Declaration public SingleSceneReference() SingleSceneReference(IEnumerable<Guid>) Declaration public SingleSceneReference(IEnumerable<Guid> guids) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Guid > guids SingleSceneReference(Guid) Declaration public SingleSceneReference(Guid guid) Parameters Type Name Description System.Guid guid Properties Value Declaration public T Value { get; } Property Value Type Description T Methods DetermineValue(T) Declaration protected abstract T DetermineValue(T cachedValue) Parameters Type Name Description T cachedValue Returns Type Description T HasValue() Declaration public override bool HasValue() Returns Type Description System.Boolean Overrides ProcessSceneReferenceBase.HasValue() ToString() Declaration public override string ToString() Returns Type Description System.String Implements ICanBeEmpty"
  },
  "api/VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs.html": {
    "href": "api/VRBuilder.Core.SceneObjects.UniqueIdChangedEventArgs.html",
    "title": "Class UniqueIdChangedEventArgs | VR Builder Documentation",
    "keywords": "Class UniqueIdChangedEventArgs Inheritance System.Object UniqueIdChangedEventArgs Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public class UniqueIdChangedEventArgs : EventArgs Constructors UniqueIdChangedEventArgs(Guid, Guid) Declaration public UniqueIdChangedEventArgs(Guid previousId, Guid newId) Parameters Type Name Description System.Guid previousId System.Guid newId Fields NewId Declaration public readonly Guid NewId Field Value Type Description System.Guid PreviousId Declaration public readonly Guid PreviousId Field Value Type Description System.Guid"
  },
  "api/VRBuilder.Core.SceneObjects.UserSceneObject.html": {
    "href": "api/VRBuilder.Core.SceneObjects.UserSceneObject.html",
    "title": "Class UserSceneObject | VR Builder Documentation",
    "keywords": "Class UserSceneObject Inheritance System.Object UserSceneObject Implements IXRRigTransform Namespace : VRBuilder.Core.SceneObjects Assembly : VRBuilder.Core.dll Syntax public class UserSceneObject : MonoBehaviour, IXRRigTransform Constructors UserSceneObject() Declaration public UserSceneObject() Properties Base Declaration public Transform Base { get; } Property Value Type Description UnityEngine.Transform Head Declaration public Transform Head { get; } Property Value Type Description UnityEngine.Transform LeftHand Declaration public Transform LeftHand { get; } Property Value Type Description UnityEngine.Transform RightHand Declaration public Transform RightHand { get; } Property Value Type Description UnityEngine.Transform Implements IXRRigTransform"
  },
  "api/VRBuilder.Core.Serialization.AnimationCurveConverter.html": {
    "href": "api/VRBuilder.Core.Serialization.AnimationCurveConverter.html",
    "title": "Class AnimationCurveConverter | VR Builder Documentation",
    "keywords": "Class AnimationCurveConverter Inheritance System.Object AnimationCurveConverter Namespace : VRBuilder.Core.Serialization Assembly : VRBuilder.Core.dll Syntax [NewtonsoftConverter(1024)] public class AnimationCurveConverter : JsonConverter Constructors AnimationCurveConverter() Declaration public AnimationCurveConverter() Methods CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description System.Type objectType Returns Type Description System.Boolean ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader System.Type objectType System.Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description System.Object WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer System.Object value Newtonsoft.Json.JsonSerializer serializer"
  },
  "api/VRBuilder.Core.Serialization.html": {
    "href": "api/VRBuilder.Core.Serialization.html",
    "title": "Namespace VRBuilder.Core.Serialization | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Serialization Classes AnimationCurveConverter ImprovedNewtonsoftJsonProcessSerializer KeyframeConverter NewtonsoftConverterAttribute NewtonsoftJsonProcessSerializerV3 NewtonsoftJsonProcessSerializerV4 Interfaces IProcessSerializer"
  },
  "api/VRBuilder.Core.Serialization.ImprovedNewtonsoftJsonProcessSerializer.html": {
    "href": "api/VRBuilder.Core.Serialization.ImprovedNewtonsoftJsonProcessSerializer.html",
    "title": "Class ImprovedNewtonsoftJsonProcessSerializer | VR Builder Documentation",
    "keywords": "Class ImprovedNewtonsoftJsonProcessSerializer Inheritance System.Object NewtonsoftJsonProcessSerializer ImprovedNewtonsoftJsonProcessSerializer Implements IProcessSerializer Inherited Members NewtonsoftJsonProcessSerializer.Serialize(IEntity, JsonSerializerSettings) NewtonsoftJsonProcessSerializer.Deserialize<T>(Byte[], JsonSerializerSettings) NewtonsoftJsonProcessSerializer.StepToByteArray(IStep) NewtonsoftJsonProcessSerializer.StepFromByteArray(Byte[]) NewtonsoftJsonProcessSerializer.ChapterToByteArray(IChapter) NewtonsoftJsonProcessSerializer.ChapterFromByteArray(Byte[]) NewtonsoftJsonProcessSerializer.ManifestToByteArray(IProcessAssetManifest) NewtonsoftJsonProcessSerializer.ManifestFromByteArray(Byte[]) NewtonsoftJsonProcessSerializer.EntityToByteArray(IEntity) NewtonsoftJsonProcessSerializer.EntityFromByteArray(Byte[]) NewtonsoftJsonProcessSerializer.ProcessSerializerSettings NewtonsoftJsonProcessSerializer.FileFormat Namespace : VRBuilder.Core.Serialization Assembly : VRBuilder.Core.dll Syntax public class ImprovedNewtonsoftJsonProcessSerializer : NewtonsoftJsonProcessSerializer, IProcessSerializer Constructors ImprovedNewtonsoftJsonProcessSerializer() Declaration public ImprovedNewtonsoftJsonProcessSerializer() Properties Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides NewtonsoftJsonProcessSerializer.Name Version Declaration protected override int Version { get; } Property Value Type Description System.Int32 Overrides NewtonsoftJsonProcessSerializer.Version Methods ProcessFromByteArray(Byte[]) Declaration public override IProcess ProcessFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IProcess Overrides NewtonsoftJsonProcessSerializer.ProcessFromByteArray(Byte[]) ProcessToByteArray(IProcess) Declaration public override byte[] ProcessToByteArray(IProcess process) Parameters Type Name Description IProcess process Returns Type Description System.Byte [] Overrides NewtonsoftJsonProcessSerializer.ProcessToByteArray(IProcess) Implements IProcessSerializer"
  },
  "api/VRBuilder.Core.Serialization.IProcessSerializer.html": {
    "href": "api/VRBuilder.Core.Serialization.IProcessSerializer.html",
    "title": "Interface IProcessSerializer | VR Builder Documentation",
    "keywords": "Interface IProcessSerializer Namespace : VRBuilder.Core.Serialization Assembly : VRBuilder.Core.dll Syntax public interface IProcessSerializer Properties FileFormat Declaration string FileFormat { get; } Property Value Type Description System.String Name Declaration string Name { get; } Property Value Type Description System.String Methods ChapterFromByteArray(Byte[]) Declaration IChapter ChapterFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IChapter ChapterToByteArray(IChapter) Declaration byte[] ChapterToByteArray(IChapter chapter) Parameters Type Name Description IChapter chapter Returns Type Description System.Byte [] EntityFromByteArray(Byte[]) Declaration IEntity EntityFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IEntity EntityToByteArray(IEntity) Declaration byte[] EntityToByteArray(IEntity entity) Parameters Type Name Description IEntity entity Returns Type Description System.Byte [] ManifestFromByteArray(Byte[]) Declaration IProcessAssetManifest ManifestFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IProcessAssetManifest ManifestToByteArray(IProcessAssetManifest) Declaration byte[] ManifestToByteArray(IProcessAssetManifest manifest) Parameters Type Name Description IProcessAssetManifest manifest Returns Type Description System.Byte [] ProcessFromByteArray(Byte[]) Declaration IProcess ProcessFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IProcess ProcessToByteArray(IProcess) Declaration byte[] ProcessToByteArray(IProcess target) Parameters Type Name Description IProcess target Returns Type Description System.Byte [] StepFromByteArray(Byte[]) Declaration IStep StepFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IStep StepToByteArray(IStep) Declaration byte[] StepToByteArray(IStep step) Parameters Type Name Description IStep step Returns Type Description System.Byte []"
  },
  "api/VRBuilder.Core.Serialization.KeyframeConverter.html": {
    "href": "api/VRBuilder.Core.Serialization.KeyframeConverter.html",
    "title": "Class KeyframeConverter | VR Builder Documentation",
    "keywords": "Class KeyframeConverter Inheritance System.Object KeyframeConverter Namespace : VRBuilder.Core.Serialization Assembly : VRBuilder.Core.dll Syntax [NewtonsoftConverter(1024)] public class KeyframeConverter : JsonConverter Constructors KeyframeConverter() Declaration public KeyframeConverter() Methods CanConvert(Type) Declaration public override bool CanConvert(Type objectType) Parameters Type Name Description System.Type objectType Returns Type Description System.Boolean ReadJson(JsonReader, Type, Object, JsonSerializer) Declaration public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonReader reader System.Type objectType System.Object existingValue Newtonsoft.Json.JsonSerializer serializer Returns Type Description System.Object WriteJson(JsonWriter, Object, JsonSerializer) Declaration public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) Parameters Type Name Description Newtonsoft.Json.JsonWriter writer System.Object value Newtonsoft.Json.JsonSerializer serializer"
  },
  "api/VRBuilder.Core.Serialization.NewtonsoftConverterAttribute.html": {
    "href": "api/VRBuilder.Core.Serialization.NewtonsoftConverterAttribute.html",
    "title": "Class NewtonsoftConverterAttribute | VR Builder Documentation",
    "keywords": "Class NewtonsoftConverterAttribute Inheritance System.Object NewtonsoftConverterAttribute Namespace : VRBuilder.Core.Serialization Assembly : VRBuilder.Core.dll Syntax public class NewtonsoftConverterAttribute : Attribute Constructors NewtonsoftConverterAttribute(Int32) Declaration public NewtonsoftConverterAttribute(int priority = 1024) Parameters Type Name Description System.Int32 priority Properties Priority Declaration public int Priority { get; } Property Value Type Description System.Int32"
  },
  "api/VRBuilder.Core.Serialization.NewtonsoftJson.html": {
    "href": "api/VRBuilder.Core.Serialization.NewtonsoftJson.html",
    "title": "Namespace VRBuilder.Core.Serialization.NewtonsoftJson | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Serialization.NewtonsoftJson Classes NewtonsoftJsonProcessSerializer"
  },
  "api/VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.html": {
    "href": "api/VRBuilder.Core.Serialization.NewtonsoftJson.NewtonsoftJsonProcessSerializer.html",
    "title": "Class NewtonsoftJsonProcessSerializer | VR Builder Documentation",
    "keywords": "Class NewtonsoftJsonProcessSerializer Inheritance System.Object NewtonsoftJsonProcessSerializer ImprovedNewtonsoftJsonProcessSerializer NewtonsoftJsonProcessSerializerV3 NewtonsoftJsonProcessSerializerV4 Implements IProcessSerializer Namespace : VRBuilder.Core.Serialization.NewtonsoftJson Assembly : VRBuilder.Core.dll Syntax public class NewtonsoftJsonProcessSerializer : Object, IProcessSerializer Constructors NewtonsoftJsonProcessSerializer() Declaration public NewtonsoftJsonProcessSerializer() Properties FileFormat Declaration public virtual string FileFormat { get; } Property Value Type Description System.String Name Declaration public virtual string Name { get; } Property Value Type Description System.String ProcessSerializerSettings Declaration public static JsonSerializerSettings ProcessSerializerSettings { get; } Property Value Type Description Newtonsoft.Json.JsonSerializerSettings Version Declaration protected virtual int Version { get; } Property Value Type Description System.Int32 Methods ChapterFromByteArray(Byte[]) Declaration public virtual IChapter ChapterFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IChapter ChapterToByteArray(IChapter) Declaration public virtual byte[] ChapterToByteArray(IChapter chapter) Parameters Type Name Description IChapter chapter Returns Type Description System.Byte [] Deserialize<T>(Byte[], JsonSerializerSettings) Declaration protected T Deserialize<T>(byte[] data, JsonSerializerSettings settings) Parameters Type Name Description System.Byte [] data Newtonsoft.Json.JsonSerializerSettings settings Returns Type Description T Type Parameters Name Description T EntityFromByteArray(Byte[]) Declaration public virtual IEntity EntityFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IEntity EntityToByteArray(IEntity) Declaration public virtual byte[] EntityToByteArray(IEntity entity) Parameters Type Name Description IEntity entity Returns Type Description System.Byte [] ManifestFromByteArray(Byte[]) Declaration public virtual IProcessAssetManifest ManifestFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IProcessAssetManifest ManifestToByteArray(IProcessAssetManifest) Declaration public virtual byte[] ManifestToByteArray(IProcessAssetManifest manifest) Parameters Type Name Description IProcessAssetManifest manifest Returns Type Description System.Byte [] ProcessFromByteArray(Byte[]) Declaration public virtual IProcess ProcessFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IProcess ProcessToByteArray(IProcess) Declaration public virtual byte[] ProcessToByteArray(IProcess process) Parameters Type Name Description IProcess process Returns Type Description System.Byte [] Serialize(IEntity, JsonSerializerSettings) Declaration protected byte[] Serialize(IEntity entity, JsonSerializerSettings settings) Parameters Type Name Description IEntity entity Newtonsoft.Json.JsonSerializerSettings settings Returns Type Description System.Byte [] StepFromByteArray(Byte[]) Declaration public virtual IStep StepFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IStep StepToByteArray(IStep) Declaration public virtual byte[] StepToByteArray(IStep step) Parameters Type Name Description IStep step Returns Type Description System.Byte [] Implements IProcessSerializer"
  },
  "api/VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV3.html": {
    "href": "api/VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV3.html",
    "title": "Class NewtonsoftJsonProcessSerializerV3 | VR Builder Documentation",
    "keywords": "Class NewtonsoftJsonProcessSerializerV3 Inheritance System.Object NewtonsoftJsonProcessSerializer NewtonsoftJsonProcessSerializerV3 Implements IProcessSerializer Inherited Members NewtonsoftJsonProcessSerializer.Serialize(IEntity, JsonSerializerSettings) NewtonsoftJsonProcessSerializer.Deserialize<T>(Byte[], JsonSerializerSettings) NewtonsoftJsonProcessSerializer.StepToByteArray(IStep) NewtonsoftJsonProcessSerializer.StepFromByteArray(Byte[]) NewtonsoftJsonProcessSerializer.ChapterToByteArray(IChapter) NewtonsoftJsonProcessSerializer.ChapterFromByteArray(Byte[]) NewtonsoftJsonProcessSerializer.ManifestToByteArray(IProcessAssetManifest) NewtonsoftJsonProcessSerializer.ManifestFromByteArray(Byte[]) NewtonsoftJsonProcessSerializer.EntityToByteArray(IEntity) NewtonsoftJsonProcessSerializer.EntityFromByteArray(Byte[]) NewtonsoftJsonProcessSerializer.ProcessSerializerSettings NewtonsoftJsonProcessSerializer.FileFormat Namespace : VRBuilder.Core.Serialization Assembly : VRBuilder.Core.dll Syntax public class NewtonsoftJsonProcessSerializerV3 : NewtonsoftJsonProcessSerializer, IProcessSerializer Constructors NewtonsoftJsonProcessSerializerV3() Declaration public NewtonsoftJsonProcessSerializerV3() Properties Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides NewtonsoftJsonProcessSerializer.Name Version Declaration protected override int Version { get; } Property Value Type Description System.Int32 Overrides NewtonsoftJsonProcessSerializer.Version Methods ProcessFromByteArray(Byte[]) Declaration public override IProcess ProcessFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IProcess Overrides NewtonsoftJsonProcessSerializer.ProcessFromByteArray(Byte[]) ProcessToByteArray(IProcess) Declaration public override byte[] ProcessToByteArray(IProcess process) Parameters Type Name Description IProcess process Returns Type Description System.Byte [] Overrides NewtonsoftJsonProcessSerializer.ProcessToByteArray(IProcess) Implements IProcessSerializer"
  },
  "api/VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.html": {
    "href": "api/VRBuilder.Core.Serialization.NewtonsoftJsonProcessSerializerV4.html",
    "title": "Class NewtonsoftJsonProcessSerializerV4 | VR Builder Documentation",
    "keywords": "Class NewtonsoftJsonProcessSerializerV4 Inheritance System.Object NewtonsoftJsonProcessSerializer NewtonsoftJsonProcessSerializerV4 Implements IProcessSerializer Inherited Members NewtonsoftJsonProcessSerializer.Serialize(IEntity, JsonSerializerSettings) NewtonsoftJsonProcessSerializer.Deserialize<T>(Byte[], JsonSerializerSettings) NewtonsoftJsonProcessSerializer.StepToByteArray(IStep) NewtonsoftJsonProcessSerializer.StepFromByteArray(Byte[]) NewtonsoftJsonProcessSerializer.ManifestToByteArray(IProcessAssetManifest) NewtonsoftJsonProcessSerializer.ManifestFromByteArray(Byte[]) NewtonsoftJsonProcessSerializer.EntityToByteArray(IEntity) NewtonsoftJsonProcessSerializer.EntityFromByteArray(Byte[]) NewtonsoftJsonProcessSerializer.ProcessSerializerSettings NewtonsoftJsonProcessSerializer.FileFormat Namespace : VRBuilder.Core.Serialization Assembly : VRBuilder.Core.dll Syntax public class NewtonsoftJsonProcessSerializerV4 : NewtonsoftJsonProcessSerializer, IProcessSerializer Constructors NewtonsoftJsonProcessSerializerV4() Declaration public NewtonsoftJsonProcessSerializerV4() Properties Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides NewtonsoftJsonProcessSerializer.Name Version Declaration protected override int Version { get; } Property Value Type Description System.Int32 Overrides NewtonsoftJsonProcessSerializer.Version Methods ChapterFromByteArray(Byte[]) Declaration public override IChapter ChapterFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IChapter Overrides NewtonsoftJsonProcessSerializer.ChapterFromByteArray(Byte[]) ChapterToByteArray(IChapter) Declaration public override byte[] ChapterToByteArray(IChapter chapter) Parameters Type Name Description IChapter chapter Returns Type Description System.Byte [] Overrides NewtonsoftJsonProcessSerializer.ChapterToByteArray(IChapter) ProcessFromByteArray(Byte[]) Declaration public override IProcess ProcessFromByteArray(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description IProcess Overrides NewtonsoftJsonProcessSerializer.ProcessFromByteArray(Byte[]) ProcessToByteArray(IProcess) Declaration public override byte[] ProcessToByteArray(IProcess process) Parameters Type Name Description IProcess process Returns Type Description System.Byte [] Overrides NewtonsoftJsonProcessSerializer.ProcessToByteArray(IProcess) Implements IProcessSerializer"
  },
  "api/VRBuilder.Core.Settings.AdvancedSettings.html": {
    "href": "api/VRBuilder.Core.Settings.AdvancedSettings.html",
    "title": "Class AdvancedSettings | VR Builder Documentation",
    "keywords": "Class AdvancedSettings Inheritance System.Object SettingsObject < AdvancedSettings > AdvancedSettings Inherited Members SettingsObject<AdvancedSettings>.Save() SettingsObject<AdvancedSettings>.Finalize() SettingsObject<AdvancedSettings>.Instance Namespace : VRBuilder.Core.Settings Assembly : VRBuilder.Core.dll Syntax public class AdvancedSettings : SettingsObject<AdvancedSettings> Constructors AdvancedSettings() Declaration public AdvancedSettings() Fields AutoAddProcessSceneObject Declaration public bool AutoAddProcessSceneObject Field Value Type Description System.Boolean AutoAddProperties Declaration public bool AutoAddProperties Field Value Type Description System.Boolean ShowExpertInfo Declaration public bool ShowExpertInfo Field Value Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Settings.ComponentSettings-2.html": {
    "href": "api/VRBuilder.Core.Settings.ComponentSettings-2.html",
    "title": "Class ComponentSettings<TObject, TSettings> | VR Builder Documentation",
    "keywords": "Class ComponentSettings<TObject, TSettings> Inheritance System.Object SettingsObject <TSettings> ComponentSettings<TObject, TSettings> OutlineSettings SnapZoneSettings Inherited Members SettingsObject<TSettings>.Save() SettingsObject<TSettings>.Finalize() SettingsObject<TSettings>.Instance Namespace : VRBuilder.Core.Settings Assembly : VRBuilder.Core.dll Syntax public abstract class ComponentSettings<TObject, TSettings> : SettingsObject<TSettings> where TObject : Object where TSettings : ScriptableObject, new() Type Parameters Name Description TObject TSettings Constructors ComponentSettings() Declaration protected ComponentSettings() Methods ApplySettings(TObject) Declaration public abstract void ApplySettings(TObject target) Parameters Type Name Description TObject target"
  },
  "api/VRBuilder.Core.Settings.html": {
    "href": "api/VRBuilder.Core.Settings.html",
    "title": "Namespace VRBuilder.Core.Settings | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Settings Classes AdvancedSettings ComponentSettings<TObject, TSettings> InteractionComponentSettings InteractionSettings LanguageSettings SceneObjectGroups SceneObjectGroups.SceneObjectGroup SettingsObject<T>"
  },
  "api/VRBuilder.Core.Settings.InteractionComponentSettings.html": {
    "href": "api/VRBuilder.Core.Settings.InteractionComponentSettings.html",
    "title": "Class InteractionComponentSettings | VR Builder Documentation",
    "keywords": "Class InteractionComponentSettings Inheritance System.Object SettingsObject < InteractionComponentSettings > InteractionComponentSettings Inherited Members SettingsObject<InteractionComponentSettings>.Save() SettingsObject<InteractionComponentSettings>.Finalize() SettingsObject<InteractionComponentSettings>.Instance Namespace : VRBuilder.Core.Settings Assembly : VRBuilder.Core.dll Syntax public class InteractionComponentSettings : SettingsObject<InteractionComponentSettings> Constructors InteractionComponentSettings() Declaration public InteractionComponentSettings() Fields EnableXRInteractionComponent Declaration public bool EnableXRInteractionComponent Field Value Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Settings.InteractionSettings.html": {
    "href": "api/VRBuilder.Core.Settings.InteractionSettings.html",
    "title": "Class InteractionSettings | VR Builder Documentation",
    "keywords": "Class InteractionSettings Inheritance System.Object SettingsObject < InteractionSettings > InteractionSettings Inherited Members SettingsObject<InteractionSettings>.Save() SettingsObject<InteractionSettings>.Finalize() SettingsObject<InteractionSettings>.Instance Namespace : VRBuilder.Core.Settings Assembly : VRBuilder.Core.dll Syntax public class InteractionSettings : SettingsObject<InteractionSettings> Constructors InteractionSettings() Declaration public InteractionSettings() Fields MakeGrabbablesKinematic Declaration public bool MakeGrabbablesKinematic Field Value Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Settings.LanguageSettings.html": {
    "href": "api/VRBuilder.Core.Settings.LanguageSettings.html",
    "title": "Class LanguageSettings | VR Builder Documentation",
    "keywords": "Class LanguageSettings Inheritance System.Object SettingsObject < LanguageSettings > LanguageSettings Inherited Members SettingsObject<LanguageSettings>.Save() SettingsObject<LanguageSettings>.Finalize() SettingsObject<LanguageSettings>.Instance Namespace : VRBuilder.Core.Settings Assembly : VRBuilder.Core.dll Syntax public class LanguageSettings : SettingsObject<LanguageSettings> Constructors LanguageSettings() Declaration public LanguageSettings() Fields ApplicationLanguage Declaration public string ApplicationLanguage Field Value Type Description System.String Properties ActiveOrDefaultLanguage Declaration public string ActiveOrDefaultLanguage { get; } Property Value Type Description System.String ActiveOrDefaultLocale Declaration public Locale ActiveOrDefaultLocale { get; } Property Value Type Description UnityEngine.Localization.Locale Methods GetLocaleFromString(String) Declaration public Locale GetLocaleFromString(string languageOrCode) Parameters Type Name Description System.String languageOrCode Returns Type Description UnityEngine.Localization.Locale"
  },
  "api/VRBuilder.Core.Settings.SceneObjectGroups.html": {
    "href": "api/VRBuilder.Core.Settings.SceneObjectGroups.html",
    "title": "Class SceneObjectGroups | VR Builder Documentation",
    "keywords": "Class SceneObjectGroups Inheritance System.Object SettingsObject < SceneObjectGroups > SceneObjectGroups Inherited Members SettingsObject<SceneObjectGroups>.Save() SettingsObject<SceneObjectGroups>.Finalize() SettingsObject<SceneObjectGroups>.Instance Namespace : VRBuilder.Core.Settings Assembly : VRBuilder.Core.dll Syntax public class SceneObjectGroups : SettingsObject<SceneObjectGroups> Constructors SceneObjectGroups() Declaration public SceneObjectGroups() Fields GuidNotRegisteredText Declaration public const string GuidNotRegisteredText = \"[<i>Missing Group</i>]\" Field Value Type Description System.String UniqueGuidName Declaration public const string UniqueGuidName = \"[Object ID]\" Field Value Type Description System.String UniqueGuidNameItalic Declaration public const string UniqueGuidNameItalic = \"[<i>Object ID</i>]\" Field Value Type Description System.String Properties Groups Declaration public IEnumerable<SceneObjectGroups.SceneObjectGroup> Groups { get; } Property Value Type Description System.Collections.Generic.IEnumerable < SceneObjectGroups.SceneObjectGroup > Methods CanCreateGroup(String) Declaration public bool CanCreateGroup(string label) Parameters Type Name Description System.String label Returns Type Description System.Boolean CreateGroup(String, Guid) Declaration public SceneObjectGroups.SceneObjectGroup CreateGroup(string label, Guid guid) Parameters Type Name Description System.String label System.Guid guid Returns Type Description SceneObjectGroups.SceneObjectGroup GetLabel(Guid) Declaration public string GetLabel(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.String GroupExists(Guid) Declaration public bool GroupExists(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean RemoveGroup(Guid) Declaration public bool RemoveGroup(Guid guid) Parameters Type Name Description System.Guid guid Returns Type Description System.Boolean RenameGroup(SceneObjectGroups.SceneObjectGroup, String) Declaration public bool RenameGroup(SceneObjectGroups.SceneObjectGroup group, string label) Parameters Type Name Description SceneObjectGroups.SceneObjectGroup group System.String label Returns Type Description System.Boolean TryGetGroup(Guid, out SceneObjectGroups.SceneObjectGroup) Declaration public bool TryGetGroup(Guid guid, out SceneObjectGroups.SceneObjectGroup group) Parameters Type Name Description System.Guid guid SceneObjectGroups.SceneObjectGroup group Returns Type Description System.Boolean TryGetGroup(String, out SceneObjectGroups.SceneObjectGroup) Declaration public bool TryGetGroup(string label, out SceneObjectGroups.SceneObjectGroup group) Parameters Type Name Description System.String label SceneObjectGroups.SceneObjectGroup group Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup.html": {
    "href": "api/VRBuilder.Core.Settings.SceneObjectGroups.SceneObjectGroup.html",
    "title": "Class SceneObjectGroups.SceneObjectGroup | VR Builder Documentation",
    "keywords": "Class SceneObjectGroups.SceneObjectGroup Inheritance System.Object SceneObjectGroups.SceneObjectGroup Namespace : VRBuilder.Core.Settings Assembly : VRBuilder.Core.dll Syntax public class SceneObjectGroup : Object Constructors SceneObjectGroup(String) Declaration public SceneObjectGroup(string label) Parameters Type Name Description System.String label SceneObjectGroup(String, Guid) Declaration public SceneObjectGroup(string label, Guid guid) Parameters Type Name Description System.String label System.Guid guid Properties Guid Declaration public Guid Guid { get; } Property Value Type Description System.Guid Label Declaration public string Label { get; } Property Value Type Description System.String Methods Rename(String) Declaration public void Rename(string label) Parameters Type Name Description System.String label"
  },
  "api/VRBuilder.Core.Settings.SettingsObject-1.html": {
    "href": "api/VRBuilder.Core.Settings.SettingsObject-1.html",
    "title": "Class SettingsObject<T> | VR Builder Documentation",
    "keywords": "Class SettingsObject<T> Inheritance System.Object SettingsObject<T> DefaultTextToSpeechConfiguration AdvancedSettings ComponentSettings<TObject, TSettings> InteractionComponentSettings InteractionSettings LanguageSettings SceneObjectGroups MicrosoftTextToSpeechConfiguration TextToSpeechSettings LifeCycleLoggingConfig VoiceChatSettings UserRolesSettings Namespace : VRBuilder.Core.Settings Assembly : VRBuilder.Core.dll Syntax public class SettingsObject<T> : ScriptableObject where T : ScriptableObject, new() Type Parameters Name Description T Constructors SettingsObject() Declaration public SettingsObject() Properties Instance Declaration public static T Instance { get; } Property Value Type Description T Methods Finalize() Declaration protected override void Finalize() Save() Declaration public void Save()"
  },
  "api/VRBuilder.Core.Setup.html": {
    "href": "api/VRBuilder.Core.Setup.html",
    "title": "Namespace VRBuilder.Core.Setup | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Setup Classes LayerSet Interfaces ILayerConfigurator"
  },
  "api/VRBuilder.Core.Setup.ILayerConfigurator.html": {
    "href": "api/VRBuilder.Core.Setup.ILayerConfigurator.html",
    "title": "Interface ILayerConfigurator | VR Builder Documentation",
    "keywords": "Interface ILayerConfigurator Namespace : VRBuilder.Core.Setup Assembly : VRBuilder.Core.dll Syntax public interface ILayerConfigurator Properties LayerSet Declaration LayerSet LayerSet { get; } Property Value Type Description LayerSet Methods ConfigureLayers(String, String) Declaration void ConfigureLayers(string interactionLayerName, string raycastLayerName) Parameters Type Name Description System.String interactionLayerName System.String raycastLayerName"
  },
  "api/VRBuilder.Core.Setup.LayerSet.html": {
    "href": "api/VRBuilder.Core.Setup.LayerSet.html",
    "title": "Class LayerSet | VR Builder Documentation",
    "keywords": "Class LayerSet Inheritance System.Object LayerSet Namespace : VRBuilder.Core.Setup Assembly : VRBuilder.Core.dll Syntax public sealed class LayerSet : Enum Fields Interaction Declaration public const LayerSet Interaction Field Value Type Description LayerSet None Declaration public const LayerSet None Field Value Type Description LayerSet Teleportation Declaration public const LayerSet Teleportation Field Value Type Description LayerSet UI Declaration public const LayerSet UI Field Value Type Description LayerSet value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/VRBuilder.Core.Stage.html": {
    "href": "api/VRBuilder.Core.Stage.html",
    "title": "Class Stage | VR Builder Documentation",
    "keywords": "Class Stage Inheritance System.Object Stage Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public sealed class Stage : Enum Fields Aborting Declaration public const Stage Aborting Field Value Type Description Stage Activating Declaration public const Stage Activating Field Value Type Description Stage Active Declaration public const Stage Active Field Value Type Description Stage Deactivating Declaration public const Stage Deactivating Field Value Type Description Stage Inactive Declaration public const Stage Inactive Field Value Type Description Stage value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/VRBuilder.Core.StageProcess-1.html": {
    "href": "api/VRBuilder.Core.StageProcess-1.html",
    "title": "Class StageProcess<TData> | VR Builder Documentation",
    "keywords": "Class StageProcess<TData> Inheritance System.Object StageProcess<TData> BaseActiveProcessOverCompletable<TData> ObjectInTargetActiveProcess<TData> EntityIteratingProcess<TEntitySequenceDataWithMode, TEntity> StopEntityIteratingProcess<TEntity> InstantProcess<TData> PlayAnimationClipBehavior.ActivatingProcess PlayVideoBehavior.ActivatingProcess Implements IStageProcess Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public abstract class StageProcess<TData> : Object, IStageProcess where TData : class, IData Type Parameters Name Description TData Constructors StageProcess(TData, IEntity) Declaration protected StageProcess(TData data, IEntity outer = null) Parameters Type Name Description TData data IEntity outer Properties Data Declaration protected TData Data { get; } Property Value Type Description TData Outer Declaration protected IEntity Outer { get; } Property Value Type Description IEntity Methods End() Declaration public abstract void End() FastForward() Declaration public abstract void FastForward() Start() Declaration public abstract void Start() Update() Declaration public abstract IEnumerator Update() Returns Type Description System.Collections.IEnumerator Implements IStageProcess"
  },
  "api/VRBuilder.Core.Step.EntityData.html": {
    "href": "api/VRBuilder.Core.Step.EntityData.html",
    "title": "Class Step.EntityData | VR Builder Documentation",
    "keywords": "Class Step.EntityData Inheritance System.Object EntityCollectionData < IStepChild > Step.EntityData Implements IStepData IRenameableData INamedData IDescribedData IEntitySequenceDataWithMode < IStepChild > IEntitySequenceData < IStepChild > IEntityCollectionData < IStepChild > IEntityCollectionData IEntitySequenceData IModeData IData Inherited Members EntityCollectionData<IStepChild>.IEntityCollectionData.GetChildren() EntityCollectionData<IStepChild>.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class EntityData : EntityCollectionData<IStepChild>, IStepData, IRenameableData, INamedData, IDescribedData, IEntitySequenceDataWithMode<IStepChild>, IEntitySequenceData<IStepChild>, IEntityCollectionData<IStepChild>, IEntityCollectionData, IEntitySequenceData, IModeData, IData Constructors EntityData() Declaration public EntityData() Properties Behaviors Declaration [HideInProcessInspector] public IBehaviorCollection Behaviors { get; set; } Property Value Type Description IBehaviorCollection Current Declaration public IStepChild Current { get; set; } Property Value Type Description IStepChild Description Declaration [DrawingPriority(1)] [UsesSpecificProcessDrawer(\"MultiLineStringDrawer\")] public string Description { get; set; } Property Value Type Description System.String GroupsToUnlock Declaration [HideInProcessInspector] public IDictionary<Guid, IEnumerable<Type>> GroupsToUnlock { get; set; } Property Value Type Description System.Collections.Generic.IDictionary < System.Guid , System.Collections.Generic.IEnumerable < System.Type >> Mode Declaration public IMode Mode { get; set; } Property Value Type Description IMode Name Declaration [DrawingPriority(0)] [HideInProcessInspector] public string Name { get; set; } Property Value Type Description System.String ToUnlock Declaration [HideInProcessInspector] public IEnumerable<LockablePropertyReference> ToUnlock { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable < LockablePropertyReference > Transitions Declaration [HideInProcessInspector] public ITransitionCollection Transitions { get; set; } Property Value Type Description ITransitionCollection Methods GetChildren() Declaration public override IEnumerable<IStepChild> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < IStepChild > Overrides VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.IStepChild>.GetChildren() SetName(String) Declaration public void SetName(string name) Parameters Type Name Description System.String name Explicit Interface Implementations IEntitySequenceData.Current Declaration IEntity IEntitySequenceData.Current { get; } Returns Type Description IEntity Implements IStepData IRenameableData INamedData IDescribedData IEntitySequenceDataWithMode<TEntity> IEntitySequenceData<TEntity> IEntityCollectionData<TEntity> IEntityCollectionData IEntitySequenceData IModeData IData"
  },
  "api/VRBuilder.Core.Step.html": {
    "href": "api/VRBuilder.Core.Step.html",
    "title": "Class Step | VR Builder Documentation",
    "keywords": "Class Step Inheritance System.Object Entity < Step.EntityData > Step Implements IDataOwner < Step.EntityData > IStep IDataOwner < IStepData > IDataOwner IEntity IClonable < IStep > Inherited Members Entity<Step.EntityData>.Update() Entity<Step.EntityData>.Data Entity<Step.EntityData>.IDataOwner.Data Entity<Step.EntityData>.LifeCycle Entity<Step.EntityData>.Parent Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class Step : Entity<Step.EntityData>, IDataOwner<Step.EntityData>, IStep, IDataOwner<IStepData>, IDataOwner, IEntity, IClonable<IStep> Constructors Step() Declaration protected Step() Step(String) Declaration public Step(string name) Parameters Type Name Description System.String name Properties StepMetadata Declaration public StepMetadata StepMetadata { get; set; } Property Value Type Description StepMetadata Methods Clone() Declaration public IStep Clone() Returns Type Description IStep Configure(IMode) Declaration public override void Configure(IMode mode) Parameters Type Name Description IMode mode Overrides VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.Configure(VRBuilder.Core.Configuration.Modes.IMode) GetAbortingProcess() Declaration public override IStageProcess GetAbortingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.GetAbortingProcess() GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.GetActivatingProcess() GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.GetActiveProcess() GetConfigurator() Declaration protected override IConfigurator GetConfigurator() Returns Type Description IConfigurator Overrides VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.GetConfigurator() GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Step.EntityData>.GetDeactivatingProcess() Explicit Interface Implementations IDataOwner<IStepData>.Data Declaration IStepData IDataOwner<IStepData>.Data { get; } Returns Type Description IStepData Implements IDataOwner<TData> IStep IDataOwner<TData> IDataOwner IEntity IClonable<T>"
  },
  "api/VRBuilder.Core.StepMetadata.html": {
    "href": "api/VRBuilder.Core.StepMetadata.html",
    "title": "Class StepMetadata | VR Builder Documentation",
    "keywords": "Class StepMetadata Inheritance System.Object StepMetadata Implements IMetadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class StepMetadata : Object, IMetadata Constructors StepMetadata() Declaration public StepMetadata() Properties Guid Declaration public Guid Guid { get; set; } Property Value Type Description System.Guid Position Declaration public Vector2 Position { get; set; } Property Value Type Description UnityEngine.Vector2 StepType Declaration public string StepType { get; set; } Property Value Type Description System.String Implements IMetadata"
  },
  "api/VRBuilder.Core.TextToSpeech.Configuration.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.Configuration.html",
    "title": "Namespace VRBuilder.Core.TextToSpeech.Configuration | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.TextToSpeech.Configuration Classes MicrosoftTextToSpeechConfiguration RuntimeConfigurationExtensions Interfaces ITextToSpeechConfiguration"
  },
  "api/VRBuilder.Core.TextToSpeech.Configuration.ITextToSpeechConfiguration.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.Configuration.ITextToSpeechConfiguration.html",
    "title": "Interface ITextToSpeechConfiguration | VR Builder Documentation",
    "keywords": "Interface ITextToSpeechConfiguration Namespace : VRBuilder.Core.TextToSpeech.Configuration Assembly : VRBuilder.Core.dll Syntax public interface ITextToSpeechConfiguration Methods GetUniqueIdentifier(String, String, Locale) Declaration string GetUniqueIdentifier(string text, string md5Hash, Locale locale) Parameters Type Name Description System.String text System.String md5Hash UnityEngine.Localization.Locale locale Returns Type Description System.String IsCached(Locale, String) Declaration bool IsCached(Locale locale, string localizedContent) Parameters Type Name Description UnityEngine.Localization.Locale locale System.String localizedContent Returns Type Description System.Boolean Extension Methods TextToSpeechUtils.GetUniqueTextToSpeechFilename(ITextToSpeechConfiguration, String, Locale, String)"
  },
  "api/VRBuilder.Core.TextToSpeech.Configuration.MicrosoftTextToSpeechConfiguration.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.Configuration.MicrosoftTextToSpeechConfiguration.html",
    "title": "Class MicrosoftTextToSpeechConfiguration | VR Builder Documentation",
    "keywords": "Class MicrosoftTextToSpeechConfiguration Inheritance System.Object SettingsObject < MicrosoftTextToSpeechConfiguration > MicrosoftTextToSpeechConfiguration Implements ITextToSpeechConfiguration Inherited Members SettingsObject<MicrosoftTextToSpeechConfiguration>.Save() SettingsObject<MicrosoftTextToSpeechConfiguration>.Finalize() SettingsObject<MicrosoftTextToSpeechConfiguration>.Instance Namespace : VRBuilder.Core.TextToSpeech.Configuration Assembly : VRBuilder.Core.dll Syntax public class MicrosoftTextToSpeechConfiguration : SettingsObject<MicrosoftTextToSpeechConfiguration>, ITextToSpeechConfiguration Constructors MicrosoftTextToSpeechConfiguration() Declaration public MicrosoftTextToSpeechConfiguration() Properties Voice Declaration public string Voice { get; } Property Value Type Description System.String Methods GetUniqueIdentifier(String, String, Locale) Declaration public string GetUniqueIdentifier(string text, string md5Hash, Locale locale) Parameters Type Name Description System.String text System.String md5Hash UnityEngine.Localization.Locale locale Returns Type Description System.String IsCached(Locale, String) Declaration public bool IsCached(Locale locale, string localizedContent) Parameters Type Name Description UnityEngine.Localization.Locale locale System.String localizedContent Returns Type Description System.Boolean LoadConfiguration() Declaration public static MicrosoftTextToSpeechConfiguration LoadConfiguration() Returns Type Description MicrosoftTextToSpeechConfiguration Implements ITextToSpeechConfiguration"
  },
  "api/VRBuilder.Core.TextToSpeech.Configuration.RuntimeConfigurationExtensions.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.Configuration.RuntimeConfigurationExtensions.html",
    "title": "Class RuntimeConfigurationExtensions | VR Builder Documentation",
    "keywords": "Class RuntimeConfigurationExtensions Inheritance System.Object RuntimeConfigurationExtensions Namespace : VRBuilder.Core.TextToSpeech.Configuration Assembly : VRBuilder.Core.dll Syntax public static class RuntimeConfigurationExtensions : Object Methods GetTextToSpeechConfiguration(BaseRuntimeConfiguration) Declaration public static ITextToSpeechConfiguration GetTextToSpeechConfiguration(this BaseRuntimeConfiguration runtimeConfiguration) Parameters Type Name Description BaseRuntimeConfiguration runtimeConfiguration Returns Type Description ITextToSpeechConfiguration GetTextToSpeechSettings(BaseRuntimeConfiguration) Declaration public static TextToSpeechSettings GetTextToSpeechSettings(this BaseRuntimeConfiguration runtimeConfiguration) Parameters Type Name Description BaseRuntimeConfiguration runtimeConfiguration Returns Type Description TextToSpeechSettings SetTextToSpeechConfiguration(BaseRuntimeConfiguration, ITextToSpeechConfiguration) Declaration public static void SetTextToSpeechConfiguration(this BaseRuntimeConfiguration runtimeConfiguration, ITextToSpeechConfiguration textToSpeechConfiguration) Parameters Type Name Description BaseRuntimeConfiguration runtimeConfiguration ITextToSpeechConfiguration textToSpeechConfiguration"
  },
  "api/VRBuilder.Core.TextToSpeech.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.html",
    "title": "Namespace VRBuilder.Core.TextToSpeech | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.TextToSpeech Classes TextToSpeechAudio TextToSpeechContent TextToSpeechProviderFactory TextToSpeechProviderFactory.BaseCreator TextToSpeechProviderFactory.InvalidProviderException TextToSpeechProviderFactory.NoConfigurationFoundException TextToSpeechProviderFactory.NoMatchingProviderFoundException TextToSpeechSettings UnableToParseAudioFormatException Interfaces ITextToSpeechContent TextToSpeechProviderFactory.ITextToSpeechCreator"
  },
  "api/VRBuilder.Core.TextToSpeech.ITextToSpeechContent.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.ITextToSpeechContent.html",
    "title": "Interface ITextToSpeechContent | VR Builder Documentation",
    "keywords": "Interface ITextToSpeechContent Namespace : VRBuilder.Core.TextToSpeech Assembly : VRBuilder.Core.dll Syntax public interface ITextToSpeechContent Properties Text Declaration string Text { get; } Property Value Type Description System.String Methods IsCached(Locale) Declaration bool IsCached(Locale locale) Parameters Type Name Description UnityEngine.Localization.Locale locale Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Core.TextToSpeech.Providers.FileTextToSpeechProvider.CouldNotLoadAudioFileException.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.Providers.FileTextToSpeechProvider.CouldNotLoadAudioFileException.html",
    "title": "Class FileTextToSpeechProvider.CouldNotLoadAudioFileException | VR Builder Documentation",
    "keywords": "Class FileTextToSpeechProvider.CouldNotLoadAudioFileException Inheritance System.Object FileTextToSpeechProvider.CouldNotLoadAudioFileException Namespace : VRBuilder.Core.TextToSpeech.Providers Assembly : VRBuilder.Core.dll Syntax public class CouldNotLoadAudioFileException : Exception Constructors CouldNotLoadAudioFileException(String) Declaration public CouldNotLoadAudioFileException(string msg) Parameters Type Name Description System.String msg CouldNotLoadAudioFileException(String, Exception) Declaration public CouldNotLoadAudioFileException(string msg, Exception ex) Parameters Type Name Description System.String msg System.Exception ex"
  },
  "api/VRBuilder.Core.TextToSpeech.Providers.FileTextToSpeechProvider.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.Providers.FileTextToSpeechProvider.html",
    "title": "Class FileTextToSpeechProvider | VR Builder Documentation",
    "keywords": "Class FileTextToSpeechProvider Inheritance System.Object FileTextToSpeechProvider Implements ITextToSpeechProvider Namespace : VRBuilder.Core.TextToSpeech.Providers Assembly : VRBuilder.Core.dll Syntax public class FileTextToSpeechProvider : Object, ITextToSpeechProvider Constructors FileTextToSpeechProvider(ITextToSpeechConfiguration) Declaration public FileTextToSpeechProvider(ITextToSpeechConfiguration configuration) Parameters Type Name Description ITextToSpeechConfiguration configuration Fields Configuration Declaration protected ITextToSpeechConfiguration Configuration Field Value Type Description ITextToSpeechConfiguration Methods ConvertTextToSpeech(String, Locale) Declaration public Task<AudioClip> ConvertTextToSpeech(string text, Locale locale) Parameters Type Name Description System.String text UnityEngine.Localization.Locale locale Returns Type Description System.Threading.Tasks.Task < UnityEngine.AudioClip > GetCachedFile(String) Declaration protected virtual Task<byte[]> GetCachedFile(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Byte []> GetPathToFile(String) Declaration protected virtual string GetPathToFile(string filename) Parameters Type Name Description System.String filename Returns Type Description System.String IsFileCached(String) Declaration protected virtual Task<bool> IsFileCached(string filePath) Parameters Type Name Description System.String filePath Returns Type Description System.Threading.Tasks.Task < System.Boolean > LoadConfig() Declaration public ITextToSpeechConfiguration LoadConfig() Returns Type Description ITextToSpeechConfiguration SetConfig(ITextToSpeechConfiguration) Declaration public void SetConfig(ITextToSpeechConfiguration configuration) Parameters Type Name Description ITextToSpeechConfiguration configuration Implements ITextToSpeechProvider"
  },
  "api/VRBuilder.Core.TextToSpeech.Providers.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.Providers.html",
    "title": "Namespace VRBuilder.Core.TextToSpeech.Providers | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.TextToSpeech.Providers Classes FileTextToSpeechProvider FileTextToSpeechProvider.CouldNotLoadAudioFileException Interfaces ITextToSpeechProvider"
  },
  "api/VRBuilder.Core.TextToSpeech.Providers.ITextToSpeechProvider.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.Providers.ITextToSpeechProvider.html",
    "title": "Interface ITextToSpeechProvider | VR Builder Documentation",
    "keywords": "Interface ITextToSpeechProvider Namespace : VRBuilder.Core.TextToSpeech.Providers Assembly : VRBuilder.Core.dll Syntax public interface ITextToSpeechProvider Methods ConvertTextToSpeech(String, Locale) Declaration Task<AudioClip> ConvertTextToSpeech(string text, Locale locale) Parameters Type Name Description System.String text UnityEngine.Localization.Locale locale Returns Type Description System.Threading.Tasks.Task < UnityEngine.AudioClip > LoadConfig() Declaration ITextToSpeechConfiguration LoadConfig() Returns Type Description ITextToSpeechConfiguration SetConfig(ITextToSpeechConfiguration) Declaration void SetConfig(ITextToSpeechConfiguration configuration) Parameters Type Name Description ITextToSpeechConfiguration configuration"
  },
  "api/VRBuilder.Core.TextToSpeech.TextToSpeechAudio.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.TextToSpeechAudio.html",
    "title": "Class TextToSpeechAudio | VR Builder Documentation",
    "keywords": "Class TextToSpeechAudio Inheritance System.Object TextToSpeechContent TextToSpeechAudio Implements ITextToSpeechContent ILocalizedContent IAudioData ICanBeEmpty Inherited Members TextToSpeechContent.IsCached(Locale) Namespace : VRBuilder.Core.TextToSpeech Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Play Text to Speech\")] public class TextToSpeechAudio : TextToSpeechContent, ITextToSpeechContent, ILocalizedContent, IAudioData, ICanBeEmpty Constructors TextToSpeechAudio() Declaration protected TextToSpeechAudio() TextToSpeechAudio(String) Declaration public TextToSpeechAudio(string text) Parameters Type Name Description System.String text Properties AudioClip Declaration public AudioClip AudioClip { get; } Property Value Type Description UnityEngine.AudioClip ClipData Declaration public string ClipData { get; set; } Property Value Type Description System.String HasAudioClip Declaration public bool HasAudioClip { get; } Property Value Type Description System.Boolean IsLoading Declaration public bool IsLoading { get; } Property Value Type Description System.Boolean Text Declaration [UsesSpecificProcessDrawer(\"MultiLineStringDrawer\")] [DisplayName(\"Text/Key\")] public override string Text { get; set; } Property Value Type Description System.String Overrides TextToSpeechContent.Text Methods GetLocalizedContent() Declaration public override string GetLocalizedContent() Returns Type Description System.String Overrides TextToSpeechContent.GetLocalizedContent() InitializeAudioClip() Declaration public void InitializeAudioClip() IsEmpty() Declaration public bool IsEmpty() Returns Type Description System.Boolean Implements ITextToSpeechContent ILocalizedContent IAudioData ICanBeEmpty"
  },
  "api/VRBuilder.Core.TextToSpeech.TextToSpeechContent.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.TextToSpeechContent.html",
    "title": "Class TextToSpeechContent | VR Builder Documentation",
    "keywords": "Class TextToSpeechContent Inheritance System.Object TextToSpeechContent TextToSpeechAudio Implements ITextToSpeechContent ILocalizedContent Namespace : VRBuilder.Core.TextToSpeech Assembly : VRBuilder.Core.dll Syntax public abstract class TextToSpeechContent : Object, ITextToSpeechContent, ILocalizedContent Constructors TextToSpeechContent() Declaration protected TextToSpeechContent() Properties Text Declaration public abstract string Text { get; set; } Property Value Type Description System.String Methods GetLocalizedContent() Declaration public abstract string GetLocalizedContent() Returns Type Description System.String IsCached(Locale) Declaration public virtual bool IsCached(Locale locale) Parameters Type Name Description UnityEngine.Localization.Locale locale Returns Type Description System.Boolean Implements ITextToSpeechContent ILocalizedContent"
  },
  "api/VRBuilder.Core.TextToSpeech.TextToSpeechProviderFactory.BaseCreator.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.TextToSpeechProviderFactory.BaseCreator.html",
    "title": "Class TextToSpeechProviderFactory.BaseCreator | VR Builder Documentation",
    "keywords": "Class TextToSpeechProviderFactory.BaseCreator Inheritance System.Object TextToSpeechProviderFactory.BaseCreator Implements TextToSpeechProviderFactory.ITextToSpeechCreator Namespace : VRBuilder.Core.TextToSpeech Assembly : VRBuilder.Core.dll Syntax public class BaseCreator : Object, TextToSpeechProviderFactory.ITextToSpeechCreator Constructors BaseCreator(Type) Declaration public BaseCreator(Type textToSpeechProviderType) Parameters Type Name Description System.Type textToSpeechProviderType Methods Create(ITextToSpeechConfiguration) Declaration public ITextToSpeechProvider Create(ITextToSpeechConfiguration configuration) Parameters Type Name Description ITextToSpeechConfiguration configuration Returns Type Description ITextToSpeechProvider Implements TextToSpeechProviderFactory.ITextToSpeechCreator"
  },
  "api/VRBuilder.Core.TextToSpeech.TextToSpeechProviderFactory.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.TextToSpeechProviderFactory.html",
    "title": "Class TextToSpeechProviderFactory | VR Builder Documentation",
    "keywords": "Class TextToSpeechProviderFactory Inheritance System.Object Singleton < TextToSpeechProviderFactory > TextToSpeechProviderFactory Inherited Members Singleton<TextToSpeechProviderFactory>.Instance Namespace : VRBuilder.Core.TextToSpeech Assembly : VRBuilder.Core.dll Syntax public class TextToSpeechProviderFactory : Singleton<TextToSpeechProviderFactory> Constructors TextToSpeechProviderFactory() Declaration public TextToSpeechProviderFactory() Methods CreateProvider() Declaration public ITextToSpeechProvider CreateProvider() Returns Type Description ITextToSpeechProvider CreateProvider(ITextToSpeechConfiguration) Declaration public ITextToSpeechProvider CreateProvider(ITextToSpeechConfiguration configuration) Parameters Type Name Description ITextToSpeechConfiguration configuration Returns Type Description ITextToSpeechProvider RegisterProvider(Type) Declaration public void RegisterProvider(Type textToSpeechProviderType) Parameters Type Name Description System.Type textToSpeechProviderType"
  },
  "api/VRBuilder.Core.TextToSpeech.TextToSpeechProviderFactory.InvalidProviderException.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.TextToSpeechProviderFactory.InvalidProviderException.html",
    "title": "Class TextToSpeechProviderFactory.InvalidProviderException | VR Builder Documentation",
    "keywords": "Class TextToSpeechProviderFactory.InvalidProviderException Inheritance System.Object TextToSpeechProviderFactory.InvalidProviderException Namespace : VRBuilder.Core.TextToSpeech Assembly : VRBuilder.Core.dll Syntax public class InvalidProviderException : Exception Constructors InvalidProviderException(String) Declaration public InvalidProviderException(string msg) Parameters Type Name Description System.String msg"
  },
  "api/VRBuilder.Core.TextToSpeech.TextToSpeechProviderFactory.ITextToSpeechCreator.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.TextToSpeechProviderFactory.ITextToSpeechCreator.html",
    "title": "Interface TextToSpeechProviderFactory.ITextToSpeechCreator | VR Builder Documentation",
    "keywords": "Interface TextToSpeechProviderFactory.ITextToSpeechCreator Namespace : VRBuilder.Core.TextToSpeech Assembly : VRBuilder.Core.dll Syntax public interface ITextToSpeechCreator Methods Create(ITextToSpeechConfiguration) Declaration ITextToSpeechProvider Create(ITextToSpeechConfiguration configuration) Parameters Type Name Description ITextToSpeechConfiguration configuration Returns Type Description ITextToSpeechProvider"
  },
  "api/VRBuilder.Core.TextToSpeech.TextToSpeechProviderFactory.NoConfigurationFoundException.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.TextToSpeechProviderFactory.NoConfigurationFoundException.html",
    "title": "Class TextToSpeechProviderFactory.NoConfigurationFoundException | VR Builder Documentation",
    "keywords": "Class TextToSpeechProviderFactory.NoConfigurationFoundException Inheritance System.Object TextToSpeechProviderFactory.NoConfigurationFoundException Namespace : VRBuilder.Core.TextToSpeech Assembly : VRBuilder.Core.dll Syntax public class NoConfigurationFoundException : Exception Constructors NoConfigurationFoundException(String) Declaration public NoConfigurationFoundException(string msg) Parameters Type Name Description System.String msg"
  },
  "api/VRBuilder.Core.TextToSpeech.TextToSpeechProviderFactory.NoMatchingProviderFoundException.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.TextToSpeechProviderFactory.NoMatchingProviderFoundException.html",
    "title": "Class TextToSpeechProviderFactory.NoMatchingProviderFoundException | VR Builder Documentation",
    "keywords": "Class TextToSpeechProviderFactory.NoMatchingProviderFoundException Inheritance System.Object TextToSpeechProviderFactory.NoMatchingProviderFoundException Namespace : VRBuilder.Core.TextToSpeech Assembly : VRBuilder.Core.dll Syntax public class NoMatchingProviderFoundException : Exception Constructors NoMatchingProviderFoundException(String) Declaration public NoMatchingProviderFoundException(string msg) Parameters Type Name Description System.String msg"
  },
  "api/VRBuilder.Core.TextToSpeech.TextToSpeechSettings.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.TextToSpeechSettings.html",
    "title": "Class TextToSpeechSettings | VR Builder Documentation",
    "keywords": "Class TextToSpeechSettings Inheritance System.Object SettingsObject < TextToSpeechSettings > TextToSpeechSettings Inherited Members SettingsObject<TextToSpeechSettings>.Save() SettingsObject<TextToSpeechSettings>.Finalize() SettingsObject<TextToSpeechSettings>.Instance Namespace : VRBuilder.Core.TextToSpeech Assembly : VRBuilder.Core.dll Syntax public class TextToSpeechSettings : SettingsObject<TextToSpeechSettings> Constructors TextToSpeechSettings() Declaration public TextToSpeechSettings() Fields Configuration Declaration public ITextToSpeechConfiguration Configuration Field Value Type Description ITextToSpeechConfiguration Provider Declaration public string Provider Field Value Type Description System.String StreamingAssetCacheDirectoryName Declaration public string StreamingAssetCacheDirectoryName Field Value Type Description System.String"
  },
  "api/VRBuilder.Core.TextToSpeech.UnableToParseAudioFormatException.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.UnableToParseAudioFormatException.html",
    "title": "Class UnableToParseAudioFormatException | VR Builder Documentation",
    "keywords": "Class UnableToParseAudioFormatException Inheritance System.Object UnableToParseAudioFormatException Namespace : VRBuilder.Core.TextToSpeech Assembly : VRBuilder.Core.dll Syntax public class UnableToParseAudioFormatException : Exception Constructors UnableToParseAudioFormatException(String) Declaration public UnableToParseAudioFormatException(string msg) Parameters Type Name Description System.String msg"
  },
  "api/VRBuilder.Core.TextToSpeech.Utils.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.Utils.html",
    "title": "Namespace VRBuilder.Core.TextToSpeech.Utils | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.TextToSpeech.Utils Classes TextToSpeechUtils"
  },
  "api/VRBuilder.Core.TextToSpeech.Utils.TextToSpeechUtils.html": {
    "href": "api/VRBuilder.Core.TextToSpeech.Utils.TextToSpeechUtils.html",
    "title": "Class TextToSpeechUtils | VR Builder Documentation",
    "keywords": "Class TextToSpeechUtils Inheritance System.Object TextToSpeechUtils Namespace : VRBuilder.Core.TextToSpeech.Utils Assembly : VRBuilder.Core.dll Syntax public static class TextToSpeechUtils : Object Methods GetUniqueTextToSpeechFilename(ITextToSpeechConfiguration, String, Locale, String) Declaration public static string GetUniqueTextToSpeechFilename(this ITextToSpeechConfiguration configuration, string text, Locale locale, string format = \"wav\") Parameters Type Name Description ITextToSpeechConfiguration configuration System.String text UnityEngine.Localization.Locale locale System.String format Returns Type Description System.String ShortsInByteArrayToFloats(Byte[]) Declaration public static float[] ShortsInByteArrayToFloats(byte[] shorts) Parameters Type Name Description System.Byte [] shorts Returns Type Description System.Single []"
  },
  "api/VRBuilder.Core.Transition.EntityData.html": {
    "href": "api/VRBuilder.Core.Transition.EntityData.html",
    "title": "Class Transition.EntityData | VR Builder Documentation",
    "keywords": "Class Transition.EntityData Inheritance System.Object EntityCollectionData < ICondition > Transition.EntityData Implements ITransitionData IEntityCollectionDataWithMode < ICondition > IEntityCollectionData < ICondition > IEntityCollectionDataWithMode IEntityCollectionData IModeData ICompletableData INamedData IData Inherited Members EntityCollectionData<ICondition>.IEntityCollectionData.GetChildren() EntityCollectionData<ICondition>.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Transition\")] public class EntityData : EntityCollectionData<ICondition>, ITransitionData, IEntityCollectionDataWithMode<ICondition>, IEntityCollectionData<ICondition>, IEntityCollectionDataWithMode, IEntityCollectionData, IModeData, ICompletableData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties Conditions Declaration [DisplayName(\"Conditions\")] [Foldable] [ReorderableListOf] [ExtendableList] public IList<ICondition> Conditions { get; set; } Property Value Type Description System.Collections.Generic.IList < ICondition > IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean Mode Declaration public IMode Mode { get; set; } Property Value Type Description IMode Name Declaration [IgnoreInStepInspector] public string Name { get; } Property Value Type Description System.String TargetStep Declaration [HideInProcessInspector] public IStep TargetStep { get; set; } Property Value Type Description IStep Methods GetChildren() Declaration public override IEnumerable<ICondition> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < ICondition > Overrides VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.Conditions.ICondition>.GetChildren() Implements ITransitionData IEntityCollectionDataWithMode<TEntity> IEntityCollectionData<TEntity> IEntityCollectionDataWithMode IEntityCollectionData IModeData ICompletableData INamedData IData"
  },
  "api/VRBuilder.Core.Transition.html": {
    "href": "api/VRBuilder.Core.Transition.html",
    "title": "Class Transition | VR Builder Documentation",
    "keywords": "Class Transition Inheritance System.Object Entity < Transition.EntityData > CompletableEntity < Transition.EntityData > Transition Implements IDataOwner < Transition.EntityData > ICompletableEntity ITransition IEntity ICompletable IDataOwner < ITransitionData > IDataOwner IClonable < ITransition > ILockablePropertiesProvider Inherited Members CompletableEntity<Transition.EntityData>.Autocomplete() CompletableEntity<Transition.EntityData>.IsCompleted Entity<Transition.EntityData>.Configure(IMode) Entity<Transition.EntityData>.Update() Entity<Transition.EntityData>.Data Entity<Transition.EntityData>.IDataOwner.Data Entity<Transition.EntityData>.LifeCycle Entity<Transition.EntityData>.Parent Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class Transition : CompletableEntity<Transition.EntityData>, IDataOwner<Transition.EntityData>, ICompletableEntity, ITransition, IEntity, ICompletable, IDataOwner<ITransitionData>, IDataOwner, IClonable<ITransition>, ILockablePropertiesProvider Constructors Transition() Declaration public Transition() Methods Clone() Declaration public ITransition Clone() Returns Type Description ITransition GetAbortingProcess() Declaration public override IStageProcess GetAbortingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Transition.EntityData>.GetAbortingProcess() GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Transition.EntityData>.GetActivatingProcess() GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Transition.EntityData>.GetActiveProcess() GetAutocompleter() Declaration protected override IAutocompleter GetAutocompleter() Returns Type Description IAutocompleter Overrides VRBuilder.Core.CompletableEntity<VRBuilder.Core.Transition.EntityData>.GetAutocompleter() GetConfigurator() Declaration protected override IConfigurator GetConfigurator() Returns Type Description IConfigurator Overrides VRBuilder.Core.Entity<VRBuilder.Core.Transition.EntityData>.GetConfigurator() GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.Transition.EntityData>.GetDeactivatingProcess() GetLockableProperties() Declaration public IEnumerable<LockablePropertyData> GetLockableProperties() Returns Type Description System.Collections.Generic.IEnumerable < LockablePropertyData > Explicit Interface Implementations IDataOwner<ITransitionData>.Data Declaration ITransitionData IDataOwner<ITransitionData>.Data { get; } Returns Type Description ITransitionData Implements IDataOwner<TData> ICompletableEntity ITransition IEntity ICompletable IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.Core.TransitionCollection.EntityData.html": {
    "href": "api/VRBuilder.Core.TransitionCollection.EntityData.html",
    "title": "Class TransitionCollection.EntityData | VR Builder Documentation",
    "keywords": "Class TransitionCollection.EntityData Inheritance System.Object EntityCollectionData < ITransition > TransitionCollection.EntityData Implements ITransitionCollectionData IEntityCollectionDataWithMode < ITransition > IEntityCollectionData < ITransition > IEntityCollectionDataWithMode IEntityCollectionData IModeData IData Inherited Members EntityCollectionData<ITransition>.IEntityCollectionData.GetChildren() EntityCollectionData<ITransition>.Metadata Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class EntityData : EntityCollectionData<ITransition>, ITransitionCollectionData, IEntityCollectionDataWithMode<ITransition>, IEntityCollectionData<ITransition>, IEntityCollectionDataWithMode, IEntityCollectionData, IModeData, IData Constructors EntityData() Declaration public EntityData() Properties Mode Declaration public IMode Mode { get; set; } Property Value Type Description IMode Transitions Declaration [DisplayName(\"\")] [KeepPopulated] [ReorderableListOf] [ExtendableList] public virtual IList<ITransition> Transitions { get; set; } Property Value Type Description System.Collections.Generic.IList < ITransition > Methods GetChildren() Declaration public override IEnumerable<ITransition> GetChildren() Returns Type Description System.Collections.Generic.IEnumerable < ITransition > Overrides VRBuilder.Core.EntityOwners.EntityCollectionData<VRBuilder.Core.ITransition>.GetChildren() Implements ITransitionCollectionData IEntityCollectionDataWithMode<TEntity> IEntityCollectionData<TEntity> IEntityCollectionDataWithMode IEntityCollectionData IModeData IData"
  },
  "api/VRBuilder.Core.TransitionCollection.html": {
    "href": "api/VRBuilder.Core.TransitionCollection.html",
    "title": "Class TransitionCollection | VR Builder Documentation",
    "keywords": "Class TransitionCollection Inheritance System.Object Entity < TransitionCollection.EntityData > TransitionCollection Implements IDataOwner < TransitionCollection.EntityData > ITransitionCollection IStepChild IEntity IDataOwner < ITransitionCollectionData > IDataOwner IClonable < ITransitionCollection > Inherited Members Entity<TransitionCollection.EntityData>.Configure(IMode) Entity<TransitionCollection.EntityData>.Update() Entity<TransitionCollection.EntityData>.Data Entity<TransitionCollection.EntityData>.IDataOwner.Data Entity<TransitionCollection.EntityData>.LifeCycle Entity<TransitionCollection.EntityData>.Parent Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class TransitionCollection : Entity<TransitionCollection.EntityData>, IDataOwner<TransitionCollection.EntityData>, ITransitionCollection, IStepChild, IEntity, IDataOwner<ITransitionCollectionData>, IDataOwner, IClonable<ITransitionCollection> Constructors TransitionCollection() Declaration public TransitionCollection() Methods Clone() Declaration public ITransitionCollection Clone() Returns Type Description ITransitionCollection GetAbortingProcess() Declaration public override IStageProcess GetAbortingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.GetAbortingProcess() GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.GetActivatingProcess() GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.GetActiveProcess() GetConfigurator() Declaration protected override IConfigurator GetConfigurator() Returns Type Description IConfigurator Overrides VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.GetConfigurator() GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Core.TransitionCollection.EntityData>.GetDeactivatingProcess() Explicit Interface Implementations IDataOwner<ITransitionCollectionData>.Data Declaration ITransitionCollectionData IDataOwner<ITransitionCollectionData>.Data { get; } Returns Type Description ITransitionCollectionData Implements IDataOwner<TData> ITransitionCollection IStepChild IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Core.UI.Drawers.Metadata.html": {
    "href": "api/VRBuilder.Core.UI.Drawers.Metadata.html",
    "title": "Namespace VRBuilder.Core.UI.Drawers.Metadata | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.UI.Drawers.Metadata Classes ReorderableElementMetadata"
  },
  "api/VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.html": {
    "href": "api/VRBuilder.Core.UI.Drawers.Metadata.ReorderableElementMetadata.html",
    "title": "Class ReorderableElementMetadata | VR Builder Documentation",
    "keywords": "Class ReorderableElementMetadata Inheritance System.Object ReorderableElementMetadata Namespace : VRBuilder.Core.UI.Drawers.Metadata Assembly : VRBuilder.Core.dll Syntax public class ReorderableElementMetadata : Object Constructors ReorderableElementMetadata() Declaration public ReorderableElementMetadata() Properties IsFirst Declaration public bool IsFirst { get; set; } Property Value Type Description System.Boolean IsLast Declaration public bool IsLast { get; set; } Property Value Type Description System.Boolean MoveDown Declaration public bool MoveDown { get; set; } Property Value Type Description System.Boolean MoveUp Declaration public bool MoveUp { get; set; } Property Value Type Description System.Boolean"
  },
  "api/VRBuilder.Core.UI.SelectableValues.html": {
    "href": "api/VRBuilder.Core.UI.SelectableValues.html",
    "title": "Namespace VRBuilder.Core.UI.SelectableValues | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.UI.SelectableValues Classes ProcessVariableSelectableValue<T> SelectableValue<TFirst, TSecond> VideoClipOrURLSelectableValue"
  },
  "api/VRBuilder.Core.UI.SelectableValues.ProcessVariableSelectableValue-1.html": {
    "href": "api/VRBuilder.Core.UI.SelectableValues.ProcessVariableSelectableValue-1.html",
    "title": "Class ProcessVariableSelectableValue<T> | VR Builder Documentation",
    "keywords": "Class ProcessVariableSelectableValue<T> Inheritance System.Object SelectableValue <T, SingleScenePropertyReference < IDataProperty <T>>> ProcessVariableSelectableValue<T> Inherited Members SelectableValue<T, SingleScenePropertyReference<IDataProperty<T>>>.FirstValueLabel SelectableValue<T, SingleScenePropertyReference<IDataProperty<T>>>.SecondValueLabel SelectableValue<T, SingleScenePropertyReference<IDataProperty<T>>>.FirstValue SelectableValue<T, SingleScenePropertyReference<IDataProperty<T>>>.SecondValue SelectableValue<T, SingleScenePropertyReference<IDataProperty<T>>>.IsFirstValueSelected Namespace : VRBuilder.Core.UI.SelectableValues Assembly : VRBuilder.Core.dll Syntax public class ProcessVariableSelectableValue<T> : SelectableValue<T, SingleScenePropertyReference<IDataProperty<T>>> Type Parameters Name Description T Constructors ProcessVariableSelectableValue() Declaration public ProcessVariableSelectableValue() ProcessVariableSelectableValue(T, SingleScenePropertyReference<IDataProperty<T>>, Boolean) Declaration public ProcessVariableSelectableValue(T firstValue, SingleScenePropertyReference<IDataProperty<T>> secondValue, bool isFirstValueSelected = true) Parameters Type Name Description T firstValue SingleScenePropertyReference < IDataProperty <T>> secondValue System.Boolean isFirstValueSelected Properties FirstValueLabel Declaration public override string FirstValueLabel { get; } Property Value Type Description System.String Overrides VRBuilder.Core.UI.SelectableValues.SelectableValue<T, VRBuilder.Core.SceneObjects.SingleScenePropertyReference<VRBuilder.Core.Properties.IDataProperty<T>>>.FirstValueLabel SecondValueLabel Declaration public override string SecondValueLabel { get; } Property Value Type Description System.String Overrides VRBuilder.Core.UI.SelectableValues.SelectableValue<T, VRBuilder.Core.SceneObjects.SingleScenePropertyReference<VRBuilder.Core.Properties.IDataProperty<T>>>.SecondValueLabel Value Declaration public T Value { get; } Property Value Type Description T"
  },
  "api/VRBuilder.Core.UI.SelectableValues.SelectableValue-2.html": {
    "href": "api/VRBuilder.Core.UI.SelectableValues.SelectableValue-2.html",
    "title": "Class SelectableValue<TFirst, TSecond> | VR Builder Documentation",
    "keywords": "Class SelectableValue<TFirst, TSecond> Inheritance System.Object SelectableValue<TFirst, TSecond> ProcessVariableSelectableValue<T> VideoClipOrURLSelectableValue Namespace : VRBuilder.Core.UI.SelectableValues Assembly : VRBuilder.Core.dll Syntax public abstract class SelectableValue<TFirst, TSecond> : Object Type Parameters Name Description TFirst TSecond Constructors SelectableValue() Declaration protected SelectableValue() Properties FirstValue Declaration public virtual TFirst FirstValue { get; set; } Property Value Type Description TFirst FirstValueLabel Declaration public abstract string FirstValueLabel { get; } Property Value Type Description System.String IsFirstValueSelected Declaration public virtual bool IsFirstValueSelected { get; set; } Property Value Type Description System.Boolean SecondValue Declaration public virtual TSecond SecondValue { get; set; } Property Value Type Description TSecond SecondValueLabel Declaration public abstract string SecondValueLabel { get; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Core.UI.SelectableValues.VideoClipOrURLSelectableValue.html": {
    "href": "api/VRBuilder.Core.UI.SelectableValues.VideoClipOrURLSelectableValue.html",
    "title": "Class VideoClipOrURLSelectableValue | VR Builder Documentation",
    "keywords": "Class VideoClipOrURLSelectableValue Inheritance System.Object SelectableValue < System.String , System.String > VideoClipOrURLSelectableValue Inherited Members SelectableValue<String, String>.FirstValueLabel SelectableValue<String, String>.SecondValueLabel SelectableValue<String, String>.FirstValue SelectableValue<String, String>.SecondValue SelectableValue<String, String>.IsFirstValueSelected Namespace : VRBuilder.Core.UI.SelectableValues Assembly : VRBuilder.Core.dll Syntax public class VideoClipOrURLSelectableValue : SelectableValue<string, string> Constructors VideoClipOrURLSelectableValue() Declaration public VideoClipOrURLSelectableValue() Properties FirstValue Declaration [UsesSpecificProcessDrawer(\"VideoClipResourceDrawer\")] public override string FirstValue { get; set; } Property Value Type Description System.String Overrides VRBuilder.Core.UI.SelectableValues.SelectableValue<System.String, System.String>.FirstValue FirstValueLabel Declaration public override string FirstValueLabel { get; } Property Value Type Description System.String Overrides VRBuilder.Core.UI.SelectableValues.SelectableValue<System.String, System.String>.FirstValueLabel SecondValueLabel Declaration public override string SecondValueLabel { get; } Property Value Type Description System.String Overrides VRBuilder.Core.UI.SelectableValues.SelectableValue<System.String, System.String>.SecondValueLabel"
  },
  "api/VRBuilder.Core.Utils.Audio.html": {
    "href": "api/VRBuilder.Core.Utils.Audio.html",
    "title": "Namespace VRBuilder.Core.Utils.Audio | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Utils.Audio Classes ResourceAudio Interfaces IAudioData"
  },
  "api/VRBuilder.Core.Utils.Audio.IAudioData.html": {
    "href": "api/VRBuilder.Core.Utils.Audio.IAudioData.html",
    "title": "Interface IAudioData | VR Builder Documentation",
    "keywords": "Interface IAudioData Inherited Members ICanBeEmpty.IsEmpty() Namespace : VRBuilder.Core.Utils.Audio Assembly : VRBuilder.Core.dll Syntax public interface IAudioData : ICanBeEmpty Properties AudioClip Declaration AudioClip AudioClip { get; } Property Value Type Description UnityEngine.AudioClip ClipData Declaration string ClipData { get; set; } Property Value Type Description System.String HasAudioClip Declaration bool HasAudioClip { get; } Property Value Type Description System.Boolean Methods InitializeAudioClip() Declaration void InitializeAudioClip()"
  },
  "api/VRBuilder.Core.Utils.Audio.ResourceAudio.html": {
    "href": "api/VRBuilder.Core.Utils.Audio.ResourceAudio.html",
    "title": "Class ResourceAudio | VR Builder Documentation",
    "keywords": "Class ResourceAudio Inheritance System.Object ResourceAudio Implements IAudioData ICanBeEmpty ILocalizedContent Namespace : VRBuilder.Core.Utils.Audio Assembly : VRBuilder.Core.dll Syntax [DisplayName(\"Play Audio File\")] public class ResourceAudio : Object, IAudioData, ICanBeEmpty, ILocalizedContent Constructors ResourceAudio() Declaration protected ResourceAudio() ResourceAudio(String) Declaration public ResourceAudio(string path) Parameters Type Name Description System.String path Properties AudioClip Declaration public AudioClip AudioClip { get; } Property Value Type Description UnityEngine.AudioClip ClipData Declaration public string ClipData { get; set; } Property Value Type Description System.String HasAudioClip Declaration public bool HasAudioClip { get; } Property Value Type Description System.Boolean ResourcesPath Declaration [DisplayName(\"Resources path / Key\")] [DisplayTooltip(\"The audio clip needs to be in a folder called Resources or one of its subfolders. The path to enter here is the relative path to the Resources folder, without extension. So, if the path is 'Assets/Resources/Audio/MyFile.wav', you would need to enter 'Audio/MyFile'.\")] public string ResourcesPath { get; set; } Property Value Type Description System.String Methods GetLocalizedContent() Declaration public string GetLocalizedContent() Returns Type Description System.String InitializeAudioClip() Declaration public void InitializeAudioClip() IsEmpty() Declaration public bool IsEmpty() Returns Type Description System.Boolean Implements IAudioData ICanBeEmpty ILocalizedContent"
  },
  "api/VRBuilder.Core.Utils.Bezier.Bezier.html": {
    "href": "api/VRBuilder.Core.Utils.Bezier.Bezier.html",
    "title": "Class Bezier | VR Builder Documentation",
    "keywords": "Class Bezier Inheritance System.Object Bezier Namespace : VRBuilder.Core.Utils.Bezier Assembly : VRBuilder.Core.dll Syntax public static class Bezier : Object Methods GetArcLength(Vector3, Vector3, Vector3, Vector3, Int32) Declaration public static IEnumerable<float> GetArcLength(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, int resolution) Parameters Type Name Description UnityEngine.Vector3 p0 UnityEngine.Vector3 p1 UnityEngine.Vector3 p2 UnityEngine.Vector3 p3 System.Int32 resolution Returns Type Description System.Collections.Generic.IEnumerable < System.Single > GetFirstDerivative(Vector3, Vector3, Vector3, Single) Declaration public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, float t) Parameters Type Name Description UnityEngine.Vector3 p0 UnityEngine.Vector3 p1 UnityEngine.Vector3 p2 System.Single t Returns Type Description UnityEngine.Vector3 GetFirstDerivative(Vector3, Vector3, Vector3, Vector3, Single) Declaration public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t) Parameters Type Name Description UnityEngine.Vector3 p0 UnityEngine.Vector3 p1 UnityEngine.Vector3 p2 UnityEngine.Vector3 p3 System.Single t Returns Type Description UnityEngine.Vector3 GetPoint(Vector3, Vector3, Vector3, Single) Declaration public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, float t) Parameters Type Name Description UnityEngine.Vector3 p0 UnityEngine.Vector3 p1 UnityEngine.Vector3 p2 System.Single t Returns Type Description UnityEngine.Vector3 GetPoint(Vector3, Vector3, Vector3, Vector3, Single) Declaration public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t) Parameters Type Name Description UnityEngine.Vector3 p0 UnityEngine.Vector3 p1 UnityEngine.Vector3 p2 UnityEngine.Vector3 p3 System.Single t Returns Type Description UnityEngine.Vector3"
  },
  "api/VRBuilder.Core.Utils.Bezier.BezierControlPointMode.html": {
    "href": "api/VRBuilder.Core.Utils.Bezier.BezierControlPointMode.html",
    "title": "Class BezierControlPointMode | VR Builder Documentation",
    "keywords": "Class BezierControlPointMode Inheritance System.Object BezierControlPointMode Namespace : VRBuilder.Core.Utils.Bezier Assembly : VRBuilder.Core.dll Syntax public sealed class BezierControlPointMode : Enum Fields Aligned Declaration public const BezierControlPointMode Aligned Field Value Type Description BezierControlPointMode Free Declaration public const BezierControlPointMode Free Field Value Type Description BezierControlPointMode Mirrored Declaration public const BezierControlPointMode Mirrored Field Value Type Description BezierControlPointMode value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/VRBuilder.Core.Utils.Bezier.BezierSpline.html": {
    "href": "api/VRBuilder.Core.Utils.Bezier.BezierSpline.html",
    "title": "Class BezierSpline | VR Builder Documentation",
    "keywords": "Class BezierSpline Inheritance System.Object BezierSpline Namespace : VRBuilder.Core.Utils.Bezier Assembly : VRBuilder.Core.dll Syntax public class BezierSpline : MonoBehaviour Constructors BezierSpline() Declaration public BezierSpline() Properties ControlPointCount Declaration public int ControlPointCount { get; } Property Value Type Description System.Int32 CurveCount Declaration public int CurveCount { get; } Property Value Type Description System.Int32 CurveResolution Declaration public int CurveResolution { get; set; } Property Value Type Description System.Int32 LinearVelocity Declaration public bool LinearVelocity { get; set; } Property Value Type Description System.Boolean Loop Declaration public bool Loop { get; set; } Property Value Type Description System.Boolean Methods AddCurve() Declaration public void AddCurve() GetControlPoint(Int32) Declaration public Vector3 GetControlPoint(int index) Parameters Type Name Description System.Int32 index Returns Type Description UnityEngine.Vector3 GetControlPointMode(Int32) Declaration public BezierControlPointMode GetControlPointMode(int index) Parameters Type Name Description System.Int32 index Returns Type Description BezierControlPointMode GetDirection(Single) Declaration public Vector3 GetDirection(float t) Parameters Type Name Description System.Single t Returns Type Description UnityEngine.Vector3 GetPoint(Single) Declaration public Vector3 GetPoint(float t) Parameters Type Name Description System.Single t Returns Type Description UnityEngine.Vector3 GetVelocity(Single) Declaration public Vector3 GetVelocity(float t) Parameters Type Name Description System.Single t Returns Type Description UnityEngine.Vector3 RemoveCurve() Declaration public void RemoveCurve() Reset() Declaration public void Reset() SetControlPoint(Int32, Vector3) Declaration public void SetControlPoint(int index, Vector3 point) Parameters Type Name Description System.Int32 index UnityEngine.Vector3 point SetControlPointMode(Int32, BezierControlPointMode) Declaration public void SetControlPointMode(int index, BezierControlPointMode mode) Parameters Type Name Description System.Int32 index BezierControlPointMode mode"
  },
  "api/VRBuilder.Core.Utils.Bezier.html": {
    "href": "api/VRBuilder.Core.Utils.Bezier.html",
    "title": "Namespace VRBuilder.Core.Utils.Bezier | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Utils.Bezier Classes Bezier BezierControlPointMode BezierSpline"
  },
  "api/VRBuilder.Core.Utils.ComponentUtils.html": {
    "href": "api/VRBuilder.Core.Utils.ComponentUtils.html",
    "title": "Class ComponentUtils | VR Builder Documentation",
    "keywords": "Class ComponentUtils Inheritance System.Object ComponentUtils Namespace : VRBuilder.Core.Utils Assembly : VRBuilder.Core.dll Syntax public static class ComponentUtils : Object Methods AddPersistentListener<T>(Object, Object, UnityEvent<T>, UnityAction<T>) Declaration public static bool AddPersistentListener<T>(Object target, Object eventObject, UnityEvent<T> unityEvent, UnityAction<T> call) Parameters Type Name Description UnityEngine.Object target UnityEngine.Object eventObject UnityEngine.Events.UnityEvent <T> unityEvent UnityEngine.Events.UnityAction <T> call Returns Type Description System.Boolean Type Parameters Name Description T GetSortedNonOriginalComponents(GameObject, Component[]) Declaration public static List<Component> GetSortedNonOriginalComponents(GameObject gameObject, Component[] alreadyAttachedProperties) Parameters Type Name Description UnityEngine.GameObject gameObject UnityEngine.Component [] alreadyAttachedProperties Returns Type Description System.Collections.Generic.List < UnityEngine.Component > HasPersistentListener(UnityEventBase, Object, String) Declaration public static bool HasPersistentListener(UnityEventBase unityEvent, Object target, string methodName) Parameters Type Name Description UnityEngine.Events.UnityEventBase unityEvent UnityEngine.Object target System.String methodName Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Utils.DebugUtils.html": {
    "href": "api/VRBuilder.Core.Utils.DebugUtils.html",
    "title": "Class DebugUtils | VR Builder Documentation",
    "keywords": "Class DebugUtils Inheritance System.Object DebugUtils Namespace : VRBuilder.Core.Utils Assembly : VRBuilder.Core.dll Syntax public static class DebugUtils : Object Methods DrawWireCylinderGizmo(Vector3, Vector3, Single, Color) Declaration public static void DrawWireCylinderGizmo(Vector3 startPoint, Vector3 endPoint, float width, Color color) Parameters Type Name Description UnityEngine.Vector3 startPoint UnityEngine.Vector3 endPoint System.Single width UnityEngine.Color color"
  },
  "api/VRBuilder.Core.Utils.GameObjectExtension.html": {
    "href": "api/VRBuilder.Core.Utils.GameObjectExtension.html",
    "title": "Class GameObjectExtension | VR Builder Documentation",
    "keywords": "Class GameObjectExtension Inheritance System.Object GameObjectExtension Namespace : VRBuilder.Core.Utils Assembly : VRBuilder.Core.dll Syntax public static class GameObjectExtension : Object Methods RemoveChildWithNameImmediate(GameObject, String) Declaration public static void RemoveChildWithNameImmediate(this GameObject gameObject, string name) Parameters Type Name Description UnityEngine.GameObject gameObject System.String name SetLayer<T>(GameObject, Int32, Boolean) Declaration public static void SetLayer<T>(this GameObject gameObject, int layer, bool includeChildren = false) where T : Component Parameters Type Name Description UnityEngine.GameObject gameObject System.Int32 layer System.Boolean includeChildren Type Parameters Name Description T"
  },
  "api/VRBuilder.Core.Utils.html": {
    "href": "api/VRBuilder.Core.Utils.html",
    "title": "Namespace VRBuilder.Core.Utils | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Utils Classes ComponentUtils DebugUtils GameObjectExtension LockObjectsOnSceneStart ProcessReferenceUtils ProcessUtils ReflectionUtils WorldConsole Interfaces ICanBeEmpty"
  },
  "api/VRBuilder.Core.Utils.ICanBeEmpty.html": {
    "href": "api/VRBuilder.Core.Utils.ICanBeEmpty.html",
    "title": "Interface ICanBeEmpty | VR Builder Documentation",
    "keywords": "Interface ICanBeEmpty Namespace : VRBuilder.Core.Utils Assembly : VRBuilder.Core.dll Syntax public interface ICanBeEmpty Methods IsEmpty() Declaration bool IsEmpty() Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Utils.LockObjectsOnSceneStart.html": {
    "href": "api/VRBuilder.Core.Utils.LockObjectsOnSceneStart.html",
    "title": "Class LockObjectsOnSceneStart | VR Builder Documentation",
    "keywords": "Class LockObjectsOnSceneStart Inheritance System.Object LockObjectsOnSceneStart Namespace : VRBuilder.Core.Utils Assembly : VRBuilder.Core.dll Syntax public class LockObjectsOnSceneStart : MonoBehaviour Constructors LockObjectsOnSceneStart() Declaration public LockObjectsOnSceneStart()"
  },
  "api/VRBuilder.Core.Utils.Logging.html": {
    "href": "api/VRBuilder.Core.Utils.Logging.html",
    "title": "Namespace VRBuilder.Core.Utils.Logging | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Utils.Logging Classes LifeCycleLoggingConfig"
  },
  "api/VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.html": {
    "href": "api/VRBuilder.Core.Utils.Logging.LifeCycleLoggingConfig.html",
    "title": "Class LifeCycleLoggingConfig | VR Builder Documentation",
    "keywords": "Class LifeCycleLoggingConfig Inheritance System.Object SettingsObject < LifeCycleLoggingConfig > LifeCycleLoggingConfig Inherited Members SettingsObject<LifeCycleLoggingConfig>.Save() SettingsObject<LifeCycleLoggingConfig>.Finalize() SettingsObject<LifeCycleLoggingConfig>.Instance Namespace : VRBuilder.Core.Utils.Logging Assembly : VRBuilder.Core.dll Syntax public class LifeCycleLoggingConfig : SettingsObject<LifeCycleLoggingConfig> Constructors LifeCycleLoggingConfig() Declaration public LifeCycleLoggingConfig() Fields LogBehaviors Declaration public bool LogBehaviors Field Value Type Description System.Boolean LogChapters Declaration public bool LogChapters Field Value Type Description System.Boolean LogConditions Declaration public bool LogConditions Field Value Type Description System.Boolean LogDataPropertyChanges Declaration public bool LogDataPropertyChanges Field Value Type Description System.Boolean LogLockState Declaration public bool LogLockState Field Value Type Description System.Boolean LogSteps Declaration public bool LogSteps Field Value Type Description System.Boolean LogTransitions Declaration public bool LogTransitions Field Value Type Description System.Boolean"
  },
  "api/VRBuilder.Core.Utils.ParticleMachines.ConfettiMachine.html": {
    "href": "api/VRBuilder.Core.Utils.ParticleMachines.ConfettiMachine.html",
    "title": "Class ConfettiMachine | VR Builder Documentation",
    "keywords": "Class ConfettiMachine Inheritance System.Object ConfettiMachine Implements IParticleMachine Namespace : VRBuilder.Core.Utils.ParticleMachines Assembly : VRBuilder.Core.dll Syntax public class ConfettiMachine : MonoBehaviour, IParticleMachine Constructors ConfettiMachine() Declaration public ConfettiMachine() Properties EmissionDuration Declaration public float EmissionDuration { get; } Property Value Type Description System.Single IsActive Declaration public bool IsActive { get; } Property Value Type Description System.Boolean Methods Activate() Declaration public void Activate() Activate(Single, Single) Declaration public void Activate(float newRadius, float newDuration) Parameters Type Name Description System.Single newRadius System.Single newDuration ChangeAreaRadius(Single) Declaration public void ChangeAreaRadius(float newRadius) Parameters Type Name Description System.Single newRadius ChangeEmissionDuration(Single) Declaration public void ChangeEmissionDuration(float newDuration) Parameters Type Name Description System.Single newDuration Deactivate() Declaration public void Deactivate() Implements IParticleMachine"
  },
  "api/VRBuilder.Core.Utils.ParticleMachines.html": {
    "href": "api/VRBuilder.Core.Utils.ParticleMachines.html",
    "title": "Namespace VRBuilder.Core.Utils.ParticleMachines | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Core.Utils.ParticleMachines Classes ConfettiMachine Interfaces IParticleMachine"
  },
  "api/VRBuilder.Core.Utils.ParticleMachines.IParticleMachine.html": {
    "href": "api/VRBuilder.Core.Utils.ParticleMachines.IParticleMachine.html",
    "title": "Interface IParticleMachine | VR Builder Documentation",
    "keywords": "Interface IParticleMachine Namespace : VRBuilder.Core.Utils.ParticleMachines Assembly : VRBuilder.Core.dll Syntax public interface IParticleMachine Properties IsActive Declaration bool IsActive { get; } Property Value Type Description System.Boolean Methods Activate() Declaration void Activate() Activate(Single, Single) Declaration void Activate(float radius, float duration) Parameters Type Name Description System.Single radius System.Single duration ChangeAreaRadius(Single) Declaration void ChangeAreaRadius(float radius) Parameters Type Name Description System.Single radius ChangeEmissionDuration(Single) Declaration void ChangeEmissionDuration(float duration) Parameters Type Name Description System.Single duration Deactivate() Declaration void Deactivate()"
  },
  "api/VRBuilder.Core.Utils.ProcessReferenceUtils.html": {
    "href": "api/VRBuilder.Core.Utils.ProcessReferenceUtils.html",
    "title": "Class ProcessReferenceUtils | VR Builder Documentation",
    "keywords": "Class ProcessReferenceUtils Inheritance System.Object ProcessReferenceUtils Namespace : VRBuilder.Core.Utils Assembly : VRBuilder.Core.dll Syntax public static class ProcessReferenceUtils : Object Methods GetUniqueIdFrom(ISceneObjectProperty) Declaration public static Guid GetUniqueIdFrom(ISceneObjectProperty property) Parameters Type Name Description ISceneObjectProperty property Returns Type Description System.Guid GetUniqueIdFrom(ISceneObject) Declaration public static Guid GetUniqueIdFrom(ISceneObject sceneObject) Parameters Type Name Description ISceneObject sceneObject Returns Type Description System.Guid"
  },
  "api/VRBuilder.Core.Utils.ProcessUtils.html": {
    "href": "api/VRBuilder.Core.Utils.ProcessUtils.html",
    "title": "Class ProcessUtils | VR Builder Documentation",
    "keywords": "Class ProcessUtils Inheritance System.Object ProcessUtils Namespace : VRBuilder.Core.Utils Assembly : VRBuilder.Core.dll Syntax public static class ProcessUtils : Object Methods GetParentEntity(IEntity, IProcess) Declaration public static IEntity GetParentEntity(IEntity entity, IProcess process) Parameters Type Name Description IEntity entity IProcess process Returns Type Description IEntity"
  },
  "api/VRBuilder.Core.Utils.ReflectionUtils.html": {
    "href": "api/VRBuilder.Core.Utils.ReflectionUtils.html",
    "title": "Class ReflectionUtils | VR Builder Documentation",
    "keywords": "Class ReflectionUtils Inheritance System.Object ReflectionUtils Namespace : VRBuilder.Core.Utils Assembly : VRBuilder.Core.dll Syntax public static class ReflectionUtils : Object Methods CreateInstanceOfType(Type) Declaration public static object CreateInstanceOfType(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Object CreateInstanceOfType<T>() Declaration public static T CreateInstanceOfType<T>() Returns Type Description T Type Parameters Name Description T GetAllTypes() Declaration public static IEnumerable<Type> GetAllTypes() Returns Type Description System.Collections.Generic.IEnumerable < System.Type > GetAttribute<T>(Type, Boolean) Declaration public static T GetAttribute<T>(this Type type, bool inherit = false) where T : Attribute Parameters Type Name Description System.Type type System.Boolean inherit Returns Type Description T Type Parameters Name Description T GetConcreteImplementationsOf(Type) Declaration public static IEnumerable<Type> GetConcreteImplementationsOf(Type baseType) Parameters Type Name Description System.Type baseType Returns Type Description System.Collections.Generic.IEnumerable < System.Type > GetConcreteImplementationsOf<T>() Declaration public static IEnumerable<Type> GetConcreteImplementationsOf<T>() Returns Type Description System.Collections.Generic.IEnumerable < System.Type > Type Parameters Name Description T GetConcreteTypesAssignableFrom(Type, Boolean) Declaration public static IEnumerable<Type> GetConcreteTypesAssignableFrom(Type baseType, bool excludeEditor = true) Parameters Type Name Description System.Type baseType System.Boolean excludeEditor Returns Type Description System.Collections.Generic.IEnumerable < System.Type > GetDeclaredTypeOfPropertyOrField(MemberInfo) Declaration public static Type GetDeclaredTypeOfPropertyOrField(MemberInfo info) Parameters Type Name Description System.Reflection.MemberInfo info Returns Type Description System.Type GetDefault(Type) Declaration public static object GetDefault(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Object GetEntryType(Object) Declaration public static Type GetEntryType(object list) Parameters Type Name Description System.Object list Returns Type Description System.Type GetEntryType(Type) Declaration public static Type GetEntryType(Type listType) Parameters Type Name Description System.Type listType Returns Type Description System.Type GetFilteredAvailableExtensions(IEnumerable<Type>) Declaration public static List<Type> GetFilteredAvailableExtensions(IEnumerable<Type> extensionTypes) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Type > extensionTypes Returns Type Description System.Collections.Generic.List < System.Type > GetFilteredPropertyTypes(Type) Declaration public static List<Type> GetFilteredPropertyTypes(Type propertyType) Parameters Type Name Description System.Type propertyType Returns Type Description System.Collections.Generic.List < System.Type > GetFinalImplementationsOf<T>(Type[]) Declaration public static IEnumerable<Type> GetFinalImplementationsOf<T>(params Type[] lowestPriorityTypes) Parameters Type Name Description System.Type [] lowestPriorityTypes Returns Type Description System.Collections.Generic.IEnumerable < System.Type > Type Parameters Name Description T GetGenericDictionaryInterface(Object) Declaration public static Type GetGenericDictionaryInterface(object dictionaryValue) Parameters Type Name Description System.Object dictionaryValue Returns Type Description System.Type GetImplementationWithDefaultAttribute(Type, Boolean) Declaration public static Type GetImplementationWithDefaultAttribute(Type baseType, bool excludeEditor = true) Parameters Type Name Description System.Type baseType System.Boolean excludeEditor Returns Type Description System.Type GetImplementationWithoutDefaultAttribute(Type, Boolean) Declaration public static Type GetImplementationWithoutDefaultAttribute(Type baseType, bool excludeEditor = true) Parameters Type Name Description System.Type baseType System.Boolean excludeEditor Returns Type Description System.Type GetNameWithNesting(Type) Declaration public static string GetNameWithNesting(this Type type) Parameters Type Name Description System.Type type Returns Type Description System.String GetTypeFromAssemblyQualifiedName(String) Declaration public static Type GetTypeFromAssemblyQualifiedName(string assemblyQualifiedName) Parameters Type Name Description System.String assemblyQualifiedName Returns Type Description System.Type GetValueFromPropertyOrField(Object, MemberInfo) Declaration public static object GetValueFromPropertyOrField(object owner, MemberInfo member) Parameters Type Name Description System.Object owner System.Reflection.MemberInfo member Returns Type Description System.Object InsertIntoList(ref IList, Int32, Object) Declaration public static void InsertIntoList(ref IList list, int index, object value) Parameters Type Name Description System.Collections.IList list System.Int32 index System.Object value IsEmpty(Object) Declaration public static bool IsEmpty(object value) Parameters Type Name Description System.Object value Returns Type Description System.Boolean IsField(MemberInfo) Declaration public static bool IsField(MemberInfo memberInfo) Parameters Type Name Description System.Reflection.MemberInfo memberInfo Returns Type Description System.Boolean IsNonEditorType(Type) Declaration public static bool IsNonEditorType(this Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean IsNumeric(Type) Declaration public static bool IsNumeric(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean IsProperty(MemberInfo) Declaration public static bool IsProperty(MemberInfo memberInfo) Parameters Type Name Description System.Reflection.MemberInfo memberInfo Returns Type Description System.Boolean IsSubclassOfGenericDefinition(Type, Type) Declaration public static bool IsSubclassOfGenericDefinition(this Type typeToCheck, Type genericDefinition) Parameters Type Name Description System.Type typeToCheck System.Type genericDefinition Returns Type Description System.Boolean RemoveFromList(ref IList, Int32) Declaration public static void RemoveFromList(ref IList list, int index) Parameters Type Name Description System.Collections.IList list System.Int32 index ReplaceList<T>(ref IList, IEnumerable<T>) Declaration public static void ReplaceList<T>(ref IList list, IEnumerable<T> newList) Parameters Type Name Description System.Collections.IList list System.Collections.Generic.IEnumerable <T> newList Type Parameters Name Description T SetValueToPropertyOrField(Object, MemberInfo, Object) Declaration public static void SetValueToPropertyOrField(object owner, MemberInfo member, object value) Parameters Type Name Description System.Object owner System.Reflection.MemberInfo member System.Object value WhichHaveAttribute<T>(IEnumerable<Type>) Declaration public static IEnumerable<Type> WhichHaveAttribute<T>(this IEnumerable<Type> types) where T : Attribute Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Type > types Returns Type Description System.Collections.Generic.IEnumerable < System.Type > Type Parameters Name Description T"
  },
  "api/VRBuilder.Core.Utils.WorldConsole.html": {
    "href": "api/VRBuilder.Core.Utils.WorldConsole.html",
    "title": "Class WorldConsole | VR Builder Documentation",
    "keywords": "Class WorldConsole Inheritance System.Object WorldConsole Namespace : VRBuilder.Core.Utils Assembly : VRBuilder.Core.dll Syntax public static class WorldConsole : Object Methods Log(String, String, Boolean) Declaration public static void Log(string message, string details = \"\", bool show = false) Parameters Type Name Description System.String message System.String details System.Boolean show LogError(String, String, Boolean) Declaration public static void LogError(string message, string details = \"\", bool show = true) Parameters Type Name Description System.String message System.String details System.Boolean show LogException(Exception, Boolean) Declaration public static void LogException(Exception ex, bool show = true) Parameters Type Name Description System.Exception ex System.Boolean show LogWarning(String, String, Boolean) Declaration public static void LogWarning(string message, string details = \"\", bool show = false) Parameters Type Name Description System.String message System.String details System.Boolean show Refresh() Declaration public static void Refresh()"
  },
  "api/VRBuilder.Core.ViewTransform.html": {
    "href": "api/VRBuilder.Core.ViewTransform.html",
    "title": "Class ViewTransform | VR Builder Documentation",
    "keywords": "Class ViewTransform Inheritance System.Object ViewTransform Namespace : VRBuilder.Core Assembly : VRBuilder.Core.dll Syntax public class ViewTransform : Object Constructors ViewTransform(Vector3, Vector3) Declaration public ViewTransform(Vector3 position, Vector3 scale) Parameters Type Name Description UnityEngine.Vector3 position UnityEngine.Vector3 scale Properties Position Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 Scale Declaration public Vector3 Scale { get; set; } Property Value Type Description UnityEngine.Vector3"
  },
  "api/VRBuilder.Editor.Vivox.AuthenticationPackageEnabler.html": {
    "href": "api/VRBuilder.Editor.Vivox.AuthenticationPackageEnabler.html",
    "title": "Class AuthenticationPackageEnabler | VR Builder Documentation",
    "keywords": "Class AuthenticationPackageEnabler Inheritance System.Object Dependency AuthenticationPackageEnabler Inherited Members Dependency.EmitOnEnabled() Dependency.EmitOnDisabled() Dependency.Version Dependency.Priority Dependency.Samples Dependency.LayerDependencies Dependency.OnPackageEnabled Dependency.OnPackageDisabled System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Vivox Assembly : VRBuilder.Core.Editor.dll Syntax public class AuthenticationPackageEnabler : Dependency Constructors AuthenticationPackageEnabler() Declaration public AuthenticationPackageEnabler() Properties Package Declaration public override string Package { get; } Property Value Type Description System.String Overrides Dependency.Package"
  },
  "api/VRBuilder.Editor.Vivox.html": {
    "href": "api/VRBuilder.Editor.Vivox.html",
    "title": "Namespace VRBuilder.Editor.Vivox | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Editor.Vivox Classes AuthenticationPackageEnabler VivoxPackageEnabler"
  },
  "api/VRBuilder.Editor.Vivox.VivoxPackageEnabler.html": {
    "href": "api/VRBuilder.Editor.Vivox.VivoxPackageEnabler.html",
    "title": "Class VivoxPackageEnabler | VR Builder Documentation",
    "keywords": "Class VivoxPackageEnabler Inheritance System.Object Dependency VivoxPackageEnabler Inherited Members Dependency.EmitOnEnabled() Dependency.EmitOnDisabled() Dependency.Priority Dependency.Samples Dependency.LayerDependencies Dependency.OnPackageEnabled Dependency.OnPackageDisabled System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Editor.Vivox Assembly : VRBuilder.Core.Editor.dll Syntax public class VivoxPackageEnabler : Dependency Constructors VivoxPackageEnabler() Declaration public VivoxPackageEnabler() Properties Package Declaration public override string Package { get; } Property Value Type Description System.String Overrides Dependency.Package Version Declaration public override string Version { get; } Property Value Type Description System.String Overrides Dependency.Version"
  },
  "api/VRBuilder.Netcode.CommandLineConnectionManager.html": {
    "href": "api/VRBuilder.Netcode.CommandLineConnectionManager.html",
    "title": "Class CommandLineConnectionManager | VR Builder Documentation",
    "keywords": "Class CommandLineConnectionManager Inheritance System.Object CommandLineConnectionManager Namespace : VRBuilder.Netcode Assembly : VRBuilder.Netcode.dll Syntax public class CommandLineConnectionManager : MonoBehaviour Constructors CommandLineConnectionManager() Declaration public CommandLineConnectionManager()"
  },
  "api/VRBuilder.Netcode.ConfettiMachineNetcode.html": {
    "href": "api/VRBuilder.Netcode.ConfettiMachineNetcode.html",
    "title": "Class ConfettiMachineNetcode | VR Builder Documentation",
    "keywords": "Class ConfettiMachineNetcode Inheritance System.Object Unity.Netcode.NetworkBehaviour ConfettiMachineNetcode Implements IParticleMachine Inherited Members Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode Assembly : VRBuilder.Netcode.dll Syntax public class ConfettiMachineNetcode : NetworkBehaviour, IParticleMachine Constructors ConfettiMachineNetcode() Declaration public ConfettiMachineNetcode() Properties EmissionDuration Declaration public float EmissionDuration { get; } Property Value Type Description System.Single IsActive Declaration public bool IsActive { get; } Property Value Type Description System.Boolean Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides Unity.Netcode.NetworkBehaviour.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides Unity.Netcode.NetworkBehaviour.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides Unity.Netcode.NetworkBehaviour.__initializeVariables() Activate() Declaration public void Activate() Activate(Single, Single) Declaration public void Activate(float radius, float duration) Parameters Type Name Description System.Single radius System.Single duration ChangeAreaRadius(Single) Declaration public void ChangeAreaRadius(float radius) Parameters Type Name Description System.Single radius ChangeEmissionDuration(Single) Declaration public void ChangeEmissionDuration(float duration) Parameters Type Name Description System.Single duration Deactivate() Declaration public void Deactivate() OnDestroy() Declaration public override void OnDestroy() Overrides Unity.Netcode.NetworkBehaviour.OnDestroy() Implements IParticleMachine"
  },
  "api/VRBuilder.Netcode.Configuration.html": {
    "href": "api/VRBuilder.Netcode.Configuration.html",
    "title": "Namespace VRBuilder.Netcode.Configuration | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.Configuration Classes MultiUserAudioPlayer MultiUserSceneObjectManager NetcodeRuntimeConfiguration"
  },
  "api/VRBuilder.Netcode.Configuration.MultiUserAudioPlayer.html": {
    "href": "api/VRBuilder.Netcode.Configuration.MultiUserAudioPlayer.html",
    "title": "Class MultiUserAudioPlayer | VR Builder Documentation",
    "keywords": "Class MultiUserAudioPlayer Inheritance System.Object Unity.Netcode.NetworkBehaviour MultiUserAudioPlayer Implements IProcessAudioPlayer Inherited Members Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.Configuration Assembly : VRBuilder.Netcode.dll Syntax public class MultiUserAudioPlayer : NetworkBehaviour, IProcessAudioPlayer Constructors MultiUserAudioPlayer() Declaration public MultiUserAudioPlayer() Properties FallbackAudioSource Declaration public AudioSource FallbackAudioSource { get; } Property Value Type Description UnityEngine.AudioSource IsPlaying Declaration public bool IsPlaying { get; } Property Value Type Description System.Boolean LocalAudioSource Declaration public AudioSource LocalAudioSource { get; } Property Value Type Description UnityEngine.AudioSource Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides Unity.Netcode.NetworkBehaviour.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides Unity.Netcode.NetworkBehaviour.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides Unity.Netcode.NetworkBehaviour.__initializeVariables() PlayAudio(IAudioData, Single, Single) Declaration public void PlayAudio(IAudioData audioData, float volume = 1F, float pitch = 1F) Parameters Type Name Description IAudioData audioData System.Single volume System.Single pitch Reset() Declaration public void Reset() Stop() Declaration public void Stop() Implements IProcessAudioPlayer"
  },
  "api/VRBuilder.Netcode.Configuration.MultiUserSceneObjectManager.html": {
    "href": "api/VRBuilder.Netcode.Configuration.MultiUserSceneObjectManager.html",
    "title": "Class MultiUserSceneObjectManager | VR Builder Documentation",
    "keywords": "Class MultiUserSceneObjectManager Inheritance System.Object Unity.Netcode.NetworkBehaviour MultiUserSceneObjectManager Implements ISceneObjectManager Inherited Members Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.Configuration Assembly : VRBuilder.Netcode.dll Syntax public class MultiUserSceneObjectManager : NetworkBehaviour, ISceneObjectManager Constructors MultiUserSceneObjectManager() Declaration public MultiUserSceneObjectManager() Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides Unity.Netcode.NetworkBehaviour.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides Unity.Netcode.NetworkBehaviour.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides Unity.Netcode.NetworkBehaviour.__initializeVariables() InstantiatePrefab(GameObject, Vector3, Quaternion, Action<GameObject>) Declaration public void InstantiatePrefab(GameObject prefab, Vector3 position, Quaternion rotation, Action<GameObject> onPrefabInstantiated = null) Parameters Type Name Description UnityEngine.GameObject prefab UnityEngine.Vector3 position UnityEngine.Quaternion rotation System.Action < UnityEngine.GameObject > onPrefabInstantiated OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() RequestAuthority(ISceneObject, Action<ISceneObject>) Declaration public void RequestAuthority(ISceneObject sceneObject, Action<ISceneObject> onAuthorityGranted = null) Parameters Type Name Description ISceneObject sceneObject System.Action < ISceneObject > onAuthorityGranted SetComponentActive(ISceneObject, String, Boolean) Declaration public void SetComponentActive(ISceneObject sceneObject, string componentTypeName, bool isActive) Parameters Type Name Description ISceneObject sceneObject System.String componentTypeName System.Boolean isActive SetSceneObjectActive(ISceneObject, Boolean) Declaration public void SetSceneObjectActive(ISceneObject sceneObject, bool isActive) Parameters Type Name Description ISceneObject sceneObject System.Boolean isActive Implements ISceneObjectManager"
  },
  "api/VRBuilder.Netcode.Configuration.NetcodeRuntimeConfiguration.html": {
    "href": "api/VRBuilder.Netcode.Configuration.NetcodeRuntimeConfiguration.html",
    "title": "Class NetcodeRuntimeConfiguration | VR Builder Documentation",
    "keywords": "Class NetcodeRuntimeConfiguration Inheritance System.Object BaseRuntimeConfiguration NetcodeRuntimeConfiguration Inherited Members BaseRuntimeConfiguration.logConsole BaseRuntimeConfiguration.LoadProcess(String) BaseRuntimeConfiguration.ManifestFileName BaseRuntimeConfiguration.SceneObjectRegistry BaseRuntimeConfiguration.Serializer BaseRuntimeConfiguration.DefaultInputActionAssetPath BaseRuntimeConfiguration.CustomInputActionAssetPath BaseRuntimeConfiguration.CurrentInputActionAsset BaseRuntimeConfiguration.Modes BaseRuntimeConfiguration.StepLockHandling BaseRuntimeConfiguration.WorldConsolePrefab BaseRuntimeConfiguration.WorldConsole BaseRuntimeConfiguration.SceneConfiguration Namespace : VRBuilder.Netcode.Configuration Assembly : VRBuilder.Netcode.dll Syntax public class NetcodeRuntimeConfiguration : BaseRuntimeConfiguration Constructors NetcodeRuntimeConfiguration() Declaration public NetcodeRuntimeConfiguration() Fields DefaultMode Declaration public static readonly IMode DefaultMode Field Value Type Description IMode Properties InstructionPlayer Declaration public override AudioSource InstructionPlayer { get; } Property Value Type Description UnityEngine.AudioSource Overrides BaseRuntimeConfiguration.InstructionPlayer LocalUser Declaration public override UserSceneObject LocalUser { get; } Property Value Type Description UserSceneObject Overrides BaseRuntimeConfiguration.LocalUser ProcessAudioPlayer Declaration public override IProcessAudioPlayer ProcessAudioPlayer { get; } Property Value Type Description IProcessAudioPlayer Overrides BaseRuntimeConfiguration.ProcessAudioPlayer SceneObjectManager Declaration public override ISceneObjectManager SceneObjectManager { get; } Property Value Type Description ISceneObjectManager Overrides BaseRuntimeConfiguration.SceneObjectManager User Declaration public override IXRRigTransform User { get; } Property Value Type Description IXRRigTransform Overrides BaseRuntimeConfiguration.User UserTransforms Declaration public override IEnumerable<IXRRigTransform> UserTransforms { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IXRRigTransform > Overrides BaseRuntimeConfiguration.UserTransforms Extension Methods RuntimeConfigurationExtensions.GetTextToSpeechConfiguration(BaseRuntimeConfiguration) RuntimeConfigurationExtensions.GetTextToSpeechSettings(BaseRuntimeConfiguration) RuntimeConfigurationExtensions.SetTextToSpeechConfiguration(BaseRuntimeConfiguration, ITextToSpeechConfiguration) RuntimeConfigurationExtensions.GetPermissionHandler(BaseRuntimeConfiguration) RuntimeConfigurationExtensions.SetPermissionHandler(BaseRuntimeConfiguration, IPermissionHandler)"
  },
  "api/VRBuilder.Netcode.Editor.html": {
    "href": "api/VRBuilder.Netcode.Editor.html",
    "title": "Namespace VRBuilder.Netcode.Editor | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.Editor Classes NetcodeSceneSetupConfiguration"
  },
  "api/VRBuilder.Netcode.Editor.NetcodeSceneSetupConfiguration.html": {
    "href": "api/VRBuilder.Netcode.Editor.NetcodeSceneSetupConfiguration.html",
    "title": "Class NetcodeSceneSetupConfiguration | VR Builder Documentation",
    "keywords": "Class NetcodeSceneSetupConfiguration Inheritance System.Object NetcodeSceneSetupConfiguration Implements ISceneSetupConfiguration Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Netcode.Editor Assembly : VRBuilder.Netcode.Editor.dll Syntax public class NetcodeSceneSetupConfiguration : ISceneSetupConfiguration Constructors NetcodeSceneSetupConfiguration() Declaration public NetcodeSceneSetupConfiguration() Properties AllowedExtensionAssemblies Declaration public IEnumerable<string> AllowedExtensionAssemblies { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.String > DefaultConfettiPrefab Declaration public string DefaultConfettiPrefab { get; } Property Value Type Description System.String DefaultProcessController Declaration public string DefaultProcessController { get; } Property Value Type Description System.String Description Declaration public string Description { get; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String ParentObjectsHierarchy Declaration public string ParentObjectsHierarchy { get; } Property Value Type Description System.String Priority Declaration public int Priority { get; } Property Value Type Description System.Int32 RuntimeConfigurationName Declaration public string RuntimeConfigurationName { get; } Property Value Type Description System.String SceneTemplatePath Declaration public string SceneTemplatePath { get; } Property Value Type Description System.String Methods GetSetupNames() Declaration public IEnumerable<string> GetSetupNames() Returns Type Description System.Collections.Generic.IEnumerable < System.String > Implements ISceneSetupConfiguration"
  },
  "api/VRBuilder.Netcode.Editor.VoiceChat.html": {
    "href": "api/VRBuilder.Netcode.Editor.VoiceChat.html",
    "title": "Namespace VRBuilder.Netcode.Editor.VoiceChat | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.Editor.VoiceChat Classes VoiceChatSettingsProvider"
  },
  "api/VRBuilder.Netcode.Editor.VoiceChat.VoiceChatSettingsProvider.html": {
    "href": "api/VRBuilder.Netcode.Editor.VoiceChat.VoiceChatSettingsProvider.html",
    "title": "Class VoiceChatSettingsProvider | VR Builder Documentation",
    "keywords": "Class VoiceChatSettingsProvider Inheritance System.Object BaseSettingsProvider VoiceChatSettingsProvider Inherited Members BaseSettingsProvider.sections BaseSettingsProvider.OnGUI(String) Namespace : VRBuilder.Netcode.Editor.VoiceChat Assembly : VRBuilder.Netcode.Editor.dll Syntax public class VoiceChatSettingsProvider : BaseSettingsProvider Constructors VoiceChatSettingsProvider() Declaration public VoiceChatSettingsProvider() Methods InternalDraw(String) Declaration protected override void InternalDraw(string searchContext) Parameters Type Name Description System.String searchContext Overrides BaseSettingsProvider.InternalDraw(String) OnDeactivate() Declaration public override void OnDeactivate() Provider() Declaration public static SettingsProvider Provider() Returns Type Description UnityEditor.SettingsProvider"
  },
  "api/VRBuilder.Netcode.html": {
    "href": "api/VRBuilder.Netcode.html",
    "title": "Namespace VRBuilder.Netcode | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode Classes CommandLineConnectionManager ConfettiMachineNetcode"
  },
  "api/VRBuilder.Netcode.ProcessController.html": {
    "href": "api/VRBuilder.Netcode.ProcessController.html",
    "title": "Namespace VRBuilder.Netcode.ProcessController | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.ProcessController Classes NetcodeProcessLoader"
  },
  "api/VRBuilder.Netcode.ProcessController.NetcodeProcessLoader.html": {
    "href": "api/VRBuilder.Netcode.ProcessController.NetcodeProcessLoader.html",
    "title": "Class NetcodeProcessLoader | VR Builder Documentation",
    "keywords": "Class NetcodeProcessLoader Inheritance System.Object Unity.Netcode.NetworkBehaviour NetcodeProcessLoader Implements IConfigurableProcessController Inherited Members Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.ProcessController Assembly : VRBuilder.Netcode.dll Syntax public class NetcodeProcessLoader : NetworkBehaviour, IConfigurableProcessController Constructors NetcodeProcessLoader() Declaration public NetcodeProcessLoader() Properties AutoStartProcess Declaration public bool AutoStartProcess { get; set; } Property Value Type Description System.Boolean Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides Unity.Netcode.NetworkBehaviour.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides Unity.Netcode.NetworkBehaviour.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides Unity.Netcode.NetworkBehaviour.__initializeVariables() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() Implements IConfigurableProcessController"
  },
  "api/VRBuilder.Netcode.Properties.BooleanDataPropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.BooleanDataPropertyNetcode.html",
    "title": "Class BooleanDataPropertyNetcode | VR Builder Documentation",
    "keywords": "Class BooleanDataPropertyNetcode Inheritance System.Object Unity.Netcode.NetworkBehaviour DataPropertyNetcode < System.Boolean > BooleanDataPropertyNetcode Implements ISceneObjectPropertyExtension < BooleanDataProperty > Inherited Members DataPropertyNetcode<Boolean>.DataProperty Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class BooleanDataPropertyNetcode : DataPropertyNetcode<bool>, ISceneObjectPropertyExtension<BooleanDataProperty> Constructors BooleanDataPropertyNetcode() Declaration public BooleanDataPropertyNetcode() Properties DataPropertyNetwork Declaration protected override bool DataPropertyNetwork { get; set; } Property Value Type Description System.Boolean Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Boolean>.DataPropertyNetwork Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Boolean>.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Boolean>.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Boolean>.__initializeVariables() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Boolean>.OnNetworkSpawn() RequestDataPropertyChange(Boolean) Declaration protected override void RequestDataPropertyChange(bool value) Parameters Type Name Description System.Boolean value Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Boolean>.RequestDataPropertyChange(System.Boolean) Events NetworkValueChanged Declaration protected override event EventHandler<NetworkValueChangedEventArgs<bool>> NetworkValueChanged Event Type Type Description System.EventHandler < NetworkValueChangedEventArgs < System.Boolean >> Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Boolean>.NetworkValueChanged Implements ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Netcode.Properties.DataPropertyNetcode-1.html": {
    "href": "api/VRBuilder.Netcode.Properties.DataPropertyNetcode-1.html",
    "title": "Class DataPropertyNetcode<T> | VR Builder Documentation",
    "keywords": "Class DataPropertyNetcode<T> Inheritance System.Object Unity.Netcode.NetworkBehaviour DataPropertyNetcode<T> BooleanDataPropertyNetcode IntegerDataPropertyNetcode NumberDataPropertyNetcode TextDataPropertyNetcode Inherited Members Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public abstract class DataPropertyNetcode<T> : NetworkBehaviour Type Parameters Name Description T Constructors DataPropertyNetcode() Declaration protected DataPropertyNetcode() Fields DataProperty Declaration protected IDataProperty<T> DataProperty Field Value Type Description IDataProperty <T> Properties DataPropertyNetwork Declaration protected abstract T DataPropertyNetwork { get; set; } Property Value Type Description T Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides Unity.Netcode.NetworkBehaviour.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides Unity.Netcode.NetworkBehaviour.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides Unity.Netcode.NetworkBehaviour.__initializeVariables() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() RequestDataPropertyChange(T) Declaration protected abstract void RequestDataPropertyChange(T value) Parameters Type Name Description T value Events NetworkValueChanged Declaration protected abstract event EventHandler<NetworkValueChangedEventArgs<T>> NetworkValueChanged Event Type Type Description System.EventHandler < NetworkValueChangedEventArgs <T>>"
  },
  "api/VRBuilder.Netcode.Properties.GrabbablePropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.GrabbablePropertyNetcode.html",
    "title": "Class GrabbablePropertyNetcode | VR Builder Documentation",
    "keywords": "Class GrabbablePropertyNetcode Inheritance System.Object Unity.Netcode.NetworkBehaviour LockablePropertyNetcode GrabbablePropertyNetcode Implements ISceneObjectPropertyExtension < IGrabbableProperty > Inherited Members LockablePropertyNetcode.isLocked Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class GrabbablePropertyNetcode : LockablePropertyNetcode, ISceneObjectPropertyExtension<IGrabbableProperty> Constructors GrabbablePropertyNetcode() Declaration public GrabbablePropertyNetcode() Fields grabbableProperty Declaration protected IGrabbableProperty grabbableProperty Field Value Type Description IGrabbableProperty Properties LockableProperty Declaration protected override ILockable LockableProperty { get; } Property Value Type Description ILockable Overrides LockablePropertyNetcode.LockableProperty Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides LockablePropertyNetcode.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides LockablePropertyNetcode.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides LockablePropertyNetcode.__initializeVariables() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides LockablePropertyNetcode.OnNetworkSpawn() Implements ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Netcode.Properties.HighlightPropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.HighlightPropertyNetcode.html",
    "title": "Class HighlightPropertyNetcode | VR Builder Documentation",
    "keywords": "Class HighlightPropertyNetcode Inheritance System.Object Unity.Netcode.NetworkBehaviour HighlightPropertyNetcode Implements ISceneObjectPropertyExtension < IHighlightProperty > Inherited Members Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class HighlightPropertyNetcode : NetworkBehaviour, ISceneObjectPropertyExtension<IHighlightProperty> Constructors HighlightPropertyNetcode() Declaration public HighlightPropertyNetcode() Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides Unity.Netcode.NetworkBehaviour.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides Unity.Netcode.NetworkBehaviour.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides Unity.Netcode.NetworkBehaviour.__initializeVariables() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() Implements ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Netcode.Properties.html": {
    "href": "api/VRBuilder.Netcode.Properties.html",
    "title": "Namespace VRBuilder.Netcode.Properties | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.Properties Classes BooleanDataPropertyNetcode DataPropertyNetcode<T> GrabbablePropertyNetcode HighlightPropertyNetcode IntegerDataPropertyNetcode NetworkValueChangedEventArgs<T> NumberDataPropertyNetcode SnappablePropertyNetcode SnapZoneNetworkValidator SnapZonePropertyNetcode TeleportationPropertyNetcode TextDataPropertyNetcode TouchablePropertyNetcode UsablePropertyNetcode"
  },
  "api/VRBuilder.Netcode.Properties.IntegerDataPropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.IntegerDataPropertyNetcode.html",
    "title": "Class IntegerDataPropertyNetcode | VR Builder Documentation",
    "keywords": "Class IntegerDataPropertyNetcode Inheritance System.Object Unity.Netcode.NetworkBehaviour DataPropertyNetcode < System.Int32 > IntegerDataPropertyNetcode Inherited Members DataPropertyNetcode<Int32>.DataProperty Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class IntegerDataPropertyNetcode : DataPropertyNetcode<int> Constructors IntegerDataPropertyNetcode() Declaration public IntegerDataPropertyNetcode() Properties DataPropertyNetwork Declaration protected override int DataPropertyNetwork { get; set; } Property Value Type Description System.Int32 Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Int32>.DataPropertyNetwork Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Int32>.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Int32>.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Int32>.__initializeVariables() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Int32>.OnNetworkSpawn() RequestDataPropertyChange(Int32) Declaration protected override void RequestDataPropertyChange(int value) Parameters Type Name Description System.Int32 value Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Int32>.RequestDataPropertyChange(System.Int32) Events NetworkValueChanged Declaration protected override event EventHandler<NetworkValueChangedEventArgs<int>> NetworkValueChanged Event Type Type Description System.EventHandler < NetworkValueChangedEventArgs < System.Int32 >> Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Int32>.NetworkValueChanged"
  },
  "api/VRBuilder.Netcode.Properties.NetworkValueChangedEventArgs-1.html": {
    "href": "api/VRBuilder.Netcode.Properties.NetworkValueChangedEventArgs-1.html",
    "title": "Class NetworkValueChangedEventArgs<T> | VR Builder Documentation",
    "keywords": "Class NetworkValueChangedEventArgs<T> Inheritance System.Object NetworkValueChangedEventArgs<T> Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class NetworkValueChangedEventArgs<T> : EventArgs Type Parameters Name Description T Constructors NetworkValueChangedEventArgs(T, T) Declaration public NetworkValueChangedEventArgs(T oldValue, T newValue) Parameters Type Name Description T oldValue T newValue Fields NewValue Declaration public readonly T NewValue Field Value Type Description T OldValue Declaration public readonly T OldValue Field Value Type Description T"
  },
  "api/VRBuilder.Netcode.Properties.NumberDataPropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.NumberDataPropertyNetcode.html",
    "title": "Class NumberDataPropertyNetcode | VR Builder Documentation",
    "keywords": "Class NumberDataPropertyNetcode Inheritance System.Object Unity.Netcode.NetworkBehaviour DataPropertyNetcode < System.Single > NumberDataPropertyNetcode Implements ISceneObjectPropertyExtension < NumberDataProperty > Inherited Members DataPropertyNetcode<Single>.DataProperty Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class NumberDataPropertyNetcode : DataPropertyNetcode<float>, ISceneObjectPropertyExtension<NumberDataProperty> Constructors NumberDataPropertyNetcode() Declaration public NumberDataPropertyNetcode() Properties DataPropertyNetwork Declaration protected override float DataPropertyNetwork { get; set; } Property Value Type Description System.Single Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Single>.DataPropertyNetwork Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Single>.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Single>.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Single>.__initializeVariables() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Single>.OnNetworkSpawn() RequestDataPropertyChange(Single) Declaration protected override void RequestDataPropertyChange(float value) Parameters Type Name Description System.Single value Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Single>.RequestDataPropertyChange(System.Single) Events NetworkValueChanged Declaration protected override event EventHandler<NetworkValueChangedEventArgs<float>> NetworkValueChanged Event Type Type Description System.EventHandler < NetworkValueChangedEventArgs < System.Single >> Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.Single>.NetworkValueChanged Implements ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Netcode.Properties.SnappablePropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.SnappablePropertyNetcode.html",
    "title": "Class SnappablePropertyNetcode | VR Builder Documentation",
    "keywords": "Class SnappablePropertyNetcode Inheritance System.Object Unity.Netcode.NetworkBehaviour LockablePropertyNetcode SnappablePropertyNetcode Implements ISceneObjectPropertyExtension < ISnappableProperty > Inherited Members LockablePropertyNetcode.isLocked Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class SnappablePropertyNetcode : LockablePropertyNetcode, ISceneObjectPropertyExtension<ISnappableProperty> Constructors SnappablePropertyNetcode() Declaration public SnappablePropertyNetcode() Fields snappableProperty Declaration protected ISnappableProperty snappableProperty Field Value Type Description ISnappableProperty Properties LockableProperty Declaration protected override ILockable LockableProperty { get; } Property Value Type Description ILockable Overrides LockablePropertyNetcode.LockableProperty Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides LockablePropertyNetcode.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides LockablePropertyNetcode.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides LockablePropertyNetcode.__initializeVariables() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides LockablePropertyNetcode.OnNetworkSpawn() Implements ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Netcode.Properties.SnapZoneNetworkValidator.html": {
    "href": "api/VRBuilder.Netcode.Properties.SnapZoneNetworkValidator.html",
    "title": "Class SnapZoneNetworkValidator | VR Builder Documentation",
    "keywords": "Class SnapZoneNetworkValidator Inheritance System.Object Validator SnapZoneNetworkValidator Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class SnapZoneNetworkValidator : Validator Constructors SnapZoneNetworkValidator() Declaration public SnapZoneNetworkValidator() Methods Validate(GameObject) Declaration public override bool Validate(GameObject obj) Parameters Type Name Description UnityEngine.GameObject obj Returns Type Description System.Boolean Overrides Validator.Validate(GameObject)"
  },
  "api/VRBuilder.Netcode.Properties.SnapZonePropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.SnapZonePropertyNetcode.html",
    "title": "Class SnapZonePropertyNetcode | VR Builder Documentation",
    "keywords": "Class SnapZonePropertyNetcode Inheritance System.Object Unity.Netcode.NetworkBehaviour LockablePropertyNetcode SnapZonePropertyNetcode Implements ISceneObjectPropertyExtension < ISnapZoneProperty > Inherited Members LockablePropertyNetcode.isLocked Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class SnapZonePropertyNetcode : LockablePropertyNetcode, ISceneObjectPropertyExtension<ISnapZoneProperty> Constructors SnapZonePropertyNetcode() Declaration public SnapZonePropertyNetcode() Fields snapZoneProperty Declaration protected ISnapZoneProperty snapZoneProperty Field Value Type Description ISnapZoneProperty Properties LockableProperty Declaration protected override ILockable LockableProperty { get; } Property Value Type Description ILockable Overrides LockablePropertyNetcode.LockableProperty Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides LockablePropertyNetcode.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides LockablePropertyNetcode.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides LockablePropertyNetcode.__initializeVariables() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides LockablePropertyNetcode.OnNetworkSpawn() Implements ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Netcode.Properties.TeleportationPropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.TeleportationPropertyNetcode.html",
    "title": "Class TeleportationPropertyNetcode | VR Builder Documentation",
    "keywords": "Class TeleportationPropertyNetcode Inheritance System.Object Unity.Netcode.NetworkBehaviour LockablePropertyNetcode TeleportationPropertyNetcode Implements ISceneObjectPropertyExtension < ITeleportationProperty > Inherited Members LockablePropertyNetcode.isLocked Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class TeleportationPropertyNetcode : LockablePropertyNetcode, ISceneObjectPropertyExtension<ITeleportationProperty> Constructors TeleportationPropertyNetcode() Declaration public TeleportationPropertyNetcode() Properties LockableProperty Declaration protected override ILockable LockableProperty { get; } Property Value Type Description ILockable Overrides LockablePropertyNetcode.LockableProperty Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides LockablePropertyNetcode.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides LockablePropertyNetcode.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides LockablePropertyNetcode.__initializeVariables() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides LockablePropertyNetcode.OnNetworkSpawn() Implements ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Netcode.Properties.TextDataPropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.TextDataPropertyNetcode.html",
    "title": "Class TextDataPropertyNetcode | VR Builder Documentation",
    "keywords": "Class TextDataPropertyNetcode Inheritance System.Object Unity.Netcode.NetworkBehaviour DataPropertyNetcode < System.String > TextDataPropertyNetcode Implements ISceneObjectPropertyExtension < TextDataProperty > Inherited Members DataPropertyNetcode<String>.DataProperty Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class TextDataPropertyNetcode : DataPropertyNetcode<string>, ISceneObjectPropertyExtension<TextDataProperty> Constructors TextDataPropertyNetcode() Declaration public TextDataPropertyNetcode() Properties DataPropertyNetwork Declaration protected override string DataPropertyNetwork { get; set; } Property Value Type Description System.String Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.String>.DataPropertyNetwork Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.String>.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.String>.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.String>.__initializeVariables() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.String>.OnNetworkSpawn() RequestDataPropertyChange(String) Declaration protected override void RequestDataPropertyChange(string value) Parameters Type Name Description System.String value Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.String>.RequestDataPropertyChange(System.String) Events NetworkValueChanged Declaration protected override event EventHandler<NetworkValueChangedEventArgs<string>> NetworkValueChanged Event Type Type Description System.EventHandler < NetworkValueChangedEventArgs < System.String >> Overrides VRBuilder.Netcode.Properties.DataPropertyNetcode<System.String>.NetworkValueChanged Implements ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Netcode.Properties.TouchablePropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.TouchablePropertyNetcode.html",
    "title": "Class TouchablePropertyNetcode | VR Builder Documentation",
    "keywords": "Class TouchablePropertyNetcode Inheritance System.Object Unity.Netcode.NetworkBehaviour LockablePropertyNetcode TouchablePropertyNetcode Implements ISceneObjectPropertyExtension < ITouchableProperty > Inherited Members LockablePropertyNetcode.isLocked Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class TouchablePropertyNetcode : LockablePropertyNetcode, ISceneObjectPropertyExtension<ITouchableProperty> Constructors TouchablePropertyNetcode() Declaration public TouchablePropertyNetcode() Fields touchableProperty Declaration protected ITouchableProperty touchableProperty Field Value Type Description ITouchableProperty Properties LockableProperty Declaration protected override ILockable LockableProperty { get; } Property Value Type Description ILockable Overrides LockablePropertyNetcode.LockableProperty Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides LockablePropertyNetcode.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides LockablePropertyNetcode.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides LockablePropertyNetcode.__initializeVariables() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides LockablePropertyNetcode.OnNetworkSpawn() Implements ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Netcode.Properties.UsablePropertyNetcode.html": {
    "href": "api/VRBuilder.Netcode.Properties.UsablePropertyNetcode.html",
    "title": "Class UsablePropertyNetcode | VR Builder Documentation",
    "keywords": "Class UsablePropertyNetcode Inheritance System.Object Unity.Netcode.NetworkBehaviour LockablePropertyNetcode UsablePropertyNetcode Implements ISceneObjectPropertyExtension < IUsableProperty > Inherited Members LockablePropertyNetcode.isLocked Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.Properties Assembly : VRBuilder.Netcode.dll Syntax public class UsablePropertyNetcode : LockablePropertyNetcode, ISceneObjectPropertyExtension<IUsableProperty> Constructors UsablePropertyNetcode() Declaration public UsablePropertyNetcode() Fields usableProperty Declaration protected IUsableProperty usableProperty Field Value Type Description IUsableProperty Properties LockableProperty Declaration protected override ILockable LockableProperty { get; } Property Value Type Description ILockable Overrides LockablePropertyNetcode.LockableProperty Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides LockablePropertyNetcode.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides LockablePropertyNetcode.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides LockablePropertyNetcode.__initializeVariables() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides LockablePropertyNetcode.OnNetworkSpawn() Implements ISceneObjectPropertyExtension<T>"
  },
  "api/VRBuilder.Netcode.User.CommandLineColorSelector.html": {
    "href": "api/VRBuilder.Netcode.User.CommandLineColorSelector.html",
    "title": "Class CommandLineColorSelector | VR Builder Documentation",
    "keywords": "Class CommandLineColorSelector Inheritance System.Object Unity.Netcode.NetworkBehaviour CommandLineColorSelector Inherited Members Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.User Assembly : VRBuilder.Netcode.dll Syntax public class CommandLineColorSelector : NetworkBehaviour Constructors CommandLineColorSelector() Declaration public CommandLineColorSelector() Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides Unity.Netcode.NetworkBehaviour.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides Unity.Netcode.NetworkBehaviour.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides Unity.Netcode.NetworkBehaviour.__initializeVariables() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() RequestNewAvatarColorServerRpc(Color) Declaration [ServerRpc] public void RequestNewAvatarColorServerRpc(Color requestedColor) Parameters Type Name Description UnityEngine.Color requestedColor"
  },
  "api/VRBuilder.Netcode.User.CommandLineUserNameProvider.html": {
    "href": "api/VRBuilder.Netcode.User.CommandLineUserNameProvider.html",
    "title": "Class CommandLineUserNameProvider | VR Builder Documentation",
    "keywords": "Class CommandLineUserNameProvider Inheritance System.Object Unity.Netcode.NetworkBehaviour CommandLineUserNameProvider Implements IUserNameProvider Inherited Members Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.User Assembly : VRBuilder.Netcode.dll Syntax public class CommandLineUserNameProvider : NetworkBehaviour, IUserNameProvider Constructors CommandLineUserNameProvider() Declaration public CommandLineUserNameProvider() Properties UserName Declaration public string UserName { get; } Property Value Type Description System.String Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides Unity.Netcode.NetworkBehaviour.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides Unity.Netcode.NetworkBehaviour.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides Unity.Netcode.NetworkBehaviour.__initializeVariables() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() RequestNewUserNameServerRpc(String) Declaration [ServerRpc] public void RequestNewUserNameServerRpc(string newUserName) Parameters Type Name Description System.String newUserName Events UserNameChanged Declaration public event EventHandler<UserNameProviderEventArgs> UserNameChanged Event Type Type Description System.EventHandler < UserNameProviderEventArgs > Implements IUserNameProvider"
  },
  "api/VRBuilder.Netcode.User.html": {
    "href": "api/VRBuilder.Netcode.User.html",
    "title": "Namespace VRBuilder.Netcode.User | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.User Classes CommandLineColorSelector CommandLineUserNameProvider InteractionOwnershipRequester OwnerSetChildrenInactive PlaceOnSpawnPoint PointTowardsMainCamera UserNameProviderEventArgs UserSpawnPoint Interfaces IUserNameProvider"
  },
  "api/VRBuilder.Netcode.User.InteractionOwnershipRequester.html": {
    "href": "api/VRBuilder.Netcode.User.InteractionOwnershipRequester.html",
    "title": "Class InteractionOwnershipRequester | VR Builder Documentation",
    "keywords": "Class InteractionOwnershipRequester Inheritance System.Object Unity.Netcode.NetworkBehaviour InteractionOwnershipRequester Inherited Members Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.User Assembly : VRBuilder.Netcode.dll Syntax public class InteractionOwnershipRequester : NetworkBehaviour Constructors InteractionOwnershipRequester() Declaration public InteractionOwnershipRequester() Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides Unity.Netcode.NetworkBehaviour.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides Unity.Netcode.NetworkBehaviour.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides Unity.Netcode.NetworkBehaviour.__initializeVariables() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() RequestOwnershipServerRpc(UInt64, NetworkObjectReference) Declaration [ServerRpc] public void RequestOwnershipServerRpc(ulong ownerID, NetworkObjectReference selectedObjectReference) Parameters Type Name Description System.UInt64 ownerID Unity.Netcode.NetworkObjectReference selectedObjectReference"
  },
  "api/VRBuilder.Netcode.User.IUserNameProvider.html": {
    "href": "api/VRBuilder.Netcode.User.IUserNameProvider.html",
    "title": "Interface IUserNameProvider | VR Builder Documentation",
    "keywords": "Interface IUserNameProvider Namespace : VRBuilder.Netcode.User Assembly : VRBuilder.Netcode.dll Syntax public interface IUserNameProvider Properties UserName Declaration string UserName { get; } Property Value Type Description System.String Events UserNameChanged Declaration event EventHandler<UserNameProviderEventArgs> UserNameChanged Event Type Type Description System.EventHandler < UserNameProviderEventArgs >"
  },
  "api/VRBuilder.Netcode.User.OwnerSetChildrenInactive.html": {
    "href": "api/VRBuilder.Netcode.User.OwnerSetChildrenInactive.html",
    "title": "Class OwnerSetChildrenInactive | VR Builder Documentation",
    "keywords": "Class OwnerSetChildrenInactive Inheritance System.Object Unity.Netcode.NetworkBehaviour OwnerSetChildrenInactive Inherited Members Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.User Assembly : VRBuilder.Netcode.dll Syntax public class OwnerSetChildrenInactive : NetworkBehaviour Constructors OwnerSetChildrenInactive() Declaration public OwnerSetChildrenInactive() Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides Unity.Netcode.NetworkBehaviour.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides Unity.Netcode.NetworkBehaviour.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides Unity.Netcode.NetworkBehaviour.__initializeVariables() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() OnOwnershipChanged(UInt64, UInt64) Declaration protected override void OnOwnershipChanged(ulong previous, ulong current) Parameters Type Name Description System.UInt64 previous System.UInt64 current Overrides Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64)"
  },
  "api/VRBuilder.Netcode.User.PlaceOnSpawnPoint.html": {
    "href": "api/VRBuilder.Netcode.User.PlaceOnSpawnPoint.html",
    "title": "Class PlaceOnSpawnPoint | VR Builder Documentation",
    "keywords": "Class PlaceOnSpawnPoint Inheritance System.Object Unity.Netcode.NetworkBehaviour PlaceOnSpawnPoint Inherited Members Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.User Assembly : VRBuilder.Netcode.dll Syntax public class PlaceOnSpawnPoint : NetworkBehaviour Constructors PlaceOnSpawnPoint() Declaration public PlaceOnSpawnPoint() Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides Unity.Netcode.NetworkBehaviour.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides Unity.Netcode.NetworkBehaviour.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides Unity.Netcode.NetworkBehaviour.__initializeVariables() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn()"
  },
  "api/VRBuilder.Netcode.User.PointTowardsMainCamera.html": {
    "href": "api/VRBuilder.Netcode.User.PointTowardsMainCamera.html",
    "title": "Class PointTowardsMainCamera | VR Builder Documentation",
    "keywords": "Class PointTowardsMainCamera Inheritance System.Object PointTowardsMainCamera Namespace : VRBuilder.Netcode.User Assembly : VRBuilder.Netcode.dll Syntax public class PointTowardsMainCamera : MonoBehaviour Constructors PointTowardsMainCamera() Declaration public PointTowardsMainCamera()"
  },
  "api/VRBuilder.Netcode.User.UI.html": {
    "href": "api/VRBuilder.Netcode.User.UI.html",
    "title": "Namespace VRBuilder.Netcode.User.UI | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.User.UI Classes TextMeshProUserNameDisplay"
  },
  "api/VRBuilder.Netcode.User.UI.TextMeshProUserNameDisplay.html": {
    "href": "api/VRBuilder.Netcode.User.UI.TextMeshProUserNameDisplay.html",
    "title": "Class TextMeshProUserNameDisplay | VR Builder Documentation",
    "keywords": "Class TextMeshProUserNameDisplay Inheritance System.Object TextMeshProUserNameDisplay Namespace : VRBuilder.Netcode.User.UI Assembly : VRBuilder.Netcode.dll Syntax public class TextMeshProUserNameDisplay : MonoBehaviour Constructors TextMeshProUserNameDisplay() Declaration public TextMeshProUserNameDisplay()"
  },
  "api/VRBuilder.Netcode.User.UserNameProviderEventArgs.html": {
    "href": "api/VRBuilder.Netcode.User.UserNameProviderEventArgs.html",
    "title": "Class UserNameProviderEventArgs | VR Builder Documentation",
    "keywords": "Class UserNameProviderEventArgs Inheritance System.Object UserNameProviderEventArgs Namespace : VRBuilder.Netcode.User Assembly : VRBuilder.Netcode.dll Syntax public class UserNameProviderEventArgs : EventArgs Constructors UserNameProviderEventArgs(String, String) Declaration public UserNameProviderEventArgs(string newValue, string oldValue) Parameters Type Name Description System.String newValue System.String oldValue Fields NewValue Declaration public readonly string NewValue Field Value Type Description System.String OldValue Declaration public readonly string OldValue Field Value Type Description System.String"
  },
  "api/VRBuilder.Netcode.User.UserSpawnPoint.html": {
    "href": "api/VRBuilder.Netcode.User.UserSpawnPoint.html",
    "title": "Class UserSpawnPoint | VR Builder Documentation",
    "keywords": "Class UserSpawnPoint Inheritance System.Object UserSpawnPoint Namespace : VRBuilder.Netcode.User Assembly : VRBuilder.Netcode.dll Syntax public class UserSpawnPoint : MonoBehaviour Constructors UserSpawnPoint() Declaration public UserSpawnPoint() Properties Id Declaration public int Id { get; } Property Value Type Description System.Int32"
  },
  "api/VRBuilder.Netcode.UX.html": {
    "href": "api/VRBuilder.Netcode.UX.html",
    "title": "Namespace VRBuilder.Netcode.UX | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.UX Classes NetcodeProcessController"
  },
  "api/VRBuilder.Netcode.UX.NetcodeProcessController.html": {
    "href": "api/VRBuilder.Netcode.UX.NetcodeProcessController.html",
    "title": "Class NetcodeProcessController | VR Builder Documentation",
    "keywords": "Class NetcodeProcessController Inheritance System.Object BaseProcessController NetcodeProcessController Implements IProcessController Inherited Members BaseProcessController.GetProcessControllerPrefab() BaseProcessController.HandlePostSetup(GameObject) Namespace : VRBuilder.Netcode.UX Assembly : VRBuilder.Netcode.dll Syntax public class NetcodeProcessController : BaseProcessController, IProcessController Constructors NetcodeProcessController() Declaration public NetcodeProcessController() Properties Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides BaseProcessController.Name PrefabName Declaration protected override string PrefabName { get; } Property Value Type Description System.String Overrides BaseProcessController.PrefabName Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides BaseProcessController.Priority Methods GetRequiredSetupComponents() Declaration public override List<Type> GetRequiredSetupComponents() Returns Type Description System.Collections.Generic.List < System.Type > Overrides BaseProcessController.GetRequiredSetupComponents() Implements IProcessController"
  },
  "api/VRBuilder.Netcode.VoiceChat.Dissonance.DissonanceVoiceChatService.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.Dissonance.DissonanceVoiceChatService.html",
    "title": "Class DissonanceVoiceChatService | VR Builder Documentation",
    "keywords": "Class DissonanceVoiceChatService Inheritance System.Object DissonanceVoiceChatService Implements IVoiceChatService Namespace : VRBuilder.Netcode.VoiceChat.Dissonance Assembly : VRBuilder.Dissonance.dll Syntax public class DissonanceVoiceChatService : Object, IVoiceChatService Constructors DissonanceVoiceChatService() Declaration public DissonanceVoiceChatService() Properties EditorDisplayName Declaration public string EditorDisplayName { get; } Property Value Type Description System.String InputDevice Declaration public string InputDevice { get; } Property Value Type Description System.String IsPositionalAudio Declaration public bool IsPositionalAudio { get; } Property Value Type Description System.Boolean OutputDevice Declaration public string OutputDevice { get; } Property Value Type Description System.String Status Declaration public IVoiceChatService.VoiceChatServiceStatus Status { get; } Property Value Type Description IVoiceChatService.VoiceChatServiceStatus Users Declaration public IEnumerable<IVoiceChatUser> Users { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IVoiceChatUser > Methods MuteLocalUser(Boolean) Declaration public void MuteLocalUser(bool isMuted) Parameters Type Name Description System.Boolean isMuted SetPosition(Vector3, Vector3, Vector3, Vector3) Declaration public void SetPosition(Vector3 speaker, Vector3 listener, Vector3 listenerForward, Vector3 listenerUp) Parameters Type Name Description UnityEngine.Vector3 speaker UnityEngine.Vector3 listener UnityEngine.Vector3 listenerForward UnityEngine.Vector3 listenerUp Setup() Declaration public void Setup() SignInWithName(String, String) Declaration public void SignInWithName(string displayName, string channelName) Parameters Type Name Description System.String displayName System.String channelName StartDedicatedServer(String) Declaration public void StartDedicatedServer(string channelName) Parameters Type Name Description System.String channelName Events BeginSpeaking Declaration public event EventHandler<VoiceChatServiceEventArgs> BeginSpeaking Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > ConnectionStatusChanged Declaration public event EventHandler ConnectionStatusChanged Event Type Type Description System.EventHandler EndSpeaking Declaration public event EventHandler<VoiceChatServiceEventArgs> EndSpeaking Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > LocalUserMuted Declaration public event EventHandler LocalUserMuted Event Type Type Description System.EventHandler LocalUserUnmuted Declaration public event EventHandler LocalUserUnmuted Event Type Type Description System.EventHandler ServiceInitialized Declaration public event EventHandler ServiceInitialized Event Type Type Description System.EventHandler UserJoined Declaration public event EventHandler<VoiceChatServiceEventArgs> UserJoined Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > UserLeft Declaration public event EventHandler<VoiceChatServiceEventArgs> UserLeft Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > Implements IVoiceChatService"
  },
  "api/VRBuilder.Netcode.VoiceChat.Dissonance.DissonanceVoiceChatUser.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.Dissonance.DissonanceVoiceChatUser.html",
    "title": "Class DissonanceVoiceChatUser | VR Builder Documentation",
    "keywords": "Class DissonanceVoiceChatUser Inheritance System.Object DissonanceVoiceChatUser Implements IVoiceChatUser Namespace : VRBuilder.Netcode.VoiceChat.Dissonance Assembly : VRBuilder.Dissonance.dll Syntax public class DissonanceVoiceChatUser : Object, IVoiceChatUser Constructors DissonanceVoiceChatUser(VoicePlayerState) Declaration public DissonanceVoiceChatUser(VoicePlayerState player) Parameters Type Name Description Dissonance.VoicePlayerState player Properties AudioLevel Declaration public double AudioLevel { get; } Property Value Type Description System.Double IsLocalUser Declaration public bool IsLocalUser { get; } Property Value Type Description System.Boolean IsSpeaking Declaration public bool IsSpeaking { get; } Property Value Type Description System.Boolean Name Declaration public string Name { get; } Property Value Type Description System.String UniqueId Declaration public string UniqueId { get; } Property Value Type Description System.String Implements IVoiceChatUser"
  },
  "api/VRBuilder.Netcode.VoiceChat.Dissonance.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.Dissonance.html",
    "title": "Namespace VRBuilder.Netcode.VoiceChat.Dissonance | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.VoiceChat.Dissonance Classes DissonanceVoiceChatService DissonanceVoiceChatUser"
  },
  "api/VRBuilder.Netcode.VoiceChat.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.html",
    "title": "Namespace VRBuilder.Netcode.VoiceChat | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.VoiceChat Classes IVoiceChatService.VoiceChatServiceStatus VoiceChatInfo VoiceChatManager VoiceChatServiceEventArgs VoiceChatSettings VoiceChatUserData VoiceUserInfo Interfaces IVoiceChatService IVoiceChatUser IVoiceChatUserData"
  },
  "api/VRBuilder.Netcode.VoiceChat.IVoiceChatService.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.IVoiceChatService.html",
    "title": "Interface IVoiceChatService | VR Builder Documentation",
    "keywords": "Interface IVoiceChatService Namespace : VRBuilder.Netcode.VoiceChat Assembly : VRBuilder.Netcode.dll Syntax public interface IVoiceChatService Properties EditorDisplayName Declaration string EditorDisplayName { get; } Property Value Type Description System.String InputDevice Declaration string InputDevice { get; } Property Value Type Description System.String IsPositionalAudio Declaration bool IsPositionalAudio { get; } Property Value Type Description System.Boolean OutputDevice Declaration string OutputDevice { get; } Property Value Type Description System.String Status Declaration IVoiceChatService.VoiceChatServiceStatus Status { get; } Property Value Type Description IVoiceChatService.VoiceChatServiceStatus Users Declaration IEnumerable<IVoiceChatUser> Users { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IVoiceChatUser > Methods MuteLocalUser(Boolean) Declaration void MuteLocalUser(bool isMuted) Parameters Type Name Description System.Boolean isMuted SetPosition(Vector3, Vector3, Vector3, Vector3) Declaration void SetPosition(Vector3 speaker, Vector3 listener, Vector3 listenerForward, Vector3 listenerUp) Parameters Type Name Description UnityEngine.Vector3 speaker UnityEngine.Vector3 listener UnityEngine.Vector3 listenerForward UnityEngine.Vector3 listenerUp Setup() Declaration void Setup() SignInWithName(String, String) Declaration void SignInWithName(string displayName, string channelName) Parameters Type Name Description System.String displayName System.String channelName StartDedicatedServer(String) Declaration void StartDedicatedServer(string channelName) Parameters Type Name Description System.String channelName Events BeginSpeaking Declaration event EventHandler<VoiceChatServiceEventArgs> BeginSpeaking Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > ConnectionStatusChanged Declaration event EventHandler ConnectionStatusChanged Event Type Type Description System.EventHandler EndSpeaking Declaration event EventHandler<VoiceChatServiceEventArgs> EndSpeaking Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > LocalUserMuted Declaration event EventHandler LocalUserMuted Event Type Type Description System.EventHandler LocalUserUnmuted Declaration event EventHandler LocalUserUnmuted Event Type Type Description System.EventHandler ServiceInitialized Declaration event EventHandler ServiceInitialized Event Type Type Description System.EventHandler UserJoined Declaration event EventHandler<VoiceChatServiceEventArgs> UserJoined Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > UserLeft Declaration event EventHandler<VoiceChatServiceEventArgs> UserLeft Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs >"
  },
  "api/VRBuilder.Netcode.VoiceChat.IVoiceChatService.VoiceChatServiceStatus.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.IVoiceChatService.VoiceChatServiceStatus.html",
    "title": "Class IVoiceChatService.VoiceChatServiceStatus | VR Builder Documentation",
    "keywords": "Class IVoiceChatService.VoiceChatServiceStatus Inheritance System.Object IVoiceChatService.VoiceChatServiceStatus Namespace : VRBuilder.Netcode.VoiceChat Assembly : VRBuilder.Netcode.dll Syntax public sealed class VoiceChatServiceStatus : Enum Fields Connected Declaration public const IVoiceChatService.VoiceChatServiceStatus Connected Field Value Type Description IVoiceChatService.VoiceChatServiceStatus Connecting Declaration public const IVoiceChatService.VoiceChatServiceStatus Connecting Field Value Type Description IVoiceChatService.VoiceChatServiceStatus Disconnected Declaration public const IVoiceChatService.VoiceChatServiceStatus Disconnected Field Value Type Description IVoiceChatService.VoiceChatServiceStatus Disconnecting Declaration public const IVoiceChatService.VoiceChatServiceStatus Disconnecting Field Value Type Description IVoiceChatService.VoiceChatServiceStatus Error Declaration public const IVoiceChatService.VoiceChatServiceStatus Error Field Value Type Description IVoiceChatService.VoiceChatServiceStatus Inactive Declaration public const IVoiceChatService.VoiceChatServiceStatus Inactive Field Value Type Description IVoiceChatService.VoiceChatServiceStatus value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/VRBuilder.Netcode.VoiceChat.IVoiceChatUser.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.IVoiceChatUser.html",
    "title": "Interface IVoiceChatUser | VR Builder Documentation",
    "keywords": "Interface IVoiceChatUser Namespace : VRBuilder.Netcode.VoiceChat Assembly : VRBuilder.Netcode.dll Syntax public interface IVoiceChatUser Properties AudioLevel Declaration double AudioLevel { get; } Property Value Type Description System.Double IsLocalUser Declaration bool IsLocalUser { get; } Property Value Type Description System.Boolean IsSpeaking Declaration bool IsSpeaking { get; } Property Value Type Description System.Boolean Name Declaration string Name { get; } Property Value Type Description System.String UniqueId Declaration string UniqueId { get; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Netcode.VoiceChat.IVoiceChatUserData.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.IVoiceChatUserData.html",
    "title": "Interface IVoiceChatUserData | VR Builder Documentation",
    "keywords": "Interface IVoiceChatUserData Namespace : VRBuilder.Netcode.VoiceChat Assembly : VRBuilder.Netcode.dll Syntax public interface IVoiceChatUserData Properties IsConnected Declaration bool IsConnected { get; } Property Value Type Description System.Boolean User Declaration IVoiceChatUser User { get; } Property Value Type Description IVoiceChatUser"
  },
  "api/VRBuilder.Netcode.VoiceChat.UI.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.UI.html",
    "title": "Namespace VRBuilder.Netcode.VoiceChat.UI | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.VoiceChat.UI Classes VoiceChatStatusIndicator"
  },
  "api/VRBuilder.Netcode.VoiceChat.UI.VoiceChatStatusIndicator.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.UI.VoiceChatStatusIndicator.html",
    "title": "Class VoiceChatStatusIndicator | VR Builder Documentation",
    "keywords": "Class VoiceChatStatusIndicator Inheritance System.Object VoiceChatStatusIndicator Namespace : VRBuilder.Netcode.VoiceChat.UI Assembly : VRBuilder.Netcode.dll Syntax public class VoiceChatStatusIndicator : MonoBehaviour Constructors VoiceChatStatusIndicator() Declaration public VoiceChatStatusIndicator()"
  },
  "api/VRBuilder.Netcode.VoiceChat.Vivox.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.Vivox.html",
    "title": "Namespace VRBuilder.Netcode.VoiceChat.Vivox | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.VoiceChat.Vivox Classes VivoxVoiceChatService VivoxVoiceChatUser"
  },
  "api/VRBuilder.Netcode.VoiceChat.Vivox.VivoxVoiceChatService.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.Vivox.VivoxVoiceChatService.html",
    "title": "Class VivoxVoiceChatService | VR Builder Documentation",
    "keywords": "Class VivoxVoiceChatService Inheritance System.Object VivoxVoiceChatService Implements IVoiceChatService Namespace : VRBuilder.Netcode.VoiceChat.Vivox Assembly : VRBuilder.Vivox.dll Syntax public class VivoxVoiceChatService : Object, IVoiceChatService Constructors VivoxVoiceChatService() Declaration public VivoxVoiceChatService() VivoxVoiceChatService(Boolean) Declaration public VivoxVoiceChatService(bool isPositionalAudio = false) Parameters Type Name Description System.Boolean isPositionalAudio Properties EditorDisplayName Declaration public string EditorDisplayName { get; } Property Value Type Description System.String InputDevice Declaration public string InputDevice { get; } Property Value Type Description System.String IsPositionalAudio Declaration public bool IsPositionalAudio { get; } Property Value Type Description System.Boolean OutputDevice Declaration public string OutputDevice { get; } Property Value Type Description System.String Status Declaration public IVoiceChatService.VoiceChatServiceStatus Status { get; } Property Value Type Description IVoiceChatService.VoiceChatServiceStatus Users Declaration public IEnumerable<IVoiceChatUser> Users { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IVoiceChatUser > Methods JoinChannel() Declaration public void JoinChannel() MuteLocalUser(Boolean) Declaration public void MuteLocalUser(bool isMuted) Parameters Type Name Description System.Boolean isMuted SetPosition(Vector3, Vector3, Vector3, Vector3) Declaration public void SetPosition(Vector3 speaker, Vector3 listener, Vector3 listenerForward, Vector3 listenerUp) Parameters Type Name Description UnityEngine.Vector3 speaker UnityEngine.Vector3 listener UnityEngine.Vector3 listenerForward UnityEngine.Vector3 listenerUp Setup() Declaration public void Setup() SignInWithName(String, String) Declaration public void SignInWithName(string displayName, string channelName) Parameters Type Name Description System.String displayName System.String channelName StartDedicatedServer(String) Declaration public void StartDedicatedServer(string channelName) Parameters Type Name Description System.String channelName Events BeginSpeaking Declaration public event EventHandler<VoiceChatServiceEventArgs> BeginSpeaking Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > ConnectionStatusChanged Declaration public event EventHandler ConnectionStatusChanged Event Type Type Description System.EventHandler EndSpeaking Declaration public event EventHandler<VoiceChatServiceEventArgs> EndSpeaking Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > LocalUserMuted Declaration public event EventHandler LocalUserMuted Event Type Type Description System.EventHandler LocalUserUnmuted Declaration public event EventHandler LocalUserUnmuted Event Type Type Description System.EventHandler ServiceInitialized Declaration public event EventHandler ServiceInitialized Event Type Type Description System.EventHandler UserJoined Declaration public event EventHandler<VoiceChatServiceEventArgs> UserJoined Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > UserLeft Declaration public event EventHandler<VoiceChatServiceEventArgs> UserLeft Event Type Type Description System.EventHandler < VoiceChatServiceEventArgs > Implements IVoiceChatService"
  },
  "api/VRBuilder.Netcode.VoiceChat.Vivox.VivoxVoiceChatUser.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.Vivox.VivoxVoiceChatUser.html",
    "title": "Class VivoxVoiceChatUser | VR Builder Documentation",
    "keywords": "Class VivoxVoiceChatUser Inheritance System.Object VivoxVoiceChatUser Implements IVoiceChatUser Namespace : VRBuilder.Netcode.VoiceChat.Vivox Assembly : VRBuilder.Vivox.dll Syntax public class VivoxVoiceChatUser : Object, IVoiceChatUser Constructors VivoxVoiceChatUser(IParticipant) Declaration public VivoxVoiceChatUser(IParticipant participant) Parameters Type Name Description VivoxUnity.IParticipant participant Properties AudioLevel Declaration public double AudioLevel { get; } Property Value Type Description System.Double IsLocalUser Declaration public bool IsLocalUser { get; } Property Value Type Description System.Boolean IsSpeaking Declaration public bool IsSpeaking { get; } Property Value Type Description System.Boolean Name Declaration public string Name { get; } Property Value Type Description System.String UniqueId Declaration public string UniqueId { get; } Property Value Type Description System.String Implements IVoiceChatUser"
  },
  "api/VRBuilder.Netcode.VoiceChat.VoiceChatInfo.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.VoiceChatInfo.html",
    "title": "Class VoiceChatInfo | VR Builder Documentation",
    "keywords": "Class VoiceChatInfo Inheritance System.Object Unity.Netcode.NetworkBehaviour VoiceChatInfo Inherited Members Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.VoiceChat Assembly : VRBuilder.Netcode.dll Syntax public class VoiceChatInfo : NetworkBehaviour Constructors VoiceChatInfo() Declaration public VoiceChatInfo() Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides Unity.Netcode.NetworkBehaviour.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides Unity.Netcode.NetworkBehaviour.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides Unity.Netcode.NetworkBehaviour.__initializeVariables()"
  },
  "api/VRBuilder.Netcode.VoiceChat.VoiceChatManager.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.VoiceChatManager.html",
    "title": "Class VoiceChatManager | VR Builder Documentation",
    "keywords": "Class VoiceChatManager Inheritance System.Object Unity.Netcode.NetworkBehaviour VoiceChatManager Inherited Members Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.VoiceChat Assembly : VRBuilder.Netcode.dll Syntax public class VoiceChatManager : NetworkBehaviour Constructors VoiceChatManager() Declaration public VoiceChatManager() Properties Instance Declaration public static VoiceChatManager Instance { get; } Property Value Type Description VoiceChatManager VoiceChatService Declaration public IVoiceChatService VoiceChatService { get; } Property Value Type Description IVoiceChatService VoiceChatServiceCreated Declaration public UnityEvent VoiceChatServiceCreated { get; } Property Value Type Description UnityEngine.Events.UnityEvent VoiceChatServiceInitialized Declaration public UnityEvent VoiceChatServiceInitialized { get; } Property Value Type Description UnityEngine.Events.UnityEvent Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides Unity.Netcode.NetworkBehaviour.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides Unity.Netcode.NetworkBehaviour.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides Unity.Netcode.NetworkBehaviour.__initializeVariables() IsUserMuted(String) Declaration public bool IsUserMuted(string userUniqueId) Parameters Type Name Description System.String userUniqueId Returns Type Description System.Boolean MuteUser(String, Boolean) Declaration public void MuteUser(string userUniqueId, bool isMuted) Parameters Type Name Description System.String userUniqueId System.Boolean isMuted OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn()"
  },
  "api/VRBuilder.Netcode.VoiceChat.VoiceChatServiceEventArgs.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.VoiceChatServiceEventArgs.html",
    "title": "Class VoiceChatServiceEventArgs | VR Builder Documentation",
    "keywords": "Class VoiceChatServiceEventArgs Inheritance System.Object VoiceChatServiceEventArgs Namespace : VRBuilder.Netcode.VoiceChat Assembly : VRBuilder.Netcode.dll Syntax public class VoiceChatServiceEventArgs : EventArgs Constructors VoiceChatServiceEventArgs(IVoiceChatUser) Declaration public VoiceChatServiceEventArgs(IVoiceChatUser user) Parameters Type Name Description IVoiceChatUser user Fields User Declaration public readonly IVoiceChatUser User Field Value Type Description IVoiceChatUser"
  },
  "api/VRBuilder.Netcode.VoiceChat.VoiceChatSettings.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.VoiceChatSettings.html",
    "title": "Class VoiceChatSettings | VR Builder Documentation",
    "keywords": "Class VoiceChatSettings Inheritance System.Object SettingsObject < VoiceChatSettings > VoiceChatSettings Inherited Members SettingsObject<VoiceChatSettings>.Save() SettingsObject<VoiceChatSettings>.Finalize() SettingsObject<VoiceChatSettings>.Instance Namespace : VRBuilder.Netcode.VoiceChat Assembly : VRBuilder.Netcode.dll Syntax public class VoiceChatSettings : SettingsObject<VoiceChatSettings> Constructors VoiceChatSettings() Declaration public VoiceChatSettings() Properties PositionUpdateFrequency Declaration public float PositionUpdateFrequency { get; } Property Value Type Description System.Single VoiceChatServiceTypeName Declaration public string VoiceChatServiceTypeName { get; set; } Property Value Type Description System.String"
  },
  "api/VRBuilder.Netcode.VoiceChat.VoiceChatUserData.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.VoiceChatUserData.html",
    "title": "Class VoiceChatUserData | VR Builder Documentation",
    "keywords": "Class VoiceChatUserData Inheritance System.Object Unity.Netcode.NetworkBehaviour VoiceChatUserData Implements IVoiceChatUserData Inherited Members Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.VoiceChat Assembly : VRBuilder.Netcode.dll Syntax public class VoiceChatUserData : NetworkBehaviour, IVoiceChatUserData Constructors VoiceChatUserData() Declaration public VoiceChatUserData() Properties IsConnected Declaration public bool IsConnected { get; } Property Value Type Description System.Boolean User Declaration public IVoiceChatUser User { get; } Property Value Type Description IVoiceChatUser Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides Unity.Netcode.NetworkBehaviour.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides Unity.Netcode.NetworkBehaviour.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides Unity.Netcode.NetworkBehaviour.__initializeVariables() Implements IVoiceChatUserData"
  },
  "api/VRBuilder.Netcode.VoiceChat.VoiceUserInfo.html": {
    "href": "api/VRBuilder.Netcode.VoiceChat.VoiceUserInfo.html",
    "title": "Class VoiceUserInfo | VR Builder Documentation",
    "keywords": "Class VoiceUserInfo Inheritance System.Object VoiceUserInfo Namespace : VRBuilder.Netcode.VoiceChat Assembly : VRBuilder.Netcode.dll Syntax public class VoiceUserInfo : MonoBehaviour Constructors VoiceUserInfo() Declaration public VoiceUserInfo() Properties User Declaration public IVoiceChatUser User { get; } Property Value Type Description IVoiceChatUser Methods InitializeUser(IVoiceChatUser) Declaration public void InitializeUser(IVoiceChatUser user) Parameters Type Name Description IVoiceChatUser user VisualizeMuted(Boolean) Declaration public void VisualizeMuted(bool isMuted) Parameters Type Name Description System.Boolean isMuted"
  },
  "api/VRBuilder.Netcode.XRI.html": {
    "href": "api/VRBuilder.Netcode.XRI.html",
    "title": "Namespace VRBuilder.Netcode.XRI | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Netcode.XRI Classes SnapZoneNetcode"
  },
  "api/VRBuilder.Netcode.XRI.SnapZoneNetcode.html": {
    "href": "api/VRBuilder.Netcode.XRI.SnapZoneNetcode.html",
    "title": "Class SnapZoneNetcode | VR Builder Documentation",
    "keywords": "Class SnapZoneNetcode Inheritance System.Object Unity.Netcode.NetworkBehaviour SnapZoneNetcode Inherited Members Unity.Netcode.NetworkBehaviour.__rpc_func_table Unity.Netcode.NetworkBehaviour.__rpc_name_table Unity.Netcode.NetworkBehaviour.__rpc_exec_stage Unity.Netcode.NetworkBehaviour.NetworkVariableFields Unity.Netcode.NetworkBehaviour.__beginSendServerRpc(System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendServerRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ServerRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendClientRpc(System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendClientRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.ClientRpcParams, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__beginSendRpc(System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__endSendRpc(Unity.Netcode.FastBufferWriter, System.UInt32, Unity.Netcode.RpcParams, Unity.Netcode.RpcAttribute.RpcAttributeParams, Unity.Netcode.SendTo, Unity.Netcode.RpcDelivery) Unity.Netcode.NetworkBehaviour.__createNativeList<T>() Unity.Netcode.NetworkBehaviour.GetNetworkBehaviour(System.UInt16) Unity.Netcode.NetworkBehaviour.OnDeferringDespawn(System.Int32) Unity.Netcode.NetworkBehaviour.OnNetworkPreSpawn(Unity.Netcode.NetworkManager) Unity.Netcode.NetworkBehaviour.OnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.InternalOnNetworkPostSpawn() Unity.Netcode.NetworkBehaviour.OnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.InternalOnNetworkSessionSynchronized() Unity.Netcode.NetworkBehaviour.OnInSceneObjectsSpawned() Unity.Netcode.NetworkBehaviour.OnNetworkDespawn() Unity.Netcode.NetworkBehaviour.OnGainedOwnership() Unity.Netcode.NetworkBehaviour.OnOwnershipChanged(System.UInt64, System.UInt64) Unity.Netcode.NetworkBehaviour.OnLostOwnership() Unity.Netcode.NetworkBehaviour.OnNetworkObjectParentChanged(Unity.Netcode.NetworkObject) Unity.Netcode.NetworkBehaviour.__registerRpc(System.UInt32, Unity.Netcode.NetworkBehaviour.RpcReceiveHandler, System.String) Unity.Netcode.NetworkBehaviour.__nameNetworkVariable(Unity.Netcode.NetworkVariableBase, System.String) Unity.Netcode.NetworkBehaviour.GetNetworkObject(System.UInt64) Unity.Netcode.NetworkBehaviour.OnSynchronize<T>(Unity.Netcode.BufferSerializer<T>) Unity.Netcode.NetworkBehaviour.OnReanticipate(System.Double) Unity.Netcode.NetworkBehaviour.OnDestroy() Unity.Netcode.NetworkBehaviour.NetworkManager Unity.Netcode.NetworkBehaviour.RpcTarget Unity.Netcode.NetworkBehaviour.IsLocalPlayer Unity.Netcode.NetworkBehaviour.IsOwner Unity.Netcode.NetworkBehaviour.IsServer Unity.Netcode.NetworkBehaviour.HasAuthority Unity.Netcode.NetworkBehaviour.IsSessionOwner Unity.Netcode.NetworkBehaviour.ServerIsHost Unity.Netcode.NetworkBehaviour.IsClient Unity.Netcode.NetworkBehaviour.IsHost Unity.Netcode.NetworkBehaviour.IsOwnedByServer Unity.Netcode.NetworkBehaviour.IsSpawned Unity.Netcode.NetworkBehaviour.NetworkObject Unity.Netcode.NetworkBehaviour.HasNetworkObject Unity.Netcode.NetworkBehaviour.NetworkObjectId Unity.Netcode.NetworkBehaviour.NetworkBehaviourId Unity.Netcode.NetworkBehaviour.OwnerClientId Unity.Netcode.NetworkBehaviour.m_TargetIdBeingSynchronized Namespace : VRBuilder.Netcode.XRI Assembly : VRBuilder.Netcode.dll Syntax public class SnapZoneNetcode : NetworkBehaviour Constructors SnapZoneNetcode() Declaration public SnapZoneNetcode() Properties SnappedObject Declaration public ISnappableProperty SnappedObject { get; } Property Value Type Description ISnappableProperty Methods __getTypeName() Declaration protected override string __getTypeName() Returns Type Description System.String Overrides Unity.Netcode.NetworkBehaviour.__getTypeName() __initializeRpcs() Declaration protected override void __initializeRpcs() Overrides Unity.Netcode.NetworkBehaviour.__initializeRpcs() __initializeVariables() Declaration protected override void __initializeVariables() Overrides Unity.Netcode.NetworkBehaviour.__initializeVariables() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Unity.Netcode.NetworkBehaviour.OnNetworkSpawn()"
  },
  "api/VRBuilder.PackageManager.Editor.Dependency.html": {
    "href": "api/VRBuilder.PackageManager.Editor.Dependency.html",
    "title": "Class Dependency | VR Builder Documentation",
    "keywords": "Class Dependency Inheritance System.Object Dependency AuthenticationPackageEnabler VivoxPackageEnabler InputSystemPackageEnabler LocalizationPackageEnabler NewtonsoftJSONPackageEnabler PostProcessingPackageEnabler XRInteractionPackageEnabler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.PackageManager.Editor Assembly : VRBuilder.PackageManager.Editor.dll Syntax public abstract class Dependency Constructors Dependency() Declaration protected Dependency() Properties LayerDependencies Declaration protected virtual LayerDependency[] LayerDependencies { get; } Property Value Type Description LayerDependency [] Package Declaration public virtual string Package { get; } Property Value Type Description System.String Priority Declaration public virtual int Priority { get; } Property Value Type Description System.Int32 Samples Declaration public virtual string[] Samples { get; } Property Value Type Description System.String [] Version Declaration public virtual string Version { get; set; } Property Value Type Description System.String Methods EmitOnDisabled() Declaration protected virtual void EmitOnDisabled() EmitOnEnabled() Declaration protected virtual void EmitOnEnabled() Events OnPackageDisabled Declaration public event EventHandler<EventArgs> OnPackageDisabled Event Type Type Description System.EventHandler < System.EventArgs > OnPackageEnabled Declaration public event EventHandler<EventArgs> OnPackageEnabled Event Type Type Description System.EventHandler < System.EventArgs >"
  },
  "api/VRBuilder.PackageManager.Editor.DependencyManager.DependenciesEnabledEventArgs.html": {
    "href": "api/VRBuilder.PackageManager.Editor.DependencyManager.DependenciesEnabledEventArgs.html",
    "title": "Class DependencyManager.DependenciesEnabledEventArgs | VR Builder Documentation",
    "keywords": "Class DependencyManager.DependenciesEnabledEventArgs Inheritance System.Object System.EventArgs DependencyManager.DependenciesEnabledEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.PackageManager.Editor Assembly : VRBuilder.PackageManager.Editor.dll Syntax public class DependenciesEnabledEventArgs : EventArgs Constructors DependenciesEnabledEventArgs(List<Dependency>) Declaration public DependenciesEnabledEventArgs(List<Dependency> dependenciesList) Parameters Type Name Description System.Collections.Generic.List < Dependency > dependenciesList Fields DependenciesList Declaration public readonly List<Dependency> DependenciesList Field Value Type Description System.Collections.Generic.List < Dependency >"
  },
  "api/VRBuilder.PackageManager.Editor.DependencyManager.html": {
    "href": "api/VRBuilder.PackageManager.Editor.DependencyManager.html",
    "title": "Class DependencyManager | VR Builder Documentation",
    "keywords": "Class DependencyManager Inheritance System.Object DependencyManager Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.PackageManager.Editor Assembly : VRBuilder.PackageManager.Editor.dll Syntax public class DependencyManager Constructors DependencyManager() Declaration public DependencyManager() Events OnPostProcess Declaration public static event EventHandler<DependencyManager.DependenciesEnabledEventArgs> OnPostProcess Event Type Type Description System.EventHandler < DependencyManager.DependenciesEnabledEventArgs >"
  },
  "api/VRBuilder.PackageManager.Editor.html": {
    "href": "api/VRBuilder.PackageManager.Editor.html",
    "title": "Namespace VRBuilder.PackageManager.Editor | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.PackageManager.Editor Classes Dependency DependencyManager DependencyManager.DependenciesEnabledEventArgs InputSystemPackageEnabler LocalizationPackageEnabler NewtonsoftJSONPackageEnabler PackageOperationsManager PackageOperationsManager.InitializedEventArgs PackageOperationsManager.PackageDisabledEventArgs PackageOperationsManager.PackageEnabledEventArgs PostProcessingPackageEnabler Structs LayerDependency"
  },
  "api/VRBuilder.PackageManager.Editor.InputSystemPackageEnabler.html": {
    "href": "api/VRBuilder.PackageManager.Editor.InputSystemPackageEnabler.html",
    "title": "Class InputSystemPackageEnabler | VR Builder Documentation",
    "keywords": "Class InputSystemPackageEnabler Inheritance System.Object Dependency InputSystemPackageEnabler Inherited Members Dependency.EmitOnEnabled() Dependency.EmitOnDisabled() Dependency.Version Dependency.Samples Dependency.LayerDependencies Dependency.OnPackageEnabled Dependency.OnPackageDisabled System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.PackageManager.Editor Assembly : VRBuilder.PackageManager.Editor.dll Syntax public class InputSystemPackageEnabler : Dependency Constructors InputSystemPackageEnabler() Declaration public InputSystemPackageEnabler() Properties Package Declaration public override string Package { get; } Property Value Type Description System.String Overrides Dependency.Package Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides Dependency.Priority"
  },
  "api/VRBuilder.PackageManager.Editor.LayerDependency.html": {
    "href": "api/VRBuilder.PackageManager.Editor.LayerDependency.html",
    "title": "Struct LayerDependency | VR Builder Documentation",
    "keywords": "Struct LayerDependency Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : VRBuilder.PackageManager.Editor Assembly : VRBuilder.PackageManager.Editor.dll Syntax public struct LayerDependency Constructors LayerDependency(String, Int32) Declaration public LayerDependency(string name, int preferredPosition = -1) Parameters Type Name Description System.String name System.Int32 preferredPosition Fields Name Declaration public readonly string Name Field Value Type Description System.String PreferredPosition Declaration public readonly int PreferredPosition Field Value Type Description System.Int32"
  },
  "api/VRBuilder.PackageManager.Editor.LocalizationPackageEnabler.html": {
    "href": "api/VRBuilder.PackageManager.Editor.LocalizationPackageEnabler.html",
    "title": "Class LocalizationPackageEnabler | VR Builder Documentation",
    "keywords": "Class LocalizationPackageEnabler Inheritance System.Object Dependency LocalizationPackageEnabler Inherited Members Dependency.EmitOnEnabled() Dependency.EmitOnDisabled() Dependency.Version Dependency.Samples Dependency.LayerDependencies Dependency.OnPackageEnabled Dependency.OnPackageDisabled System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.PackageManager.Editor Assembly : VRBuilder.PackageManager.Editor.dll Syntax public class LocalizationPackageEnabler : Dependency Constructors LocalizationPackageEnabler() Declaration public LocalizationPackageEnabler() Properties Package Declaration public override string Package { get; } Property Value Type Description System.String Overrides Dependency.Package Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides Dependency.Priority"
  },
  "api/VRBuilder.PackageManager.Editor.NewtonsoftJSONPackageEnabler.html": {
    "href": "api/VRBuilder.PackageManager.Editor.NewtonsoftJSONPackageEnabler.html",
    "title": "Class NewtonsoftJSONPackageEnabler | VR Builder Documentation",
    "keywords": "Class NewtonsoftJSONPackageEnabler Inheritance System.Object Dependency NewtonsoftJSONPackageEnabler Inherited Members Dependency.EmitOnEnabled() Dependency.EmitOnDisabled() Dependency.Version Dependency.Samples Dependency.LayerDependencies Dependency.OnPackageEnabled Dependency.OnPackageDisabled System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.PackageManager.Editor Assembly : VRBuilder.PackageManager.Editor.dll Syntax public class NewtonsoftJSONPackageEnabler : Dependency Constructors NewtonsoftJSONPackageEnabler() Declaration public NewtonsoftJSONPackageEnabler() Properties Package Declaration public override string Package { get; } Property Value Type Description System.String Overrides Dependency.Package Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides Dependency.Priority"
  },
  "api/VRBuilder.PackageManager.Editor.PackageOperationsManager.html": {
    "href": "api/VRBuilder.PackageManager.Editor.PackageOperationsManager.html",
    "title": "Class PackageOperationsManager | VR Builder Documentation",
    "keywords": "Class PackageOperationsManager Inheritance System.Object PackageOperationsManager Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.PackageManager.Editor Assembly : VRBuilder.PackageManager.Editor.dll Syntax public class PackageOperationsManager Constructors PackageOperationsManager() Declaration public PackageOperationsManager() Properties IsInitialized Declaration public static bool IsInitialized { get; } Property Value Type Description System.Boolean Packages Declaration public static PackageCollection Packages { get; } Property Value Type Description UnityEditor.PackageManager.PackageCollection Methods GetInstalledPackageVersion(String) Declaration public static string GetInstalledPackageVersion(string package) Parameters Type Name Description System.String package Returns Type Description System.String IsPackageLoaded(String, String) Declaration public static bool IsPackageLoaded(string package, string version = null) Parameters Type Name Description System.String package System.String version Returns Type Description System.Boolean LoadPackage(String, String) Declaration public static void LoadPackage(string package, string version = null) Parameters Type Name Description System.String package System.String version RemovePackage(String) Declaration public static void RemovePackage(string package) Parameters Type Name Description System.String package Events OnInitialized Declaration public static event EventHandler<PackageOperationsManager.InitializedEventArgs> OnInitialized Event Type Type Description System.EventHandler < PackageOperationsManager.InitializedEventArgs > OnPackageDisabled Declaration public static event EventHandler<PackageOperationsManager.PackageDisabledEventArgs> OnPackageDisabled Event Type Type Description System.EventHandler < PackageOperationsManager.PackageDisabledEventArgs > OnPackageEnabled Declaration public static event EventHandler<PackageOperationsManager.PackageEnabledEventArgs> OnPackageEnabled Event Type Type Description System.EventHandler < PackageOperationsManager.PackageEnabledEventArgs >"
  },
  "api/VRBuilder.PackageManager.Editor.PackageOperationsManager.InitializedEventArgs.html": {
    "href": "api/VRBuilder.PackageManager.Editor.PackageOperationsManager.InitializedEventArgs.html",
    "title": "Class PackageOperationsManager.InitializedEventArgs | VR Builder Documentation",
    "keywords": "Class PackageOperationsManager.InitializedEventArgs Inheritance System.Object System.EventArgs PackageOperationsManager.InitializedEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.PackageManager.Editor Assembly : VRBuilder.PackageManager.Editor.dll Syntax public class InitializedEventArgs : EventArgs Constructors InitializedEventArgs() Declaration public InitializedEventArgs()"
  },
  "api/VRBuilder.PackageManager.Editor.PackageOperationsManager.PackageDisabledEventArgs.html": {
    "href": "api/VRBuilder.PackageManager.Editor.PackageOperationsManager.PackageDisabledEventArgs.html",
    "title": "Class PackageOperationsManager.PackageDisabledEventArgs | VR Builder Documentation",
    "keywords": "Class PackageOperationsManager.PackageDisabledEventArgs Inheritance System.Object System.EventArgs PackageOperationsManager.PackageDisabledEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.PackageManager.Editor Assembly : VRBuilder.PackageManager.Editor.dll Syntax public class PackageDisabledEventArgs : EventArgs Constructors PackageDisabledEventArgs(String) Declaration public PackageDisabledEventArgs(string package) Parameters Type Name Description System.String package Fields Package Declaration public readonly string Package Field Value Type Description System.String"
  },
  "api/VRBuilder.PackageManager.Editor.PackageOperationsManager.PackageEnabledEventArgs.html": {
    "href": "api/VRBuilder.PackageManager.Editor.PackageOperationsManager.PackageEnabledEventArgs.html",
    "title": "Class PackageOperationsManager.PackageEnabledEventArgs | VR Builder Documentation",
    "keywords": "Class PackageOperationsManager.PackageEnabledEventArgs Inheritance System.Object System.EventArgs PackageOperationsManager.PackageEnabledEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.PackageManager.Editor Assembly : VRBuilder.PackageManager.Editor.dll Syntax public class PackageEnabledEventArgs : EventArgs Constructors PackageEnabledEventArgs(PackageInfo) Declaration public PackageEnabledEventArgs(PackageInfo packageInfo) Parameters Type Name Description UnityEditor.PackageManager.PackageInfo packageInfo Fields PackageInfo Declaration public readonly PackageInfo PackageInfo Field Value Type Description UnityEditor.PackageManager.PackageInfo"
  },
  "api/VRBuilder.PackageManager.Editor.PostProcessingPackageEnabler.html": {
    "href": "api/VRBuilder.PackageManager.Editor.PostProcessingPackageEnabler.html",
    "title": "Class PostProcessingPackageEnabler | VR Builder Documentation",
    "keywords": "Class PostProcessingPackageEnabler Inheritance System.Object Dependency PostProcessingPackageEnabler Inherited Members Dependency.EmitOnEnabled() Dependency.EmitOnDisabled() Dependency.Version Dependency.Samples Dependency.OnPackageEnabled Dependency.OnPackageDisabled System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.PackageManager.Editor Assembly : VRBuilder.PackageManager.Editor.dll Syntax public class PostProcessingPackageEnabler : Dependency Constructors PostProcessingPackageEnabler() Declaration public PostProcessingPackageEnabler() Properties LayerDependencies Declaration protected override LayerDependency[] LayerDependencies { get; } Property Value Type Description LayerDependency [] Overrides Dependency.LayerDependencies Package Declaration public override string Package { get; } Property Value Type Description System.String Overrides Dependency.Package Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides Dependency.Priority"
  },
  "api/VRBuilder.PackageManager.Editor.XRInteraction.html": {
    "href": "api/VRBuilder.PackageManager.Editor.XRInteraction.html",
    "title": "Namespace VRBuilder.PackageManager.Editor.XRInteraction | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.PackageManager.Editor.XRInteraction Classes XRInteractionPackageEnabler"
  },
  "api/VRBuilder.PackageManager.Editor.XRInteraction.XRInteractionPackageEnabler.html": {
    "href": "api/VRBuilder.PackageManager.Editor.XRInteraction.XRInteractionPackageEnabler.html",
    "title": "Class XRInteractionPackageEnabler | VR Builder Documentation",
    "keywords": "Class XRInteractionPackageEnabler Inheritance System.Object Dependency XRInteractionPackageEnabler Inherited Members Dependency.EmitOnEnabled() Dependency.EmitOnDisabled() Dependency.Samples Dependency.OnPackageEnabled Dependency.OnPackageDisabled System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.PackageManager.Editor.XRInteraction Assembly : VRBuilder.PackageManager.Editor.XRInteraction.dll Syntax public class XRInteractionPackageEnabler : Dependency Constructors XRInteractionPackageEnabler() Declaration public XRInteractionPackageEnabler() Properties LayerDependencies Declaration protected override LayerDependency[] LayerDependencies { get; } Property Value Type Description LayerDependency [] Overrides Dependency.LayerDependencies Package Declaration public override string Package { get; } Property Value Type Description System.String Overrides Dependency.Package Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides Dependency.Priority Version Declaration public override string Version { get; set; } Property Value Type Description System.String Overrides Dependency.Version"
  },
  "api/VRBuilder.PermissionManagement.Configuration.html": {
    "href": "api/VRBuilder.PermissionManagement.Configuration.html",
    "title": "Namespace VRBuilder.PermissionManagement.Configuration | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.PermissionManagement.Configuration Classes PolicyException RolePolicy RuntimeConfigurationExtensions UserRole Interfaces IPermissionHandler IUserRole"
  },
  "api/VRBuilder.PermissionManagement.Configuration.IPermissionHandler.html": {
    "href": "api/VRBuilder.PermissionManagement.Configuration.IPermissionHandler.html",
    "title": "Interface IPermissionHandler | VR Builder Documentation",
    "keywords": "Interface IPermissionHandler Namespace : VRBuilder.PermissionManagement.Configuration Assembly : VRBuilder.PermissionManagement.dll Syntax public interface IPermissionHandler Methods SetUserRoles(String, IEnumerable<String>) Declaration void SetUserRoles(string userId, IEnumerable<string> roleIds) Parameters Type Name Description System.String userId System.Collections.Generic.IEnumerable < System.String > roleIds UserHasPermission<T>(String) Declaration bool UserHasPermission<T>(string userId) where T : IBasicPolicy Parameters Type Name Description System.String userId Returns Type Description System.Boolean Type Parameters Name Description T UserHasPermission<TPolicy, TParam>(String, TParam) Declaration bool UserHasPermission<TPolicy, TParam>(string userId, TParam param) where TPolicy : IConfigurablePolicy<TParam> Parameters Type Name Description System.String userId TParam param Returns Type Description System.Boolean Type Parameters Name Description TPolicy TParam"
  },
  "api/VRBuilder.PermissionManagement.Configuration.IUserRole.html": {
    "href": "api/VRBuilder.PermissionManagement.Configuration.IUserRole.html",
    "title": "Interface IUserRole | VR Builder Documentation",
    "keywords": "Interface IUserRole Namespace : VRBuilder.PermissionManagement.Configuration Assembly : VRBuilder.PermissionManagement.dll Syntax public interface IUserRole Properties Id Declaration string Id { get; } Property Value Type Description System.String Name Declaration string Name { get; } Property Value Type Description System.String Policies Declaration IEnumerable<RolePolicy> Policies { get; } Property Value Type Description System.Collections.Generic.IEnumerable < RolePolicy > Methods ChangeId(String) Declaration void ChangeId(string id) Parameters Type Name Description System.String id ChangeName(String) Declaration void ChangeName(string name) Parameters Type Name Description System.String name EvaluatePolicy(String) Declaration PolicyEffect EvaluatePolicy(string policyId) Parameters Type Name Description System.String policyId Returns Type Description PolicyEffect EvaluatePolicy(Type) Declaration PolicyEffect EvaluatePolicy(Type policyType) Parameters Type Name Description System.Type policyType Returns Type Description PolicyEffect EvaluatePolicy<T>() Declaration PolicyEffect EvaluatePolicy<T>() where T : IBasicPolicy Returns Type Description PolicyEffect Type Parameters Name Description T EvaluatePolicy<T>(Type, T) Declaration PolicyEffect EvaluatePolicy<T>(Type policyType, T param) Parameters Type Name Description System.Type policyType T param Returns Type Description PolicyEffect Type Parameters Name Description T EvaluatePolicy<T, TParam>(TParam) Declaration PolicyEffect EvaluatePolicy<T, TParam>(TParam param) where T : IConfigurablePolicy<TParam> Parameters Type Name Description TParam param Returns Type Description PolicyEffect Type Parameters Name Description T TParam SetPolicyEffect(String, PolicyEffect) Declaration void SetPolicyEffect(string policyId, PolicyEffect effect) Parameters Type Name Description System.String policyId PolicyEffect effect SetPolicyEffect<T>(PolicyEffect) Declaration void SetPolicyEffect<T>(PolicyEffect effect) where T : IBasicPolicy Parameters Type Name Description PolicyEffect effect Type Parameters Name Description T SetPolicyEffect<T, TParam>(TParam, PolicyEffect) Declaration void SetPolicyEffect<T, TParam>(TParam param, PolicyEffect effect) where T : IConfigurablePolicy<TParam> Parameters Type Name Description TParam param PolicyEffect effect Type Parameters Name Description T TParam"
  },
  "api/VRBuilder.PermissionManagement.Configuration.PolicyException.html": {
    "href": "api/VRBuilder.PermissionManagement.Configuration.PolicyException.html",
    "title": "Class PolicyException | VR Builder Documentation",
    "keywords": "Class PolicyException Inheritance System.Object PolicyException Namespace : VRBuilder.PermissionManagement.Configuration Assembly : VRBuilder.PermissionManagement.dll Syntax public class PolicyException : Exception Constructors PolicyException(String) Declaration public PolicyException(string message) Parameters Type Name Description System.String message PolicyException(String, Exception) Declaration public PolicyException(string message, Exception innerException) Parameters Type Name Description System.String message System.Exception innerException"
  },
  "api/VRBuilder.PermissionManagement.Configuration.RolePolicy.html": {
    "href": "api/VRBuilder.PermissionManagement.Configuration.RolePolicy.html",
    "title": "Class RolePolicy | VR Builder Documentation",
    "keywords": "Class RolePolicy Inheritance System.Object RolePolicy Namespace : VRBuilder.PermissionManagement.Configuration Assembly : VRBuilder.PermissionManagement.dll Syntax public class RolePolicy : Object Constructors RolePolicy(String, Boolean) Declaration public RolePolicy(string id, bool effect) Parameters Type Name Description System.String id System.Boolean effect Fields Effect Declaration public bool Effect Field Value Type Description System.Boolean Id Declaration public string Id Field Value Type Description System.String"
  },
  "api/VRBuilder.PermissionManagement.Configuration.RuntimeConfigurationExtensions.html": {
    "href": "api/VRBuilder.PermissionManagement.Configuration.RuntimeConfigurationExtensions.html",
    "title": "Class RuntimeConfigurationExtensions | VR Builder Documentation",
    "keywords": "Class RuntimeConfigurationExtensions Inheritance System.Object RuntimeConfigurationExtensions Namespace : VRBuilder.PermissionManagement.Configuration Assembly : VRBuilder.PermissionManagement.dll Syntax public static class RuntimeConfigurationExtensions : Object Methods GetPermissionHandler(BaseRuntimeConfiguration) Declaration public static IPermissionHandler GetPermissionHandler(this BaseRuntimeConfiguration runtimeConfiguration) Parameters Type Name Description BaseRuntimeConfiguration runtimeConfiguration Returns Type Description IPermissionHandler SetPermissionHandler(BaseRuntimeConfiguration, IPermissionHandler) Declaration public static void SetPermissionHandler(this BaseRuntimeConfiguration runtimeConfiguration, IPermissionHandler permissionHandler) Parameters Type Name Description BaseRuntimeConfiguration runtimeConfiguration IPermissionHandler permissionHandler"
  },
  "api/VRBuilder.PermissionManagement.Configuration.UserRole.html": {
    "href": "api/VRBuilder.PermissionManagement.Configuration.UserRole.html",
    "title": "Class UserRole | VR Builder Documentation",
    "keywords": "Class UserRole Inheritance System.Object UserRole Implements IUserRole Namespace : VRBuilder.PermissionManagement.Configuration Assembly : VRBuilder.PermissionManagement.dll Syntax public class UserRole : Object, IUserRole Constructors UserRole(String, String) Declaration public UserRole(string name, string id) Parameters Type Name Description System.String name System.String id Properties Id Declaration public string Id { get; } Property Value Type Description System.String Name Declaration public string Name { get; } Property Value Type Description System.String Policies Declaration public IEnumerable<RolePolicy> Policies { get; } Property Value Type Description System.Collections.Generic.IEnumerable < RolePolicy > PolicyRegistry Declaration protected virtual IEnumerable<IPolicy> PolicyRegistry { get; } Property Value Type Description System.Collections.Generic.IEnumerable < IPolicy > Methods ChangeId(String) Declaration public void ChangeId(string id) Parameters Type Name Description System.String id ChangeName(String) Declaration public void ChangeName(string name) Parameters Type Name Description System.String name EvaluatePolicy(String) Declaration public PolicyEffect EvaluatePolicy(string policyId) Parameters Type Name Description System.String policyId Returns Type Description PolicyEffect EvaluatePolicy(Type) Declaration public PolicyEffect EvaluatePolicy(Type policyType) Parameters Type Name Description System.Type policyType Returns Type Description PolicyEffect EvaluatePolicy<T>() Declaration public PolicyEffect EvaluatePolicy<T>() where T : IBasicPolicy Returns Type Description PolicyEffect Type Parameters Name Description T EvaluatePolicy<T>(Type, T) Declaration public PolicyEffect EvaluatePolicy<T>(Type policyType, T param) Parameters Type Name Description System.Type policyType T param Returns Type Description PolicyEffect Type Parameters Name Description T EvaluatePolicy<T, TParam>(TParam) Declaration public PolicyEffect EvaluatePolicy<T, TParam>(TParam param) where T : IConfigurablePolicy<TParam> Parameters Type Name Description TParam param Returns Type Description PolicyEffect Type Parameters Name Description T TParam SetPolicyEffect(String, PolicyEffect) Declaration public void SetPolicyEffect(string policyId, PolicyEffect effect) Parameters Type Name Description System.String policyId PolicyEffect effect SetPolicyEffect<T>(PolicyEffect) Declaration public void SetPolicyEffect<T>(PolicyEffect effect) where T : IBasicPolicy Parameters Type Name Description PolicyEffect effect Type Parameters Name Description T SetPolicyEffect<T, TParam>(TParam, PolicyEffect) Declaration public void SetPolicyEffect<T, TParam>(TParam param, PolicyEffect effect) where T : IConfigurablePolicy<TParam> Parameters Type Name Description TParam param PolicyEffect effect Type Parameters Name Description T TParam Implements IUserRole"
  },
  "api/VRBuilder.PermissionManagement.Policies.ConfigurablePolicy-1.html": {
    "href": "api/VRBuilder.PermissionManagement.Policies.ConfigurablePolicy-1.html",
    "title": "Class ConfigurablePolicy<T> | VR Builder Documentation",
    "keywords": "Class ConfigurablePolicy<T> Inheritance System.Object ConfigurablePolicy<T> Implements IConfigurablePolicy <T> IPolicy Namespace : VRBuilder.PermissionManagement.Policies Assembly : VRBuilder.PermissionManagement.dll Syntax public abstract class ConfigurablePolicy<T> : Object, IConfigurablePolicy<T>, IPolicy Type Parameters Name Description T Constructors ConfigurablePolicy() Declaration public ConfigurablePolicy() ConfigurablePolicy(T) Declaration public ConfigurablePolicy(T parameter) Parameters Type Name Description T parameter Properties Category Declaration public abstract string Category { get; } Property Value Type Description System.String Id Declaration public abstract string Id { get; } Property Value Type Description System.String Name Declaration public abstract string Name { get; } Property Value Type Description System.String Parameter Declaration public T Parameter { get; } Property Value Type Description T Methods GetPossibleValues() Declaration public abstract IEnumerable<T> GetPossibleValues() Returns Type Description System.Collections.Generic.IEnumerable <T> Implements IConfigurablePolicy<T> IPolicy"
  },
  "api/VRBuilder.PermissionManagement.Policies.html": {
    "href": "api/VRBuilder.PermissionManagement.Policies.html",
    "title": "Namespace VRBuilder.PermissionManagement.Policies | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.PermissionManagement.Policies Classes ConfigurablePolicy<T> PolicyEffect Interfaces IBasicPolicy IConfigurablePolicy<T> IPolicy"
  },
  "api/VRBuilder.PermissionManagement.Policies.IBasicPolicy.html": {
    "href": "api/VRBuilder.PermissionManagement.Policies.IBasicPolicy.html",
    "title": "Interface IBasicPolicy | VR Builder Documentation",
    "keywords": "Interface IBasicPolicy Inherited Members IPolicy.Name IPolicy.Id IPolicy.Category Namespace : VRBuilder.PermissionManagement.Policies Assembly : VRBuilder.PermissionManagement.dll Syntax public interface IBasicPolicy : IPolicy"
  },
  "api/VRBuilder.PermissionManagement.Policies.IConfigurablePolicy-1.html": {
    "href": "api/VRBuilder.PermissionManagement.Policies.IConfigurablePolicy-1.html",
    "title": "Interface IConfigurablePolicy<T> | VR Builder Documentation",
    "keywords": "Interface IConfigurablePolicy<T> Inherited Members IPolicy.Name IPolicy.Id IPolicy.Category Namespace : VRBuilder.PermissionManagement.Policies Assembly : VRBuilder.PermissionManagement.dll Syntax public interface IConfigurablePolicy<T> : IPolicy Type Parameters Name Description T Properties Parameter Declaration T Parameter { get; } Property Value Type Description T Methods GetPossibleValues() Declaration IEnumerable<T> GetPossibleValues() Returns Type Description System.Collections.Generic.IEnumerable <T>"
  },
  "api/VRBuilder.PermissionManagement.Policies.IPolicy.html": {
    "href": "api/VRBuilder.PermissionManagement.Policies.IPolicy.html",
    "title": "Interface IPolicy | VR Builder Documentation",
    "keywords": "Interface IPolicy Namespace : VRBuilder.PermissionManagement.Policies Assembly : VRBuilder.PermissionManagement.dll Syntax public interface IPolicy Properties Category Declaration string Category { get; } Property Value Type Description System.String Id Declaration string Id { get; } Property Value Type Description System.String Name Declaration string Name { get; } Property Value Type Description System.String"
  },
  "api/VRBuilder.PermissionManagement.Policies.PolicyEffect.html": {
    "href": "api/VRBuilder.PermissionManagement.Policies.PolicyEffect.html",
    "title": "Class PolicyEffect | VR Builder Documentation",
    "keywords": "Class PolicyEffect Inheritance System.Object PolicyEffect Namespace : VRBuilder.PermissionManagement.Policies Assembly : VRBuilder.PermissionManagement.dll Syntax public sealed class PolicyEffect : Enum Fields Allow Declaration public const PolicyEffect Allow Field Value Type Description PolicyEffect Deny Declaration public const PolicyEffect Deny Field Value Type Description PolicyEffect None Declaration public const PolicyEffect None Field Value Type Description PolicyEffect value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/VRBuilder.PermissionManagement.Settings.html": {
    "href": "api/VRBuilder.PermissionManagement.Settings.html",
    "title": "Namespace VRBuilder.PermissionManagement.Settings | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.PermissionManagement.Settings Classes UserRolesSettings"
  },
  "api/VRBuilder.PermissionManagement.Settings.UserRolesSettings.html": {
    "href": "api/VRBuilder.PermissionManagement.Settings.UserRolesSettings.html",
    "title": "Class UserRolesSettings | VR Builder Documentation",
    "keywords": "Class UserRolesSettings Inheritance System.Object SettingsObject < UserRolesSettings > UserRolesSettings Inherited Members SettingsObject<UserRolesSettings>.Save() SettingsObject<UserRolesSettings>.Finalize() SettingsObject<UserRolesSettings>.Instance Namespace : VRBuilder.PermissionManagement.Settings Assembly : VRBuilder.PermissionManagement.dll Syntax public class UserRolesSettings : SettingsObject<UserRolesSettings> Constructors UserRolesSettings() Declaration public UserRolesSettings() Fields EnforcePermissions Declaration public bool EnforcePermissions Field Value Type Description System.Boolean Policies Declaration public List<IPolicy> Policies Field Value Type Description System.Collections.Generic.List < IPolicy > UserRoles Declaration public List<UserRole> UserRoles Field Value Type Description System.Collections.Generic.List < UserRole >"
  },
  "api/VRBuilder.Pro.Behaviors.AnimateTransformBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.AnimateTransformBehavior.EntityData.html",
    "title": "Class AnimateTransformBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class AnimateTransformBehavior.EntityData Inheritance System.Object AnimateTransformBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [DisplayName(\"Animate Transform\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties Duration Declaration [DisplayName(\"Duration (in seconds)\")] public float Duration { get; set; } Property Value Type Description System.Single Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String PingPong Declaration [DisplayName(\"Ping pong\")] public bool PingPong { get; set; } Property Value Type Description System.Boolean PositionCurve Declaration [DisplayName(\"Position curve\")] public AnimationCurve PositionCurve { get; set; } Property Value Type Description UnityEngine.AnimationCurve Repeats Declaration [DisplayName(\"Repeats\")] public int Repeats { get; set; } Property Value Type Description System.Int32 RotationCurve Declaration [DisplayName(\"Rotation curve\")] public AnimationCurve RotationCurve { get; set; } Property Value Type Description UnityEngine.AnimationCurve ScaleCurve Declaration [DisplayName(\"Scale curve\")] public AnimationCurve ScaleCurve { get; set; } Property Value Type Description UnityEngine.AnimationCurve TargetObject Declaration [DisplayName(\"Object\")] public SingleSceneObjectReference TargetObject { get; set; } Property Value Type Description SingleSceneObjectReference TargetTransformProvider Declaration [DisplayName(\"Final transform provider\")] public SingleSceneObjectReference TargetTransformProvider { get; set; } Property Value Type Description SingleSceneObjectReference Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.AnimateTransformBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.AnimateTransformBehavior.html",
    "title": "Class AnimateTransformBehavior | VR Builder Documentation",
    "keywords": "Class AnimateTransformBehavior Inheritance System.Object Entity < AnimateTransformBehavior.EntityData > Behavior < AnimateTransformBehavior.EntityData > AnimateTransformBehavior Implements IDataOwner < AnimateTransformBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<AnimateTransformBehavior.EntityData>.Clone() Behavior<AnimateTransformBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<AnimateTransformBehavior.EntityData>.GetActiveProcess() Entity<AnimateTransformBehavior.EntityData>.GetDeactivatingProcess() Entity<AnimateTransformBehavior.EntityData>.GetAbortingProcess() Entity<AnimateTransformBehavior.EntityData>.GetConfigurator() Entity<AnimateTransformBehavior.EntityData>.Configure(IMode) Entity<AnimateTransformBehavior.EntityData>.Update() Entity<AnimateTransformBehavior.EntityData>.Data Entity<AnimateTransformBehavior.EntityData>.IDataOwner.Data Entity<AnimateTransformBehavior.EntityData>.LifeCycle Entity<AnimateTransformBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/animations-add-on\")] public class AnimateTransformBehavior : Behavior<AnimateTransformBehavior.EntityData>, IDataOwner<AnimateTransformBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors AnimateTransformBehavior() Declaration public AnimateTransformBehavior() AnimateTransformBehavior(Guid, Guid, Single, AnimationCurve, AnimationCurve, AnimationCurve, Boolean, Int32) Declaration public AnimateTransformBehavior(Guid targetGuid, Guid transformProviderGuid, float duration, AnimationCurve positionCurve, AnimationCurve rotationCurve, AnimationCurve scaleCurve, bool pingPong = false, int repeats = 1) Parameters Type Name Description System.Guid targetGuid System.Guid transformProviderGuid System.Single duration UnityEngine.AnimationCurve positionCurve UnityEngine.AnimationCurve rotationCurve UnityEngine.AnimationCurve scaleCurve System.Boolean pingPong System.Int32 repeats AnimateTransformBehavior(ISceneObject, ISceneObject, Single, AnimationCurve, AnimationCurve, AnimationCurve, Boolean, Int32) Declaration public AnimateTransformBehavior(ISceneObject target, ISceneObject transformProvider, float duration, AnimationCurve positionCurve, AnimationCurve rotationCurve, AnimationCurve scaleCurve, bool pingPong = false, int repeats = 1) Parameters Type Name Description ISceneObject target ISceneObject transformProvider System.Single duration UnityEngine.AnimationCurve positionCurve UnityEngine.AnimationCurve rotationCurve UnityEngine.AnimationCurve scaleCurve System.Boolean pingPong System.Int32 repeats Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.AnimateTransformBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Pro.Behaviors.ChildExplosionViewBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.ChildExplosionViewBehavior.EntityData.html",
    "title": "Class ChildExplosionViewBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class ChildExplosionViewBehavior.EntityData Inheritance System.Object ChildExplosionViewBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [DisplayName(\"Child Explosion View\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties Duration Declaration [DisplayName(\"Duration (in seconds)\")] public float Duration { get; set; } Property Value Type Description System.Single ExplosionCurve Declaration [DisplayName(\"Explosion curve\")] public AnimationCurve ExplosionCurve { get; set; } Property Value Type Description UnityEngine.AnimationCurve Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String PingPong Declaration [DisplayName(\"Ping pong\")] public bool PingPong { get; set; } Property Value Type Description System.Boolean Repeats Declaration [DisplayName(\"Repeats\")] public int Repeats { get; set; } Property Value Type Description System.Int32 Scale Declaration [DisplayName(\"Scale\")] public float Scale { get; set; } Property Value Type Description System.Single TargetObject Declaration [DisplayName(\"Object\")] public SingleScenePropertyReference<IExplodableProperty> TargetObject { get; set; } Property Value Type Description SingleScenePropertyReference < IExplodableProperty > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.ChildExplosionViewBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.ChildExplosionViewBehavior.html",
    "title": "Class ChildExplosionViewBehavior | VR Builder Documentation",
    "keywords": "Class ChildExplosionViewBehavior Inheritance System.Object Entity < ChildExplosionViewBehavior.EntityData > Behavior < ChildExplosionViewBehavior.EntityData > ChildExplosionViewBehavior Implements IDataOwner < ChildExplosionViewBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<ChildExplosionViewBehavior.EntityData>.Clone() Behavior<ChildExplosionViewBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<ChildExplosionViewBehavior.EntityData>.GetActiveProcess() Entity<ChildExplosionViewBehavior.EntityData>.GetDeactivatingProcess() Entity<ChildExplosionViewBehavior.EntityData>.GetAbortingProcess() Entity<ChildExplosionViewBehavior.EntityData>.GetConfigurator() Entity<ChildExplosionViewBehavior.EntityData>.Configure(IMode) Entity<ChildExplosionViewBehavior.EntityData>.Update() Entity<ChildExplosionViewBehavior.EntityData>.Data Entity<ChildExplosionViewBehavior.EntityData>.IDataOwner.Data Entity<ChildExplosionViewBehavior.EntityData>.LifeCycle Entity<ChildExplosionViewBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/animations-add-on\")] public class ChildExplosionViewBehavior : Behavior<ChildExplosionViewBehavior.EntityData>, IDataOwner<ChildExplosionViewBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors ChildExplosionViewBehavior() Declaration public ChildExplosionViewBehavior() ChildExplosionViewBehavior(Guid, Single, Single, AnimationCurve, Boolean, Int32) Declaration public ChildExplosionViewBehavior(Guid targetGuid, float scale, float duration, AnimationCurve explosionCurve, bool pingPong = false, int repeats = 1) Parameters Type Name Description System.Guid targetGuid System.Single scale System.Single duration UnityEngine.AnimationCurve explosionCurve System.Boolean pingPong System.Int32 repeats ChildExplosionViewBehavior(IExplodableProperty, Single, Single, AnimationCurve, Boolean, Int32) Declaration public ChildExplosionViewBehavior(IExplodableProperty target, float scale, float duration, AnimationCurve explosionCurve, bool pingPong = false, int repeats = 1) Parameters Type Name Description IExplodableProperty target System.Single scale System.Single duration UnityEngine.AnimationCurve explosionCurve System.Boolean pingPong System.Int32 repeats Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.ChildExplosionViewBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Pro.Behaviors.FollowPathBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.FollowPathBehavior.EntityData.html",
    "title": "Class FollowPathBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class FollowPathBehavior.EntityData Inheritance System.Object FollowPathBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [DisplayName(\"Follow Path\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties DisableRotation Declaration [DisplayName(\"Disable Rotation\")] public bool DisableRotation { get; set; } Property Value Type Description System.Boolean Duration Declaration [DisplayName(\"Duration (in seconds)\")] public float Duration { get; set; } Property Value Type Description System.Single KeepRelativePosition Declaration [DisplayName(\"Keep relative position\")] public bool KeepRelativePosition { get; set; } Property Value Type Description System.Boolean KeepRelativeRotation Declaration [DisplayName(\"Keep relative rotation\")] public bool KeepRelativeRotation { get; set; } Property Value Type Description System.Boolean Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String PathProperty Declaration [DisplayName(\"Path\")] public SingleScenePropertyReference<IPathProperty> PathProperty { get; set; } Property Value Type Description SingleScenePropertyReference < IPathProperty > PingPong Declaration [DisplayName(\"Ping pong\")] public bool PingPong { get; set; } Property Value Type Description System.Boolean Repeats Declaration [DisplayName(\"Repeats\")] public int Repeats { get; set; } Property Value Type Description System.Int32 Reverse Declaration [DisplayName(\"Reverse\")] public bool Reverse { get; set; } Property Value Type Description System.Boolean TargetObject Declaration [DisplayName(\"Object\")] public SingleSceneObjectReference TargetObject { get; set; } Property Value Type Description SingleSceneObjectReference Velocity Declaration [DisplayName(\"Velocity curve\")] public AnimationCurve Velocity { get; set; } Property Value Type Description UnityEngine.AnimationCurve Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.FollowPathBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.FollowPathBehavior.html",
    "title": "Class FollowPathBehavior | VR Builder Documentation",
    "keywords": "Class FollowPathBehavior Inheritance System.Object Entity < FollowPathBehavior.EntityData > Behavior < FollowPathBehavior.EntityData > FollowPathBehavior Implements IDataOwner < FollowPathBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<FollowPathBehavior.EntityData>.Clone() Behavior<FollowPathBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<FollowPathBehavior.EntityData>.GetActiveProcess() Entity<FollowPathBehavior.EntityData>.GetDeactivatingProcess() Entity<FollowPathBehavior.EntityData>.GetAbortingProcess() Entity<FollowPathBehavior.EntityData>.GetConfigurator() Entity<FollowPathBehavior.EntityData>.Configure(IMode) Entity<FollowPathBehavior.EntityData>.Update() Entity<FollowPathBehavior.EntityData>.Data Entity<FollowPathBehavior.EntityData>.IDataOwner.Data Entity<FollowPathBehavior.EntityData>.LifeCycle Entity<FollowPathBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/animations-add-on\")] public class FollowPathBehavior : Behavior<FollowPathBehavior.EntityData>, IDataOwner<FollowPathBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors FollowPathBehavior() Declaration public FollowPathBehavior() FollowPathBehavior(Guid, Guid, Single, AnimationCurve, Boolean, Boolean, Boolean, Boolean, Int32, Boolean) Declaration public FollowPathBehavior(Guid targetGuid, Guid pathGuid, float duration, AnimationCurve velocity, bool keepRelativePosition = false, bool keepRelativeRotation = false, bool reverse = false, bool pingPong = false, int repeats = 1, bool disableRotation = false) Parameters Type Name Description System.Guid targetGuid System.Guid pathGuid System.Single duration UnityEngine.AnimationCurve velocity System.Boolean keepRelativePosition System.Boolean keepRelativeRotation System.Boolean reverse System.Boolean pingPong System.Int32 repeats System.Boolean disableRotation FollowPathBehavior(ISceneObject, IPathProperty, Single, AnimationCurve, Boolean, Boolean, Boolean, Boolean, Int32, Boolean) Declaration public FollowPathBehavior(ISceneObject target, IPathProperty path, float duration, AnimationCurve velocity, bool keepRelativePosition = false, bool keepRelativeRotation = false, bool reverse = false, bool pingPong = false, int repeats = 1, bool disableRotation = false) Parameters Type Name Description ISceneObject target IPathProperty path System.Single duration UnityEngine.AnimationCurve velocity System.Boolean keepRelativePosition System.Boolean keepRelativeRotation System.Boolean reverse System.Boolean pingPong System.Int32 repeats System.Boolean disableRotation Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.FollowPathBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Pro.Behaviors.html": {
    "href": "api/VRBuilder.Pro.Behaviors.html",
    "title": "Namespace VRBuilder.Pro.Behaviors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Pro.Behaviors Classes AnimateTransformBehavior AnimateTransformBehavior.EntityData ChildExplosionViewBehavior ChildExplosionViewBehavior.EntityData FollowPathBehavior FollowPathBehavior.EntityData MathOperationBehavior MathOperationBehavior.EntityData OutlineObjectsBehavior OutlineObjectsBehavior.EntityData PlayAnimationClipBehavior PlayAnimationClipBehavior.ActivatingProcess PlayAnimationClipBehavior.EntityData PlayVideoBehavior PlayVideoBehavior.ActivatingProcess PlayVideoBehavior.EntityData PointAtObjectsBehavior PointAtObjectsBehavior.EntityData RotateAroundAxisBehavior RotateAroundAxisBehavior.EntityData RotateAroundAxisBehavior.RotationAxis SelectRandomTransitionBehavior SelectRandomTransitionBehavior.EntityData SetAnimatorBoolParameterBehavior SetAnimatorBoolParameterBehavior.EntityData SetAnimatorFloatParameterBehavior SetAnimatorFloatParameterBehavior.EntityData SetAnimatorIntParameterBehavior SetAnimatorIntParameterBehavior.EntityData SetAnimatorTriggerParameterBehavior SetAnimatorTriggerParameterBehavior.EntityData SetRandomBooleanBehavior SetRandomBooleanBehavior.EntityData SetRandomNumberBehavior SetRandomNumberBehavior.EntityData SetStateBehavior SetStateBehavior.EntityData StartTimerBehavior StartTimerBehavior.EntityData StopTimerBehavior StopTimerBehavior.EntityData TriggerEventBehavior TriggerEventBehavior.EntityData TriggerGenericEventBehavior<T> TriggerGenericEventBehavior<T>.EntityData UpdateScoreBehavior UpdateScoreBehavior.EntityData"
  },
  "api/VRBuilder.Pro.Behaviors.MathOperationBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.MathOperationBehavior.EntityData.html",
    "title": "Class MathOperationBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class MathOperationBehavior.EntityData Inheritance System.Object MathOperationBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [DisplayName(\"Math Operation\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Modified Declaration [HideInProcessInspector] public SingleScenePropertyReference<IDataProperty<float>> Modified { get; set; } Property Value Type Description SingleScenePropertyReference < IDataProperty < System.Single >> Modifier Declaration [HideInProcessInspector] public ProcessVariableSelectableValue<float> Modifier { get; set; } Property Value Type Description ProcessVariableSelectableValue < System.Single > Name Declaration public string Name { get; } Property Value Type Description System.String Operation Declaration [HideInProcessInspector] public IOperationCommand<float, float> Operation { get; set; } Property Value Type Description IOperationCommand < System.Single , System.Single > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.MathOperationBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.MathOperationBehavior.html",
    "title": "Class MathOperationBehavior | VR Builder Documentation",
    "keywords": "Class MathOperationBehavior Inheritance System.Object Entity < MathOperationBehavior.EntityData > Behavior < MathOperationBehavior.EntityData > MathOperationBehavior Implements IDataOwner < MathOperationBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<MathOperationBehavior.EntityData>.Clone() Behavior<MathOperationBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<MathOperationBehavior.EntityData>.GetActiveProcess() Entity<MathOperationBehavior.EntityData>.GetDeactivatingProcess() Entity<MathOperationBehavior.EntityData>.GetAbortingProcess() Entity<MathOperationBehavior.EntityData>.GetConfigurator() Entity<MathOperationBehavior.EntityData>.Configure(IMode) Entity<MathOperationBehavior.EntityData>.Update() Entity<MathOperationBehavior.EntityData>.Data Entity<MathOperationBehavior.EntityData>.IDataOwner.Data Entity<MathOperationBehavior.EntityData>.LifeCycle Entity<MathOperationBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/states-data-add-on\")] public class MathOperationBehavior : Behavior<MathOperationBehavior.EntityData>, IDataOwner<MathOperationBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors MathOperationBehavior() Declaration public MathOperationBehavior() MathOperationBehavior(Guid, Guid, Single, Boolean, IOperationCommand<Single, Single>) Declaration public MathOperationBehavior(Guid modifiedPropertyGuid, Guid modifierPropertyGuid, float modifierValue, bool isModifierConst, IOperationCommand<float, float> operation) Parameters Type Name Description System.Guid modifiedPropertyGuid System.Guid modifierPropertyGuid System.Single modifierValue System.Boolean isModifierConst IOperationCommand < System.Single , System.Single > operation MathOperationBehavior(IDataProperty<Single>, IDataProperty<Single>, Single, Boolean, IOperationCommand<Single, Single>) Declaration public MathOperationBehavior(IDataProperty<float> modifiedProperty, IDataProperty<float> modifierProperty, float value, bool isModifierConst, IOperationCommand<float, float> operation) Parameters Type Name Description IDataProperty < System.Single > modifiedProperty IDataProperty < System.Single > modifierProperty System.Single value System.Boolean isModifierConst IOperationCommand < System.Single , System.Single > operation Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.MathOperationBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Pro.Behaviors.OutlineObjectsBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.OutlineObjectsBehavior.EntityData.html",
    "title": "Class OutlineObjectsBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class OutlineObjectsBehavior.EntityData Inheritance System.Object OutlineObjectsBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties CustomOutlineColor Declaration public ModeParameter<Color> CustomOutlineColor { get; set; } Property Value Type Description ModeParameter < UnityEngine.Color > Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String OutlineColor Declaration [DisplayName(\"Color\")] public Color OutlineColor { get; set; } Property Value Type Description UnityEngine.Color TargetObjects Declaration [DisplayName(\"Objects\")] public MultipleScenePropertyReference<IOutlineProperty> TargetObjects { get; set; } Property Value Type Description MultipleScenePropertyReference < IOutlineProperty > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.OutlineObjectsBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.OutlineObjectsBehavior.html",
    "title": "Class OutlineObjectsBehavior | VR Builder Documentation",
    "keywords": "Class OutlineObjectsBehavior Inheritance System.Object Entity < OutlineObjectsBehavior.EntityData > Behavior < OutlineObjectsBehavior.EntityData > OutlineObjectsBehavior Implements IDataOwner < OutlineObjectsBehavior.EntityData > IBehavior IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > IOptional IEntity Inherited Members Behavior<OutlineObjectsBehavior.EntityData>.Clone() Behavior<OutlineObjectsBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<OutlineObjectsBehavior.EntityData>.GetActiveProcess() Entity<OutlineObjectsBehavior.EntityData>.GetAbortingProcess() Entity<OutlineObjectsBehavior.EntityData>.Configure(IMode) Entity<OutlineObjectsBehavior.EntityData>.Update() Entity<OutlineObjectsBehavior.EntityData>.Data Entity<OutlineObjectsBehavior.EntityData>.IDataOwner.Data Entity<OutlineObjectsBehavior.EntityData>.LifeCycle Entity<OutlineObjectsBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax public class OutlineObjectsBehavior : Behavior<OutlineObjectsBehavior.EntityData>, IDataOwner<OutlineObjectsBehavior.EntityData>, IBehavior, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior>, IOptional, IEntity Constructors OutlineObjectsBehavior() Declaration public OutlineObjectsBehavior() OutlineObjectsBehavior(Guid, Color) Declaration public OutlineObjectsBehavior(Guid objectId, Color highlightColor) Parameters Type Name Description System.Guid objectId UnityEngine.Color highlightColor Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.OutlineObjectsBehavior.EntityData>.GetActivatingProcess() GetConfigurator() Declaration protected override IConfigurator GetConfigurator() Returns Type Description IConfigurator Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.OutlineObjectsBehavior.EntityData>.GetConfigurator() GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.OutlineObjectsBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IDataOwner<TData> IDataOwner IClonable<T> IOptional IEntity"
  },
  "api/VRBuilder.Pro.Behaviors.PlayAnimationClipBehavior.ActivatingProcess.html": {
    "href": "api/VRBuilder.Pro.Behaviors.PlayAnimationClipBehavior.ActivatingProcess.html",
    "title": "Class PlayAnimationClipBehavior.ActivatingProcess | VR Builder Documentation",
    "keywords": "Class PlayAnimationClipBehavior.ActivatingProcess Inheritance System.Object StageProcess < PlayAnimationClipBehavior.EntityData > PlayAnimationClipBehavior.ActivatingProcess Implements IStageProcess Inherited Members StageProcess<PlayAnimationClipBehavior.EntityData>.Data StageProcess<PlayAnimationClipBehavior.EntityData>.Outer Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax public class ActivatingProcess : StageProcess<PlayAnimationClipBehavior.EntityData>, IStageProcess Constructors ActivatingProcess(PlayAnimationClipBehavior.EntityData) Declaration public ActivatingProcess(PlayAnimationClipBehavior.EntityData data) Parameters Type Name Description PlayAnimationClipBehavior.EntityData data Methods End() Declaration public override void End() Overrides VRBuilder.Core.StageProcess<VRBuilder.Pro.Behaviors.PlayAnimationClipBehavior.EntityData>.End() FastForward() Declaration public override void FastForward() Overrides VRBuilder.Core.StageProcess<VRBuilder.Pro.Behaviors.PlayAnimationClipBehavior.EntityData>.FastForward() Start() Declaration public override void Start() Overrides VRBuilder.Core.StageProcess<VRBuilder.Pro.Behaviors.PlayAnimationClipBehavior.EntityData>.Start() Update() Declaration public override IEnumerator Update() Returns Type Description System.Collections.IEnumerator Overrides VRBuilder.Core.StageProcess<VRBuilder.Pro.Behaviors.PlayAnimationClipBehavior.EntityData>.Update() Implements IStageProcess"
  },
  "api/VRBuilder.Pro.Behaviors.PlayAnimationClipBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.PlayAnimationClipBehavior.EntityData.html",
    "title": "Class PlayAnimationClipBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class PlayAnimationClipBehavior.EntityData Inheritance System.Object PlayAnimationClipBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties AnimationClipPath Declaration [UsesSpecificProcessDrawer(\"AnimationClipResourceDrawer\")] [DisplayName(\"Animation clip\")] public string AnimationClipPath { get; set; } Property Value Type Description System.String AnimationProperty Declaration [DisplayName(\"Object to animate\")] public SingleScenePropertyReference<IAnimationProperty> AnimationProperty { get; set; } Property Value Type Description SingleScenePropertyReference < IAnimationProperty > Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.PlayAnimationClipBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.PlayAnimationClipBehavior.html",
    "title": "Class PlayAnimationClipBehavior | VR Builder Documentation",
    "keywords": "Class PlayAnimationClipBehavior Inheritance System.Object Entity < PlayAnimationClipBehavior.EntityData > Behavior < PlayAnimationClipBehavior.EntityData > PlayAnimationClipBehavior Implements IDataOwner < PlayAnimationClipBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<PlayAnimationClipBehavior.EntityData>.Clone() Behavior<PlayAnimationClipBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<PlayAnimationClipBehavior.EntityData>.GetActiveProcess() Entity<PlayAnimationClipBehavior.EntityData>.GetDeactivatingProcess() Entity<PlayAnimationClipBehavior.EntityData>.GetAbortingProcess() Entity<PlayAnimationClipBehavior.EntityData>.GetConfigurator() Entity<PlayAnimationClipBehavior.EntityData>.Configure(IMode) Entity<PlayAnimationClipBehavior.EntityData>.Update() Entity<PlayAnimationClipBehavior.EntityData>.Data Entity<PlayAnimationClipBehavior.EntityData>.IDataOwner.Data Entity<PlayAnimationClipBehavior.EntityData>.LifeCycle Entity<PlayAnimationClipBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax public class PlayAnimationClipBehavior : Behavior<PlayAnimationClipBehavior.EntityData>, IDataOwner<PlayAnimationClipBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors PlayAnimationClipBehavior() Declaration public PlayAnimationClipBehavior() PlayAnimationClipBehavior(String, Guid) Declaration public PlayAnimationClipBehavior(string clipPath, Guid objectId) Parameters Type Name Description System.String clipPath System.Guid objectId Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.PlayAnimationClipBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Pro.Behaviors.PlayVideoBehavior.ActivatingProcess.html": {
    "href": "api/VRBuilder.Pro.Behaviors.PlayVideoBehavior.ActivatingProcess.html",
    "title": "Class PlayVideoBehavior.ActivatingProcess | VR Builder Documentation",
    "keywords": "Class PlayVideoBehavior.ActivatingProcess Inheritance System.Object StageProcess < PlayVideoBehavior.EntityData > PlayVideoBehavior.ActivatingProcess Implements IStageProcess Inherited Members StageProcess<PlayVideoBehavior.EntityData>.Data StageProcess<PlayVideoBehavior.EntityData>.Outer Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax public class ActivatingProcess : StageProcess<PlayVideoBehavior.EntityData>, IStageProcess Constructors ActivatingProcess(PlayVideoBehavior.EntityData) Declaration public ActivatingProcess(PlayVideoBehavior.EntityData data) Parameters Type Name Description PlayVideoBehavior.EntityData data Methods End() Declaration public override void End() Overrides VRBuilder.Core.StageProcess<VRBuilder.Pro.Behaviors.PlayVideoBehavior.EntityData>.End() FastForward() Declaration public override void FastForward() Overrides VRBuilder.Core.StageProcess<VRBuilder.Pro.Behaviors.PlayVideoBehavior.EntityData>.FastForward() Start() Declaration public override void Start() Overrides VRBuilder.Core.StageProcess<VRBuilder.Pro.Behaviors.PlayVideoBehavior.EntityData>.Start() Update() Declaration public override IEnumerator Update() Returns Type Description System.Collections.IEnumerator Overrides VRBuilder.Core.StageProcess<VRBuilder.Pro.Behaviors.PlayVideoBehavior.EntityData>.Update() Implements IStageProcess"
  },
  "api/VRBuilder.Pro.Behaviors.PlayVideoBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.PlayVideoBehavior.EntityData.html",
    "title": "Class PlayVideoBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class PlayVideoBehavior.EntityData Inheritance System.Object PlayVideoBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String VideoPlayer Declaration [DisplayName(\"Video player\")] public SingleScenePropertyReference<IVideoPlayerProperty> VideoPlayer { get; set; } Property Value Type Description SingleScenePropertyReference < IVideoPlayerProperty > VideoSource Declaration [UsesSpecificProcessDrawer(\"StringsSelectableValueDrawer\")] [DisplayName(\"Video clip\")] public VideoClipOrURLSelectableValue VideoSource { get; set; } Property Value Type Description VideoClipOrURLSelectableValue Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.PlayVideoBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.PlayVideoBehavior.html",
    "title": "Class PlayVideoBehavior | VR Builder Documentation",
    "keywords": "Class PlayVideoBehavior Inheritance System.Object Entity < PlayVideoBehavior.EntityData > Behavior < PlayVideoBehavior.EntityData > PlayVideoBehavior Implements IDataOwner < PlayVideoBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<PlayVideoBehavior.EntityData>.Clone() Behavior<PlayVideoBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<PlayVideoBehavior.EntityData>.GetActiveProcess() Entity<PlayVideoBehavior.EntityData>.GetDeactivatingProcess() Entity<PlayVideoBehavior.EntityData>.GetAbortingProcess() Entity<PlayVideoBehavior.EntityData>.GetConfigurator() Entity<PlayVideoBehavior.EntityData>.Configure(IMode) Entity<PlayVideoBehavior.EntityData>.Update() Entity<PlayVideoBehavior.EntityData>.Data Entity<PlayVideoBehavior.EntityData>.IDataOwner.Data Entity<PlayVideoBehavior.EntityData>.LifeCycle Entity<PlayVideoBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax public class PlayVideoBehavior : Behavior<PlayVideoBehavior.EntityData>, IDataOwner<PlayVideoBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors PlayVideoBehavior() Declaration public PlayVideoBehavior() Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.PlayVideoBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Pro.Behaviors.PointAtObjectsBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.PointAtObjectsBehavior.EntityData.html",
    "title": "Class PointAtObjectsBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class PointAtObjectsBehavior.EntityData Inheritance System.Object PointAtObjectsBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String PointerInstances Declaration public List<ObjectPointer> PointerInstances { get; set; } Property Value Type Description System.Collections.Generic.List < ObjectPointer > PointerObjectPrefabPath Declaration [DisplayName(\"Pointer Resource\")] [UsesSpecificProcessDrawer(\"ObjectPointerResourceDrawer\")] public string PointerObjectPrefabPath { get; set; } Property Value Type Description System.String TargetObjects Declaration [DisplayName(\"Objects\")] public MultipleSceneObjectReference TargetObjects { get; set; } Property Value Type Description MultipleSceneObjectReference Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.PointAtObjectsBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.PointAtObjectsBehavior.html",
    "title": "Class PointAtObjectsBehavior | VR Builder Documentation",
    "keywords": "Class PointAtObjectsBehavior Inheritance System.Object Entity < PointAtObjectsBehavior.EntityData > Behavior < PointAtObjectsBehavior.EntityData > PointAtObjectsBehavior Implements IDataOwner < PointAtObjectsBehavior.EntityData > IBehavior IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > IOptional IEntity Inherited Members Behavior<PointAtObjectsBehavior.EntityData>.Clone() Behavior<PointAtObjectsBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<PointAtObjectsBehavior.EntityData>.GetActiveProcess() Entity<PointAtObjectsBehavior.EntityData>.GetAbortingProcess() Entity<PointAtObjectsBehavior.EntityData>.GetConfigurator() Entity<PointAtObjectsBehavior.EntityData>.Configure(IMode) Entity<PointAtObjectsBehavior.EntityData>.Update() Entity<PointAtObjectsBehavior.EntityData>.Data Entity<PointAtObjectsBehavior.EntityData>.IDataOwner.Data Entity<PointAtObjectsBehavior.EntityData>.LifeCycle Entity<PointAtObjectsBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax public class PointAtObjectsBehavior : Behavior<PointAtObjectsBehavior.EntityData>, IDataOwner<PointAtObjectsBehavior.EntityData>, IBehavior, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior>, IOptional, IEntity Constructors PointAtObjectsBehavior() Declaration public PointAtObjectsBehavior() Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.PointAtObjectsBehavior.EntityData>.GetActivatingProcess() GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.PointAtObjectsBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IDataOwner<TData> IDataOwner IClonable<T> IOptional IEntity"
  },
  "api/VRBuilder.Pro.Behaviors.RotateAroundAxisBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.RotateAroundAxisBehavior.EntityData.html",
    "title": "Class RotateAroundAxisBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class RotateAroundAxisBehavior.EntityData Inheritance System.Object RotateAroundAxisBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [DisplayName(\"Rotate Around Axis\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties AnimationCurve Declaration [DisplayName(\"Animation curve\")] public AnimationCurve AnimationCurve { get; set; } Property Value Type Description UnityEngine.AnimationCurve AxisProvider Declaration [DisplayName(\"Rotation axis provider\")] public SingleSceneObjectReference AxisProvider { get; set; } Property Value Type Description SingleSceneObjectReference Degrees Declaration [DisplayName(\"Degrees\")] public float Degrees { get; set; } Property Value Type Description System.Single Duration Declaration [DisplayName(\"Duration (in seconds)\")] public float Duration { get; set; } Property Value Type Description System.Single Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String RotationAxis Declaration [DisplayName(\"Rotation axis\")] public RotateAroundAxisBehavior.RotationAxis RotationAxis { get; set; } Property Value Type Description RotateAroundAxisBehavior.RotationAxis TargetObject Declaration [DisplayName(\"Object\")] public SingleSceneObjectReference TargetObject { get; set; } Property Value Type Description SingleSceneObjectReference Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.RotateAroundAxisBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.RotateAroundAxisBehavior.html",
    "title": "Class RotateAroundAxisBehavior | VR Builder Documentation",
    "keywords": "Class RotateAroundAxisBehavior Inheritance System.Object Entity < RotateAroundAxisBehavior.EntityData > Behavior < RotateAroundAxisBehavior.EntityData > RotateAroundAxisBehavior Implements IDataOwner < RotateAroundAxisBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<RotateAroundAxisBehavior.EntityData>.Clone() Behavior<RotateAroundAxisBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<RotateAroundAxisBehavior.EntityData>.GetActiveProcess() Entity<RotateAroundAxisBehavior.EntityData>.GetDeactivatingProcess() Entity<RotateAroundAxisBehavior.EntityData>.GetAbortingProcess() Entity<RotateAroundAxisBehavior.EntityData>.GetConfigurator() Entity<RotateAroundAxisBehavior.EntityData>.Configure(IMode) Entity<RotateAroundAxisBehavior.EntityData>.Update() Entity<RotateAroundAxisBehavior.EntityData>.Data Entity<RotateAroundAxisBehavior.EntityData>.IDataOwner.Data Entity<RotateAroundAxisBehavior.EntityData>.LifeCycle Entity<RotateAroundAxisBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/animations-add-on\")] public class RotateAroundAxisBehavior : Behavior<RotateAroundAxisBehavior.EntityData>, IDataOwner<RotateAroundAxisBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors RotateAroundAxisBehavior() Declaration public RotateAroundAxisBehavior() RotateAroundAxisBehavior(Guid, Guid, RotateAroundAxisBehavior.RotationAxis, Single, Single, AnimationCurve) Declaration public RotateAroundAxisBehavior(Guid targetGuid, Guid axisProviderGuid, RotateAroundAxisBehavior.RotationAxis rotationAxis, float duration, float degrees, AnimationCurve animationCurve) Parameters Type Name Description System.Guid targetGuid System.Guid axisProviderGuid RotateAroundAxisBehavior.RotationAxis rotationAxis System.Single duration System.Single degrees UnityEngine.AnimationCurve animationCurve RotateAroundAxisBehavior(ISceneObject, ISceneObject, RotateAroundAxisBehavior.RotationAxis, Single, Single, AnimationCurve) Declaration public RotateAroundAxisBehavior(ISceneObject target, ISceneObject axisProvider, RotateAroundAxisBehavior.RotationAxis rotationAxis, float duration, float degrees, AnimationCurve animationCurve) Parameters Type Name Description ISceneObject target ISceneObject axisProvider RotateAroundAxisBehavior.RotationAxis rotationAxis System.Single duration System.Single degrees UnityEngine.AnimationCurve animationCurve Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.RotateAroundAxisBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Pro.Behaviors.RotateAroundAxisBehavior.RotationAxis.html": {
    "href": "api/VRBuilder.Pro.Behaviors.RotateAroundAxisBehavior.RotationAxis.html",
    "title": "Class RotateAroundAxisBehavior.RotationAxis | VR Builder Documentation",
    "keywords": "Class RotateAroundAxisBehavior.RotationAxis Inheritance System.Object RotateAroundAxisBehavior.RotationAxis Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax public sealed class RotationAxis : Enum Fields value__ Declaration public int value__ Field Value Type Description System.Int32 X Declaration public const RotateAroundAxisBehavior.RotationAxis X Field Value Type Description RotateAroundAxisBehavior.RotationAxis Y Declaration public const RotateAroundAxisBehavior.RotationAxis Y Field Value Type Description RotateAroundAxisBehavior.RotationAxis Z Declaration public const RotateAroundAxisBehavior.RotationAxis Z Field Value Type Description RotateAroundAxisBehavior.RotationAxis"
  },
  "api/VRBuilder.Pro.Behaviors.SelectRandomTransitionBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.SelectRandomTransitionBehavior.EntityData.html",
    "title": "Class SelectRandomTransitionBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SelectRandomTransitionBehavior.EntityData Inheritance System.Object SelectRandomTransitionBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [DisplayName(\"Select Random Transition\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; set; } Property Value Type Description System.String Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.SelectRandomTransitionBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.SelectRandomTransitionBehavior.html",
    "title": "Class SelectRandomTransitionBehavior | VR Builder Documentation",
    "keywords": "Class SelectRandomTransitionBehavior Inheritance System.Object Entity < SelectRandomTransitionBehavior.EntityData > Behavior < SelectRandomTransitionBehavior.EntityData > SelectRandomTransitionBehavior Implements IDataOwner < SelectRandomTransitionBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SelectRandomTransitionBehavior.EntityData>.Clone() Behavior<SelectRandomTransitionBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<SelectRandomTransitionBehavior.EntityData>.GetActiveProcess() Entity<SelectRandomTransitionBehavior.EntityData>.GetDeactivatingProcess() Entity<SelectRandomTransitionBehavior.EntityData>.GetAbortingProcess() Entity<SelectRandomTransitionBehavior.EntityData>.GetConfigurator() Entity<SelectRandomTransitionBehavior.EntityData>.Configure(IMode) Entity<SelectRandomTransitionBehavior.EntityData>.Update() Entity<SelectRandomTransitionBehavior.EntityData>.Data Entity<SelectRandomTransitionBehavior.EntityData>.IDataOwner.Data Entity<SelectRandomTransitionBehavior.EntityData>.LifeCycle Entity<SelectRandomTransitionBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/randomization-add-on\")] public class SelectRandomTransitionBehavior : Behavior<SelectRandomTransitionBehavior.EntityData>, IDataOwner<SelectRandomTransitionBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors SelectRandomTransitionBehavior() Declaration public SelectRandomTransitionBehavior() Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.SelectRandomTransitionBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Pro.Behaviors.SetAnimatorBoolParameterBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.SetAnimatorBoolParameterBehavior.EntityData.html",
    "title": "Class SetAnimatorBoolParameterBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetAnimatorBoolParameterBehavior.EntityData Inheritance System.Object SetAnimatorBoolParameterBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [DisplayName(\"Set Animator Boolean\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties Animators Declaration [DisplayName(\"Animators\")] public MultipleScenePropertyReference<IAnimatorProperty> Animators { get; set; } Property Value Type Description MultipleScenePropertyReference < IAnimatorProperty > Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String ParameterName Declaration [DisplayName(\"Parameter name\")] public string ParameterName { get; set; } Property Value Type Description System.String ParameterValue Declaration [DisplayName(\"Parameter value\")] public bool ParameterValue { get; set; } Property Value Type Description System.Boolean Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.SetAnimatorBoolParameterBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.SetAnimatorBoolParameterBehavior.html",
    "title": "Class SetAnimatorBoolParameterBehavior | VR Builder Documentation",
    "keywords": "Class SetAnimatorBoolParameterBehavior Inheritance System.Object Entity < SetAnimatorBoolParameterBehavior.EntityData > Behavior < SetAnimatorBoolParameterBehavior.EntityData > SetAnimatorBoolParameterBehavior Implements IDataOwner < SetAnimatorBoolParameterBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetAnimatorBoolParameterBehavior.EntityData>.Clone() Behavior<SetAnimatorBoolParameterBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<SetAnimatorBoolParameterBehavior.EntityData>.GetActiveProcess() Entity<SetAnimatorBoolParameterBehavior.EntityData>.GetDeactivatingProcess() Entity<SetAnimatorBoolParameterBehavior.EntityData>.GetAbortingProcess() Entity<SetAnimatorBoolParameterBehavior.EntityData>.GetConfigurator() Entity<SetAnimatorBoolParameterBehavior.EntityData>.Configure(IMode) Entity<SetAnimatorBoolParameterBehavior.EntityData>.Update() Entity<SetAnimatorBoolParameterBehavior.EntityData>.Data Entity<SetAnimatorBoolParameterBehavior.EntityData>.IDataOwner.Data Entity<SetAnimatorBoolParameterBehavior.EntityData>.LifeCycle Entity<SetAnimatorBoolParameterBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/animations-add-on\")] public class SetAnimatorBoolParameterBehavior : Behavior<SetAnimatorBoolParameterBehavior.EntityData>, IDataOwner<SetAnimatorBoolParameterBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors SetAnimatorBoolParameterBehavior() Declaration public SetAnimatorBoolParameterBehavior() SetAnimatorBoolParameterBehavior(Guid, String, Boolean) Declaration public SetAnimatorBoolParameterBehavior(Guid animatorPropertyGuid, string parameterName, bool parameterValue) Parameters Type Name Description System.Guid animatorPropertyGuid System.String parameterName System.Boolean parameterValue SetAnimatorBoolParameterBehavior(IAnimatorProperty, String, Boolean) Declaration public SetAnimatorBoolParameterBehavior(IAnimatorProperty animatorProperty, string parameterName, bool parameterValue) Parameters Type Name Description IAnimatorProperty animatorProperty System.String parameterName System.Boolean parameterValue Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.SetAnimatorBoolParameterBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Pro.Behaviors.SetAnimatorFloatParameterBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.SetAnimatorFloatParameterBehavior.EntityData.html",
    "title": "Class SetAnimatorFloatParameterBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetAnimatorFloatParameterBehavior.EntityData Inheritance System.Object SetAnimatorFloatParameterBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [DisplayName(\"Set Animator Float\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties AnimationCurve Declaration [DisplayName(\"Animation curve\")] public AnimationCurve AnimationCurve { get; set; } Property Value Type Description UnityEngine.AnimationCurve Animators Declaration [DisplayName(\"Animators\")] public MultipleScenePropertyReference<IAnimatorProperty> Animators { get; set; } Property Value Type Description MultipleScenePropertyReference < IAnimatorProperty > Duration Declaration [DisplayName(\"Duration (in seconds)\")] public float Duration { get; set; } Property Value Type Description System.Single Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String ParameterName Declaration [DisplayName(\"Parameter name\")] public string ParameterName { get; set; } Property Value Type Description System.String TargetValue Declaration [DisplayName(\"Target value\")] public float TargetValue { get; set; } Property Value Type Description System.Single Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.SetAnimatorFloatParameterBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.SetAnimatorFloatParameterBehavior.html",
    "title": "Class SetAnimatorFloatParameterBehavior | VR Builder Documentation",
    "keywords": "Class SetAnimatorFloatParameterBehavior Inheritance System.Object Entity < SetAnimatorFloatParameterBehavior.EntityData > Behavior < SetAnimatorFloatParameterBehavior.EntityData > SetAnimatorFloatParameterBehavior Implements IDataOwner < SetAnimatorFloatParameterBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetAnimatorFloatParameterBehavior.EntityData>.Clone() Behavior<SetAnimatorFloatParameterBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<SetAnimatorFloatParameterBehavior.EntityData>.GetActiveProcess() Entity<SetAnimatorFloatParameterBehavior.EntityData>.GetDeactivatingProcess() Entity<SetAnimatorFloatParameterBehavior.EntityData>.GetAbortingProcess() Entity<SetAnimatorFloatParameterBehavior.EntityData>.GetConfigurator() Entity<SetAnimatorFloatParameterBehavior.EntityData>.Configure(IMode) Entity<SetAnimatorFloatParameterBehavior.EntityData>.Update() Entity<SetAnimatorFloatParameterBehavior.EntityData>.Data Entity<SetAnimatorFloatParameterBehavior.EntityData>.IDataOwner.Data Entity<SetAnimatorFloatParameterBehavior.EntityData>.LifeCycle Entity<SetAnimatorFloatParameterBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/animations-add-on\")] public class SetAnimatorFloatParameterBehavior : Behavior<SetAnimatorFloatParameterBehavior.EntityData>, IDataOwner<SetAnimatorFloatParameterBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors SetAnimatorFloatParameterBehavior() Declaration public SetAnimatorFloatParameterBehavior() SetAnimatorFloatParameterBehavior(Guid, String, Single, Single, AnimationCurve) Declaration public SetAnimatorFloatParameterBehavior(Guid animatorPropertyGuid, string parameterName, float targetValue, float duration, AnimationCurve animationCurve) Parameters Type Name Description System.Guid animatorPropertyGuid System.String parameterName System.Single targetValue System.Single duration UnityEngine.AnimationCurve animationCurve SetAnimatorFloatParameterBehavior(IAnimatorProperty, String, Single, Single, AnimationCurve) Declaration public SetAnimatorFloatParameterBehavior(IAnimatorProperty animatorProperty, string parameterName, float targetValue, float duration, AnimationCurve animationCurve) Parameters Type Name Description IAnimatorProperty animatorProperty System.String parameterName System.Single targetValue System.Single duration UnityEngine.AnimationCurve animationCurve Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.SetAnimatorFloatParameterBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Pro.Behaviors.SetAnimatorIntParameterBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.SetAnimatorIntParameterBehavior.EntityData.html",
    "title": "Class SetAnimatorIntParameterBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetAnimatorIntParameterBehavior.EntityData Inheritance System.Object SetAnimatorIntParameterBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [DisplayName(\"Set Animator Integer\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties Animators Declaration [DisplayName(\"Animators\")] public MultipleScenePropertyReference<IAnimatorProperty> Animators { get; set; } Property Value Type Description MultipleScenePropertyReference < IAnimatorProperty > Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String ParameterName Declaration [DisplayName(\"Parameter name\")] public string ParameterName { get; set; } Property Value Type Description System.String ParameterValue Declaration [DisplayName(\"Parameter value\")] public int ParameterValue { get; set; } Property Value Type Description System.Int32 Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.SetAnimatorIntParameterBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.SetAnimatorIntParameterBehavior.html",
    "title": "Class SetAnimatorIntParameterBehavior | VR Builder Documentation",
    "keywords": "Class SetAnimatorIntParameterBehavior Inheritance System.Object Entity < SetAnimatorIntParameterBehavior.EntityData > Behavior < SetAnimatorIntParameterBehavior.EntityData > SetAnimatorIntParameterBehavior Implements IDataOwner < SetAnimatorIntParameterBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetAnimatorIntParameterBehavior.EntityData>.Clone() Behavior<SetAnimatorIntParameterBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<SetAnimatorIntParameterBehavior.EntityData>.GetActiveProcess() Entity<SetAnimatorIntParameterBehavior.EntityData>.GetDeactivatingProcess() Entity<SetAnimatorIntParameterBehavior.EntityData>.GetAbortingProcess() Entity<SetAnimatorIntParameterBehavior.EntityData>.GetConfigurator() Entity<SetAnimatorIntParameterBehavior.EntityData>.Configure(IMode) Entity<SetAnimatorIntParameterBehavior.EntityData>.Update() Entity<SetAnimatorIntParameterBehavior.EntityData>.Data Entity<SetAnimatorIntParameterBehavior.EntityData>.IDataOwner.Data Entity<SetAnimatorIntParameterBehavior.EntityData>.LifeCycle Entity<SetAnimatorIntParameterBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/animations-add-on\")] public class SetAnimatorIntParameterBehavior : Behavior<SetAnimatorIntParameterBehavior.EntityData>, IDataOwner<SetAnimatorIntParameterBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors SetAnimatorIntParameterBehavior() Declaration public SetAnimatorIntParameterBehavior() SetAnimatorIntParameterBehavior(Guid, String, Int32) Declaration public SetAnimatorIntParameterBehavior(Guid animatorPropertyGuid, string parameterName, int parameterValue) Parameters Type Name Description System.Guid animatorPropertyGuid System.String parameterName System.Int32 parameterValue SetAnimatorIntParameterBehavior(IAnimatorProperty, String, Int32) Declaration public SetAnimatorIntParameterBehavior(IAnimatorProperty animatorProperty, string parameterName, int parameterValue) Parameters Type Name Description IAnimatorProperty animatorProperty System.String parameterName System.Int32 parameterValue Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.SetAnimatorIntParameterBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Pro.Behaviors.SetAnimatorTriggerParameterBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.SetAnimatorTriggerParameterBehavior.EntityData.html",
    "title": "Class SetAnimatorTriggerParameterBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetAnimatorTriggerParameterBehavior.EntityData Inheritance System.Object SetAnimatorTriggerParameterBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [DisplayName(\"Set Animator Trigger\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties Animators Declaration [DisplayName(\"Animators\")] public MultipleScenePropertyReference<IAnimatorProperty> Animators { get; set; } Property Value Type Description MultipleScenePropertyReference < IAnimatorProperty > Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String ParameterName Declaration [DisplayName(\"Parameter name\")] public string ParameterName { get; set; } Property Value Type Description System.String Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.SetAnimatorTriggerParameterBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.SetAnimatorTriggerParameterBehavior.html",
    "title": "Class SetAnimatorTriggerParameterBehavior | VR Builder Documentation",
    "keywords": "Class SetAnimatorTriggerParameterBehavior Inheritance System.Object Entity < SetAnimatorTriggerParameterBehavior.EntityData > Behavior < SetAnimatorTriggerParameterBehavior.EntityData > SetAnimatorTriggerParameterBehavior Implements IDataOwner < SetAnimatorTriggerParameterBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetAnimatorTriggerParameterBehavior.EntityData>.Clone() Behavior<SetAnimatorTriggerParameterBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<SetAnimatorTriggerParameterBehavior.EntityData>.GetActiveProcess() Entity<SetAnimatorTriggerParameterBehavior.EntityData>.GetDeactivatingProcess() Entity<SetAnimatorTriggerParameterBehavior.EntityData>.GetAbortingProcess() Entity<SetAnimatorTriggerParameterBehavior.EntityData>.GetConfigurator() Entity<SetAnimatorTriggerParameterBehavior.EntityData>.Configure(IMode) Entity<SetAnimatorTriggerParameterBehavior.EntityData>.Update() Entity<SetAnimatorTriggerParameterBehavior.EntityData>.Data Entity<SetAnimatorTriggerParameterBehavior.EntityData>.IDataOwner.Data Entity<SetAnimatorTriggerParameterBehavior.EntityData>.LifeCycle Entity<SetAnimatorTriggerParameterBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/animations-add-on\")] public class SetAnimatorTriggerParameterBehavior : Behavior<SetAnimatorTriggerParameterBehavior.EntityData>, IDataOwner<SetAnimatorTriggerParameterBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors SetAnimatorTriggerParameterBehavior() Declaration public SetAnimatorTriggerParameterBehavior() SetAnimatorTriggerParameterBehavior(Guid, String) Declaration public SetAnimatorTriggerParameterBehavior(Guid animatorPropertyGuid, string parameterName) Parameters Type Name Description System.Guid animatorPropertyGuid System.String parameterName SetAnimatorTriggerParameterBehavior(IAnimatorProperty, String) Declaration public SetAnimatorTriggerParameterBehavior(IAnimatorProperty animatorProperty, string parameterName) Parameters Type Name Description IAnimatorProperty animatorProperty System.String parameterName Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.SetAnimatorTriggerParameterBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Pro.Behaviors.SetRandomBooleanBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.SetRandomBooleanBehavior.EntityData.html",
    "title": "Class SetRandomBooleanBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetRandomBooleanBehavior.EntityData Inheritance System.Object SetRandomBooleanBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [DisplayName(\"Set Random Boolean\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties DataProperties Declaration [DisplayName(\"Data Properties\")] public MultipleScenePropertyReference<IDataProperty<bool>> DataProperties { get; set; } Property Value Type Description MultipleScenePropertyReference < IDataProperty < System.Boolean >> Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String TrueProbability Declaration [DisplayName(\"Probability to be True\")] [UsesSpecificProcessDrawer(\"NormalizedFloatDrawer\")] public float TrueProbability { get; set; } Property Value Type Description System.Single Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.SetRandomBooleanBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.SetRandomBooleanBehavior.html",
    "title": "Class SetRandomBooleanBehavior | VR Builder Documentation",
    "keywords": "Class SetRandomBooleanBehavior Inheritance System.Object Entity < SetRandomBooleanBehavior.EntityData > Behavior < SetRandomBooleanBehavior.EntityData > SetRandomBooleanBehavior Implements IDataOwner < SetRandomBooleanBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetRandomBooleanBehavior.EntityData>.Clone() Behavior<SetRandomBooleanBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<SetRandomBooleanBehavior.EntityData>.GetActiveProcess() Entity<SetRandomBooleanBehavior.EntityData>.GetDeactivatingProcess() Entity<SetRandomBooleanBehavior.EntityData>.GetAbortingProcess() Entity<SetRandomBooleanBehavior.EntityData>.GetConfigurator() Entity<SetRandomBooleanBehavior.EntityData>.Configure(IMode) Entity<SetRandomBooleanBehavior.EntityData>.Update() Entity<SetRandomBooleanBehavior.EntityData>.Data Entity<SetRandomBooleanBehavior.EntityData>.IDataOwner.Data Entity<SetRandomBooleanBehavior.EntityData>.LifeCycle Entity<SetRandomBooleanBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/randomization-add-on\")] public class SetRandomBooleanBehavior : Behavior<SetRandomBooleanBehavior.EntityData>, IDataOwner<SetRandomBooleanBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors SetRandomBooleanBehavior() Declaration public SetRandomBooleanBehavior() SetRandomBooleanBehavior(Guid, Single) Declaration public SetRandomBooleanBehavior(Guid propertyGuid, float trueProbability = 0.5F) Parameters Type Name Description System.Guid propertyGuid System.Single trueProbability SetRandomBooleanBehavior(IDataProperty<Boolean>, Single) Declaration public SetRandomBooleanBehavior(IDataProperty<bool> property, float trueProbability) Parameters Type Name Description IDataProperty < System.Boolean > property System.Single trueProbability Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.SetRandomBooleanBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Pro.Behaviors.SetRandomNumberBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.SetRandomNumberBehavior.EntityData.html",
    "title": "Class SetRandomNumberBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetRandomNumberBehavior.EntityData Inheritance System.Object SetRandomNumberBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [DisplayName(\"Set Random Number\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties DataProperties Declaration [DisplayName(\"Data Property\")] public MultipleScenePropertyReference<IDataProperty<float>> DataProperties { get; set; } Property Value Type Description MultipleScenePropertyReference < IDataProperty < System.Single >> MaxValue Declaration [DisplayName(\"Max Value\")] public float MaxValue { get; set; } Property Value Type Description System.Single Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata MinValue Declaration [DisplayName(\"Min Value\")] public float MinValue { get; set; } Property Value Type Description System.Single Name Declaration public string Name { get; } Property Value Type Description System.String RandomizeInteger Declaration [DisplayName(\"Randomize Integer\")] public bool RandomizeInteger { get; set; } Property Value Type Description System.Boolean Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.SetRandomNumberBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.SetRandomNumberBehavior.html",
    "title": "Class SetRandomNumberBehavior | VR Builder Documentation",
    "keywords": "Class SetRandomNumberBehavior Inheritance System.Object Entity < SetRandomNumberBehavior.EntityData > Behavior < SetRandomNumberBehavior.EntityData > SetRandomNumberBehavior Implements IDataOwner < SetRandomNumberBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetRandomNumberBehavior.EntityData>.Clone() Behavior<SetRandomNumberBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<SetRandomNumberBehavior.EntityData>.GetActiveProcess() Entity<SetRandomNumberBehavior.EntityData>.GetDeactivatingProcess() Entity<SetRandomNumberBehavior.EntityData>.GetAbortingProcess() Entity<SetRandomNumberBehavior.EntityData>.GetConfigurator() Entity<SetRandomNumberBehavior.EntityData>.Configure(IMode) Entity<SetRandomNumberBehavior.EntityData>.Update() Entity<SetRandomNumberBehavior.EntityData>.Data Entity<SetRandomNumberBehavior.EntityData>.IDataOwner.Data Entity<SetRandomNumberBehavior.EntityData>.LifeCycle Entity<SetRandomNumberBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/randomization-add-on\")] public class SetRandomNumberBehavior : Behavior<SetRandomNumberBehavior.EntityData>, IDataOwner<SetRandomNumberBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors SetRandomNumberBehavior() Declaration public SetRandomNumberBehavior() SetRandomNumberBehavior(Guid, Single, Single, Boolean) Declaration public SetRandomNumberBehavior(Guid propertyGuid, float minValue, float maxValue, bool randomizeInteger) Parameters Type Name Description System.Guid propertyGuid System.Single minValue System.Single maxValue System.Boolean randomizeInteger SetRandomNumberBehavior(IDataProperty<Single>, Single, Single, Boolean) Declaration public SetRandomNumberBehavior(IDataProperty<float> property, float minValue, float maxValue, bool randomizeInteger) Parameters Type Name Description IDataProperty < System.Single > property System.Single minValue System.Single maxValue System.Boolean randomizeInteger Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.SetRandomNumberBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Pro.Behaviors.SetStateBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.SetStateBehavior.EntityData.html",
    "title": "Class SetStateBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class SetStateBehavior.EntityData Inheritance System.Object SetStateBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [DisplayName(\"Set State\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties DataProperties Declaration [HideInProcessInspector] public MultipleScenePropertyReference<StateDataPropertyBase> DataProperties { get; set; } Property Value Type Description MultipleScenePropertyReference < StateDataPropertyBase > Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String NewValue Declaration [HideInProcessInspector] public int NewValue { get; set; } Property Value Type Description System.Int32 Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.SetStateBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.SetStateBehavior.html",
    "title": "Class SetStateBehavior | VR Builder Documentation",
    "keywords": "Class SetStateBehavior Inheritance System.Object Entity < SetStateBehavior.EntityData > Behavior < SetStateBehavior.EntityData > SetStateBehavior Implements IDataOwner < SetStateBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<SetStateBehavior.EntityData>.Clone() Behavior<SetStateBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<SetStateBehavior.EntityData>.GetActiveProcess() Entity<SetStateBehavior.EntityData>.GetDeactivatingProcess() Entity<SetStateBehavior.EntityData>.GetAbortingProcess() Entity<SetStateBehavior.EntityData>.GetConfigurator() Entity<SetStateBehavior.EntityData>.Configure(IMode) Entity<SetStateBehavior.EntityData>.Update() Entity<SetStateBehavior.EntityData>.Data Entity<SetStateBehavior.EntityData>.IDataOwner.Data Entity<SetStateBehavior.EntityData>.LifeCycle Entity<SetStateBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/states-data-add-on\")] public class SetStateBehavior : Behavior<SetStateBehavior.EntityData>, IDataOwner<SetStateBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors SetStateBehavior() Declaration public SetStateBehavior() SetStateBehavior(Guid, Int32) Declaration public SetStateBehavior(Guid propertyGuid, int value) Parameters Type Name Description System.Guid propertyGuid System.Int32 value SetStateBehavior(StateDataPropertyBase, Int32) Declaration public SetStateBehavior(StateDataPropertyBase property, int value) Parameters Type Name Description StateDataPropertyBase property System.Int32 value Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.SetStateBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Pro.Behaviors.StartTimerBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.StartTimerBehavior.EntityData.html",
    "title": "Class StartTimerBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class StartTimerBehavior.EntityData Inheritance System.Object StartTimerBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [DisplayName(\"Start Timer\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties IsCountdown Declaration [DisplayName(\"Is Countdown\")] public bool IsCountdown { get; set; } Property Value Type Description System.Boolean Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String TimerProperties Declaration [DisplayName(\"Timer\")] public MultipleScenePropertyReference<ITimerProperty> TimerProperties { get; set; } Property Value Type Description MultipleScenePropertyReference < ITimerProperty > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.StartTimerBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.StartTimerBehavior.html",
    "title": "Class StartTimerBehavior | VR Builder Documentation",
    "keywords": "Class StartTimerBehavior Inheritance System.Object Entity < StartTimerBehavior.EntityData > Behavior < StartTimerBehavior.EntityData > StartTimerBehavior Implements IDataOwner < StartTimerBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<StartTimerBehavior.EntityData>.Clone() Behavior<StartTimerBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<StartTimerBehavior.EntityData>.GetActiveProcess() Entity<StartTimerBehavior.EntityData>.GetDeactivatingProcess() Entity<StartTimerBehavior.EntityData>.GetAbortingProcess() Entity<StartTimerBehavior.EntityData>.GetConfigurator() Entity<StartTimerBehavior.EntityData>.Configure(IMode) Entity<StartTimerBehavior.EntityData>.Update() Entity<StartTimerBehavior.EntityData>.Data Entity<StartTimerBehavior.EntityData>.IDataOwner.Data Entity<StartTimerBehavior.EntityData>.LifeCycle Entity<StartTimerBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/track-measure-add-on\")] public class StartTimerBehavior : Behavior<StartTimerBehavior.EntityData>, IDataOwner<StartTimerBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors StartTimerBehavior() Declaration public StartTimerBehavior() StartTimerBehavior(Guid, Boolean) Declaration public StartTimerBehavior(Guid propertyGuid, bool isCountdown) Parameters Type Name Description System.Guid propertyGuid System.Boolean isCountdown StartTimerBehavior(ITimerProperty, Boolean) Declaration public StartTimerBehavior(ITimerProperty property, bool isCountdown) Parameters Type Name Description ITimerProperty property System.Boolean isCountdown Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.StartTimerBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Pro.Behaviors.StopTimerBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.StopTimerBehavior.EntityData.html",
    "title": "Class StopTimerBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class StopTimerBehavior.EntityData Inheritance System.Object StopTimerBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [DisplayName(\"Stop Timer\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String TimerProperties Declaration [DisplayName(\"Timer\")] public MultipleScenePropertyReference<ITimerProperty> TimerProperties { get; set; } Property Value Type Description MultipleScenePropertyReference < ITimerProperty > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.StopTimerBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.StopTimerBehavior.html",
    "title": "Class StopTimerBehavior | VR Builder Documentation",
    "keywords": "Class StopTimerBehavior Inheritance System.Object Entity < StopTimerBehavior.EntityData > Behavior < StopTimerBehavior.EntityData > StopTimerBehavior Implements IDataOwner < StopTimerBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<StopTimerBehavior.EntityData>.Clone() Behavior<StopTimerBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<StopTimerBehavior.EntityData>.GetActiveProcess() Entity<StopTimerBehavior.EntityData>.GetDeactivatingProcess() Entity<StopTimerBehavior.EntityData>.GetAbortingProcess() Entity<StopTimerBehavior.EntityData>.GetConfigurator() Entity<StopTimerBehavior.EntityData>.Configure(IMode) Entity<StopTimerBehavior.EntityData>.Update() Entity<StopTimerBehavior.EntityData>.Data Entity<StopTimerBehavior.EntityData>.IDataOwner.Data Entity<StopTimerBehavior.EntityData>.LifeCycle Entity<StopTimerBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/track-measure-add-on\")] public class StopTimerBehavior : Behavior<StopTimerBehavior.EntityData>, IDataOwner<StopTimerBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors StopTimerBehavior() Declaration public StopTimerBehavior() StopTimerBehavior(Guid) Declaration public StopTimerBehavior(Guid propertyGuid) Parameters Type Name Description System.Guid propertyGuid StopTimerBehavior(ITimerProperty) Declaration public StopTimerBehavior(ITimerProperty property) Parameters Type Name Description ITimerProperty property Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.StopTimerBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Pro.Behaviors.TriggerEventBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.TriggerEventBehavior.EntityData.html",
    "title": "Class TriggerEventBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class TriggerEventBehavior.EntityData Inheritance System.Object TriggerEventBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [DisplayName(\"Trigger Event (Group)\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties ExecutionStages Declaration [DisplayName(\"Execution stages\")] public BehaviorExecutionStages ExecutionStages { get; set; } Property Value Type Description BehaviorExecutionStages Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String Targets Declaration [DisplayName(\"Targets\")] public MultipleScenePropertyReference<IEventProperty> Targets { get; set; } Property Value Type Description MultipleScenePropertyReference < IEventProperty > Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.TriggerEventBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.TriggerEventBehavior.html",
    "title": "Class TriggerEventBehavior | VR Builder Documentation",
    "keywords": "Class TriggerEventBehavior Inheritance System.Object Entity < TriggerEventBehavior.EntityData > Behavior < TriggerEventBehavior.EntityData > TriggerEventBehavior Implements IDataOwner < TriggerEventBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<TriggerEventBehavior.EntityData>.Clone() Behavior<TriggerEventBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<TriggerEventBehavior.EntityData>.GetActiveProcess() Entity<TriggerEventBehavior.EntityData>.GetAbortingProcess() Entity<TriggerEventBehavior.EntityData>.GetConfigurator() Entity<TriggerEventBehavior.EntityData>.Configure(IMode) Entity<TriggerEventBehavior.EntityData>.Update() Entity<TriggerEventBehavior.EntityData>.Data Entity<TriggerEventBehavior.EntityData>.IDataOwner.Data Entity<TriggerEventBehavior.EntityData>.LifeCycle Entity<TriggerEventBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/states-data-add-on\")] public class TriggerEventBehavior : Behavior<TriggerEventBehavior.EntityData>, IDataOwner<TriggerEventBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors TriggerEventBehavior() Declaration public TriggerEventBehavior() TriggerEventBehavior(Guid, BehaviorExecutionStages) Declaration public TriggerEventBehavior(Guid guid, BehaviorExecutionStages executionStages) Parameters Type Name Description System.Guid guid BehaviorExecutionStages executionStages Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.TriggerEventBehavior.EntityData>.GetActivatingProcess() GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.TriggerEventBehavior.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Pro.Behaviors.TriggerGenericEventBehavior-1.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.TriggerGenericEventBehavior-1.EntityData.html",
    "title": "Class TriggerGenericEventBehavior<T>.EntityData | VR Builder Documentation",
    "keywords": "Class TriggerGenericEventBehavior<T>.EntityData Inheritance System.Object TriggerGenericEventBehavior<T>.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [DisplayName(\"Trigger Event (Group)\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties Argument Declaration public ProcessVariableSelectableValue<T> Argument { get; set; } Property Value Type Description ProcessVariableSelectableValue <T> ExecutionStages Declaration [DisplayName(\"Execution stages\")] public BehaviorExecutionStages ExecutionStages { get; set; } Property Value Type Description BehaviorExecutionStages Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String Targets Declaration public MultipleScenePropertyReference<IGenericEventProperty<T>> Targets { get; set; } Property Value Type Description MultipleScenePropertyReference < IGenericEventProperty <T>> Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.TriggerGenericEventBehavior-1.html": {
    "href": "api/VRBuilder.Pro.Behaviors.TriggerGenericEventBehavior-1.html",
    "title": "Class TriggerGenericEventBehavior<T> | VR Builder Documentation",
    "keywords": "Class TriggerGenericEventBehavior<T> Inheritance System.Object Entity < TriggerGenericEventBehavior.EntityData <>> Behavior < TriggerGenericEventBehavior.EntityData <>> TriggerGenericEventBehavior<T> Implements IDataOwner < TriggerGenericEventBehavior.EntityData <>> IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<TriggerGenericEventBehavior<T>.EntityData>.Clone() Behavior<TriggerGenericEventBehavior<T>.EntityData>.IDataOwner<IBehaviorData>.Data Entity<TriggerGenericEventBehavior<T>.EntityData>.GetActiveProcess() Entity<TriggerGenericEventBehavior<T>.EntityData>.GetAbortingProcess() Entity<TriggerGenericEventBehavior<T>.EntityData>.GetConfigurator() Entity<TriggerGenericEventBehavior<T>.EntityData>.Configure(IMode) Entity<TriggerGenericEventBehavior<T>.EntityData>.Update() Entity<TriggerGenericEventBehavior<T>.EntityData>.Data Entity<TriggerGenericEventBehavior<T>.EntityData>.IDataOwner.Data Entity<TriggerGenericEventBehavior<T>.EntityData>.LifeCycle Entity<TriggerGenericEventBehavior<T>.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/states-data-add-on\")] public class TriggerGenericEventBehavior<T> : Behavior<TriggerGenericEventBehavior<T>.EntityData>, IDataOwner<TriggerGenericEventBehavior<T>.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Type Parameters Name Description T Constructors TriggerGenericEventBehavior() Declaration public TriggerGenericEventBehavior() Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.TriggerGenericEventBehavior<T>.EntityData>.GetActivatingProcess() GetDeactivatingProcess() Declaration public override IStageProcess GetDeactivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.TriggerGenericEventBehavior<T>.EntityData>.GetDeactivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Pro.Behaviors.UpdateScoreBehavior.EntityData.html": {
    "href": "api/VRBuilder.Pro.Behaviors.UpdateScoreBehavior.EntityData.html",
    "title": "Class UpdateScoreBehavior.EntityData | VR Builder Documentation",
    "keywords": "Class UpdateScoreBehavior.EntityData Inheritance System.Object UpdateScoreBehavior.EntityData Implements IBehaviorData INamedData IData Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [DisplayName(\"Update Score\")] public class EntityData : Object, IBehaviorData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties FeedbackPosition Declaration [DisplayName(\"Feedback position provider\")] public SingleSceneObjectReference FeedbackPosition { get; set; } Property Value Type Description SingleSceneObjectReference FeedbackProperties Declaration [DisplayName(\"Feedback properties\")] public MultipleScenePropertyReference<IScoreFeedbackProperty> FeedbackProperties { get; set; } Property Value Type Description MultipleScenePropertyReference < IScoreFeedbackProperty > Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String ScoreProperty Declaration [DisplayName(\"Score data property\")] public SingleScenePropertyReference<IDataProperty<float>> ScoreProperty { get; set; } Property Value Type Description SingleScenePropertyReference < IDataProperty < System.Single >> ValueDelta Declaration [DisplayName(\"Score increase\")] public float ValueDelta { get; set; } Property Value Type Description System.Single Implements IBehaviorData INamedData IData"
  },
  "api/VRBuilder.Pro.Behaviors.UpdateScoreBehavior.html": {
    "href": "api/VRBuilder.Pro.Behaviors.UpdateScoreBehavior.html",
    "title": "Class UpdateScoreBehavior | VR Builder Documentation",
    "keywords": "Class UpdateScoreBehavior Inheritance System.Object Entity < UpdateScoreBehavior.EntityData > Behavior < UpdateScoreBehavior.EntityData > UpdateScoreBehavior Implements IDataOwner < UpdateScoreBehavior.EntityData > IBehavior IEntity IDataOwner < IBehaviorData > IDataOwner IClonable < IBehavior > Inherited Members Behavior<UpdateScoreBehavior.EntityData>.Clone() Behavior<UpdateScoreBehavior.EntityData>.IDataOwner<IBehaviorData>.Data Entity<UpdateScoreBehavior.EntityData>.GetActiveProcess() Entity<UpdateScoreBehavior.EntityData>.GetDeactivatingProcess() Entity<UpdateScoreBehavior.EntityData>.GetAbortingProcess() Entity<UpdateScoreBehavior.EntityData>.GetConfigurator() Entity<UpdateScoreBehavior.EntityData>.Configure(IMode) Entity<UpdateScoreBehavior.EntityData>.Update() Entity<UpdateScoreBehavior.EntityData>.Data Entity<UpdateScoreBehavior.EntityData>.IDataOwner.Data Entity<UpdateScoreBehavior.EntityData>.LifeCycle Entity<UpdateScoreBehavior.EntityData>.Parent Namespace : VRBuilder.Pro.Behaviors Assembly : VRBuilder.Pro.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/track-measure-add-on\")] public class UpdateScoreBehavior : Behavior<UpdateScoreBehavior.EntityData>, IDataOwner<UpdateScoreBehavior.EntityData>, IBehavior, IEntity, IDataOwner<IBehaviorData>, IDataOwner, IClonable<IBehavior> Constructors UpdateScoreBehavior() Declaration public UpdateScoreBehavior() UpdateScoreBehavior(Guid, Guid, Single, Guid) Declaration public UpdateScoreBehavior(Guid feedbackPropertyGuid, Guid dataPropertyGuid, float pointDelta, Guid positionProviderGuid) Parameters Type Name Description System.Guid feedbackPropertyGuid System.Guid dataPropertyGuid System.Single pointDelta System.Guid positionProviderGuid UpdateScoreBehavior(IScoreFeedbackProperty, IDataProperty<Single>, Single, ISceneObject) Declaration public UpdateScoreBehavior(IScoreFeedbackProperty feedbackProperty, IDataProperty<float> dataProperty, float pointDelta, ISceneObject positionProvider) Parameters Type Name Description IScoreFeedbackProperty feedbackProperty IDataProperty < System.Single > dataProperty System.Single pointDelta ISceneObject positionProvider Methods GetActivatingProcess() Declaration public override IStageProcess GetActivatingProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Behaviors.UpdateScoreBehavior.EntityData>.GetActivatingProcess() Implements IDataOwner<TData> IBehavior IEntity IDataOwner<TData> IDataOwner IClonable<T>"
  },
  "api/VRBuilder.Pro.Components.DataPropertyUI.BooleanDisplay.html": {
    "href": "api/VRBuilder.Pro.Components.DataPropertyUI.BooleanDisplay.html",
    "title": "Class BooleanDisplay | VR Builder Documentation",
    "keywords": "Class BooleanDisplay Inheritance System.Object DataPropertyDisplay < System.Boolean > BooleanDisplay Inherited Members DataPropertyDisplay<Boolean>.text DataPropertyDisplay<Boolean>.textMesh DataPropertyDisplay<Boolean>.OnEnable() DataPropertyDisplay<Boolean>.OnDisable() Namespace : VRBuilder.Pro.Components.DataPropertyUI Assembly : VRBuilder.Pro.dll Syntax public class BooleanDisplay : DataPropertyDisplay<bool> Constructors BooleanDisplay() Declaration public BooleanDisplay() Properties DataProperty Declaration public override IDataProperty<bool> DataProperty { get; } Property Value Type Description IDataProperty < System.Boolean > Overrides VRBuilder.Pro.Components.DataPropertyUI.DataPropertyDisplay<System.Boolean>.DataProperty Methods UpdateText() Declaration protected override void UpdateText() Overrides VRBuilder.Pro.Components.DataPropertyUI.DataPropertyDisplay<System.Boolean>.UpdateText()"
  },
  "api/VRBuilder.Pro.Components.DataPropertyUI.DataPropertyDisplay-1.html": {
    "href": "api/VRBuilder.Pro.Components.DataPropertyUI.DataPropertyDisplay-1.html",
    "title": "Class DataPropertyDisplay<T> | VR Builder Documentation",
    "keywords": "Class DataPropertyDisplay<T> Inheritance System.Object DataPropertyDisplay<T> BooleanDisplay NumberDisplay TextDisplay TimeDisplay Namespace : VRBuilder.Pro.Components.DataPropertyUI Assembly : VRBuilder.Pro.dll Syntax public abstract class DataPropertyDisplay<T> : MonoBehaviour Type Parameters Name Description T Constructors DataPropertyDisplay() Declaration protected DataPropertyDisplay() Fields text Declaration protected string text Field Value Type Description System.String textMesh Declaration protected TextMeshPro textMesh Field Value Type Description TMPro.TextMeshPro Properties DataProperty Declaration public abstract IDataProperty<T> DataProperty { get; } Property Value Type Description IDataProperty <T> Methods OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected virtual void OnEnable() UpdateText() Declaration protected virtual void UpdateText()"
  },
  "api/VRBuilder.Pro.Components.DataPropertyUI.html": {
    "href": "api/VRBuilder.Pro.Components.DataPropertyUI.html",
    "title": "Namespace VRBuilder.Pro.Components.DataPropertyUI | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Pro.Components.DataPropertyUI Classes BooleanDisplay DataPropertyDisplay<T> NumberDisplay TextDisplay TimeDisplay"
  },
  "api/VRBuilder.Pro.Components.DataPropertyUI.NumberDisplay.html": {
    "href": "api/VRBuilder.Pro.Components.DataPropertyUI.NumberDisplay.html",
    "title": "Class NumberDisplay | VR Builder Documentation",
    "keywords": "Class NumberDisplay Inheritance System.Object DataPropertyDisplay < System.Single > NumberDisplay Inherited Members DataPropertyDisplay<Single>.text DataPropertyDisplay<Single>.textMesh DataPropertyDisplay<Single>.UpdateText() DataPropertyDisplay<Single>.OnEnable() DataPropertyDisplay<Single>.OnDisable() Namespace : VRBuilder.Pro.Components.DataPropertyUI Assembly : VRBuilder.Pro.dll Syntax public class NumberDisplay : DataPropertyDisplay<float> Constructors NumberDisplay() Declaration public NumberDisplay() Properties DataProperty Declaration public override IDataProperty<float> DataProperty { get; } Property Value Type Description IDataProperty < System.Single > Overrides VRBuilder.Pro.Components.DataPropertyUI.DataPropertyDisplay<System.Single>.DataProperty"
  },
  "api/VRBuilder.Pro.Components.DataPropertyUI.TextDisplay.html": {
    "href": "api/VRBuilder.Pro.Components.DataPropertyUI.TextDisplay.html",
    "title": "Class TextDisplay | VR Builder Documentation",
    "keywords": "Class TextDisplay Inheritance System.Object DataPropertyDisplay < System.String > TextDisplay Inherited Members DataPropertyDisplay<String>.text DataPropertyDisplay<String>.textMesh DataPropertyDisplay<String>.UpdateText() DataPropertyDisplay<String>.OnEnable() DataPropertyDisplay<String>.OnDisable() Namespace : VRBuilder.Pro.Components.DataPropertyUI Assembly : VRBuilder.Pro.dll Syntax public class TextDisplay : DataPropertyDisplay<string> Constructors TextDisplay() Declaration public TextDisplay() Properties DataProperty Declaration public override IDataProperty<string> DataProperty { get; } Property Value Type Description IDataProperty < System.String > Overrides VRBuilder.Pro.Components.DataPropertyUI.DataPropertyDisplay<System.String>.DataProperty"
  },
  "api/VRBuilder.Pro.Components.DataPropertyUI.TimeDisplay.html": {
    "href": "api/VRBuilder.Pro.Components.DataPropertyUI.TimeDisplay.html",
    "title": "Class TimeDisplay | VR Builder Documentation",
    "keywords": "Class TimeDisplay Inheritance System.Object DataPropertyDisplay < System.Single > TimeDisplay Inherited Members DataPropertyDisplay<Single>.text DataPropertyDisplay<Single>.textMesh DataPropertyDisplay<Single>.OnEnable() DataPropertyDisplay<Single>.OnDisable() Namespace : VRBuilder.Pro.Components.DataPropertyUI Assembly : VRBuilder.Pro.dll Syntax public class TimeDisplay : DataPropertyDisplay<float> Constructors TimeDisplay() Declaration public TimeDisplay() Properties DataProperty Declaration public override IDataProperty<float> DataProperty { get; } Property Value Type Description IDataProperty < System.Single > Overrides VRBuilder.Pro.Components.DataPropertyUI.DataPropertyDisplay<System.Single>.DataProperty Methods UpdateText() Declaration protected override void UpdateText() Overrides VRBuilder.Pro.Components.DataPropertyUI.DataPropertyDisplay<System.Single>.UpdateText()"
  },
  "api/VRBuilder.Pro.Components.ScoreFeedback.AudioScoreFeedback.html": {
    "href": "api/VRBuilder.Pro.Components.ScoreFeedback.AudioScoreFeedback.html",
    "title": "Class AudioScoreFeedback | VR Builder Documentation",
    "keywords": "Class AudioScoreFeedback Inheritance System.Object AudioScoreFeedback Implements IScoreFeedbackProvider Namespace : VRBuilder.Pro.Components.ScoreFeedback Assembly : VRBuilder.Pro.dll Syntax public class AudioScoreFeedback : MonoBehaviour, IScoreFeedbackProvider Constructors AudioScoreFeedback() Declaration public AudioScoreFeedback() Methods TriggerFeedback(Single, Single, Transform) Declaration public void TriggerFeedback(float scoreDelta, float finalScore, Transform positionProvider) Parameters Type Name Description System.Single scoreDelta System.Single finalScore UnityEngine.Transform positionProvider Implements IScoreFeedbackProvider"
  },
  "api/VRBuilder.Pro.Components.ScoreFeedback.FloatingTextMesh.html": {
    "href": "api/VRBuilder.Pro.Components.ScoreFeedback.FloatingTextMesh.html",
    "title": "Class FloatingTextMesh | VR Builder Documentation",
    "keywords": "Class FloatingTextMesh Inheritance System.Object FloatingTextMesh Namespace : VRBuilder.Pro.Components.ScoreFeedback Assembly : VRBuilder.Pro.dll Syntax public class FloatingTextMesh : MonoBehaviour Constructors FloatingTextMesh() Declaration public FloatingTextMesh() Methods Initialize(String) Declaration public void Initialize(string text) Parameters Type Name Description System.String text"
  },
  "api/VRBuilder.Pro.Components.ScoreFeedback.FloatingTextScoreFeedback.html": {
    "href": "api/VRBuilder.Pro.Components.ScoreFeedback.FloatingTextScoreFeedback.html",
    "title": "Class FloatingTextScoreFeedback | VR Builder Documentation",
    "keywords": "Class FloatingTextScoreFeedback Inheritance System.Object FloatingTextScoreFeedback Implements IScoreFeedbackProvider Namespace : VRBuilder.Pro.Components.ScoreFeedback Assembly : VRBuilder.Pro.dll Syntax public class FloatingTextScoreFeedback : MonoBehaviour, IScoreFeedbackProvider Constructors FloatingTextScoreFeedback() Declaration public FloatingTextScoreFeedback() Fields textMeshPrefab Declaration protected FloatingTextMesh textMeshPrefab Field Value Type Description FloatingTextMesh Methods TriggerFeedback(Single, Single, Transform) Declaration public void TriggerFeedback(float scoreDelta, float finalScore, Transform positionProvider) Parameters Type Name Description System.Single scoreDelta System.Single finalScore UnityEngine.Transform positionProvider Implements IScoreFeedbackProvider"
  },
  "api/VRBuilder.Pro.Components.ScoreFeedback.html": {
    "href": "api/VRBuilder.Pro.Components.ScoreFeedback.html",
    "title": "Namespace VRBuilder.Pro.Components.ScoreFeedback | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Pro.Components.ScoreFeedback Classes AudioScoreFeedback FloatingTextMesh FloatingTextScoreFeedback Interfaces IScoreFeedbackProvider"
  },
  "api/VRBuilder.Pro.Components.ScoreFeedback.IScoreFeedbackProvider.html": {
    "href": "api/VRBuilder.Pro.Components.ScoreFeedback.IScoreFeedbackProvider.html",
    "title": "Interface IScoreFeedbackProvider | VR Builder Documentation",
    "keywords": "Interface IScoreFeedbackProvider Namespace : VRBuilder.Pro.Components.ScoreFeedback Assembly : VRBuilder.Pro.dll Syntax public interface IScoreFeedbackProvider Methods TriggerFeedback(Single, Single, Transform) Declaration void TriggerFeedback(float scoreDelta, float finalScore, Transform positionProvider) Parameters Type Name Description System.Single scoreDelta System.Single finalScore UnityEngine.Transform positionProvider"
  },
  "api/VRBuilder.Pro.Conditions.CheckStateCondition.EntityData.html": {
    "href": "api/VRBuilder.Pro.Conditions.CheckStateCondition.EntityData.html",
    "title": "Class CheckStateCondition.EntityData | VR Builder Documentation",
    "keywords": "Class CheckStateCondition.EntityData Inheritance System.Object CheckStateCondition.EntityData Implements IConditionData ICompletableData INamedData IData Namespace : VRBuilder.Pro.Conditions Assembly : VRBuilder.Pro.dll Syntax [DisplayName(\"Check State\")] public class EntityData : Object, IConditionData, ICompletableData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties CompareValue Declaration [HideInProcessInspector] public int CompareValue { get; set; } Property Value Type Description System.Int32 IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration public string Name { get; } Property Value Type Description System.String Operation Declaration [HideInProcessInspector] public IOperationCommand<int, bool> Operation { get; set; } Property Value Type Description IOperationCommand < System.Int32 , System.Boolean > StateDataProperty Declaration [HideInProcessInspector] public SingleScenePropertyReference<StateDataPropertyBase> StateDataProperty { get; set; } Property Value Type Description SingleScenePropertyReference < StateDataPropertyBase > Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.Pro.Conditions.CheckStateCondition.html": {
    "href": "api/VRBuilder.Pro.Conditions.CheckStateCondition.html",
    "title": "Class CheckStateCondition | VR Builder Documentation",
    "keywords": "Class CheckStateCondition Inheritance System.Object Entity < CheckStateCondition.EntityData > CompletableEntity < CheckStateCondition.EntityData > Condition < CheckStateCondition.EntityData > CheckStateCondition Implements IDataOwner < CheckStateCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<CheckStateCondition.EntityData>.Clone() Condition<CheckStateCondition.EntityData>.GetLockableProperties() Condition<CheckStateCondition.EntityData>.IDataOwner<IConditionData>.Data CompletableEntity<CheckStateCondition.EntityData>.GetAutocompleter() CompletableEntity<CheckStateCondition.EntityData>.Autocomplete() CompletableEntity<CheckStateCondition.EntityData>.IsCompleted Entity<CheckStateCondition.EntityData>.GetActivatingProcess() Entity<CheckStateCondition.EntityData>.GetDeactivatingProcess() Entity<CheckStateCondition.EntityData>.GetAbortingProcess() Entity<CheckStateCondition.EntityData>.GetConfigurator() Entity<CheckStateCondition.EntityData>.Configure(IMode) Entity<CheckStateCondition.EntityData>.Update() Entity<CheckStateCondition.EntityData>.Data Entity<CheckStateCondition.EntityData>.IDataOwner.Data Entity<CheckStateCondition.EntityData>.LifeCycle Entity<CheckStateCondition.EntityData>.Parent Namespace : VRBuilder.Pro.Conditions Assembly : VRBuilder.Pro.dll Syntax [HelpLink(\"https://www.mindport.co/vr-builder-tutorials/states-data-add-on\")] public class CheckStateCondition : Condition<CheckStateCondition.EntityData>, IDataOwner<CheckStateCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors CheckStateCondition() Declaration public CheckStateCondition() CheckStateCondition(Guid, Int32, IOperationCommand<Int32, Boolean>) Declaration public CheckStateCondition(Guid dataProperty, int compareValue, IOperationCommand<int, bool> operation) Parameters Type Name Description System.Guid dataProperty System.Int32 compareValue IOperationCommand < System.Int32 , System.Boolean > operation CheckStateCondition(StateDataPropertyBase, Int32, IOperationCommand<Int32, Boolean>) Declaration public CheckStateCondition(StateDataPropertyBase dataProperty, int compareValue, IOperationCommand<int, bool> operation) Parameters Type Name Description StateDataPropertyBase dataProperty System.Int32 compareValue IOperationCommand < System.Int32 , System.Boolean > operation Methods GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Conditions.CheckStateCondition.EntityData>.GetActiveProcess() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.Pro.Conditions.html": {
    "href": "api/VRBuilder.Pro.Conditions.html",
    "title": "Namespace VRBuilder.Pro.Conditions | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Pro.Conditions Classes CheckStateCondition CheckStateCondition.EntityData RandomlySelectedCondition RandomlySelectedCondition.EntityData"
  },
  "api/VRBuilder.Pro.Conditions.RandomlySelectedCondition.EntityData.html": {
    "href": "api/VRBuilder.Pro.Conditions.RandomlySelectedCondition.EntityData.html",
    "title": "Class RandomlySelectedCondition.EntityData | VR Builder Documentation",
    "keywords": "Class RandomlySelectedCondition.EntityData Inheritance System.Object RandomlySelectedCondition.EntityData Implements IConditionData ICompletableData INamedData IData Namespace : VRBuilder.Pro.Conditions Assembly : VRBuilder.Pro.dll Syntax [DisplayName(\"Randomly Selected\")] public class EntityData : Object, IConditionData, ICompletableData, INamedData, IData Constructors EntityData() Declaration public EntityData() Properties IsCompleted Declaration public bool IsCompleted { get; set; } Property Value Type Description System.Boolean Metadata Declaration public Metadata Metadata { get; set; } Property Value Type Description Metadata Name Declaration [HideInProcessInspector] public string Name { get; } Property Value Type Description System.String Weight Declaration public float Weight { get; set; } Property Value Type Description System.Single Implements IConditionData ICompletableData INamedData IData"
  },
  "api/VRBuilder.Pro.Conditions.RandomlySelectedCondition.html": {
    "href": "api/VRBuilder.Pro.Conditions.RandomlySelectedCondition.html",
    "title": "Class RandomlySelectedCondition | VR Builder Documentation",
    "keywords": "Class RandomlySelectedCondition Inheritance System.Object Entity < RandomlySelectedCondition.EntityData > CompletableEntity < RandomlySelectedCondition.EntityData > Condition < RandomlySelectedCondition.EntityData > RandomlySelectedCondition Implements IDataOwner < RandomlySelectedCondition.EntityData > ICondition ICompletableEntity ICompletable IEntity IDataOwner < IConditionData > IDataOwner IClonable < ICondition > ILockablePropertiesProvider Inherited Members Condition<RandomlySelectedCondition.EntityData>.Clone() Condition<RandomlySelectedCondition.EntityData>.GetLockableProperties() Condition<RandomlySelectedCondition.EntityData>.IDataOwner<IConditionData>.Data CompletableEntity<RandomlySelectedCondition.EntityData>.GetAutocompleter() CompletableEntity<RandomlySelectedCondition.EntityData>.Autocomplete() CompletableEntity<RandomlySelectedCondition.EntityData>.IsCompleted Entity<RandomlySelectedCondition.EntityData>.GetActivatingProcess() Entity<RandomlySelectedCondition.EntityData>.GetDeactivatingProcess() Entity<RandomlySelectedCondition.EntityData>.GetAbortingProcess() Entity<RandomlySelectedCondition.EntityData>.GetConfigurator() Entity<RandomlySelectedCondition.EntityData>.Configure(IMode) Entity<RandomlySelectedCondition.EntityData>.Update() Entity<RandomlySelectedCondition.EntityData>.Data Entity<RandomlySelectedCondition.EntityData>.IDataOwner.Data Entity<RandomlySelectedCondition.EntityData>.LifeCycle Entity<RandomlySelectedCondition.EntityData>.Parent Namespace : VRBuilder.Pro.Conditions Assembly : VRBuilder.Pro.dll Syntax public class RandomlySelectedCondition : Condition<RandomlySelectedCondition.EntityData>, IDataOwner<RandomlySelectedCondition.EntityData>, ICondition, ICompletableEntity, ICompletable, IEntity, IDataOwner<IConditionData>, IDataOwner, IClonable<ICondition>, ILockablePropertiesProvider Constructors RandomlySelectedCondition(Single) Declaration public RandomlySelectedCondition(float weight = 1F) Parameters Type Name Description System.Single weight Properties IsSetToComplete Declaration public bool IsSetToComplete { get; set; } Property Value Type Description System.Boolean Methods GetActiveProcess() Declaration public override IStageProcess GetActiveProcess() Returns Type Description IStageProcess Overrides VRBuilder.Core.Entity<VRBuilder.Pro.Conditions.RandomlySelectedCondition.EntityData>.GetActiveProcess() Implements IDataOwner<TData> ICondition ICompletableEntity ICompletable IEntity IDataOwner<TData> IDataOwner IClonable<T> ILockablePropertiesProvider"
  },
  "api/VRBuilder.Pro.Editor.Configuration.AnimationsConfigurationExtension.html": {
    "href": "api/VRBuilder.Pro.Editor.Configuration.AnimationsConfigurationExtension.html",
    "title": "Class AnimationsConfigurationExtension | VR Builder Documentation",
    "keywords": "Class AnimationsConfigurationExtension Inheritance System.Object AnimationsConfigurationExtension Implements IEditorConfigurationExtension Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.Configuration Assembly : VRBuilder.Pro.Editor.dll Syntax public class AnimationsConfigurationExtension : IEditorConfigurationExtension Constructors AnimationsConfigurationExtension() Declaration public AnimationsConfigurationExtension() Properties DisabledMenuItems Declaration public IEnumerable<Type> DisabledMenuItems { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Type > RequiredMenuItems Declaration public IEnumerable<Type> RequiredMenuItems { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Type > Implements IEditorConfigurationExtension"
  },
  "api/VRBuilder.Pro.Editor.Configuration.html": {
    "href": "api/VRBuilder.Pro.Editor.Configuration.html",
    "title": "Namespace VRBuilder.Pro.Editor.Configuration | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Pro.Editor.Configuration Classes AnimationsConfigurationExtension"
  },
  "api/VRBuilder.Pro.Editor.UI.Drawers.CheckStateDrawer.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.Drawers.CheckStateDrawer.html",
    "title": "Class CheckStateDrawer | VR Builder Documentation",
    "keywords": "Class CheckStateDrawer Inheritance System.Object AbstractDrawer ObjectDrawer NameableDrawer CheckStateDrawer Implements IProcessDrawer Inherited Members NameableDrawer.DrawLabel(Rect, Object, Action<Object>, GUIContent) ObjectDrawer.CheckValidationForValue(Object, MemberInfo, GUIContent) ObjectDrawer.AddValidationInformation(GUIContent, List<EditorReportEntry>) ObjectDrawer.GetValidationReports(Object) ObjectDrawer.GetValidationReportsFor(IData, MemberInfo) ObjectDrawer.GetLabel(MemberInfo, Object) ObjectDrawer.GetLabel(Object, Type) ObjectDrawer.GetMembersToDraw(Object) ObjectDrawer.GetTypeNameLabel(Object, Type) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.Drawers Assembly : VRBuilder.Pro.Editor.dll Syntax [DefaultProcessDrawer(typeof(CheckStateCondition.EntityData))] public class CheckStateDrawer : NameableDrawer, IProcessDrawer Constructors CheckStateDrawer() Declaration public CheckStateDrawer() Methods Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description UnityEngine.Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback UnityEngine.GUIContent label Returns Type Description UnityEngine.Rect Overrides ObjectDrawer.Draw(Rect, Object, Action<Object>, GUIContent) Implements IProcessDrawer"
  },
  "api/VRBuilder.Pro.Editor.UI.Drawers.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.Drawers.html",
    "title": "Namespace VRBuilder.Pro.Editor.UI.Drawers | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Pro.Editor.UI.Drawers Classes CheckStateDrawer ObjectPointerResourceDrawer SetStateDrawer"
  },
  "api/VRBuilder.Pro.Editor.UI.Drawers.ObjectPointerResourceDrawer.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.Drawers.ObjectPointerResourceDrawer.html",
    "title": "Class ObjectPointerResourceDrawer | VR Builder Documentation",
    "keywords": "Class ObjectPointerResourceDrawer Inheritance System.Object AbstractDrawer ResourcePathDrawer < ObjectPointer > ObjectPointerResourceDrawer Implements IProcessDrawer Inherited Members ResourcePathDrawer<ObjectPointer>.Draw(Rect, Object, Action<Object>, GUIContent) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.GetLabel(MemberInfo, Object) AbstractDrawer.GetLabel(Object, Type) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.Drawers Assembly : VRBuilder.Pro.Editor.dll Syntax public class ObjectPointerResourceDrawer : ResourcePathDrawer<ObjectPointer>, IProcessDrawer Constructors ObjectPointerResourceDrawer() Declaration public ObjectPointerResourceDrawer() Methods ValidateResource(ObjectPointer) Declaration public override void ValidateResource(ObjectPointer resource) Parameters Type Name Description ObjectPointer resource Overrides VRBuilder.Core.Editor.UI.Drawers.ResourcePathDrawer<VRBuilder.Pro.Utils.ObjectPointer>.ValidateResource(VRBuilder.Pro.Utils.ObjectPointer) Implements IProcessDrawer"
  },
  "api/VRBuilder.Pro.Editor.UI.Drawers.SetStateDrawer.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.Drawers.SetStateDrawer.html",
    "title": "Class SetStateDrawer | VR Builder Documentation",
    "keywords": "Class SetStateDrawer Inheritance System.Object AbstractDrawer ObjectDrawer NameableDrawer SetStateDrawer Implements IProcessDrawer Inherited Members NameableDrawer.DrawLabel(Rect, Object, Action<Object>, GUIContent) ObjectDrawer.CheckValidationForValue(Object, MemberInfo, GUIContent) ObjectDrawer.AddValidationInformation(GUIContent, List<EditorReportEntry>) ObjectDrawer.GetValidationReports(Object) ObjectDrawer.GetValidationReportsFor(IData, MemberInfo) ObjectDrawer.GetLabel(MemberInfo, Object) ObjectDrawer.GetLabel(Object, Type) ObjectDrawer.GetMembersToDraw(Object) ObjectDrawer.GetTypeNameLabel(Object, Type) AbstractDrawer.Draw(Rect, Object, Action<Object>, String) AbstractDrawer.ChangeValue(Func<Object>, Func<Object>, Action<Object>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.Drawers Assembly : VRBuilder.Pro.Editor.dll Syntax [DefaultProcessDrawer(typeof(SetStateBehavior.EntityData))] public class SetStateDrawer : NameableDrawer, IProcessDrawer Constructors SetStateDrawer() Declaration public SetStateDrawer() Methods Draw(Rect, Object, Action<Object>, GUIContent) Declaration public override Rect Draw(Rect rect, object currentValue, Action<object> changeValueCallback, GUIContent label) Parameters Type Name Description UnityEngine.Rect rect System.Object currentValue System.Action < System.Object > changeValueCallback UnityEngine.GUIContent label Returns Type Description UnityEngine.Rect Overrides ObjectDrawer.Draw(Rect, Object, Action<Object>, GUIContent) Implements IProcessDrawer"
  },
  "api/VRBuilder.Pro.Editor.UI.GraphView.Instantiators.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.GraphView.Instantiators.html",
    "title": "Namespace VRBuilder.Pro.Editor.UI.GraphView.Instantiators | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Pro.Editor.UI.GraphView.Instantiators Classes RandomBranchNodeInstantiator"
  },
  "api/VRBuilder.Pro.Editor.UI.GraphView.Instantiators.RandomBranchNodeInstantiator.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.GraphView.Instantiators.RandomBranchNodeInstantiator.html",
    "title": "Class RandomBranchNodeInstantiator | VR Builder Documentation",
    "keywords": "Class RandomBranchNodeInstantiator Inheritance System.Object RandomBranchNodeInstantiator Implements IStepNodeInstantiator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.GraphView.Instantiators Assembly : VRBuilder.Pro.Editor.dll Syntax public class RandomBranchNodeInstantiator : IStepNodeInstantiator Constructors RandomBranchNodeInstantiator() Declaration public RandomBranchNodeInstantiator() Properties IsInNodeMenu Declaration public bool IsInNodeMenu { get; } Property Value Type Description System.Boolean Name Declaration public string Name { get; } Property Value Type Description System.String Priority Declaration public int Priority { get; } Property Value Type Description System.Int32 StepType Declaration public string StepType { get; } Property Value Type Description System.String Methods GetContextMenuStatus(IEventHandler, IChapter) Declaration public DropdownMenuAction.Status GetContextMenuStatus(IEventHandler target, IChapter currentChapter) Parameters Type Name Description UnityEngine.UIElements.IEventHandler target IChapter currentChapter Returns Type Description UnityEngine.UIElements.DropdownMenuAction.Status InstantiateNode(IStep) Declaration public ProcessGraphNode InstantiateNode(IStep step) Parameters Type Name Description IStep step Returns Type Description ProcessGraphNode Implements IStepNodeInstantiator"
  },
  "api/VRBuilder.Pro.Editor.UI.GraphView.Nodes.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.GraphView.Nodes.html",
    "title": "Namespace VRBuilder.Pro.Editor.UI.GraphView.Nodes | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Pro.Editor.UI.GraphView.Nodes Classes RandomBranchGraphNode"
  },
  "api/VRBuilder.Pro.Editor.UI.GraphView.Nodes.RandomBranchGraphNode.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.GraphView.Nodes.RandomBranchGraphNode.html",
    "title": "Class RandomBranchGraphNode | VR Builder Documentation",
    "keywords": "Class RandomBranchGraphNode Inheritance System.Object ProcessGraphNode StepGraphNode RandomBranchGraphNode Inherited Members StepGraphNode.step StepGraphNode.Refresh() StepGraphNode.RemovePort(Port) StepGraphNode.RemovePortWithUndo(Port) StepGraphNode.OnSelected() StepGraphNode.SetOutput(Int32, IStep) StepGraphNode.AddToChapter(IChapter) StepGraphNode.RemoveFromChapter(IChapter) StepGraphNode.UpdateOutputPortName(Port, Node) StepGraphNode.Name StepGraphNode.EntryPoint StepGraphNode.Outputs StepGraphNode.Position ProcessGraphNode.deleteIconFileName ProcessGraphNode.editIconFileName ProcessGraphNode.defaultNodeSize ProcessGraphNode.CreatePort(Direction, Port.Capacity) ProcessGraphNode.GetIcon(String) ProcessGraphNode.OpenTextEditor() ProcessGraphNode.OnEditTextFinished(TextField) ProcessGraphNode.IsEntryPoint Namespace : VRBuilder.Pro.Editor.UI.GraphView.Nodes Assembly : VRBuilder.Pro.Editor.dll Syntax public class RandomBranchGraphNode : StepGraphNode Constructors RandomBranchGraphNode(IStep) Declaration public RandomBranchGraphNode(IStep step) Parameters Type Name Description IStep step Methods AddTransitionPort(Boolean, Int32) Declaration public override Port AddTransitionPort(bool isDeletablePort = true, int index = -1) Parameters Type Name Description System.Boolean isDeletablePort System.Int32 index Returns Type Description UnityEditor.Experimental.GraphView.Port Overrides ProcessGraphNode.AddTransitionPort(Boolean, Int32) CreatePortWithUndo() Declaration protected override void CreatePortWithUndo() Overrides StepGraphNode.CreatePortWithUndo()"
  },
  "api/VRBuilder.Pro.Editor.UI.Inspector.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.Inspector.html",
    "title": "Namespace VRBuilder.Pro.Editor.UI.Inspector | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Pro.Editor.UI.Inspector Classes VideoPlayerPropertyEditor"
  },
  "api/VRBuilder.Pro.Editor.UI.Inspector.VideoPlayerPropertyEditor.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.Inspector.VideoPlayerPropertyEditor.html",
    "title": "Class VideoPlayerPropertyEditor | VR Builder Documentation",
    "keywords": "Class VideoPlayerPropertyEditor Inheritance System.Object VideoPlayerPropertyEditor Namespace : VRBuilder.Pro.Editor.UI.Inspector Assembly : VRBuilder.Pro.Editor.dll Syntax public class VideoPlayerPropertyEditor : Editor Constructors VideoPlayerPropertyEditor() Declaration public VideoPlayerPropertyEditor() Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.AnimateTransformMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.AnimateTransformMenuItem.html",
    "title": "Class AnimateTransformMenuItem | VR Builder Documentation",
    "keywords": "Class AnimateTransformMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > AnimateTransformMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class AnimateTransformMenuItem : MenuItem<IBehavior> Constructors AnimateTransformMenuItem() Declaration public AnimateTransformMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.ChildExplosionViewMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.ChildExplosionViewMenuItem.html",
    "title": "Class ChildExplosionViewMenuItem | VR Builder Documentation",
    "keywords": "Class ChildExplosionViewMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > ChildExplosionViewMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class ChildExplosionViewMenuItem : MenuItem<IBehavior> Constructors ChildExplosionViewMenuItem() Declaration public ChildExplosionViewMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.FollowPathMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.FollowPathMenuItem.html",
    "title": "Class FollowPathMenuItem | VR Builder Documentation",
    "keywords": "Class FollowPathMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > FollowPathMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class FollowPathMenuItem : MenuItem<IBehavior> Constructors FollowPathMenuItem() Declaration public FollowPathMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.html",
    "title": "Namespace VRBuilder.Pro.Editor.UI.MenuItems.Behaviors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Classes AnimateTransformMenuItem ChildExplosionViewMenuItem FollowPathMenuItem MathOperationMenuItem OutlineObjectsMenuItem PlayAnimationClipMenuItem PlayVideoBehaviorMenuItem PointAtObjectsMenuItem ResetValueMenuItem RotateAroundAxisMenuItem SetAnimatorBoolMenuItem SetAnimatorFloatMenuItem SetAnimatorIntMenuItem SetAnimatorTriggerMenuItem SetBooleanValueMenuItem SetNumberValueMenuItem SetRandomBooleanMenuItem SetRandomNumberMenuItem SetStateValueMenuItem SetTextValueMenuItem StartTimerMenuItem StopTimerMenuItem TriggerBooleanEventByTagMenuItem TriggerEventMenuItem TriggerFloatEventMenuItem TriggerStringEventMenuItem UpdateScoreMenuItem"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.MathOperationMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.MathOperationMenuItem.html",
    "title": "Class MathOperationMenuItem | VR Builder Documentation",
    "keywords": "Class MathOperationMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > MathOperationMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class MathOperationMenuItem : MenuItem<IBehavior> Constructors MathOperationMenuItem() Declaration public MathOperationMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.OutlineObjectsMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.OutlineObjectsMenuItem.html",
    "title": "Class OutlineObjectsMenuItem | VR Builder Documentation",
    "keywords": "Class OutlineObjectsMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > OutlineObjectsMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class OutlineObjectsMenuItem : MenuItem<IBehavior> Constructors OutlineObjectsMenuItem() Declaration public OutlineObjectsMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.PlayAnimationClipMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.PlayAnimationClipMenuItem.html",
    "title": "Class PlayAnimationClipMenuItem | VR Builder Documentation",
    "keywords": "Class PlayAnimationClipMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > PlayAnimationClipMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class PlayAnimationClipMenuItem : MenuItem<IBehavior> Constructors PlayAnimationClipMenuItem() Declaration public PlayAnimationClipMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.PlayVideoBehaviorMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.PlayVideoBehaviorMenuItem.html",
    "title": "Class PlayVideoBehaviorMenuItem | VR Builder Documentation",
    "keywords": "Class PlayVideoBehaviorMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > PlayVideoBehaviorMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class PlayVideoBehaviorMenuItem : MenuItem<IBehavior> Constructors PlayVideoBehaviorMenuItem() Declaration public PlayVideoBehaviorMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.PointAtObjectsMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.PointAtObjectsMenuItem.html",
    "title": "Class PointAtObjectsMenuItem | VR Builder Documentation",
    "keywords": "Class PointAtObjectsMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > PointAtObjectsMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class PointAtObjectsMenuItem : MenuItem<IBehavior> Constructors PointAtObjectsMenuItem() Declaration public PointAtObjectsMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.ResetValueMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.ResetValueMenuItem.html",
    "title": "Class ResetValueMenuItem | VR Builder Documentation",
    "keywords": "Class ResetValueMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > ResetValueMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class ResetValueMenuItem : MenuItem<IBehavior> Constructors ResetValueMenuItem() Declaration public ResetValueMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.RotateAroundAxisMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.RotateAroundAxisMenuItem.html",
    "title": "Class RotateAroundAxisMenuItem | VR Builder Documentation",
    "keywords": "Class RotateAroundAxisMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > RotateAroundAxisMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class RotateAroundAxisMenuItem : MenuItem<IBehavior> Constructors RotateAroundAxisMenuItem() Declaration public RotateAroundAxisMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.SetAnimatorBoolMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.SetAnimatorBoolMenuItem.html",
    "title": "Class SetAnimatorBoolMenuItem | VR Builder Documentation",
    "keywords": "Class SetAnimatorBoolMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetAnimatorBoolMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class SetAnimatorBoolMenuItem : MenuItem<IBehavior> Constructors SetAnimatorBoolMenuItem() Declaration public SetAnimatorBoolMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.SetAnimatorFloatMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.SetAnimatorFloatMenuItem.html",
    "title": "Class SetAnimatorFloatMenuItem | VR Builder Documentation",
    "keywords": "Class SetAnimatorFloatMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetAnimatorFloatMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class SetAnimatorFloatMenuItem : MenuItem<IBehavior> Constructors SetAnimatorFloatMenuItem() Declaration public SetAnimatorFloatMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.SetAnimatorIntMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.SetAnimatorIntMenuItem.html",
    "title": "Class SetAnimatorIntMenuItem | VR Builder Documentation",
    "keywords": "Class SetAnimatorIntMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetAnimatorIntMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class SetAnimatorIntMenuItem : MenuItem<IBehavior> Constructors SetAnimatorIntMenuItem() Declaration public SetAnimatorIntMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.SetAnimatorTriggerMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.SetAnimatorTriggerMenuItem.html",
    "title": "Class SetAnimatorTriggerMenuItem | VR Builder Documentation",
    "keywords": "Class SetAnimatorTriggerMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetAnimatorTriggerMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class SetAnimatorTriggerMenuItem : MenuItem<IBehavior> Constructors SetAnimatorTriggerMenuItem() Declaration public SetAnimatorTriggerMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.SetBooleanValueMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.SetBooleanValueMenuItem.html",
    "title": "Class SetBooleanValueMenuItem | VR Builder Documentation",
    "keywords": "Class SetBooleanValueMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetBooleanValueMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class SetBooleanValueMenuItem : MenuItem<IBehavior> Constructors SetBooleanValueMenuItem() Declaration public SetBooleanValueMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.SetNumberValueMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.SetNumberValueMenuItem.html",
    "title": "Class SetNumberValueMenuItem | VR Builder Documentation",
    "keywords": "Class SetNumberValueMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetNumberValueMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class SetNumberValueMenuItem : MenuItem<IBehavior> Constructors SetNumberValueMenuItem() Declaration public SetNumberValueMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.SetRandomBooleanMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.SetRandomBooleanMenuItem.html",
    "title": "Class SetRandomBooleanMenuItem | VR Builder Documentation",
    "keywords": "Class SetRandomBooleanMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetRandomBooleanMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class SetRandomBooleanMenuItem : MenuItem<IBehavior> Constructors SetRandomBooleanMenuItem() Declaration public SetRandomBooleanMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.SetRandomNumberMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.SetRandomNumberMenuItem.html",
    "title": "Class SetRandomNumberMenuItem | VR Builder Documentation",
    "keywords": "Class SetRandomNumberMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetRandomNumberMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class SetRandomNumberMenuItem : MenuItem<IBehavior> Constructors SetRandomNumberMenuItem() Declaration public SetRandomNumberMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.SetStateValueMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.SetStateValueMenuItem.html",
    "title": "Class SetStateValueMenuItem | VR Builder Documentation",
    "keywords": "Class SetStateValueMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetStateValueMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class SetStateValueMenuItem : MenuItem<IBehavior> Constructors SetStateValueMenuItem() Declaration public SetStateValueMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.SetTextValueMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.SetTextValueMenuItem.html",
    "title": "Class SetTextValueMenuItem | VR Builder Documentation",
    "keywords": "Class SetTextValueMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > SetTextValueMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class SetTextValueMenuItem : MenuItem<IBehavior> Constructors SetTextValueMenuItem() Declaration public SetTextValueMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.StartTimerMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.StartTimerMenuItem.html",
    "title": "Class StartTimerMenuItem | VR Builder Documentation",
    "keywords": "Class StartTimerMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > StartTimerMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class StartTimerMenuItem : MenuItem<IBehavior> Constructors StartTimerMenuItem() Declaration public StartTimerMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.StopTimerMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.StopTimerMenuItem.html",
    "title": "Class StopTimerMenuItem | VR Builder Documentation",
    "keywords": "Class StopTimerMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > StopTimerMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class StopTimerMenuItem : MenuItem<IBehavior> Constructors StopTimerMenuItem() Declaration public StopTimerMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.TriggerBooleanEventByTagMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.TriggerBooleanEventByTagMenuItem.html",
    "title": "Class TriggerBooleanEventByTagMenuItem | VR Builder Documentation",
    "keywords": "Class TriggerBooleanEventByTagMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > TriggerBooleanEventByTagMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class TriggerBooleanEventByTagMenuItem : MenuItem<IBehavior> Constructors TriggerBooleanEventByTagMenuItem() Declaration public TriggerBooleanEventByTagMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.TriggerEventMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.TriggerEventMenuItem.html",
    "title": "Class TriggerEventMenuItem | VR Builder Documentation",
    "keywords": "Class TriggerEventMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > TriggerEventMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class TriggerEventMenuItem : MenuItem<IBehavior> Constructors TriggerEventMenuItem() Declaration public TriggerEventMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.TriggerFloatEventMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.TriggerFloatEventMenuItem.html",
    "title": "Class TriggerFloatEventMenuItem | VR Builder Documentation",
    "keywords": "Class TriggerFloatEventMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > TriggerFloatEventMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class TriggerFloatEventMenuItem : MenuItem<IBehavior> Constructors TriggerFloatEventMenuItem() Declaration public TriggerFloatEventMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.TriggerStringEventMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.TriggerStringEventMenuItem.html",
    "title": "Class TriggerStringEventMenuItem | VR Builder Documentation",
    "keywords": "Class TriggerStringEventMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > TriggerStringEventMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class TriggerStringEventMenuItem : MenuItem<IBehavior> Constructors TriggerStringEventMenuItem() Declaration public TriggerStringEventMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.UpdateScoreMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Behaviors.UpdateScoreMenuItem.html",
    "title": "Class UpdateScoreMenuItem | VR Builder Documentation",
    "keywords": "Class UpdateScoreMenuItem Inheritance System.Object MenuOption < IBehavior > MenuItem < IBehavior > UpdateScoreMenuItem Inherited Members MenuItem<IBehavior>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Behaviors Assembly : VRBuilder.Pro.Editor.dll Syntax public class UpdateScoreMenuItem : MenuItem<IBehavior> Constructors UpdateScoreMenuItem() Declaration public UpdateScoreMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.DisplayedName Methods GetNewItem() Declaration public override IBehavior GetNewItem() Returns Type Description IBehavior Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Behaviors.IBehavior>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Conditions.CheckStateMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Conditions.CheckStateMenuItem.html",
    "title": "Class CheckStateMenuItem | VR Builder Documentation",
    "keywords": "Class CheckStateMenuItem Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > CheckStateMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Conditions Assembly : VRBuilder.Pro.Editor.dll Syntax public class CheckStateMenuItem : MenuItem<ICondition> Constructors CheckStateMenuItem() Declaration public CheckStateMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods GetNewItem() Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Conditions.CompareBooleansMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Conditions.CompareBooleansMenuItem.html",
    "title": "Class CompareBooleansMenuItem | VR Builder Documentation",
    "keywords": "Class CompareBooleansMenuItem Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > CompareBooleansMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Conditions Assembly : VRBuilder.Pro.Editor.dll Syntax public class CompareBooleansMenuItem : MenuItem<ICondition> Constructors CompareBooleansMenuItem() Declaration public CompareBooleansMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods GetNewItem() Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Conditions.CompareNumbersMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Conditions.CompareNumbersMenuItem.html",
    "title": "Class CompareNumbersMenuItem | VR Builder Documentation",
    "keywords": "Class CompareNumbersMenuItem Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > CompareNumbersMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Conditions Assembly : VRBuilder.Pro.Editor.dll Syntax public class CompareNumbersMenuItem : MenuItem<ICondition> Constructors CompareNumbersMenuItem() Declaration public CompareNumbersMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods GetNewItem() Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Conditions.CompareTextMenuItem.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Conditions.CompareTextMenuItem.html",
    "title": "Class CompareTextMenuItem | VR Builder Documentation",
    "keywords": "Class CompareTextMenuItem Inheritance System.Object MenuOption < ICondition > MenuItem < ICondition > CompareTextMenuItem Inherited Members MenuItem<ICondition>.GetItemType() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.MenuItems.Conditions Assembly : VRBuilder.Pro.Editor.dll Syntax public class CompareTextMenuItem : MenuItem<ICondition> Constructors CompareTextMenuItem() Declaration public CompareTextMenuItem() Properties DisplayedName Declaration public override string DisplayedName { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.DisplayedName Methods GetNewItem() Declaration public override ICondition GetNewItem() Returns Type Description ICondition Overrides VRBuilder.Core.Editor.UI.StepInspector.Menu.MenuItem<VRBuilder.Core.Conditions.ICondition>.GetNewItem()"
  },
  "api/VRBuilder.Pro.Editor.UI.MenuItems.Conditions.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.MenuItems.Conditions.html",
    "title": "Namespace VRBuilder.Pro.Editor.UI.MenuItems.Conditions | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Pro.Editor.UI.MenuItems.Conditions Classes CheckStateMenuItem CompareBooleansMenuItem CompareNumbersMenuItem CompareTextMenuItem"
  },
  "api/VRBuilder.Pro.Editor.UI.Settings.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.Settings.html",
    "title": "Namespace VRBuilder.Pro.Editor.UI.Settings | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Pro.Editor.UI.Settings Classes OutlineSettingsSection"
  },
  "api/VRBuilder.Pro.Editor.UI.Settings.OutlineSettingsSection.html": {
    "href": "api/VRBuilder.Pro.Editor.UI.Settings.OutlineSettingsSection.html",
    "title": "Class OutlineSettingsSection | VR Builder Documentation",
    "keywords": "Class OutlineSettingsSection Inheritance System.Object ComponentSettingsSection < OutlineRenderer , OutlineSettings > OutlineSettingsSection Implements IProjectSettingsSection Inherited Members ComponentSettingsSection<OutlineRenderer, OutlineSettings>.OnGUI(String) ComponentSettingsSection<OutlineRenderer, OutlineSettings>.Title ComponentSettingsSection<OutlineRenderer, OutlineSettings>.Description ComponentSettingsSection<OutlineRenderer, OutlineSettings>.TargetPageProvider ComponentSettingsSection<OutlineRenderer, OutlineSettings>.Priority System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.Pro.Editor.UI.Settings Assembly : VRBuilder.Pro.Editor.dll Syntax public class OutlineSettingsSection : ComponentSettingsSection<OutlineRenderer, OutlineSettings>, IProjectSettingsSection Constructors OutlineSettingsSection() Declaration public OutlineSettingsSection() Properties Description Declaration public override string Description { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.ProjectSettings.ComponentSettingsSection<VRBuilder.Pro.Utils.QuickOutline.OutlineRenderer, VRBuilder.Pro.Settings.OutlineSettings>.Description Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides VRBuilder.Core.Editor.UI.ProjectSettings.ComponentSettingsSection<VRBuilder.Pro.Utils.QuickOutline.OutlineRenderer, VRBuilder.Pro.Settings.OutlineSettings>.Priority Title Declaration public override string Title { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.ProjectSettings.ComponentSettingsSection<VRBuilder.Pro.Utils.QuickOutline.OutlineRenderer, VRBuilder.Pro.Settings.OutlineSettings>.Title Implements IProjectSettingsSection"
  },
  "api/VRBuilder.Pro.EntityPostProcessing.html": {
    "href": "api/VRBuilder.Pro.EntityPostProcessing.html",
    "title": "Namespace VRBuilder.Pro.EntityPostProcessing | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Pro.EntityPostProcessing Classes RandomBranchPostProcessing"
  },
  "api/VRBuilder.Pro.EntityPostProcessing.RandomBranchPostProcessing.html": {
    "href": "api/VRBuilder.Pro.EntityPostProcessing.RandomBranchPostProcessing.html",
    "title": "Class RandomBranchPostProcessing | VR Builder Documentation",
    "keywords": "Class RandomBranchPostProcessing Inheritance System.Object EntityPostProcessing < IStep > RandomBranchPostProcessing Namespace : VRBuilder.Pro.EntityPostProcessing Assembly : VRBuilder.Pro.dll Syntax public class RandomBranchPostProcessing : EntityPostProcessing<IStep> Constructors RandomBranchPostProcessing() Declaration public RandomBranchPostProcessing() Methods Execute(IStep) Declaration public override void Execute(IStep entity) Parameters Type Name Description IStep entity Overrides VRBuilder.Core.Entities.Factories.EntityPostProcessing<VRBuilder.Core.IStep>.Execute(VRBuilder.Core.IStep)"
  },
  "api/VRBuilder.Pro.ProcessMenu.BaseProcessControllerMenu.html": {
    "href": "api/VRBuilder.Pro.ProcessMenu.BaseProcessControllerMenu.html",
    "title": "Class BaseProcessControllerMenu | VR Builder Documentation",
    "keywords": "Class BaseProcessControllerMenu Inheritance System.Object BaseProcessControllerMenu DesktopProcessMenu StandaloneProcessMenu Namespace : VRBuilder.Pro.ProcessMenu Assembly : VRBuilder.Pro.dll Syntax public abstract class BaseProcessControllerMenu : MonoBehaviour Constructors BaseProcessControllerMenu() Declaration protected BaseProcessControllerMenu()"
  },
  "api/VRBuilder.Pro.ProcessMenu.DesktopProcessMenu.html": {
    "href": "api/VRBuilder.Pro.ProcessMenu.DesktopProcessMenu.html",
    "title": "Class DesktopProcessMenu | VR Builder Documentation",
    "keywords": "Class DesktopProcessMenu Inheritance System.Object BaseProcessControllerMenu DesktopProcessMenu Namespace : VRBuilder.Pro.ProcessMenu Assembly : VRBuilder.Pro.dll Syntax public class DesktopProcessMenu : BaseProcessControllerMenu Constructors DesktopProcessMenu() Declaration public DesktopProcessMenu() Fields selectedLanguage Declaration protected string selectedLanguage Field Value Type Description System.String Methods Awake() Declaration protected virtual void Awake() OnDisable() Declaration protected virtual void OnDisable() OnProcessFinished(Object, ProcessEventArgs) Declaration protected virtual void OnProcessFinished(object sender, ProcessEventArgs eventArgs) Parameters Type Name Description System.Object sender ProcessEventArgs eventArgs OnProcessStarted(Object, ProcessEventArgs) Declaration protected virtual void OnProcessStarted(object sender, ProcessEventArgs eventArgs) Parameters Type Name Description System.Object sender ProcessEventArgs eventArgs SetupMenu(Object, ProcessEventArgs) Declaration protected virtual void SetupMenu(object sender, ProcessEventArgs e) Parameters Type Name Description System.Object sender ProcessEventArgs e SubscribeToControllerEvents() Declaration protected virtual void SubscribeToControllerEvents() SubscribeToProcessEvents() Declaration protected virtual void SubscribeToProcessEvents() UnsubscribeFromControllerEvents() Declaration protected virtual void UnsubscribeFromControllerEvents() UnsubscribeFromProcessEvents() Declaration protected virtual void UnsubscribeFromProcessEvents() Update() Declaration protected virtual void Update()"
  },
  "api/VRBuilder.Pro.ProcessMenu.html": {
    "href": "api/VRBuilder.Pro.ProcessMenu.html",
    "title": "Namespace VRBuilder.Pro.ProcessMenu | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Pro.ProcessMenu Classes BaseProcessControllerMenu DesktopProcessMenu StandaloneMenuHandler StandaloneProcessMenu"
  },
  "api/VRBuilder.Pro.ProcessMenu.StandaloneMenuHandler.html": {
    "href": "api/VRBuilder.Pro.ProcessMenu.StandaloneMenuHandler.html",
    "title": "Class StandaloneMenuHandler | VR Builder Documentation",
    "keywords": "Class StandaloneMenuHandler Inheritance System.Object StandaloneMenuHandler Namespace : VRBuilder.Pro.ProcessMenu Assembly : VRBuilder.Pro.dll Syntax public class StandaloneMenuHandler : MonoBehaviour Constructors StandaloneMenuHandler() Declaration public StandaloneMenuHandler() Fields appearanceDistance Declaration protected float appearanceDistance Field Value Type Description System.Single menuHiddenOnStart Declaration protected bool menuHiddenOnStart Field Value Type Description System.Boolean toggleMenuAction Declaration protected InputAction toggleMenuAction Field Value Type Description UnityEngine.InputSystem.InputAction"
  },
  "api/VRBuilder.Pro.ProcessMenu.StandaloneProcessMenu.html": {
    "href": "api/VRBuilder.Pro.ProcessMenu.StandaloneProcessMenu.html",
    "title": "Class StandaloneProcessMenu | VR Builder Documentation",
    "keywords": "Class StandaloneProcessMenu Inheritance System.Object BaseProcessControllerMenu StandaloneProcessMenu Namespace : VRBuilder.Pro.ProcessMenu Assembly : VRBuilder.Pro.dll Syntax public class StandaloneProcessMenu : BaseProcessControllerMenu Constructors StandaloneProcessMenu() Declaration public StandaloneProcessMenu() Methods OnProcessFinished(Object, ProcessEventArgs) Declaration protected virtual void OnProcessFinished(object sender, ProcessEventArgs eventArgs) Parameters Type Name Description System.Object sender ProcessEventArgs eventArgs OnProcessStarted(Object, ProcessEventArgs) Declaration protected virtual void OnProcessStarted(object sender, ProcessEventArgs eventArgs) Parameters Type Name Description System.Object sender ProcessEventArgs eventArgs SubscribeToProcessEvents() Declaration protected virtual void SubscribeToProcessEvents() UnsubscribeFromProcessEvents() Declaration protected virtual void UnsubscribeFromProcessEvents()"
  },
  "api/VRBuilder.Pro.Properties.AnimationProperty.html": {
    "href": "api/VRBuilder.Pro.Properties.AnimationProperty.html",
    "title": "Class AnimationProperty | VR Builder Documentation",
    "keywords": "Class AnimationProperty Inheritance System.Object ProcessSceneObjectProperty AnimationProperty Implements IAnimationProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public class AnimationProperty : ProcessSceneObjectProperty, IAnimationProperty, ISceneObjectProperty Constructors AnimationProperty() Declaration public AnimationProperty() Properties Animation Declaration public Animation Animation { get; } Property Value Type Description UnityEngine.Animation AnimationEnded Declaration public UnityEvent<AnimationPropertyEventArgs> AnimationEnded { get; } Property Value Type Description UnityEngine.Events.UnityEvent < AnimationPropertyEventArgs > AnimationStarted Declaration public UnityEvent<AnimationPropertyEventArgs> AnimationStarted { get; } Property Value Type Description UnityEngine.Events.UnityEvent < AnimationPropertyEventArgs > HasClip Declaration public bool HasClip { get; } Property Value Type Description System.Boolean IsPlaying Declaration public bool IsPlaying { get; } Property Value Type Description System.Boolean Methods FastForward() Declaration public void FastForward() Play() Declaration public void Play() Reset() Declaration protected override void Reset() Overrides ProcessSceneObjectProperty.Reset() SetAnimationClip(AnimationClip) Declaration public void SetAnimationClip(AnimationClip clip) Parameters Type Name Description UnityEngine.AnimationClip clip Implements IAnimationProperty ISceneObjectProperty"
  },
  "api/VRBuilder.Pro.Properties.AnimationPropertyEventArgs.html": {
    "href": "api/VRBuilder.Pro.Properties.AnimationPropertyEventArgs.html",
    "title": "Class AnimationPropertyEventArgs | VR Builder Documentation",
    "keywords": "Class AnimationPropertyEventArgs Inheritance System.Object AnimationPropertyEventArgs Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public class AnimationPropertyEventArgs : EventArgs Constructors AnimationPropertyEventArgs() Declaration public AnimationPropertyEventArgs()"
  },
  "api/VRBuilder.Pro.Properties.AnimatorProperty.html": {
    "href": "api/VRBuilder.Pro.Properties.AnimatorProperty.html",
    "title": "Class AnimatorProperty | VR Builder Documentation",
    "keywords": "Class AnimatorProperty Inheritance System.Object ProcessSceneObjectProperty AnimatorProperty Implements IAnimatorProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public class AnimatorProperty : ProcessSceneObjectProperty, IAnimatorProperty, ISceneObjectProperty Constructors AnimatorProperty() Declaration public AnimatorProperty() Properties Animator Declaration public Animator Animator { get; } Property Value Type Description UnityEngine.Animator Methods GetBool(String) Declaration public bool GetBool(string parameterName) Parameters Type Name Description System.String parameterName Returns Type Description System.Boolean GetFloat(String) Declaration public float GetFloat(string parameterName) Parameters Type Name Description System.String parameterName Returns Type Description System.Single GetInteger(String) Declaration public int GetInteger(string parameterName) Parameters Type Name Description System.String parameterName Returns Type Description System.Int32 SetBool(String, Boolean) Declaration public void SetBool(string parameterName, bool value) Parameters Type Name Description System.String parameterName System.Boolean value SetFloat(String, Single) Declaration public void SetFloat(string parameterName, float value) Parameters Type Name Description System.String parameterName System.Single value SetInteger(String, Int32) Declaration public void SetInteger(string parameterName, int value) Parameters Type Name Description System.String parameterName System.Int32 value SetTrigger(String) Declaration public void SetTrigger(string parameterName) Parameters Type Name Description System.String parameterName Implements IAnimatorProperty ISceneObjectProperty"
  },
  "api/VRBuilder.Pro.Properties.BooleanEventProperty.html": {
    "href": "api/VRBuilder.Pro.Properties.BooleanEventProperty.html",
    "title": "Class BooleanEventProperty | VR Builder Documentation",
    "keywords": "Class BooleanEventProperty Inheritance System.Object ProcessSceneObjectProperty GenericEventProperty < System.Boolean > BooleanEventProperty Implements IGenericEventProperty < System.Boolean > ISceneObjectProperty Inherited Members GenericEventProperty<Boolean>.TriggerEvent(Boolean) ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public class BooleanEventProperty : GenericEventProperty<bool>, IGenericEventProperty<bool>, ISceneObjectProperty Constructors BooleanEventProperty() Declaration public BooleanEventProperty() Implements IGenericEventProperty<T> ISceneObjectProperty"
  },
  "api/VRBuilder.Pro.Properties.EventProperty.html": {
    "href": "api/VRBuilder.Pro.Properties.EventProperty.html",
    "title": "Class EventProperty | VR Builder Documentation",
    "keywords": "Class EventProperty Inheritance System.Object ProcessSceneObjectProperty EventProperty Implements IEventProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public class EventProperty : ProcessSceneObjectProperty, IEventProperty, ISceneObjectProperty Constructors EventProperty() Declaration public EventProperty() Methods TriggerEvent() Declaration public void TriggerEvent() Implements IEventProperty ISceneObjectProperty"
  },
  "api/VRBuilder.Pro.Properties.ExplodableProperty.html": {
    "href": "api/VRBuilder.Pro.Properties.ExplodableProperty.html",
    "title": "Class ExplodableProperty | VR Builder Documentation",
    "keywords": "Class ExplodableProperty Inheritance System.Object ProcessSceneObjectProperty ExplodableProperty Implements IExplodableProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public class ExplodableProperty : ProcessSceneObjectProperty, IExplodableProperty, ISceneObjectProperty Constructors ExplodableProperty() Declaration public ExplodableProperty() Properties ExplodedObjects Declaration public IEnumerable<Transform> ExplodedObjects { get; } Property Value Type Description System.Collections.Generic.IEnumerable < UnityEngine.Transform > Methods Explode(Single, Single) Declaration public void Explode(float progress, float scale) Parameters Type Name Description System.Single progress System.Single scale InitializeAnimation() Declaration public void InitializeAnimation() Implements IExplodableProperty ISceneObjectProperty"
  },
  "api/VRBuilder.Pro.Properties.GenericEventProperty-1.html": {
    "href": "api/VRBuilder.Pro.Properties.GenericEventProperty-1.html",
    "title": "Class GenericEventProperty<T> | VR Builder Documentation",
    "keywords": "Class GenericEventProperty<T> Inheritance System.Object ProcessSceneObjectProperty GenericEventProperty<T> BooleanEventProperty NumberEventProperty TextEventProperty Implements IGenericEventProperty <T> ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public abstract class GenericEventProperty<T> : ProcessSceneObjectProperty, IGenericEventProperty<T>, ISceneObjectProperty Type Parameters Name Description T Constructors GenericEventProperty() Declaration protected GenericEventProperty() Methods TriggerEvent(T) Declaration public void TriggerEvent(T arg) Parameters Type Name Description T arg Implements IGenericEventProperty<T> ISceneObjectProperty"
  },
  "api/VRBuilder.Pro.Properties.html": {
    "href": "api/VRBuilder.Pro.Properties.html",
    "title": "Namespace VRBuilder.Pro.Properties | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Pro.Properties Classes AnimationProperty AnimationPropertyEventArgs AnimatorProperty BooleanEventProperty EventProperty ExplodableProperty GenericEventProperty<T> NumberEventProperty OutlineProperty OutlinePropertyEventArgs ScoreFeedbackProperty StateDataProperty<T> StateDataPropertyBase TextEventProperty TimerProperty TimerPropertyEventArgs VideoPlayerProperty Interfaces IAnimationProperty IAnimatorProperty IEventProperty IExplodableProperty IGenericEventProperty<T> IOutlineProperty IScoreFeedbackProperty ITimerProperty IVideoPlayerProperty"
  },
  "api/VRBuilder.Pro.Properties.IAnimationProperty.html": {
    "href": "api/VRBuilder.Pro.Properties.IAnimationProperty.html",
    "title": "Interface IAnimationProperty | VR Builder Documentation",
    "keywords": "Interface IAnimationProperty Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public interface IAnimationProperty : ISceneObjectProperty Properties AnimationEnded Declaration UnityEvent<AnimationPropertyEventArgs> AnimationEnded { get; } Property Value Type Description UnityEngine.Events.UnityEvent < AnimationPropertyEventArgs > AnimationStarted Declaration UnityEvent<AnimationPropertyEventArgs> AnimationStarted { get; } Property Value Type Description UnityEngine.Events.UnityEvent < AnimationPropertyEventArgs > HasClip Declaration bool HasClip { get; } Property Value Type Description System.Boolean IsPlaying Declaration bool IsPlaying { get; } Property Value Type Description System.Boolean Methods FastForward() Declaration void FastForward() Play() Declaration void Play() SetAnimationClip(AnimationClip) Declaration void SetAnimationClip(AnimationClip clip) Parameters Type Name Description UnityEngine.AnimationClip clip Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Pro.Properties.IAnimatorProperty.html": {
    "href": "api/VRBuilder.Pro.Properties.IAnimatorProperty.html",
    "title": "Interface IAnimatorProperty | VR Builder Documentation",
    "keywords": "Interface IAnimatorProperty Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public interface IAnimatorProperty : ISceneObjectProperty Properties Animator Declaration Animator Animator { get; } Property Value Type Description UnityEngine.Animator Methods GetBool(String) Declaration bool GetBool(string parameterName) Parameters Type Name Description System.String parameterName Returns Type Description System.Boolean GetFloat(String) Declaration float GetFloat(string parameterName) Parameters Type Name Description System.String parameterName Returns Type Description System.Single GetInteger(String) Declaration int GetInteger(string parameterName) Parameters Type Name Description System.String parameterName Returns Type Description System.Int32 SetBool(String, Boolean) Declaration void SetBool(string parameterName, bool value) Parameters Type Name Description System.String parameterName System.Boolean value SetFloat(String, Single) Declaration void SetFloat(string parameterName, float value) Parameters Type Name Description System.String parameterName System.Single value SetInteger(String, Int32) Declaration void SetInteger(string parameterName, int value) Parameters Type Name Description System.String parameterName System.Int32 value SetTrigger(String) Declaration void SetTrigger(string parameterName) Parameters Type Name Description System.String parameterName Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Pro.Properties.IEventProperty.html": {
    "href": "api/VRBuilder.Pro.Properties.IEventProperty.html",
    "title": "Interface IEventProperty | VR Builder Documentation",
    "keywords": "Interface IEventProperty Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public interface IEventProperty : ISceneObjectProperty Methods TriggerEvent() Declaration void TriggerEvent() Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Pro.Properties.IExplodableProperty.html": {
    "href": "api/VRBuilder.Pro.Properties.IExplodableProperty.html",
    "title": "Interface IExplodableProperty | VR Builder Documentation",
    "keywords": "Interface IExplodableProperty Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public interface IExplodableProperty : ISceneObjectProperty Properties ExplodedObjects Declaration IEnumerable<Transform> ExplodedObjects { get; } Property Value Type Description System.Collections.Generic.IEnumerable < UnityEngine.Transform > Methods Explode(Single, Single) Declaration void Explode(float progress, float scale) Parameters Type Name Description System.Single progress System.Single scale InitializeAnimation() Declaration void InitializeAnimation() Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Pro.Properties.IGenericEventProperty-1.html": {
    "href": "api/VRBuilder.Pro.Properties.IGenericEventProperty-1.html",
    "title": "Interface IGenericEventProperty<T> | VR Builder Documentation",
    "keywords": "Interface IGenericEventProperty<T> Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public interface IGenericEventProperty<T> : ISceneObjectProperty Type Parameters Name Description T Methods TriggerEvent(T) Declaration void TriggerEvent(T arg) Parameters Type Name Description T arg Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Pro.Properties.IOutlineProperty.html": {
    "href": "api/VRBuilder.Pro.Properties.IOutlineProperty.html",
    "title": "Interface IOutlineProperty | VR Builder Documentation",
    "keywords": "Interface IOutlineProperty Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public interface IOutlineProperty : ISceneObjectProperty Properties IsOutlined Declaration bool IsOutlined { get; } Property Value Type Description System.Boolean OutlineEnded Declaration UnityEvent<OutlinePropertyEventArgs> OutlineEnded { get; } Property Value Type Description UnityEngine.Events.UnityEvent < OutlinePropertyEventArgs > OutlineStarted Declaration UnityEvent<OutlinePropertyEventArgs> OutlineStarted { get; } Property Value Type Description UnityEngine.Events.UnityEvent < OutlinePropertyEventArgs > Methods HideOutline() Declaration void HideOutline() ShowOutline(Color) Declaration void ShowOutline(Color outlineColor) Parameters Type Name Description UnityEngine.Color outlineColor Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Pro.Properties.IScoreFeedbackProperty.html": {
    "href": "api/VRBuilder.Pro.Properties.IScoreFeedbackProperty.html",
    "title": "Interface IScoreFeedbackProperty | VR Builder Documentation",
    "keywords": "Interface IScoreFeedbackProperty Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public interface IScoreFeedbackProperty : ISceneObjectProperty Methods TriggerFeedback(Single, Single, Transform) Declaration void TriggerFeedback(float scoreDelta, float finalScore, Transform position) Parameters Type Name Description System.Single scoreDelta System.Single finalScore UnityEngine.Transform position Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Pro.Properties.ITimerProperty.html": {
    "href": "api/VRBuilder.Pro.Properties.ITimerProperty.html",
    "title": "Interface ITimerProperty | VR Builder Documentation",
    "keywords": "Interface ITimerProperty Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public interface ITimerProperty : ISceneObjectProperty Properties IsCountdown Declaration bool IsCountdown { get; set; } Property Value Type Description System.Boolean IsRunning Declaration bool IsRunning { get; } Property Value Type Description System.Boolean TimerStart Declaration UnityEvent<TimerPropertyEventArgs> TimerStart { get; } Property Value Type Description UnityEngine.Events.UnityEvent < TimerPropertyEventArgs > TimerStop Declaration UnityEvent<TimerPropertyEventArgs> TimerStop { get; } Property Value Type Description UnityEngine.Events.UnityEvent < TimerPropertyEventArgs > TimerZero Declaration UnityEvent<TimerPropertyEventArgs> TimerZero { get; } Property Value Type Description UnityEngine.Events.UnityEvent < TimerPropertyEventArgs > Methods StartTimer() Declaration void StartTimer() StopTimer() Declaration void StopTimer() Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Pro.Properties.IVideoPlayerProperty.html": {
    "href": "api/VRBuilder.Pro.Properties.IVideoPlayerProperty.html",
    "title": "Interface IVideoPlayerProperty | VR Builder Documentation",
    "keywords": "Interface IVideoPlayerProperty Inherited Members ISceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public interface IVideoPlayerProperty : ISceneObjectProperty Properties IsPlaying Declaration bool IsPlaying { get; } Property Value Type Description System.Boolean Methods Play() Declaration void Play() SetVideoResourcePath(String) Declaration void SetVideoResourcePath(string path) Parameters Type Name Description System.String path SetVideoURL(String) Declaration void SetVideoURL(string url) Parameters Type Name Description System.String url Stop() Declaration void Stop() Extension Methods SceneObjectExtensions.AddProcessPropertyExtensions(ISceneObjectProperty)"
  },
  "api/VRBuilder.Pro.Properties.NumberEventProperty.html": {
    "href": "api/VRBuilder.Pro.Properties.NumberEventProperty.html",
    "title": "Class NumberEventProperty | VR Builder Documentation",
    "keywords": "Class NumberEventProperty Inheritance System.Object ProcessSceneObjectProperty GenericEventProperty < System.Single > NumberEventProperty Implements IGenericEventProperty < System.Single > ISceneObjectProperty Inherited Members GenericEventProperty<Single>.TriggerEvent(Single) ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public class NumberEventProperty : GenericEventProperty<float>, IGenericEventProperty<float>, ISceneObjectProperty Constructors NumberEventProperty() Declaration public NumberEventProperty() Implements IGenericEventProperty<T> ISceneObjectProperty"
  },
  "api/VRBuilder.Pro.Properties.Operations.DivideOperation.html": {
    "href": "api/VRBuilder.Pro.Properties.Operations.DivideOperation.html",
    "title": "Class DivideOperation | VR Builder Documentation",
    "keywords": "Class DivideOperation Inheritance System.Object DivideOperation Implements IOperationCommand < System.Single , System.Single > System.IFormattable Namespace : VRBuilder.Pro.Properties.Operations Assembly : VRBuilder.Pro.dll Syntax public class DivideOperation : Object, IOperationCommand<float, float> Constructors DivideOperation() Declaration public DivideOperation() Methods Execute(Single, Single) Declaration public float Execute(float leftOperand, float rightOperand) Parameters Type Name Description System.Single leftOperand System.Single rightOperand Returns Type Description System.Single ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Pro.Properties.Operations.html": {
    "href": "api/VRBuilder.Pro.Properties.Operations.html",
    "title": "Namespace VRBuilder.Pro.Properties.Operations | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Pro.Properties.Operations Classes DivideOperation MaxOperation MinOperation MultiplyOperation SubtractOperation SumOperation"
  },
  "api/VRBuilder.Pro.Properties.Operations.MaxOperation.html": {
    "href": "api/VRBuilder.Pro.Properties.Operations.MaxOperation.html",
    "title": "Class MaxOperation | VR Builder Documentation",
    "keywords": "Class MaxOperation Inheritance System.Object MaxOperation Implements IOperationCommand < System.Single , System.Single > System.IFormattable Namespace : VRBuilder.Pro.Properties.Operations Assembly : VRBuilder.Pro.dll Syntax public class MaxOperation : Object, IOperationCommand<float, float> Constructors MaxOperation() Declaration public MaxOperation() Methods Execute(Single, Single) Declaration public float Execute(float leftOperand, float rightOperand) Parameters Type Name Description System.Single leftOperand System.Single rightOperand Returns Type Description System.Single ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Pro.Properties.Operations.MinOperation.html": {
    "href": "api/VRBuilder.Pro.Properties.Operations.MinOperation.html",
    "title": "Class MinOperation | VR Builder Documentation",
    "keywords": "Class MinOperation Inheritance System.Object MinOperation Implements IOperationCommand < System.Single , System.Single > System.IFormattable Namespace : VRBuilder.Pro.Properties.Operations Assembly : VRBuilder.Pro.dll Syntax public class MinOperation : Object, IOperationCommand<float, float> Constructors MinOperation() Declaration public MinOperation() Methods Execute(Single, Single) Declaration public float Execute(float leftOperand, float rightOperand) Parameters Type Name Description System.Single leftOperand System.Single rightOperand Returns Type Description System.Single ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Pro.Properties.Operations.MultiplyOperation.html": {
    "href": "api/VRBuilder.Pro.Properties.Operations.MultiplyOperation.html",
    "title": "Class MultiplyOperation | VR Builder Documentation",
    "keywords": "Class MultiplyOperation Inheritance System.Object MultiplyOperation Implements IOperationCommand < System.Single , System.Single > System.IFormattable Namespace : VRBuilder.Pro.Properties.Operations Assembly : VRBuilder.Pro.dll Syntax public class MultiplyOperation : Object, IOperationCommand<float, float> Constructors MultiplyOperation() Declaration public MultiplyOperation() Methods Execute(Single, Single) Declaration public float Execute(float leftOperand, float rightOperand) Parameters Type Name Description System.Single leftOperand System.Single rightOperand Returns Type Description System.Single ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Pro.Properties.Operations.SubtractOperation.html": {
    "href": "api/VRBuilder.Pro.Properties.Operations.SubtractOperation.html",
    "title": "Class SubtractOperation | VR Builder Documentation",
    "keywords": "Class SubtractOperation Inheritance System.Object SubtractOperation Implements IOperationCommand < System.Single , System.Single > System.IFormattable Namespace : VRBuilder.Pro.Properties.Operations Assembly : VRBuilder.Pro.dll Syntax public class SubtractOperation : Object, IOperationCommand<float, float> Constructors SubtractOperation() Declaration public SubtractOperation() Methods Execute(Single, Single) Declaration public float Execute(float leftOperand, float rightOperand) Parameters Type Name Description System.Single leftOperand System.Single rightOperand Returns Type Description System.Single ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Pro.Properties.Operations.SumOperation.html": {
    "href": "api/VRBuilder.Pro.Properties.Operations.SumOperation.html",
    "title": "Class SumOperation | VR Builder Documentation",
    "keywords": "Class SumOperation Inheritance System.Object SumOperation Implements IOperationCommand < System.Single , System.Single > System.IFormattable Namespace : VRBuilder.Pro.Properties.Operations Assembly : VRBuilder.Pro.dll Syntax public class SumOperation : Object, IOperationCommand<float, float> Constructors SumOperation() Declaration public SumOperation() Methods Execute(Single, Single) Declaration public float Execute(float leftOperand, float rightOperand) Parameters Type Name Description System.Single leftOperand System.Single rightOperand Returns Type Description System.Single ToString(String, IFormatProvider) Declaration public string ToString(string format, IFormatProvider formatProvider) Parameters Type Name Description System.String format System.IFormatProvider formatProvider Returns Type Description System.String Implements IOperationCommand<TOperand, TResult> System.IFormattable"
  },
  "api/VRBuilder.Pro.Properties.OutlineProperty.html": {
    "href": "api/VRBuilder.Pro.Properties.OutlineProperty.html",
    "title": "Class OutlineProperty | VR Builder Documentation",
    "keywords": "Class OutlineProperty Inheritance System.Object ProcessSceneObjectProperty OutlineProperty Implements IOutlineProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public class OutlineProperty : ProcessSceneObjectProperty, IOutlineProperty, ISceneObjectProperty Constructors OutlineProperty() Declaration public OutlineProperty() Properties IsOutlined Declaration public bool IsOutlined { get; } Property Value Type Description System.Boolean OutlineEnded Declaration public UnityEvent<OutlinePropertyEventArgs> OutlineEnded { get; } Property Value Type Description UnityEngine.Events.UnityEvent < OutlinePropertyEventArgs > OutlineRenderer Declaration protected OutlineRenderer OutlineRenderer { get; } Property Value Type Description OutlineRenderer OutlineStarted Declaration public UnityEvent<OutlinePropertyEventArgs> OutlineStarted { get; } Property Value Type Description UnityEngine.Events.UnityEvent < OutlinePropertyEventArgs > Methods HideOutline() Declaration public void HideOutline() Reset() Declaration protected override void Reset() Overrides ProcessSceneObjectProperty.Reset() ShowOutline(Color) Declaration public void ShowOutline(Color outlineColor) Parameters Type Name Description UnityEngine.Color outlineColor Implements IOutlineProperty ISceneObjectProperty"
  },
  "api/VRBuilder.Pro.Properties.OutlinePropertyEventArgs.html": {
    "href": "api/VRBuilder.Pro.Properties.OutlinePropertyEventArgs.html",
    "title": "Class OutlinePropertyEventArgs | VR Builder Documentation",
    "keywords": "Class OutlinePropertyEventArgs Inheritance System.Object OutlinePropertyEventArgs Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public class OutlinePropertyEventArgs : EventArgs Constructors OutlinePropertyEventArgs(Nullable<Color>) Declaration public OutlinePropertyEventArgs(Nullable<Color> outlineColor) Parameters Type Name Description System.Nullable < UnityEngine.Color > outlineColor Fields OutlineColor Declaration public readonly Nullable<Color> OutlineColor Field Value Type Description System.Nullable < UnityEngine.Color >"
  },
  "api/VRBuilder.Pro.Properties.ScoreFeedbackProperty.html": {
    "href": "api/VRBuilder.Pro.Properties.ScoreFeedbackProperty.html",
    "title": "Class ScoreFeedbackProperty | VR Builder Documentation",
    "keywords": "Class ScoreFeedbackProperty Inheritance System.Object ProcessSceneObjectProperty ScoreFeedbackProperty Implements IScoreFeedbackProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public class ScoreFeedbackProperty : ProcessSceneObjectProperty, IScoreFeedbackProperty, ISceneObjectProperty Constructors ScoreFeedbackProperty() Declaration public ScoreFeedbackProperty() Methods TriggerFeedback(Single, Single, Transform) Declaration public void TriggerFeedback(float scoreDelta, float finalScore, Transform position) Parameters Type Name Description System.Single scoreDelta System.Single finalScore UnityEngine.Transform position Implements IScoreFeedbackProperty ISceneObjectProperty"
  },
  "api/VRBuilder.Pro.Properties.StateDataProperty-1.html": {
    "href": "api/VRBuilder.Pro.Properties.StateDataProperty-1.html",
    "title": "Class StateDataProperty<T> | VR Builder Documentation",
    "keywords": "Class StateDataProperty<T> Inheritance System.Object ProcessSceneObjectProperty DataProperty < System.Int32 > StateDataPropertyBase StateDataProperty<T> Implements IDataProperty < System.Int32 > IDataPropertyBase ISceneObjectProperty Inherited Members DataProperty<Int32>.storedValue DataProperty<Int32>.GetValue() DataProperty<Int32>.ResetValue() DataProperty<Int32>.SetValue(Int32) ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public abstract class StateDataProperty<T> : StateDataPropertyBase, IDataProperty<int>, IDataPropertyBase, ISceneObjectProperty where T : Enum Type Parameters Name Description T Constructors StateDataProperty() Declaration protected StateDataProperty() Properties DefaultValue Declaration public override int DefaultValue { get; } Property Value Type Description System.Int32 Overrides VRBuilder.Core.Properties.DataProperty<System.Int32>.DefaultValue OnValueChanged Declaration public override UnityEvent<int> OnValueChanged { get; } Property Value Type Description UnityEngine.Events.UnityEvent < System.Int32 > Overrides VRBuilder.Core.Properties.DataProperty<System.Int32>.OnValueChanged OnValueReset Declaration public override UnityEvent OnValueReset { get; } Property Value Type Description UnityEngine.Events.UnityEvent Overrides VRBuilder.Core.Properties.DataProperty<System.Int32>.OnValueReset StateType Declaration public override Type StateType { get; } Property Value Type Description System.Type Overrides StateDataPropertyBase.StateType Methods GetState() Declaration public T GetState() Returns Type Description T SetState(T) Declaration public void SetState(T state) Parameters Type Name Description T state Start() Declaration protected void Start() ValueToString(Int32) Declaration protected override string ValueToString(int value) Parameters Type Name Description System.Int32 value Returns Type Description System.String Overrides VRBuilder.Core.Properties.DataProperty<System.Int32>.ValueToString(System.Int32) Implements IDataProperty<T> IDataPropertyBase ISceneObjectProperty"
  },
  "api/VRBuilder.Pro.Properties.StateDataPropertyBase.html": {
    "href": "api/VRBuilder.Pro.Properties.StateDataPropertyBase.html",
    "title": "Class StateDataPropertyBase | VR Builder Documentation",
    "keywords": "Class StateDataPropertyBase Inheritance System.Object ProcessSceneObjectProperty DataProperty < System.Int32 > StateDataPropertyBase StateDataProperty<T> Implements IDataProperty < System.Int32 > IDataPropertyBase ISceneObjectProperty Inherited Members DataProperty<Int32>.storedValue DataProperty<Int32>.GetValue() DataProperty<Int32>.ResetValue() DataProperty<Int32>.SetValue(Int32) DataProperty<Int32>.ValueToString(Int32) DataProperty<Int32>.DefaultValue DataProperty<Int32>.OnValueChanged DataProperty<Int32>.OnValueReset ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public abstract class StateDataPropertyBase : DataProperty<int>, IDataProperty<int>, IDataPropertyBase, ISceneObjectProperty Constructors StateDataPropertyBase() Declaration protected StateDataPropertyBase() Properties StateType Declaration public abstract Type StateType { get; } Property Value Type Description System.Type Implements IDataProperty<T> IDataPropertyBase ISceneObjectProperty"
  },
  "api/VRBuilder.Pro.Properties.TextEventProperty.html": {
    "href": "api/VRBuilder.Pro.Properties.TextEventProperty.html",
    "title": "Class TextEventProperty | VR Builder Documentation",
    "keywords": "Class TextEventProperty Inheritance System.Object ProcessSceneObjectProperty GenericEventProperty < System.String > TextEventProperty Implements IGenericEventProperty < System.String > ISceneObjectProperty Inherited Members GenericEventProperty<String>.TriggerEvent(String) ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public class TextEventProperty : GenericEventProperty<string>, IGenericEventProperty<string>, ISceneObjectProperty Constructors TextEventProperty() Declaration public TextEventProperty() Implements IGenericEventProperty<T> ISceneObjectProperty"
  },
  "api/VRBuilder.Pro.Properties.TimerProperty.html": {
    "href": "api/VRBuilder.Pro.Properties.TimerProperty.html",
    "title": "Class TimerProperty | VR Builder Documentation",
    "keywords": "Class TimerProperty Inheritance System.Object ProcessSceneObjectProperty TimerProperty Implements ITimerProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public class TimerProperty : ProcessSceneObjectProperty, ITimerProperty, ISceneObjectProperty Constructors TimerProperty() Declaration public TimerProperty() Properties IsCountdown Declaration public bool IsCountdown { get; set; } Property Value Type Description System.Boolean IsRunning Declaration public bool IsRunning { get; } Property Value Type Description System.Boolean TimerStart Declaration public UnityEvent<TimerPropertyEventArgs> TimerStart { get; } Property Value Type Description UnityEngine.Events.UnityEvent < TimerPropertyEventArgs > TimerStop Declaration public UnityEvent<TimerPropertyEventArgs> TimerStop { get; } Property Value Type Description UnityEngine.Events.UnityEvent < TimerPropertyEventArgs > TimerZero Declaration public UnityEvent<TimerPropertyEventArgs> TimerZero { get; } Property Value Type Description UnityEngine.Events.UnityEvent < TimerPropertyEventArgs > Methods StartTimer() Declaration public void StartTimer() StopTimer() Declaration public void StopTimer() Events TimerAtZero Declaration public event EventHandler<EventArgs> TimerAtZero Event Type Type Description System.EventHandler < System.EventArgs > TimerStarted Declaration public event EventHandler<EventArgs> TimerStarted Event Type Type Description System.EventHandler < System.EventArgs > TimerStopped Declaration public event EventHandler<EventArgs> TimerStopped Event Type Type Description System.EventHandler < System.EventArgs > Implements ITimerProperty ISceneObjectProperty"
  },
  "api/VRBuilder.Pro.Properties.TimerPropertyEventArgs.html": {
    "href": "api/VRBuilder.Pro.Properties.TimerPropertyEventArgs.html",
    "title": "Class TimerPropertyEventArgs | VR Builder Documentation",
    "keywords": "Class TimerPropertyEventArgs Inheritance System.Object TimerPropertyEventArgs Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public class TimerPropertyEventArgs : EventArgs Constructors TimerPropertyEventArgs() Declaration public TimerPropertyEventArgs()"
  },
  "api/VRBuilder.Pro.Properties.VideoPlayerProperty.html": {
    "href": "api/VRBuilder.Pro.Properties.VideoPlayerProperty.html",
    "title": "Class VideoPlayerProperty | VR Builder Documentation",
    "keywords": "Class VideoPlayerProperty Inheritance System.Object ProcessSceneObjectProperty VideoPlayerProperty Implements IVideoPlayerProperty ISceneObjectProperty Inherited Members ProcessSceneObjectProperty.OnEnable() ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.Pro.Properties Assembly : VRBuilder.Pro.dll Syntax public class VideoPlayerProperty : ProcessSceneObjectProperty, IVideoPlayerProperty, ISceneObjectProperty Constructors VideoPlayerProperty() Declaration public VideoPlayerProperty() Properties Is360Video Declaration public bool Is360Video { get; set; } Property Value Type Description System.Boolean IsPlaying Declaration public bool IsPlaying { get; } Property Value Type Description System.Boolean VideoPlayer Declaration public VideoPlayer VideoPlayer { get; } Property Value Type Description UnityEngine.Video.VideoPlayer Methods Play() Declaration public void Play() SetVideoResourcePath(String) Declaration public void SetVideoResourcePath(string path) Parameters Type Name Description System.String path SetVideoURL(String) Declaration public void SetVideoURL(string url) Parameters Type Name Description System.String url Stop() Declaration public void Stop() Implements IVideoPlayerProperty ISceneObjectProperty"
  },
  "api/VRBuilder.Pro.Settings.html": {
    "href": "api/VRBuilder.Pro.Settings.html",
    "title": "Namespace VRBuilder.Pro.Settings | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Pro.Settings Classes OutlineSettings"
  },
  "api/VRBuilder.Pro.Settings.OutlineSettings.html": {
    "href": "api/VRBuilder.Pro.Settings.OutlineSettings.html",
    "title": "Class OutlineSettings | VR Builder Documentation",
    "keywords": "Class OutlineSettings Inheritance System.Object SettingsObject < OutlineSettings > ComponentSettings < OutlineRenderer , OutlineSettings > OutlineSettings Inherited Members ComponentSettings<OutlineRenderer, OutlineSettings>.ApplySettings(OutlineRenderer) SettingsObject<OutlineSettings>.Save() SettingsObject<OutlineSettings>.Finalize() SettingsObject<OutlineSettings>.Instance Namespace : VRBuilder.Pro.Settings Assembly : VRBuilder.Pro.dll Syntax public class OutlineSettings : ComponentSettings<OutlineRenderer, OutlineSettings> Constructors OutlineSettings() Declaration public OutlineSettings() Methods ApplySettings(OutlineRenderer) Declaration public override void ApplySettings(OutlineRenderer target) Parameters Type Name Description OutlineRenderer target Overrides VRBuilder.Core.Settings.ComponentSettings<VRBuilder.Pro.Utils.QuickOutline.OutlineRenderer, VRBuilder.Pro.Settings.OutlineSettings>.ApplySettings(VRBuilder.Pro.Utils.QuickOutline.OutlineRenderer)"
  },
  "api/VRBuilder.Pro.Utils.ArrowObjectPointer.html": {
    "href": "api/VRBuilder.Pro.Utils.ArrowObjectPointer.html",
    "title": "Class ArrowObjectPointer | VR Builder Documentation",
    "keywords": "Class ArrowObjectPointer Inheritance System.Object ObjectPointer ArrowObjectPointer Inherited Members ObjectPointer.IsWithinThreshold ObjectPointer.EnteredThreshold ObjectPointer.ExitedThreshold Namespace : VRBuilder.Pro.Utils Assembly : VRBuilder.Pro.dll Syntax public class ArrowObjectPointer : ObjectPointer Constructors ArrowObjectPointer() Declaration public ArrowObjectPointer() Methods StartTracking(Transform) Declaration public override void StartTracking(Transform target) Parameters Type Name Description UnityEngine.Transform target Overrides ObjectPointer.StartTracking(Transform) StopTracking() Declaration public override void StopTracking() Overrides ObjectPointer.StopTracking()"
  },
  "api/VRBuilder.Pro.Utils.html": {
    "href": "api/VRBuilder.Pro.Utils.html",
    "title": "Namespace VRBuilder.Pro.Utils | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Pro.Utils Classes ArrowObjectPointer ObjectPointer ObjectPointerEventArgs"
  },
  "api/VRBuilder.Pro.Utils.ObjectPointer.html": {
    "href": "api/VRBuilder.Pro.Utils.ObjectPointer.html",
    "title": "Class ObjectPointer | VR Builder Documentation",
    "keywords": "Class ObjectPointer Inheritance System.Object ObjectPointer ArrowObjectPointer Namespace : VRBuilder.Pro.Utils Assembly : VRBuilder.Pro.dll Syntax public abstract class ObjectPointer : MonoBehaviour Constructors ObjectPointer() Declaration protected ObjectPointer() Properties EnteredThreshold Declaration public UnityEvent<ObjectPointerEventArgs> EnteredThreshold { get; } Property Value Type Description UnityEngine.Events.UnityEvent < ObjectPointerEventArgs > ExitedThreshold Declaration public UnityEvent<ObjectPointerEventArgs> ExitedThreshold { get; } Property Value Type Description UnityEngine.Events.UnityEvent < ObjectPointerEventArgs > IsWithinThreshold Declaration public bool IsWithinThreshold { get; protected set; } Property Value Type Description System.Boolean Methods StartTracking(Transform) Declaration public abstract void StartTracking(Transform target) Parameters Type Name Description UnityEngine.Transform target StopTracking() Declaration public abstract void StopTracking()"
  },
  "api/VRBuilder.Pro.Utils.ObjectPointerEventArgs.html": {
    "href": "api/VRBuilder.Pro.Utils.ObjectPointerEventArgs.html",
    "title": "Class ObjectPointerEventArgs | VR Builder Documentation",
    "keywords": "Class ObjectPointerEventArgs Inheritance System.Object ObjectPointerEventArgs Namespace : VRBuilder.Pro.Utils Assembly : VRBuilder.Pro.dll Syntax public class ObjectPointerEventArgs : EventArgs Constructors ObjectPointerEventArgs() Declaration public ObjectPointerEventArgs()"
  },
  "api/VRBuilder.Pro.Utils.QuickOutline.html": {
    "href": "api/VRBuilder.Pro.Utils.QuickOutline.html",
    "title": "Namespace VRBuilder.Pro.Utils.QuickOutline | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Pro.Utils.QuickOutline Classes OutlineRenderer OutlineRenderer.Mode"
  },
  "api/VRBuilder.Pro.Utils.QuickOutline.OutlineRenderer.html": {
    "href": "api/VRBuilder.Pro.Utils.QuickOutline.OutlineRenderer.html",
    "title": "Class OutlineRenderer | VR Builder Documentation",
    "keywords": "Class OutlineRenderer Inheritance System.Object OutlineRenderer Namespace : VRBuilder.Pro.Utils.QuickOutline Assembly : VRBuilder.Pro.dll Syntax public class OutlineRenderer : MonoBehaviour Constructors OutlineRenderer() Declaration public OutlineRenderer() Properties OutlineColor Declaration public Color OutlineColor { get; set; } Property Value Type Description UnityEngine.Color OutlineMode Declaration public OutlineRenderer.Mode OutlineMode { get; set; } Property Value Type Description OutlineRenderer.Mode OutlineWidth Declaration public float OutlineWidth { get; set; } Property Value Type Description System.Single"
  },
  "api/VRBuilder.Pro.Utils.QuickOutline.OutlineRenderer.Mode.html": {
    "href": "api/VRBuilder.Pro.Utils.QuickOutline.OutlineRenderer.Mode.html",
    "title": "Class OutlineRenderer.Mode | VR Builder Documentation",
    "keywords": "Class OutlineRenderer.Mode Inheritance System.Object OutlineRenderer.Mode Namespace : VRBuilder.Pro.Utils.QuickOutline Assembly : VRBuilder.Pro.dll Syntax public sealed class Mode : Enum Fields OutlineAll Declaration public const OutlineRenderer.Mode OutlineAll Field Value Type Description OutlineRenderer.Mode OutlineAndSilhouette Declaration public const OutlineRenderer.Mode OutlineAndSilhouette Field Value Type Description OutlineRenderer.Mode OutlineHidden Declaration public const OutlineRenderer.Mode OutlineHidden Field Value Type Description OutlineRenderer.Mode OutlineVisible Declaration public const OutlineRenderer.Mode OutlineVisible Field Value Type Description OutlineRenderer.Mode SilhouetteOnly Declaration public const OutlineRenderer.Mode SilhouetteOnly Field Value Type Description OutlineRenderer.Mode value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/VRBuilder.Pro.Utils.TextMeshPro.html": {
    "href": "api/VRBuilder.Pro.Utils.TextMeshPro.html",
    "title": "Namespace VRBuilder.Pro.Utils.TextMeshPro | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Pro.Utils.TextMeshPro Classes VR_Dropdown"
  },
  "api/VRBuilder.Pro.Utils.TextMeshPro.VR_Dropdown.html": {
    "href": "api/VRBuilder.Pro.Utils.TextMeshPro.VR_Dropdown.html",
    "title": "Class VR_Dropdown | VR Builder Documentation",
    "keywords": "Class VR_Dropdown Inheritance System.Object UnityEngine.EventSystems.UIBehaviour UnityEngine.UI.Selectable TMPro.TMP_Dropdown VR_Dropdown Implements UnityEngine.EventSystems.IMoveHandler UnityEngine.EventSystems.IPointerDownHandler UnityEngine.EventSystems.IPointerUpHandler UnityEngine.EventSystems.IPointerEnterHandler UnityEngine.EventSystems.IPointerExitHandler UnityEngine.EventSystems.ISelectHandler UnityEngine.EventSystems.IDeselectHandler UnityEngine.EventSystems.IPointerClickHandler UnityEngine.EventSystems.ISubmitHandler UnityEngine.EventSystems.ICancelHandler UnityEngine.EventSystems.IEventSystemHandler Inherited Members TMPro.TMP_Dropdown.SetValueWithoutNotify(System.Int32) TMPro.TMP_Dropdown.Awake() TMPro.TMP_Dropdown.Start() TMPro.TMP_Dropdown.OnValidate() TMPro.TMP_Dropdown.OnDisable() TMPro.TMP_Dropdown.RefreshShownValue() TMPro.TMP_Dropdown.AddOptions(System.Collections.Generic.List<TMPro.TMP_Dropdown.OptionData>) TMPro.TMP_Dropdown.AddOptions(System.Collections.Generic.List<System.String>) TMPro.TMP_Dropdown.AddOptions(System.Collections.Generic.List<UnityEngine.Sprite>) TMPro.TMP_Dropdown.ClearOptions() TMPro.TMP_Dropdown.Show() TMPro.TMP_Dropdown.CreateBlocker(UnityEngine.Canvas) TMPro.TMP_Dropdown.DestroyBlocker(UnityEngine.GameObject) TMPro.TMP_Dropdown.CreateDropdownList(UnityEngine.GameObject) TMPro.TMP_Dropdown.DestroyDropdownList(UnityEngine.GameObject) TMPro.TMP_Dropdown.CreateItem(TMPro.TMP_Dropdown.DropdownItem) TMPro.TMP_Dropdown.DestroyItem(TMPro.TMP_Dropdown.DropdownItem) TMPro.TMP_Dropdown.Hide() TMPro.TMP_Dropdown.template TMPro.TMP_Dropdown.captionText TMPro.TMP_Dropdown.captionImage TMPro.TMP_Dropdown.placeholder TMPro.TMP_Dropdown.itemText TMPro.TMP_Dropdown.itemImage TMPro.TMP_Dropdown.options TMPro.TMP_Dropdown.onValueChanged TMPro.TMP_Dropdown.alphaFadeSpeed TMPro.TMP_Dropdown.value TMPro.TMP_Dropdown.IsExpanded TMPro.TMP_Dropdown.MultiSelect UnityEngine.UI.Selectable.s_Selectables UnityEngine.UI.Selectable.s_SelectableCount UnityEngine.UI.Selectable.m_CurrentIndex UnityEngine.UI.Selectable.AllSelectablesNoAlloc(UnityEngine.UI.Selectable[]) UnityEngine.UI.Selectable.OnCanvasGroupChanged() UnityEngine.UI.Selectable.IsInteractable() UnityEngine.UI.Selectable.OnDidApplyAnimationProperties() UnityEngine.UI.Selectable.OnEnable() UnityEngine.UI.Selectable.OnTransformParentChanged() UnityEngine.UI.Selectable.Reset() UnityEngine.UI.Selectable.InstantClearState() UnityEngine.UI.Selectable.DoStateTransition(UnityEngine.UI.Selectable.SelectionState, System.Boolean) UnityEngine.UI.Selectable.FindSelectable(UnityEngine.Vector3) UnityEngine.UI.Selectable.FindSelectableOnLeft() UnityEngine.UI.Selectable.FindSelectableOnRight() UnityEngine.UI.Selectable.FindSelectableOnUp() UnityEngine.UI.Selectable.FindSelectableOnDown() UnityEngine.UI.Selectable.OnMove(UnityEngine.EventSystems.AxisEventData) UnityEngine.UI.Selectable.IsHighlighted() UnityEngine.UI.Selectable.IsPressed() UnityEngine.UI.Selectable.OnPointerDown(UnityEngine.EventSystems.PointerEventData) UnityEngine.UI.Selectable.OnPointerUp(UnityEngine.EventSystems.PointerEventData) UnityEngine.UI.Selectable.OnPointerEnter(UnityEngine.EventSystems.PointerEventData) UnityEngine.UI.Selectable.OnPointerExit(UnityEngine.EventSystems.PointerEventData) UnityEngine.UI.Selectable.OnSelect(UnityEngine.EventSystems.BaseEventData) UnityEngine.UI.Selectable.OnDeselect(UnityEngine.EventSystems.BaseEventData) UnityEngine.UI.Selectable.Select() UnityEngine.UI.Selectable.allSelectablesArray UnityEngine.UI.Selectable.allSelectableCount UnityEngine.UI.Selectable.allSelectables UnityEngine.UI.Selectable.navigation UnityEngine.UI.Selectable.transition UnityEngine.UI.Selectable.colors UnityEngine.UI.Selectable.spriteState UnityEngine.UI.Selectable.animationTriggers UnityEngine.UI.Selectable.targetGraphic UnityEngine.UI.Selectable.interactable UnityEngine.UI.Selectable.image UnityEngine.UI.Selectable.animator UnityEngine.UI.Selectable.currentSelectionState UnityEngine.EventSystems.UIBehaviour.OnDestroy() UnityEngine.EventSystems.UIBehaviour.IsActive() UnityEngine.EventSystems.UIBehaviour.OnRectTransformDimensionsChange() UnityEngine.EventSystems.UIBehaviour.OnBeforeTransformParentChanged() UnityEngine.EventSystems.UIBehaviour.OnCanvasHierarchyChanged() UnityEngine.EventSystems.UIBehaviour.IsDestroyed() Namespace : VRBuilder.Pro.Utils.TextMeshPro Assembly : VRBuilder.Pro.dll Syntax public class VR_Dropdown : TMP_Dropdown, IMoveHandler, IPointerDownHandler, IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler, ISelectHandler, IDeselectHandler, IPointerClickHandler, ISubmitHandler, ICancelHandler, IEventSystemHandler Constructors VR_Dropdown() Declaration public VR_Dropdown() Methods OnCancel(BaseEventData) Declaration public override void OnCancel(BaseEventData eventData) Parameters Type Name Description UnityEngine.EventSystems.BaseEventData eventData Overrides TMPro.TMP_Dropdown.OnCancel(UnityEngine.EventSystems.BaseEventData) OnPointerClick(PointerEventData) Declaration public override void OnPointerClick(PointerEventData eventData) Parameters Type Name Description UnityEngine.EventSystems.PointerEventData eventData Overrides TMPro.TMP_Dropdown.OnPointerClick(UnityEngine.EventSystems.PointerEventData) OnSubmit(BaseEventData) Declaration public override void OnSubmit(BaseEventData eventData) Parameters Type Name Description UnityEngine.EventSystems.BaseEventData eventData Overrides TMPro.TMP_Dropdown.OnSubmit(UnityEngine.EventSystems.BaseEventData) Implements UnityEngine.EventSystems.IMoveHandler UnityEngine.EventSystems.IPointerDownHandler UnityEngine.EventSystems.IPointerUpHandler UnityEngine.EventSystems.IPointerEnterHandler UnityEngine.EventSystems.IPointerExitHandler UnityEngine.EventSystems.ISelectHandler UnityEngine.EventSystems.IDeselectHandler UnityEngine.EventSystems.IPointerClickHandler UnityEngine.EventSystems.ISubmitHandler UnityEngine.EventSystems.ICancelHandler UnityEngine.EventSystems.IEventSystemHandler"
  },
  "api/VRBuilder.ProcessController.AttachToUserView.html": {
    "href": "api/VRBuilder.ProcessController.AttachToUserView.html",
    "title": "Class AttachToUserView | VR Builder Documentation",
    "keywords": "Class AttachToUserView Inheritance System.Object AttachToUserView Namespace : VRBuilder.ProcessController Assembly : VRBuilder.Core.dll Syntax public class AttachToUserView : MonoBehaviour Constructors AttachToUserView() Declaration public AttachToUserView() Fields font Declaration protected Font font Field Value Type Description UnityEngine.Font fontSize Declaration protected int fontSize Field Value Type Description System.Int32 Methods LateUpdate() Declaration protected void LateUpdate() Start() Declaration protected void Start()"
  },
  "api/VRBuilder.ProcessController.BaseProcessController.html": {
    "href": "api/VRBuilder.ProcessController.BaseProcessController.html",
    "title": "Class BaseProcessController | VR Builder Documentation",
    "keywords": "Class BaseProcessController Inheritance System.Object BaseProcessController NetcodeProcessController SpectatorProcessController StandardProcessController Implements IProcessController Namespace : VRBuilder.ProcessController Assembly : VRBuilder.Core.dll Syntax public abstract class BaseProcessController : Object, IProcessController Constructors BaseProcessController() Declaration protected BaseProcessController() Properties Name Declaration public abstract string Name { get; } Property Value Type Description System.String PrefabName Declaration protected abstract string PrefabName { get; } Property Value Type Description System.String Priority Declaration public abstract int Priority { get; } Property Value Type Description System.Int32 Methods GetProcessControllerPrefab() Declaration public virtual GameObject GetProcessControllerPrefab() Returns Type Description UnityEngine.GameObject GetRequiredSetupComponents() Declaration public virtual List<Type> GetRequiredSetupComponents() Returns Type Description System.Collections.Generic.List < System.Type > HandlePostSetup(GameObject) Declaration public virtual void HandlePostSetup(GameObject processControllerObject) Parameters Type Name Description UnityEngine.GameObject processControllerObject Implements IProcessController"
  },
  "api/VRBuilder.ProcessController.BasicProcessLoader.html": {
    "href": "api/VRBuilder.ProcessController.BasicProcessLoader.html",
    "title": "Class BasicProcessLoader | VR Builder Documentation",
    "keywords": "Class BasicProcessLoader Inheritance System.Object BasicProcessLoader Implements IConfigurableProcessController Namespace : VRBuilder.ProcessController Assembly : VRBuilder.Core.dll Syntax public class BasicProcessLoader : MonoBehaviour, IConfigurableProcessController Constructors BasicProcessLoader() Declaration public BasicProcessLoader() Properties AutoStartProcess Declaration public bool AutoStartProcess { get; set; } Property Value Type Description System.Boolean Implements IConfigurableProcessController"
  },
  "api/VRBuilder.ProcessController.html": {
    "href": "api/VRBuilder.ProcessController.html",
    "title": "Namespace VRBuilder.ProcessController | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.ProcessController Classes AttachToUserView BaseProcessController BasicProcessLoader InitProcessOnSceneLoad ProcessControllerSetup SpectatorProcessController StandardProcessController Interfaces IConfigurableProcessController IProcessController"
  },
  "api/VRBuilder.ProcessController.IConfigurableProcessController.html": {
    "href": "api/VRBuilder.ProcessController.IConfigurableProcessController.html",
    "title": "Interface IConfigurableProcessController | VR Builder Documentation",
    "keywords": "Interface IConfigurableProcessController Namespace : VRBuilder.ProcessController Assembly : VRBuilder.Core.dll Syntax public interface IConfigurableProcessController Properties AutoStartProcess Declaration bool AutoStartProcess { get; set; } Property Value Type Description System.Boolean"
  },
  "api/VRBuilder.ProcessController.InitProcessOnSceneLoad.html": {
    "href": "api/VRBuilder.ProcessController.InitProcessOnSceneLoad.html",
    "title": "Class InitProcessOnSceneLoad | VR Builder Documentation",
    "keywords": "Class InitProcessOnSceneLoad Inheritance System.Object InitProcessOnSceneLoad Namespace : VRBuilder.ProcessController Assembly : VRBuilder.Core.dll Syntax public class InitProcessOnSceneLoad : MonoBehaviour Constructors InitProcessOnSceneLoad() Declaration public InitProcessOnSceneLoad()"
  },
  "api/VRBuilder.ProcessController.IProcessController.html": {
    "href": "api/VRBuilder.ProcessController.IProcessController.html",
    "title": "Interface IProcessController | VR Builder Documentation",
    "keywords": "Interface IProcessController Namespace : VRBuilder.ProcessController Assembly : VRBuilder.Core.dll Syntax public interface IProcessController Properties Name Declaration string Name { get; } Property Value Type Description System.String Priority Declaration int Priority { get; } Property Value Type Description System.Int32 Methods GetProcessControllerPrefab() Declaration GameObject GetProcessControllerPrefab() Returns Type Description UnityEngine.GameObject GetRequiredSetupComponents() Declaration List<Type> GetRequiredSetupComponents() Returns Type Description System.Collections.Generic.List < System.Type > HandlePostSetup(GameObject) Declaration void HandlePostSetup(GameObject processControllerObject) Parameters Type Name Description UnityEngine.GameObject processControllerObject"
  },
  "api/VRBuilder.ProcessController.ProcessControllerSetup.html": {
    "href": "api/VRBuilder.ProcessController.ProcessControllerSetup.html",
    "title": "Class ProcessControllerSetup | VR Builder Documentation",
    "keywords": "Class ProcessControllerSetup Inheritance System.Object ProcessControllerSetup Namespace : VRBuilder.ProcessController Assembly : VRBuilder.Core.dll Syntax public class ProcessControllerSetup : MonoBehaviour Constructors ProcessControllerSetup() Declaration public ProcessControllerSetup() Fields enforcedProcessController Declaration protected static IProcessController enforcedProcessController Field Value Type Description IProcessController Properties CurrentProcessController Declaration public IProcessController CurrentProcessController { get; protected set; } Property Value Type Description IProcessController Methods OnEnable() Declaration protected virtual void OnEnable() ResetToDefault() Declaration public void ResetToDefault() SetEnforcedProcessController(IProcessController) Declaration public static void SetEnforcedProcessController(IProcessController processController) Parameters Type Name Description IProcessController processController SetProcessControllerQualifiedName(String) Declaration public void SetProcessControllerQualifiedName(string processControllerQualifiedName) Parameters Type Name Description System.String processControllerQualifiedName"
  },
  "api/VRBuilder.ProcessController.SpectatorProcessController.html": {
    "href": "api/VRBuilder.ProcessController.SpectatorProcessController.html",
    "title": "Class SpectatorProcessController | VR Builder Documentation",
    "keywords": "Class SpectatorProcessController Inheritance System.Object BaseProcessController SpectatorProcessController Implements IProcessController Inherited Members BaseProcessController.GetProcessControllerPrefab() BaseProcessController.HandlePostSetup(GameObject) Namespace : VRBuilder.ProcessController Assembly : VRBuilder.Core.dll Syntax public class SpectatorProcessController : BaseProcessController, IProcessController Constructors SpectatorProcessController() Declaration public SpectatorProcessController() Properties Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides BaseProcessController.Name PrefabName Declaration protected override string PrefabName { get; } Property Value Type Description System.String Overrides BaseProcessController.PrefabName Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides BaseProcessController.Priority Methods GetRequiredSetupComponents() Declaration public override List<Type> GetRequiredSetupComponents() Returns Type Description System.Collections.Generic.List < System.Type > Overrides BaseProcessController.GetRequiredSetupComponents() Implements IProcessController"
  },
  "api/VRBuilder.ProcessController.StandardProcessController.html": {
    "href": "api/VRBuilder.ProcessController.StandardProcessController.html",
    "title": "Class StandardProcessController | VR Builder Documentation",
    "keywords": "Class StandardProcessController Inheritance System.Object BaseProcessController StandardProcessController Implements IProcessController Inherited Members BaseProcessController.GetProcessControllerPrefab() BaseProcessController.HandlePostSetup(GameObject) Namespace : VRBuilder.ProcessController Assembly : VRBuilder.Core.dll Syntax public class StandardProcessController : BaseProcessController, IProcessController Constructors StandardProcessController() Declaration public StandardProcessController() Properties Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides BaseProcessController.Name PrefabName Declaration protected override string PrefabName { get; } Property Value Type Description System.String Overrides BaseProcessController.PrefabName Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides BaseProcessController.Priority Methods GetRequiredSetupComponents() Declaration public override List<Type> GetRequiredSetupComponents() Returns Type Description System.Collections.Generic.List < System.Type > Overrides BaseProcessController.GetRequiredSetupComponents() Implements IProcessController"
  },
  "api/VRBuilder.TextToSpeech.html": {
    "href": "api/VRBuilder.TextToSpeech.html",
    "title": "Namespace VRBuilder.TextToSpeech | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.TextToSpeech Interfaces IAudioConverter"
  },
  "api/VRBuilder.TextToSpeech.IAudioConverter.html": {
    "href": "api/VRBuilder.TextToSpeech.IAudioConverter.html",
    "title": "Interface IAudioConverter | VR Builder Documentation",
    "keywords": "Interface IAudioConverter Namespace : VRBuilder.TextToSpeech Assembly : VRBuilder.Core.dll Syntax public interface IAudioConverter Methods CreateAudioClipFromMp3(Byte[]) Declaration AudioClip CreateAudioClipFromMp3(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description UnityEngine.AudioClip CreateAudioClipFromWAVE(Byte[]) Declaration AudioClip CreateAudioClipFromWAVE(byte[] data) Parameters Type Name Description System.Byte [] data Returns Type Description UnityEngine.AudioClip TryWriteAudioClipToFile(AudioClip, String) Declaration bool TryWriteAudioClipToFile(AudioClip audio, string filePath) Parameters Type Name Description UnityEngine.AudioClip audio System.String filePath Returns Type Description System.Boolean"
  },
  "api/VRBuilder.UI.Console.ConsoleTransformHandler.html": {
    "href": "api/VRBuilder.UI.Console.ConsoleTransformHandler.html",
    "title": "Class ConsoleTransformHandler | VR Builder Documentation",
    "keywords": "Class ConsoleTransformHandler Inheritance System.Object ConsoleTransformHandler Namespace : VRBuilder.UI.Console Assembly : VRBuilder.Core.dll Syntax public class ConsoleTransformHandler : MonoBehaviour Constructors ConsoleTransformHandler() Declaration public ConsoleTransformHandler()"
  },
  "api/VRBuilder.UI.Console.html": {
    "href": "api/VRBuilder.UI.Console.html",
    "title": "Namespace VRBuilder.UI.Console | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.UI.Console Classes ConsoleTransformHandler LogConsole LogMessage Interfaces ILogConsole"
  },
  "api/VRBuilder.UI.Console.ILogConsole.html": {
    "href": "api/VRBuilder.UI.Console.ILogConsole.html",
    "title": "Interface ILogConsole | VR Builder Documentation",
    "keywords": "Interface ILogConsole Namespace : VRBuilder.UI.Console Assembly : VRBuilder.Core.dll Syntax public interface ILogConsole Methods Clear() Declaration void Clear() Hide() Declaration void Hide() LogMessage(String, String, LogType) Declaration void LogMessage(string message, string details, LogType logType) Parameters Type Name Description System.String message System.String details UnityEngine.LogType logType SetDirty() Declaration void SetDirty() Show() Declaration void Show()"
  },
  "api/VRBuilder.UI.Console.LogConsole.html": {
    "href": "api/VRBuilder.UI.Console.LogConsole.html",
    "title": "Class LogConsole | VR Builder Documentation",
    "keywords": "Class LogConsole Inheritance System.Object LogConsole Implements ILogConsole Namespace : VRBuilder.UI.Console Assembly : VRBuilder.Core.dll Syntax public class LogConsole : MonoBehaviour, ILogConsole Constructors LogConsole() Declaration public LogConsole() Methods Clear() Declaration public void Clear() Hide() Declaration public void Hide() LogMessage(String, String, LogType) Declaration public void LogMessage(string message, string details, LogType logType) Parameters Type Name Description System.String message System.String details UnityEngine.LogType logType SetDirty() Declaration public void SetDirty() Show() Declaration public void Show() Implements ILogConsole"
  },
  "api/VRBuilder.UI.Console.LogMessage.html": {
    "href": "api/VRBuilder.UI.Console.LogMessage.html",
    "title": "Class LogMessage | VR Builder Documentation",
    "keywords": "Class LogMessage Inheritance System.Object LogMessage Namespace : VRBuilder.UI.Console Assembly : VRBuilder.Core.dll Syntax public sealed class LogMessage : ValueType Constructors LogMessage(String, String, LogType) Declaration public LogMessage(string message, string details, LogType logType) Parameters Type Name Description System.String message System.String details UnityEngine.LogType logType Properties Details Declaration public string Details { get; } Property Value Type Description System.String LogType Declaration public LogType LogType { get; } Property Value Type Description UnityEngine.LogType Message Declaration public string Message { get; } Property Value Type Description System.String"
  },
  "api/VRBuilder.UI.Spectator.html": {
    "href": "api/VRBuilder.UI.Spectator.html",
    "title": "Namespace VRBuilder.UI.Spectator | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.UI.Spectator Classes SpectatorCamera SpectatorCameraDummy SpectatorController"
  },
  "api/VRBuilder.UI.Spectator.SpectatorCamera.html": {
    "href": "api/VRBuilder.UI.Spectator.SpectatorCamera.html",
    "title": "Class SpectatorCamera | VR Builder Documentation",
    "keywords": "Class SpectatorCamera Inheritance System.Object SpectatorCamera Namespace : VRBuilder.UI.Spectator Assembly : VRBuilder.Core.dll Syntax public class SpectatorCamera : MonoBehaviour Constructors SpectatorCamera() Declaration public SpectatorCamera() Methods Start() Declaration protected virtual void Start() Update() Declaration protected virtual void Update() UpdateCameraPositionAndRotation() Declaration protected virtual void UpdateCameraPositionAndRotation()"
  },
  "api/VRBuilder.UI.Spectator.SpectatorCameraDummy.html": {
    "href": "api/VRBuilder.UI.Spectator.SpectatorCameraDummy.html",
    "title": "Class SpectatorCameraDummy | VR Builder Documentation",
    "keywords": "Class SpectatorCameraDummy Inheritance System.Object SpectatorCameraDummy Namespace : VRBuilder.UI.Spectator Assembly : VRBuilder.Core.dll Syntax public class SpectatorCameraDummy : MonoBehaviour Constructors SpectatorCameraDummy() Declaration public SpectatorCameraDummy() Fields CameraName Declaration public string CameraName Field Value Type Description System.String Methods Awake() Declaration public void Awake()"
  },
  "api/VRBuilder.UI.Spectator.SpectatorController.html": {
    "href": "api/VRBuilder.UI.Spectator.SpectatorController.html",
    "title": "Class SpectatorController | VR Builder Documentation",
    "keywords": "Class SpectatorController Inheritance System.Object InputActionListener SpectatorController Implements IInputActionListener Inherited Members InputActionListener.RegisterInputEvent(Action<InputController.InputEventArgs>) InputActionListener.UnregisterInputEvent(Action<InputController.InputEventArgs>) InputActionListener.Priority InputActionListener.IgnoreFocus Namespace : VRBuilder.UI.Spectator Assembly : VRBuilder.Core.dll Syntax public class SpectatorController : InputActionListener, IInputActionListener Constructors SpectatorController() Declaration public SpectatorController() Methods OnDisable() Declaration protected void OnDisable() OnEnable() Declaration protected void OnEnable() ToggleOverlay(InputController.InputEventArgs) Declaration protected void ToggleOverlay(InputController.InputEventArgs args) Parameters Type Name Description InputController.InputEventArgs args Events ToggleUIOverlayVisibility Declaration public event EventHandler ToggleUIOverlayVisibility Event Type Type Description System.EventHandler Implements IInputActionListener"
  },
  "api/VRBuilder.UI.Utils.FontSetter.html": {
    "href": "api/VRBuilder.UI.Utils.FontSetter.html",
    "title": "Class FontSetter | VR Builder Documentation",
    "keywords": "Class FontSetter Inheritance System.Object FontSetter Namespace : VRBuilder.UI.Utils Assembly : VRBuilder.Core.dll Syntax public class FontSetter : MonoBehaviour Constructors FontSetter() Declaration public FontSetter() Fields font Declaration protected Font font Field Value Type Description UnityEngine.Font fontSize Declaration protected int fontSize Field Value Type Description System.Int32 Methods Start() Declaration protected void Start()"
  },
  "api/VRBuilder.UI.Utils.html": {
    "href": "api/VRBuilder.UI.Utils.html",
    "title": "Namespace VRBuilder.UI.Utils | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.UI.Utils Classes FontSetter"
  },
  "api/VRBuilder.Unity.AssetUtility.html": {
    "href": "api/VRBuilder.Unity.AssetUtility.html",
    "title": "Class AssetUtility | VR Builder Documentation",
    "keywords": "Class AssetUtility Inheritance System.Object AssetUtility Namespace : VRBuilder.Unity Assembly : VRBuilder.Core.dll Syntax public static class AssetUtility : Object Methods IsComponentInScene(Component) Declaration public static bool IsComponentInScene(Component component) Parameters Type Name Description UnityEngine.Component component Returns Type Description System.Boolean IsEditingInPrefabMode(GameObject) Declaration public static bool IsEditingInPrefabMode(GameObject gameObject) Parameters Type Name Description UnityEngine.GameObject gameObject Returns Type Description System.Boolean IsInPreviewContext(GameObject) Declaration public static bool IsInPreviewContext(GameObject gameObject) Parameters Type Name Description UnityEngine.GameObject gameObject Returns Type Description System.Boolean IsOnDisk(Object) Declaration public static bool IsOnDisk(Object asset) Parameters Type Name Description UnityEngine.Object asset Returns Type Description System.Boolean"
  },
  "api/VRBuilder.Unity.CoroutineDispatcher.html": {
    "href": "api/VRBuilder.Unity.CoroutineDispatcher.html",
    "title": "Class CoroutineDispatcher | VR Builder Documentation",
    "keywords": "Class CoroutineDispatcher Inheritance System.Object UnitySingleton < CoroutineDispatcher > CoroutineDispatcher Inherited Members UnitySingleton<CoroutineDispatcher>.Awake() UnitySingleton<CoroutineDispatcher>.OnDestroy() UnitySingleton<CoroutineDispatcher>.Instance Namespace : VRBuilder.Unity Assembly : VRBuilder.Core.dll Syntax public class CoroutineDispatcher : UnitySingleton<CoroutineDispatcher> Constructors CoroutineDispatcher() Declaration public CoroutineDispatcher()"
  },
  "api/VRBuilder.Unity.html": {
    "href": "api/VRBuilder.Unity.html",
    "title": "Namespace VRBuilder.Unity | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.Unity Classes AssetUtility CoroutineDispatcher SceneUtils Singleton<T> UnityDebugLogErrorWriter UnitySceneSingleton<T> UnitySingleton<T>"
  },
  "api/VRBuilder.Unity.SceneUtils.html": {
    "href": "api/VRBuilder.Unity.SceneUtils.html",
    "title": "Class SceneUtils | VR Builder Documentation",
    "keywords": "Class SceneUtils Inheritance System.Object SceneUtils Namespace : VRBuilder.Unity Assembly : VRBuilder.Core.dll Syntax public static class SceneUtils : Object Methods ContainsMissingScripts(GameObject) Declaration public static bool ContainsMissingScripts(GameObject gameObject) Parameters Type Name Description UnityEngine.GameObject gameObject Returns Type Description System.Boolean GetActiveAndInactiveComponents<T>() Declaration public static IEnumerable<T> GetActiveAndInactiveComponents<T>() where T : Component Returns Type Description System.Collections.Generic.IEnumerable <T> Type Parameters Name Description T GetActiveAndInactiveGameObjects() Declaration public static IEnumerable<GameObject> GetActiveAndInactiveGameObjects() Returns Type Description System.Collections.Generic.IEnumerable < UnityEngine.GameObject > GetComponentInParentIncludingInactive<T>(GameObject) Declaration public static T GetComponentInParentIncludingInactive<T>(this GameObject gameObject) where T : Component Parameters Type Name Description UnityEngine.GameObject gameObject Returns Type Description T Type Parameters Name Description T GetOrAddComponent<T>(GameObject) Declaration public static T GetOrAddComponent<T>(this GameObject gameObject) where T : Component Parameters Type Name Description UnityEngine.GameObject gameObject Returns Type Description T Type Parameters Name Description T"
  },
  "api/VRBuilder.Unity.Singleton-1.html": {
    "href": "api/VRBuilder.Unity.Singleton-1.html",
    "title": "Class Singleton<T> | VR Builder Documentation",
    "keywords": "Class Singleton<T> Inheritance System.Object Singleton<T> TextToSpeechProviderFactory Namespace : VRBuilder.Unity Assembly : VRBuilder.Core.dll Syntax public abstract class Singleton<T> : Object where T : Singleton<T>, new() Type Parameters Name Description T Constructors Singleton() Declaration protected Singleton() Properties Instance Declaration public static T Instance { get; } Property Value Type Description T"
  },
  "api/VRBuilder.Unity.UnityDebugLogErrorWriter.html": {
    "href": "api/VRBuilder.Unity.UnityDebugLogErrorWriter.html",
    "title": "Class UnityDebugLogErrorWriter | VR Builder Documentation",
    "keywords": "Class UnityDebugLogErrorWriter Inheritance System.Object UnityDebugLogErrorWriter Namespace : VRBuilder.Unity Assembly : VRBuilder.Core.dll Syntax public class UnityDebugLogErrorWriter : TextWriter Constructors UnityDebugLogErrorWriter() Declaration public UnityDebugLogErrorWriter() Properties Encoding Declaration public override Encoding Encoding { get; } Property Value Type Description System.Text.Encoding Methods Flush() Declaration public override void Flush() Write(Char) Declaration public override void Write(char value) Parameters Type Name Description System.Char value Write(Char[], Int32, Int32) Declaration public override void Write(char[] value, int index, int count) Parameters Type Name Description System.Char [] value System.Int32 index System.Int32 count Write(String) Declaration public override void Write(string value) Parameters Type Name Description System.String value"
  },
  "api/VRBuilder.Unity.UnitySceneSingleton-1.html": {
    "href": "api/VRBuilder.Unity.UnitySceneSingleton-1.html",
    "title": "Class UnitySceneSingleton<T> | VR Builder Documentation",
    "keywords": "Class UnitySceneSingleton<T> Inheritance System.Object UnitySceneSingleton<T> InputController Namespace : VRBuilder.Unity Assembly : VRBuilder.Core.dll Syntax public abstract class UnitySceneSingleton<T> : MonoBehaviour where T : UnitySceneSingleton<T> Type Parameters Name Description T Constructors UnitySceneSingleton() Declaration protected UnitySceneSingleton() Properties ConcreteType Declaration public static Type ConcreteType { get; } Property Value Type Description System.Type Exists Declaration public static bool Exists { get; } Property Value Type Description System.Boolean Instance Declaration public static T Instance { get; protected set; } Property Value Type Description T Methods Awake() Declaration protected virtual void Awake() GetName() Declaration protected virtual string GetName() Returns Type Description System.String OnDestroy() Declaration protected virtual void OnDestroy()"
  },
  "api/VRBuilder.Unity.UnitySingleton-1.html": {
    "href": "api/VRBuilder.Unity.UnitySingleton-1.html",
    "title": "Class UnitySingleton<T> | VR Builder Documentation",
    "keywords": "Class UnitySingleton<T> Inheritance System.Object UnitySingleton<T> CoroutineDispatcher Namespace : VRBuilder.Unity Assembly : VRBuilder.Core.dll Syntax public class UnitySingleton<T> : MonoBehaviour where T : UnitySingleton<T> Type Parameters Name Description T Constructors UnitySingleton() Declaration public UnitySingleton() Properties Instance Declaration public static T Instance { get; protected set; } Property Value Type Description T Methods Awake() Declaration protected virtual void Awake() OnDestroy() Declaration protected virtual void OnDestroy()"
  },
  "api/VRBuilder.XRInteraction.Animation.HandAnimatorController.html": {
    "href": "api/VRBuilder.XRInteraction.Animation.HandAnimatorController.html",
    "title": "Class HandAnimatorController | VR Builder Documentation",
    "keywords": "Class HandAnimatorController Inheritance System.Object HandAnimatorController Namespace : VRBuilder.XRInteraction.Animation Assembly : VRBuilder.XRInteraction.dll Syntax public class HandAnimatorController : MonoBehaviour Constructors HandAnimatorController() Declaration public HandAnimatorController() Properties ActivateValue Declaration public float ActivateValue { get; } Property Value Type Description System.Single IsTeleportMode Declaration public bool IsTeleportMode { get; } Property Value Type Description System.Boolean IsUIMode Declaration public bool IsUIMode { get; } Property Value Type Description System.Boolean SelectValue Declaration public float SelectValue { get; } Property Value Type Description System.Single"
  },
  "api/VRBuilder.XRInteraction.Animation.html": {
    "href": "api/VRBuilder.XRInteraction.Animation.html",
    "title": "Namespace VRBuilder.XRInteraction.Animation | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.XRInteraction.Animation Classes HandAnimatorController"
  },
  "api/VRBuilder.XRInteraction.Configuration.html": {
    "href": "api/VRBuilder.XRInteraction.Configuration.html",
    "title": "Namespace VRBuilder.XRInteraction.Configuration | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.XRInteraction.Configuration Classes XRInteractionComponentConfiguration"
  },
  "api/VRBuilder.XRInteraction.Configuration.XRInteractionComponentConfiguration.html": {
    "href": "api/VRBuilder.XRInteraction.Configuration.XRInteractionComponentConfiguration.html",
    "title": "Class XRInteractionComponentConfiguration | VR Builder Documentation",
    "keywords": "Class XRInteractionComponentConfiguration Inheritance System.Object XRInteractionComponentConfiguration Implements IInteractionComponentConfiguration Namespace : VRBuilder.XRInteraction.Configuration Assembly : VRBuilder.XRInteraction.dll Syntax public class XRInteractionComponentConfiguration : Object, IInteractionComponentConfiguration Constructors XRInteractionComponentConfiguration() Declaration public XRInteractionComponentConfiguration() Properties DefaultRigPrefab Declaration public string DefaultRigPrefab { get; } Property Value Type Description System.String DisplayName Declaration public string DisplayName { get; } Property Value Type Description System.String IsXRInteractionComponent Declaration public bool IsXRInteractionComponent { get; } Property Value Type Description System.Boolean Implements IInteractionComponentConfiguration"
  },
  "api/VRBuilder.XRInteraction.Editor.Settings.html": {
    "href": "api/VRBuilder.XRInteraction.Editor.Settings.html",
    "title": "Namespace VRBuilder.XRInteraction.Editor.Settings | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.XRInteraction.Editor.Settings Classes SnapZoneSettings"
  },
  "api/VRBuilder.XRInteraction.Editor.Settings.SnapZoneSettings.html": {
    "href": "api/VRBuilder.XRInteraction.Editor.Settings.SnapZoneSettings.html",
    "title": "Class SnapZoneSettings | VR Builder Documentation",
    "keywords": "Class SnapZoneSettings Inheritance System.Object SettingsObject < SnapZoneSettings > ComponentSettings < SnapZone , SnapZoneSettings > SnapZoneSettings Inherited Members ComponentSettings<SnapZone, SnapZoneSettings>.ApplySettings(SnapZone) SettingsObject<SnapZoneSettings>.Save() SettingsObject<SnapZoneSettings>.Finalize() SettingsObject<SnapZoneSettings>.Instance Namespace : VRBuilder.XRInteraction.Editor.Settings Assembly : VRBuilder.XRInteraction.Editor.dll Syntax public class SnapZoneSettings : ComponentSettings<SnapZone, SnapZoneSettings> Constructors SnapZoneSettings() Declaration public SnapZoneSettings() Fields HighlightColor Declaration public Color HighlightColor Field Value Type Description UnityEngine.Color InteractionLayerMask Declaration public InteractionLayerMask InteractionLayerMask Field Value Type Description UnityEngine.XR.Interaction.Toolkit.InteractionLayerMask InvalidColor Declaration public Color InvalidColor Field Value Type Description UnityEngine.Color ValidationColor Declaration public Color ValidationColor Field Value Type Description UnityEngine.Color Properties HighlightMaterial Declaration public Material HighlightMaterial { get; } Property Value Type Description UnityEngine.Material InvalidMaterial Declaration public Material InvalidMaterial { get; } Property Value Type Description UnityEngine.Material ValidationMaterial Declaration public Material ValidationMaterial { get; } Property Value Type Description UnityEngine.Material Methods ApplySettings(SnapZone) Declaration public override void ApplySettings(SnapZone snapZone) Parameters Type Name Description SnapZone snapZone Overrides VRBuilder.Core.Settings.ComponentSettings<VRBuilder.XRInteraction.Interactors.SnapZone, VRBuilder.XRInteraction.Editor.Settings.SnapZoneSettings>.ApplySettings(VRBuilder.XRInteraction.Interactors.SnapZone)"
  },
  "api/VRBuilder.XRInteraction.Editor.UI.Inspector.html": {
    "href": "api/VRBuilder.XRInteraction.Editor.UI.Inspector.html",
    "title": "Namespace VRBuilder.XRInteraction.Editor.UI.Inspector | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.XRInteraction.Editor.UI.Inspector Classes TeleportationAnchorVRBuilderEditor TeleportationAreaVRBuilderEditor"
  },
  "api/VRBuilder.XRInteraction.Editor.UI.Inspector.TeleportationAnchorVRBuilderEditor.html": {
    "href": "api/VRBuilder.XRInteraction.Editor.UI.Inspector.TeleportationAnchorVRBuilderEditor.html",
    "title": "Class TeleportationAnchorVRBuilderEditor | VR Builder Documentation",
    "keywords": "Class TeleportationAnchorVRBuilderEditor Inheritance System.Object UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportationAnchorEditor TeleportationAnchorVRBuilderEditor Inherited Members UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportationAnchorEditor.m_TeleportAnchorTransform UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportationAnchorEditor.OnEnable() UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportationAnchorEditor.DrawCoreConfiguration() UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.m_TeleportationProvider UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.m_MatchOrientation UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.m_MatchDirectionalInput UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.m_TeleportTrigger UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.m_FilterSelectionByHitNormal UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.m_UpNormalToleranceDegrees UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.m_Teleporting UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.DrawProperties() UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.DrawTeleportationConfiguration() UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.DrawTeleportationConfigurationNested() UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.DrawInteractableEventsNested() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_InteractionManager UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_Colliders UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_InteractionLayers UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_DistanceCalculationMode UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_SelectMode UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_FocusMode UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_StartingHoverFilters UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_StartingSelectFilters UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_StartingInteractionStrengthFilters UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_CustomReticle UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_AllowGazeInteraction UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_AllowGazeSelect UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OverrideGazeTimeToSelect UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_GazeTimeToSelect UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_AllowGazeAssistance UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OverrideTimeToAutoDeselectGaze UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_TimeToAutoDeselectGaze UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_FirstHoverEntered UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_LastHoverExited UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_HoverEntered UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_HoverExited UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_FirstSelectEntered UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_LastSelectExited UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_SelectEntered UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_SelectExited UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_FirstFocusEntered UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_LastFocusExited UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_FocusEntered UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_FocusExited UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_Activated UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_Deactivated UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_InteractionLayerMask UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnFirstHoverEntered UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnLastHoverExited UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnHoverEntered UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnHoverExited UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnSelectEntered UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnSelectExited UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnSelectCanceled UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnActivate UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnDeactivate UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnFirstHoverEnteredCalls UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnLastHoverExitedCalls UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnHoverEnteredCalls UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnHoverExitedCalls UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnSelectEnteredCalls UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnSelectExitedCalls UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnSelectCanceledCalls UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnActivateCalls UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnDeactivateCalls UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawInspector() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawBeforeProperties() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawEvents() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawGazeConfiguration() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawSelectionConfiguration() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawFocusConfiguration() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawFilters() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawFiltersNested() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawInteractionManagement() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawDistanceCalculationMode() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawInteractableEvents() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.IsDeprecatedEventsInUse() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.MigrateEvents(UnityEditor.SerializedObject) UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.MigrateEvents(UnityEngine.Object[]) UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.selectMultipleAllowed UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.focusMultipleAllowed UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.InitializeKnownSerializedPropertyNames() UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.GetDerivedSerializedPropertyNames() UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.DrawDerivedProperties() UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.DrawScript() UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.knownSerializedPropertyNames Namespace : VRBuilder.XRInteraction.Editor.UI.Inspector Assembly : VRBuilder.XRInteraction.Editor.dll Syntax public class TeleportationAnchorVRBuilderEditor : TeleportationAnchorEditor Constructors TeleportationAnchorVRBuilderEditor() Declaration public TeleportationAnchorVRBuilderEditor() Methods ConfigureDefaultTeleportationAnchor(TeleportationAnchorVRBuilder) Declaration protected void ConfigureDefaultTeleportationAnchor(TeleportationAnchorVRBuilder teleportationAnchor) Parameters Type Name Description TeleportationAnchorVRBuilder teleportationAnchor ConfigureTeleportationProximityEntry(TeleportationAnchorVRBuilder) Declaration protected virtual void ConfigureTeleportationProximityEntry(TeleportationAnchorVRBuilder teleportationAnchor) Parameters Type Name Description TeleportationAnchorVRBuilder teleportationAnchor ConfigureVRBuilderDefaults(TeleportationAnchorVRBuilder) Declaration protected virtual void ConfigureVRBuilderDefaults(TeleportationAnchorVRBuilder teleportationAnchor) Parameters Type Name Description TeleportationAnchorVRBuilder teleportationAnchor CreateInteractionAffordance(TeleportationAnchorVRBuilder) Declaration protected virtual void CreateInteractionAffordance(TeleportationAnchorVRBuilder teleportationAnchor) Parameters Type Name Description TeleportationAnchorVRBuilder teleportationAnchor CreateSnapVolume(TeleportationAnchorVRBuilder) Declaration protected virtual void CreateSnapVolume(TeleportationAnchorVRBuilder teleportationAnchor) Parameters Type Name Description TeleportationAnchorVRBuilder teleportationAnchor OnInspectorGUI() Declaration public override void OnInspectorGUI() Overrides UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.OnInspectorGUI()"
  },
  "api/VRBuilder.XRInteraction.Editor.UI.Inspector.TeleportationAreaVRBuilderEditor.html": {
    "href": "api/VRBuilder.XRInteraction.Editor.UI.Inspector.TeleportationAreaVRBuilderEditor.html",
    "title": "Class TeleportationAreaVRBuilderEditor | VR Builder Documentation",
    "keywords": "Class TeleportationAreaVRBuilderEditor Inheritance System.Object UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportationAreaEditor TeleportationAreaVRBuilderEditor Inherited Members UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.m_TeleportationProvider UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.m_MatchOrientation UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.m_MatchDirectionalInput UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.m_TeleportTrigger UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.m_FilterSelectionByHitNormal UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.m_UpNormalToleranceDegrees UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.m_Teleporting UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.OnEnable() UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.DrawProperties() UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.DrawTeleportationConfiguration() UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.DrawTeleportationConfigurationNested() UnityEditor.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractableEditor.DrawInteractableEventsNested() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_InteractionManager UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_Colliders UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_InteractionLayers UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_DistanceCalculationMode UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_SelectMode UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_FocusMode UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_StartingHoverFilters UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_StartingSelectFilters UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_StartingInteractionStrengthFilters UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_CustomReticle UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_AllowGazeInteraction UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_AllowGazeSelect UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OverrideGazeTimeToSelect UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_GazeTimeToSelect UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_AllowGazeAssistance UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OverrideTimeToAutoDeselectGaze UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_TimeToAutoDeselectGaze UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_FirstHoverEntered UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_LastHoverExited UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_HoverEntered UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_HoverExited UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_FirstSelectEntered UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_LastSelectExited UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_SelectEntered UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_SelectExited UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_FirstFocusEntered UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_LastFocusExited UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_FocusEntered UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_FocusExited UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_Activated UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_Deactivated UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_InteractionLayerMask UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnFirstHoverEntered UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnLastHoverExited UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnHoverEntered UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnHoverExited UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnSelectEntered UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnSelectExited UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnSelectCanceled UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnActivate UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnDeactivate UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnFirstHoverEnteredCalls UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnLastHoverExitedCalls UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnHoverEnteredCalls UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnHoverExitedCalls UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnSelectEnteredCalls UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnSelectExitedCalls UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnSelectCanceledCalls UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnActivateCalls UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.m_OnDeactivateCalls UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawInspector() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawBeforeProperties() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawEvents() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawCoreConfiguration() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawGazeConfiguration() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawSelectionConfiguration() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawFocusConfiguration() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawFilters() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawFiltersNested() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawInteractionManagement() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawDistanceCalculationMode() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.DrawInteractableEvents() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.IsDeprecatedEventsInUse() UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.MigrateEvents(UnityEditor.SerializedObject) UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.MigrateEvents(UnityEngine.Object[]) UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.selectMultipleAllowed UnityEditor.XR.Interaction.Toolkit.Interactables.XRBaseInteractableEditor.focusMultipleAllowed UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.InitializeKnownSerializedPropertyNames() UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.GetDerivedSerializedPropertyNames() UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.DrawDerivedProperties() UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.DrawScript() UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.knownSerializedPropertyNames Namespace : VRBuilder.XRInteraction.Editor.UI.Inspector Assembly : VRBuilder.XRInteraction.Editor.dll Syntax public class TeleportationAreaVRBuilderEditor : TeleportationAreaEditor Constructors TeleportationAreaVRBuilderEditor() Declaration public TeleportationAreaVRBuilderEditor() Methods ConfigureVRBuilderDefaults(TeleportationAreaVRBuilder) Declaration protected virtual void ConfigureVRBuilderDefaults(TeleportationAreaVRBuilder teleportationArea) Parameters Type Name Description TeleportationAreaVRBuilder teleportationArea OnInspectorGUI() Declaration public override void OnInspectorGUI() Overrides UnityEditor.XR.Interaction.Toolkit.BaseInteractionEditor.OnInspectorGUI()"
  },
  "api/VRBuilder.XRInteraction.Editor.UI.ProjectSettings.html": {
    "href": "api/VRBuilder.XRInteraction.Editor.UI.ProjectSettings.html",
    "title": "Namespace VRBuilder.XRInteraction.Editor.UI.ProjectSettings | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.XRInteraction.Editor.UI.ProjectSettings Classes SnapZoneSettingsSection"
  },
  "api/VRBuilder.XRInteraction.Editor.UI.ProjectSettings.SnapZoneSettingsSection.html": {
    "href": "api/VRBuilder.XRInteraction.Editor.UI.ProjectSettings.SnapZoneSettingsSection.html",
    "title": "Class SnapZoneSettingsSection | VR Builder Documentation",
    "keywords": "Class SnapZoneSettingsSection Inheritance System.Object ComponentSettingsSection < SnapZone , SnapZoneSettings > SnapZoneSettingsSection Implements IProjectSettingsSection Inherited Members ComponentSettingsSection<SnapZone, SnapZoneSettings>.OnGUI(String) ComponentSettingsSection<SnapZone, SnapZoneSettings>.Title ComponentSettingsSection<SnapZone, SnapZoneSettings>.Description ComponentSettingsSection<SnapZone, SnapZoneSettings>.TargetPageProvider ComponentSettingsSection<SnapZone, SnapZoneSettings>.Priority System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : VRBuilder.XRInteraction.Editor.UI.ProjectSettings Assembly : VRBuilder.XRInteraction.Editor.dll Syntax public class SnapZoneSettingsSection : ComponentSettingsSection<SnapZone, SnapZoneSettings>, IProjectSettingsSection Constructors SnapZoneSettingsSection() Declaration public SnapZoneSettingsSection() Properties Description Declaration public override string Description { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.ProjectSettings.ComponentSettingsSection<VRBuilder.XRInteraction.Interactors.SnapZone, VRBuilder.XRInteraction.Editor.Settings.SnapZoneSettings>.Description Priority Declaration public override int Priority { get; } Property Value Type Description System.Int32 Overrides VRBuilder.Core.Editor.UI.ProjectSettings.ComponentSettingsSection<VRBuilder.XRInteraction.Interactors.SnapZone, VRBuilder.XRInteraction.Editor.Settings.SnapZoneSettings>.Priority Title Declaration public override string Title { get; } Property Value Type Description System.String Overrides VRBuilder.Core.Editor.UI.ProjectSettings.ComponentSettingsSection<VRBuilder.XRInteraction.Interactors.SnapZone, VRBuilder.XRInteraction.Editor.Settings.SnapZoneSettings>.Title Implements IProjectSettingsSection"
  },
  "api/VRBuilder.XRInteraction.Interactables.html": {
    "href": "api/VRBuilder.XRInteraction.Interactables.html",
    "title": "Namespace VRBuilder.XRInteraction.Interactables | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.XRInteraction.Interactables Classes InteractableHighlighter InteractableObject TeleportationAnchorProximityEntry TeleportationAnchorVRBuilder TeleportationAreaVRBuilder"
  },
  "api/VRBuilder.XRInteraction.Interactables.InteractableHighlighter.html": {
    "href": "api/VRBuilder.XRInteraction.Interactables.InteractableHighlighter.html",
    "title": "Class InteractableHighlighter | VR Builder Documentation",
    "keywords": "Class InteractableHighlighter Inheritance System.Object AbstractHighlighter DefaultHighlighter InteractableHighlighter Implements IHighlighter Inherited Members DefaultHighlighter.Reset() DefaultHighlighter.StartHighlighting(Color, String) DefaultHighlighter.StartHighlighting(Material, String) DefaultHighlighter.StartHighlighting(Texture, String) DefaultHighlighter.StartHighlighting(Material) DefaultHighlighter.StopHighlighting() DefaultHighlighter.StopHighlighting(String) DefaultHighlighter.GetHighlightMaterial() DefaultHighlighter.ForceRefreshCachedRenderers() DefaultHighlighter.DisableRenders() DefaultHighlighter.ReenableRenderers() DefaultHighlighter.IsHighlighting AbstractHighlighter.renderers AbstractHighlighter.highlightMeshRenderer AbstractHighlighter.highlightMeshFilter AbstractHighlighter.ClearCacheRenderers() AbstractHighlighter.RefreshCachedRenderers() AbstractHighlighter.CreateHighlightMaterial(Color) AbstractHighlighter.CreateHighlightMaterial(Texture) AbstractHighlighter.CanObjectBeHighlighted() Namespace : VRBuilder.XRInteraction.Interactables Assembly : VRBuilder.XRInteraction.dll Syntax public sealed class InteractableHighlighter : DefaultHighlighter, IHighlighter Constructors InteractableHighlighter() Declaration public InteractableHighlighter() Properties AllowOnGrabHighlight Declaration public bool AllowOnGrabHighlight { get; set; } Property Value Type Description System.Boolean AllowOnTouchHighlight Declaration public bool AllowOnTouchHighlight { get; set; } Property Value Type Description System.Boolean AllowOnUseHighlight Declaration public bool AllowOnUseHighlight { get; set; } Property Value Type Description System.Boolean InteractableObject Declaration public InteractableObject InteractableObject { get; } Property Value Type Description InteractableObject Methods OnDisable() Declaration protected override void OnDisable() Overrides DefaultHighlighter.OnDisable() Implements IHighlighter"
  },
  "api/VRBuilder.XRInteraction.Interactables.InteractableObject.html": {
    "href": "api/VRBuilder.XRInteraction.Interactables.InteractableObject.html",
    "title": "Class InteractableObject | VR Builder Documentation",
    "keywords": "Class InteractableObject Inheritance System.Object UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable InteractableObject Implements UnityEngine.XR.Interaction.Toolkit.Interactables.IXRActivateInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRFocusInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractionStrengthInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable UnityEngine.XR.Interaction.Toolkit.Gaze.IXROverridesGazeAutoSelect UnityEngine.XR.Interaction.Toolkit.Attachment.IFarAttachProvider IInteractableObject Inherited Members UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.OnDestroy() UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.ProcessInteractable(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.GetAttachTransform(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.AddSingleGrabTransformer(UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.AddMultipleGrabTransformer(UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.RemoveSingleGrabTransformer(UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.RemoveMultipleGrabTransformer(UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.ClearSingleGrabTransformers() UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.ClearMultipleGrabTransformers() UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.GetSingleGrabTransformers(System.Collections.Generic.List<UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer>) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.GetMultipleGrabTransformers(System.Collections.Generic.List<UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer>) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.GetSingleGrabTransformerAt(System.Int32) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.GetMultipleGrabTransformerAt(System.Int32) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.MoveSingleGrabTransformerTo(UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer, System.Int32) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.MoveMultipleGrabTransformerTo(UnityEngine.XR.Interaction.Toolkit.Transformers.IXRGrabTransformer, System.Int32) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.GetTargetPose() UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.SetTargetPose(UnityEngine.Pose) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.GetTargetLocalScale() UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.SetTargetLocalScale(UnityEngine.Vector3) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.AddDefaultSingleGrabTransformer() UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.AddDefaultMultipleGrabTransformer() UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.ShouldMatchAttachPosition(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.ShouldMatchAttachRotation(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.ShouldSnapToColliderVolume(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.InitializeDynamicAttachPose(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor, UnityEngine.Transform) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.Grab() UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.Drop() UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.Detach() UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.SetupRigidbodyGrab(UnityEngine.Rigidbody) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.SetupRigidbodyDrop(UnityEngine.Rigidbody) UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.attachTransform UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.secondaryAttachTransform UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.useDynamicAttach UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.matchAttachPosition UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.matchAttachRotation UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.snapToColliderVolume UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.reinitializeDynamicAttachEverySingleGrab UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.attachEaseInTime UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.movementType UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.velocityDamping UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.velocityScale UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.angularVelocityDamping UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.angularVelocityScale UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.trackPosition UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.smoothPosition UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.smoothPositionAmount UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.tightenPosition UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.trackRotation UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.smoothRotation UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.smoothRotationAmount UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.tightenRotation UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.trackScale UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.smoothScale UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.smoothScaleAmount UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.tightenScale UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.throwOnDetach UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.throwSmoothingDuration UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.throwSmoothingCurve UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.throwVelocityScale UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.throwAngularVelocityScale UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.forceGravityOnDetach UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.retainTransformParent UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.startingSingleGrabTransformers UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.startingMultipleGrabTransformers UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.addDefaultGrabTransformers UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.farAttachMode UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.singleGrabTransformersCount UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.multipleGrabTransformersCount UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.attachPointCompatibilityMode UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.gravityOnDetach UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnEnable() UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnDisable() UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetLocalAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetDistanceSqrToInteractor(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetDistance(UnityEngine.Vector3) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetInteractionStrength(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsHovered(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsSelected(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsHovered(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsSelected(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetCustomReticle(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.AttachCustomReticle(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.RemoveCustomReticle(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.CaptureAttachPose(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractionStrengthInteractable.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRActivateInteractable.OnActivated(UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRActivateInteractable.OnDeactivated(UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable.IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable.IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRFocusInteractable.OnFocusEntering(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRFocusInteractable.OnFocusEntered(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRFocusInteractable.OnFocusExiting(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRFocusInteractable.OnFocusExited(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnFocusEntering(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnFocusEntered(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnFocusExiting(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnFocusExited(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.ProcessHoverFilters(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.ProcessSelectFilters(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.ProcessInteractionStrengthFilters(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor, System.Single) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectCanceling(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectCanceled(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnActivate(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnDeactivate(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetDistanceSqrToInteractor(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.AttachCustomReticle(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.RemoveCustomReticle(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable.get_transform() UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.getDistanceOverride UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactionManager UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.colliders UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactionLayers UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.distanceCalculationMode UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.selectMode UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.focusMode UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.customReticle UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.allowGazeInteraction UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.allowGazeSelect UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.overrideGazeTimeToSelect UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.gazeTimeToSelect UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.overrideTimeToAutoDeselectGaze UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.timeToAutoDeselectGaze UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.allowGazeAssistance UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.firstHoverEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.lastHoverExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.hoverEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.hoverExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.firstSelectEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.lastSelectExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.selectEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.selectExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.firstFocusEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.lastFocusExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.focusEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.focusExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.activated UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.deactivated UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactorsHovering UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.isHovered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactorsSelecting UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.firstInteractorSelecting UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.isSelected UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactionGroupsFocusing UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.firstInteractionGroupFocusing UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.isFocused UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.canFocus UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.startingHoverFilters UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.hoverFilters UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.startingSelectFilters UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.selectFilters UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.startingInteractionStrengthFilters UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactionStrengthFilters UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.largestInteractionStrength UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactionLayerMask UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onFirstHoverEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onLastHoverExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onHoverEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onHoverExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onSelectEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onSelectExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onSelectCanceled UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onActivate UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onDeactivate UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onFirstHoverEnter UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onHoverEnter UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onHoverExit UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onLastHoverExit UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onSelectEnter UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onSelectExit UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onSelectCancel UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.hoveringInteractors UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.selectingInteractor UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.registered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.unregistered Namespace : VRBuilder.XRInteraction.Interactables Assembly : VRBuilder.XRInteraction.dll Syntax public class InteractableObject : XRGrabInteractable, IXRActivateInteractable, IXRHoverInteractable, IXRSelectInteractable, IXRFocusInteractable, IXRInteractionStrengthInteractable, IXRInteractable, IXROverridesGazeAutoSelect, IFarAttachProvider, IInteractableObject Constructors InteractableObject() Declaration public InteractableObject() Properties GameObject Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject IsActivated Declaration public bool IsActivated { get; } Property Value Type Description System.Boolean IsGrabbable Declaration public bool IsGrabbable { set; } Property Value Type Description System.Boolean IsInSocket Declaration public bool IsInSocket { get; } Property Value Type Description System.Boolean IsTouchable Declaration public bool IsTouchable { set; } Property Value Type Description System.Boolean IsUsable Declaration public bool IsUsable { set; } Property Value Type Description System.Boolean Rigidbody Declaration public Rigidbody Rigidbody { get; } Property Value Type Description UnityEngine.Rigidbody SelectingSocket Declaration public XRSocketInteractor SelectingSocket { get; } Property Value Type Description UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor Methods Awake() Declaration protected override void Awake() Overrides UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.Awake() ForceStopInteracting() Declaration public virtual void ForceStopInteracting() ForceUse() Declaration public virtual void ForceUse() IsHoverableBy(IXRHoverInteractor) Declaration public override bool IsHoverableBy(IXRHoverInteractor interactor) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.Interactors.IXRHoverInteractor interactor Returns Type Description System.Boolean Overrides UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRHoverInteractor) IsSelectableBy(IXRSelectInteractor) Declaration public override bool IsSelectableBy(IXRSelectInteractor interactor) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor interactor Returns Type Description System.Boolean Overrides UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) OnActivated(ActivateEventArgs) Declaration protected override void OnActivated(ActivateEventArgs arguments) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs arguments Overrides UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnActivated(UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs) OnDeactivated(DeactivateEventArgs) Declaration protected override void OnDeactivated(DeactivateEventArgs arguments) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs arguments Overrides UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnDeactivated(UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs) OnSelectEntering(SelectEnterEventArgs) Declaration protected override void OnSelectEntering(SelectEnterEventArgs arguments) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs arguments Overrides UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) OnSelectExiting(SelectExitEventArgs) Declaration protected override void OnSelectExiting(SelectExitEventArgs arguments) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs arguments Overrides UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) Reset() Declaration protected override void Reset() Overrides UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.Reset() Implements UnityEngine.XR.Interaction.Toolkit.Interactables.IXRActivateInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRFocusInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractionStrengthInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable UnityEngine.XR.Interaction.Toolkit.Gaze.IXROverridesGazeAutoSelect UnityEngine.XR.Interaction.Toolkit.Attachment.IFarAttachProvider IInteractableObject"
  },
  "api/VRBuilder.XRInteraction.Interactables.TeleportationAnchorProximityEntry.html": {
    "href": "api/VRBuilder.XRInteraction.Interactables.TeleportationAnchorProximityEntry.html",
    "title": "Class TeleportationAnchorProximityEntry | VR Builder Documentation",
    "keywords": "Class TeleportationAnchorProximityEntry Inheritance System.Object TeleportationAnchorProximityEntry Namespace : VRBuilder.XRInteraction.Interactables Assembly : VRBuilder.XRInteraction.dll Syntax public class TeleportationAnchorProximityEntry : MonoBehaviour Constructors TeleportationAnchorProximityEntry() Declaration public TeleportationAnchorProximityEntry()"
  },
  "api/VRBuilder.XRInteraction.Interactables.TeleportationAnchorVRBuilder.html": {
    "href": "api/VRBuilder.XRInteraction.Interactables.TeleportationAnchorVRBuilder.html",
    "title": "Class TeleportationAnchorVRBuilder | VR Builder Documentation",
    "keywords": "Class TeleportationAnchorVRBuilder Inheritance System.Object UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportationAnchor TeleportationAnchorVRBuilder Implements UnityEngine.XR.Interaction.Toolkit.Interactables.IXRActivateInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRFocusInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractionStrengthInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable UnityEngine.XR.Interaction.Toolkit.Gaze.IXROverridesGazeAutoSelect UnityEngine.XR.Interaction.Toolkit.Interactors.Visuals.IXRReticleDirectionProvider ILayerConfigurator Inherited Members UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportationAnchor.OnValidate() UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportationAnchor.Reset() UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportationAnchor.OnDrawGizmos() UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportationAnchor.GetAttachTransform(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportationAnchor.RequestTeleport() UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportationAnchor.GenerateTeleportRequest(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor, UnityEngine.RaycastHit, UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportRequest) UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportationAnchor.teleportAnchorTransform UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.Awake() UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.SendTeleportRequest(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.ProcessInteractable(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.GetReticleDirection(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor, UnityEngine.Vector3, UnityEngine.Vector3, System.Nullable<UnityEngine.Vector3>) UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.GenerateTeleportRequest(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor, UnityEngine.RaycastHit, UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportRequest) UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.teleportationProvider UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.matchOrientation UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.matchDirectionalInput UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.teleportTrigger UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.filterSelectionByHitNormal UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.upNormalToleranceDegrees UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.teleporting UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnEnable() UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnDisable() UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnDestroy() UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetLocalAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetDistanceSqrToInteractor(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetDistance(UnityEngine.Vector3) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetInteractionStrength(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsHovered(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsSelected(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsHovered(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsSelected(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetCustomReticle(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.AttachCustomReticle(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.RemoveCustomReticle(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.CaptureAttachPose(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractionStrengthInteractable.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRActivateInteractable.OnActivated(UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRActivateInteractable.OnDeactivated(UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable.IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable.IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRFocusInteractable.OnFocusEntering(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRFocusInteractable.OnFocusEntered(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRFocusInteractable.OnFocusExiting(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRFocusInteractable.OnFocusExited(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnFocusEntering(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnFocusEntered(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnFocusExiting(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnFocusExited(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.ProcessHoverFilters(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.ProcessSelectFilters(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.ProcessInteractionStrengthFilters(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor, System.Single) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectCanceling(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectCanceled(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnActivate(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnDeactivate(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetDistanceSqrToInteractor(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.AttachCustomReticle(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.RemoveCustomReticle(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable.get_transform() UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.getDistanceOverride UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactionManager UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.colliders UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactionLayers UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.distanceCalculationMode UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.selectMode UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.focusMode UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.customReticle UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.allowGazeInteraction UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.allowGazeSelect UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.overrideGazeTimeToSelect UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.gazeTimeToSelect UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.overrideTimeToAutoDeselectGaze UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.timeToAutoDeselectGaze UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.allowGazeAssistance UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.firstHoverEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.lastHoverExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.hoverEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.hoverExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.firstSelectEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.lastSelectExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.selectEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.selectExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.firstFocusEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.lastFocusExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.focusEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.focusExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.activated UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.deactivated UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactorsHovering UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.isHovered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactorsSelecting UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.firstInteractorSelecting UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.isSelected UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactionGroupsFocusing UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.firstInteractionGroupFocusing UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.isFocused UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.canFocus UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.startingHoverFilters UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.hoverFilters UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.startingSelectFilters UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.selectFilters UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.startingInteractionStrengthFilters UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactionStrengthFilters UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.largestInteractionStrength UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactionLayerMask UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onFirstHoverEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onLastHoverExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onHoverEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onHoverExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onSelectEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onSelectExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onSelectCanceled UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onActivate UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onDeactivate UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onFirstHoverEnter UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onHoverEnter UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onHoverExit UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onLastHoverExit UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onSelectEnter UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onSelectExit UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onSelectCancel UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.hoveringInteractors UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.selectingInteractor UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.registered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.unregistered Namespace : VRBuilder.XRInteraction.Interactables Assembly : VRBuilder.XRInteraction.dll Syntax public class TeleportationAnchorVRBuilder : TeleportationAnchor, IXRActivateInteractable, IXRHoverInteractable, IXRSelectInteractable, IXRFocusInteractable, IXRInteractionStrengthInteractable, IXRInteractable, IXROverridesGazeAutoSelect, IXRReticleDirectionProvider, ILayerConfigurator Constructors TeleportationAnchorVRBuilder() Declaration public TeleportationAnchorVRBuilder() Properties LayerSet Declaration public LayerSet LayerSet { get; } Property Value Type Description LayerSet Methods ConfigureLayers(String, String) Declaration public void ConfigureLayers(string interactionLayerName, string raycastLayerName) Parameters Type Name Description System.String interactionLayerName System.String raycastLayerName OnActivated(ActivateEventArgs) Declaration protected override void OnActivated(ActivateEventArgs args) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs args Overrides UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.OnActivated(UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs) OnDeactivated(DeactivateEventArgs) Declaration protected override void OnDeactivated(DeactivateEventArgs args) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs args Overrides UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.OnDeactivated(UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs) OnSelectEntered(SelectEnterEventArgs) Declaration protected override void OnSelectEntered(SelectEnterEventArgs args) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args Overrides UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) OnSelectExited(SelectExitEventArgs) Declaration protected override void OnSelectExited(SelectExitEventArgs args) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args Overrides UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) Implements UnityEngine.XR.Interaction.Toolkit.Interactables.IXRActivateInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRFocusInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractionStrengthInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable UnityEngine.XR.Interaction.Toolkit.Gaze.IXROverridesGazeAutoSelect UnityEngine.XR.Interaction.Toolkit.Interactors.Visuals.IXRReticleDirectionProvider ILayerConfigurator"
  },
  "api/VRBuilder.XRInteraction.Interactables.TeleportationAreaVRBuilder.html": {
    "href": "api/VRBuilder.XRInteraction.Interactables.TeleportationAreaVRBuilder.html",
    "title": "Class TeleportationAreaVRBuilder | VR Builder Documentation",
    "keywords": "Class TeleportationAreaVRBuilder Inheritance System.Object UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportationArea TeleportationAreaVRBuilder Implements UnityEngine.XR.Interaction.Toolkit.Interactables.IXRActivateInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRFocusInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractionStrengthInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable UnityEngine.XR.Interaction.Toolkit.Gaze.IXROverridesGazeAutoSelect UnityEngine.XR.Interaction.Toolkit.Interactors.Visuals.IXRReticleDirectionProvider ILayerConfigurator Inherited Members UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportationArea.GenerateTeleportRequest(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor, UnityEngine.RaycastHit, UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportRequest) UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportationArea.IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.Awake() UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.SendTeleportRequest(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.ProcessInteractable(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.GetReticleDirection(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor, UnityEngine.Vector3, UnityEngine.Vector3, System.Nullable<UnityEngine.Vector3>) UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.GenerateTeleportRequest(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor, UnityEngine.RaycastHit, UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportRequest) UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.teleportationProvider UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.matchOrientation UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.matchDirectionalInput UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.teleportTrigger UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.filterSelectionByHitNormal UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.upNormalToleranceDegrees UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.teleporting UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnEnable() UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnDisable() UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnDestroy() UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetAttachTransform(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetLocalAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetDistanceSqrToInteractor(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetDistance(UnityEngine.Vector3) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetInteractionStrength(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsHovered(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsSelected(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsHovered(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsSelected(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetCustomReticle(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.AttachCustomReticle(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.RemoveCustomReticle(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.CaptureAttachPose(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractionStrengthInteractable.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRActivateInteractable.OnActivated(UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRActivateInteractable.OnDeactivated(UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable.IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable.IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRFocusInteractable.OnFocusEntering(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRFocusInteractable.OnFocusEntered(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRFocusInteractable.OnFocusExiting(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRFocusInteractable.OnFocusExited(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractableRegisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractableUnregisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnFocusEntering(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnFocusEntered(UnityEngine.XR.Interaction.Toolkit.FocusEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnFocusExiting(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnFocusExited(UnityEngine.XR.Interaction.Toolkit.FocusExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.ProcessHoverFilters(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRHoverInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.ProcessSelectFilters(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.ProcessInteractionStrengthFilters(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor, System.Single) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectCanceling(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnSelectCanceled(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnActivate(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnDeactivate(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.GetDistanceSqrToInteractor(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.AttachCustomReticle(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.RemoveCustomReticle(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsHoverableBy(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.IsSelectableBy(UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor) UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable.get_transform() UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.getDistanceOverride UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactionManager UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.colliders UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactionLayers UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.distanceCalculationMode UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.selectMode UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.focusMode UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.customReticle UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.allowGazeInteraction UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.allowGazeSelect UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.overrideGazeTimeToSelect UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.gazeTimeToSelect UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.overrideTimeToAutoDeselectGaze UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.timeToAutoDeselectGaze UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.allowGazeAssistance UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.firstHoverEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.lastHoverExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.hoverEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.hoverExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.firstSelectEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.lastSelectExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.selectEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.selectExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.firstFocusEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.lastFocusExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.focusEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.focusExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.activated UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.deactivated UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactorsHovering UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.isHovered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactorsSelecting UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.firstInteractorSelecting UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.isSelected UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactionGroupsFocusing UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.firstInteractionGroupFocusing UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.isFocused UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.canFocus UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.startingHoverFilters UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.hoverFilters UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.startingSelectFilters UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.selectFilters UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.startingInteractionStrengthFilters UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactionStrengthFilters UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.largestInteractionStrength UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.interactionLayerMask UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onFirstHoverEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onLastHoverExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onHoverEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onHoverExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onSelectEntered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onSelectExited UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onSelectCanceled UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onActivate UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onDeactivate UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onFirstHoverEnter UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onHoverEnter UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onHoverExit UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onLastHoverExit UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onSelectEnter UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onSelectExit UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.onSelectCancel UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.hoveringInteractors UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.selectingInteractor UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.registered UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.unregistered Namespace : VRBuilder.XRInteraction.Interactables Assembly : VRBuilder.XRInteraction.dll Syntax public class TeleportationAreaVRBuilder : TeleportationArea, IXRActivateInteractable, IXRHoverInteractable, IXRSelectInteractable, IXRFocusInteractable, IXRInteractionStrengthInteractable, IXRInteractable, IXROverridesGazeAutoSelect, IXRReticleDirectionProvider, ILayerConfigurator Constructors TeleportationAreaVRBuilder() Declaration public TeleportationAreaVRBuilder() Properties LayerSet Declaration public LayerSet LayerSet { get; } Property Value Type Description LayerSet Methods ConfigureLayers(String, String) Declaration public void ConfigureLayers(string interactionLayerName, string raycastLayerName) Parameters Type Name Description System.String interactionLayerName System.String raycastLayerName OnActivated(ActivateEventArgs) Declaration protected override void OnActivated(ActivateEventArgs args) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs args Overrides UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.OnActivated(UnityEngine.XR.Interaction.Toolkit.ActivateEventArgs) OnDeactivated(DeactivateEventArgs) Declaration protected override void OnDeactivated(DeactivateEventArgs args) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs args Overrides UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.OnDeactivated(UnityEngine.XR.Interaction.Toolkit.DeactivateEventArgs) OnHoverEntered(HoverEnterEventArgs) Declaration protected override void OnHoverEntered(HoverEnterEventArgs args) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs args Overrides UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) OnSelectEntered(SelectEnterEventArgs) Declaration protected override void OnSelectEntered(SelectEnterEventArgs args) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs args Overrides UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) OnSelectExited(SelectExitEventArgs) Declaration protected override void OnSelectExited(SelectExitEventArgs args) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs args Overrides UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) Reset() Declaration protected override void Reset() Overrides UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.BaseTeleportationInteractable.Reset() Implements UnityEngine.XR.Interaction.Toolkit.Interactables.IXRActivateInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRFocusInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractionStrengthInteractable UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable UnityEngine.XR.Interaction.Toolkit.Gaze.IXROverridesGazeAutoSelect UnityEngine.XR.Interaction.Toolkit.Interactors.Visuals.IXRReticleDirectionProvider ILayerConfigurator"
  },
  "api/VRBuilder.XRInteraction.Interactors.html": {
    "href": "api/VRBuilder.XRInteraction.Interactors.html",
    "title": "Namespace VRBuilder.XRInteraction.Interactors | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.XRInteraction.Interactors Classes SnapZone SnapZonePreviewDrawer"
  },
  "api/VRBuilder.XRInteraction.Interactors.SnapZone.html": {
    "href": "api/VRBuilder.XRInteraction.Interactors.SnapZone.html",
    "title": "Class SnapZone | VR Builder Documentation",
    "keywords": "Class SnapZone Inheritance System.Object UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor SnapZone Implements UnityEngine.XR.Interaction.Toolkit.Interactors.IXRHoverInteractor UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor UnityEngine.XR.Interaction.Toolkit.Interactors.IXRTargetPriorityInteractor UnityEngine.XR.Interaction.Toolkit.Interactors.IXRGroupMember UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractionStrengthInteractor UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor ISnapZone Inherited Members UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.OnValidate() UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.OnTriggerEnter(UnityEngine.Collider) UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.OnTriggerStay(UnityEngine.Collider) UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.OnTriggerExit(UnityEngine.Collider) UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.CreateDefaultHoverMaterials() UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.CanHoverSnap(UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.DrawHoveredInteractables() UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.GetHoveredInteractableMaterial(UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.GetValidTargets(System.Collections.Generic.List<UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable>) UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.CanHover(UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.ShouldDrawHoverMesh(UnityEngine.MeshFilter, UnityEngine.Renderer, UnityEngine.Camera) UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.StartSocketSnapping(UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.EndSocketSnapping(UnityEngine.XR.Interaction.Toolkit.Interactables.XRGrabInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.showInteractableHoverMeshes UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.interactableHoverMeshMaterial UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.interactableCantHoverMeshMaterial UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.socketActive UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.interactableHoverScale UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.recycleDelayTime UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.hoverSocketSnapping UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.socketSnappingRadius UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.socketScaleMode UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.fixedScale UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.targetBoundsSize UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.unsortedValidTargets UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.socketSnappingLimit UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.ejectExistingSocketsWhenSnapping UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.isHoverActive UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.isSelectActive UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.selectedInteractableMovementTypeOverride UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.Reset() UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.Start() UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.OnDestroy() UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.GetAttachTransform(UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.GetAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.GetLocalAttachPoseOnSelect(UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.IsHovering(UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.IsSelecting(UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.IsHovering(UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.IsSelecting(UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.CaptureAttachPose(UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.CreateAttachTransform() UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.PreprocessInteractor(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.GetInteractionStrength(UnityEngine.XR.Interaction.Toolkit.Interactables.IXRInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractionStrengthInteractor.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor.OnRegistered(UnityEngine.XR.Interaction.Toolkit.InteractorRegisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor.OnUnregistered(UnityEngine.XR.Interaction.Toolkit.InteractorUnregisteredEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.Interactors.IXRHoverInteractor.CanHover(UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.Interactors.IXRHoverInteractor.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.Interactors.IXRHoverInteractor.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.HoverEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.Interactors.IXRHoverInteractor.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.Interactors.IXRHoverInteractor.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor.CanSelect(UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.SelectExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.HoverExitEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.SelectEnterEventArgs) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.ProcessInteractionStrength(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.StartManualInteraction(UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.EndManualInteraction() UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.ProcessHoverFilters(UnityEngine.XR.Interaction.Toolkit.Interactables.IXRHoverInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.ProcessSelectFilters(UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.Interactors.IXRGroupMember.OnRegisteringAsGroupMember(UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractionGroup) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.Interactors.IXRGroupMember.OnRegisteringAsNonGroupMember() UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.OnHoverEntering(UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.OnHoverEntered(UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.OnHoverExiting(UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.OnHoverExited(UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.OnSelectEntering(UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.OnSelectEntered(UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.OnSelectExiting(UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.OnSelectExited(UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.GetHoverTargets(System.Collections.Generic.List<UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable>) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.GetValidTargets(System.Collections.Generic.List<UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable>) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.CanHover(UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.CanSelect(UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.StartManualInteraction(UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable) UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor.get_transform() UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.interactionManager UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.containingGroup UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.interactionLayers UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.handedness UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.attachTransform UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.keepSelectedTargetValid UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.disableVisualsWhenBlockedInGroup UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.startingSelectedInteractable UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.startingTargetFilter UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.hoverEntered UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.hoverExited UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.selectEntered UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.selectExited UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.targetFilter UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.allowHover UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.allowSelect UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.isPerformingManualInteraction UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.interactablesHovered UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.hasHover UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.interactablesSelected UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.firstInteractableSelected UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.hasSelection UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.startingHoverFilters UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.hoverFilters UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.startingSelectFilters UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.selectFilters UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.largestInteractionStrength UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.targetPriorityMode UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.targetsForSelection UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.interactionLayerMask UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.enableInteractions UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.onHoverEntered UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.onHoverExited UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.onSelectEntered UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.onSelectExited UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.onHoverEnter UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.onHoverExit UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.onSelectEnter UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.onSelectExit UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.selectTarget UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.hoverTargets UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.requireSelectExclusive UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.registered UnityEngine.XR.Interaction.Toolkit.Interactors.XRBaseInteractor.unregistered Namespace : VRBuilder.XRInteraction.Interactors Assembly : VRBuilder.XRInteraction.dll Syntax public class SnapZone : XRSocketInteractor, IXRHoverInteractor, IXRSelectInteractor, IXRTargetPriorityInteractor, IXRGroupMember, IXRInteractionStrengthInteractor, IXRInteractor, ISnapZone Constructors SnapZone() Declaration public SnapZone() Fields ShowHighlightInEditor Declaration public bool ShowHighlightInEditor Field Value Type Description System.Boolean Properties Anchor Declaration public Transform Anchor { get; } Property Value Type Description UnityEngine.Transform ForceSelectInteractable Declaration protected IXRSelectInteractable ForceSelectInteractable { get; set; } Property Value Type Description UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable ForceUnselectInteractable Declaration protected IXRSelectInteractable ForceUnselectInteractable { get; set; } Property Value Type Description UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable HighlightMeshMaterial Declaration public Material HighlightMeshMaterial { get; set; } Property Value Type Description UnityEngine.Material InvalidMaterial Declaration public Material InvalidMaterial { get; set; } Property Value Type Description UnityEngine.Material IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description System.Boolean IsSnapping Declaration public bool IsSnapping { get; } Property Value Type Description System.Boolean IsUnsnapping Declaration public bool IsUnsnapping { get; } Property Value Type Description System.Boolean PreviewMesh Declaration public Mesh PreviewMesh { get; set; } Property Value Type Description UnityEngine.Mesh ShowHighlightObject Declaration public bool ShowHighlightObject { get; set; } Property Value Type Description System.Boolean ShownHighlightObject Declaration public GameObject ShownHighlightObject { get; set; } Property Value Type Description UnityEngine.GameObject SnappedObject Declaration public ISnappableProperty SnappedObject { get; } Property Value Type Description ISnappableProperty ValidationMaterial Declaration public Material ValidationMaterial { get; set; } Property Value Type Description UnityEngine.Material Methods Awake() Declaration protected override void Awake() Overrides UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.Awake() CanSelect(IXRSelectInteractable) Declaration public override bool CanSelect(IXRSelectInteractable interactable) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable interactable Returns Type Description System.Boolean Overrides UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.CanSelect(UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable) CanSnap(ISnappableProperty) Declaration public bool CanSnap(ISnappableProperty target) Parameters Type Name Description ISnappableProperty target Returns Type Description System.Boolean CreateFallbackMaterial() Declaration protected virtual Material CreateFallbackMaterial() Returns Type Description UnityEngine.Material DrawHighlightMesh() Declaration protected virtual void DrawHighlightMesh() ForceRelease() Declaration public bool ForceRelease() Returns Type Description System.Boolean ForceSelect(IXRSelectInteractable) Declaration public virtual void ForceSelect(IXRSelectInteractable interactable) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable interactable ForceSnap(ISnappableProperty) Declaration public bool ForceSnap(ISnappableProperty target) Parameters Type Name Description ISnappableProperty target Returns Type Description System.Boolean ForceUnselect() Declaration public virtual void ForceUnselect() IsValidSnapTarget(IXRSelectInteractable) Declaration protected bool IsValidSnapTarget(IXRSelectInteractable interactable) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.Interactables.IXRSelectInteractable interactable Returns Type Description System.Boolean OnDisable() Declaration protected override void OnDisable() Overrides UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.OnDisable() OnEnable() Declaration protected override void OnEnable() Overrides UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.OnEnable() ProcessInteractor(XRInteractionUpdateOrder.UpdatePhase) Declaration public override void ProcessInteractor(XRInteractionUpdateOrder.UpdatePhase updatePhase) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase updatePhase Overrides UnityEngine.XR.Interaction.Toolkit.Interactors.XRSocketInteractor.ProcessInteractor(UnityEngine.XR.Interaction.Toolkit.XRInteractionUpdateOrder.UpdatePhase) Update() Declaration protected virtual void Update() UpdateHighlightMeshFilterCache() Declaration protected virtual void UpdateHighlightMeshFilterCache() Implements UnityEngine.XR.Interaction.Toolkit.Interactors.IXRHoverInteractor UnityEngine.XR.Interaction.Toolkit.Interactors.IXRSelectInteractor UnityEngine.XR.Interaction.Toolkit.Interactors.IXRTargetPriorityInteractor UnityEngine.XR.Interaction.Toolkit.Interactors.IXRGroupMember UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractionStrengthInteractor UnityEngine.XR.Interaction.Toolkit.Interactors.IXRInteractor ISnapZone"
  },
  "api/VRBuilder.XRInteraction.Interactors.SnapZonePreviewDrawer.html": {
    "href": "api/VRBuilder.XRInteraction.Interactors.SnapZonePreviewDrawer.html",
    "title": "Class SnapZonePreviewDrawer | VR Builder Documentation",
    "keywords": "Class SnapZonePreviewDrawer Inheritance System.Object SnapZonePreviewDrawer Implements IExcludeFromHighlightMesh Namespace : VRBuilder.XRInteraction.Interactors Assembly : VRBuilder.XRInteraction.dll Syntax public class SnapZonePreviewDrawer : MonoBehaviour, IExcludeFromHighlightMesh Constructors SnapZonePreviewDrawer() Declaration public SnapZonePreviewDrawer() Methods UpdateMesh() Declaration public void UpdateMesh() Implements IExcludeFromHighlightMesh"
  },
  "api/VRBuilder.XRInteraction.Locomotion.html": {
    "href": "api/VRBuilder.XRInteraction.Locomotion.html",
    "title": "Namespace VRBuilder.XRInteraction.Locomotion | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.XRInteraction.Locomotion Classes RigManipulationProvider XRLocomotionHandler"
  },
  "api/VRBuilder.XRInteraction.Locomotion.RigManipulationProvider.html": {
    "href": "api/VRBuilder.XRInteraction.Locomotion.RigManipulationProvider.html",
    "title": "Class RigManipulationProvider | VR Builder Documentation",
    "keywords": "Class RigManipulationProvider Inheritance System.Object UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider RigManipulationProvider Inherited Members UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.Awake() UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.TryPrepareLocomotion() UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.TryStartLocomotionImmediately() UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.TryEndLocomotion() UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.OnLocomotionStarting() UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.OnLocomotionEnding() UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.TryQueueTransformation(UnityEngine.XR.Interaction.Toolkit.Locomotion.IXRBodyTransformation) UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.TryQueueTransformation(UnityEngine.XR.Interaction.Toolkit.Locomotion.IXRBodyTransformation, System.Int32) UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.CanBeginLocomotion() UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.BeginLocomotion() UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.EndLocomotion() UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.mediator UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.transformationPriority UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.locomotionState UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.isLocomotionActive UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.canStartMoving UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.system UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.locomotionPhase UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.locomotionStarted UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.locomotionEnded UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.beforeStepLocomotion UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.startLocomotion UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.beginLocomotion UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.endLocomotion Namespace : VRBuilder.XRInteraction.Locomotion Assembly : VRBuilder.XRInteraction.dll Syntax public class RigManipulationProvider : LocomotionProvider Constructors RigManipulationProvider() Declaration public RigManipulationProvider() Methods SetRigPositionAndRotation(Vector3, Quaternion) Declaration public void SetRigPositionAndRotation(Vector3 destinationPosition, Quaternion destinationRotation) Parameters Type Name Description UnityEngine.Vector3 destinationPosition UnityEngine.Quaternion destinationRotation"
  },
  "api/VRBuilder.XRInteraction.Locomotion.XRLocomotionHandler.html": {
    "href": "api/VRBuilder.XRInteraction.Locomotion.XRLocomotionHandler.html",
    "title": "Class XRLocomotionHandler | VR Builder Documentation",
    "keywords": "Class XRLocomotionHandler Inheritance System.Object BaseLocomotionHandler XRLocomotionHandler Namespace : VRBuilder.XRInteraction.Locomotion Assembly : VRBuilder.XRInteraction.dll Syntax public class XRLocomotionHandler : BaseLocomotionHandler Constructors XRLocomotionHandler() Declaration public XRLocomotionHandler() Properties CurrentPosition Declaration public override Vector3 CurrentPosition { get; } Property Value Type Description UnityEngine.Vector3 Overrides BaseLocomotionHandler.CurrentPosition CurrentRotation Declaration public override Quaternion CurrentRotation { get; } Property Value Type Description UnityEngine.Quaternion Overrides BaseLocomotionHandler.CurrentRotation RigManipulationProvider Declaration protected RigManipulationProvider RigManipulationProvider { get; } Property Value Type Description RigManipulationProvider Methods SetPositionAndRotation(Vector3, Quaternion) Declaration public override void SetPositionAndRotation(Vector3 destinationPosition, Quaternion destinationRotation) Parameters Type Name Description UnityEngine.Vector3 destinationPosition UnityEngine.Quaternion destinationRotation Overrides BaseLocomotionHandler.SetPositionAndRotation(Vector3, Quaternion)"
  },
  "api/VRBuilder.XRInteraction.Properties.GrabbableProperty.html": {
    "href": "api/VRBuilder.XRInteraction.Properties.GrabbableProperty.html",
    "title": "Class GrabbableProperty | VR Builder Documentation",
    "keywords": "Class GrabbableProperty Inheritance System.Object ProcessSceneObjectProperty LockableProperty GrabbableProperty Implements IGrabbableProperty ISceneObjectProperty ILockable Inherited Members LockableProperty.unlockers LockableProperty.EmitLocked(Boolean) LockableProperty.EmitUnlocked(Boolean) LockableProperty.SetLocked(Boolean) LockableProperty.RequestLocked(Boolean, IStepData) LockableProperty.LogLockState(Boolean, IStepData, Boolean) LockableProperty.RemoveUnlocker(IStepData) LockableProperty.HandleObjectUnlocked(Object, LockStateChangedEventArgs) LockableProperty.HandleObjectLocked(Object, LockStateChangedEventArgs) LockableProperty.InheritSceneObjectLockState LockableProperty.LockOnParentObjectLock LockableProperty.IsAlwaysUnlocked LockableProperty.IsLocked LockableProperty.EndStepLocked LockableProperty.Locked LockableProperty.Unlocked ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.XRInteraction.Properties Assembly : VRBuilder.XRInteraction.dll Syntax public class GrabbableProperty : LockableProperty, IGrabbableProperty, ISceneObjectProperty, ILockable Constructors GrabbableProperty() Declaration public GrabbableProperty() Properties GrabEnded Declaration public UnityEvent<GrabbablePropertyEventArgs> GrabEnded { get; } Property Value Type Description UnityEngine.Events.UnityEvent < GrabbablePropertyEventArgs > GrabStarted Declaration public UnityEvent<GrabbablePropertyEventArgs> GrabStarted { get; } Property Value Type Description UnityEngine.Events.UnityEvent < GrabbablePropertyEventArgs > Interactable Declaration protected InteractableObject Interactable { get; } Property Value Type Description InteractableObject IsGrabbed Declaration public virtual bool IsGrabbed { get; protected set; } Property Value Type Description System.Boolean Methods EmitGrabbed() Declaration protected void EmitGrabbed() EmitUngrabbed() Declaration protected void EmitUngrabbed() FastForwardGrab() Declaration public void FastForwardGrab() FastForwardUngrab() Declaration public void FastForwardUngrab() ForceSetGrabbed(Boolean) Declaration public void ForceSetGrabbed(bool isGrabbed) Parameters Type Name Description System.Boolean isGrabbed InternalSetLocked(Boolean) Declaration protected override void InternalSetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState Overrides LockableProperty.InternalSetLocked(Boolean) OnDisable() Declaration protected override void OnDisable() Overrides LockableProperty.OnDisable() OnEnable() Declaration protected override void OnEnable() Overrides LockableProperty.OnEnable() Reset() Declaration protected override void Reset() Overrides ProcessSceneObjectProperty.Reset() Implements IGrabbableProperty ISceneObjectProperty ILockable"
  },
  "api/VRBuilder.XRInteraction.Properties.HighlightProperty.html": {
    "href": "api/VRBuilder.XRInteraction.Properties.HighlightProperty.html",
    "title": "Class HighlightProperty | VR Builder Documentation",
    "keywords": "Class HighlightProperty Inheritance System.Object ProcessSceneObjectProperty BaseHighlightProperty HighlightProperty Implements IHighlightProperty ISceneObjectProperty Inherited Members BaseHighlightProperty.EmitHighlightEvent(HighlightPropertyEventArgs) BaseHighlightProperty.EmitUnhighlightEvent(HighlightPropertyEventArgs) BaseHighlightProperty.IsHighlighted BaseHighlightProperty.HighlightStarted BaseHighlightProperty.HighlightEnded ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.XRInteraction.Properties Assembly : VRBuilder.XRInteraction.dll Syntax public class HighlightProperty : BaseHighlightProperty, IHighlightProperty, ISceneObjectProperty Constructors HighlightProperty() Declaration public HighlightProperty() Fields DefaultHighlighter Declaration protected DefaultHighlighter DefaultHighlighter Field Value Type Description DefaultHighlighter Properties CurrentHighlightColor Declaration public Nullable<Color> CurrentHighlightColor { get; protected set; } Property Value Type Description System.Nullable < UnityEngine.Color > Methods Highlight(Color) Declaration public override void Highlight(Color highlightColor) Parameters Type Name Description UnityEngine.Color highlightColor Overrides BaseHighlightProperty.Highlight(Color) Initialize() Declaration protected void Initialize() OnEnable() Declaration protected override void OnEnable() Overrides ProcessSceneObjectProperty.OnEnable() Reset() Declaration protected override void Reset() Overrides ProcessSceneObjectProperty.Reset() Unhighlight() Declaration public override void Unhighlight() Overrides BaseHighlightProperty.Unhighlight() Implements IHighlightProperty ISceneObjectProperty"
  },
  "api/VRBuilder.XRInteraction.Properties.html": {
    "href": "api/VRBuilder.XRInteraction.Properties.html",
    "title": "Namespace VRBuilder.XRInteraction.Properties | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.XRInteraction.Properties Classes GrabbableProperty HighlightProperty SnappableProperty SnapZoneProperty TeleportationProperty TouchableProperty UsableProperty"
  },
  "api/VRBuilder.XRInteraction.Properties.SnappableProperty.html": {
    "href": "api/VRBuilder.XRInteraction.Properties.SnappableProperty.html",
    "title": "Class SnappableProperty | VR Builder Documentation",
    "keywords": "Class SnappableProperty Inheritance System.Object ProcessSceneObjectProperty LockableProperty SnappableProperty Implements ISnappableProperty ISceneObjectProperty ILockable Inherited Members LockableProperty.unlockers LockableProperty.EmitLocked(Boolean) LockableProperty.EmitUnlocked(Boolean) LockableProperty.SetLocked(Boolean) LockableProperty.RequestLocked(Boolean, IStepData) LockableProperty.LogLockState(Boolean, IStepData, Boolean) LockableProperty.RemoveUnlocker(IStepData) LockableProperty.HandleObjectUnlocked(Object, LockStateChangedEventArgs) LockableProperty.HandleObjectLocked(Object, LockStateChangedEventArgs) LockableProperty.InheritSceneObjectLockState LockableProperty.LockOnParentObjectLock LockableProperty.IsAlwaysUnlocked LockableProperty.IsLocked LockableProperty.EndStepLocked LockableProperty.Locked LockableProperty.Unlocked ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.XRInteraction.Properties Assembly : VRBuilder.XRInteraction.dll Syntax public class SnappableProperty : LockableProperty, ISnappableProperty, ISceneObjectProperty, ILockable Constructors SnappableProperty() Declaration public SnappableProperty() Properties AttachedToSnapZone Declaration public UnityEvent<SnappablePropertyEventArgs> AttachedToSnapZone { get; } Property Value Type Description UnityEngine.Events.UnityEvent < SnappablePropertyEventArgs > DetachedFromSnapZone Declaration public UnityEvent<SnappablePropertyEventArgs> DetachedFromSnapZone { get; } Property Value Type Description UnityEngine.Events.UnityEvent < SnappablePropertyEventArgs > Interactable Declaration public XRBaseInteractable Interactable { get; } Property Value Type Description UnityEngine.XR.Interaction.Toolkit.Interactables.XRBaseInteractable IsSnapped Declaration public bool IsSnapped { get; } Property Value Type Description System.Boolean LockObjectOnSnap Declaration public bool LockObjectOnSnap { get; set; } Property Value Type Description System.Boolean SnappedZone Declaration public ISnapZoneProperty SnappedZone { get; set; } Property Value Type Description ISnapZoneProperty Methods EmitSnapped(ISnapZoneProperty) Declaration protected void EmitSnapped(ISnapZoneProperty snapZone) Parameters Type Name Description ISnapZoneProperty snapZone EmitUnsnapped(ISnapZoneProperty) Declaration protected void EmitUnsnapped(ISnapZoneProperty snapZone) Parameters Type Name Description ISnapZoneProperty snapZone FastForwardSnapInto(ISnapZoneProperty) Declaration public void FastForwardSnapInto(ISnapZoneProperty snapZone) Parameters Type Name Description ISnapZoneProperty snapZone InternalSetLocked(Boolean) Declaration protected override void InternalSetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState Overrides LockableProperty.InternalSetLocked(Boolean) OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected virtual void OnEnable() Implements ISnappableProperty ISceneObjectProperty ILockable"
  },
  "api/VRBuilder.XRInteraction.Properties.SnapZoneProperty.html": {
    "href": "api/VRBuilder.XRInteraction.Properties.SnapZoneProperty.html",
    "title": "Class SnapZoneProperty | VR Builder Documentation",
    "keywords": "Class SnapZoneProperty Inheritance System.Object ProcessSceneObjectProperty LockableProperty SnapZoneProperty Implements ISnapZoneProperty ISceneObjectProperty ILockable Inherited Members LockableProperty.unlockers LockableProperty.EmitLocked(Boolean) LockableProperty.EmitUnlocked(Boolean) LockableProperty.SetLocked(Boolean) LockableProperty.RequestLocked(Boolean, IStepData) LockableProperty.LogLockState(Boolean, IStepData, Boolean) LockableProperty.RemoveUnlocker(IStepData) LockableProperty.HandleObjectUnlocked(Object, LockStateChangedEventArgs) LockableProperty.HandleObjectLocked(Object, LockStateChangedEventArgs) LockableProperty.InheritSceneObjectLockState LockableProperty.LockOnParentObjectLock LockableProperty.IsAlwaysUnlocked LockableProperty.IsLocked LockableProperty.EndStepLocked LockableProperty.Locked LockableProperty.Unlocked ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.XRInteraction.Properties Assembly : VRBuilder.XRInteraction.dll Syntax public class SnapZoneProperty : LockableProperty, ISnapZoneProperty, ISceneObjectProperty, ILockable Constructors SnapZoneProperty() Declaration public SnapZoneProperty() Properties HighlightMaterial Declaration public ModeParameter<Material> HighlightMaterial { get; } Property Value Type Description ModeParameter < UnityEngine.Material > IsObjectSnapped Declaration public bool IsObjectSnapped { get; } Property Value Type Description System.Boolean IsShowingHighlightObject Declaration public ModeParameter<bool> IsShowingHighlightObject { get; } Property Value Type Description ModeParameter < System.Boolean > IsShowingHoverMeshes Declaration public ModeParameter<bool> IsShowingHoverMeshes { get; } Property Value Type Description ModeParameter < System.Boolean > LockOnUnsnap Declaration public bool LockOnUnsnap { get; set; } Property Value Type Description System.Boolean ObjectAttached Declaration public UnityEvent<SnapZonePropertyEventArgs> ObjectAttached { get; } Property Value Type Description UnityEngine.Events.UnityEvent < SnapZonePropertyEventArgs > ObjectDetached Declaration public UnityEvent<SnapZonePropertyEventArgs> ObjectDetached { get; } Property Value Type Description UnityEngine.Events.UnityEvent < SnapZonePropertyEventArgs > SnappedObject Declaration public ISnappableProperty SnappedObject { get; set; } Property Value Type Description ISnappableProperty SnapZone Declaration public SnapZone SnapZone { get; } Property Value Type Description SnapZone SnapZoneObject Declaration public GameObject SnapZoneObject { get; } Property Value Type Description UnityEngine.GameObject Methods Configure(IMode) Declaration public void Configure(IMode mode) Parameters Type Name Description IMode mode EmitSnapped() Declaration protected void EmitSnapped() EmitUnsnapped() Declaration protected void EmitUnsnapped() InternalSetLocked(Boolean) Declaration protected override void InternalSetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState Overrides LockableProperty.InternalSetLocked(Boolean) OnDisable() Declaration protected override void OnDisable() Overrides LockableProperty.OnDisable() OnEnable() Declaration protected override void OnEnable() Overrides LockableProperty.OnEnable() Implements ISnapZoneProperty ISceneObjectProperty ILockable"
  },
  "api/VRBuilder.XRInteraction.Properties.TeleportationProperty.html": {
    "href": "api/VRBuilder.XRInteraction.Properties.TeleportationProperty.html",
    "title": "Class TeleportationProperty | VR Builder Documentation",
    "keywords": "Class TeleportationProperty Inheritance System.Object ProcessSceneObjectProperty LockableProperty TeleportationProperty Implements ITeleportationProperty ISceneObjectProperty ILockable Inherited Members LockableProperty.unlockers LockableProperty.EmitLocked(Boolean) LockableProperty.EmitUnlocked(Boolean) LockableProperty.SetLocked(Boolean) LockableProperty.RequestLocked(Boolean, IStepData) LockableProperty.LogLockState(Boolean, IStepData, Boolean) LockableProperty.RemoveUnlocker(IStepData) LockableProperty.HandleObjectUnlocked(Object, LockStateChangedEventArgs) LockableProperty.HandleObjectLocked(Object, LockStateChangedEventArgs) LockableProperty.InheritSceneObjectLockState LockableProperty.LockOnParentObjectLock LockableProperty.IsAlwaysUnlocked LockableProperty.IsLocked LockableProperty.EndStepLocked LockableProperty.Locked LockableProperty.Unlocked ProcessSceneObjectProperty.Reset() ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.XRInteraction.Properties Assembly : VRBuilder.XRInteraction.dll Syntax public class TeleportationProperty : LockableProperty, ITeleportationProperty, ISceneObjectProperty, ILockable Constructors TeleportationProperty() Declaration public TeleportationProperty() Properties IsActive Declaration public bool IsActive { get; } Property Value Type Description System.Boolean OnInitialized Declaration public UnityEvent OnInitialized { get; } Property Value Type Description UnityEngine.Events.UnityEvent TeleportEnded Declaration public UnityEvent<TeleportationPropertyEventArgs> TeleportEnded { get; } Property Value Type Description UnityEngine.Events.UnityEvent < TeleportationPropertyEventArgs > WasUsedToTeleport Declaration public bool WasUsedToTeleport { get; } Property Value Type Description System.Boolean Methods Awake() Declaration protected void Awake() EmitTeleported(TeleportingEventArgs) Declaration protected virtual void EmitTeleported(TeleportingEventArgs args) Parameters Type Name Description UnityEngine.XR.Interaction.Toolkit.Locomotion.Teleportation.TeleportingEventArgs args FastForwardTeleport() Declaration public void FastForwardTeleport() ForceSetTeleported() Declaration public void ForceSetTeleported() Initialize() Declaration public void Initialize() InternalSetLocked(Boolean) Declaration protected override void InternalSetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState Overrides LockableProperty.InternalSetLocked(Boolean) OnDisable() Declaration protected override void OnDisable() Overrides LockableProperty.OnDisable() OnEnable() Declaration protected override void OnEnable() Overrides LockableProperty.OnEnable() Implements ITeleportationProperty ISceneObjectProperty ILockable"
  },
  "api/VRBuilder.XRInteraction.Properties.TouchableProperty.html": {
    "href": "api/VRBuilder.XRInteraction.Properties.TouchableProperty.html",
    "title": "Class TouchableProperty | VR Builder Documentation",
    "keywords": "Class TouchableProperty Inheritance System.Object ProcessSceneObjectProperty LockableProperty TouchableProperty Implements ITouchableProperty ISceneObjectProperty ILockable Inherited Members LockableProperty.unlockers LockableProperty.EmitLocked(Boolean) LockableProperty.EmitUnlocked(Boolean) LockableProperty.SetLocked(Boolean) LockableProperty.RequestLocked(Boolean, IStepData) LockableProperty.LogLockState(Boolean, IStepData, Boolean) LockableProperty.RemoveUnlocker(IStepData) LockableProperty.HandleObjectUnlocked(Object, LockStateChangedEventArgs) LockableProperty.HandleObjectLocked(Object, LockStateChangedEventArgs) LockableProperty.InheritSceneObjectLockState LockableProperty.LockOnParentObjectLock LockableProperty.IsAlwaysUnlocked LockableProperty.IsLocked LockableProperty.EndStepLocked LockableProperty.Locked LockableProperty.Unlocked ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.XRInteraction.Properties Assembly : VRBuilder.XRInteraction.dll Syntax public class TouchableProperty : LockableProperty, ITouchableProperty, ISceneObjectProperty, ILockable Constructors TouchableProperty() Declaration public TouchableProperty() Properties Interactable Declaration protected InteractableObject Interactable { get; } Property Value Type Description InteractableObject IsBeingTouched Declaration public virtual bool IsBeingTouched { get; protected set; } Property Value Type Description System.Boolean PokeFilter Declaration protected XRPokeFilter PokeFilter { get; } Property Value Type Description UnityEngine.XR.Interaction.Toolkit.Filtering.XRPokeFilter TouchEnded Declaration public UnityEvent<TouchablePropertyEventArgs> TouchEnded { get; } Property Value Type Description UnityEngine.Events.UnityEvent < TouchablePropertyEventArgs > TouchStarted Declaration public UnityEvent<TouchablePropertyEventArgs> TouchStarted { get; } Property Value Type Description UnityEngine.Events.UnityEvent < TouchablePropertyEventArgs > Methods EmitTouched() Declaration protected void EmitTouched() EmitUntouched() Declaration protected void EmitUntouched() FastForwardTouch() Declaration public void FastForwardTouch() ForceSetTouched(Boolean) Declaration public void ForceSetTouched(bool isTouched) Parameters Type Name Description System.Boolean isTouched InternalSetLocked(Boolean) Declaration protected override void InternalSetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState Overrides LockableProperty.InternalSetLocked(Boolean) OnDisable() Declaration protected override void OnDisable() Overrides LockableProperty.OnDisable() OnEnable() Declaration protected override void OnEnable() Overrides LockableProperty.OnEnable() Reset() Declaration protected override void Reset() Overrides ProcessSceneObjectProperty.Reset() Implements ITouchableProperty ISceneObjectProperty ILockable"
  },
  "api/VRBuilder.XRInteraction.Properties.UsableProperty.html": {
    "href": "api/VRBuilder.XRInteraction.Properties.UsableProperty.html",
    "title": "Class UsableProperty | VR Builder Documentation",
    "keywords": "Class UsableProperty Inheritance System.Object ProcessSceneObjectProperty LockableProperty UsableProperty Implements IUsableProperty ISceneObjectProperty ILockable Inherited Members LockableProperty.unlockers LockableProperty.EmitLocked(Boolean) LockableProperty.EmitUnlocked(Boolean) LockableProperty.SetLocked(Boolean) LockableProperty.RequestLocked(Boolean, IStepData) LockableProperty.LogLockState(Boolean, IStepData, Boolean) LockableProperty.RemoveUnlocker(IStepData) LockableProperty.HandleObjectUnlocked(Object, LockStateChangedEventArgs) LockableProperty.HandleObjectLocked(Object, LockStateChangedEventArgs) LockableProperty.InheritSceneObjectLockState LockableProperty.LockOnParentObjectLock LockableProperty.IsAlwaysUnlocked LockableProperty.IsLocked LockableProperty.EndStepLocked LockableProperty.Locked LockableProperty.Unlocked ProcessSceneObjectProperty.ToString() ProcessSceneObjectProperty.SceneObject Namespace : VRBuilder.XRInteraction.Properties Assembly : VRBuilder.XRInteraction.dll Syntax public class UsableProperty : LockableProperty, IUsableProperty, ISceneObjectProperty, ILockable Constructors UsableProperty() Declaration public UsableProperty() Properties Interactable Declaration protected InteractableObject Interactable { get; } Property Value Type Description InteractableObject IsBeingUsed Declaration public virtual bool IsBeingUsed { get; protected set; } Property Value Type Description System.Boolean UseEnded Declaration public UnityEvent<UsablePropertyEventArgs> UseEnded { get; } Property Value Type Description UnityEngine.Events.UnityEvent < UsablePropertyEventArgs > UseStarted Declaration public UnityEvent<UsablePropertyEventArgs> UseStarted { get; } Property Value Type Description UnityEngine.Events.UnityEvent < UsablePropertyEventArgs > Methods EmitUsageStarted() Declaration protected void EmitUsageStarted() EmitUsageStopped() Declaration protected void EmitUsageStopped() FastForwardUse() Declaration public void FastForwardUse() ForceSetUsed(Boolean) Declaration public void ForceSetUsed(bool isUsed) Parameters Type Name Description System.Boolean isUsed InternalSetLocked(Boolean) Declaration protected override void InternalSetLocked(bool lockState) Parameters Type Name Description System.Boolean lockState Overrides LockableProperty.InternalSetLocked(Boolean) OnDisable() Declaration protected override void OnDisable() Overrides LockableProperty.OnDisable() OnEnable() Declaration protected override void OnEnable() Overrides LockableProperty.OnEnable() Reset() Declaration protected override void Reset() Overrides ProcessSceneObjectProperty.Reset() Implements IUsableProperty ISceneObjectProperty ILockable"
  },
  "api/VRBuilder.XRInteraction.Rigs.html": {
    "href": "api/VRBuilder.XRInteraction.Rigs.html",
    "title": "Namespace VRBuilder.XRInteraction.Rigs | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.XRInteraction.Rigs Classes XRLegacySetup XRSetup XRSetupBase XRSimulatorSetup"
  },
  "api/VRBuilder.XRInteraction.Rigs.XRLegacySetup.html": {
    "href": "api/VRBuilder.XRInteraction.Rigs.XRLegacySetup.html",
    "title": "Class XRLegacySetup | VR Builder Documentation",
    "keywords": "Class XRLegacySetup Inheritance System.Object InteractionRigProvider XRSetupBase XRLegacySetup Inherited Members XRSetupBase.IsPrefabMissing XRSetupBase.IsEventManagerInScene() InteractionRigProvider.GetPrefab() InteractionRigProvider.OnSetup() InteractionRigProvider.PreSetup() InteractionRigProvider.FindPrefab(String) Namespace : VRBuilder.XRInteraction.Rigs Assembly : VRBuilder.XRInteraction.dll Syntax public class XRLegacySetup : XRSetupBase Constructors XRLegacySetup() Declaration public XRLegacySetup() Properties Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides InteractionRigProvider.Name PrefabName Declaration public override string PrefabName { get; } Property Value Type Description System.String Overrides InteractionRigProvider.PrefabName Methods CanBeUsed() Declaration public override bool CanBeUsed() Returns Type Description System.Boolean Overrides InteractionRigProvider.CanBeUsed() GetSetupTooltip() Declaration public override string GetSetupTooltip() Returns Type Description System.String Overrides InteractionRigProvider.GetSetupTooltip()"
  },
  "api/VRBuilder.XRInteraction.Rigs.XRSetup.html": {
    "href": "api/VRBuilder.XRInteraction.Rigs.XRSetup.html",
    "title": "Class XRSetup | VR Builder Documentation",
    "keywords": "Class XRSetup Inheritance System.Object InteractionRigProvider XRSetupBase XRSetup Inherited Members XRSetupBase.IsPrefabMissing XRSetupBase.IsEventManagerInScene() InteractionRigProvider.GetPrefab() InteractionRigProvider.OnSetup() InteractionRigProvider.PreSetup() InteractionRigProvider.FindPrefab(String) Namespace : VRBuilder.XRInteraction.Rigs Assembly : VRBuilder.XRInteraction.dll Syntax public class XRSetup : XRSetupBase Constructors XRSetup() Declaration public XRSetup() Properties Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides InteractionRigProvider.Name PrefabName Declaration public override string PrefabName { get; } Property Value Type Description System.String Overrides InteractionRigProvider.PrefabName Methods CanBeUsed() Declaration public override bool CanBeUsed() Returns Type Description System.Boolean Overrides InteractionRigProvider.CanBeUsed() GetSetupTooltip() Declaration public override string GetSetupTooltip() Returns Type Description System.String Overrides InteractionRigProvider.GetSetupTooltip()"
  },
  "api/VRBuilder.XRInteraction.Rigs.XRSetupBase.html": {
    "href": "api/VRBuilder.XRInteraction.Rigs.XRSetupBase.html",
    "title": "Class XRSetupBase | VR Builder Documentation",
    "keywords": "Class XRSetupBase Inheritance System.Object InteractionRigProvider XRSetupBase XRLegacySetup XRSetup XRSimulatorSetup Inherited Members InteractionRigProvider.CanBeUsed() InteractionRigProvider.GetSetupTooltip() InteractionRigProvider.GetPrefab() InteractionRigProvider.OnSetup() InteractionRigProvider.PreSetup() InteractionRigProvider.FindPrefab(String) InteractionRigProvider.Name InteractionRigProvider.PrefabName Namespace : VRBuilder.XRInteraction.Rigs Assembly : VRBuilder.XRInteraction.dll Syntax public abstract class XRSetupBase : InteractionRigProvider Constructors XRSetupBase() Declaration public XRSetupBase() Fields IsPrefabMissing Declaration protected readonly bool IsPrefabMissing Field Value Type Description System.Boolean Methods IsEventManagerInScene() Declaration protected bool IsEventManagerInScene() Returns Type Description System.Boolean"
  },
  "api/VRBuilder.XRInteraction.Rigs.XRSimulatorSetup.html": {
    "href": "api/VRBuilder.XRInteraction.Rigs.XRSimulatorSetup.html",
    "title": "Class XRSimulatorSetup | VR Builder Documentation",
    "keywords": "Class XRSimulatorSetup Inheritance System.Object InteractionRigProvider XRSetupBase XRSimulatorSetup Inherited Members XRSetupBase.IsPrefabMissing XRSetupBase.IsEventManagerInScene() InteractionRigProvider.GetPrefab() InteractionRigProvider.OnSetup() InteractionRigProvider.PreSetup() InteractionRigProvider.FindPrefab(String) Namespace : VRBuilder.XRInteraction.Rigs Assembly : VRBuilder.XRInteraction.dll Syntax public class XRSimulatorSetup : XRSetupBase Constructors XRSimulatorSetup() Declaration public XRSimulatorSetup() Properties Name Declaration public override string Name { get; } Property Value Type Description System.String Overrides InteractionRigProvider.Name PrefabName Declaration public override string PrefabName { get; } Property Value Type Description System.String Overrides InteractionRigProvider.PrefabName Methods CanBeUsed() Declaration public override bool CanBeUsed() Returns Type Description System.Boolean Overrides InteractionRigProvider.CanBeUsed() GetSetupTooltip() Declaration public override string GetSetupTooltip() Returns Type Description System.String Overrides InteractionRigProvider.GetSetupTooltip()"
  },
  "api/VRBuilder.XRInteraction.User.html": {
    "href": "api/VRBuilder.XRInteraction.User.html",
    "title": "Namespace VRBuilder.XRInteraction.User | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.XRInteraction.User Classes InteractorLayerConfigurator"
  },
  "api/VRBuilder.XRInteraction.User.InteractorLayerConfigurator.html": {
    "href": "api/VRBuilder.XRInteraction.User.InteractorLayerConfigurator.html",
    "title": "Class InteractorLayerConfigurator | VR Builder Documentation",
    "keywords": "Class InteractorLayerConfigurator Inheritance System.Object InteractorLayerConfigurator Implements ILayerConfigurator Namespace : VRBuilder.XRInteraction.User Assembly : VRBuilder.XRInteraction.dll Syntax public class InteractorLayerConfigurator : MonoBehaviour, ILayerConfigurator Constructors InteractorLayerConfigurator() Declaration public InteractorLayerConfigurator() Properties LayerSet Declaration public LayerSet LayerSet { get; } Property Value Type Description LayerSet Methods ConfigureLayers(String, String) Declaration public void ConfigureLayers(string interactionLayerName, string raycastLayerName) Parameters Type Name Description System.String interactionLayerName System.String raycastLayerName Implements ILayerConfigurator"
  },
  "api/VRBuilder.XRInteraction.XRI.ClimbTeleportDestinationIndicator.html": {
    "href": "api/VRBuilder.XRInteraction.XRI.ClimbTeleportDestinationIndicator.html",
    "title": "Class ClimbTeleportDestinationIndicator | VR Builder Documentation",
    "keywords": "Class ClimbTeleportDestinationIndicator Inheritance System.Object ClimbTeleportDestinationIndicator Namespace : VRBuilder.XRInteraction.XRI Assembly : VRBuilder.XRInteraction.dll Syntax public class ClimbTeleportDestinationIndicator : MonoBehaviour Constructors ClimbTeleportDestinationIndicator() Declaration public ClimbTeleportDestinationIndicator() Properties climbTeleportInteractor Declaration public ClimbTeleportInteractor climbTeleportInteractor { get; set; } Property Value Type Description UnityEngine.XR.Interaction.Toolkit.Locomotion.Climbing.ClimbTeleportInteractor pointerDistance Declaration public float pointerDistance { get; set; } Property Value Type Description System.Single pointerPrefab Declaration public GameObject pointerPrefab { get; set; } Property Value Type Description UnityEngine.GameObject Methods OnDisable() Declaration protected void OnDisable() OnEnable() Declaration protected void OnEnable()"
  },
  "api/VRBuilder.XRInteraction.XRI.ComponentLocatorUtility-1.html": {
    "href": "api/VRBuilder.XRInteraction.XRI.ComponentLocatorUtility-1.html",
    "title": "Class ComponentLocatorUtility<T> | VR Builder Documentation",
    "keywords": "Class ComponentLocatorUtility<T> Inheritance System.Object ComponentLocatorUtility<T> Namespace : VRBuilder.XRInteraction.XRI Assembly : VRBuilder.XRInteraction.dll Syntax public static class ComponentLocatorUtility<T> : Object where T : Component Type Parameters Name Description T Methods FindComponent() Declaration public static T FindComponent() Returns Type Description T FindOrCreateComponent() Declaration public static T FindOrCreateComponent() Returns Type Description T TryFindComponent(out T) Declaration public static bool TryFindComponent(out T component) Parameters Type Name Description T component Returns Type Description System.Boolean"
  },
  "api/VRBuilder.XRInteraction.XRI.html": {
    "href": "api/VRBuilder.XRInteraction.XRI.html",
    "title": "Namespace VRBuilder.XRInteraction.XRI | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.XRInteraction.XRI Classes ClimbTeleportDestinationIndicator ComponentLocatorUtility<T>"
  },
  "api/VRBuilder.XRInteraction.XRI.StarterAssets.ControllerAnimator.html": {
    "href": "api/VRBuilder.XRInteraction.XRI.StarterAssets.ControllerAnimator.html",
    "title": "Class ControllerAnimator | VR Builder Documentation",
    "keywords": "Class ControllerAnimator Inheritance System.Object ControllerAnimator Namespace : VRBuilder.XRInteraction.XRI.StarterAssets Assembly : VRBuilder.XRInteraction.dll Syntax public class ControllerAnimator : MonoBehaviour Constructors ControllerAnimator() Declaration public ControllerAnimator()"
  },
  "api/VRBuilder.XRInteraction.XRI.StarterAssets.ControllerInputActionManager.html": {
    "href": "api/VRBuilder.XRInteraction.XRI.StarterAssets.ControllerInputActionManager.html",
    "title": "Class ControllerInputActionManager | VR Builder Documentation",
    "keywords": "Class ControllerInputActionManager Inheritance System.Object ControllerInputActionManager Namespace : VRBuilder.XRInteraction.XRI.StarterAssets Assembly : VRBuilder.XRInteraction.dll Syntax public class ControllerInputActionManager : MonoBehaviour Constructors ControllerInputActionManager() Declaration public ControllerInputActionManager() Properties smoothMotionEnabled Declaration public bool smoothMotionEnabled { get; set; } Property Value Type Description System.Boolean smoothTurnEnabled Declaration public bool smoothTurnEnabled { get; set; } Property Value Type Description System.Boolean uiScrollingEnabled Declaration public bool uiScrollingEnabled { get; set; } Property Value Type Description System.Boolean Methods OnDisable() Declaration protected void OnDisable() OnEnable() Declaration protected void OnEnable() Start() Declaration protected void Start() Update() Declaration protected void Update()"
  },
  "api/VRBuilder.XRInteraction.XRI.StarterAssets.DynamicMoveProvider.html": {
    "href": "api/VRBuilder.XRInteraction.XRI.StarterAssets.DynamicMoveProvider.html",
    "title": "Class DynamicMoveProvider | VR Builder Documentation",
    "keywords": "Class DynamicMoveProvider Inheritance System.Object UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider DynamicMoveProvider Implements UnityEngine.XR.Interaction.Toolkit.Locomotion.Gravity.IGravityController Inherited Members UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.OnEnable() UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.OnDisable() UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.OnLocomotionStarting() UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.OnLocomotionEnding() UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.Update() UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.MoveRig(UnityEngine.Vector3) UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.TryLockGravity(UnityEngine.XR.Interaction.Toolkit.Locomotion.Gravity.GravityOverride) UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.RemoveGravityLock() UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.UnityEngine.XR.Interaction.Toolkit.Locomotion.Gravity.IGravityController.OnGroundedChanged(System.Boolean) UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.UnityEngine.XR.Interaction.Toolkit.Locomotion.Gravity.IGravityController.OnGravityLockChanged(UnityEngine.XR.Interaction.Toolkit.Locomotion.Gravity.GravityOverride) UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.OnGroundedChanged(System.Boolean) UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.OnGravityLockChanged(UnityEngine.XR.Interaction.Toolkit.Locomotion.Gravity.GravityOverride) UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.moveSpeed UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.inAirControlModifier UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.enableStrafe UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.enableFly UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.forwardSource UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.transformation UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.leftHandMoveInput UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.rightHandMoveInput UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.canProcess UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.gravityPaused UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.useGravity UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.TryPrepareLocomotion() UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.TryStartLocomotionImmediately() UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.TryEndLocomotion() UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.TryQueueTransformation(UnityEngine.XR.Interaction.Toolkit.Locomotion.IXRBodyTransformation) UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.TryQueueTransformation(UnityEngine.XR.Interaction.Toolkit.Locomotion.IXRBodyTransformation, System.Int32) UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.CanBeginLocomotion() UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.BeginLocomotion() UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.EndLocomotion() UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.mediator UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.transformationPriority UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.locomotionState UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.isLocomotionActive UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.canStartMoving UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.system UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.locomotionPhase UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.locomotionStarted UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.locomotionEnded UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.beforeStepLocomotion UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.startLocomotion UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.beginLocomotion UnityEngine.XR.Interaction.Toolkit.Locomotion.LocomotionProvider.endLocomotion Namespace : VRBuilder.XRInteraction.XRI.StarterAssets Assembly : VRBuilder.XRInteraction.dll Syntax public class DynamicMoveProvider : ContinuousMoveProvider, IGravityController Constructors DynamicMoveProvider() Declaration public DynamicMoveProvider() Properties headTransform Declaration public Transform headTransform { get; set; } Property Value Type Description UnityEngine.Transform leftControllerTransform Declaration public Transform leftControllerTransform { get; set; } Property Value Type Description UnityEngine.Transform leftHandMovementDirection Declaration public DynamicMoveProvider.MovementDirection leftHandMovementDirection { get; set; } Property Value Type Description DynamicMoveProvider.MovementDirection rightControllerTransform Declaration public Transform rightControllerTransform { get; set; } Property Value Type Description UnityEngine.Transform rightHandMovementDirection Declaration public DynamicMoveProvider.MovementDirection rightHandMovementDirection { get; set; } Property Value Type Description DynamicMoveProvider.MovementDirection Methods Awake() Declaration protected override void Awake() Overrides UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.Awake() ComputeDesiredMove(Vector2) Declaration protected override Vector3 ComputeDesiredMove(Vector2 input) Parameters Type Name Description UnityEngine.Vector2 input Returns Type Description UnityEngine.Vector3 Overrides UnityEngine.XR.Interaction.Toolkit.Locomotion.Movement.ContinuousMoveProvider.ComputeDesiredMove(UnityEngine.Vector2) Implements UnityEngine.XR.Interaction.Toolkit.Locomotion.Gravity.IGravityController"
  },
  "api/VRBuilder.XRInteraction.XRI.StarterAssets.DynamicMoveProvider.MovementDirection.html": {
    "href": "api/VRBuilder.XRInteraction.XRI.StarterAssets.DynamicMoveProvider.MovementDirection.html",
    "title": "Class DynamicMoveProvider.MovementDirection | VR Builder Documentation",
    "keywords": "Class DynamicMoveProvider.MovementDirection Inheritance System.Object DynamicMoveProvider.MovementDirection Namespace : VRBuilder.XRInteraction.XRI.StarterAssets Assembly : VRBuilder.XRInteraction.dll Syntax public sealed class MovementDirection : Enum Fields HandRelative Declaration public const DynamicMoveProvider.MovementDirection HandRelative Field Value Type Description DynamicMoveProvider.MovementDirection HeadRelative Declaration public const DynamicMoveProvider.MovementDirection HeadRelative Field Value Type Description DynamicMoveProvider.MovementDirection value__ Declaration public int value__ Field Value Type Description System.Int32"
  },
  "api/VRBuilder.XRInteraction.XRI.StarterAssets.GazeInputManager.html": {
    "href": "api/VRBuilder.XRInteraction.XRI.StarterAssets.GazeInputManager.html",
    "title": "Class GazeInputManager | VR Builder Documentation",
    "keywords": "Class GazeInputManager Inheritance System.Object GazeInputManager Namespace : VRBuilder.XRInteraction.XRI.StarterAssets Assembly : VRBuilder.XRInteraction.dll Syntax public class GazeInputManager : MonoBehaviour Constructors GazeInputManager() Declaration public GazeInputManager() Properties fallbackIfEyeTrackingUnavailable Declaration public bool fallbackIfEyeTrackingUnavailable { get; set; } Property Value Type Description System.Boolean Methods Awake() Declaration protected void Awake() OnDestroy() Declaration protected void OnDestroy()"
  },
  "api/VRBuilder.XRInteraction.XRI.StarterAssets.html": {
    "href": "api/VRBuilder.XRInteraction.XRI.StarterAssets.html",
    "title": "Namespace VRBuilder.XRInteraction.XRI.StarterAssets | VR Builder Documentation",
    "keywords": "Namespace VRBuilder.XRInteraction.XRI.StarterAssets Classes ControllerAnimator ControllerInputActionManager DynamicMoveProvider DynamicMoveProvider.MovementDirection GazeInputManager"
  },
  "articles/core/acknowledgements.html": {
    "href": "articles/core/acknowledgements.html",
    "title": "Acknowledgements | VR Builder Documentation",
    "keywords": "Acknowledgements VR Builder is based on the open source edition of the Innoactive Creator . While Innoactive helps enterprises to scale VR training, we adopted this tool to provide value for smaller content creators looking to streamline their VR development processes. Like Innoactive, we believe in the value of open source and will continue to support this approach together with them and the open source community. This means you are welcome to contribute to the VR Builder GitHub repositories ."
  },
  "articles/core/behaviors.html": {
    "href": "articles/core/behaviors.html",
    "title": "Behaviors | VR Builder Documentation",
    "keywords": "Behaviors Behaviors are used to make something happen in the process. Behaviors can be as simple as giving instructions and hints, making new objects visible, or animating an object in the scene. What they have in common is that something happens without requiring an intervention by the user. This section lists the behaviors included in VR Builder."
  },
  "articles/core/behavior-sequence-behavior.html": {
    "href": "articles/core/behavior-sequence-behavior.html",
    "title": "Behavior Sequence | VR Builder Documentation",
    "keywords": "Behavior Sequence Description The Behavior Sequence contains a list of child behaviors which will be activated one after another. A child behavior in the list will not be activated until the previous child behavior has finished its life cycle. Configuration Repeat If checked, the behavior sequence restarts from the top of the child behavior list as soon as the life cycle of the last child behavior in the list has finished. Child behaviors List of all queued behaviors. Add behaviors to the list using the \"Add Behavior\" button. Wait for completion If checked, the behavior sequence will finish the life cycle of each child behavior in the list before it transitions to another step. Even when the \"Repeat\" option is enabled, the execution will transition to the next step after the child behavior list has been completed. Uncheck this option if you want to interrupt the sequence as soon as all conditions of a transition are fulfilled. Example Play an audio file after a set time, for example to give the user some delayed hints. This is a sequence combining a Delay and a Play Audio File behavior. Refer to the documentation for the Delay behavior and the Play Audio File behavior ."
  },
  "articles/core/conditions.html": {
    "href": "articles/core/conditions.html",
    "title": "Conditions | VR Builder Documentation",
    "keywords": "Conditions Conditions are used to determine which transition is used to exit a step. Transitions are evaluated top to bottom, and the first valid one will be selected. To be valid means to have only fulfilled conditions or no conditions at all. A condition usually requires the user's intervention, for example grabbing an object. However this is not always the case: conditions like the timeout condition will trigger regardless of the user's activity. There may also be cases in which other factors in the environment determine if a condition is fulfilled. Conditions need to be active in order to be fulfilled. As soon as a step is active, all containing Conditions are active as well. This section lists the conditions included in VR Builder."
  },
  "articles/core/contact-and-support.html": {
    "href": "articles/core/contact-and-support.html",
    "title": "Contact and Support | VR Builder Documentation",
    "keywords": "Contact and Support Join our official Discord server for quick support from the developer and fellow users. Suggest and vote on new ideas to influence the future of the VR Builder. Make sure to review VR Builder on the Unity Asset Store if you like it. This will help us sustain the development of VR Builder. If you have any issues, please contact contact@mindport.co . We'd love to get your feedback, both positive and constructive. By sharing your feedback you help us improve - thank you in advance! Let's build something extraordinary! You can also visit our website at mindport.co ."
  },
  "articles/core/controller-visualization.html": {
    "href": "articles/core/controller-visualization.html",
    "title": "Controller Visualization | VR Builder Documentation",
    "keywords": "Controller Visualization By default, the VR Builder rig visualizes the VR controllers as generic controllers. With some small modifications on the rig, you can change this to show animated hands that react when pressing the grip or trigger button on your controller. Animated Controllers To show or hide the controller visualization, navigate to Left Controller Visual and Right Controller Visual inside the rig and enable or disable them. Animated Hands To show or hide the hands visualization, navigate to Left Hand Visual and Right Hand Visual inside the rig and enable or disable them. Dual Visualisation It is possible to show both controllers and hands at the same time by having both visualizations active. However, our priority was that the animated hands work well on their own and interact smoothly with the grey Poke Point and the teleport ray. Because of this, the hand and finger positions are not accurately mapped to the controller buttons."
  },
  "articles/core/delay-behavior.html": {
    "href": "articles/core/delay-behavior.html",
    "title": "Delay | VR Builder Documentation",
    "keywords": "Delay Description The Delay behavior completes after the specified amount of time. This step will wait for the duration configured in Delay (in seconds) , even when the user fulfills the required conditions to transition to the next step. Configuration Delay (in seconds) Configure the behavior’s delay duration in seconds. Example Delay (in seconds) = 1.3"
  },
  "articles/core/disable-components-behavior.html": {
    "href": "articles/core/disable-components-behavior.html",
    "title": "Disable Components | VR Builder Documentation",
    "keywords": "Disable Components Description The Disable Components behavior disables all components of the specified type on the given Process Scene Objects . Configuration Object The Process Scene Objects the component is on. Component type A drop-down list allowing to select the component type that will be disabled. Enable at end of step If checked, the components will be enabled again at the end of the step."
  },
  "articles/core/disable-objects-behavior.html": {
    "href": "articles/core/disable-objects-behavior.html",
    "title": "Disable Objects | VR Builder Documentation",
    "keywords": "Disable Objects Description The Disable Objects behavior makes the selected Objects invisible and non-interactive until they are specifically set back to \"enabled\" in a future step. Put into Unity terms, it deactivates the selected game objects. Configuration Objects The Process Scene Objects to be disabled."
  },
  "articles/core/enable-components-behavior.html": {
    "href": "articles/core/enable-components-behavior.html",
    "title": "Enable Components | VR Builder Documentation",
    "keywords": "Enable Components Description The Enable Components behavior enables all components of a specified type on the given Process Scene Objects . Configuration Object The Process Scene Objects the component is on. Component type A drop-down list allowing to select the component type that will be enabled. Disable at end of step If checked, the components will be disabled again at the end of the step."
  },
  "articles/core/enable-objects-behavior.html": {
    "href": "articles/core/enable-objects-behavior.html",
    "title": "Enable Objects | VR Builder Documentation",
    "keywords": "Enable Objects Description The Enable Objects behavior makes the selected Objects visible and interactive until it is specifically set back to \"disabled\" in a future step. Put into Unity terms, it activates the selected game objects. Configuration Object The Process Scene Objects to be enabled."
  },
  "articles/core/grab-object-condition.html": {
    "href": "articles/core/grab-object-condition.html",
    "title": "Grab Object | VR Builder Documentation",
    "keywords": "Grab Object Description The Grab Object condition is fulfilled when the user grabs any of the Objects . The condition is also fulfilled if the user already grabbed any of Objects before the step was activated, that is, if the user is already holding the specified object. Configuration Objects The Process Scene Objects to grab. The objects need to have the Grabbable Property and a collider component configured. The collider defines the area where the user can grab an object. Lock settings If the Inherit Scene Object Lock State is checked on the Grabbable Property , the Process Scene Object will inherit the lock state of its parent Process Scene Object . If the Is Always Unlocked is checked on the Grabbable Property , the Process Scene Object will not be locked by the VR Builder process at runtime. It is still possible to lock the Grabbable Property manually."
  },
  "articles/core/highlight-object-behavior.html": {
    "href": "articles/core/highlight-object-behavior.html",
    "title": "Highlight Object | VR Builder Documentation",
    "keywords": "Highlight Object Description The Highlight Object behavior visually highlights the selected object until the end of a step. For additional highting features you can replace the Default Highlighter with a Interactable Highlighter Script . Select the highlighted Object in the Unity Hierarchy. In the Unity Inspector replace the DefaultHighlighter with a Interactable Highlighter Script . You can define the Color and Material for On Touch Highlight , On Grab Highlight , and On Use Highlight . The object will show the highlight color configured in the Highlight behavior by default. As soon as the object is touched it will change to the color configured in On Touch Highlight . The same happens when the object is grabbed or used. It will display the configured color in ‘On Grab Highlight’ or ‘On Use Highlight’. Configuration Color Color in which the target object will be highlighted. Colors are defined in the RGBA or HSV color channel. By configuring the alpha (A) value, highlights can be translucent. Object The Process Scene Object which should be highlighted."
  },
  "articles/core/installation.html": {
    "href": "articles/core/installation.html",
    "title": "Installation | VR Builder Documentation",
    "keywords": "Installation You can get VR Builder from the Unity Asset Store or from our GitHub . In the first case, you will download and import the VR Builder package from the Package Manager. From GitHub, you can either download a released .UnityPackage or pull the repository and import the package.json file in the Package Manager. If you are creating a new project, select Universal 3D template. Note that it is not necessary to choose the VR template as VR Builder will configure the project for VR automatically. After importing, VR Builder will compile and import some dependencies, then the Project Setup Wizard will appear. Guide Through the Project Setup Wizard The Setup Wizard helps to get new or existing Unity scenes set up and ready to be used with VR Builder. Welcome In the following we will guide you through the different tabs of the VR Builder Setup Wizard. Click Next to proceed to the interaction settings page setup page. Interaction Settings Here you can configure some default settings related to VR Builder interactions. Right now, the only available setting will determine whether a newly created grabbable object will use physics or not. You can also change these options at any time in Project Settings > VR Builder > Settings . XR Hardware Setup Then, if it's not configured already, you will be able to configure your project to work with your VR hardware. If your hardware is not listed but supports OpenXR, select Other. You might need to finish the configuration under Project Settings -> XR Plug-in Management. If your device is not supported, please reach out to us in the VR Builder Community. The packages for the selected hardware will be imported after closing the wizard. Unity Localization Finally you must choose whether to set up localization support or skip it for now. VR Builder supports localization through the Unity Localization package. When setting up localization, the wizard will guide you through the manual steps required for a localized project. It provides a useful checklist and some shortcuts to make the task easier. It also has links that redirect to the relevant Unity documentation. If you decide to skip this setup, VR Builder will work in a single language. You can perform localization setup at any time. We encourage you to use Unity Localization, even if you use just one language. With Unity Localization, you will have all your texts in one place inside the Unity Localization Tables, which in turn will give you the possibility to export and refine them and import them back into Unity. Note that as of January 2024, we do not support asset localization tables. See Resources path/Key for Play Audio Files in the Documentation on how to localize audio files. Help & Documentation This page lists some useful resources to get you started with VR Builder. There is also a checkbox which lets you choose if the demo scene should be loaded after closing the wizard.After clicking Finish, VR Builder is set up! You will need to wait a few seconds for packages to import if you selected a headset from the hardware list. Then, feel free to try out the demo scene or create your own scene by selecting Tools > VR Builder > Scene Setup Wizard… . If the demo scene or any other asset looks solid magenta there is an issue with the shader of the material. The Demo Scenes in VR Builder use the Universal Render Pipeline (URP). If the project uses a different render pipeline, they will not display properly."
  },
  "articles/core/introduction.html": {
    "href": "articles/core/introduction.html",
    "title": "Introduction | VR Builder Documentation",
    "keywords": "Introduction VR Builder helps you create interactive VR applications better and faster. By setting up a Unity scene for VR Builder, you will pair it with a VR Builder process . Through the VR Builder process, you can define a sequence of actions the user can take in the scene and the resulting consequences. You can easily edit a process without coding through VR Builder's process editor. The process editor is a node editor where the user can arrange and connect the steps of the process. Each step is a different node and can include any number of behaviors , which make things happen in the scene. Likewise, a step will have at least one transition leading to another step. Every transition can list several conditions which have to be completed for the transition to trigger. For example, step B can be reached only after the user has grabbed the object specified in step A. Behaviors and conditions are the \"building blocks\" of VR Builder. Several of them are provided in the free open-source version already. Additional behaviors and conditions are available in the commercial version, available on the Unity Asset Store and to Enterprise customers and Content Partners. Since VR Builder is open source and has an open API, you can always write your own behaviors and conditions as well. Behaviors and conditions can interact only with process scene objects . These are game objects in the scene which have a Process Scene Object component on them. The interaction capabilities of a process scene object can be increased by adding scene object properties to it. For example, adding a Grabbable Property component to a game object will let VR Builder know that the object is grabbable, and when it is grabbed. Normally it is not necessary to add properties manually to an object. When an object is dragged in the inspector of a condition or behavior, the user has the option to automatically configure it with a single click. Where possible, properties try to add and configure required components by themselves. If you add a Grabbable Property to a game object, this will automatically be made grabbable in VR (it still needs to have a collider and a mesh, of course). This makes it very easy to start from some generic assets and build a fully interactive scene."
  },
  "articles/core/load-scene-behavior.html": {
    "href": "articles/core/load-scene-behavior.html",
    "title": "Load Scene | VR Builder Documentation",
    "keywords": "Load Scene Description The Load Scene behavior loads a new scene, either additively or not. If a scene is loaded additively, it should not contain a VR Builder process as that could interfere with the process running in the main scene. It still can contain process scene objects which can be interacted with. If a scene is loaded non-additively, this behavior will effectively interrupt the process as the current scene is unloaded and a new one is loaded. Configuration Scene to load Select the scene to be loaded from this dropdown. Note that the scene needs to be added to the Build Settings in order to show in the dropdown. The scene is serialized by path in the process JSON, so moving or renaming it might break this parameter. Load additively If checked, the scene will be loaded additively and the process will keep running. If unchecked, the current scene will be unloaded and thus interrupt the current process. Load asynchronously If checked, the scene will be loaded asynchronously. This can result in smoother performance while loading. A scene is loaded synchronously in the Start phase of the activating process, while asynchronous loading will happen in the Update phase."
  },
  "articles/core/locomotion.html": {
    "href": "articles/core/locomotion.html",
    "title": "Locomotion | VR Builder Documentation",
    "keywords": "Locomotion By default the rig is configured for locomotion types that minimize discomfort. These are movement by teleportation and rotation with snap turn. You can modify the locomotion styles supported by your rig by enabling or disabling the child objects of the Locomotion object on the rig. General Documentation For detailed explanations on all locomotion styles supported please refer to the XR Interaction Toolkit documentation. As of 04.08.2025 VR Builder uses XR Interaction Toolkit version 3.1.2 as the source of the rig. For a more in-depth guide on locomotion in VR we suggest reading the excellent guide at Meta’s locomotion design guidelines . Setup Teleportation in VR Builder Teleportation requires the user to push the right thumbstick forward then release it while pointing at a teleportable surface or anchor. Most of the setup is handled automatically by VR Builder, but a few steps are required for it to work properly. Layer Configuration It is recommended that teleportation use a layer different from normal interactions. By default, VR Builder uses the Teleport raycast layer for controller raycasts and the Teleport XRI interaction layer for teleport actions. When you import VR Builder, it attempts to create both layers at index 31 of their respective layer arrays. Interactors and interactables must be configured with these layers to function. In a new scene, the default rig’s teleport interactors are already set up to raycast and interact on these layers. Anchor and Area Setup When creating a teleportation anchor or area, use the Teleportation Anchor (VR Builder) or Teleportation Area (VR Builder) components instead of the XRI versions. Each component has a button in its inspector that configures compatible settings, including layer masks. The Teleportation Anchor also offers additional options: Set Default Teleportation Anchor : Creates a default anchor by adding a collider to the game object and a graphical representation of the anchor (a feet silouhette inside a circle). Add Snap Volume : Configures the anchor so that the teleportation ray snaps to it when it's in the vicinity. Add Interaction Affordance : Adds feedback when the user interacts with the anchor. Add Proximity Entry : If this is enabled, the user will be considered teleported at the anchor even if they get close by walking or stick locomotion. This can be relevant if the VR Builder process includes a Teleport condition to that anchor. Troubelshoting Teleportation generally works out of the box. If you encounter issues—such as after editing an old scene or moving the XR Teleport layer—you can reset all layers on the rig, anchors, and areas. To do this, select: Tools > VR Builder > Developer > Configure Teleportation Layers . Be aware that this will overwrite existing layer masks and assign the Teleport layer to all affected objects."
  },
  "articles/core/move-object-behavior.html": {
    "href": "articles/core/move-object-behavior.html",
    "title": "Move Object | VR Builder Documentation",
    "keywords": "Move Object Description The Move Object behavior animates the Object to move and rotate (no scaling) to the position and rotation of the Final Position Provider in the time specified in the Duration (in seconds) parameter. Note: If Object was affected by gravity before, it will continue to be affected after this behavior. Configuration Object The Process Scene Object to be moved and rotated (no scaling). Final position provider The Process Scene Object used as the position provider object. It should be placed at the destination position and rotation. Animation duration (in seconds) Time in seconds the animation takes to move and rotate Object to the Final position provider . Example Duration (in seconds) = 1.3 Animation curve Lets you tweak the speed of the animation over time."
  },
  "articles/core/object-nearby-condition.html": {
    "href": "articles/core/object-nearby-condition.html",
    "title": "Object Nearby | VR Builder Documentation",
    "keywords": "Object Nearby Description The Object Nearby condition is fulfilled when the Object is within the specified Range of a Reference object . Configuration Object The Process Scene Object that should be in the radius of the Reference Object . Reference Object The Process Scene Object from which you want to measure the distance. Range In this field, you can set the maximum distance between the Object and the Reference object required to fulfill this condition. Required seconds inside In this field, you can set the time in seconds the Object should stay within the radius Range of the Reference Object ."
  },
  "articles/core/objects-in-collider-condition.html": {
    "href": "articles/core/objects-in-collider-condition.html",
    "title": "Move Objects in Collider | VR Builder Documentation",
    "keywords": "Move Objects in Collider Description The Move Objects in Collider condition is fulfilled when the ( Required object count ) of Objects are within the specified Collider for the required amount of time ( Required seconds inside ) while this condition is active. Configuration Objects The Process Scene Objects to move. If the objects need to be grabbed, they need to have the Grabbable Property and a collider component configured. The collider defines the area where the user can grab an object. Collider The Process Scene Object with the destination collider. Make sure that a collider is present and that the option Is Trigger is enabled. Required seconds inside Set the time in seconds that the Objects should stay inside the Collider . Required object count Set how many Objects should stay inside the Collider at the same time. If this is set to 0 , the condition is always fulfilled. If the Process Scene Objects count is higher than Required object count it's unfulfillable ."
  },
  "articles/core/online-tutorials.html": {
    "href": "articles/core/online-tutorials.html",
    "title": "Online Tutorials | VR Builder Documentation",
    "keywords": "Online Tutorials We offer a constantly expanding list of guides and tutorials on our website. We encourage you to check them out to improve your VR Builder skills. If this is your first time with VR Builder, you should start from the Process Editor and Step Inspector tutorials, which explain the basics of working with VR Builder. In addition,you might also want to check out the guides on how to build standalone VR Builder apps on the Oculus Quest or Pico Neo 3 . You can also check out some guides on the more advanced interactions, like the series on snap zones . Lastly, there are some step-by-step tutorials explaining how to work with our latest paid add-ons. Even if you don't intend to buy the relevant content, they can provide a good overview on how to build a functional process with VR Builder from scratch."
  },
  "articles/core/play-audio-file-behavior.html": {
    "href": "articles/core/play-audio-file-behavior.html",
    "title": "Play Audio File | VR Builder Documentation",
    "keywords": "Play Audio File Description The Play Audio File behavior plays an audio clip loaded from the Resources folder in your project’s asset folder. VR Builder supports all audio file formats supported by Unity, which are: aif wav mp3 ogg Configuration Resources path/Key Insert the relative file path from the Resources folder. Please note that you have to omit the file extension, as shown in the example. You can find more information about this on https://docs.unity3d.com/ScriptReference/Resources.Load.html . If localization is enabled, this should instead be a key in the localization table associated with the process, which contains the localized resources path. Example without localization File to be played: Assets/.../Resources/Sounds/click-sound.ogg Text/Key: Sounds/click-sound Example with localization File to be played: Assets/.../Resources/Sounds/click-sound.ogg Text/Key: click-sound-key Localization table translation: Sounds/click-sound Volume The volume at which the audio should be played. Execution stages By default, steps execute behaviors in the beginning, in their activation stage. This can be changed with the Execution stages dropdown menu: Before Step Execution : The step invokes the behavior during its activation. After Step Execution : Once a transition to another step has been selected and the current step starts deactivating, the behavior is invoked. Before and After Step Execution : Execution at activation and deactivation of a step. Wait for completion By default, the step waits for the audio file to finish. If you want the step to interrupt the audio in case the step is completed, uncheck this option. Note: this might lead to an audio file not even being started, in case the step ends immediately."
  },
  "articles/core/play-tts-audio-behavior.html": {
    "href": "articles/core/play-tts-audio-behavior.html",
    "title": "Play TextToSpeech Audio | VR Builder Documentation",
    "keywords": "Play TextToSpeech Audio Description The Play TextToSpeech Audio behavior uses a synthesized voice to read text. It supports localized text through Unity's Localization package. By default, VR Builder works with a single language. In Project Settings > VR Builder > Language you can specify which language will be used by the TTS engine. VR Builder can also be configured to use the Localization package from Unity to provide localized text. The Project Setup Wizard can guide you through the steps, which are the same as outlined in the official documentation . VR Builder will automatically switch to localized mode when a Localization Settings object has been created. Configuration Text/Key If the project is not configured for localization, this field can be used to enter the text that will be spoken in the language configured in the Project Settings. If localization is configured, meaning that a Localization Settings object has been created, you need instead to enter the key to look for in the localization table associated with the process. Volume The volume at which the audio should be played. Execution stages By default, steps execute behaviors in the beginning, in their activation stage. This can be changed with the Execution stages dropdown menu: Before Step Execution : The step invokes the behavior during its activation. After Step Execution : Once a transition to another step has been selected and the current step starts deactivating, the behavior is invoked. Before and After Step Execution : Execution at activation and deactivation of a step. Wait for completion By default, the step waits for the audio file to finish. If you want the step to interrupt the audio in case the trainee completes the conditions, uncheck this option. Note: this might lead to an audio file not even being started, in case the step ends immediately."
  },
  "articles/core/process-scene-objects.html": {
    "href": "articles/core/process-scene-objects.html",
    "title": "Process Scene Objects | VR Builder Documentation",
    "keywords": "Process Scene Objects The Process Scene Object component acts as a bridge between the VR Builder process and a Unity game object. If the process needs to observe or interact with a game object, it does so through this component. This means that every game object referenced in the process is required to have this component. If a more detailed interaction is needed, property components can be added to provide VR Builder more control on the object. For example, adding a Grabbable Property component will make the object grabbable, and VR Builder will be able to check if the object has been grabbed. The Process Scene Object generates a hidden object ID which identifies the object internally in the VR Builder process. In addition, it is possible to associate an arbitrary number of groups to every scene object. Some behaviors and conditions can interact with unspecified objects within a certain group rather than a specific object with a given object ID. You can select and assign an existing group from the list, or create and directly assign a new group. You can unassign a group from an object by clicking the X button next to it. Groups are stored on a per-project basis and can be created, edited or deleted from Project Settings > VR Builder > Scene Object Groups . It is possible to edit multiple Process Scene Objects at the same time to add or remove groups in bulk. When multiple objects are selected, all groups on all objects are listed. If a group is present only on some of the selected objects, it will be displayed in italics . A default text style means that the group is present on all selected objects."
  },
  "articles/core/quick-start.html": {
    "href": "articles/core/quick-start.html",
    "title": "Quick Start | VR Builder Documentation",
    "keywords": "Quick Start You can get a first impression of VR Builder and its features by accessing the provided demo scene. This sample scene contains a pre-built process that showcases some of the interactions provided in VR Builder. You can automatically open the demo scene at the end of the setup wizard, or use the shortcut in Tools > VR Builder > Demo Scenes > Core . Note that, while the scene can be found and opened from disk, it is necessary to use one of the above methods at least once in order to automatically copy the process file to the StreamingAssets folder, where VR Builder processes are saved. Demo Scene Overview The demo scene showcases how to assemble a process with the building blocks included in VR Builder. More building blocks and features are available as separate add-ons. These building blocks are either conditions or behaviors. Conditions check if the user or the world is in a certain state, and behaviors modify the world state when activated. The process in the demo scene is linear, and will guide the user through different steps. To try out the demo scene, ensure audio volume is up, or you won't be able to hear the spoken instructions! Demo Scene Hierarchy In the hierarchy there are three game objects in parentheses. They are automatically added to every VR Builder scene. PROCESS_CONFIGURATION allows to select the process for the current scene from a list of processes saved in the project. PROCESS_CONTROLLER defines some parameters for processes in this scene like the spectator input bindings and camera. VRB_XR_Setup is the VR rig used by the default XR interaction component. If you are using a different interaction component, for example to use VR Builder in conjunction with Interhaptics or VRIF , you might see a different rig here. By looking at the other objects in the scene, we can see that some have a Process Scene Object component and possibly some \"property\" component. A Process Scene Object has a unique object ID that can be accessed by the process. Properties define how the process can interact with the object. For example, a Grabbable Property will let VR Builder recognize if an object is being grabbed. Adding a Grabbable Property to an object will automatically make it a Process Scene Object and add a few components so you can interact with the object in VR. If these properties are not added manually you will usually be prompted to add them automatically when building the process of your VR application. Customizing the Rig When creating a VR Builder scene, the default rig is created directly in the scene and can be edited or replaced like any game object. If you plan to use the same rig in multiple scenes, just create a prefab of it and manually replace the default rig. The only requirement every VR Builder rig has, independent of the interaction system, is that it must contain a User Scene Object component. This component identifies the rig as the user, and is usually placed on the root of the rig. It should reference the head, hand and base transforms, so that VR Builder can access those positions when needed. If left empty, it will attempt to find the head by itself by looking for the camera's transform. It is also possible to add other Process Scene Object s on the rig in order to use hands, backpacks, toolbelts and so on in behaviors and conditions, depending on the use case. Process Editor The process editor lets you design the process of your VR application. You can open the process editor from Tools > VR Builder > Process Editor or Window > VR Builder > Process Editor . The process editor for the demo scene should look like this. Chapters view On the left, there is a list of chapters. Every chapter is a separate section of the process. They are useful to separate a process in its logical steps and avoid too much clutter in a single graph. You can click on the different chapters to visualize the corresponding graphs. Next to the chapter name, there are icons that allow you to move the chapter up and down in the list, rename it or delete it. Underneath, you can see the Connections breakdown foldout. Expand it to see incoming and outgoing connections for the current chapter. That is, which chapters lead here and to which chapter it is possible to go from this one. The number next to each connection represents the amount of steps that connect to the chapter. When \"Next Chapter\" or \"Previous Chapter\" is listed as a connection, it means the connection is implicit: a path ends with an empty transition, which by default ends the current chapter and starts the next one in order. The demo scene is linear, meaning that each chapter will lead directly to the next and the connection overview only contains implicit connections, but it is possible to create more complex processes that don't follow the chapter list linearly. Graph view On the right, there is a graphical representation of the current chapter. Every node is called a Step . Every step can include a number of Behaviors which can happen when the node is triggered or before leaving it. In the demo scene, those are mostly text to speech instructions and animations. A step can have as many exit points, called Transitions , as needed. Every transition can list a number of Conditions which, if fulfilled, make the transition valid. Select the \"Welcome\" node in the first chapter. This will open the Step Inspector. The window should look like the following. The only behavior is a text to speech instruction that will be triggered when the node is entered. Click on the \"Transitions\" tab. There is a single transition. A step can have multiple transitions, each leading to a different step. In this case, the transition is connected to no other step, so it will end the chapter. The next chapter, \"The magic cube\", will then start. Transitions can include conditions. If they do, they will trigger only when the attached conditions are completed. This transition has no conditions, so it will trigger immediately after the current step has ended, without any input from the user. We encourage you to investigate the other nodes to understand how the demo scene is built. Step Nodes You can create a node by right clicking anywhere in the graph and selecting New , then the type of node you want to create. There are four types of node available in VR Builder core: Step This is the default step node, the main building block for your process. By default, it is empty. This means that nothing will happen, and the execution will immediately proceed to the next node, if present. You will need to add behaviors and conditions to it in the Step Inspector in order to customize it and build your process logic. Step Group This node doesn't let you set conditions and behaviors, but instead can be expanded in a new node graph. It can be populated with other step nodes and act as a \"sub-chapter\" with some self contained logic. This can help keeping the process tidy. You can access the node's graph by clicking the Expand button or double clicking on the node itself. There are also context menu options for expanding the node or ungrouping it - that is, replacing it in the main graph with the logic it contains. This node only has one entry and one exit point. This means that after the contained logic has ended executing, the process will always continue executing from the exit transition of the group node. If you are in a step group graph, it will be indicated on the top left of the process editor. You can click on a parent to return to it. For example, clicking on \"Chapter 1\" will get you back to the main chapter graph. You can also create a group by selecting a sequence of nodes, right clicking and selecting Make group . Since the step group node only has one input and one output, this works best when selecting linked nodes only. Edge cases are resolved as follows: If there are two or more inbound connections in the group, all will lead to the group's input. The first valid node will be chosen as starting step for the group, while the others will have their connection severed. All outgoing connections will be deleted, meaning that the process will continue from the output of the group node after the group has processed. This means that if the selected nodes lead to multiple other nodes, now they will all go through the group's output. The step group output will be connected to the previous target of the first valid grouped node. Other external targets in grouped nodes are ignored, which means that when the group ends it will always go to the same following node. If you encounter one of these edge case, make sure to review your process logic after grouping, as it may have changed. Parallel Execution The parallel execution node lets you execute two or more step sequences at the same time. Execution will continue to the next node once all parallel sequences have completed. Clicking on a Parallel Path button will open a new graph where the path can be edited. This is very similar to a step group, with the difference that there can be multiple parallel paths and they are all executed at the same time. Like with step groups, it is possible to return to the main process by clicking the root chapter on the top left of the process editor. The buttons next to a parallel path let you make the path optional, rename it or delete it. Non-optional paths are displayed with the continuous arrow icon, while the interrupted arrow icon denotes a path that is optional. When all non-optional paths have finished execution, the node ends execution as well. All optional paths are immediately interrupted. It can be useful to create optional paths to display looping animations, recurring hints and so on - they can even be endless loops without an exit point, as they will be interrupted anyway when the step ends. The \"+\" button at the bottom lets you add more parallel paths. There is no theoretical limit to the number of paths in a parallel execution node, but a too high number might impact performance. End Chapter You can use this node as the last node on a sequence. It will immediately end the current chapter and start a new specified chapter, which can be selected from a drop-down list. This is useful to move through the chapters in a non-linear fashion. Note that you are not required to use this node for linear processes, as a chapter will automatically end when an empty transition is reached. In that case, the process will simply proceed to the following chapter."
  },
  "articles/core/release-object-condition.html": {
    "href": "articles/core/release-object-condition.html",
    "title": "Release Object | VR Builder Documentation",
    "keywords": "Release Object Description The Release Objects condition is fulfilled when all of the Objects are released by the user's controller. If the user is not already holding any of the specified objects in hand while this condition is active, it is fulfilled immediately. Configuration Objects The Process Scene Objects to release. The objects need to have the Grabbable Property and a collider component configured. Lock settings If the Inherit Scene Object Lock State is checked on the Grabbable Property , the Process Scene Object will inherit the lock state of its parent Process Scene Object . If the Is Always Unlocked is checked on the Grabbable Property , the Process Scene Object will not be locked by the VR Builder process at runtime. It is still possible to lock the Grabbable Property manually."
  },
  "articles/core/requirements.html": {
    "href": "articles/core/requirements.html",
    "title": "Requirements | VR Builder Documentation",
    "keywords": "Requirements VR Builder supports Unity 6 or later. It uses the Universal Render Pipeline (URP) by default. Using the Built-In Render Pipeline is still possible, but you will need to replace invalid material shaders, such as those on controller models in the Rig. If you are using an older Unity version, we recommend to fall back to VR Builder 4.x which officially supports versions prior to Unity 6. VR Builder works out of the box with any headset compatible with Unity's XR Interaction Toolkit 3.x."
  },
  "articles/core/scale-objects-behavior.html": {
    "href": "articles/core/scale-objects-behavior.html",
    "title": "Scale Objects | VR Builder Documentation",
    "keywords": "Scale Objects Description This behavior scales the target objects over time towards a specified value. Configuration Target Objects The Process Scene Objects to be scaled. All objects will be scaled at the same time. Target Scale The scale on the three axes that will be applied to the target objects. Animation duration (in seconds) Time in seconds it takes for the target objects to reach the target scale. Example Duration (in seconds) = 1.3 Animation curve Lets you tweak how quickly the scale changes over time."
  },
  "articles/core/set-parent-behavior.html": {
    "href": "articles/core/set-parent-behavior.html",
    "title": "Set Parent | VR Builder Documentation",
    "keywords": "Set Parent Description The Set Parent behavior parents an Object to another one in the Unity hierarchy. Configuration Target The Process Scene Object to be parented. Parent The new parent for the target object. Note this can be null, in which case the object will be unparented. Snap to parent transform If checked, the target object will snap to the same position and rotation as the parent object."
  },
  "articles/core/snap-object-condition.html": {
    "href": "articles/core/snap-object-condition.html",
    "title": "Snap Object | VR Builder Documentation",
    "keywords": "Snap Object Description The Snap Object condition is fulfilled when any of the Objects is released into the Zone to snap into , which means the collider of any of the Objects and collider of the Zone overlap. Adapt the collider size of the snap zone to increase or decrease the area where the user can release an Object . Increasing the collider size of the snap zone decreases the required snap precision and simplifies the user's interaction in VR. After the user releases an Object , this is moved to the snap zone's SnapPoint . To adjust this position, change the position of the SnapPoint child object of the Zone to snap into object. Snap Zone Generator For any snappable object you can generate a snap zone that can snap this object and can be used as a Zone to snap into . To do so, navigate to the Snappable Property in Unity's Inspector. You will see two buttons. Clicking on the button Create Snap Zone for this object , you will create a snap zone that only accepts this exact object. Clicking on Create Snap Zone for objects in the same groups will instead create a snap zone that accepts every object that shares at least a group with the current object. Note that the current object will still determine the shape of the snap zone's ghost object. If you want a specific snap zone behavior, like for example accepting only one group of the source object instead of all of them, you'll have to manually change that. Select the snap zone and find the Has Guid Validation component. If you manually created your snap zone, you might have to add this component manually as well. Add to the list the objects you want to be valid for this snap zone. You can reference single objects by object ID, or entire categories of objects via groups. Manual Snap Zone Creation Instead of the automatic generation as described above, you can do those steps also manually. Please refer to available documentation on the XRSocketInteractor from Unity or related sources. You can also make changes to the automatically created snap zone to adapt it to your needs. Please note that these changes might impact the process logic. Feed Forward for Snap Zones Snap zones are restricted to which objects can be snapped. This means every object can be valid (i.e. it can be snapped to this zone) or invalid (it can not be snapped to this zone) for a snap zone. This is achieved with validation components on the snap zone, for example the Has Guid Validation component. You can use this component to configure which specific objects or groups are accepted by the snap zone. In case you are moving a valid object into a zone, the snap zone color changes to ‘Validation Color’ (green), providing the user in VR with positive feedback. In case you are moving an invalid object into a zone, the snap zone color changes to ‘Invalid Color’ (red), giving the user the feedback that this is the wrong object for this zone. You can modify the colors and materials to be used in the Snap Zones parameters and settings. Snap Zone Parameters and Settings To change the highlight color or validation hover material of a dedicated snap zone, navigate to the snap zone object in the Unity Inspector. You will find the Snap Zone Parameters and Settings in the script Snap Zone . To change the colors and materials of all snap zones in the scene, select them in the VR Builder snap zone settings and press 'Apply settings in current scene'. The snap zone settings can be found in the project settings in tab VR Builder > Settings > Snap Zones . Configuration Objects The Process Scene Objects to place (snap). The objects needs to have the Snappable Property and a collider component configured. Zone to snap into This field contains the Process Scene Object where any of the Objects are required to be snapped. Make sure the object has a collider component with the Is Trigger property enabled . Lock settings If the Inherit Scene Object Lock State is checked on the Snappable Property , the Process Scene Object will inherit the lock state of its parent Process Scene Object . If the Is Always Unlocked is checked on the Snappable Property , the Process Scene Object will not be locked by the VR Builder process at runtime. It is still possible to lock the Snappable Property manually."
  },
  "articles/core/spawn-confetti-behavior.html": {
    "href": "articles/core/spawn-confetti-behavior.html",
    "title": "Spawn Confetti | VR Builder Documentation",
    "keywords": "Spawn Confetti Description The Spawn Confetti behavior causes confetti to fall above the selected Object . It can be useful as visual feedback or celebration for completing a task successfully. Configuration Spawn Above User If checked, the spawn position will be above the user rather than on the specified Process Scene Object . Position Provider Specifies where the confetti should spawn if not set to spawn above the user. Confetti Machine Path Path to the confetti machine prefab, relative to a Resources folder. Use the default one or point to your custom confetti machine. Area Radius Radius around the position provider in which confetti will be spawned. Duration Duration of the visual effect in seconds. Execution stages By default, steps execute behaviors in the beginning, in their activation stage. This can be changed with the Execution stages dropdown menu: Before Step Execution : The step invokes the behavior during its activation. After Step Execution : Once a transition to another step has been selected and the current step starts deactivating, the behavior is invoked. Before and After Step Execution : Execution at activation and deactivation of a step."
  },
  "articles/core/teleport-condition.html": {
    "href": "articles/core/teleport-condition.html",
    "title": "Teleport | VR Builder Documentation",
    "keywords": "Teleport Description The Teleport condition is fulfilled when the user teleports to any of the referenced Teleportation Points . Previous teleportation actions made into a Teleportation Point are not considered. If an anchor used as Teleportation Point has proximity detection enabled, the condition will be fulfilled not only if the user teleports to it, but also if they move close to it with continuous movement or by walking in the room. You can activate proximity detection when you need the user to be in a specific location, regardless of whether they teleport or arrive there by other locomotion types. The provided Teleportation Property is based on the Unity XR Interaction Toolkit's Teleportation Anchor . For further reference, please check out the XR Interaction Toolkit documentation . Configuring a Teleportation Point The Teleportation Property can be set as a Default Teleportation Anchor by clicking on the Set Default Teleportation Anchor button. You can find it when selecting the Teleportation Point and viewing it in the Unity Inspector. This will configure the attached Teleportation Anchor . It will provide a visual element in the Unity Editor that helps placing the Teleportation Point in the scene. This visual element will also be shown in the virtual world during training execution to guide the user. Configuration Teleportation Points The Teleportation Properties of which one, the user should teleport to."
  },
  "articles/core/timeout-condition.html": {
    "href": "articles/core/timeout-condition.html",
    "title": "Timeout | VR Builder Documentation",
    "keywords": "Timeout Description The Timeout condition is fulfilled when the time specified in Wait (in seconds) has elapsed. This can make sense as a \"fallback\" condition. For example, if the user does not complete condition X in the allotted amount of time, the timeout condition will trigger leading to a different step with different consequences. Configuration Wait (in seconds) Set the time in seconds that should elapse before this condition is fulfilled."
  },
  "articles/core/touch-object-condition.html": {
    "href": "articles/core/touch-object-condition.html",
    "title": "Touch Object | VR Builder Documentation",
    "keywords": "Touch Object Description The Touch Object condition is fulfilled when any of the Objects is touched by the user's controller. If a user is already touching the any of the objects while this condition is active, this condition is fulfilled immediately. Configuration Object The Process Scene Objects to be touched. The objects need to have the Touchable Property and a collider component configured. Lock settings If the Inherit Scene Object Lock State is checked on the Touchable Property , the Process Scene Object will inherit the lock state of its parent Process Scene Object . If the Is Always Unlocked is checked on the Touchable Property , the Process Scene Object will not be locked by the VR Builder process at runtime. It is still possible to lock the Touchable Property manually."
  },
  "articles/core/tunneling-vignette.html": {
    "href": "articles/core/tunneling-vignette.html",
    "title": "| VR Builder Documentation",
    "keywords": "Tunneling Vignette The tunneling vignette improves comfort during continuous movement. By default, the vignette is configured to activate whenever any continuous Locomotion method is in use on the rig. Note that continuous locomotion methods are disabled by default on the VR Builder rig, so the vignette will only be used if you manually enabled them. Configure Tunneling Vignette To configure it, search for the TunnelingVignette game object in the rig. For detailed explanations of the tunneling vignette settings, refer to the XR Interaction Toolkit documentation ."
  },
  "articles/core/unsnap-object-behavior.html": {
    "href": "articles/core/unsnap-object-behavior.html",
    "title": "Unsnap Object | VR Builder Documentation",
    "keywords": "Unsnap Object Description The Unsnap Object behavior unsnaps a snapped object from a snap zone. This can be useful in case the object needs to be further manipulated by the process. Configuration Either the object or the snap zone can be left null. This will result in either the object unsnapping from any snap zone it is in, or in the unsnapping of whatever object is snapped to the specified snap zone. If both are specified, the unsnap will occur only if the specified object is snapped to the specified snap zone. Object to unsnap The Process Scene Object to unsnap. Snap zone to unsnap The Snap Zone from which the object will be unsnapped."
  },
  "articles/core/updating.html": {
    "href": "articles/core/updating.html",
    "title": "Updating | VR Builder Documentation",
    "keywords": "Updating To update to a new version of VR Builder, it is recommended to remove the package before importing the new one. It is also good practice to backup/commit your project before updating the package. Removing the old package is necessary in order to ensure that obsolete files are removed. When an Asset Store package is updated, it only adds new files and updates the existing ones - no files are removed, which could result in redundant or conflicting code. To remove the asset, open the Package Manager and show the packages in the project. Find VR Builder and click Remove . You can then import the new package from the Package Manager. Note: The demo processes might have changed in the updated version of the package. If you plan to use the demo scenes, ensure to delete the demo processes from the StreamingAssets/Processes folder before importing the new package, or the existing process files will not be overwritten. Upgrading to major versions Major VR Builder releases are usually not completely compatible with the previous version. Updating to them requires extra care, and is not recommended in production unless you need some of the new features. The specifics can vary depending on the release, and we will provide detailed upgrade guides when necessary. In particular, VR Builder 5 represents a clean cut with the past as it introduces support for Unity 6, XRI 3 and URP. Currently, it is not possible to automatically upgrade a project created with VR Builder 4 to version 5. If you need to do so, contact us and we will support you with the matter."
  },
  "articles/core/use-object-condition.html": {
    "href": "articles/core/use-object-condition.html",
    "title": "Use Object | VR Builder Documentation",
    "keywords": "Use Object Description The Use Objects condition is fulfilled when any of the Objects are used by pressing the Use button of the controller while being touched or grabbed. Configuration Objects The Process Scene Objects of which one is required to be used. The Objects need to have the Usable Property and a collider component configured. Lock settings If the Inherit Scene Object Lock State is checked on the Usable Property , the Process Scene Object will inherit the lock state of its parent Process Scene Object . If the Is Always Unlocked is checked on the Usable Property , the Process Scene Object will not be locked by the VR Builder process at runtime. It is still possible to lock the Usable Property manually."
  },
  "articles/core/xr-rig.html": {
    "href": "articles/core/xr-rig.html",
    "title": "XR Rig | VR Builder Documentation",
    "keywords": "XR Rig The XR Rig is a game object that anchors the user’s head mounted display, controllers, or user’s hands when using hand tracking within the virtual space. Essentially, it represents the user in the scene. On the rig, you can configure which types of locomotion and interaction are available to the user. VR Builder XR Rig When creating a new scene with the VR Builder Scene Setup Wizard, you get a VRB_XR_Setup game object automatically added to the scene. VRB_XR_Setup is the VR Builder XR Rig and is built upon the suggested standards set by the Unity XR Interaction Toolkit. Therefore, VRB_XR_Setup is very similar to the XR Origin (XR Rig) found in the XR Interaction Toolkit samples but has some additional VR Builder–specific scripts added."
  },
  "articles/pro/animations/animate-transform-behavior.html": {
    "href": "articles/pro/animations/animate-transform-behavior.html",
    "title": "Animate Transform | VR Builder Documentation",
    "keywords": "Animate Transform Introduction This behavior animates a game object by changing its position, rotation and scale over time until it matches those of a \"transform provider\" game object. It is possible to set how position, rotation and scale are animated over time through separate animation curves. The behavior can be found under Animation > Animate Transform . Inspector The Animate Transform behavior accepts the following parameters. Object : The game object to be moved. Final transform provider : The game object which provides the final position, rotation and scale of the animation. Duration (in seconds) : Duration in seconds of the animation. Position curve, Rotation curve, Scale curve : These animation curves determine the object's transform at a given point in time. The curve can have values from 0 (the object's original position, rotation or scale) to 1 (the transform provider's position, rotation or scale). Note that the length of the curves is normalized: while it is possible to have the time axis greater or lesser than 1, this won't affect the duration of the animation - it is recommended to leave the time axis to the default length of 0 to 1. Ping pong : If this is checked, the animation will play backwards after finishing, resulting in the object animating and then returning to the original position. Note the total duration will be twice the value in the Duration field. This is similar to creating a symmetrical velocity curve, like for example a bell shape. Repeats : The number of times the animation will repeat. Note that each repeat will increase the duration of the animation by its full amount. If ping pong is set, it will be included in every repeat."
  },
  "articles/pro/animations/behaviors.html": {
    "href": "articles/pro/animations/behaviors.html",
    "title": "Behaviors | VR Builder Documentation",
    "keywords": "Behaviors The Animations add-on includes the following behaviors."
  },
  "articles/pro/animations/contact.html": {
    "href": "articles/pro/animations/contact.html",
    "title": "Contact | VR Builder Documentation",
    "keywords": "Contact Join our official Discord server for quick support from the developer and fellow users. Suggest and vote on new ideas to influence the future of the VR Builder. Make sure to review our asset if you like it. It will help us immensely. If you have any issues, please contact contact@mindport.co . We’d love to get your feedback, both positive and constructive. By sharing your feedback you help us improve - thank you in advance! Let’s build something extraordinary! You can also visit our website at mindport.co ."
  },
  "articles/pro/animations/follow-path-behavior.html": {
    "href": "articles/pro/animations/follow-path-behavior.html",
    "title": "Follow Path | VR Builder Documentation",
    "keywords": "Follow Path Introduction This behavior animates a game object so that it follows a path, for example a spline. It is possible to set a curve determining how fast the object moves along the path, plus a number of options described below. The behavior can be found under Animation > Follow Path . Inspector The Follow Path behavior accepts the following parameters. Object : The game object to be moved. Path : The path the object will follow. This needs to be an IPathProperty , like the BezierSplinePathProperty provided in VR Builder Core. Keep relative position : If unchecked, the object will be teleported on the path when the animation starts, and its position throughout the animation will be on the path itself. If checked, the object will retain its current position and move parallel to the path while animating. Keep relative rotation : If unchecked, the object will rotate so that its forward vector follows the direction of the path throughout the animation. If checked, the object will retain its current orientation, but still rotate following the direction of the path. Duration (in seconds) : Duration in seconds of the animation. Velocity curve : This animation curve determines the object's position on the path at a given point in time. The position on the path can be a value from 0 (start) to 1 (end). Note that the curve length is normalized: while it is possible to have the time axis greater or lesser than 1, this won't affect the duration of the animation - the curve will be extended or compressed to fit the provided time duration. The first key of the curve should always be at 0 on the horizontal axis. Disable Rotation : If enabled, the object will not rotate while following the path and the settings on Keep relative rotation will be ignored. Reverse : Utility checkbox that plays the animation backwards. It is equivalent to mirroring the velocity curve. Ping pong : If this is checked, the animation will play backwards after finishing, resulting in the object animating and then returning to the original position. Note the total duration will be twice the value in the Duration field. This is similar to creating a symmetrical velocity curve, like for example a bell shape. Repeats : The number of times the animation will repeat. Note that each repeat will increase the duration of the animation by its full amount. The Bezier Spline Path Property The BezierSplinePathProperty is an implementation of the IPathProperty interface included in VR Builder core, and can thus be used to create paths for the Follow Path behavior. It's recommended to add it to an empty game object. It will automatically add a BezierSpline component, which will display a default 4 point Bezier curve in the scene. It is possible to select and move the points in 3D space to manipulate the curve. We can see the position of the currently selected point in the inspector. By clicking Add Curve in the BezierSpline inspector, we can add a second bezier curve connected to the current one. With a point selected in the inspector, it is possible to change the point mode. The color of the point changes depending on the mode selected. The following modes are available. Free (Magenta): The handles of the adjacent curves are independent, and can form a sharp angle if not aligned. Aligned (Yellow): The handles of the adjacent curves are aligned, so there will be a smooth transition, but their length can be set individually. Mirrored (Cyan): The handles of the adjacent curves are aligned and of equal length. Other options are: Loop : Will close the path to form a loop. Especially useful with repeats, as the object will keep going around the path. Approximate Linear Velocity : Normally, velocities on a Bezier curve are non-linear. This means that, by default, the object's speed will change depending on where it is on the path and which curve it is on. Enabling this option will make the object approximate a linear speed, which means that the animation speed will be actually more faithful to the animation curve. Granularity of Approximation : This parameter is only exposed if Approximate Linear Velocity is selected. It determines the number of segments each curve will be subdivided in, a higher value will result in a more constant speed along the path, very low values (less than 10) can cause the object to change speed in a strange way. Lowering the value can increase performance."
  },
  "articles/pro/animations/introduction.html": {
    "href": "articles/pro/animations/introduction.html",
    "title": "Introduction | VR Builder Documentation",
    "keywords": "Introduction This add-on contains a collection of animation behaviors that allow VR Builder to display more complex animations than what is possible with the built-in tools. When installed, the Move Object core behavior will be disabled in the menu, as its functionality is 100% included in the new Animate Transform behavior. To manually enable it, go to Tools > VR Builder > Developer > Allowed Menu Items Configuration ."
  },
  "articles/pro/animations/play-animation-clip-behavior.html": {
    "href": "articles/pro/animations/play-animation-clip-behavior.html",
    "title": "Play Animation Clip | VR Builder Documentation",
    "keywords": "Play Animation Clip Introduction This behavior plays an animation clip directly on a game object, without needing to set up an animation controller. While this functionality is deprecated by Unity, it can occasionally still be handy for quick and easy object animation. Inspector Animation clip : The animation clip to play. It needs to be located in a path inside a Resources folder, or the inspector will not accept it. The clip needs to be flagged as Legacy to be played without an animation controller. VR Builder will automatically do this when the clip is dragged in the inspector. To manually flag the clip as Legacy or to undo the change it will be necessary to switch the clip's inspector to Debug mode, as the checkbox is not visible in the default inspector. If the clip is not flagged as Legacy, the animation will still work in the Unity editor but will not play in builds. Object to animate : The game object to be animated."
  },
  "articles/pro/animations/quick-start.html": {
    "href": "articles/pro/animations/quick-start.html",
    "title": "Quick Start | VR Builder Documentation",
    "keywords": "Quick Start The easiest way to get started with this add-on is to check out the included demo scene. If it is the first time you open the demo scene, you will have to do it through the menu: Tools > VR Builder > Demo Scenes > Animations . This is necessary as a script will copy the demo course in the StreamingAssets folder. After the first time, the demo scene can be opened normally. Press Play to try out the behaviors included in this add-on. The demo scene includes a station for every behavior. You can teleport there and check out some practical uses of the included behaviors."
  },
  "articles/pro/animations/rotate-around-axis-behavior.html": {
    "href": "articles/pro/animations/rotate-around-axis-behavior.html",
    "title": "Rotate Around Axis | VR Builder Documentation",
    "keywords": "Rotate Around Axis Introduction This behavior rotates an object around a given axis. The object rotates a specified amount of degrees in a given time. The axis can be represented by a second transform, and it is possible to choose whether the object will rotate around the X, Y or Z axis of that object. Inspector It is possible to configure the following parameters. Object : The object to be rotated. Rotation Axis Provider : The object defining the position of the rotation axis. If none is selected, the axis will pass through the origin of the rotating object, which in most cases means that the object will rotate on itself. Rotation Axis : The local axis of the provider object which will be used to rotate around. Duration (in seconds) : The total duration of the animation. Animation Curve : Defines the state of the animation over time. The X axis represents the duration of the animation (normalized), while the Y axis represents values from the object's initial rotation (0) and the object's target rotation defined above (1)."
  },
  "articles/pro/animations/set-animator-parameter-behavior.html": {
    "href": "articles/pro/animations/set-animator-parameter-behavior.html",
    "title": "Set Animator Parameter | VR Builder Documentation",
    "keywords": "Set Animator Parameter Introduction This set of behaviors allow to control the parameters of multiple Animator components from within VR Builder. The included behaviors are: Set Animator Trigger Parameter Set Animator Boolean Parameter Set Animator Integer Parameter Set Animator Float Parameter These behaviors set the specified parameter to the desired value immediately. The float variant can additionally change the parameter over time, following an animation curve. Inspector The inspector for these behaviors works similarly for all variants, although not all variants have all options. The behavior makes use of the following parameters. Animator : Process Scene Objects containing an Animator Property . As usual, it is possible to automatically add the property, but the user should ensure there is a configured Animator component present on the same game object as the property. Parameter name : The name of the parameters in the Animator as a string. Target value (not present on trigger): The desired new value for the parameter. It is not present on the Set Animator Trigger behavior as triggers don't store values. Duration (in seconds) (float only): The amount of time in seconds before the float parameter reaches its final value. If set to 0, the value will change instantly like in the other behaviors. Animation curve (float only): Describes how the float value changes over time. The X axis represents the duration of the transition, while the Y axis represents the current value, with 0 being the initial value and 1 the target value."
  },
  "articles/pro/animations/show-exploded-view-behavior.html": {
    "href": "articles/pro/animations/show-exploded-view-behavior.html",
    "title": "Show Exploded View | VR Builder Documentation",
    "keywords": "Show Exploded View Introduction This behavior lets you easily create an exploded view of an object with a number of child objects. By default, all immediate children of the specified game objects will be displaced by the specified factor relative to their current local position. This means that children with a local position of zero will not be displaced. Note that you can create empty objects with the desired relative positions in order to achieve the desired effect. It is also possible to manually set which child objects will be displaced. You can do so by adding them to the Explodable Child Objects list on the Explodable Property of the target object. If the list is not empty, only the objects in the list will be exploded, otherwise all first-level children will be selected. Inspector Object : The game object to be exploded. Scale : How much the children will displace themselves from their initial position. A scale of 1 represent the initial position and can be used to un-explode the view. Values above 1 will explode the view, and below 1 will implode. Duration (in seconds) : Duration in seconds of the animation. Explosion curve : This curve determines the object's position at a given point in time. The curve can have values from 0 (the child's original position) to 1 (the final position). Note that the length of the curves is normalized: while it is possible to have the time axis greater or lesser than 1, this won't affect the duration of the animation - it is recommended to leave the time axis to the default length of 0 to 1. Ping pong : If this is checked, the animation will play backwards after finishing, resulting in the object animating and then returning to the original position. Note the total duration will be twice the value in the Duration field. This is similar to creating a symmetrical velocity curve, like for example a bell shape. Repeats : The number of times the animation will repeat. Note that each repeat will increase the duration of the animation by its full amount. If ping pong is set, it will be included in every repeat."
  },
  "articles/pro/highlights-and-guidance/behaviors.html": {
    "href": "articles/pro/highlights-and-guidance/behaviors.html",
    "title": "Behaviors | VR Builder Documentation",
    "keywords": "Behaviors The Highlights and Guidance add-on includes the following behaviors."
  },
  "articles/pro/highlights-and-guidance/contact.html": {
    "href": "articles/pro/highlights-and-guidance/contact.html",
    "title": "Contact | VR Builder Documentation",
    "keywords": "Contact Join our official Discord server for quick support from the developer and fellow users. Suggest and vote on new ideas to influence the future of the VR Builder. Make sure to review VR Builder and this asset if you like it. It will help us immensely. If you have any issues, please contact contact@mindport.co . We'd love to get your feedback, both positive and constructive. By sharing your feedback you help us improve - thank you in advance! Let's build something extraordinary! You can also visit our website at mindport.co ."
  },
  "articles/pro/highlights-and-guidance/introduction.html": {
    "href": "articles/pro/highlights-and-guidance/introduction.html",
    "title": "Introduction | VR Builder Documentation",
    "keywords": "Introduction The Highlights and Guidance add-on provides a variety of tools to highlight important objects in the scene, direct the user towards them and otherwise show the user the path forward. While VR Builder does include a functional Highlight Objects behavior, this add-on aims to provide more options letting you better customize your guidance and ultimately produce a better, more professional-looking application."
  },
  "articles/pro/highlights-and-guidance/outline-objects-behavior.html": {
    "href": "articles/pro/highlights-and-guidance/outline-objects-behavior.html",
    "title": "Outline Objects | VR Builder Documentation",
    "keywords": "Outline Objects Description The Outline Objects behavior visually highlights the selected objects until the end of a step. Configuration Color Color in which the target object will be highlighted. Colors are defined in the RGBA or HSV color channel. By configuring the alpha (A) value, the outline can be translucent. Objects The Process Scene Objects which should be highlighted. Outline Renderer Configuration This behaviors adds a Outline Renderer component to the objects to be outlined. It is possible to configure the Outline Renderer with further parameters, or set those parameters globally in Project Settings > VR Builder > Component Settings , in the Outlines section. Every newly created Outline Renderer will be configured as specified here. The parameters on the Outline Renderer are the following. Outline Mode These are the different ways an object can be outlined. Outline All : the entire object is outlined. Outline Visible : only the visible part of the object is outlined. Outline Hidden : only the hidden part of the object is outlined. Outline And Silouhette : the object is outline, and the hidden part is shown as a colored silouhette. Silouhette Only : a colored silouhette is shown on the hidden part of the object. Outline Color Specifies the color of the outline. This parameter is not relevant when using outlines with this behavior, as the behavior will override the color of the outline. Outline Width The width of the outline. A larger value corresponds to a thicker line. Precompute Outline This setting is not present in the global settings as it makes sense on a per-object basis. If selected, the outline is computed at editor time and stored in the object, while in the opposite case it will be generated at runtime. This might be noticeable with larger meshes. Precomputing could result in noticeably larger scene/project size, while not precomputing could cause a pause as the outline is generated on Awake()."
  },
  "articles/pro/highlights-and-guidance/point-at-objects-behavior.html": {
    "href": "articles/pro/highlights-and-guidance/point-at-objects-behavior.html",
    "title": "Point at Objects | VR Builder Documentation",
    "keywords": "Point at Objects Description The Point at Objects behavior can be used to direct the user towards the objects they are supposed to interact with. By default, this is done by displaying an arrow just in front of the user, hovering above ground level. This does not intrude the user's field of view, but they can easily look down if they need a pointer. Configuration Objects The Process Scene Objects to point at. Pointer Resource The prefab in a Resources folder that is used to point at the object. The prefab needs to contain an Object Pointer component. By default, it points to the CompassArrow prefab, which displays an arrow as described above. You can select a different prefab if you wish, like for example the CircleArrow prefab in the StaticAssets/Resources folder of this add-on. Pointer Customization It is possible to customize the object used for pointing. The most straightforward customization is to make a copy of the CompassArrow prefab and replace or edit the arrow mesh. It is also possible to create different pointer prefabs that behave in different ways. Pointer prefabs need to have a component inheriting from ObjectPointer on their root object. Feel free to create your own overrides with custom logic of this class. You can look at the default ArrowObjectPointer for reference."
  },
  "articles/pro/highlights-and-guidance/quick-start.html": {
    "href": "articles/pro/highlights-and-guidance/quick-start.html",
    "title": "Quick Start | VR Builder Documentation",
    "keywords": "Quick Start You can check out the main features of this add-on in the provided demo scene. After importing the package in a properly set-up VR Builder project, you can access the demo scene from the menu Tools > VR Builder > Demo Scenes > Highlights and Guidance . It is necessary to open the demo scene from the menu at least the first time, so a script will copy the required process file in the StreamingAssets folder. The demo scene in this add-on is pretty simple and requires no interaction from the user. Once the scene is started, the user will find themselves in front of three cylinder shapes. These will be highlighted one by one with different highlight styles, while a voice explains what is happening. At the same time, an arrow near the feet of the user will point to the relevant cylinder. You can press Play to try out the scene, or open the Process Editor to check out how the process is made."
  },
  "articles/pro/introduction.html": {
    "href": "articles/pro/introduction.html",
    "title": "Introduction | VR Builder Documentation",
    "keywords": "Introduction VR Builder Pro includes all add-ons previously released on the asset store."
  },
  "articles/pro/process-menu/contact.html": {
    "href": "articles/pro/process-menu/contact.html",
    "title": "Contact | VR Builder Documentation",
    "keywords": "Contact Join our official Discord server for quick support from the developer and fellow users. Suggest and vote on new ideas to influence the future of the VR Builder. Make sure to review VR Builder and this asset if you like it. It will help us immensely. If you have any issues, please contact contact@mindport.co . We'd love to get your feedback, both positive and constructive. By sharing your feedback you help us improve - thank you in advance! Let's build something extraordinary! You can also visit our website at mindport.co ."
  },
  "articles/pro/process-menu/customizing-process-controller.html": {
    "href": "articles/pro/process-menu/customizing-process-controller.html",
    "title": "Customizing the Process Controller | VR Builder Documentation",
    "keywords": "Customizing the Process Controller The process controller can be configured on the [PROCESS_CONTROLLER] game object in a VR Builder scene. This object handles running the process and a few configuration parameters. The Process Controller Setup script lets you choose which process controller prefab is spawned when the scene runs. It is possible to select one of the default process controller prefabs, or use a custom one by ticking the Use custom prefab box. It is also possible to select whether to auto start the process, or start it manually, for example through one of the menus provided in this add-on. Both default process controllers automatically start the process when the scene runs. If you want to avoid that, so the process can be started from the menu, you'll have to create a custom process controller prefab. You can use one of the default ones found in Assets\\MindPort\\VR Builder\\Core\\Source\\Basic-UI-Component\\Runtime\\ProcessController\\Resources\\Prefabs as a baseline. The Basic Process Loader component ensures the process runs on scene start. To prevent this behavior, do not include this script in your custom controller."
  },
  "articles/pro/process-menu/how-to-use.html": {
    "href": "articles/pro/process-menu/how-to-use.html",
    "title": "How to Use the Menu | VR Builder Documentation",
    "keywords": "How to Use the Menu Desktop Process Menu The desktop process menu is laid out as follows. VR Builder logo. Feel free to replace it with your own! Current chapter. You can use the drop-down to skip to a later chapter. Process state indicator. It appears when the process is running. Name of the current step. Info button. Click it to see the description of the current step. Skip Step button. Clicking this button will fast-forward to the following step. If the process is not running, it is replaced by the Start Process button. Restart process button. Clicking it will restart the process from the beginning. Audio toggle. Enables/disables process audio. The desktop menu can be used by clicking with the mouse on the desired option. Standalone Process Menu The standalone process menu is laid out as follows. VR Builder logo. Feel free to replace it with your own! Current chapter. You can use the drop-down to skip to a later chapter. Process state indicator. It appears when the process is running. Name of the current step. Info button. Click it to see the description of the current step. Skip Step button. Clicking this button will fast-forward to the following step. If the process is not running, it is replaced by the Start Process button. Restart process button. Clicking it will restart the process from the beginning. Audio toggle. Enables/disables process audio. The standalone menu is designed to be opened through user input. By default, the primary button on the right controller opens the menu. This can be changed on the Standalone Menu Handler component on the menu prefab. In case you want the menu to be permanently present in the scene, remove the Standalone Menu Handler component from the prefab. In the inspector, it is possible to select which button can be used to open and close the menu. The Standalone Menu Handler also takes care of repositioning the menu in front of the user every time it is opened. To interact with the standalone menu, press the grip button on a controller to enter UI mode with that controller. This will change the hand to a pointing animation and visualize a ray originating from it. Point the ray to interactable elements on the menu and press the trigger button to activate them."
  },
  "articles/pro/process-menu/introduction.html": {
    "href": "articles/pro/process-menu/introduction.html",
    "title": "Introduction | VR Builder Documentation",
    "keywords": "Introduction This add-on provides examples on how to build a menu that allows to control the process execution in VR Builder. The menu allows to display the current step and its description, skip it by choosing a transition, switch chapters or restart the process. Two prefabs are included. One displays the menu on the desktop screen, allowing an external person to control the process. This can be useful for example in training scenarios with a trainee in VR and a trainer at the computer. The other displays the menu in VR, floating in front of the user. This can be useful for standalone headsets, which lack a flat screen view, or in cases where the user is supposed to control the process themselves."
  },
  "articles/pro/process-menu/quick-start.html": {
    "href": "articles/pro/process-menu/quick-start.html",
    "title": "Quick Start | VR Builder Documentation",
    "keywords": "Quick Start Drag one of the prefabs in the Prefabs folder in your process scene. The menu will appear when pressing Play. Feel free to try it out with the demo scene included in VR Builder! The process starts automatically in VR Builder. If you want the process to be started from the menu, you will have to provide a custom [PROCESS_CONTROLLER] . You can find more information on how to do so here ."
  },
  "articles/pro/randomization/behaviors.html": {
    "href": "articles/pro/randomization/behaviors.html",
    "title": "Behaviors | VR Builder Documentation",
    "keywords": "Behaviors The behaviors included in the Randomization add-on allow you to generate random values in data properties. This section explains them in detail."
  },
  "articles/pro/randomization/contact.html": {
    "href": "articles/pro/randomization/contact.html",
    "title": "Contact | VR Builder Documentation",
    "keywords": "Contact Join our official Discord server for quick support from the developer and fellow users. Suggest and vote on new ideas to influence the future of the VR Builder. Make sure to review VR Builder and this asset if you like it. It will help us immensely. If you have any issues, please contact contact@mindport.co . We'd love to get your feedback, both positive and constructive. By sharing your feedback you help us improve - thank you in advance! Let's build something extraordinary! You can also visit our website at mindport.co ."
  },
  "articles/pro/randomization/data-properties.html": {
    "href": "articles/pro/randomization/data-properties.html",
    "title": "Data Properties | VR Builder Documentation",
    "keywords": "Data Properties This add-on makes use of data properties to store values. A data property is a VR Builder property that stores one value of a defined data type, for example a number or a boolean. It is then possible to access those in the process steps to read or change the values. This add-on supports two types of data properties. Number Data Property : Stores a single number (C# type: float). Boolean Data Property : Stores a true/false value (C# type: bool). Creating Data Properties We consider good practice to have each data property on a different, appropriately named empty game object, e.g. \"Total Points\". This way it is easy to keep track of them and drag them in the step inspector when needed. To create the property itself, just add a Data Property component of the required type to the game object, or do it directly in the step inspector through \"Fix it\" button. In the inspector, it is possible to type a default value for the data property. The property will have that value at the start of the process, and the Reset Value behavior will reset the property to its default."
  },
  "articles/pro/randomization/introduction.html": {
    "href": "articles/pro/randomization/introduction.html",
    "title": "Introduction | VR Builder Documentation",
    "keywords": "Introduction The Randomization add-on makes it easy to add unpredictability to a VR Builder process. It includes a new type of node, called Random Branch, which allows to add random events and alternative paths with zero effort. Additionally, there are a couple tools to work with data properties: behaviors to set random booleans and numbers. You can use these to set random values for the process, and compare those values in condition, to make sure that every run of a process will be different than last time."
  },
  "articles/pro/randomization/quick-start.html": {
    "href": "articles/pro/randomization/quick-start.html",
    "title": "Quick Start | VR Builder Documentation",
    "keywords": "Quick Start You can check out the main features of this add-on in the provided demo scene. After importing the package in a properly set-up VR Builder project, you can access the demo scene from the menu Tools > VR Builder > Demo Scenes > Randomization . It is necessary to open the demo scene from the menu at least the first time, so a script will copy the required process file in the StreamingAssets folder. In the demo scene, the user must check and change the pressure of the tires of a car by using a provided tool. It is a freeform process, where the user can check the tires in any order and even go back to previous ones. Once done, putting the tool in the box triggers the final evaluation. This scene uses the Random Branch node to randomly select a scenario when the process starts, and the Set Random Number behavior to set the initial tire pressure to random values. You can press Play to try out the scene, or open the Process Editor to check out how the process is made. Additionally, you can find a tutorial on how this demo scene was created on our website ."
  },
  "articles/pro/randomization/random-branch-node.html": {
    "href": "articles/pro/randomization/random-branch-node.html",
    "title": "The Random Branch Node | VR Builder Documentation",
    "keywords": "The Random Branch Node The Randomization add-on introduces a new type of node in addition to the standard step: the Random Branch node. This is a special kind of step that immediately routes the process to a random transition. This can be useful to add random events to your process. To create it, select the new Create Random Branch option in the context menu. The Random Branch node is designed so it can be configured directly in the Process Editor window. You can add and remove transitions at will, like any step. The fields to the left of the output port can be used to specify a weight, so it is possible for some transitions to be more probable than others. By default, all weights are 1 and all transitions have equal chance to trigger. The weight can be any arbitrary number above or equal to zero. In the example above, the weights have a total of 5. This means that the Very Probable Step has a a 50% chance to be selected, while the Improbable Step only has one chance in ten. Note that it can be useful to set a weight to zero for debugging purposes - such a transition will never be selected, so it is possible to steer the process through the desired nodes. If all weights in a node are equal to zero, however, the first transition will be selected. Logging the Random Branch node If VR Builder is set to log step output in the Project Settings, Random Branch nodes will create a log entry stating which transition has been selected."
  },
  "articles/pro/randomization/set-random-boolean-behavior.html": {
    "href": "articles/pro/randomization/set-random-boolean-behavior.html",
    "title": "Set Random Boolean Behavior | VR Builder Documentation",
    "keywords": "Set Random Boolean Behavior This behavior works similarly to the Set Boolean behavior, except the property is not set to a specific value. Instead, it will be randomly set to true or false at runtime. It is possible to specify the probability of it to be true by moving the slider from 0 (always false) to 1 (always true). Configuration Data Property : The boolean data property to set to a random value. Probability to be True : The probability of the randomized value to be true measured from 0 (always false) to 1 (always true)."
  },
  "articles/pro/randomization/set-random-number-behavior.html": {
    "href": "articles/pro/randomization/set-random-number-behavior.html",
    "title": "Set Random Number Behavior | VR Builder Documentation",
    "keywords": "Set Random Number Behavior This behavior sets a number data property to a random value within a range. Configuration Data Property : The number data property to set to a random value. Min Value : The minimum value the randomized number can have. Max Value : The maximum value the randomized number can have. Randomize Integer : If checked, the randomized number will be an integer within the range. Otherwise it can be any float in the range."
  },
  "articles/pro/randomization/working-with-data-properties.html": {
    "href": "articles/pro/randomization/working-with-data-properties.html",
    "title": "Working with Data Properties | VR Builder Documentation",
    "keywords": "Working with Data Properties There are some standard tools to work with data properties. These are the Set/Reset Value behaviors, which are used to change the value stored in a data property, and the Compare Values conditions, which compare two values (from data properties or constant) to check if they are fulfilled. Set Value Behaviors These behaviors set the value of a data property to a value specified in the step inspector. There is one behavior for each data property type. In the Randomization add-on, it is possible to set data properties of type Boolean and Number. Reset Value Behavior This behavior resets a data property's value to its default. This is zero for numerical values and false for booleans, but a different default can be specified in the inspector of the data property. The property needs to be referenced in the step inspector, and will reset when the behavior is triggered. Compare Values Conditions In the Randomization add-on it is possible to use a Compare Numbers or Compare Booleans condition. These can for example compare a random value to a constant in order to branch a process a certain way. They work in a similar way, but the comparison operators differ. You'll need to select two values and the operation between them. Use the radio buttons to select if a value comes from a data property or is a constant entered in the step inspector. In the example below, the condition will be fulfilled when the RandomNumber property is greater than 5. Logging Data Properties It can be useful to log value changes to data properties in the console for debugging purposes. This can be enabled globally by ticking the relevant box in Project Settings -> VR Builder -> Settings . If the Log Data Property changes checkbox is enabled, changes to the value of the data property will be logged in the console like the following example. Note that the name provided is the game object's name."
  },
  "articles/pro/states-and-data/behaviors.html": {
    "href": "articles/pro/states-and-data/behaviors.html",
    "title": "Behaviors | VR Builder Documentation",
    "keywords": "Behaviors The behaviors included in the States and Data add-on are listed in this section."
  },
  "articles/pro/states-and-data/contact.html": {
    "href": "articles/pro/states-and-data/contact.html",
    "title": "Contact | VR Builder Documentation",
    "keywords": "Contact Join our official Discord server for quick support from the developer and fellow users. Suggest and vote on new ideas to influence the future of the VR Builder. Make sure to review VR Builder and this asset if you like it. It will help us immensely. If you have any issues, please contact contact@mindport.co . We'd love to get your feedback, both positive and constructive. By sharing your feedback you help us improve - thank you in advance! Let's build something extraordinary! You can also visit our website at mindport.co ."
  },
  "articles/pro/states-and-data/data-properties.html": {
    "href": "articles/pro/states-and-data/data-properties.html",
    "title": "Data Properties | VR Builder Documentation",
    "keywords": "Data Properties This add-on makes use of data properties to store values. A data property is a VR Builder property that stores one value of a defined data type, for example a number or a boolean. It is then possible to access those in the process steps to read or change the values. There are four types of data properties in this add-on. Number Data Property : Stores a single number (C# type: float). Text Data Property : Stores a string of text (C# type: string). Boolean Data Property : Stores a true/false value (C# type: bool). State Data Property : Stores a state value. More detailed information below (C# type: int, exposed as enum). Creating Data Properties We consider good practice to have each data property on a different, appropriately named empty game object, e.g. \"Total Points\". This way it is easy to keep track of them and drag them in the step inspector when needed. To create the property itself, just add a Data Property component of the required type to the game object, or do it directly in the step inspector through \"Fix it\" button. In the inspector, it is possible to type a default value for the data property. The property will have that value at the start of the process, and the Reset Value behavior will reset the property to its default. Additionally, it is possible to subscribe to the property events."
  },
  "articles/pro/states-and-data/introduction.html": {
    "href": "articles/pro/states-and-data/introduction.html",
    "title": "Introduction | VR Builder Documentation",
    "keywords": "Introduction The States and Data add-on provides developers the tools to create processes more complex and customized than before. Thanks to the support of variables in the VR Builder process, it is possible to store values to create triggers or track performance, and to create branching processes with a variety of outcomes. The states feature allows VR Builder process to interact with objects in the scene by changing and reading states instead of handling all the object's logic. This allows the user to quickly write custom code and easily integrate it in the VR Builder process, opening the way to endless customization and better performance."
  },
  "articles/pro/states-and-data/math-operation-behavior.html": {
    "href": "articles/pro/states-and-data/math-operation-behavior.html",
    "title": "Math Operation Behavior | VR Builder Documentation",
    "keywords": "Math Operation Behavior The Math Operation behavior performs an operation on a data property and updates it with the result of the operation. It takes three parameters, Left Operand , Right Operand and Operator . Left operand is the data property that will be changed by the operation. Right Operand can either be another data property or a constant value entered in the inspector. Operator defines the type of operation to perform. The operators currently available are listed here. Add : left + right Subtract : left - right Multiply : left * right Divide : left / right Min : change left to the lowest value between left and right Max : change left to the highest value between left and right For example, the operation in the image will add 1 to the Blue data property."
  },
  "articles/pro/states-and-data/quick-start.html": {
    "href": "articles/pro/states-and-data/quick-start.html",
    "title": "Quick Start | VR Builder Documentation",
    "keywords": "Quick Start You can check out the main features of this add-on in the provided demo scene. After importing the package in a properly set-up VR Builder project, you can access the demo scene from the menu Tools > VR Builder > Demo Scenes > States and Data . It is necessary to open the demo scene from the menu at least the first time, so a script will copy the required process file in the StreamingAssets folder. The demo scene consists of a color mixing machine. The user adds bottles of color in the machine to mix a new color, then can press the button to spawn a ball of the created color. It uses the data properties included in this add-on for storing and calculating the mixed color, while the machine is controlled by states. You can press Play to try out the scene, or open the Process Editor to check out how the process is made. Additionally, you can find a tutorial on how this demo scene was created on our website ."
  },
  "articles/pro/states-and-data/state-data-properties.html": {
    "href": "articles/pro/states-and-data/state-data-properties.html",
    "title": "State Data Properties | VR Builder Documentation",
    "keywords": "State Data Properties Sometimes we need to simulate a complex behavior that is part of the environment rather than the process. For example, a machinery that can be idle, running, blocked or broken, or a door that can be locked, unlocked or open. In these case, it might make sense to code the object's logic directly with Unity Monobehaviors rather than trying to write very complex custom behaviors. This can also make sense if the object is independent from the process - for example, the machine will keep running regardless of the user's position in the process, or is designed to break randomly. Maybe we only want VR Builder to decide when the machine starts running, or to trigger a step when it breaks, but we don't need it to be in control of what exact animation the object is into, or what sound it plays - these are characteristics that are intrinsical to the machine, so we shouldn't care about them in the process. We can use a State Data Property as a communication layer between our VR Builder process and some custom logic we have written for an object. This is a data property which contains an enum listing all the states an object can be in. Like all data properties, it can be read and set both from the Step Inspector and from code. This allows your custom logic and the VR Builder process to interact with each other. Creating a State Data Property You will need to define your enum and create a state data property specific to it. For the machinery described above, it could look like this. public enum MachineState { Idle, Running, Blocked, Broken, } We then need to create a data property component using this enum from the generic state data property. This is just a couple lines. using VRBuilder.StatesAndData.Properties; public class MachineStateDataProperty : StateDataProperty<MachineState> { } We'll now be able to add this as a component to a game object. As it can be seen from the drop-down for the default value, it makes use of the MachineState enum. Handling States in Code We can read and modify states from code calling the GetState and SetState methods on the data property component. MachineStateDataProperty stateDataProperty = GetComponent<MachineStateDataProperty>(); // Set a state to a specified value. stateDataProperty.SetState(MachineState.Running); // Read the current state. MachineState state = stateDataProperty.GetState(); It is also possible to subscribe to the standard data property events ValueChanged and ValueReset , respectively called when the data property value changes or is reset to its default value. MachineStateDataProperty stateDataProperty = GetComponent<MachineStateDataProperty>(); // Subscribe to the value changed event. dataProperty.ValueChanged += OnValueChanged; // Function to be called when the event is triggered. private void OnValueChanged(object sender, EventArgs e) { // Code to be executed on value changed. } Set State Behavior The Set State behavior can be used to change the property's state from the VR Builder process. It works very similarly to the Set Value behavior, the only difference being that the state drop-down will not be visible until a State Data Property is dragged in the inspector, as it depends on the provided enum. It is also possible to use the Reset Value behavior on a State Data Property , it will work like any other data property. Check State Condition It is possible for a process to read a state and react accordingly using the Check State condition. This condition compares a State Data Property to a specified value, in a way similar to other conditions comparing values. A number of operations are available. Since enum values can be ordered, it is also possible to check if the state precedes or follows the specified one."
  },
  "articles/pro/states-and-data/trigger-event-behaviors.html": {
    "href": "articles/pro/states-and-data/trigger-event-behaviors.html",
    "title": "Trigger Event Behaviors | VR Builder Documentation",
    "keywords": "Trigger Event Behaviors This collection of behaviors let VR Builder trigger a Unity event on multiple scene objects. This gives you the freedom to bind your own functions to the event and execute custom code like it was a VR Builder behavior (although note that the behavior will end right after calling the event, so the next step could be activated immediately). This is achieved through an event property which is added to the desired process scene object. There are various permutations available for this behavior. It is possible to pass the following data to the event. No data Number (float) Text (string) Boolean These value can be set in the behavior itself and can either be constant or data properties. Trigger Event Behavior Parameters Targets References to the scene objects holding the event property we want to trigger. Argument (Behaviors with data only): Lets you specify a parameter to pass to the event. The type of the parameter (or corresponding data property) can be Number (float), Text (string) or Boolean (bool). Execution stages : Lets you select if the event is triggered as soon as the step starts, just before the step ends or both."
  },
  "articles/pro/states-and-data/working-with-data-properties.html": {
    "href": "articles/pro/states-and-data/working-with-data-properties.html",
    "title": "Working with Data Properties | VR Builder Documentation",
    "keywords": "Working with Data Properties There are some standard tools to work with data properties. These are the Set/Reset Value behaviors, which are used to change the value stored in a data property, and the Compare Values conditions, which compare two values (from data properties or constant) to check if they are fulfilled. Set Value Behaviors These behaviors set the value of a data property to a value specified in the step inspector. There is one behavior for each data property type. The available behaviors are listed here. Set Number Set Boolean Set Text Set State Reset Value Behavior This behavior resets a data property's value to its default. This is zero for numerical values, false for booleans and an empty string for text, but a different default can be specified in the inspector of the data property. The property needs to be referenced in the step inspector, and will reset when the behavior is triggered. Compare Values Conditions In States and Data it is possible to use a Compare Numbers , Compare Text or Compare Booleans condition. They work in a similar way, but the comparison operators differ. You'll need to select two values and the operation between them. Use the radio buttons to select if a value comes from a data property or is a constant entered in the step inspector. In the example below, the condition will be fulfilled when the Score Tracker value is equal or greater than the Point Threshold value. Utilities Some data properties can have utility functions to make them handier to use with Unity events. At the moment the following utility functions are available: Number Data Property : You can use the IncreaseValue(float) function to increase or decrease the value of the data property. Boolean Data Property : you can use the InvertValue() function to switch it from true to false , or viceversa. Logging Data Properties It can be useful to log value changes to data properties in the console for debugging purposes. This can be enabled globally by ticking the relevant box in Project Settings -> VR Builder -> Settings . If the Log Data Property changes checkbox is enabled, changes to the value of the data property will be logged in the console like the following example. Note that the name provided is the game object's name."
  },
  "articles/pro/track-and-measure/contact.html": {
    "href": "articles/pro/track-and-measure/contact.html",
    "title": "Contact | VR Builder Documentation",
    "keywords": "Contact Join our official Discord server for quick support from the developer and fellow users. Suggest and vote on new ideas to influence the future of the VR Builder. Make sure to review VR Builder and this asset if you like it. It will help us immensely. If you have any issues, please contact contact@mindport.co . We’d love to get your feedback, both positive and constructive. By sharing your feedback you help us improve - thank you in advance! Let’s build something extraordinary! You can also visit our website at mindport.co ."
  },
  "articles/pro/track-and-measure/data-properties.html": {
    "href": "articles/pro/track-and-measure/data-properties.html",
    "title": "Data Properties | VR Builder Documentation",
    "keywords": "Data Properties This add-on makes use of data properties to store data values. A data property is a VR Builder property that stores one value of a defined data type, for example a number or a boolean. It is then possible to access those in the process steps to read or change the values. Creating Data Properties We consider good practice to have each data property on a different, appropriately named empty game object, e.g. \"Total Points\" or \"Assembly Time\". This way it is easy to keep track of them and drag them in the step inspector when needed. To create the property itself, just add a Data Property component of the required type to the game object, or do it directly in the step inspector through the usual \"Fix it\" button. In the inspector, it is possible to type a default value for the data property. The property will have that value at the start of the process, and the Reset Value behavior will reset the property to that value. Data Property Displays While data properties are assigned to game objects, they are just abstract values, and they are not visible in the scene. Yet, it can be useful to make them visible to the user. This add-on includes a few prefabs which can visualize the contents of data properties on a text mesh. They can be used as they are, or edited and combined with your own prefabs. Start by dragging in the scene a display of the appropriate type (number, text, boolean or time). Then reference the desired data property in the Data Property field of the display component on the prefab. The display should already work when the process is started. It is possible to configure the displayed text by editing the Text field of the display component. The following variables can be used: {0} : The value stored in the data property. {1} : The name of the game object the property is on. These variables support the .NET string formatting rules as detailed here . For example, you might want to limit the fractional digits of a number data property. Writing the variable as {0:f2} will always show two fractional digits, while writing it as {0:f0} will display only the integer part. It is also possible to format time in the time display this way, for instance {0:mm}:{0:ss}.{0:fff} will display minutes, seconds and fractional digits formatted like \"02:34.673\"."
  },
  "articles/pro/track-and-measure/introduction.html": {
    "href": "articles/pro/track-and-measure/introduction.html",
    "title": "Introduction | VR Builder Documentation",
    "keywords": "Introduction This add-on for VR Builder focuses on tracking performance of the VR user, and provides tools like timers and point trackers. With it, it is easy to measure the time taken to perform tasks and to assign scores while providing feedback to the user."
  },
  "articles/pro/track-and-measure/quick-start.html": {
    "href": "articles/pro/track-and-measure/quick-start.html",
    "title": "Quick Start | VR Builder Documentation",
    "keywords": "Quick Start You can check out the main features of this add-on in the provided demo scene. After importing the package in a properly set-up VR Builder project, you can access the demo scene from the menu Tools > VR Builder > Demo Scenes > Track and Measure . It is necessary to open the demo scene from the menu at least the first time, so a script will copy the required process file in the StreamingAssets folder. The demo scene includes two stations, which highlight respectively point tracking and time tracking. Feel free to try those in VR. You can also open the Process Editor to see an example of how the provided conditions and behaviors can be used in a process."
  },
  "articles/pro/track-and-measure/score-tracking.html": {
    "href": "articles/pro/track-and-measure/score-tracking.html",
    "title": "Score Tracking | VR Builder Documentation",
    "keywords": "Score Tracking One of the aims of this add-on is to provide an easy way to track scores and quantify performance in a VR process. For this, the main tool is the Update Score behavior, which can add or subtract from a numerical data property and trigger relevant user feedback. Update Score Behavior The Update Score behavior requires you to specify a Number Data Property holding the score and the amount increase. Note that this can be a negative amount. When the behavior is triggered, the value in the data property will be updated accordingly. Additionally, you can add feedback to the score increase by referencing a feedback provider object in the Feedback property field. If you do, you can also specify a process scene object which will provide the position for position-dependent feedback, like the floating text in our default implementation.If no position provider is referenced, feedback using a position parameter will default to the feedback provider object’s position. Feedback Providers You can customize the user feedback for a score increase by adding score feedback components to a game object with a Score Feedback Property . When the Update Score behavior triggers, every component on the game object will trigger its feedback. For example, we offer two prefabs, one for providing positive feedback, one for negative. Both play a sound and display a floating number showing the score increase when triggered. If a position provider is specified in the behavior, both the floating number and the sound will trigger at the specified position, else it will trigger at the feedback object's position. This happens because the game object includes both a Floating Text Score Feedback component and an Audio Score Feedback component. These can be further configured by changing the prefabs they spawn, and new components can be added. Creating Custom Score Feedback Providers Creating your own score feedback provider components requires minimal coding skills. Just create a component implementing the IScoreFeedbackProvider interface and trigger your logic in the TriggerFeedback method. public class MyScoreFeedbackProvider : MonoBehaviour, IScoreFeedbackProvider { public void TriggerFeedback(float scoreDelta, float finalScore, Transform positionProvider) { // TODO Implement feedback logic. } } To customize your feedback, you can use the following parameters. scoreDelta : The score increase. finalScore : The total score after the increase. positionProvider : The transform where to trigger the feedback."
  },
  "articles/pro/track-and-measure/time-tracking.html": {
    "href": "articles/pro/track-and-measure/time-tracking.html",
    "title": "Time Tracking | VR Builder Documentation",
    "keywords": "Time Tracking This add-on allows creating and managing timers which can be used for tracking performance or changing the state of the process. This is done mostly through the Start Timer and Stop Timer behaviors. Those interact with a Timer Property on a game object, which in turn stores the elapsed time (in seconds) in a Number Data Property . Since the time is stored in a standard property, it is possible to use it as any numerical data, for example by dragging the timer game object in a Compare Values condition, and to display it in the scene like other data properties. Start Timer Behavior This behavior tells a Timer Property to start counting time in the attached Number Data Property , adding to the value already stored there. If Is countdown is selected, the timer will count down instead, and stop when zero is reached. Stop Timer Behavior This behavior stops a running timer. It does nothing on a Timer Property that is not running. The Number Data Property will store the time at which the timer was stopped, and if the timer starts again it will start counting from that value. Resetting a Timer Since a timer stores its data in a Number Data Property , a timer can be reset to 0 (or whatever default) by executing the Reset Value (or the Set Number ) behavior on the timer's game object. Timer at Zero Condition It may be common to need a condition that completes when a timer reaches zero. Since the time is stored in a Number Data Property , no specific tool is needed - simply use a Compare Numbers Condition to check if the time is equal to zero. In fact, you can compare the stored time to any value, keeping in mind that the time is stored in seconds. Displaying Time Timers store their value in seconds in a Number Data Property . This means that of course a Number Display prefab will show that value. There is however one more prefab created specifically to show time: the Time Display shares many similarities with the Number Display but treats the value as time. By default it displays time in the mm:ss format, but that can be changed by editing the Text field. Since the field uses .NET formatting rules, it is possible to customize the time format as detailed here ."
  },
  "articles/pro/track-and-measure/working-with-data-properties.html": {
    "href": "articles/pro/track-and-measure/working-with-data-properties.html",
    "title": "Working with Data Properties | VR Builder Documentation",
    "keywords": "Working with Data Properties There are some standard tools to work with data properties. These are the Set/Reset Value behaviors, which are used to change the value stored in a data property, and the Compare Values conditions, which compare two values (from data properties or constant) to check fulfillment. Set Value Behaviors The Track and Measure add-on provides this behavior in two flavors: Set Number and Set Boolean . They work the same way: reference an object with a data property of the corresponding type, and input the new value. The value will change when the behavior is triggered. Reset Value Behavior This behavior resets a data property's value to its default. This is zero for numerical values, false for booleans and an empty string for text, but a different default can be specified in the inspector of the data property. The property needs to be referenced in the step inspector, and will reset when the behavior is triggered. This can be useful for example for resetting a timer. Compare Values Conditions In Track and Measure it is possible to use a Compare Numbers condition or a Compare Booleans condition. They work in a similar way, but the comparison operators differ. You'll need to select two values and the operation between them. Use the radio buttons to select if a value comes from a data property or is a constant entered in the step inspector. In the example below, the condition will be fulfilled when the Score Tracker value is equal or greater than the Point Threshold value."
  },
  "index.html": {
    "href": "index.html",
    "title": "VR Builder Documentation | VR Builder Documentation",
    "keywords": "VR Builder Documentation Welcome to the VR Builder documentation. VR Builder Manuals VR Builder Manual VR Builder Pro Manual"
  }
}